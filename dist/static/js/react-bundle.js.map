{"version":3,"sources":["webpack:///react-bundle.js","webpack:///webpack/bootstrap e7cd86ba4db68e3cbcd7","webpack:///./react/app.js","webpack:///./~/react/index.js","webpack:///./~/prop-types/index.js","webpack:///./~/domkit/appendVendorPrefix.js","webpack:///./~/domkit/insertKeyframesRule.js","webpack:///./~/object-assign/index.js","webpack:///./~/react-dom/index.js","webpack:///./react/containers/App.js","webpack:///./src/Paint.js","webpack:///./src/STLViewer.js","webpack:///./src/Three.js","webpack:///./~/domkit/builtinStyle.js","webpack:///./~/domkit/getVendorPrefix.js","webpack:///./~/domkit/getVendorPropertyName.js","webpack:///./~/domkit/insertRule.js","webpack:///./~/halogenium/lib/BeatLoader.js","webpack:///./~/halogenium/lib/BounceLoader.js","webpack:///./~/halogenium/lib/ClipLoader.js","webpack:///./~/halogenium/lib/DotLoader.js","webpack:///./~/halogenium/lib/FadeLoader.js","webpack:///./~/halogenium/lib/GridLoader.js","webpack:///./~/halogenium/lib/Halogenium.js","webpack:///./~/halogenium/lib/MoonLoader.js","webpack:///./~/halogenium/lib/PacmanLoader.js","webpack:///./~/halogenium/lib/PulseLoader.js","webpack:///./~/halogenium/lib/RingLoader.js","webpack:///./~/halogenium/lib/RiseLoader.js","webpack:///./~/halogenium/lib/RotateLoader.js","webpack:///./~/halogenium/lib/ScaleLoader.js","webpack:///./~/halogenium/lib/SkewLoader.js","webpack:///./~/halogenium/lib/SquareLoader.js","webpack:///./~/halogenium/lib/SyncLoader.js","webpack:///./~/prop-types/factoryWithThrowingShims.js","webpack:///./~/prop-types/lib/ReactPropTypesSecret.js","webpack:///./~/react-dom/cjs/react-dom.production.min.js","webpack:///./~/react/cjs/react.production.min.js","webpack:///./~/scheduler/cjs/scheduler.production.min.js","webpack:///./~/scheduler/index.js","webpack:///./~/three-orbit-controls/index.js","webpack:///./~/three/three.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","_interopRequireDefault","obj","__esModule","default","_react","_react2","_reactDom","_reactDom2","_App","_App2","ReactDOM","render","createElement","document","getElementById","getVendorPropertyName","target","sources","to","Object","hasOwnProperty","prototype","nextIndex","arguments","length","nextSource","from","key","prefixed","insertRule","vendorPrefix","index","keyframes","name","Date","css","property","part","toObject","val","undefined","TypeError","shouldUseNative","assign","test1","String","getOwnPropertyNames","test2","i","fromCharCode","order2","map","n","join","test3","split","forEach","letter","keys","err","getOwnPropertySymbols","propIsEnumerable","propertyIsEnumerable","source","symbols","s","checkDCE","__REACT_DEVTOOLS_GLOBAL_HOOK__","console","error","_classCallCheck","instance","Constructor","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","defineProperty","_createClass","defineProperties","props","descriptor","protoProps","staticProps","_STLViewer","_STLViewer2","App","_Component","this","_this","getPrototypeOf","state","color","clickBlue","bind","clickRed","e","preventDefault","setState","url","modelColor","onClick","Component","_Three","_Three2","OrbitControls","THREE","DIRECTIONAL_LIGHT","Paint","loader","STLLoader","scene","Scene","renderer","WebGLRenderer","antialias","context","component","width","height","backgroundColor","orbitControls","rotate","cameraX","cameraY","cameraZ","rotationSpeeds","lightX","lightY","lightZ","lightColor","mesh","geometry","dispose","material","remove","directionalLightObj","getObjectByName","animationRequestId","cancelAnimationFrame","distance","directionalLight","DirectionalLight","position","x","y","z","normalize","add","addSTLToScene","crossOrigin","load","computeFaceNormals","computeVertexNormals","center","Mesh","MeshLambertMaterial","overdraw","computeBoundingBox","xDims","boundingBox","max","min","yDims","zDims","rotation","addCamera","addInteractionControls","addToReactComponent","animate","camera","PerspectiveCamera","Math","set","lookAt","setSize","setClearColor","controls","findDOMNode","enableKeys","addEventListener","orbitRender","replaceChild","domElement","firstChild","requestAnimationFrame","update","forceContextLoss","_propTypes","_propTypes2","_halogenium","_Paint","_Paint2","STLViewer","apply","paint","init","nextProps","nextState","JSON","stringify","clean","_props","className","style","overflow","display","justifyContent","alignItems","ScaleLoader","size","propTypes","PropTypes","string","number","bool","arrayOf","defaultProps","manager","DefaultLoadingManager","onLoad","onProgress","onError","scope","XHRLoader","setCrossOrigin","setResponseType","text","parse","data","isBinary","expect","face_size","n_faces","reader","DataView","binData","getUint32","byteLength","fileLength","getUint8","ensureBinary","parseBinary","parseASCII","ensureString","r","g","b","colors","defaultR","defaultG","defaultB","alpha","faces","hasColors","Float32Array","dataOffset","faceLength","offset","BufferGeometry","vertices","normals","face","start","normalX","getFloat32","normalY","normalZ","packedColor","getUint16","vertexstart","addAttribute","BufferAttribute","normal","patternFace","patternNormal","patternVertex","result","Geometry","exec","Vector3","parseFloat","push","Face3","computeBoundingSphere","buf","array_buffer","Uint8Array","str","charCodeAt","buffer","byteOffset","_isString","_getCharCodes","end","codes","_getBytes","littleEndian","_littleEndian","Error","isString","slice","Array","reverse","getFloat64","sign","exponent","mantissa","pow","NaN","Infinity","getInt32","getInt16","getInt8","cssVendorPrefix","styles","window","getComputedStyle","documentElement","pre","match","OLink","domVendorPrefix","builtinStyle","prefixes","prop","isSupportTest","vendorProp","UpperProp","charAt","toUpperCase","substr","extraSheet","getElementsByTagName","appendChild","sheet","styleSheet","cssRules","rules","_extends","_appendVendorPrefix","_appendVendorPrefix2","_insertKeyframesRule","_insertKeyframesRule2","50%","transform","opacity","100%","animationName","loading","oneOfType","margin","verticalAlign","ptKeys","BeatLoader","_ref","_temp","_ret","_len","args","_key","concat","getBallStyle","borderRadius","getAnimationStyle","animation","animationFillMode","getStyle","border","klen","0%, 100%","BounceLoader","top","left","0%","ClipLoader","borderColor","borderBottomColor","background","rotateKeyframes","bounceKeyframes","rotateAnimationName","bounceAnimationName","DotLoader","ballSize","bottom","radius","FadeLoader","getLineStyle","getPosStyle","quarter","lines","l1","l2","l3","l4","l5","l6","l7","l8","fontSize","random","GridLoader","animationDuration","animationDelay","SyncLoader","SquareLoader","SkewLoader","RotateLoader","RiseLoader","RingLoader","PulseLoader","PacmanLoader","MoonLoader","_BeatLoader2","_BeatLoader3","_BounceLoader2","_BounceLoader3","_ClipLoader2","_ClipLoader3","_DotLoader2","_DotLoader3","_FadeLoader2","_FadeLoader3","_GridLoader2","_GridLoader3","_MoonLoader2","_MoonLoader3","_PacmanLoader2","_PacmanLoader3","_PulseLoader2","_PulseLoader3","_RingLoader2","_RingLoader3","_RiseLoader2","_RiseLoader3","_RotateLoader2","_RotateLoader3","_ScaleLoader2","_ScaleLoader3","_SkewLoader2","_SkewLoader3","_SquareLoader2","_SquareLoader3","_SyncLoader2","_SyncLoader3","moonSize","animations","75%","s1","s2","borderRight","borderTop","borderLeft","borderBottom","renderLoader","45%","80%","rightRotateKeyframes","leftRotateKeyframes","rightRotateAnimationName","leftRotateAnimationName","getCircleStyle","perspective","parseInt","riseAmount","keyframesEven","25%","keyframesOdd","25","animationNameEven","animationNameOdd","getSharpStyle","getSquareStyle","33%","66%","emptyFunction","ReactPropTypesSecret","shim","propName","componentName","location","propFullName","secret","getShim","isRequired","ReactPropTypes","array","func","object","symbol","any","element","instanceOf","node","objectOf","oneOf","shape","exact","checkPropTypes","ca","a","d","f","h","k","l","replace","framesToPop","t","encodeURIComponent","da","ka","ea","fa","ja","la","ha","ia","oa","ma","na","indexOf","pa","extractEvents","eventTypes","qa","phasedRegistrationNames","ra","registrationName","sa","ta","dependencies","xa","type","currentTarget","wa","ya","isArray","za","Ba","_dispatchListeners","_dispatchInstances","isPropagationStopped","isPersistent","release","Da","stateNode","ua","disabled","Ea","Aa","Ia","Ga","parentNode","tag","Ja","Ka","La","Ha","Ma","return","Na","dispatchConfig","Oa","_targetInst","Pa","Qa","Ra","Ta","toLowerCase","Xa","Va","Ua","Wa","gb","fb","eb","cb","textContent","hb","ib","nativeEvent","Interface","isDefaultPrevented","defaultPrevented","returnValue","kb","eventPool","pop","lb","destructor","jb","getPooled","wb","ob","keyCode","xb","detail","zb","which","vb","tb","Ab","yb","pb","ctrlKey","altKey","metaKey","char","sb","locale","Hb","va","Cb","Ib","Db","Eb","Jb","Kb","Lb","Mb","Ob","Nb","Qb","nodeName","Pb","Rb","srcElement","correspondingUseElement","nodeType","Sb","Sa","setAttribute","Tb","Ub","getOwnPropertyDescriptor","get","getValue","setValue","stopTracking","_valueTracker","Vb","Wb","checked","lc","kc","mc","displayName","fc","ac","$b","cc","bc","hc","$$typeof","ec","dc","gc","ic","jc","_status","_result","nc","_debugOwner","_debugSource","fileName","Yb","lineNumber","sc","pc","rc","qc","oc","test","tc","acceptsBooleans","uc","isNaN","E","attributeName","attributeNamespace","mustUseProperty","propertyName","wc","xc","F","removeAttribute","setAttributeNS","yc","zc","defaultChecked","defaultValue","_wrapperState","initialChecked","Ac","initialValue","controlled","Bc","Cc","Dc","Ec","ownerDocument","activeElement","Gc","Fc","change","Lc","Mc","Nc","Pc","Jc","detachEvent","Qc","Kc","Rc","attachEvent","Sc","Tc","Uc","Yc","getModifierState","Xc","Zc","jd","hd","kd","alternate","effectTag","ld","md","child","sibling","current","nd","rd","charCode","Cd","bubbled","captured","isInteractive","Ad","Bd","Gd","targetInst","ancestors","containerInfo","topLevelType","H","Ed","Id","Jd","Kd","Hd","Fd","Od","Nd","Md","Ld","Pd","body","Qd","Rd","nextSibling","Sd","contains","compareDocumentPosition","Td","HTMLIFrameElement","contentDocument","defaultView","Ud","contentEditable","ae","$d","Xd","selectionStart","selectionEnd","getSelection","anchorNode","anchorOffset","focusNode","focusOffset","Zd","Wd","select","Yd","de","aa","Children","ee","children","fe","options","selected","defaultSelected","ge","dangerouslySetInnerHTML","he","ie","je","le","me","pe","lastChild","nodeValue","se","qe","trim","te","setProperty","ve","ue","we","is","xe","blur","focus","bb","ye","Be","autoFocus","Ce","__html","Fe","oe","wasMultiple","multiple","Ge","He","I","Je","Ie","J","Me","contextTypes","Ke","__reactInternalMemoizedUnmaskedChildContext","__reactInternalMemoizedMaskedChildContext","M","childContextTypes","Ne","L","K","Oe","Pe","Qe","getChildContext","Re","__reactInternalMemoizedMergedChildContext","Le","Se","Ve","We","isDisabled","supportsFiber","inject","Te","onCommitFiberRoot","Ue","onCommitFiberUnmount","Xe","elementType","ref","pendingProps","firstContextDependency","memoizedState","updateQueue","memoizedProps","mode","lastEffect","firstEffect","nextEffect","childExpirationTime","expirationTime","N","Ye","isReactComponent","Ze","$e","af","bf","cf","df","ef","pendingChildren","implementation","ff","didError","earliestPendingTime","latestPendingTime","gf","hf","latestPingedTime","earliestSuspendedTime","latestSuspendedTime","jf","nextExpirationTimeToWorkOn","lf","baseState","firstUpdate","lastUpdate","firstCapturedUpdate","lastCapturedUpdate","firstCapturedEffect","lastCapturedEffect","mf","nf","payload","callback","next","of","pf","qf","rf","sf","kf","tf","uf","vf","wf","stack","Bf","_context","xf","_currentValue","Cf","Df","yf","Af","zf","Ef","observedBits","If","Ff","Jf","Hf","Gf","O","namespaceURI","tagName","Kf","Lf","Mf","P","Nf","_ctor","then","Qf","Wf","shouldComponentUpdate","isPureReactComponent","Xf","contextType","Of","currentDispatcher","readContext","updater","Vf","_reactInternalFiber","Zf","componentWillReceiveProps","UNSAFE_componentWillReceiveProps","enqueueReplaceState","$f","refs","Pf","getDerivedStateFromProps","getSnapshotBeforeUpdate","UNSAFE_componentWillMount","componentWillMount","componentDidMount","bg","_owner","_stringRef","cg","toString","dg","Map","Zb","ag","w","B","q","u","v","delete","R","done","A","jg","kg","lg","ig","hg","gg","mg","ng","og","Q","fg","eg","qg","rg","compare","sg","tg","ug","vg","wg","UNSAFE_componentWillUpdate","componentWillUpdate","componentDidUpdate","xg","pg","getDerivedStateFromError","yg","pendingContext","zg","timedOutAt","fallback","Ag","hydrate","hidden","_calculateChangedBits","unstable_observedBits","Bg","Kg","setTimeout","Lg","Mg","Ng","Og","destroy","componentWillUnmount","Pg","Qg","Rg","insertBefore","_reactRootContainer","onclick","removeChild","Sg","Rf","Jg","Tg","has","Vg","Wg","Xg","componentDidCatch","Yg","Set","componentStack","Zg","jh","S","T","U","eh","fh","Tf","ih","ba","unstable_cancelCallback","hh","kh","Gg","Hg","ke","html","innerHTML","createElementNS","Cg","Ig","createTextNode","lh","ah","mh","dh","$g","pendingCommitExpirationTime","nh","maxDuration","pingCache","Ug","oh","finishedWork","ph","Uf","Sf","ch","gh","qh","rh","sh","th","uh","vh","wh","Jh","Gh","unstable_now","Fh","Kh","yh","zh","unstable_scheduleCallback","Lh","timeout","timeoutHandle","De","Mh","Hh","Nh","X","Oh","Y","nextScheduledRoot","W","xh","Z","Dh","Ah","Ph","Qh","Rh","unstable_shouldYield","Ih","Eh","_onComplete","Bh","Ch","Sh","Ee","firstBatch","_expirationTime","_defer","ze","rangeCount","db","Ae","focusedElem","selectionRange","V","Yf","Vh","__reactInternalSnapshotBeforeUpdate","C","G","extend","createRange","setStart","removeAllRanges","addRange","setEnd","scrollLeft","scrollTop","Fb","Gb","Hc","ii","Dg","Eg","ji","Ic","Fg","ce","Th","Uh","Wh","Xh","Yh","Zh","$h","ai","bh","_root","_callbacks","_next","_hasChildren","_didComplete","_children","bi","_didCommit","_onCommit","ci","_internalRoot","di","ei","hasAttribute","fi","legacy_renderSubtreeIntoContainer","gi","hi","Ca","injectEventPluginOrder","injectEventPluginsByName","Fa","animationend","animationiteration","animationstart","transitionend","transition","Ya","Za","$a","ab","stopPropagation","cancelBubble","persist","eventPhase","bubbles","cancelable","timeStamp","now","isTrusted","mb","nb","qb","documentMode","rb","ub","beforeInput","compositionEnd","compositionStart","compositionUpdate","Bb","date","datetime","datetime-local","email","month","password","range","search","tel","time","week","Xb","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","D","Symbol","for","iterator","vc","tabIndex","Oc","Vc","_isInputEventSupported","Wc","view","Alt","Control","Meta","Shift","$c","ad","bd","cd","dd","screenX","screenY","clientX","clientY","pageX","pageY","shiftKey","button","buttons","relatedTarget","fromElement","toElement","movementX","movementY","ed","pointerId","pressure","tangentialPressure","tiltX","tiltY","twist","pointerType","isPrimary","fd","mouseEnter","mouseLeave","pointerEnter","pointerLeave","gd","parentWindow","od","elapsedTime","pseudoElement","pd","clipboardData","qd","sd","Esc","Spacebar","Left","Up","Right","Down","Del","Win","Menu","Apps","Scroll","MozPrintableKey","td","8","9","12","13","16","17","18","19","20","27","32","33","34","35","36","37","38","39","40","45","46","112","113","114","115","116","117","118","119","120","121","122","123","144","145","224","ud","repeat","vd","dataTransfer","wd","touches","targetTouches","changedTouches","xd","yd","deltaX","wheelDeltaX","deltaY","wheelDeltaY","wheelDelta","deltaZ","deltaMode","zd","Dd","isInteractiveTopLevelEventType","Vd","be","onSelect","SimpleEventPlugin","EnterLeaveEventPlugin","ChangeEventPlugin","SelectEventPlugin","BeforeInputEventPlugin","mathml","svg","ne","MSApp","execUnsafeLocalFunction","animationIterationCount","borderImageOutset","borderImageSlice","borderImageWidth","boxFlex","boxFlexGroup","boxOrdinalGroup","columnCount","columns","flex","flexGrow","flexPositive","flexShrink","flexNegative","flexOrder","gridArea","gridRow","gridRowEnd","gridRowSpan","gridRowStart","gridColumn","gridColumnEnd","gridColumnSpan","gridColumnStart","fontWeight","lineClamp","lineHeight","order","orphans","tabSize","widows","zIndex","zoom","fillOpacity","floodOpacity","stopOpacity","strokeDasharray","strokeDashoffset","strokeMiterlimit","strokeOpacity","strokeWidth","re","substring","menuitem","area","base","br","col","embed","hr","img","input","keygen","link","meta","param","track","wbr","clearTimeout","ReactCurrentOwner","isMounted","enqueueSetState","enqueueForceUpdate","WeakSet","WeakMap","querySelectorAll","form","commit","unmount","createBatch","ki","createPortal","unstable_renderSubtreeIntoContainer","unmountComponentAtNode","unstable_createPortal","unstable_batchedUpdates","unstable_interactiveUpdates","flushSync","unstable_createRoot","unstable_flushControlled","Events","findFiberByHostInstance","overrideProps","findHostInstanceByFiber","bundleType","version","rendererPackageName","li","mi","escape","=",":","keyPrefix","count","forceUpdate","__self","__source","toArray","only","createRef","PureComponent","createContext","_currentValue2","_threadCount","Provider","Consumer","forwardRef","lazy","memo","Fragment","StrictMode","Suspense","cloneElement","createFactory","isValidElement","unstable_ConcurrentMode","unstable_Profiler","global","previous","priorityLevel","performance","_schedMock","MessageChannel","port2","port1","onmessage","postMessage","unstable_ImmediatePriority","unstable_UserBlockingPriority","unstable_NormalPriority","unstable_IdlePriority","unstable_LowPriority","unstable_runWithPriority","unstable_wrapCallback","unstable_getCurrentPriorityLevel","unstable_continueExecution","unstable_pauseExecution","unstable_getFirstCallbackNode","OrbitConstraint","minDistance","maxDistance","minZoom","maxZoom","minPolarAngle","maxPolarAngle","PI","minAzimuthAngle","maxAzimuthAngle","enableDamping","dampingFactor","theta","phi","EPS","phiDelta","thetaDelta","scale","panOffset","zoomChanged","getPolarAngle","getAzimuthalAngle","rotateLeft","angle","rotateUp","panLeft","matrix","elements","multiplyScalar","panUp","pan","screenWidth","screenHeight","clone","sub","targetDistance","tan","fov","OrthographicCamera","right","warn","dollyIn","dollyScale","updateProjectionMatrix","dollyOut","quat","Quaternion","setFromUnitVectors","up","quatInverse","inverse","lastPosition","lastQuaternion","copy","applyQuaternion","atan2","sqrt","sin","cos","distanceToSquared","dot","quaternion","constraint","clientWidth","clientHeight","getAutoRotationAngle","autoRotateSpeed","getZoomScale","zoomSpeed","onMouseDown","event","enabled","mouseButtons","ORBIT","enableRotate","STATE","ROTATE","rotateStart","ZOOM","enableZoom","DOLLY","dollyStart","PAN","enablePan","panStart","NONE","onMouseMove","onMouseUp","dispatchEvent","startEvent","rotateEnd","rotateDelta","subVectors","rotateSpeed","dollyEnd","dollyDelta","panEnd","panDelta","removeEventListener","endEvent","onMouseWheel","delta","onKeyDown","UP","keyPanSpeed","BOTTOM","LEFT","RIGHT","touchstart","TOUCH_ROTATE","TOUCH_DOLLY","dx","dy","TOUCH_PAN","touchmove","touchend","contextmenu","autoRotate","MOUSE","MIDDLE","Vector2","target0","position0","zoom0","changeEvent","reset","EventDispatcher","noZoom","noRotate","noPan","noKeys","staticMoving","dynamicDampingFactor","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_RESULT__","REVISION","lastTime","vendors","currTime","timeToCall","Function","CullFaceNone","CullFaceBack","CullFaceFront","CullFaceFrontBack","FrontFaceDirectionCW","FrontFaceDirectionCCW","BasicShadowMap","PCFShadowMap","PCFSoftShadowMap","FrontSide","BackSide","DoubleSide","FlatShading","SmoothShading","NoColors","FaceColors","VertexColors","NoBlending","NormalBlending","AdditiveBlending","SubtractiveBlending","MultiplyBlending","CustomBlending","AddEquation","SubtractEquation","ReverseSubtractEquation","MinEquation","MaxEquation","ZeroFactor","OneFactor","SrcColorFactor","OneMinusSrcColorFactor","SrcAlphaFactor","OneMinusSrcAlphaFactor","DstAlphaFactor","OneMinusDstAlphaFactor","DstColorFactor","OneMinusDstColorFactor","SrcAlphaSaturateFactor","NeverDepth","AlwaysDepth","LessDepth","LessEqualDepth","EqualDepth","GreaterEqualDepth","GreaterDepth","NotEqualDepth","MultiplyOperation","MixOperation","AddOperation","UVMapping","CubeReflectionMapping","CubeRefractionMapping","EquirectangularReflectionMapping","EquirectangularRefractionMapping","SphericalReflectionMapping","RepeatWrapping","ClampToEdgeWrapping","MirroredRepeatWrapping","NearestFilter","NearestMipMapNearestFilter","NearestMipMapLinearFilter","LinearFilter","LinearMipMapNearestFilter","LinearMipMapLinearFilter","UnsignedByteType","ByteType","ShortType","UnsignedShortType","IntType","UnsignedIntType","FloatType","HalfFloatType","UnsignedShort4444Type","UnsignedShort5551Type","UnsignedShort565Type","AlphaFormat","RGBFormat","RGBAFormat","LuminanceFormat","LuminanceAlphaFormat","RGBEFormat","RGB_S3TC_DXT1_Format","RGBA_S3TC_DXT1_Format","RGBA_S3TC_DXT3_Format","RGBA_S3TC_DXT5_Format","RGB_PVRTC_4BPPV1_Format","RGB_PVRTC_2BPPV1_Format","RGBA_PVRTC_4BPPV1_Format","RGBA_PVRTC_2BPPV1_Format","Projector","projectVector","vector","project","unprojectVector","unproject","pickingRay","CanvasRenderer","clear","Color","setRGB","setHex","setStyle","hex","floor","setHSL","hue2rgb","euclideanModulo","clamp","parseAlpha","strAlpha","components","ColorKeywords","copyGammaToLinear","gammaFactor","copyLinearToGamma","safeInverse","convertGammaToLinear","convertLinearToGamma","getHex","getHexString","getHSL","optionalTarget","hue","saturation","hsl","lightness","offsetHSL","addColors","color1","color2","addScalar","multiply","lerp","equals","fromArray","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","_x","_y","_z","_w","onChangeCallback","setFromEuler","euler","Euler","c1","c2","c3","s3","setFromAxisAngle","axis","halfAngle","setFromRotationMatrix","m11","m12","m13","m21","m22","m23","m31","m32","m33","trace","v1","vFrom","vTo","abs","crossVectors","conjugate","lengthSq","multiplyQuaternions","qax","qay","qaz","qaw","qbx","qby","qbz","qbw","multiplyVector3","slerp","cosHalfTheta","halfTheta","acos","sinHalfTheta","ratioA","ratioB","onChange","qm","setX","setY","setComponent","getComponent","addVectors","addScaledVector","subScalar","divide","divideScalar","scalar","invScalar","clampScalar","minVal","maxVal","ceil","round","roundToZero","negate","lengthManhattan","distanceTo","setLength","oldLength","lerpVectors","v2","fromAttribute","attribute","itemSize","setZ","multiplyVectors","applyEuler","applyAxisAngle","applyMatrix3","applyMatrix4","applyProjection","qx","qy","qz","qw","ix","iy","iz","iw","Matrix4","multiplyMatrices","projectionMatrix","getInverse","matrixWorld","transformDirection","cross","ax","ay","az","bx","by","bz","projectOnVector","projectOnPlane","planeNormal","reflect","angleTo","dz","setEulerFromRotationMatrix","setEulerFromQuaternion","getPositionFromMatrix","setFromMatrixPosition","getScaleFromMatrix","setFromMatrixScale","getColumnFromMatrix","setFromMatrixColumn","sx","sy","sz","Vector4","setW","setAxisAngleFromQuaternion","setAxisAngleFromRotationMatrix","epsilon","epsilon2","xx","yy","zz","xy","xz","yz","_order","DefaultOrder","RotationOrders","asin","setFromQuaternion","makeRotationFromQuaternion","setFromVector3","reorder","newOrder","toVector3","optionalResult","Line3","line","distanceSq","at","closestPointToPointParameter","startP","startEnd","point","clampToLine","startEnd2","startEnd_startP","closestPointToPoint","Box2","setFromPoints","points","makeEmpty","il","expandByPoint","setFromCenterAndSize","halfSize","box","empty","expandByVector","expandByScalar","containsPoint","containsBox","getParameter","isIntersectionBox","clampPoint","distanceToPoint","clampedPoint","intersect","union","translate","Box3","setFromObject","updateMatrixWorld","traverse","attributes","positions","getBoundingSphere","Sphere","Matrix3","n11","n12","n13","n21","n22","n23","n31","n32","n33","identity","multiplyVector3Array","applyToVector3Array","j","applyToBuffer","getX","getY","getZ","setXYZ","determinant","throwOnInvertible","det","msg","transpose","tmp","flattenToArrayOffset","getNormalMatrix","transposeIntoArray","n14","n24","n34","n41","n42","n43","n44","extractPosition","copyPosition","extractBasis","xAxis","yAxis","zAxis","makeBasis","extractRotation","scaleX","scaleY","scaleZ","makeRotationFromEuler","setRotationFromQuaternion","x2","y2","z2","wx","wy","wz","eye","a11","a12","a13","a14","a21","a22","a23","a24","a31","a32","a33","a34","a41","a42","a43","a44","b11","b12","b13","b14","b21","b22","b23","b24","b31","b32","b33","b34","b41","b42","b43","b44","multiplyToArray","multiplyVector4","rotateAxis","crossVector","getPosition","setPosition","rotateX","rotateY","rotateZ","rotateByAxis","getMaxScaleOnAxis","scaleXSq","scaleYSq","scaleZSq","makeTranslation","makeRotationX","makeRotationY","makeRotationZ","makeRotationAxis","tx","ty","makeScale","compose","decompose","invSX","invSY","invSZ","makeFrustum","near","far","makePerspective","aspect","ymax","degToRad","ymin","xmin","xmax","makeOrthographic","Ray","origin","direction","ray","recast","directionDistance","distanceSqToPoint","distanceSqToSegment","segCenter","segDir","diff","v0","optionalPointOnRay","optionalPointOnSegment","s0","sqrDist","extDet","segExtent","a01","b0","b1","invDet","isIntersectionSphere","sphere","intersectSphere","tca","d2","radius2","thc","t0","t1","isIntersectionPlane","plane","distToPoint","denominator","distanceToPlane","constant","intersectPlane","intersectBox","tmin","tmax","tymin","tymax","tzmin","tzmax","invdirx","invdiry","invdirz","intersectTriangle","edge1","edge2","backfaceCulling","DdN","DdQxE2","DdE1xQ","QdN","matrix4","optionalCenter","maxRadiusSq","intersectsSphere","radiusSum","deltaLengthSq","getBoundingBox","Frustum","p0","p1","p2","p3","p4","p5","planes","Plane","frustum","setFromMatrix","me0","me1","me2","me3","me4","me5","me6","me7","me8","me9","me10","me11","me12","me13","me14","me15","setComponents","intersectsObject","boundingSphere","negRadius","intersectsBox","d1","setFromNormalAndCoplanarPoint","setFromCoplanarPoints","inverseNormalLength","distanceToSphere","projectPoint","orthoPoint","perpendicularMagnitude","isIntersectionLine","startSign","endSign","intersectLine","coplanarPoint","m1","optionalNormalMatrix","normalMatrix","newNormal","newCoplanarPoint","generateUUID","chars","uuid","rnd","clampBottom","mapLinear","a1","a2","b2","smoothstep","smootherstep","random16","randInt","low","high","randFloat","randFloatSpread","degreeToRadiansFactor","degrees","radToDeg","radianToDegreesFactor","radians","isPowerOfTwo","nextPowerOfTwo","Spline","interpolate","t2","t3","intPoint","weight","w2","w3","v3","initFromArray","getPoint","getControlPointsArray","coords","getLength","nSubDivisions","nSamples","oldIntPoint","oldPosition","tmpVec","chunkLengths","totalLength","chunks","total","reparametrizeByArcLength","samplingCoef","indexCurrent","indexNext","realDistance","sampling","newpoints","sl","Triangle","resultLengthSq","barycoordFromPoint","dot00","dot01","dot02","dot11","dot12","denom","invDenom","setFromPointsAndIndices","i0","i1","i2","triangle","midpoint","Clock","autoStart","startTime","oldTime","running","stop","getElapsedTime","getDelta","newTime","hasEventListener","listener","_listeners","listeners","listenerArray","splice","descSort","Raycaster","params","Line","LOD","Points","threshold","Sprite","PointCloud","intersectObject","raycaster","intersects","recursive","visible","raycast","linePrecision","setFromCamera","sort","intersectObjects","objects","Object3D","Object3DIdCount","parent","DefaultUp","onRotationChange","onQuaternionChange","modelViewMatrix","rotationAutoUpdate","matrixAutoUpdate","DefaultMatrixAutoUpdate","matrixWorldNeedsUpdate","castShadow","receiveShadow","frustumCulled","renderOrder","userData","eulerOrder","useQuaternion","renderDepth","applyMatrix","setRotationFromAxisAngle","setRotationFromEuler","setRotationFromMatrix","rotateOnAxis","q1","translateOnAxis","translateX","translateY","translateZ","localToWorld","worldToLocal","getChildByName","getObjectById","getObjectByProperty","getWorldPosition","getWorldQuaternion","getWorldRotation","getWorldScale","getWorldDirection","traverseVisible","traverseAncestors","updateMatrix","force","toJSON","extractFromCache","cache","values","metadata","isRootObject","geometries","materials","textures","images","generator","output","materialIndex","vertexNormals","vertexColors","Face4","dynamic","updateRange","needsUpdate","setDynamic","copyAt","index1","index2","copyArray","copyColorsArray","copyIndicesArray","indices","copyVector2sArray","vectors","copyVector3sArray","copyVector4sArray","getW","setXY","setXYZW","Int8Attribute","Int8Array","Uint8Attribute","Uint8ClampedAttribute","Uint8ClampedArray","Int16Attribute","Int16Array","Uint16Attribute","Uint16Array","Int32Attribute","Int32Array","Uint32Attribute","Uint32Array","Float32Attribute","Float64Attribute","Float64Array","DynamicBufferAttribute","InstancedBufferAttribute","meshPerAttribute","InterleavedBuffer","stride","InstancedInterleavedBuffer","InterleavedBufferAttribute","interleavedBuffer","GeometryIdCount","faceVertexUvs","morphTargets","morphColors","morphNormals","skinWeights","skinIndices","lineDistances","verticesNeedUpdate","elementsNeedUpdate","uvsNeedUpdate","normalsNeedUpdate","colorsNeedUpdate","lineDistancesNeedUpdate","groupsNeedUpdate","vertex","jl","fromBufferGeometry","uvs","uv","uvs2","uv2","tempNormals","tempUVs","tempUVs2","addFace","groups","group","fl","vA","vB","vC","areaWeighted","vl","computeMorphNormals","__originalFaceNormal","__originalVertexNormals","tmpGeo","faceNormals","faceNormal","dstNormalsFace","dstNormalsVertex","computeTangents","computeLineDistances","merge","materialIndexOffset","vertexOffset","vertices1","vertices2","faces1","faces2","uvs1","vertexCopy","faceCopy","faceVertexNormals","faceVertexColors","uvCopy","mergeMesh","mergeVertices","verticesMap","unique","changes","precisionPoints","precision","faceIndicesToRemove","dupIndex","idx","setBit","getNormalIndex","hash","normalsHash","getColorIndex","colorsHash","getUvIndex","uvsHash","parameters","hasMaterial","hasFaceUv","hasFaceVertexUv","hasFaceNormal","hasFaceVertexNormal","hasFaceColor","hasFaceVertexColor","faceType","uvsCopy","kl","DirectGeometry","computeGroups","fromGeometry","hasFaceVertexUv2","morphTargetsLength","morphTargetsPosition","morphNormalsLength","morphTargetsNormal","hasSkinIndices","hasSkinWeights","vertexUvs","morphTarget","morphNormal","morphAttributes","drawRange","addIndex","setIndex","getIndex","getAttribute","drawcalls","offsets","addDrawCall","indexOffset","addGroup","clearDrawCalls","clearGroups","setDrawRange","updateFromObject","direct","__directGeometry","lineDistance","fromDirectGeometry","TypeArray","pA","pB","pC","normalizeNormals","computeOffsets","attribute1","attributeArray1","attribute2","attributeArray2","attributeSize","MaxIndex","InstancedBufferGeometry","maxInstancedCount","instances","Camera","matrixWorldInverse","CubeCamera","cubeResolution","cameraPX","cameraNX","cameraPY","cameraNY","cameraPZ","cameraNZ","renderTarget","WebGLRenderTargetCube","format","magFilter","minFilter","updateCubeMap","generateMipmaps","activeCubeFace","setRenderTarget","cx","cy","setLens","focalLength","frameHeight","atan","setViewOffset","fullWidth","fullHeight","Light","AmbientLight","intensity","onlyShadow","shadowCameraNear","shadowCameraFar","shadowCameraLeft","shadowCameraRight","shadowCameraTop","shadowCameraBottom","shadowCameraVisible","shadowBias","shadowDarkness","shadowMapWidth","shadowMapHeight","shadowMap","shadowMapSize","shadowCamera","shadowMatrix","HemisphereLight","skyColor","groundColor","PointLight","decay","SpotLight","shadowCameraFov","Cache","files","file","Loader","onLoadStart","onLoadProgress","onLoadComplete","extractUrlBase","parts","initMaterials","texturePath","createMaterial","imageLoader","nearest_pow2","log","LN2","create_texture","where","sourceFile","wrap","anisotropy","texture","fullPath","Handlers","Texture","image","canvas","getContext","drawImage","wrapS","wrapT","wrapMap","mirror","rgb2hex","rgb","ImageLoader","mtype","mpars","shading","blending","transparent","depthTest","depthWrite","flipSided","side","doubleSided","wireframe","colorDiffuse","DbgColor","colorEmissive","emissive","colorSpecular","specular","specularCoef","shininess","transparency","mapDiffuse","mapDiffuseRepeat","mapDiffuseOffset","mapDiffuseWrap","mapDiffuseAnisotropy","mapLight","mapLightRepeat","mapLightOffset","mapLightWrap","mapLightAnisotropy","mapAO","mapAORepeat","mapAOOffset","mapAOWrap","mapAOAnisotropy","mapBump","mapBumpRepeat","mapBumpOffset","mapBumpWrap","mapBumpAnisotropy","mapNormal","mapNormalRepeat","mapNormalOffset","mapNormalWrap","mapNormalAnisotropy","mapSpecular","mapSpecularRepeat","mapSpecularOffset","mapSpecularWrap","mapSpecularAnisotropy","mapAlpha","mapAlphaRepeat","mapAlphaOffset","mapAlphaWrap","mapAlphaAnisotropy","mapBumpScale","bumpScale","mapNormalFactor","normalScale","DbgName","handlers","regex","cached","request","XMLHttpRequest","open","response","itemEnd","itemError","responseType","withCredentials","send","itemStart","setWithCredentials","src","JSONLoader","statusDomElement","_statusDomElement","json","setTexturePath","parseModel","isBitSet","zLength","colorIndex","normalIndex","uvIndex","isQuad","faceA","faceB","uvLayer","nUvLayers","parseSkin","influencesPerVertex","bones","parseMorphing","dstVertices","srcVertices","cl","dstColors","srcColors","LoadingManager","isLoading","itemsLoaded","itemsTotal","onStart","BufferGeometryLoader","typedArray","MaterialLoader","setTextures","getTexture","uniforms","vertexShader","fragmentShader","alphaTest","wireframeLinewidth","sizeAttenuation","alphaMap","bumpMap","normalMap","displacementMap","displacementScale","displacementBias","specularMap","envMap","combine","reflectivity","lightMap","lightMapIntensity","aoMap","aoMapIntensity","ObjectLoader","lastIndexOf","parseGeometries","parseImages","parseTextures","parseMaterials","parseObject","geometryLoader","bufferGeometryLoader","widthSegments","heightSegments","BoxGeometry","depth","depthSegments","CircleBufferGeometry","segments","thetaStart","thetaLength","CircleGeometry","CylinderGeometry","radiusTop","radiusBottom","radialSegments","openEnded","SphereGeometry","phiStart","phiLength","SphereBufferGeometry","DodecahedronGeometry","IcosahedronGeometry","OctahedronGeometry","TetrahedronGeometry","RingGeometry","innerRadius","outerRadius","thetaSegments","phiSegments","TorusGeometry","tube","tubularSegments","arc","TorusKnotGeometry","heightScale","TextGeometry","loadImage","path","parseConstant","mapping","getGeometry","getMaterial","Group","levels","level","addLevel","TextureLoader","DataTextureLoader","BinaryTextureLoader","_parser","DataTexture","texData","mipmaps","mipmapCount","CompressedTextureLoader","CompressedTexture","loadTexture","texDatas","isCubemap","Material","MaterialIdCount","blendSrc","blendDst","blendEquation","blendSrcAlpha","blendDstAlpha","blendEquationAlpha","depthFunc","colorWrite","polygonOffset","polygonOffsetFactor","polygonOffsetUnits","_needsUpdate","setValues","newValue","currentValue","Number","wrapAround","boolean","wrapRGB","LineBasicMaterial","linewidth","linecap","linejoin","fog","LineDashedMaterial","dashSize","gapSize","MeshBasicMaterial","refractionRatio","wireframeLinecap","wireframeLinejoin","skinning","MeshPhongMaterial","metal","emissiveMap","MeshDepthMaterial","MeshNormalMaterial","MultiMaterial","MeshFaceMaterial","PointsMaterial","PointCloudMaterial","ParticleBasicMaterial","ParticleSystemMaterial","ShaderMaterial","defines","lights","derivatives","defaultAttributeValues","index0AttributeName","UniformsUtils","RawShaderMaterial","SpriteMaterial","TextureIdCount","DEFAULT_IMAGE","DEFAULT_MAPPING","premultiplyAlpha","flipY","unpackAlignment","onUpdate","getDataURL","toDataURL","transformUv","CanvasTexture","CubeTexture","VideoTexture","video","readyState","HAVE_ENOUGH_DATA","inverseMatrix","testPoint","rayPointDistanceSq","localThresholdSq","intersectPoint","distanceToRay","localThreshold","ParticleSystem","LineSegments","precisionSq","vStart","vEnd","interSegment","interRay","step","distSq","faceIndex","nbVertices","LineStrip","LinePieces","updateMorphTargets","morphTargetBase","morphTargetInfluences","morphTargetDictionary","ml","getMorphTargetIndexByName","uvIntersection","uv1","uv3","barycoord","tempA","tempB","tempC","uvA","uvB","uvC","intersectionPoint","intersectionPointWorld","isFaceMaterial","faceMaterial","morphInfluences","tl","influence","targets","Bone","skin","Skeleton","boneInverses","useVertexTexture","identityMatrix","boneTextureWidth","boneTextureHeight","boneMatrices","boneTexture","calculateInverses","bl","pose","bone","offsetMatrix","SkinnedMesh","bindMode","bindMatrix","bindMatrixInverse","gbone","pos","rotq","scl","normalizeSkinWeights","skeleton","sw","MorphAnimMesh","duration","mirroredLoop","lastKeyframe","currentKeyframe","directionBackwards","setFrameRange","startKeyframe","endKeyframe","setDirectionForward","setDirectionBackward","parseAnimations","firstAnimation","pattern","morph","label","setAnimationLabel","playAnimation","fps","updateAnimation","frameTime","keyframe","influences","mix","interpolateTargets","getObjectForDistance","matrixPosition","guessSizeSq","Particle","LensFlare","lensFlares","positionScreen","customUpdateCallback","updateLensFlares","flare","vecX","vecY","wantedRotation","overrideMaterial","autoUpdate","Fog","FogExp2","density","ShaderChunk","alphamap_fragment","alphamap_pars_fragment","alphatest_fragment","aomap_fragment","aomap_pars_fragment","begin_vertex","beginnormal_vertex","bumpmap_pars_fragment","color_fragment","color_pars_fragment","color_pars_vertex","color_vertex","common","defaultnormal_vertex","displacementmap_vertex","displacementmap_pars_vertex","emissivemap_fragment","emissivemap_pars_fragment","envmap_fragment","envmap_pars_fragment","envmap_pars_vertex","envmap_vertex","fog_fragment","fog_pars_fragment","lightmap_fragment","lightmap_pars_fragment","lights_lambert_pars_vertex","lights_lambert_vertex","lights_phong_fragment","lights_phong_pars_fragment","lights_phong_pars_vertex","lights_phong_vertex","linear_to_gamma_fragment","logdepthbuf_fragment","logdepthbuf_pars_fragment","logdepthbuf_pars_vertex","logdepthbuf_vertex","map_fragment","map_pars_fragment","map_particle_fragment","map_particle_pars_fragment","morphnormal_vertex","morphtarget_pars_vertex","morphtarget_vertex","normalmap_pars_fragment","project_vertex","shadowmap_fragment","shadowmap_pars_fragment","shadowmap_pars_vertex","shadowmap_vertex","skinbase_vertex","skinning_pars_vertex","skinning_vertex","skinnormal_vertex","specularmap_fragment","specularmap_pars_fragment","uv2_pars_fragment","uv2_pars_vertex","uv2_vertex","uv_pars_fragment","uv_pars_vertex","uv_vertex","worldpos_vertex","merged","uniforms_src","uniforms_dst","parameter_src","UniformsLib","diffuse","offsetRepeat","flipEnvMap","aomap","lightmap","emissivemap","bumpmap","normalmap","displacementmap","fogDensity","fogNear","fogFar","fogColor","ambientLightColor","directionalLightDirection","directionalLightColor","hemisphereLightDirection","hemisphereLightSkyColor","hemisphereLightGroundColor","pointLightColor","pointLightPosition","pointLightDistance","pointLightDecay","spotLightColor","spotLightPosition","spotLightDirection","spotLightDistance","spotLightAngleCos","spotLightExponent","spotLightDecay","psColor","shadowmap","ShaderLib","basic","lambert","phong","dashed","totalSize","mNear","mFar","cube","tCube","tFlip","equirect","tEquirect","depthRGBA","glClearColor","_premultipliedAlpha","_gl","clearColor","setDefaultGLState","viewport","_viewportX","_viewportY","_viewportWidth","_viewportHeight","_clearColor","_clearAlpha","resetGLState","_currentProgram","_currentCamera","_currentGeometryProgram","_currentMaterialId","_lightsNeedUpdate","onContextLost","properties","onTextureDispose","deallocateTexture","_infoMemory","onRenderTargetDispose","deallocateRenderTarget","onMaterialDispose","deallocateMaterial","textureProperties","__image__webglTextureCube","deleteTexture","__webglInit","__webglTexture","renderTargetProperties","deleteFramebuffer","__webglFramebuffer","deleteRenderbuffer","__webglRenderbuffer","releaseMaterialProgramReference","programInfo","program","programCache","releaseProgram","setupVertexAttributes","startIndex","extension","extensions","initAttributes","geometryAttributes","programAttributes","getAttributes","materialDefaultAttributeValues","programAttribute","geometryAttribute","enableAttribute","getAttributeBuffer","bindBuffer","ARRAY_BUFFER","vertexAttribPointer","FLOAT","BYTES_PER_ELEMENT","vertexAttribDivisorANGLE","vertexAttrib2fv","vertexAttrib3fv","vertexAttrib4fv","vertexAttrib1fv","disableUnusedAttributes","numericalSort","painterSortStable","reversePainterSortStable","pushImmediateRenderItem","transparentImmediateObjects","transparentImmediateObjectsLastIndex","opaqueImmediateObjects","opaqueImmediateObjectsLastIndex","pushRenderItem","transparentObjects","transparentObjectsLastIndex","opaqueObjects","opaqueObjectsLastIndex","renderItem","_vector3","projectObject","sprites","ImmediateRenderObject","_frustum","sortObjects","_projScreenMatrix","groupMaterial","renderObjects","renderList","renderBufferDirect","renderObjectsImmediate","setMaterial","setProgram","renderBufferImmediate","initMaterial","materialProperties","getParameters","code","getProgramCode","programChange","shaderID","shader","__webglShader","acquireProgram","numSupportedMorphTargets","maxMorphTargets","numSupportedMorphNormals","maxMorphNormals","uniformsList","uniformLocations","getUniforms","setMaterialFaces","setBlending","setDepthFunc","setDepthTest","setDepthWrite","setColorWrite","setPolygonOffset","enable","CULL_FACE","disable","setFlipSided","_usedTextureUnits","refreshProgram","refreshMaterial","refreshLights","p_uniforms","m_uniforms","useProgram","uniformMatrix4fv","capabilities","logarithmicDepthBuffer","uniform1f","logDepthBufFC","cameraPosition","uniform3f","viewMatrix","floatVertexTextures","textureUnit","getTextureUnit","uniform1i","setTexture","boneGlobalMatrices","refreshUniformsFog","setupLights","refreshUniformsLights","_lights","markUniformsLightsNeedsUpdate","refreshUniformsCommon","refreshUniformsLine","refreshUniformsDash","refreshUniformsParticle","refreshUniformsPhong","_shadowPass","refreshUniformsShadow","loadUniformsGeneric","loadUniformsMatrices","modelMatrix","uvScaleMap","_canvas","ambient","directional","distances","decays","spot","directions","anglesCos","exponents","hemi","skyColors","groundColors","light","uniformMatrix3fv","maxTextures","uniform","uniform2f","uniform4f","uniform1iv","uniform3iv","uniform1fv","uniform2fv","uniform3fv","uniform4fv","_array","i3","i4","setCubeTexture","setCubeTextureDynamic","setColorLinear","ll","zlights","dirColors","dirPositions","pointColors","pointPositions","pointDistances","pointDecays","spotColors","spotPositions","spotDistances","spotDirections","spotAnglesCos","spotExponents","spotDecays","hemiSkyColors","hemiGroundColors","hemiPositions","dirLength","pointLength","spotLength","hemiLength","dirCount","pointCount","spotCount","hemiCount","dirOffset","pointOffset","spotOffset","hemiOffset","_direction","setTextureParameters","textureType","isImagePowerOfTwo","texParameteri","TEXTURE_WRAP_S","paramThreeToGL","TEXTURE_WRAP_T","TEXTURE_MAG_FILTER","TEXTURE_MIN_FILTER","CLAMP_TO_EDGE","filterFallback","__currentAnisotropy","texParameterf","TEXTURE_MAX_ANISOTROPY_EXT","getMaxAnisotropy","uploadTexture","slot","createTexture","activeTexture","TEXTURE0","bindTexture","TEXTURE_2D","pixelStorei","UNPACK_FLIP_Y_WEBGL","UNPACK_PREMULTIPLY_ALPHA_WEBGL","UNPACK_ALIGNMENT","clampToMaxSize","maxTextureSize","glFormat","glType","mipmap","texImage2D","getCompressedTextureFormats","compressedTexImage2D","generateMipmap","__version","maxSize","TEXTURE_CUBE_MAP","isCompressed","isDataTexture","cubeImage","autoScaleCubemaps","maxCubemapSize","TEXTURE_CUBE_MAP_POSITIVE_X","setupFrameBuffer","framebuffer","textureTarget","bindFramebuffer","FRAMEBUFFER","framebufferTexture2D","COLOR_ATTACHMENT0","setupRenderBuffer","renderbuffer","bindRenderbuffer","RENDERBUFFER","depthBuffer","stencilBuffer","renderbufferStorage","DEPTH_COMPONENT16","framebufferRenderbuffer","DEPTH_ATTACHMENT","DEPTH_STENCIL","DEPTH_STENCIL_ATTACHMENT","RGBA4","updateRenderTargetMipmap","NEAREST","LINEAR","REPEAT","MIRRORED_REPEAT","NEAREST_MIPMAP_NEAREST","NEAREST_MIPMAP_LINEAR","LINEAR_MIPMAP_NEAREST","LINEAR_MIPMAP_LINEAR","UNSIGNED_BYTE","UNSIGNED_SHORT_4_4_4_4","UNSIGNED_SHORT_5_5_5_1","UNSIGNED_SHORT_5_6_5","BYTE","SHORT","UNSIGNED_SHORT","INT","UNSIGNED_INT","HALF_FLOAT_OES","ALPHA","RGB","RGBA","LUMINANCE","LUMINANCE_ALPHA","FUNC_ADD","FUNC_SUBTRACT","FUNC_REVERSE_SUBTRACT","ZERO","ONE","SRC_COLOR","ONE_MINUS_SRC_COLOR","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","DST_ALPHA","ONE_MINUS_DST_ALPHA","DST_COLOR","ONE_MINUS_DST_COLOR","SRC_ALPHA_SATURATE","COMPRESSED_RGB_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT3_EXT","COMPRESSED_RGBA_S3TC_DXT5_EXT","COMPRESSED_RGB_PVRTC_4BPPV1_IMG","COMPRESSED_RGB_PVRTC_2BPPV1_IMG","COMPRESSED_RGBA_PVRTC_4BPPV1_IMG","COMPRESSED_RGBA_PVRTC_2BPPV1_IMG","MIN_EXT","MAX_EXT","_width","_height","pixelRatio","_alpha","_depth","_stencil","stencil","_antialias","premultipliedAlpha","_preserveDrawingBuffer","preserveDrawingBuffer","autoClear","autoClearColor","autoClearDepth","autoClearStencil","gammaInput","gammaOutput","_currentFramebuffer","_currentWidth","_currentHeight","_infoRender","calls","info","memory","programs","WebGLExtensions","WebGLCapabilities","WebGLState","WebGLProperties","WebGLObjects","WebGLPrograms","bufferRenderer","WebGLBufferRenderer","indexedBufferRenderer","WebGLIndexedBufferRenderer","WebGLShadowMap","spritePlugin","SpritePlugin","lensFlarePlugin","LensFlarePlugin","getContextAttributes","loseContext","MAX_TEXTURE_MAX_ANISOTROPY_EXT","getPrecision","getPixelRatio","setPixelRatio","getSize","updateStyle","setViewport","setScissor","scissor","enableScissorTest","setScissorTest","getClearColor","getClearAlpha","setClearAlpha","bits","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","STENCIL_BUFFER_BIT","clearDepth","clearStencil","clearTarget","buffers","hasPositions","createBuffer","hasNormals","hasUvs","bufferData","positionArray","DYNAMIC_DRAW","normalArray","nx","ny","nz","uvArray","colorArray","drawArrays","TRIANGLES","updateBuffers","geometryProgram","activeInfluences","getWireframeAttribute","ELEMENT_ARRAY_BUFFER","setLineWidth","setMode","LINES","renderInstances","lineWidth","LINE_STRIP","POINTS","forceClear","setFaceCulling","cullFace","frontFaceDirection","frontFace","CW","CCW","BACK","FRONT","FRONT_AND_BACK","complete","isCube","isTargetPowerOfTwo","createFramebuffer","createRenderbuffer","shareDepthFrom","vx","vy","readRenderTargetPixels","WebGLRenderTarget","restore","checkFramebufferStatus","FRAMEBUFFER_COMPLETE","readPixels","supportsFloatTextures","supportsHalfFloatTextures","supportsStandardDerivatives","supportsCompressedTextureS3TC","supportsCompressedTexturePVRTC","supportsBlendMinMax","supportsVertexTextures","vertexTextures","supportsInstancedArrays","addPrePlugin","addPostPlugin","updateShadowMap","shadowMapEnabled","shadowMapType","shadowMapCullFace","shadowMapDebug","debug","drawArraysInstancedANGLE","drawElements","drawElementsInstancedANGLE","gl","getExtension","getMaxPrecision","getShaderPrecisionFormat","VERTEX_SHADER","HIGH_FLOAT","FRAGMENT_SHADER","MEDIUM_FLOAT","MAX_TEXTURE_IMAGE_UNITS","maxVertexTextures","MAX_VERTEX_TEXTURE_IMAGE_UNITS","MAX_TEXTURE_SIZE","MAX_CUBE_MAP_TEXTURE_SIZE","maxAttributes","MAX_VERTEX_ATTRIBS","maxVertexUniforms","MAX_VERTEX_UNIFORM_VECTORS","maxVaryings","MAX_VARYING_VECTORS","maxFragmentUniforms","MAX_FRAGMENT_UNIFORM_VECTORS","floatFragmentTextures","_maxPrecision","WebGLGeometries","onGeometryDispose","buffergeometry","_bufferGeometry","deleteAttributes","deleteAttribute","__webglBuffer","deleteBuffer","removeAttributeBuffer","updateAttribute","bufferType","attributeProperties","updateBuffer","usage","STATIC_DRAW","bufferSubData","subarray","edges","checkEdge","list","WebGLProgram","generateDefines","fetchUniformLocations","identifiers","getProgramParameter","ACTIVE_UNIFORMS","getActiveUniform","getUniformLocation","suffixPos","fetchAttributeLocations","ACTIVE_ATTRIBUTES","getActiveAttrib","getAttribLocation","filterEmptyLine","programIdCount","shadowMapTypeDefine","envMapTypeDefine","envMapModeDefine","envMapBlendingDefine","prefixVertex","prefixFragment","gammaFactorDefine","customDefines","createProgram","maxDirLights","maxPointLights","maxSpotLights","maxHemiLights","maxShadows","maxBones","flatShading","filter","useFog","fogExp","vertexGlsl","fragmentGlsl","glVertexShader","WebGLShader","glFragmentShader","attachShader","bindAttribLocation","linkProgram","programLog","getProgramInfoLog","vertexLog","getShaderInfoLog","fragmentLog","runnable","haveDiagnostics","LINK_STATUS","getError","VALIDATE_STATUS","diagnostics","prefix","deleteShader","cachedUniforms","cachedAttributes","deleteProgram","usedTimes","allocateBones","nVertexUniforms","nVertexMatrices","allocateLights","dirLights","pointLights","spotLights","hemiLights","allocateShadows","shaderIDs","parameterNames","maxLightCount","envMapMode","parameterName","pl","addLineNumbers","createShader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","_renderer","_objects","getDepthMaterial","depthMaterial","useMorphing","useSkinning","customDepthMaterial","_depthMaterialMorphSkin","_depthMaterialSkin","_depthMaterialMorph","_depthMaterial","_renderList","_state","_matrixPosition","depthShader","depthUniforms","BLEND","shadowFilter","pars","cameraHelper","CameraHelper","clearAlpha","newAttributes","enabledAttributes","compressedTextureFormats","currentBlending","currentBlendEquation","currentBlendSrc","currentBlendDst","currentBlendEquationAlpha","currentBlendSrcAlpha","currentBlendDstAlpha","currentDepthFunc","currentDepthWrite","currentColorWrite","currentFlipSided","currentLineWidth","currentPolygonOffsetFactor","currentPolygonOffsetUnits","currentTextureSlot","currentBoundTextures","DEPTH_TEST","LEQUAL","blendFunc","enableVertexAttribArray","disableVertexAttribArray","formats","COMPRESSED_TEXTURE_FORMATS","blendEquationSeparate","blendFuncSeparate","NEVER","ALWAYS","LESS","EQUAL","GEQUAL","GREATER","NOTEQUAL","depthMask","colorMask","factor","units","POLYGON_OFFSET_FILL","scissorTest","SCISSOR_TEST","webglSlot","webglType","webglTexture","boundTexture","flares","vertexBuffer","elementBuffer","hasVertexTexture","tempTexture","occlusionTexture","renderType","occlusionMap","screenPosition","viewportWidth","viewportHeight","tempPosition","invAspect","halfViewportWidth","halfViewportHeight","screenPositionPixels","TEXTURE1","copyTexImage2D","sprite","spritePosition","spriteRotation","spriteScale","uvOffset","uvScale","fogType","fillStyle","fillRect","oldFogType","sceneFogType","GeometryUtils","geometry1","geometry2","ImageUtils","loadTextureCube","loadCompressedTexture","loadCompressedTextureCube","getNormalMap","subtract","getImageData","imageData","createImageData","ly","uy","lx","ux","num_points","putImageData","generateDataTexture","SceneUtils","createMultiMaterialObject","detach","attach","FontUtils","divisions","getFace","loadFace","family","familyName","ThreeFont","cssFontWeight","cssFontStyle","drawText","resolution","fontPaths","Path","ret","extractGlyphPoints","paths","outline","action","cpx","cpy","cpx0","cpy0","cpx1","cpy1","cpx2","cpy2","laste","pts","glyph","glyphs","o","_cachedOutline","moveTo","lineTo","quadraticCurveTo","Shape","Utils","bezierCurveTo","b3","generateShapes","curveSegments","font","shapes","toShapes","namespace","EPSILON","process","contour","verts","vertIndices","nv","snip","px","py","aX","aY","bX","bY","cX","cY","apx","apy","bpx","bpy","cCROSSap","bCROSScp","aCROSSbp","Triangulate","typeface_js","_typeface_js","Audio","createBufferSource","onended","onEnded","gain","createGain","connect","destination","panner","createPanner","autoplay","playbackRate","isPlaying","onload","decodeAudioData","play","loop","pause","currentTime","disconnect","setFilter","getFilter","setPlaybackRate","getPlaybackRate","setLoop","getLoop","setRefDistance","refDistance","getRefDistance","setRolloffFactor","rolloffFactor","getRolloffFactor","setVolume","getVolume","AudioListener","AudioContext","webkitAudioContext","orientation","setOrientation","Curve","getPointAt","getUtoTmapping","getPoints","getSpacedPoints","lengths","getLengths","__arcLengthDivisions","cacheArcLengths","last","sum","updateArcLengths","targetArcLength","arcLengths","comparison","lengthBefore","lengthAfter","segmentLength","segmentFraction","getTangent","pt1","pt2","vec","getTangentAt","tangentQuadraticBezier","tangentCubicBezier","tangentSpline","h00","h10","h01","h11","getPointFunc","CurvePath","curves","bends","autoClose","curve","checkConnection","closePath","startPoint","endPoint","LineCurve","curveLengths","getCurveLengths","lens","cacheLengths","sums","maxX","maxY","maxZ","minX","minY","minZ","NEGATIVE_INFINITY","POSITIVE_INFINITY","createPointsGeometry","createGeometry","createSpacedPointsGeometry","addWrapPath","bendpath","getTransformedPoints","oldPts","getWrapPoints","getTransformedSpacedPoints","oldX","oldY","xNorm","bounds","pathPt","actions","fromPoints","PathActions","MOVE_TO","LINE_TO","QUADRATIC_CURVE_TO","BEZIER_CURVE_TO","CSPLINE_THRU","ARC","ELLIPSE","vlen","lastargs","x0","y0","aCPx","aCPy","QuadraticBezierCurve","aCP1x","aCP1y","aCP2x","aCP2y","CubicBezierCurve","splineThru","npts","SplineCurve","aRadius","aStartAngle","aEndAngle","aClockwise","absarc","absellipse","ellipse","xRadius","yRadius","aRotation","EllipseCurve","lastPoint","closedPath","useSpacedPoints","item","spts","spline","deltaAngle","tdivisions","isCCW","noHoles","extractSubpaths","inActions","subPaths","lastPath","toShapesNoHoles","inSubpaths","tmpPath","tmpShape","isPointInsidePolygon","inPt","inPolygon","polyLen","inside","edgeLowPt","edgeHighPt","edgeDx","edgeDy","perpEdge","solid","holesFirst","isClockWise","tmpPoints","betterShapeHoles","newShapes","newShapeHoles","mainIdx","ambiguous","toChange","sIdx","sLen","sho","hIdx","ho","hole_unassigned","s2Idx","froms","tos","hole","tmpHoles","holes","extrude","extruded","ExtrudeGeometry","makeGeometry","ShapeGeometry","getPointsHoles","holesPts","getSpacedPointsHoles","extractAllPoints","extractPoints","extractAllSpacedPoints","triangulateShape","point_in_segment_2D_colin","inSegPt1","inSegPt2","inOtherPt","intersect_segments_2D","inSeg1Pt1","inSeg1Pt2","inSeg2Pt1","inSeg2Pt2","inExcludeAdjacentSegs","seg1dx","seg1dy","seg2dx","seg2dy","seg1seg2dx","seg1seg2dy","limit","perpSeg1","perpSeg2","factorSeg1","seg1Pt","seg2Pt","seg1min","seg1max","seg1minVal","seg1maxVal","seg2min","seg2max","seg2minVal","seg2maxVal","isPointInsideAngle","inVertex","inLegFromPt","inLegToPt","legFromPtX","legFromPtY","legToPtX","legToPtY","otherPtX","otherPtY","from2toAngle","from2otherAngle","other2toAngle","removeHoles","isCutLineInsideAngles","inShapeIdx","inHoleIdx","lastShapeIdx","prevShapeIdx","nextShapeIdx","insideAngle","lastHoleIdx","prevHoleIdx","nextHoleIdx","intersectsShapeEdge","inShapePt","inHolePt","nextIdx","intersection","intersectsHoleEdge","ihIdx","chkHole","indepHoles","holeIndex","shapeIndex","shapePt","holePt","holeIdx","cutKey","tmpShape1","tmpShape2","tmpHole1","tmpHole2","failedCuts","hl","minShapeIndex","counter","h2","allPointsMap","allpoints","shapeWithoutHoles","triangles","b2p0","b2p1","b2p2","b3p0","b3p1","b3p2","b3p3","tangent","point0","point1","point2","point3","ArcCurve","LineCurve3","QuadraticBezierCurve3","CubicBezierCurve3","SplineCurve3","CatmullRomCurve3","CubicPoly","pz","x1","c0","initNonuniformCatmullRom","x3","dt0","dt1","dt2","initCatmullRom","tension","calc","ClosedSplineCurve3","AnimationHandler","CATMULLROM","CATMULLROM_FORWARD","initialized","hierarchy","rot","usedMorphTargets","morphTargetName","morphTargetsInfluences","root","parseRecurseHierarchy","deltaTimeMS","resetBlendWeights","Animation","timeScale","interpolationType","keyTypes","animationCache","positionWeight","quaternionWeight","scaleWeight","prevKey","nextKey","originalMatrix","getNextKeyWith","newVector","newQuat","interpolateCatmullRom","prevXYZ","nextXYZ","proportionalWeight","getPrevKeyWith","currentPoint","forwardPoint","KeyFrameAnimation","isPaused","sids","sid","endTime","original","hasTarget","MorphAnimation","frames","lastFrame","currentFrame","frame","buildPlane","udir","vdir","gridX","gridY","width_half","height_half","gridX1","gridY1","segment_width","segment_height","uva","uvb","uvc","uvd","depth_half","CubeGeometry","centerUV","segment","heightHalf","verticesRow","uvsRow","tanTheta","v4","n1","n2","n3","n4","uv4","EdgesGeometry","thresholdAngle","thresholdDot","edge","sortFunction","vert1","vert2","face1","face2","addShapeList","addShape","scalePt2","pt","getBevelVec","inPrev","inNext","v_trans_x","v_trans_y","shrink_by","v_prev_x","v_prev_y","v_next_x","v_next_y","v_prev_lensq","collinear0","v_prev_len","v_next_len","ptPrevShift_x","ptPrevShift_y","ptNextShift_x","ptNextShift_y","v_trans_lensq","direction_eq","buildLidFaces","bevelEnabled","layer","flen","f3","steps","bevelSegments","buildSideFaces","layeroffset","sidewalls","ahole","slen1","slen2","f4","shapesOffset","uvgen","generateTopUV","wallContour","stepIndex","stepsLength","contourIndex1","contourIndex2","generateSideWallUV","extrudePts","splineTube","binormal","position2","amount","bevelThickness","bevelSize","extrudePath","extrudeByPath","UVGenerator","WorldUVGenerator","TubeGeometry","FrenetFrames","shapePoints","bs","vert","contourMovements","oneHoleMovements","holesMovements","verticesMovements","binormals","indexA","indexB","indexC","indexD","LatheGeometry","inversePointLength","inverseSegments","np","u0","u1","PlaneGeometry","PlaneBufferGeometry","offset2","radiusStep","thetaSegment","thetaEnd","vertexCount","textShapes","getPos","in_q","in_p","cu","su","quOverP","cs","tz","grid","tang","bitan","ip","jp","closed","taper","NoTaper","numpoints","pos2","tangents","SinusoidalTaper","initialNormal3","smallest","MAX_VALUE","mat","PolyhedronGeometry","prepare","that","azimuth","inclination","make","centroid","azi","correctUV","subdivide","cols","aj","bj","rows","ParametricGeometry","slices","stacks","sliceCount","WireframeGeometry","numEdges","ol","drawcall","numTris","AxisHelper","ArrowHelper","lineGeometry","coneGeometry","dir","headLength","headWidth","cone","setDirection","setColor","BoxHelper","BoundingBoxHelper","addLine","addPoint","pointMap","hexFrustum","hexCone","hexUp","hexTarget","hexCross","setPoint","DirectionalLightHelper","lightPlane","targetLine","EdgesHelper","FaceNormalsHelper","nNormals","objGeometry","GridHelper","setColors","colorCenterLine","colorGrid","HemisphereLightHelper","sphereSize","lightSphere","PointLightHelper","SkeletonHelper","getBoneList","boneList","matrixWorldInv","boneMatrix","SpotLightHelper","vector2","coneLength","coneWidth","VertexNormalsHelper","objPos","objNorm","WireframeHelper","renderCallback","MorphBlendMesh","animationsMap","animationsList","numFrames","startFrame","endFrame","createAnimation","setAnimationWeight","active","autoCreateAnimations","frameRanges","setAnimationDirectionForward","setAnimationDirectionBackward","setAnimationFPS","setAnimationDuration","setAnimationTime","getAnimationTime","getAnimationDuration","stopAnimation"],"mappings":"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","file":"react-bundle.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _react = __webpack_require__(1);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _reactDom = __webpack_require__(6);\n\t\n\tvar _reactDom2 = _interopRequireDefault(_reactDom);\n\t\n\tvar _App = __webpack_require__(7);\n\t\n\tvar _App2 = _interopRequireDefault(_App);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t_reactDom2.default.render(_react2.default.createElement(_App2.default, null), document.getElementById('react-app'));\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tif (true) {\n\t  module.exports = __webpack_require__(35);\n\t} else {\n\t  module.exports = require('./cjs/react.development.js');\n\t}\n\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright (c) 2013-present, Facebook, Inc.\n\t *\n\t * This source code is licensed under the MIT license found in the\n\t * LICENSE file in the root directory of this source tree.\n\t */\n\t\n\tif (false) {\n\t  var REACT_ELEMENT_TYPE = (typeof Symbol === 'function' &&\n\t    Symbol.for &&\n\t    Symbol.for('react.element')) ||\n\t    0xeac7;\n\t\n\t  var isValidElement = function(object) {\n\t    return typeof object === 'object' &&\n\t      object !== null &&\n\t      object.$$typeof === REACT_ELEMENT_TYPE;\n\t  };\n\t\n\t  // By explicitly using `prop-types` you are opting into new development behavior.\n\t  // http://fb.me/prop-types-in-prod\n\t  var throwOnDirectAccess = true;\n\t  module.exports = require('./factoryWithTypeCheckers')(isValidElement, throwOnDirectAccess);\n\t} else {\n\t  // By explicitly using `prop-types` you are opting into new production behavior.\n\t  // http://fb.me/prop-types-in-prod\n\t  module.exports = __webpack_require__(32)();\n\t}\n\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar getVendorPropertyName = __webpack_require__(13);\n\t\n\tmodule.exports = function(target, sources) {\n\t  var to = Object(target);\n\t  var hasOwnProperty = Object.prototype.hasOwnProperty;\n\t\n\t  for (var nextIndex = 1; nextIndex < arguments.length; nextIndex++) {\n\t    var nextSource = arguments[nextIndex];\n\t    if (nextSource == null) {\n\t      continue;\n\t    }\n\t\n\t    var from = Object(nextSource);\n\t\n\t    for (var key in from) {\n\t      if (hasOwnProperty.call(from, key)) {\n\t        to[key] = from[key];\n\t      }\n\t    }\n\t  }\n\t\n\t  var prefixed = {};\n\t  for (var key in to) {\n\t    prefixed[getVendorPropertyName(key)] = to[key]\n\t  }\n\t\n\t  return prefixed\n\t}\n\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar insertRule = __webpack_require__(14);\n\tvar vendorPrefix = __webpack_require__(12)();\n\tvar index = 0;\n\t\n\tmodule.exports = function(keyframes) {\n\t  // random name\n\t  var name = 'anim_' + (++index) + (+new Date);\n\t  var css = \"@\" + vendorPrefix + \"keyframes \" + name + \" {\";\n\t\n\t  for (var key in keyframes) {\n\t    css += key + \" {\";\n\t\n\t    for (var property in keyframes[key]) {\n\t      var part = \":\" + keyframes[key][property] + \";\";\n\t      // We do vendor prefix for every property\n\t      css += vendorPrefix + property + part;\n\t      css += property + part;\n\t    }\n\t\n\t    css += \"}\";\n\t  }\n\t\n\t  css += \"}\";\n\t\n\t  insertRule(css);\n\t\n\t  return name\n\t}\n\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports) {\n\n\t/*\n\tobject-assign\n\t(c) Sindre Sorhus\n\t@license MIT\n\t*/\n\t\n\t'use strict';\n\t/* eslint-disable no-unused-vars */\n\tvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\n\tvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\tvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\t\n\tfunction toObject(val) {\n\t\tif (val === null || val === undefined) {\n\t\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t\t}\n\t\n\t\treturn Object(val);\n\t}\n\t\n\tfunction shouldUseNative() {\n\t\ttry {\n\t\t\tif (!Object.assign) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\n\t\t\t// Detect buggy property enumeration order in older V8 versions.\n\t\n\t\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\t\ttest1[5] = 'de';\n\t\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\t\treturn false;\n\t\t\t}\n\t\n\t\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\t\tvar test2 = {};\n\t\t\tfor (var i = 0; i < 10; i++) {\n\t\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t\t}\n\t\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\t\treturn test2[n];\n\t\t\t});\n\t\t\tif (order2.join('') !== '0123456789') {\n\t\t\t\treturn false;\n\t\t\t}\n\t\n\t\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\t\tvar test3 = {};\n\t\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\t\ttest3[letter] = letter;\n\t\t\t});\n\t\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\t\treturn false;\n\t\t\t}\n\t\n\t\t\treturn true;\n\t\t} catch (err) {\n\t\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\t\treturn false;\n\t\t}\n\t}\n\t\n\tmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\t\tvar from;\n\t\tvar to = toObject(target);\n\t\tvar symbols;\n\t\n\t\tfor (var s = 1; s < arguments.length; s++) {\n\t\t\tfrom = Object(arguments[s]);\n\t\n\t\t\tfor (var key in from) {\n\t\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\t\tto[key] = from[key];\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tif (getOwnPropertySymbols) {\n\t\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t\treturn to;\n\t};\n\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tfunction checkDCE() {\n\t  /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\n\t  if (\n\t    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined' ||\n\t    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== 'function'\n\t  ) {\n\t    return;\n\t  }\n\t  if (false) {\n\t    // This branch is unreachable because this function is only called\n\t    // in production, but the condition is true only in development.\n\t    // Therefore if the branch is still here, dead code elimination wasn't\n\t    // properly applied.\n\t    // Don't change the message. React DevTools relies on it. Also make sure\n\t    // this message doesn't occur elsewhere in this function, or it will cause\n\t    // a false positive.\n\t    throw new Error('^_^');\n\t  }\n\t  try {\n\t    // Verify that the code above has been dead code eliminated (DCE'd).\n\t    __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);\n\t  } catch (err) {\n\t    // DevTools shouldn't crash React, no matter what.\n\t    // We should still report in case we break this code.\n\t    console.error(err);\n\t  }\n\t}\n\t\n\tif (true) {\n\t  // DCE check should happen before ReactDOM bundle executes so that\n\t  // DevTools can report bad minification during injection.\n\t  checkDCE();\n\t  module.exports = __webpack_require__(34);\n\t} else {\n\t  module.exports = require('./cjs/react-dom.development.js');\n\t}\n\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _react = __webpack_require__(1);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _STLViewer = __webpack_require__(9);\n\t\n\tvar _STLViewer2 = _interopRequireDefault(_STLViewer);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar App = function (_Component) {\n\t  _inherits(App, _Component);\n\t\n\t  function App(props) {\n\t    _classCallCheck(this, App);\n\t\n\t    var _this = _possibleConstructorReturn(this, (App.__proto__ || Object.getPrototypeOf(App)).call(this, props));\n\t\n\t    _this.state = {\n\t      color: '#FF0000'\n\t    };\n\t\n\t    _this.clickBlue = _this.clickBlue.bind(_this);\n\t    _this.clickRed = _this.clickRed.bind(_this);\n\t    return _this;\n\t  }\n\t\n\t  _createClass(App, [{\n\t    key: 'clickBlue',\n\t    value: function clickBlue(e) {\n\t      e.preventDefault();\n\t      this.setState({ color: '#0000FF' });\n\t    }\n\t  }, {\n\t    key: 'clickRed',\n\t    value: function clickRed(e) {\n\t      e.preventDefault();\n\t      this.setState({ color: '#FF0000' });\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      return _react2.default.createElement(\n\t        'div',\n\t        null,\n\t        _react2.default.createElement(_STLViewer2.default, { url: 'dist/static/crazy-thing.stl', modelColor: this.state.color }),\n\t        _react2.default.createElement(\n\t          'button',\n\t          { onClick: this.clickRed },\n\t          'red'\n\t        ),\n\t        _react2.default.createElement(\n\t          'button',\n\t          { onClick: this.clickBlue },\n\t          'blue'\n\t        )\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return App;\n\t}(_react.Component);\n\t\n\t;\n\texports.default = App;\n\tmodule.exports = exports['default'];\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _Three = __webpack_require__(10);\n\t\n\tvar _Three2 = _interopRequireDefault(_Three);\n\t\n\tvar _reactDom = __webpack_require__(6);\n\t\n\tvar _reactDom2 = _interopRequireDefault(_reactDom);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar OrbitControls = __webpack_require__(38)(_Three2.default);\n\t\n\tvar DIRECTIONAL_LIGHT = 'directionalLight';\n\t\n\tvar Paint = function () {\n\t  function Paint() {\n\t    _classCallCheck(this, Paint);\n\t\n\t    this.loader = new _Three2.default.STLLoader();\n\t    this.scene = new _Three2.default.Scene();\n\t    this.renderer = new _Three2.default.WebGLRenderer({\n\t      antialias: true\n\t    });\n\t  }\n\t\n\t  _createClass(Paint, [{\n\t    key: 'init',\n\t    value: function init(context) {\n\t      this.component = context;\n\t      this.url = context.props.url;\n\t      this.width = context.props.width;\n\t      this.height = context.props.height;\n\t      this.modelColor = context.props.modelColor;\n\t      this.backgroundColor = context.props.backgroundColor;\n\t      this.orbitControls = context.props.orbitControls;\n\t      this.rotate = context.props.rotate;\n\t      this.cameraX = context.props.cameraX;\n\t      this.cameraY = context.props.cameraY;\n\t      this.cameraZ = context.props.cameraZ;\n\t      this.rotationSpeeds = context.props.rotationSpeeds;\n\t      this.lightX = context.props.lightX;\n\t      this.lightY = context.props.lightY;\n\t      this.lightZ = context.props.lightZ;\n\t      this.lightColor = context.props.lightColor;\n\t\n\t      if (this.mesh !== undefined) {\n\t        this.mesh.geometry.dispose();\n\t        this.mesh.material.dispose();\n\t        this.scene.remove(this.mesh);\n\t        delete this.mesh;\n\t      }\n\t      var directionalLightObj = this.scene.getObjectByName(DIRECTIONAL_LIGHT);\n\t      if (directionalLightObj) {\n\t        this.scene.remove(directionalLightObj);\n\t      }\n\t\n\t      if (this.animationRequestId) {\n\t        cancelAnimationFrame(this.animationRequestId);\n\t      }\n\t\n\t      //Detector.addGetWebGLMessage();\n\t      this.distance = 10000;\n\t      var directionalLight = new _Three2.default.DirectionalLight(this.lightColor);\n\t      directionalLight.position.x = this.lightX;\n\t      directionalLight.position.y = this.lightY;\n\t      directionalLight.position.z = this.lightZ;\n\t      directionalLight.position.normalize();\n\t      directionalLight.name = DIRECTIONAL_LIGHT;\n\t      this.scene.add(directionalLight);\n\t\n\t      this.addSTLToScene();\n\t    }\n\t  }, {\n\t    key: 'addSTLToScene',\n\t    value: function addSTLToScene() {\n\t      var _this = this;\n\t\n\t      this.loader.crossOrigin = '';\n\t      this.loader.load(this.url, function (geometry) {\n\t        // Calculate mesh noramls for MeshLambertMaterial.\n\t        geometry.computeFaceNormals();\n\t        geometry.computeVertexNormals();\n\t\n\t        // Center the object\n\t        geometry.center();\n\t\n\t        _this.mesh = new _Three2.default.Mesh(geometry, new _Three2.default.MeshLambertMaterial({\n\t          overdraw: true,\n\t          color: _this.modelColor\n\t        }));\n\t        // Set the object's dimensions\n\t        geometry.computeBoundingBox();\n\t        _this.xDims = geometry.boundingBox.max.x - geometry.boundingBox.min.x;\n\t        _this.yDims = geometry.boundingBox.max.y - geometry.boundingBox.min.y;\n\t        _this.zDims = geometry.boundingBox.max.z - geometry.boundingBox.min.z;\n\t\n\t        if (_this.rotate) {\n\t          _this.mesh.rotation.x = _this.rotationSpeeds[0];\n\t          _this.mesh.rotation.y = _this.rotationSpeeds[1];\n\t          _this.mesh.rotation.z = _this.rotationSpeeds[2];\n\t        }\n\t\n\t        _this.scene.add(_this.mesh);\n\t\n\t        _this.addCamera();\n\t        _this.addInteractionControls();\n\t        _this.addToReactComponent();\n\t\n\t        // Start the animation\n\t        _this.animate();\n\t      });\n\t    }\n\t  }, {\n\t    key: 'addCamera',\n\t    value: function addCamera() {\n\t      // Add the camera\n\t      this.camera = new _Three2.default.PerspectiveCamera(30, this.width / this.height, 1, this.distance);\n\t\n\t      if (this.cameraZ === null) {\n\t        this.cameraZ = Math.max(this.xDims * 3, this.yDims * 3, this.zDims * 3);\n\t      }\n\t\n\t      this.camera.position.set(this.cameraX, this.cameraY, this.cameraZ);\n\t\n\t      this.scene.add(this.camera);\n\t\n\t      this.camera.lookAt(this.mesh);\n\t\n\t      this.renderer.set;\n\t      this.renderer.setSize(this.width, this.height);\n\t      this.renderer.setClearColor(this.backgroundColor, 1);\n\t    }\n\t  }, {\n\t    key: 'addInteractionControls',\n\t    value: function addInteractionControls() {\n\t      // Add controls for mouse interaction\n\t      if (this.orbitControls) {\n\t        this.controls = new OrbitControls(this.camera, _reactDom2.default.findDOMNode(this.component));\n\t        this.controls.enableKeys = false;\n\t        this.controls.addEventListener('change', this.orbitRender.bind(this));\n\t      }\n\t    }\n\t  }, {\n\t    key: 'addToReactComponent',\n\t    value: function addToReactComponent() {\n\t      // Add to the React Component\n\t      _reactDom2.default.findDOMNode(this.component).replaceChild(this.renderer.domElement, _reactDom2.default.findDOMNode(this.component).firstChild);\n\t    }\n\t\n\t    /**\n\t     * Animate the scene\n\t     * @returns {void}\n\t     */\n\t\n\t  }, {\n\t    key: 'animate',\n\t    value: function animate() {\n\t      // note: three.js includes requestAnimationFrame shim\n\t      if (this.rotate) {\n\t        this.animationRequestId = requestAnimationFrame(this.animate.bind(this));\n\t      }\n\t\n\t      if (this.orbitControls) {\n\t        this.controls.update();\n\t      }\n\t      this.render();\n\t    }\n\t\n\t    /**\n\t     * Render the scene after turning off the rotation\n\t     * @returns {void}\n\t     */\n\t\n\t  }, {\n\t    key: 'orbitRender',\n\t    value: function orbitRender() {\n\t      if (this.rotate) {\n\t        this.rotate = false;\n\t      }\n\t\n\t      this.render();\n\t    }\n\t\n\t    /**\n\t     * Deallocate Mesh, renderer context.\n\t     * @returns {void}\n\t     */\n\t\n\t  }, {\n\t    key: 'clean',\n\t    value: function clean() {\n\t      if (this.mesh !== undefined) {\n\t        this.mesh.geometry.dispose();\n\t        this.mesh.material.dispose();\n\t        this.scene.remove(this.mesh);\n\t        delete this.mesh;\n\t      }\n\t      var directionalLightObj = this.scene.getObjectByName(DIRECTIONAL_LIGHT);\n\t      if (directionalLightObj) {\n\t        this.scene.remove(directionalLightObj);\n\t      }\n\t\n\t      if (this.animationRequestId) {\n\t        cancelAnimationFrame(this.animationRequestId);\n\t      }\n\t      this.renderer.dispose();\n\t      this.renderer.forceContextLoss();\n\t    }\n\t\n\t    /**\n\t     * Render the scene\n\t     * @returns {void}\n\t     */\n\t\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      if (this.mesh && this.rotate) {\n\t        this.mesh.rotation.x += this.rotationSpeeds[0];\n\t        this.mesh.rotation.y += this.rotationSpeeds[1];\n\t        this.mesh.rotation.z += this.rotationSpeeds[2];\n\t      }\n\t\n\t      this.renderer.render(this.scene, this.camera);\n\t    }\n\t  }]);\n\t\n\t  return Paint;\n\t}();\n\t\n\texports.default = Paint;\n\tmodule.exports = exports['default'];\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _react = __webpack_require__(1);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _propTypes = __webpack_require__(2);\n\t\n\tvar _propTypes2 = _interopRequireDefault(_propTypes);\n\t\n\tvar _halogenium = __webpack_require__(21);\n\t\n\tvar _Paint = __webpack_require__(8);\n\t\n\tvar _Paint2 = _interopRequireDefault(_Paint);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar STLViewer = function (_Component) {\n\t  _inherits(STLViewer, _Component);\n\t\n\t  function STLViewer() {\n\t    _classCallCheck(this, STLViewer);\n\t\n\t    return _possibleConstructorReturn(this, (STLViewer.__proto__ || Object.getPrototypeOf(STLViewer)).apply(this, arguments));\n\t  }\n\t\n\t  _createClass(STLViewer, [{\n\t    key: 'componentDidMount',\n\t    value: function componentDidMount() {\n\t      this.paint = new _Paint2.default();\n\t      this.paint.init(this);\n\t    }\n\t  }, {\n\t    key: 'shouldComponentUpdate',\n\t    value: function shouldComponentUpdate(nextProps, nextState) {\n\t      return JSON.stringify(nextProps) !== JSON.stringify(this.props);\n\t    }\n\t  }, {\n\t    key: 'componentWillUpdate',\n\t    value: function componentWillUpdate(nextProps, nextState) {\n\t      this.props = nextProps;\n\t      this.paint.init(this);\n\t    }\n\t  }, {\n\t    key: 'componentWillUnmount',\n\t    value: function componentWillUnmount() {\n\t      this.paint.clean();\n\t      delete this.paint;\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      var _props = this.props,\n\t          width = _props.width,\n\t          height = _props.height,\n\t          modelColor = _props.modelColor;\n\t\n\t      return _react2.default.createElement(\n\t        'div',\n\t        {\n\t          className: this.props.className,\n\t          style: {\n\t            width: width,\n\t            height: height,\n\t            overflow: 'hidden'\n\t          }\n\t        },\n\t        _react2.default.createElement(\n\t          'div',\n\t          {\n\t            style: {\n\t              height: '100%',\n\t              display: 'flex',\n\t              justifyContent: 'center',\n\t              alignItems: 'center'\n\t            }\n\t          },\n\t          _react2.default.createElement(_halogenium.ScaleLoader, { color: modelColor, size: '16px' })\n\t        )\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return STLViewer;\n\t}(_react.Component);\n\t\n\tSTLViewer.propTypes = {\n\t  className: _propTypes2.default.string,\n\t  url: _propTypes2.default.string,\n\t  width: _propTypes2.default.number,\n\t  height: _propTypes2.default.number,\n\t  backgroundColor: _propTypes2.default.string,\n\t  modelColor: _propTypes2.default.string,\n\t  rotate: _propTypes2.default.bool,\n\t  orbitControls: _propTypes2.default.bool,\n\t  cameraX: _propTypes2.default.number,\n\t  cameraY: _propTypes2.default.number,\n\t  cameraZ: _propTypes2.default.number,\n\t  lightX: _propTypes2.default.number,\n\t  lightY: _propTypes2.default.number,\n\t  lightZ: _propTypes2.default.number,\n\t  lightColor: _propTypes2.default.string,\n\t  rotationSpeeds: _propTypes2.default.arrayOf(_propTypes2.default.number)\n\t};\n\tSTLViewer.defaultProps = {\n\t  backgroundColor: '#EAEAEA',\n\t  modelColor: '#B92C2C',\n\t  height: 400,\n\t  width: 400,\n\t  rotate: true,\n\t  orbitControls: true,\n\t  cameraX: 0,\n\t  cameraY: 0,\n\t  cameraZ: null,\n\t  lightX: 0,\n\t  lightY: 0,\n\t  lightZ: 1,\n\t  lightColor: '#ffffff',\n\t  rotationSpeeds: [0, 0, 0.02]\n\t};\n\t\n\t\n\tmodule.exports = STLViewer;\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar THREE = __webpack_require__(39);\n\t\n\t//\n\t// STL Loader added\n\t//\n\t/**\n\t * @author aleeper / http://adamleeper.com/\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author gero3 / https://github.com/gero3\n\t *\n\t * Description: A THREE loader for STL ASCII files, as created by Solidworks and other CAD programs.\n\t *\n\t * Supports both binary and ASCII encoded files, with automatic detection of type.\n\t *\n\t * Limitations:\n\t *  Binary decoding supports \"Magics\" color format (http://en.wikipedia.org/wiki/STL_(file_format)#Color_in_binary_STL).\n\t *  There is perhaps some question as to how valid it is to always assume little-endian-ness.\n\t *  ASCII decoding assumes file is UTF-8. Seems to work for the examples...\n\t *\n\t * Usage:\n\t *  var loader = new THREE.STLLoader();\n\t *  loader.load( './models/stl/slotted_disk.stl', function ( geometry ) {\n\t *    scene.add( new THREE.Mesh( geometry ) );\n\t *  });\n\t *\n\t * For binary STLs geometry might contain colors for vertices. To use it:\n\t *  // use the same code to load STL as above\n\t *  if (geometry.hasColors) {\n\t *    material = new THREE.MeshPhongMaterial({ opacity: geometry.alpha, vertexColors: THREE.VertexColors });\n\t *  } else { .... }\n\t *  var mesh = new THREE.Mesh( geometry, material );\n\t */\n\t\n\tTHREE.STLLoader = function (manager) {\n\t\n\t\tthis.manager = manager !== undefined ? manager : THREE.DefaultLoadingManager;\n\t};\n\t\n\tTHREE.STLLoader.prototype = {\n\t\n\t\tconstructor: THREE.STLLoader,\n\t\n\t\tload: function load(url, onLoad, onProgress, onError) {\n\t\n\t\t\tvar scope = this;\n\t\n\t\t\tvar loader = new THREE.XHRLoader(scope.manager);\n\t\t\tloader.setCrossOrigin(this.crossOrigin);\n\t\t\tloader.setResponseType('arraybuffer');\n\t\t\tloader.load(url, function (text) {\n\t\n\t\t\t\tonLoad(scope.parse(text));\n\t\t\t}, onProgress, onError);\n\t\t},\n\t\n\t\tparse: function parse(data) {\n\t\n\t\t\tvar isBinary = function isBinary() {\n\t\n\t\t\t\tvar expect, face_size, n_faces, reader;\n\t\t\t\treader = new DataView(binData);\n\t\t\t\tface_size = 32 / 8 * 3 + 32 / 8 * 3 * 3 + 16 / 8;\n\t\t\t\tn_faces = reader.getUint32(80, true);\n\t\t\t\texpect = 80 + 32 / 8 + n_faces * face_size;\n\t\n\t\t\t\tif (expect === reader.byteLength) {\n\t\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\n\t\t\t\t// some binary files will have different size from expected,\n\t\t\t\t// checking characters higher than ASCII to confirm is binary\n\t\t\t\tvar fileLength = reader.byteLength;\n\t\t\t\tfor (var index = 0; index < fileLength; index++) {\n\t\n\t\t\t\t\tif (reader.getUint8(index, false) > 127) {\n\t\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t\treturn false;\n\t\t\t};\n\t\n\t\t\tvar binData = this.ensureBinary(data);\n\t\n\t\t\treturn isBinary() ? this.parseBinary(binData) : this.parseASCII(this.ensureString(data));\n\t\t},\n\t\n\t\tparseBinary: function parseBinary(data) {\n\t\n\t\t\tvar reader = new DataView(data);\n\t\t\tvar faces = reader.getUint32(80, true);\n\t\n\t\t\tvar r,\n\t\t\t    g,\n\t\t\t    b,\n\t\t\t    hasColors = false,\n\t\t\t    colors;\n\t\t\tvar defaultR, defaultG, defaultB, alpha;\n\t\n\t\t\t// process STL header\n\t\t\t// check for default color in header (\"COLOR=rgba\" sequence).\n\t\n\t\t\tfor (var index = 0; index < 80 - 10; index++) {\n\t\n\t\t\t\tif (reader.getUint32(index, false) == 0x434F4C4F /*COLO*/ && reader.getUint8(index + 4) == 0x52 /*'R'*/ && reader.getUint8(index + 5) == 0x3D /*'='*/) {\n\t\n\t\t\t\t\thasColors = true;\n\t\t\t\t\tcolors = new Float32Array(faces * 3 * 3);\n\t\n\t\t\t\t\tdefaultR = reader.getUint8(index + 6) / 255;\n\t\t\t\t\tdefaultG = reader.getUint8(index + 7) / 255;\n\t\t\t\t\tdefaultB = reader.getUint8(index + 8) / 255;\n\t\t\t\t\talpha = reader.getUint8(index + 9) / 255;\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tvar dataOffset = 84;\n\t\t\tvar faceLength = 12 * 4 + 2;\n\t\n\t\t\tvar offset = 0;\n\t\n\t\t\tvar geometry = new THREE.BufferGeometry();\n\t\n\t\t\tvar vertices = new Float32Array(faces * 3 * 3);\n\t\t\tvar normals = new Float32Array(faces * 3 * 3);\n\t\n\t\t\tfor (var face = 0; face < faces; face++) {\n\t\n\t\t\t\tvar start = dataOffset + face * faceLength;\n\t\t\t\tvar normalX = reader.getFloat32(start, true);\n\t\t\t\tvar normalY = reader.getFloat32(start + 4, true);\n\t\t\t\tvar normalZ = reader.getFloat32(start + 8, true);\n\t\n\t\t\t\tif (hasColors) {\n\t\n\t\t\t\t\tvar packedColor = reader.getUint16(start + 48, true);\n\t\n\t\t\t\t\tif ((packedColor & 0x8000) === 0) {\n\t\t\t\t\t\t// facet has its own unique color\n\t\n\t\t\t\t\t\tr = (packedColor & 0x1F) / 31;\n\t\t\t\t\t\tg = (packedColor >> 5 & 0x1F) / 31;\n\t\t\t\t\t\tb = (packedColor >> 10 & 0x1F) / 31;\n\t\t\t\t\t} else {\n\t\n\t\t\t\t\t\tr = defaultR;\n\t\t\t\t\t\tg = defaultG;\n\t\t\t\t\t\tb = defaultB;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t\tfor (var i = 1; i <= 3; i++) {\n\t\n\t\t\t\t\tvar vertexstart = start + i * 12;\n\t\n\t\t\t\t\tvertices[offset] = reader.getFloat32(vertexstart, true);\n\t\t\t\t\tvertices[offset + 1] = reader.getFloat32(vertexstart + 4, true);\n\t\t\t\t\tvertices[offset + 2] = reader.getFloat32(vertexstart + 8, true);\n\t\n\t\t\t\t\tnormals[offset] = normalX;\n\t\t\t\t\tnormals[offset + 1] = normalY;\n\t\t\t\t\tnormals[offset + 2] = normalZ;\n\t\n\t\t\t\t\tif (hasColors) {\n\t\t\t\t\t\tcolors[offset] = r;\n\t\t\t\t\t\tcolors[offset + 1] = g;\n\t\t\t\t\t\tcolors[offset + 2] = b;\n\t\t\t\t\t}\n\t\n\t\t\t\t\toffset += 3;\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tgeometry.addAttribute('position', new THREE.BufferAttribute(vertices, 3));\n\t\t\tgeometry.addAttribute('normal', new THREE.BufferAttribute(normals, 3));\n\t\n\t\t\tif (hasColors) {\n\t\t\t\tgeometry.addAttribute('color', new THREE.BufferAttribute(colors, 3));\n\t\t\t\tgeometry.hasColors = true;\n\t\t\t\tgeometry.alpha = alpha;\n\t\t\t}\n\t\n\t\t\treturn geometry;\n\t\t},\n\t\n\t\tparseASCII: function parseASCII(data) {\n\t\n\t\t\tvar geometry, length, normal, patternFace, patternNormal, patternVertex, result, text;\n\t\t\tgeometry = new THREE.Geometry();\n\t\t\tpatternFace = /facet([\\s\\S]*?)endfacet/g;\n\t\n\t\t\twhile ((result = patternFace.exec(data)) !== null) {\n\t\n\t\t\t\ttext = result[0];\n\t\t\t\tpatternNormal = /normal[\\s]+([\\-+]?[0-9]+\\.?[0-9]*([eE][\\-+]?[0-9]+)?)+[\\s]+([\\-+]?[0-9]*\\.?[0-9]+([eE][\\-+]?[0-9]+)?)+[\\s]+([\\-+]?[0-9]*\\.?[0-9]+([eE][\\-+]?[0-9]+)?)+/g;\n\t\n\t\t\t\twhile ((result = patternNormal.exec(text)) !== null) {\n\t\n\t\t\t\t\tnormal = new THREE.Vector3(parseFloat(result[1]), parseFloat(result[3]), parseFloat(result[5]));\n\t\t\t\t}\n\t\n\t\t\t\tpatternVertex = /vertex[\\s]+([\\-+]?[0-9]+\\.?[0-9]*([eE][\\-+]?[0-9]+)?)+[\\s]+([\\-+]?[0-9]*\\.?[0-9]+([eE][\\-+]?[0-9]+)?)+[\\s]+([\\-+]?[0-9]*\\.?[0-9]+([eE][\\-+]?[0-9]+)?)+/g;\n\t\n\t\t\t\twhile ((result = patternVertex.exec(text)) !== null) {\n\t\n\t\t\t\t\tgeometry.vertices.push(new THREE.Vector3(parseFloat(result[1]), parseFloat(result[3]), parseFloat(result[5])));\n\t\t\t\t}\n\t\n\t\t\t\tlength = geometry.vertices.length;\n\t\n\t\t\t\tgeometry.faces.push(new THREE.Face3(length - 3, length - 2, length - 1, normal));\n\t\t\t}\n\t\n\t\t\tgeometry.computeBoundingBox();\n\t\t\tgeometry.computeBoundingSphere();\n\t\n\t\t\treturn geometry;\n\t\t},\n\t\n\t\tensureString: function ensureString(buf) {\n\t\n\t\t\tif (typeof buf !== \"string\") {\n\t\t\t\tvar array_buffer = new Uint8Array(buf);\n\t\t\t\tvar str = '';\n\t\t\t\tfor (var i = 0; i < buf.byteLength; i++) {\n\t\t\t\t\tstr += String.fromCharCode(array_buffer[i]); // implicitly assumes little-endian\n\t\t\t\t}\n\t\t\t\treturn str;\n\t\t\t} else {\n\t\t\t\treturn buf;\n\t\t\t}\n\t\t},\n\t\n\t\tensureBinary: function ensureBinary(buf) {\n\t\n\t\t\tif (typeof buf === \"string\") {\n\t\t\t\tvar array_buffer = new Uint8Array(buf.length);\n\t\t\t\tfor (var i = 0; i < buf.length; i++) {\n\t\t\t\t\tarray_buffer[i] = buf.charCodeAt(i) & 0xff; // implicitly assumes little-endian\n\t\t\t\t}\n\t\t\t\treturn array_buffer.buffer || array_buffer;\n\t\t\t} else {\n\t\t\t\treturn buf;\n\t\t\t}\n\t\t}\n\t\n\t};\n\t\n\tif (typeof DataView === 'undefined') {\n\t\n\t\tDataView = function DataView(buffer, byteOffset, byteLength) {\n\t\n\t\t\tthis.buffer = buffer;\n\t\t\tthis.byteOffset = byteOffset || 0;\n\t\t\tthis.byteLength = byteLength || buffer.byteLength || buffer.length;\n\t\t\tthis._isString = typeof buffer === \"string\";\n\t\t};\n\t\n\t\tDataView.prototype = {\n\t\n\t\t\t_getCharCodes: function _getCharCodes(buffer, start, length) {\n\t\t\t\tstart = start || 0;\n\t\t\t\tlength = length || buffer.length;\n\t\t\t\tvar end = start + length;\n\t\t\t\tvar codes = [];\n\t\t\t\tfor (var i = start; i < end; i++) {\n\t\t\t\t\tcodes.push(buffer.charCodeAt(i) & 0xff);\n\t\t\t\t}\n\t\t\t\treturn codes;\n\t\t\t},\n\t\n\t\t\t_getBytes: function _getBytes(length, byteOffset, littleEndian) {\n\t\n\t\t\t\tvar result;\n\t\n\t\t\t\t// Handle the lack of endianness\n\t\t\t\tif (littleEndian === undefined) {\n\t\n\t\t\t\t\tlittleEndian = this._littleEndian;\n\t\t\t\t}\n\t\n\t\t\t\t// Handle the lack of byteOffset\n\t\t\t\tif (byteOffset === undefined) {\n\t\n\t\t\t\t\tbyteOffset = this.byteOffset;\n\t\t\t\t} else {\n\t\n\t\t\t\t\tbyteOffset = this.byteOffset + byteOffset;\n\t\t\t\t}\n\t\n\t\t\t\tif (length === undefined) {\n\t\n\t\t\t\t\tlength = this.byteLength - byteOffset;\n\t\t\t\t}\n\t\n\t\t\t\t// Error Checking\n\t\t\t\tif (typeof byteOffset !== 'number') {\n\t\n\t\t\t\t\tthrow new TypeError('DataView byteOffset is not a number');\n\t\t\t\t}\n\t\n\t\t\t\tif (length < 0 || byteOffset + length > this.byteLength) {\n\t\n\t\t\t\t\tthrow new Error('DataView length or (byteOffset+length) value is out of bounds');\n\t\t\t\t}\n\t\n\t\t\t\tif (this.isString) {\n\t\n\t\t\t\t\tresult = this._getCharCodes(this.buffer, byteOffset, byteOffset + length);\n\t\t\t\t} else {\n\t\n\t\t\t\t\tresult = this.buffer.slice(byteOffset, byteOffset + length);\n\t\t\t\t}\n\t\n\t\t\t\tif (!littleEndian && length > 1) {\n\t\n\t\t\t\t\tif (!(result instanceof Array)) {\n\t\n\t\t\t\t\t\tresult = Array.prototype.slice.call(result);\n\t\t\t\t\t}\n\t\n\t\t\t\t\tresult.reverse();\n\t\t\t\t}\n\t\n\t\t\t\treturn result;\n\t\t\t},\n\t\n\t\t\t// Compatibility functions on a String Buffer\n\t\n\t\t\tgetFloat64: function getFloat64(byteOffset, littleEndian) {\n\t\n\t\t\t\tvar b = this._getBytes(8, byteOffset, littleEndian),\n\t\t\t\t    sign = 1 - 2 * (b[7] >> 7),\n\t\t\t\t    exponent = ((b[7] << 1 & 0xff) << 3 | b[6] >> 4) - ((1 << 10) - 1),\n\t\n\t\n\t\t\t\t// Binary operators such as | and << operate on 32 bit values, using + and Math.pow(2) instead\n\t\t\t\tmantissa = (b[6] & 0x0f) * Math.pow(2, 48) + b[5] * Math.pow(2, 40) + b[4] * Math.pow(2, 32) + b[3] * Math.pow(2, 24) + b[2] * Math.pow(2, 16) + b[1] * Math.pow(2, 8) + b[0];\n\t\n\t\t\t\tif (exponent === 1024) {\n\t\t\t\t\tif (mantissa !== 0) {\n\t\t\t\t\t\treturn NaN;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn sign * Infinity;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t\tif (exponent === -1023) {\n\t\t\t\t\t// Denormalized\n\t\t\t\t\treturn sign * mantissa * Math.pow(2, -1022 - 52);\n\t\t\t\t}\n\t\n\t\t\t\treturn sign * (1 + mantissa * Math.pow(2, -52)) * Math.pow(2, exponent);\n\t\t\t},\n\t\n\t\t\tgetFloat32: function getFloat32(byteOffset, littleEndian) {\n\t\n\t\t\t\tvar b = this._getBytes(4, byteOffset, littleEndian),\n\t\t\t\t    sign = 1 - 2 * (b[3] >> 7),\n\t\t\t\t    exponent = (b[3] << 1 & 0xff | b[2] >> 7) - 127,\n\t\t\t\t    mantissa = (b[2] & 0x7f) << 16 | b[1] << 8 | b[0];\n\t\n\t\t\t\tif (exponent === 128) {\n\t\t\t\t\tif (mantissa !== 0) {\n\t\t\t\t\t\treturn NaN;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn sign * Infinity;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t\tif (exponent === -127) {\n\t\t\t\t\t// Denormalized\n\t\t\t\t\treturn sign * mantissa * Math.pow(2, -126 - 23);\n\t\t\t\t}\n\t\n\t\t\t\treturn sign * (1 + mantissa * Math.pow(2, -23)) * Math.pow(2, exponent);\n\t\t\t},\n\t\n\t\t\tgetInt32: function getInt32(byteOffset, littleEndian) {\n\t\t\t\tvar b = this._getBytes(4, byteOffset, littleEndian);\n\t\t\t\treturn b[3] << 24 | b[2] << 16 | b[1] << 8 | b[0];\n\t\t\t},\n\t\n\t\t\tgetUint32: function getUint32(byteOffset, littleEndian) {\n\t\t\t\treturn this.getInt32(byteOffset, littleEndian) >>> 0;\n\t\t\t},\n\t\n\t\t\tgetInt16: function getInt16(byteOffset, littleEndian) {\n\t\t\t\treturn this.getUint16(byteOffset, littleEndian) << 16 >> 16;\n\t\t\t},\n\t\n\t\t\tgetUint16: function getUint16(byteOffset, littleEndian) {\n\t\t\t\tvar b = this._getBytes(2, byteOffset, littleEndian);\n\t\t\t\treturn b[1] << 8 | b[0];\n\t\t\t},\n\t\n\t\t\tgetInt8: function getInt8(byteOffset) {\n\t\t\t\treturn this.getUint8(byteOffset) << 24 >> 24;\n\t\t\t},\n\t\n\t\t\tgetUint8: function getUint8(byteOffset) {\n\t\t\t\treturn this._getBytes(1, byteOffset)[0];\n\t\t\t}\n\t\n\t\t};\n\t}\n\t\n\tmodule.exports = THREE;\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports) {\n\n\t'use strict';\n\t\n\tmodule.exports = document.createElement('div').style;\n\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports) {\n\n\t'use strict';\n\t\n\tvar cssVendorPrefix;\n\t\n\tmodule.exports = function() {\n\t\n\t  if (cssVendorPrefix) return cssVendorPrefix;\n\t\n\t  var styles = window.getComputedStyle(document.documentElement, '');\n\t  var pre = (Array.prototype.slice.call(styles).join('').match(/-(moz|webkit|ms)-/) || (styles.OLink === '' && ['', 'o']))[1];\n\t\n\t  return cssVendorPrefix = '-' + pre + '-';\n\t}\n\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar builtinStyle = __webpack_require__(11);\n\tvar prefixes = ['Moz', 'Webkit', 'O', 'ms'];\n\tvar domVendorPrefix;\n\t\n\t// Helper function to get the proper vendor property name. (transition => WebkitTransition)\n\tmodule.exports = function(prop, isSupportTest) {\n\t\n\t  var vendorProp;\n\t  if (prop in builtinStyle) return prop;\n\t\n\t  var UpperProp = prop.charAt(0).toUpperCase() + prop.substr(1);\n\t\n\t  if (domVendorPrefix) {\n\t\n\t    vendorProp = domVendorPrefix + UpperProp;\n\t    if (vendorProp in builtinStyle) {\n\t      return vendorProp;\n\t    }\n\t  } else {\n\t\n\t    for (var i = 0; i < prefixes.length; ++i) {\n\t      vendorProp = prefixes[i] + UpperProp;\n\t      if (vendorProp in builtinStyle) {\n\t        domVendorPrefix = prefixes[i];\n\t        return vendorProp;\n\t      }\n\t    }\n\t  }\n\t\n\t  // if support test, not fallback to origin prop name\n\t  if (!isSupportTest) {\n\t    return prop;\n\t  }\n\t\n\t}\n\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports) {\n\n\t'use strict';\n\t\n\tvar extraSheet;\n\t\n\tmodule.exports = function(css) {\n\t\n\t  if (!extraSheet) {\n\t    // First time, create an extra stylesheet for adding rules\n\t    extraSheet = document.createElement('style');\n\t    document.getElementsByTagName('head')[0].appendChild(extraSheet);\n\t    // Keep reference to actual StyleSheet object (`styleSheet` for IE < 9)\n\t    extraSheet = extraSheet.sheet || extraSheet.styleSheet;\n\t  }\n\t\n\t  var index = (extraSheet.cssRules || extraSheet.rules).length;\n\t  extraSheet.insertRule(css, index);\n\t\n\t  return extraSheet;\n\t}\n\n\n/***/ }),\n/* 15 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _react = __webpack_require__(1);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _propTypes = __webpack_require__(2);\n\t\n\tvar _propTypes2 = _interopRequireDefault(_propTypes);\n\t\n\tvar _appendVendorPrefix = __webpack_require__(3);\n\t\n\tvar _appendVendorPrefix2 = _interopRequireDefault(_appendVendorPrefix);\n\t\n\tvar _insertKeyframesRule = __webpack_require__(4);\n\t\n\tvar _insertKeyframesRule2 = _interopRequireDefault(_insertKeyframesRule);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * @type {Object}\n\t */\n\tvar keyframes = {\n\t  '50%': {\n\t    transform: 'scale(0.75)',\n\t    opacity: 0.2\n\t  },\n\t  '100%': {\n\t    transform: 'scale(1)',\n\t    opacity: 1\n\t  }\n\t};\n\t\n\tvar animationName = (0, _insertKeyframesRule2.default)(keyframes);\n\t\n\tvar propTypes = {\n\t  loading: _propTypes2.default.bool,\n\t  color: _propTypes2.default.string,\n\t  size: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n\t  margin: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n\t  verticalAlign: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string])\n\t};\n\t\n\tvar ptKeys = Object.keys(propTypes);\n\t\n\tvar BeatLoader = function (_Component) {\n\t  _inherits(BeatLoader, _Component);\n\t\n\t  function BeatLoader() {\n\t    var _ref;\n\t\n\t    var _temp, _this, _ret;\n\t\n\t    _classCallCheck(this, BeatLoader);\n\t\n\t    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n\t      args[_key] = arguments[_key];\n\t    }\n\t\n\t    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = BeatLoader.__proto__ || Object.getPrototypeOf(BeatLoader)).call.apply(_ref, [this].concat(args))), _this), _this.getBallStyle = function () {\n\t      return {\n\t        backgroundColor: _this.props.color,\n\t        width: _this.props.size,\n\t        height: _this.props.size,\n\t        margin: _this.props.margin,\n\t        borderRadius: '100%',\n\t        verticalAlign: _this.props.verticalAlign\n\t      };\n\t    }, _this.getAnimationStyle = function (i) {\n\t      var animation = [animationName, '0.7s', (i % 2 ? 0 : 0.35) + 's', 'infinite', 'linear'].join(' ');\n\t      var animationFillMode = 'both';\n\t\n\t      return {\n\t        animation: animation,\n\t        animationFillMode: animationFillMode\n\t      };\n\t    }, _this.getStyle = function (i) {\n\t      return (0, _appendVendorPrefix2.default)(_this.getBallStyle(i), _this.getAnimationStyle(i), {\n\t        display: 'inline-block',\n\t        border: '0px solid transparent' // fix firefox/chrome/opera rendering\n\t      });\n\t    }, _temp), _possibleConstructorReturn(_this, _ret);\n\t  }\n\t\n\t  /**\n\t   * @return {Object}\n\t   */\n\t\n\t\n\t  /**\n\t   * @param  {Number} i\n\t   * @return {Object}\n\t   */\n\t\n\t\n\t  /**\n\t   * @param  {Number} i\n\t   * @return {Object}\n\t   */\n\t\n\t\n\t  _createClass(BeatLoader, [{\n\t    key: 'render',\n\t    value: function render() {\n\t      var loading = this.props.loading;\n\t\n\t\n\t      if (loading) {\n\t        var props = _extends({}, this.props);\n\t\n\t        if (propTypes && ptKeys) {\n\t          var klen = ptKeys.length;\n\t          for (var i = 0; i < klen; i++) {\n\t            delete props[ptKeys[i]];\n\t          }\n\t        }\n\t\n\t        return _react2.default.createElement(\n\t          'div',\n\t          props,\n\t          _react2.default.createElement('div', { style: this.getStyle(1) }),\n\t          _react2.default.createElement('div', { style: this.getStyle(2) }),\n\t          _react2.default.createElement('div', { style: this.getStyle(3) })\n\t        );\n\t      }\n\t\n\t      return null;\n\t    }\n\t  }]);\n\t\n\t  return BeatLoader;\n\t}(_react.Component);\n\t\n\tBeatLoader.propTypes = propTypes;\n\tBeatLoader.defaultProps = {\n\t  loading: true,\n\t  color: '#ffffff',\n\t  size: '15px',\n\t  margin: '2px' };\n\texports.default = BeatLoader;\n\tmodule.exports = exports['default'];\n\t//# sourceMappingURL=BeatLoader.js.map\n\n/***/ }),\n/* 16 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _react = __webpack_require__(1);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _propTypes = __webpack_require__(2);\n\t\n\tvar _propTypes2 = _interopRequireDefault(_propTypes);\n\t\n\tvar _appendVendorPrefix = __webpack_require__(3);\n\t\n\tvar _appendVendorPrefix2 = _interopRequireDefault(_appendVendorPrefix);\n\t\n\tvar _insertKeyframesRule = __webpack_require__(4);\n\t\n\tvar _insertKeyframesRule2 = _interopRequireDefault(_insertKeyframesRule);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar keyframes = {\n\t  '0%, 100%': {\n\t    transform: 'scale(0)'\n\t  },\n\t  '50%': {\n\t    transform: 'scale(1.0)'\n\t  }\n\t};\n\t\n\tvar animationName = (0, _insertKeyframesRule2.default)(keyframes);\n\t\n\tvar propTypes = {\n\t  loading: _propTypes2.default.bool,\n\t  color: _propTypes2.default.string,\n\t  size: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n\t  verticalAlign: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string])\n\t};\n\t\n\tvar ptKeys = Object.keys(propTypes);\n\t\n\tvar BounceLoader = function (_Component) {\n\t  _inherits(BounceLoader, _Component);\n\t\n\t  function BounceLoader() {\n\t    var _ref;\n\t\n\t    var _temp, _this, _ret;\n\t\n\t    _classCallCheck(this, BounceLoader);\n\t\n\t    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n\t      args[_key] = arguments[_key];\n\t    }\n\t\n\t    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = BounceLoader.__proto__ || Object.getPrototypeOf(BounceLoader)).call.apply(_ref, [this].concat(args))), _this), _this.getBallStyle = function () {\n\t      return {\n\t        backgroundColor: _this.props.color,\n\t        width: _this.props.size,\n\t        height: _this.props.size,\n\t        borderRadius: '100%',\n\t        opacity: 0.6,\n\t        position: 'absolute',\n\t        top: 0,\n\t        left: 0,\n\t        verticalAlign: _this.props.verticalAlign\n\t      };\n\t    }, _this.getAnimationStyle = function (i) {\n\t      var animation = [animationName, '2s', i === 1 ? '1s' : '0s', 'infinite', 'ease-in-out'].join(' ');\n\t      var animationFillMode = 'both';\n\t\n\t      return {\n\t        animation: animation,\n\t        animationFillMode: animationFillMode\n\t      };\n\t    }, _this.getStyle = function (i) {\n\t      if (i) {\n\t        return (0, _appendVendorPrefix2.default)(_this.getBallStyle(i), _this.getAnimationStyle(i), {\n\t          border: '0px solid transparent' // fix firefox/chrome/opera rendering\n\t        });\n\t      }\n\t\n\t      return (0, _appendVendorPrefix2.default)({\n\t        width: _this.props.size,\n\t        height: _this.props.size,\n\t        position: 'relative',\n\t        border: '0px solid transparent' // fix firefox/chrome/opera rendering\n\t      });\n\t    }, _temp), _possibleConstructorReturn(_this, _ret);\n\t  }\n\t\n\t  /**\n\t   * @param  {Number} i\n\t   * @return {Object}\n\t   */\n\t\n\t\n\t  /**\n\t   * @param  {Number} i\n\t   * @return {Object}\n\t   */\n\t\n\t\n\t  _createClass(BounceLoader, [{\n\t    key: 'render',\n\t    value: function render() {\n\t      var loading = this.props.loading;\n\t\n\t      if (loading) {\n\t        var props = _extends({}, this.props);\n\t\n\t        if (propTypes && ptKeys) {\n\t          var klen = ptKeys.length;\n\t          for (var i = 0; i < klen; i++) {\n\t            delete props[ptKeys[i]];\n\t          }\n\t        }\n\t\n\t        return _react2.default.createElement(\n\t          'div',\n\t          props,\n\t          _react2.default.createElement(\n\t            'div',\n\t            { style: this.getStyle() },\n\t            _react2.default.createElement('div', { style: this.getStyle(1) }),\n\t            _react2.default.createElement('div', { style: this.getStyle(2) })\n\t          )\n\t        );\n\t      }\n\t\n\t      return null;\n\t    }\n\t  }]);\n\t\n\t  return BounceLoader;\n\t}(_react.Component);\n\t\n\tBounceLoader.propTypes = propTypes;\n\tBounceLoader.defaultProps = {\n\t  loading: true,\n\t  color: '#ffffff',\n\t  size: '60px'\n\t};\n\texports.default = BounceLoader;\n\tmodule.exports = exports['default'];\n\t//# sourceMappingURL=BounceLoader.js.map\n\n/***/ }),\n/* 17 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _react = __webpack_require__(1);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _propTypes = __webpack_require__(2);\n\t\n\tvar _propTypes2 = _interopRequireDefault(_propTypes);\n\t\n\tvar _appendVendorPrefix = __webpack_require__(3);\n\t\n\tvar _appendVendorPrefix2 = _interopRequireDefault(_appendVendorPrefix);\n\t\n\tvar _insertKeyframesRule = __webpack_require__(4);\n\t\n\tvar _insertKeyframesRule2 = _interopRequireDefault(_insertKeyframesRule);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * @type {Object}\n\t */\n\tvar keyframes = {\n\t  '0%': {\n\t    transform: 'rotate(0deg) scale(1)'\n\t  },\n\t  '50%': {\n\t    transform: 'rotate(180deg) scale(0.8)'\n\t  },\n\t  '100%': {\n\t    transform: 'rotate(360deg) scale(1)'\n\t  }\n\t\n\t  /**\n\t   * @type {String}\n\t   */\n\t};var animationName = (0, _insertKeyframesRule2.default)(keyframes);\n\t\n\tvar propTypes = {\n\t  loading: _propTypes2.default.bool,\n\t  color: _propTypes2.default.string,\n\t  size: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n\t  verticalAlign: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string])\n\t};\n\t\n\tvar ptKeys = Object.keys(propTypes);\n\t\n\tvar ClipLoader = function (_Component) {\n\t  _inherits(ClipLoader, _Component);\n\t\n\t  function ClipLoader() {\n\t    var _ref;\n\t\n\t    var _temp, _this, _ret;\n\t\n\t    _classCallCheck(this, ClipLoader);\n\t\n\t    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n\t      args[_key] = arguments[_key];\n\t    }\n\t\n\t    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = ClipLoader.__proto__ || Object.getPrototypeOf(ClipLoader)).call.apply(_ref, [this].concat(args))), _this), _this.getBallStyle = function () {\n\t      return {\n\t        width: _this.props.size,\n\t        height: _this.props.size,\n\t        border: '2px solid',\n\t        borderColor: _this.props.color,\n\t        borderBottomColor: 'transparent',\n\t        borderRadius: '100%',\n\t        background: 'transparent !important',\n\t        verticalAlign: _this.props.verticalAlign\n\t      };\n\t    }, _this.getAnimationStyle = function () {\n\t      var animation = [animationName, '0.75s', '0s', 'infinite', 'linear'].join(' ');\n\t      var animationFillMode = 'both';\n\t\n\t      return {\n\t        animation: animation,\n\t        animationFillMode: animationFillMode\n\t      };\n\t    }, _this.getStyle = function (i) {\n\t      return (0, _appendVendorPrefix2.default)({\n\t        border: '0px solid transparent' // fix firefox/chrome/opera rendering\n\t      }, _this.getBallStyle(i), _this.getAnimationStyle(), {\n\t        display: 'inline-block'\n\t      });\n\t    }, _temp), _possibleConstructorReturn(_this, _ret);\n\t  }\n\t\n\t  /**\n\t   * @param  {Number} i\n\t   * @return {Object}\n\t   */\n\t\n\t\n\t  _createClass(ClipLoader, [{\n\t    key: 'render',\n\t    value: function render() {\n\t      var loading = this.props.loading;\n\t\n\t\n\t      if (loading) {\n\t        var props = _extends({}, this.props);\n\t\n\t        if (propTypes && ptKeys) {\n\t          var klen = ptKeys.length;\n\t          for (var i = 0; i < klen; i++) {\n\t            delete props[ptKeys[i]];\n\t          }\n\t        }\n\t\n\t        return _react2.default.createElement(\n\t          'div',\n\t          props,\n\t          _react2.default.createElement('div', { style: this.getStyle() })\n\t        );\n\t      }\n\t\n\t      return null;\n\t    }\n\t  }]);\n\t\n\t  return ClipLoader;\n\t}(_react.Component);\n\t\n\tClipLoader.propTypes = propTypes;\n\tClipLoader.defaultProps = {\n\t  loading: true,\n\t  color: '#ffffff',\n\t  size: '35px'\n\t};\n\texports.default = ClipLoader;\n\tmodule.exports = exports['default'];\n\t//# sourceMappingURL=ClipLoader.js.map\n\n/***/ }),\n/* 18 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _react = __webpack_require__(1);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _propTypes = __webpack_require__(2);\n\t\n\tvar _propTypes2 = _interopRequireDefault(_propTypes);\n\t\n\tvar _appendVendorPrefix = __webpack_require__(3);\n\t\n\tvar _appendVendorPrefix2 = _interopRequireDefault(_appendVendorPrefix);\n\t\n\tvar _insertKeyframesRule = __webpack_require__(4);\n\t\n\tvar _insertKeyframesRule2 = _interopRequireDefault(_insertKeyframesRule);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * @type {Object}\n\t */\n\tvar rotateKeyframes = {\n\t  '100%': {\n\t    transform: 'rotate(360deg)'\n\t  }\n\t\n\t  /**\n\t   * @type {Object}\n\t   */\n\t};var bounceKeyframes = {\n\t  '0%, 100%': {\n\t    transform: 'scale(0)'\n\t  },\n\t  '50%': {\n\t    transform: 'scale(1.0)'\n\t  }\n\t\n\t  /**\n\t   * @type {String}\n\t   */\n\t};var rotateAnimationName = (0, _insertKeyframesRule2.default)(rotateKeyframes);\n\t\n\t/**\n\t * @type {String}\n\t */\n\tvar bounceAnimationName = (0, _insertKeyframesRule2.default)(bounceKeyframes);\n\t\n\tvar propTypes = {\n\t  loading: _propTypes2.default.bool,\n\t  color: _propTypes2.default.string,\n\t  size: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n\t  margin: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n\t  verticalAlign: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string])\n\t};\n\t\n\tvar ptKeys = Object.keys(propTypes);\n\t\n\tvar DotLoader = function (_Component) {\n\t  _inherits(DotLoader, _Component);\n\t\n\t  function DotLoader() {\n\t    var _ref;\n\t\n\t    var _temp, _this, _ret;\n\t\n\t    _classCallCheck(this, DotLoader);\n\t\n\t    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n\t      args[_key] = arguments[_key];\n\t    }\n\t\n\t    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = DotLoader.__proto__ || Object.getPrototypeOf(DotLoader)).call.apply(_ref, [this].concat(args))), _this), _this.getBallStyle = function (size) {\n\t      return {\n\t        backgroundColor: _this.props.color,\n\t        width: size,\n\t        height: size,\n\t        borderRadius: '100%',\n\t        verticalAlign: _this.props.verticalAlign\n\t      };\n\t    }, _this.getAnimationStyle = function (i) {\n\t      var animation = [i === 0 ? rotateAnimationName : bounceAnimationName, '2s', i === 2 ? '-1s' : '0s', 'infinite', 'linear'].join(' ');\n\t      var animationFillMode = 'forwards';\n\t\n\t      return {\n\t        animation: animation,\n\t        animationFillMode: animationFillMode\n\t      };\n\t    }, _this.getStyle = function (i) {\n\t      var size = _this.props.size | 0;\n\t      var ballSize = size / 2;\n\t\n\t      if (i) {\n\t        return (0, _appendVendorPrefix2.default)(_this.getBallStyle(ballSize), _this.getAnimationStyle(i), {\n\t          position: 'absolute',\n\t          top: i % 2 ? 0 : 'auto',\n\t          bottom: i % 2 ? 'auto' : 0,\n\t          border: '0px solid transparent' // fix firefox/chrome/opera rendering\n\t        });\n\t      }\n\t\n\t      return (0, _appendVendorPrefix2.default)(_this.getAnimationStyle(i), {\n\t        width: size,\n\t        height: size,\n\t        position: 'relative',\n\t        border: '0px solid transparent' // fix firefox/chrome/opera rendering\n\t      });\n\t    }, _temp), _possibleConstructorReturn(_this, _ret);\n\t  }\n\t\n\t  /**\n\t   * @param  {String} size\n\t   * @return {Object}\n\t   */\n\t\n\t\n\t  /**\n\t   * @param  {Number} i\n\t   * @return {Object}\n\t   */\n\t\n\t\n\t  /**\n\t   * @param  {Number} i\n\t   * @return {Object}\n\t   */\n\t\n\t\n\t  _createClass(DotLoader, [{\n\t    key: 'render',\n\t    value: function render() {\n\t      var loading = this.props.loading;\n\t\n\t\n\t      if (loading) {\n\t        var props = _extends({}, this.props);\n\t\n\t        if (propTypes && ptKeys) {\n\t          var klen = ptKeys.length;\n\t          for (var i = 0; i < klen; i++) {\n\t            delete props[ptKeys[i]];\n\t          }\n\t        }\n\t\n\t        return _react2.default.createElement(\n\t          'div',\n\t          props,\n\t          _react2.default.createElement(\n\t            'div',\n\t            { style: this.getStyle(0) },\n\t            _react2.default.createElement('div', { style: this.getStyle(1) }),\n\t            _react2.default.createElement('div', { style: this.getStyle(2) })\n\t          )\n\t        );\n\t      }\n\t\n\t      return null;\n\t    }\n\t  }]);\n\t\n\t  return DotLoader;\n\t}(_react.Component);\n\t\n\tDotLoader.propTypes = propTypes;\n\tDotLoader.defaultProps = {\n\t  loading: true,\n\t  color: '#ffffff',\n\t  size: '60px' };\n\texports.default = DotLoader;\n\tmodule.exports = exports['default'];\n\t//# sourceMappingURL=DotLoader.js.map\n\n/***/ }),\n/* 19 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _react = __webpack_require__(1);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _propTypes = __webpack_require__(2);\n\t\n\tvar _propTypes2 = _interopRequireDefault(_propTypes);\n\t\n\tvar _appendVendorPrefix = __webpack_require__(3);\n\t\n\tvar _appendVendorPrefix2 = _interopRequireDefault(_appendVendorPrefix);\n\t\n\tvar _insertKeyframesRule = __webpack_require__(4);\n\t\n\tvar _insertKeyframesRule2 = _interopRequireDefault(_insertKeyframesRule);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * @type {Object}\n\t */\n\tvar keyframes = {\n\t  '50%': {\n\t    opacity: 0.3\n\t  },\n\t  '100%': {\n\t    opacity: 1\n\t  }\n\t\n\t  /**\n\t   * @type {String}\n\t   */\n\t};var animationName = (0, _insertKeyframesRule2.default)(keyframes);\n\t\n\tvar propTypes = {\n\t  loading: _propTypes2.default.bool,\n\t  color: _propTypes2.default.string,\n\t  height: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n\t  width: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n\t  margin: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n\t  radius: _propTypes2.default.string,\n\t  verticalAlign: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string])\n\t};\n\t\n\tvar ptKeys = Object.keys(propTypes);\n\t\n\tvar FadeLoader = function (_Component) {\n\t  _inherits(FadeLoader, _Component);\n\t\n\t  function FadeLoader() {\n\t    var _ref;\n\t\n\t    var _temp, _this, _ret;\n\t\n\t    _classCallCheck(this, FadeLoader);\n\t\n\t    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n\t      args[_key] = arguments[_key];\n\t    }\n\t\n\t    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = FadeLoader.__proto__ || Object.getPrototypeOf(FadeLoader)).call.apply(_ref, [this].concat(args))), _this), _this.getLineStyle = function () {\n\t      return {\n\t        backgroundColor: _this.props.color,\n\t        height: _this.props.height,\n\t        width: _this.props.width,\n\t        margin: _this.props.margin,\n\t        borderRadius: _this.props.radius,\n\t        verticalAlign: _this.props.verticalAlign\n\t      };\n\t    }, _this.getAnimationStyle = function (i) {\n\t      var animation = [animationName, '1.2s', i * 0.12 + 's', 'infinite', 'ease-in-out'].join(' ');\n\t      var animationFillMode = 'both';\n\t\n\t      return {\n\t        animation: animation,\n\t        animationFillMode: animationFillMode\n\t      };\n\t    }, _this.getPosStyle = function (i) {\n\t      var radius = 20;\n\t      var quarter = radius / 2 + radius / 5.5;\n\t\n\t      var lines = {\n\t        l1: {\n\t          top: radius,\n\t          left: 0\n\t        },\n\t        l2: {\n\t          top: quarter,\n\t          left: quarter,\n\t          transform: 'rotate(-45deg)'\n\t        },\n\t        l3: {\n\t          top: 0,\n\t          left: radius,\n\t          transform: 'rotate(90deg)'\n\t        },\n\t        l4: {\n\t          top: -quarter,\n\t          left: quarter,\n\t          transform: 'rotate(45deg)'\n\t        },\n\t        l5: {\n\t          top: -radius,\n\t          left: 0\n\t        },\n\t        l6: {\n\t          top: -quarter,\n\t          left: -quarter,\n\t          transform: 'rotate(-45deg)'\n\t        },\n\t        l7: {\n\t          top: 0,\n\t          left: -radius,\n\t          transform: 'rotate(90deg)'\n\t        },\n\t        l8: {\n\t          top: quarter,\n\t          left: -quarter,\n\t          transform: 'rotate(45deg)'\n\t        }\n\t      };\n\t\n\t      return lines['l' + i];\n\t    }, _this.getStyle = function (i) {\n\t      return (0, _appendVendorPrefix2.default)(_this.getLineStyle(i), _this.getPosStyle(i), _this.getAnimationStyle(i), {\n\t        position: 'absolute',\n\t        border: '0px solid transparent' // fix firefox/chrome/opera rendering\n\t      });\n\t    }, _temp), _possibleConstructorReturn(_this, _ret);\n\t  }\n\t\n\t  /**\n\t   * @param  {Number} i\n\t   * @return {Object}\n\t   */\n\t\n\t\n\t  /**\n\t   * @param  {Number} i\n\t   * @return {Object}\n\t   */\n\t\n\t\n\t  /**\n\t   * @param  {Number} i\n\t   * @return {Object}\n\t   */\n\t\n\t\n\t  _createClass(FadeLoader, [{\n\t    key: 'render',\n\t    value: function render() {\n\t      var loading = this.props.loading;\n\t\n\t\n\t      if (loading) {\n\t        var style = {\n\t          position: 'relative',\n\t          fontSize: 0\n\t        };\n\t\n\t        var props = _extends({}, this.props);\n\t\n\t        if (propTypes && ptKeys) {\n\t          var klen = ptKeys.length;\n\t          for (var i = 0; i < klen; i++) {\n\t            delete props[ptKeys[i]];\n\t          }\n\t        }\n\t\n\t        return _react2.default.createElement(\n\t          'div',\n\t          props,\n\t          _react2.default.createElement(\n\t            'div',\n\t            { style: style },\n\t            _react2.default.createElement('div', { style: this.getStyle(1) }),\n\t            _react2.default.createElement('div', { style: this.getStyle(2) }),\n\t            _react2.default.createElement('div', { style: this.getStyle(3) }),\n\t            _react2.default.createElement('div', { style: this.getStyle(4) }),\n\t            _react2.default.createElement('div', { style: this.getStyle(5) }),\n\t            _react2.default.createElement('div', { style: this.getStyle(6) }),\n\t            _react2.default.createElement('div', { style: this.getStyle(7) }),\n\t            _react2.default.createElement('div', { style: this.getStyle(8) })\n\t          )\n\t        );\n\t      }\n\t\n\t      return null;\n\t    }\n\t  }]);\n\t\n\t  return FadeLoader;\n\t}(_react.Component);\n\t\n\tFadeLoader.propTypes = propTypes;\n\tFadeLoader.defaultProps = {\n\t  loading: true,\n\t  color: '#ffffff',\n\t  height: '15px',\n\t  width: '5px',\n\t  margin: '2px',\n\t  radius: '2px'\n\t};\n\texports.default = FadeLoader;\n\tmodule.exports = exports['default'];\n\t//# sourceMappingURL=FadeLoader.js.map\n\n/***/ }),\n/* 20 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _react = __webpack_require__(1);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _propTypes = __webpack_require__(2);\n\t\n\tvar _propTypes2 = _interopRequireDefault(_propTypes);\n\t\n\tvar _appendVendorPrefix = __webpack_require__(3);\n\t\n\tvar _appendVendorPrefix2 = _interopRequireDefault(_appendVendorPrefix);\n\t\n\tvar _insertKeyframesRule = __webpack_require__(4);\n\t\n\tvar _insertKeyframesRule2 = _interopRequireDefault(_insertKeyframesRule);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * @type {Object}\n\t */\n\tvar keyframes = {\n\t  '0%': {\n\t    transform: 'scale(1)'\n\t  },\n\t  '50%': {\n\t    transform: 'scale(0.5)',\n\t    opacity: 0.7\n\t  },\n\t  '100%': {\n\t    transform: 'scale(1)',\n\t    opacity: 1\n\t  }\n\t\n\t  /**\n\t   * @type {String}\n\t   */\n\t};var animationName = (0, _insertKeyframesRule2.default)(keyframes);\n\t\n\t/**\n\t * @param  {Number} top\n\t * @return {Number}\n\t */\n\tfunction random(top) {\n\t  return Math.random() * top;\n\t}\n\t\n\tvar propTypes = {\n\t  loading: _propTypes2.default.bool,\n\t  color: _propTypes2.default.string,\n\t  size: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n\t  margin: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n\t  verticalAlign: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string])\n\t};\n\t\n\tvar ptKeys = Object.keys(propTypes);\n\t\n\tvar GridLoader = function (_Component) {\n\t  _inherits(GridLoader, _Component);\n\t\n\t  function GridLoader() {\n\t    var _ref;\n\t\n\t    var _temp, _this, _ret;\n\t\n\t    _classCallCheck(this, GridLoader);\n\t\n\t    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n\t      args[_key] = arguments[_key];\n\t    }\n\t\n\t    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = GridLoader.__proto__ || Object.getPrototypeOf(GridLoader)).call.apply(_ref, [this].concat(args))), _this), _this.getBallStyle = function () {\n\t      return {\n\t        backgroundColor: _this.props.color,\n\t        width: _this.props.size,\n\t        height: _this.props.size,\n\t        margin: _this.props.margin,\n\t        borderRadius: '100%',\n\t        verticalAlign: _this.props.verticalAlign\n\t      };\n\t    }, _this.getAnimationStyle = function () {\n\t      var animationDuration = random(100) / 100 + 0.6 + 's';\n\t      var animationDelay = random(100) / 100 - 0.2 + 's';\n\t\n\t      var animation = [animationName, animationDuration, animationDelay, 'infinite', 'ease'].join(' ');\n\t      var animationFillMode = 'both';\n\t\n\t      return {\n\t        animation: animation,\n\t        animationFillMode: animationFillMode\n\t      };\n\t    }, _this.getStyle = function (i) {\n\t      return (0, _appendVendorPrefix2.default)(_this.getBallStyle(i), _this.getAnimationStyle(i), {\n\t        display: 'inline-block',\n\t        border: '0px solid transparent' // fix firefox/chrome/opera rendering\n\t      });\n\t    }, _temp), _possibleConstructorReturn(_this, _ret);\n\t  }\n\t\n\t  /**\n\t   * @param  {Number} i\n\t   * @return {Object}\n\t   */\n\t\n\t\n\t  _createClass(GridLoader, [{\n\t    key: 'render',\n\t    value: function render() {\n\t      var loading = this.props.loading;\n\t\n\t\n\t      if (loading) {\n\t        var style = {\n\t          width: parseFloat(this.props.size) * 3 + parseFloat(this.props.margin) * 6,\n\t          fontSize: 0\n\t        };\n\t\n\t        var props = _extends({}, this.props);\n\t\n\t        if (propTypes && ptKeys) {\n\t          var klen = ptKeys.length;\n\t          for (var i = 0; i < klen; i++) {\n\t            delete props[ptKeys[i]];\n\t          }\n\t        }\n\t\n\t        return _react2.default.createElement(\n\t          'div',\n\t          props,\n\t          _react2.default.createElement(\n\t            'div',\n\t            { style: style },\n\t            _react2.default.createElement('div', { style: this.getStyle(1) }),\n\t            _react2.default.createElement('div', { style: this.getStyle(2) }),\n\t            _react2.default.createElement('div', { style: this.getStyle(3) }),\n\t            _react2.default.createElement('div', { style: this.getStyle(4) }),\n\t            _react2.default.createElement('div', { style: this.getStyle(5) }),\n\t            _react2.default.createElement('div', { style: this.getStyle(6) }),\n\t            _react2.default.createElement('div', { style: this.getStyle(7) }),\n\t            _react2.default.createElement('div', { style: this.getStyle(8) }),\n\t            _react2.default.createElement('div', { style: this.getStyle(9) })\n\t          )\n\t        );\n\t      }\n\t\n\t      return null;\n\t    }\n\t  }]);\n\t\n\t  return GridLoader;\n\t}(_react.Component);\n\t\n\tGridLoader.propTypes = propTypes;\n\tGridLoader.defaultProps = {\n\t  loading: true,\n\t  color: '#ffffff',\n\t  size: '15px',\n\t  margin: '2px'\n\t};\n\texports.default = GridLoader;\n\tmodule.exports = exports['default'];\n\t//# sourceMappingURL=GridLoader.js.map\n\n/***/ }),\n/* 21 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.SyncLoader = exports.SquareLoader = exports.SkewLoader = exports.ScaleLoader = exports.RotateLoader = exports.RiseLoader = exports.RingLoader = exports.PulseLoader = exports.PacmanLoader = exports.MoonLoader = exports.GridLoader = exports.FadeLoader = exports.DotLoader = exports.ClipLoader = exports.BounceLoader = exports.BeatLoader = undefined;\n\t\n\tvar _BeatLoader2 = __webpack_require__(15);\n\t\n\tvar _BeatLoader3 = _interopRequireDefault(_BeatLoader2);\n\t\n\tvar _BounceLoader2 = __webpack_require__(16);\n\t\n\tvar _BounceLoader3 = _interopRequireDefault(_BounceLoader2);\n\t\n\tvar _ClipLoader2 = __webpack_require__(17);\n\t\n\tvar _ClipLoader3 = _interopRequireDefault(_ClipLoader2);\n\t\n\tvar _DotLoader2 = __webpack_require__(18);\n\t\n\tvar _DotLoader3 = _interopRequireDefault(_DotLoader2);\n\t\n\tvar _FadeLoader2 = __webpack_require__(19);\n\t\n\tvar _FadeLoader3 = _interopRequireDefault(_FadeLoader2);\n\t\n\tvar _GridLoader2 = __webpack_require__(20);\n\t\n\tvar _GridLoader3 = _interopRequireDefault(_GridLoader2);\n\t\n\tvar _MoonLoader2 = __webpack_require__(22);\n\t\n\tvar _MoonLoader3 = _interopRequireDefault(_MoonLoader2);\n\t\n\tvar _PacmanLoader2 = __webpack_require__(23);\n\t\n\tvar _PacmanLoader3 = _interopRequireDefault(_PacmanLoader2);\n\t\n\tvar _PulseLoader2 = __webpack_require__(24);\n\t\n\tvar _PulseLoader3 = _interopRequireDefault(_PulseLoader2);\n\t\n\tvar _RingLoader2 = __webpack_require__(25);\n\t\n\tvar _RingLoader3 = _interopRequireDefault(_RingLoader2);\n\t\n\tvar _RiseLoader2 = __webpack_require__(26);\n\t\n\tvar _RiseLoader3 = _interopRequireDefault(_RiseLoader2);\n\t\n\tvar _RotateLoader2 = __webpack_require__(27);\n\t\n\tvar _RotateLoader3 = _interopRequireDefault(_RotateLoader2);\n\t\n\tvar _ScaleLoader2 = __webpack_require__(28);\n\t\n\tvar _ScaleLoader3 = _interopRequireDefault(_ScaleLoader2);\n\t\n\tvar _SkewLoader2 = __webpack_require__(29);\n\t\n\tvar _SkewLoader3 = _interopRequireDefault(_SkewLoader2);\n\t\n\tvar _SquareLoader2 = __webpack_require__(30);\n\t\n\tvar _SquareLoader3 = _interopRequireDefault(_SquareLoader2);\n\t\n\tvar _SyncLoader2 = __webpack_require__(31);\n\t\n\tvar _SyncLoader3 = _interopRequireDefault(_SyncLoader2);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\texports.BeatLoader = _BeatLoader3.default;\n\texports.BounceLoader = _BounceLoader3.default;\n\texports.ClipLoader = _ClipLoader3.default;\n\texports.DotLoader = _DotLoader3.default;\n\texports.FadeLoader = _FadeLoader3.default;\n\texports.GridLoader = _GridLoader3.default;\n\texports.MoonLoader = _MoonLoader3.default;\n\texports.PacmanLoader = _PacmanLoader3.default;\n\texports.PulseLoader = _PulseLoader3.default;\n\texports.RingLoader = _RingLoader3.default;\n\texports.RiseLoader = _RiseLoader3.default;\n\texports.RotateLoader = _RotateLoader3.default;\n\texports.ScaleLoader = _ScaleLoader3.default;\n\texports.SkewLoader = _SkewLoader3.default;\n\texports.SquareLoader = _SquareLoader3.default;\n\texports.SyncLoader = _SyncLoader3.default;\n\t//# sourceMappingURL=Halogenium.js.map\n\n/***/ }),\n/* 22 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _react = __webpack_require__(1);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _propTypes = __webpack_require__(2);\n\t\n\tvar _propTypes2 = _interopRequireDefault(_propTypes);\n\t\n\tvar _appendVendorPrefix = __webpack_require__(3);\n\t\n\tvar _appendVendorPrefix2 = _interopRequireDefault(_appendVendorPrefix);\n\t\n\tvar _insertKeyframesRule = __webpack_require__(4);\n\t\n\tvar _insertKeyframesRule2 = _interopRequireDefault(_insertKeyframesRule);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * @type {Object}\n\t */\n\tvar keyframes = {\n\t  '100%': {\n\t    transform: 'rotate(360deg)'\n\t  }\n\t\n\t  /**\n\t   * @type {String}\n\t   */\n\t};var animationName = (0, _insertKeyframesRule2.default)(keyframes);\n\t\n\tvar propTypes = {\n\t  loading: _propTypes2.default.bool,\n\t  color: _propTypes2.default.string,\n\t  size: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n\t  margin: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n\t  verticalAlign: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string])\n\t};\n\t\n\tvar ptKeys = Object.keys(propTypes);\n\t\n\tvar MoonLoader = function (_Component) {\n\t  _inherits(MoonLoader, _Component);\n\t\n\t  function MoonLoader() {\n\t    var _ref;\n\t\n\t    var _temp, _this, _ret;\n\t\n\t    _classCallCheck(this, MoonLoader);\n\t\n\t    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n\t      args[_key] = arguments[_key];\n\t    }\n\t\n\t    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = MoonLoader.__proto__ || Object.getPrototypeOf(MoonLoader)).call.apply(_ref, [this].concat(args))), _this), _this.getBallStyle = function (size) {\n\t      return {\n\t        width: size,\n\t        height: size,\n\t        borderRadius: '100%',\n\t        verticalAlign: _this.props.verticalAlign\n\t      };\n\t    }, _this.getAnimationStyle = function () {\n\t      var animation = [animationName, '0.6s', '0s', 'infinite', 'linear'].join(' ');\n\t      var animationFillMode = 'forwards';\n\t\n\t      return {\n\t        animation: animation,\n\t        animationFillMode: animationFillMode\n\t      };\n\t    }, _this.getStyle = function (i) {\n\t      var size = _this.props.size | 0;\n\t      var moonSize = size / 7;\n\t\n\t      if (i === 1) {\n\t        return (0, _appendVendorPrefix2.default)({\n\t          border: '0px solid transparent' // fix firefox/chrome/opera rendering\n\t        }, _this.getBallStyle(moonSize), _this.getAnimationStyle(i), {\n\t          backgroundColor: _this.props.color,\n\t          opacity: '0.8',\n\t          position: 'absolute',\n\t          top: size / 2 - moonSize / 2\n\t        });\n\t      } else if (i === 2) {\n\t        return (0, _appendVendorPrefix2.default)({\n\t          border: '0px solid transparent' // fix firefox/chrome/opera rendering\n\t        }, _this.getBallStyle(size), {\n\t          border: moonSize + 'px solid ' + _this.props.color,\n\t          opacity: 0.1\n\t        });\n\t      }\n\t      return (0, _appendVendorPrefix2.default)({\n\t        border: '0px solid transparent' // fix firefox/chrome/opera rendering\n\t      }, _this.getAnimationStyle(i), {\n\t        position: 'relative'\n\t      });\n\t    }, _temp), _possibleConstructorReturn(_this, _ret);\n\t  }\n\t\n\t  /**\n\t   * @param  {String} size\n\t   * @return {Object}\n\t   */\n\t\n\t\n\t  /**\n\t   * @param  {Number} i\n\t   * @return {Object}\n\t   */\n\t\n\t\n\t  _createClass(MoonLoader, [{\n\t    key: 'render',\n\t    value: function render() {\n\t      var loading = this.props.loading;\n\t\n\t\n\t      if (loading) {\n\t        var props = _extends({}, this.props);\n\t\n\t        if (propTypes && ptKeys) {\n\t          var klen = ptKeys.length;\n\t          for (var i = 0; i < klen; i++) {\n\t            delete props[ptKeys[i]];\n\t          }\n\t        }\n\t\n\t        return _react2.default.createElement(\n\t          'div',\n\t          props,\n\t          _react2.default.createElement(\n\t            'div',\n\t            { style: this.getStyle(0) },\n\t            _react2.default.createElement('div', { style: this.getStyle(1) }),\n\t            _react2.default.createElement('div', { style: this.getStyle(2) })\n\t          )\n\t        );\n\t      }\n\t\n\t      return null;\n\t    }\n\t  }]);\n\t\n\t  return MoonLoader;\n\t}(_react.Component);\n\t\n\tMoonLoader.propTypes = propTypes;\n\tMoonLoader.defaultProps = {\n\t  loading: true,\n\t  color: '#ffffff',\n\t  size: '60px' };\n\texports.default = MoonLoader;\n\tmodule.exports = exports['default'];\n\t//# sourceMappingURL=MoonLoader.js.map\n\n/***/ }),\n/* 23 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _react = __webpack_require__(1);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _propTypes = __webpack_require__(2);\n\t\n\tvar _propTypes2 = _interopRequireDefault(_propTypes);\n\t\n\tvar _appendVendorPrefix = __webpack_require__(3);\n\t\n\tvar _appendVendorPrefix2 = _interopRequireDefault(_appendVendorPrefix);\n\t\n\tvar _insertKeyframesRule = __webpack_require__(4);\n\t\n\tvar _insertKeyframesRule2 = _interopRequireDefault(_insertKeyframesRule);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * @type {Object}\n\t */\n\tvar animations = {};\n\t\n\tvar propTypes = {\n\t  loading: _propTypes2.default.bool,\n\t  color: _propTypes2.default.string,\n\t  size: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n\t  margin: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n\t  verticalAlign: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string])\n\t};\n\t\n\tvar ptKeys = Object.keys(propTypes);\n\t\n\tvar PacmanLoader = function (_Component) {\n\t  _inherits(PacmanLoader, _Component);\n\t\n\t  function PacmanLoader() {\n\t    var _ref;\n\t\n\t    var _temp, _this, _ret;\n\t\n\t    _classCallCheck(this, PacmanLoader);\n\t\n\t    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n\t      args[_key] = arguments[_key];\n\t    }\n\t\n\t    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = PacmanLoader.__proto__ || Object.getPrototypeOf(PacmanLoader)).call.apply(_ref, [this].concat(args))), _this), _this.getBallStyle = function () {\n\t      return {\n\t        backgroundColor: _this.props.color,\n\t        width: _this.props.size,\n\t        height: _this.props.size,\n\t        margin: _this.props.margin,\n\t        borderRadius: '100%',\n\t        verticalAlign: _this.props.verticalAlign,\n\t        border: '0px solid transparent' // fix firefox/chrome/opera rendering\n\t      };\n\t    }, _this.getAnimationStyle = function (i) {\n\t      var size = _this.props.size;\n\t      var animationName = animations[size];\n\t\n\t      if (!animationName) {\n\t        var keyframes = {\n\t          '75%': {\n\t            opacity: 0.7\n\t          },\n\t          '100%': {\n\t            transform: 'translate(' + -4 * size + 'px, ' + -size / 4 + 'px)'\n\t          }\n\t        };\n\t        animationName = animations[size] = (0, _insertKeyframesRule2.default)(keyframes);\n\t      }\n\t\n\t      var animation = [animationName, '1s', i * 0.25 + 's', 'infinite', 'linear'].join(' ');\n\t      var animationFillMode = 'both';\n\t\n\t      return {\n\t        animation: animation,\n\t        animationFillMode: animationFillMode\n\t      };\n\t    }, _this.getStyle = function (i) {\n\t      if (i | 0 === 1) {\n\t        var s1 = _this.props.size + 'px solid transparent';\n\t        var s2 = _this.props.size + 'px solid ' + _this.props.color;\n\t\n\t        return {\n\t          width: 0,\n\t          height: 0,\n\t          borderRight: s1,\n\t          borderTop: s2,\n\t          borderLeft: s2,\n\t          borderBottom: s2,\n\t          borderRadius: _this.props.size\n\t        };\n\t      }\n\t\n\t      return (0, _appendVendorPrefix2.default)(_this.getBallStyle(i), _this.getAnimationStyle(i), {\n\t        width: 10,\n\t        height: 10,\n\t        transform: 'translate(0, ' + -_this.props.size / 4 + 'px)',\n\t        position: 'absolute',\n\t        top: 25,\n\t        left: 100\n\t      });\n\t    }, _this.renderLoader = function (loading) {\n\t      if (loading) {\n\t        var style = {\n\t          position: 'relative',\n\t          fontSize: 0\n\t        };\n\t        var props = Object.assign({}, _this.props);\n\t\n\t        if (propTypes && ptKeys) {\n\t          var klen = ptKeys.length;\n\t          for (var i = 0; i < klen; i++) {\n\t            delete props[ptKeys[i]];\n\t          }\n\t        }\n\t\n\t        return _react2.default.createElement(\n\t          'div',\n\t          props,\n\t          _react2.default.createElement(\n\t            'div',\n\t            { style: style },\n\t            _react2.default.createElement('div', { style: _this.getStyle(1) }),\n\t            _react2.default.createElement('div', { style: _this.getStyle(2) }),\n\t            _react2.default.createElement('div', { style: _this.getStyle(3) }),\n\t            _react2.default.createElement('div', { style: _this.getStyle(4) }),\n\t            _react2.default.createElement('div', { style: _this.getStyle(5) })\n\t          )\n\t        );\n\t      }\n\t\n\t      return null;\n\t    }, _temp), _possibleConstructorReturn(_this, _ret);\n\t  }\n\t\n\t  /**\n\t   * @return {Object}\n\t   */\n\t\n\t\n\t  /**\n\t   * @return {Object}\n\t   */\n\t\n\t\n\t  /**\n\t   * @param  {Number} i\n\t   * @return {Object}\n\t   */\n\t\n\t\n\t  _createClass(PacmanLoader, [{\n\t    key: 'render',\n\t    value: function render() {\n\t      return this.renderLoader(this.props.loading);\n\t    }\n\t  }]);\n\t\n\t  return PacmanLoader;\n\t}(_react.Component);\n\t\n\tPacmanLoader.propTypes = propTypes;\n\tPacmanLoader.defaultProps = {\n\t  loading: true,\n\t  color: '#fff',\n\t  size: 25,\n\t  margin: 2 };\n\texports.default = PacmanLoader;\n\tmodule.exports = exports['default'];\n\t//# sourceMappingURL=PacmanLoader.js.map\n\n/***/ }),\n/* 24 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _react = __webpack_require__(1);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _propTypes = __webpack_require__(2);\n\t\n\tvar _propTypes2 = _interopRequireDefault(_propTypes);\n\t\n\tvar _appendVendorPrefix = __webpack_require__(3);\n\t\n\tvar _appendVendorPrefix2 = _interopRequireDefault(_appendVendorPrefix);\n\t\n\tvar _insertKeyframesRule = __webpack_require__(4);\n\t\n\tvar _insertKeyframesRule2 = _interopRequireDefault(_insertKeyframesRule);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * @type {Object}\n\t */\n\tvar keyframes = {\n\t  '0%': {\n\t    transform: 'scale(1)',\n\t    opacity: 1\n\t  },\n\t  '45%': {\n\t    transform: 'scale(0.1)',\n\t    opacity: 0.7\n\t  },\n\t  '80%': {\n\t    transform: 'scale(1)',\n\t    opacity: 1\n\t  }\n\t\n\t  /**\n\t   * @type {String}\n\t   */\n\t};var animationName = (0, _insertKeyframesRule2.default)(keyframes);\n\t\n\tvar propTypes = {\n\t  loading: _propTypes2.default.bool,\n\t  color: _propTypes2.default.string,\n\t  size: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n\t  margin: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n\t  verticalAlign: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string])\n\t};\n\t\n\tvar ptKeys = Object.keys(propTypes);\n\t\n\tvar PulseLoader = function (_Component) {\n\t  _inherits(PulseLoader, _Component);\n\t\n\t  function PulseLoader() {\n\t    var _ref;\n\t\n\t    var _temp, _this, _ret;\n\t\n\t    _classCallCheck(this, PulseLoader);\n\t\n\t    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n\t      args[_key] = arguments[_key];\n\t    }\n\t\n\t    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = PulseLoader.__proto__ || Object.getPrototypeOf(PulseLoader)).call.apply(_ref, [this].concat(args))), _this), _this.getBallStyle = function () {\n\t      return {\n\t        backgroundColor: _this.props.color,\n\t        width: _this.props.size,\n\t        height: _this.props.size,\n\t        margin: _this.props.margin,\n\t        borderRadius: '100%',\n\t        verticalAlign: _this.props.verticalAlign\n\t      };\n\t    }, _this.getAnimationStyle = function (i) {\n\t      var animation = [animationName, '0.75s', i * 0.12 + 's', 'infinite', 'cubic-bezier(.2,.68,.18,1.08)'].join(' ');\n\t      var animationFillMode = 'both';\n\t\n\t      return {\n\t        animation: animation,\n\t        animationFillMode: animationFillMode\n\t      };\n\t    }, _this.getStyle = function (i) {\n\t      return (0, _appendVendorPrefix2.default)(_this.getBallStyle(i), _this.getAnimationStyle(i), {\n\t        display: 'inline-block',\n\t        border: '0px solid transparent' // fix firefox/chrome/opera rendering\n\t      });\n\t    }, _this.renderLoader = function (loading) {\n\t      if (loading) {\n\t        var props = Object.assign({}, _this.props);\n\t\n\t        if (propTypes && ptKeys) {\n\t          var klen = ptKeys.length;\n\t          for (var i = 0; i < klen; i++) {\n\t            delete props[ptKeys[i]];\n\t          }\n\t        }\n\t\n\t        return _react2.default.createElement(\n\t          'div',\n\t          props,\n\t          _react2.default.createElement('div', { style: _this.getStyle(1) }),\n\t          _react2.default.createElement('div', { style: _this.getStyle(2) }),\n\t          _react2.default.createElement('div', { style: _this.getStyle(3) })\n\t        );\n\t      }\n\t\n\t      return null;\n\t    }, _temp), _possibleConstructorReturn(_this, _ret);\n\t  }\n\t  /**\n\t   * @type {Object}\n\t   */\n\t\n\t\n\t  /**\n\t   * @return {Object}\n\t   */\n\t\n\t\n\t  /**\n\t   * @param  {Number} i\n\t   * @return {Object}\n\t   */\n\t\n\t\n\t  /**\n\t   * @param  {Number} i\n\t   * @return {Object}\n\t   */\n\t\n\t\n\t  /**\n\t   * @param  {Boolean} loading\n\t   * @return {ReactComponent || null}\n\t   */\n\t\n\t\n\t  _createClass(PulseLoader, [{\n\t    key: 'render',\n\t    value: function render() {\n\t      return this.renderLoader(this.props.loading);\n\t    }\n\t  }]);\n\t\n\t  return PulseLoader;\n\t}(_react.Component);\n\t\n\tPulseLoader.propTypes = propTypes;\n\tPulseLoader.defaultProps = {\n\t  loading: true,\n\t  color: '#ffffff',\n\t  size: '15px',\n\t  margin: '2px' };\n\texports.default = PulseLoader;\n\tmodule.exports = exports['default'];\n\t//# sourceMappingURL=PulseLoader.js.map\n\n/***/ }),\n/* 25 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _react = __webpack_require__(1);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _propTypes = __webpack_require__(2);\n\t\n\tvar _propTypes2 = _interopRequireDefault(_propTypes);\n\t\n\tvar _appendVendorPrefix = __webpack_require__(3);\n\t\n\tvar _appendVendorPrefix2 = _interopRequireDefault(_appendVendorPrefix);\n\t\n\tvar _insertKeyframesRule = __webpack_require__(4);\n\t\n\tvar _insertKeyframesRule2 = _interopRequireDefault(_insertKeyframesRule);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * @type {Object}\n\t */\n\tvar rightRotateKeyframes = {\n\t  '0%': {\n\t    transform: 'rotateX(0deg) rotateY(0deg) rotateZ(0deg)'\n\t\n\t  },\n\t  '100%': {\n\t    transform: 'rotateX(180deg) rotateY(360deg) rotateZ(360deg)'\n\t  }\n\t\n\t  /**\n\t   * @type {Object}\n\t   */\n\t};var leftRotateKeyframes = {\n\t  '0%': {\n\t    transform: 'rotateX(0deg) rotateY(0deg) rotateZ(0deg)'\n\t  },\n\t  '100%': {\n\t    transform: 'rotateX(360deg) rotateY(180deg) rotateZ(360deg)'\n\t  }\n\t\n\t  /**\n\t   * @type {String}\n\t   */\n\t};var rightRotateAnimationName = (0, _insertKeyframesRule2.default)(rightRotateKeyframes);\n\t\n\t/**\n\t * @type {String}\n\t */\n\tvar leftRotateAnimationName = (0, _insertKeyframesRule2.default)(leftRotateKeyframes);\n\t\n\tvar propTypes = {\n\t  loading: _propTypes2.default.bool,\n\t  color: _propTypes2.default.string,\n\t  size: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n\t  margin: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n\t  verticalAlign: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string])\n\t};\n\t\n\tvar ptKeys = Object.keys(propTypes);\n\t\n\tvar RingLoader = function (_Component) {\n\t  _inherits(RingLoader, _Component);\n\t\n\t  function RingLoader() {\n\t    var _ref;\n\t\n\t    var _temp, _this, _ret;\n\t\n\t    _classCallCheck(this, RingLoader);\n\t\n\t    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n\t      args[_key] = arguments[_key];\n\t    }\n\t\n\t    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = RingLoader.__proto__ || Object.getPrototypeOf(RingLoader)).call.apply(_ref, [this].concat(args))), _this), _this.getCircleStyle = function (size) {\n\t      return {\n\t        width: size,\n\t        height: size,\n\t        border: size / 10 + 'px solid ' + _this.props.color,\n\t        opacity: 0.4,\n\t        borderRadius: '100%',\n\t        verticalAlign: _this.props.verticalAlign\n\t      };\n\t    }, _this.getAnimationStyle = function (i) {\n\t      var animation = [i | 0 === 1 ? rightRotateAnimationName : leftRotateAnimationName, '2s', '0s', 'infinite', 'linear'].join(' ');\n\t\n\t      var animationFillMode = 'forwards';\n\t      var perspective = '800px';\n\t\n\t      return {\n\t        perspective: perspective,\n\t        animation: animation,\n\t        animationFillMode: animationFillMode\n\t      };\n\t    }, _this.getStyle = function (i) {\n\t      var size = parseInt(_this.props.size, 10);\n\t\n\t      if (i) {\n\t        return (0, _appendVendorPrefix2.default)({\n\t          border: '0px solid transparent' // fix firefox/chrome/opera rendering\n\t        }, _this.getCircleStyle(size), _this.getAnimationStyle(i), {\n\t          position: 'absolute',\n\t          top: 0,\n\t          left: 0\n\t        });\n\t      }\n\t\n\t      return {\n\t        width: size,\n\t        height: size,\n\t        position: 'relative',\n\t        border: '0px solid transparent' // fix firefox/chrome/opera rendering\n\t      };\n\t    }, _this.renderLoader = function (loading) {\n\t      if (loading) {\n\t        var props = Object.assign({}, _this.props);\n\t\n\t        if (propTypes && ptKeys) {\n\t          var klen = ptKeys.length;\n\t          for (var i = 0; i < klen; i++) {\n\t            delete props[ptKeys[i]];\n\t          }\n\t        }\n\t\n\t        return _react2.default.createElement(\n\t          'div',\n\t          props,\n\t          _react2.default.createElement(\n\t            'div',\n\t            { style: _this.getStyle(0) },\n\t            _react2.default.createElement('div', { style: _this.getStyle(1) }),\n\t            _react2.default.createElement('div', { style: _this.getStyle(2) })\n\t          )\n\t        );\n\t      }\n\t\n\t      return null;\n\t    }, _temp), _possibleConstructorReturn(_this, _ret);\n\t  }\n\t  /**\n\t   * @type {Object}\n\t   */\n\t\n\t\n\t  /**\n\t   * @param {String} size\n\t   * @return {Object}\n\t   */\n\t\n\t\n\t  /**\n\t   * @param  {Number} i\n\t   * @return {Object}\n\t   */\n\t\n\t\n\t  /**\n\t   * @param  {Number} i\n\t   * @return {Object}\n\t   */\n\t\n\t\n\t  /**\n\t   * @param  {Boolean} loading\n\t   * @return {ReactComponent || null}\n\t   */\n\t\n\t\n\t  _createClass(RingLoader, [{\n\t    key: 'render',\n\t    value: function render() {\n\t      return this.renderLoader(this.props.loading);\n\t    }\n\t  }]);\n\t\n\t  return RingLoader;\n\t}(_react.Component);\n\t\n\tRingLoader.propTypes = propTypes;\n\tRingLoader.defaultProps = {\n\t  loading: true,\n\t  color: '#ffffff',\n\t  size: '60px' };\n\texports.default = RingLoader;\n\tmodule.exports = exports['default'];\n\t//# sourceMappingURL=RingLoader.js.map\n\n/***/ }),\n/* 26 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _react = __webpack_require__(1);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _propTypes = __webpack_require__(2);\n\t\n\tvar _propTypes2 = _interopRequireDefault(_propTypes);\n\t\n\tvar _appendVendorPrefix = __webpack_require__(3);\n\t\n\tvar _appendVendorPrefix2 = _interopRequireDefault(_appendVendorPrefix);\n\t\n\tvar _insertKeyframesRule = __webpack_require__(4);\n\t\n\tvar _insertKeyframesRule2 = _interopRequireDefault(_insertKeyframesRule);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * @type {Number}\n\t */\n\tvar riseAmount = 30;\n\t\n\t/**\n\t * @type {Object}\n\t */\n\tvar keyframesEven = {\n\t  '0%': {\n\t    transform: 'scale(1.1)'\n\t  },\n\t  '25%': {\n\t    transform: 'translateY(-' + riseAmount + 'px)'\n\t  },\n\t  '50%': {\n\t    transform: 'scale(0.4)'\n\t  },\n\t  '75%': {\n\t    transform: 'translateY(' + riseAmount + 'px)'\n\t  },\n\t  '100%': {\n\t    transform: 'translateY(0) scale(1.0)'\n\t  }\n\t\n\t  /**\n\t   * @type {Object}\n\t   */\n\t};var keyframesOdd = {\n\t  '0%': {\n\t    transform: 'scale(0.4)'\n\t  },\n\t  25: {\n\t    transform: 'translateY(' + riseAmount + 'px)'\n\t  },\n\t  '50%': {\n\t    transform: 'scale(1.1)'\n\t  },\n\t  '75%': {\n\t    transform: 'translateY(-' + riseAmount + 'px)'\n\t  },\n\t  '100%': {\n\t    transform: 'translateY(0) scale(0.75)'\n\t  }\n\t\n\t  /**\n\t   * @type {String}\n\t   */\n\t};var animationNameEven = (0, _insertKeyframesRule2.default)(keyframesEven);\n\t\n\t/**\n\t * @type {String}\n\t */\n\tvar animationNameOdd = (0, _insertKeyframesRule2.default)(keyframesOdd);\n\t\n\tvar propTypes = {\n\t  loading: _propTypes2.default.bool,\n\t  color: _propTypes2.default.string,\n\t  size: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n\t  margin: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n\t  verticalAlign: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string])\n\t};\n\t\n\tvar ptKeys = Object.keys(propTypes);\n\t\n\tvar RiseLoader = function (_Component) {\n\t  _inherits(RiseLoader, _Component);\n\t\n\t  function RiseLoader() {\n\t    var _ref;\n\t\n\t    var _temp, _this, _ret;\n\t\n\t    _classCallCheck(this, RiseLoader);\n\t\n\t    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n\t      args[_key] = arguments[_key];\n\t    }\n\t\n\t    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = RiseLoader.__proto__ || Object.getPrototypeOf(RiseLoader)).call.apply(_ref, [this].concat(args))), _this), _this.getBallStyle = function () {\n\t      return {\n\t        backgroundColor: _this.props.color,\n\t        width: _this.props.size,\n\t        height: _this.props.size,\n\t        margin: _this.props.margin,\n\t        borderRadius: '100%',\n\t        verticalAlign: _this.props.verticalAlign\n\t      };\n\t    }, _this.getAnimationStyle = function (i) {\n\t      var animation = [i % 2 === 0 ? animationNameEven : animationNameOdd, '1s', '0s', 'infinite', 'cubic-bezier(.15,.46,.9,.6)'].join(' ');\n\t      var animationFillMode = 'both';\n\t\n\t      return {\n\t        animation: animation,\n\t        animationFillMode: animationFillMode\n\t      };\n\t    }, _this.getStyle = function (i) {\n\t      return (0, _appendVendorPrefix2.default)(_this.getBallStyle(i), _this.getAnimationStyle(i), {\n\t        display: 'inline-block',\n\t        border: '0px solid transparent' // fix firefox/chrome/opera rendering\n\t      });\n\t    }, _this.renderLoader = function (loading) {\n\t      if (loading) {\n\t        var props = Object.assign({}, _this.props);\n\t\n\t        if (propTypes && ptKeys) {\n\t          var klen = ptKeys.length;\n\t          for (var i = 0; i < klen; i++) {\n\t            delete props[ptKeys[i]];\n\t          }\n\t        }\n\t\n\t        return _react2.default.createElement(\n\t          'div',\n\t          props,\n\t          _react2.default.createElement('div', { style: _this.getStyle(1) }),\n\t          _react2.default.createElement('div', { style: _this.getStyle(2) }),\n\t          _react2.default.createElement('div', { style: _this.getStyle(3) }),\n\t          _react2.default.createElement('div', { style: _this.getStyle(4) }),\n\t          _react2.default.createElement('div', { style: _this.getStyle(5) })\n\t        );\n\t      }\n\t\n\t      return null;\n\t    }, _temp), _possibleConstructorReturn(_this, _ret);\n\t  }\n\t  /**\n\t   * @type {Object}\n\t   */\n\t\n\t\n\t  /**\n\t   * @return {Object}\n\t   */\n\t\n\t\n\t  /**\n\t   * @param  {Number} i\n\t   * @return {Object}\n\t   */\n\t\n\t\n\t  /**\n\t   * @param  {Number} i\n\t   * @return {Object}\n\t   */\n\t\n\t\n\t  /**\n\t   * @param  {Boolean} loading\n\t   * @return {ReactComponent || null}\n\t   */\n\t\n\t\n\t  _createClass(RiseLoader, [{\n\t    key: 'render',\n\t    value: function render() {\n\t      return this.renderLoader(this.props.loading);\n\t    }\n\t  }]);\n\t\n\t  return RiseLoader;\n\t}(_react.Component);\n\t\n\tRiseLoader.propTypes = propTypes;\n\tRiseLoader.defaultProps = {\n\t  loading: true,\n\t  color: '#ffffff',\n\t  size: '15px',\n\t  margin: '2px' };\n\texports.default = RiseLoader;\n\tmodule.exports = exports['default'];\n\t//# sourceMappingURL=RiseLoader.js.map\n\n/***/ }),\n/* 27 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _react = __webpack_require__(1);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _propTypes = __webpack_require__(2);\n\t\n\tvar _propTypes2 = _interopRequireDefault(_propTypes);\n\t\n\tvar _appendVendorPrefix = __webpack_require__(3);\n\t\n\tvar _appendVendorPrefix2 = _interopRequireDefault(_appendVendorPrefix);\n\t\n\tvar _insertKeyframesRule = __webpack_require__(4);\n\t\n\tvar _insertKeyframesRule2 = _interopRequireDefault(_insertKeyframesRule);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * @type {Object}\n\t */\n\tvar keyframes = {\n\t  '0%': {\n\t    transform: 'rotate(0deg)'\n\t  },\n\t  '50%': {\n\t    transform: 'rotate(180deg)'\n\t  },\n\t  '100%': {\n\t    transform: 'rotate(360deg)'\n\t  }\n\t\n\t  /**\n\t   * @type {String}\n\t   */\n\t};var animationName = (0, _insertKeyframesRule2.default)(keyframes);\n\t\n\tvar propTypes = {\n\t  loading: _propTypes2.default.bool,\n\t  color: _propTypes2.default.string,\n\t  size: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n\t  margin: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n\t  verticalAlign: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string])\n\t};\n\t\n\tvar ptKeys = Object.keys(propTypes);\n\t\n\tvar RotateLoader = function (_Component) {\n\t  _inherits(RotateLoader, _Component);\n\t\n\t  function RotateLoader() {\n\t    var _ref;\n\t\n\t    var _temp, _this, _ret;\n\t\n\t    _classCallCheck(this, RotateLoader);\n\t\n\t    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n\t      args[_key] = arguments[_key];\n\t    }\n\t\n\t    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = RotateLoader.__proto__ || Object.getPrototypeOf(RotateLoader)).call.apply(_ref, [this].concat(args))), _this), _this.getBallStyle = function () {\n\t      return {\n\t        backgroundColor: _this.props.color,\n\t        width: _this.props.size,\n\t        height: _this.props.size,\n\t        margin: _this.props.margin,\n\t        borderRadius: '100%',\n\t        verticalAlign: _this.props.verticalAlign\n\t      };\n\t    }, _this.getAnimationStyle = function () {\n\t      var animation = [animationName, '1s', '0s', 'infinite', 'cubic-bezier(.7,-.13,.22,.86)'].join(' ');\n\t      var animationFillMode = 'both';\n\t\n\t      return {\n\t        animation: animation,\n\t        animationFillMode: animationFillMode\n\t      };\n\t    }, _this.getStyle = function (i) {\n\t      if (i) {\n\t        return (0, _appendVendorPrefix2.default)(_this.getBallStyle(i), {\n\t          opacity: '0.8',\n\t          position: 'absolute',\n\t          top: 0,\n\t          left: i % 2 ? -28 : 25,\n\t          border: '0px solid transparent' // fix firefox/chrome/opera rendering\n\t        });\n\t      }\n\t\n\t      return (0, _appendVendorPrefix2.default)(_this.getBallStyle(i), _this.getAnimationStyle(i), {\n\t        display: 'inline-block',\n\t        position: 'relative',\n\t        border: '0px solid transparent' // fix firefox/chrome/opera rendering\n\t      });\n\t    }, _this.renderLoader = function (loading) {\n\t      if (loading) {\n\t        var props = Object.assign({}, _this.props);\n\t\n\t        if (propTypes && ptKeys) {\n\t          var klen = ptKeys.length;\n\t          for (var i = 0; i < klen; i++) {\n\t            delete props[ptKeys[i]];\n\t          }\n\t        }\n\t\n\t        return _react2.default.createElement(\n\t          'div',\n\t          props,\n\t          _react2.default.createElement(\n\t            'div',\n\t            { style: _this.getStyle() },\n\t            _react2.default.createElement('div', { style: _this.getStyle(1) }),\n\t            _react2.default.createElement('div', { style: _this.getStyle(2) })\n\t          )\n\t        );\n\t      }\n\t\n\t      return null;\n\t    }, _temp), _possibleConstructorReturn(_this, _ret);\n\t  }\n\t\n\t  /**\n\t   * @return {Object}\n\t   */\n\t\n\t\n\t  /**\n\t   * @param  {Number} i\n\t   * @return {Object}\n\t   */\n\t\n\t\n\t  /**\n\t   * @param  {Number} i\n\t   * @return {Object}\n\t   */\n\t\n\t\n\t  /**\n\t   * @param  {Boolean} loading\n\t   * @return {ReactComponent || null}\n\t   */\n\t\n\t\n\t  _createClass(RotateLoader, [{\n\t    key: 'render',\n\t    value: function render() {\n\t      return this.renderLoader(this.props.loading);\n\t    }\n\t  }]);\n\t\n\t  return RotateLoader;\n\t}(_react.Component);\n\t\n\tRotateLoader.propTypes = propTypes;\n\tRotateLoader.defaultProps = {\n\t  loading: true,\n\t  color: '#ffffff',\n\t  size: '15px',\n\t  margin: '2px' };\n\texports.default = RotateLoader;\n\tmodule.exports = exports['default'];\n\t//# sourceMappingURL=RotateLoader.js.map\n\n/***/ }),\n/* 28 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _react = __webpack_require__(1);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _propTypes = __webpack_require__(2);\n\t\n\tvar _propTypes2 = _interopRequireDefault(_propTypes);\n\t\n\tvar _appendVendorPrefix = __webpack_require__(3);\n\t\n\tvar _appendVendorPrefix2 = _interopRequireDefault(_appendVendorPrefix);\n\t\n\tvar _insertKeyframesRule = __webpack_require__(4);\n\t\n\tvar _insertKeyframesRule2 = _interopRequireDefault(_insertKeyframesRule);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * @type {Object}\n\t */\n\tvar keyframes = {\n\t  '0%': {\n\t    transform: 'scaley(1.0)'\n\t  },\n\t  '50%': {\n\t    transform: 'scaley(0.4)'\n\t  },\n\t  '100%': {\n\t    transform: 'scaley(1.0)'\n\t  }\n\t\n\t  /**\n\t   * @type {String}\n\t   */\n\t};var animationName = (0, _insertKeyframesRule2.default)(keyframes);\n\t\n\tvar propTypes = {\n\t  loading: _propTypes2.default.bool,\n\t  color: _propTypes2.default.string,\n\t  height: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n\t  width: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n\t  margin: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n\t  radius: _propTypes2.default.string,\n\t  verticalAlign: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string])\n\t};\n\t\n\tvar ptKeys = Object.keys(propTypes);\n\t\n\tvar ScaleLoader = function (_Component) {\n\t  _inherits(ScaleLoader, _Component);\n\t\n\t  function ScaleLoader() {\n\t    var _ref;\n\t\n\t    var _temp, _this, _ret;\n\t\n\t    _classCallCheck(this, ScaleLoader);\n\t\n\t    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n\t      args[_key] = arguments[_key];\n\t    }\n\t\n\t    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = ScaleLoader.__proto__ || Object.getPrototypeOf(ScaleLoader)).call.apply(_ref, [this].concat(args))), _this), _this.getLineStyle = function () {\n\t      return {\n\t        backgroundColor: _this.props.color,\n\t        height: _this.props.height,\n\t        width: _this.props.width,\n\t        margin: _this.props.margin,\n\t        borderRadius: _this.props.radius,\n\t        verticalAlign: _this.props.verticalAlign\n\t      };\n\t    }, _this.getAnimationStyle = function (i) {\n\t      var animation = [animationName, '1s', i * 0.1 + 's', 'infinite', 'cubic-bezier(.2,.68,.18,1.08)'].join(' ');\n\t      var animationFillMode = 'both';\n\t\n\t      return {\n\t        animation: animation,\n\t        animationFillMode: animationFillMode\n\t      };\n\t    }, _this.getStyle = function (i) {\n\t      return (0, _appendVendorPrefix2.default)(_this.getLineStyle(i), _this.getAnimationStyle(i), {\n\t        display: 'inline-block',\n\t        border: '0px solid transparent' // fix firefox/chrome/opera rendering\n\t      });\n\t    }, _this.renderLoader = function (loading) {\n\t      if (loading) {\n\t        var props = Object.assign({}, _this.props);\n\t\n\t        if (propTypes && ptKeys) {\n\t          var klen = ptKeys.length;\n\t          for (var i = 0; i < klen; i++) {\n\t            delete props[ptKeys[i]];\n\t          }\n\t        }\n\t\n\t        return _react2.default.createElement(\n\t          'div',\n\t          props,\n\t          _react2.default.createElement('div', { style: _this.getStyle(1) }),\n\t          _react2.default.createElement('div', { style: _this.getStyle(2) }),\n\t          _react2.default.createElement('div', { style: _this.getStyle(3) }),\n\t          _react2.default.createElement('div', { style: _this.getStyle(4) }),\n\t          _react2.default.createElement('div', { style: _this.getStyle(5) })\n\t        );\n\t      }\n\t\n\t      return null;\n\t    }, _temp), _possibleConstructorReturn(_this, _ret);\n\t  }\n\t  /**\n\t   * @type {Object}\n\t   */\n\t\n\t\n\t  /**\n\t   * @return {Object}\n\t   */\n\t\n\t\n\t  /**\n\t   * @param  {Number} i\n\t   * @return {Object}\n\t   */\n\t\n\t\n\t  /**\n\t   * @param  {Number} i\n\t   * @return {Object}\n\t   */\n\t\n\t\n\t  /**\n\t   * @param  {Boolean} loading\n\t   * @return {ReactComponent || null}\n\t   */\n\t\n\t\n\t  _createClass(ScaleLoader, [{\n\t    key: 'render',\n\t    value: function render() {\n\t      return this.renderLoader(this.props.loading);\n\t    }\n\t  }]);\n\t\n\t  return ScaleLoader;\n\t}(_react.Component);\n\t\n\tScaleLoader.propTypes = propTypes;\n\tScaleLoader.defaultProps = {\n\t  loading: true,\n\t  color: '#fff',\n\t  height: '35px',\n\t  width: '4px',\n\t  margin: '2px',\n\t  radius: '2px' };\n\texports.default = ScaleLoader;\n\tmodule.exports = exports['default'];\n\t//# sourceMappingURL=ScaleLoader.js.map\n\n/***/ }),\n/* 29 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _react = __webpack_require__(1);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _propTypes = __webpack_require__(2);\n\t\n\tvar _propTypes2 = _interopRequireDefault(_propTypes);\n\t\n\tvar _appendVendorPrefix = __webpack_require__(3);\n\t\n\tvar _appendVendorPrefix2 = _interopRequireDefault(_appendVendorPrefix);\n\t\n\tvar _insertKeyframesRule = __webpack_require__(4);\n\t\n\tvar _insertKeyframesRule2 = _interopRequireDefault(_insertKeyframesRule);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * @type {Object}\n\t */\n\tvar keyframes = {\n\t  '25%': {\n\t    transform: 'perspective(100px) rotateX(180deg) rotateY(0)'\n\t  },\n\t  '50%': {\n\t    transform: 'perspective(100px) rotateX(180deg) rotateY(180deg)'\n\t  },\n\t  '75%': {\n\t    transform: 'perspective(100px) rotateX(0) rotateY(180deg)'\n\t  },\n\t  '100%': {\n\t    transform: 'perspective(100px) rotateX(0) rotateY(0)'\n\t  }\n\t\n\t  /**\n\t   * @type {String}\n\t   */\n\t};var animationName = (0, _insertKeyframesRule2.default)(keyframes);\n\t\n\tvar propTypes = {\n\t  loading: _propTypes2.default.bool,\n\t  color: _propTypes2.default.string,\n\t  size: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n\t  verticalAlign: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string])\n\t};\n\t\n\tvar ptKeys = Object.keys(propTypes);\n\t\n\tvar SkewLoader = function (_Component) {\n\t  _inherits(SkewLoader, _Component);\n\t\n\t  function SkewLoader() {\n\t    var _ref;\n\t\n\t    var _temp, _this, _ret;\n\t\n\t    _classCallCheck(this, SkewLoader);\n\t\n\t    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n\t      args[_key] = arguments[_key];\n\t    }\n\t\n\t    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = SkewLoader.__proto__ || Object.getPrototypeOf(SkewLoader)).call.apply(_ref, [this].concat(args))), _this), _this.getSharpStyle = function () {\n\t      return {\n\t        width: 0,\n\t        height: 0,\n\t        borderLeft: _this.props.size + ' solid transparent',\n\t        borderRight: _this.props.size + ' solid transparent',\n\t        borderBottom: _this.props.size + ' solid ' + _this.props.color,\n\t        verticalAlign: _this.props.verticalAlign\n\t      };\n\t    }, _this.getAnimationStyle = function () {\n\t      var animation = [animationName, '3s', '0s', 'infinite', 'cubic-bezier(.09,.57,.49,.9)'].join(' ');\n\t      var animationFillMode = 'both';\n\t\n\t      return {\n\t        animation: animation,\n\t        animationFillMode: animationFillMode\n\t      };\n\t    }, _this.getStyle = function (i) {\n\t      return (0, _appendVendorPrefix2.default)({\n\t        border: '0px solid transparent' // fix firefox/chrome/opera rendering\n\t      }, _this.getSharpStyle(i), _this.getAnimationStyle(i), {\n\t        display: 'inline-block'\n\t      });\n\t    }, _this.renderLoader = function (loading) {\n\t      if (loading) {\n\t        var props = Object.assign({}, _this.props);\n\t\n\t        if (propTypes && ptKeys) {\n\t          var klen = ptKeys.length;\n\t          for (var i = 0; i < klen; i++) {\n\t            delete props[ptKeys[i]];\n\t          }\n\t        }\n\t\n\t        return _react2.default.createElement(\n\t          'div',\n\t          props,\n\t          _react2.default.createElement('div', { style: _this.getStyle() })\n\t        );\n\t      }\n\t\n\t      return null;\n\t    }, _temp), _possibleConstructorReturn(_this, _ret);\n\t  }\n\t  /**\n\t   * @type {Object}\n\t   */\n\t\n\t\n\t  /**\n\t   * @return {Object}\n\t   */\n\t\n\t\n\t  /**\n\t   * @param  {Number} i\n\t   * @return {Object}\n\t   */\n\t\n\t\n\t  /**\n\t   * @param  {Number} i\n\t   * @return {Object}\n\t   */\n\t\n\t\n\t  /**\n\t   * @param  {Boolean} loading\n\t   * @return {ReactComponent || null}\n\t   */\n\t\n\t\n\t  _createClass(SkewLoader, [{\n\t    key: 'render',\n\t    value: function render() {\n\t      return this.renderLoader(this.props.loading);\n\t    }\n\t  }]);\n\t\n\t  return SkewLoader;\n\t}(_react.Component);\n\t\n\tSkewLoader.propTypes = propTypes;\n\tSkewLoader.defaultProps = {\n\t  loading: true,\n\t  color: '#fff',\n\t  size: '20px' };\n\texports.default = SkewLoader;\n\tmodule.exports = exports['default'];\n\t//# sourceMappingURL=SkewLoader.js.map\n\n/***/ }),\n/* 30 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _react = __webpack_require__(1);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _propTypes = __webpack_require__(2);\n\t\n\tvar _propTypes2 = _interopRequireDefault(_propTypes);\n\t\n\tvar _appendVendorPrefix = __webpack_require__(3);\n\t\n\tvar _appendVendorPrefix2 = _interopRequireDefault(_appendVendorPrefix);\n\t\n\tvar _insertKeyframesRule = __webpack_require__(4);\n\t\n\tvar _insertKeyframesRule2 = _interopRequireDefault(_insertKeyframesRule);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * @type {Object}\n\t */\n\tvar keyframes = {\n\t  '25%': {\n\t    transform: 'rotateX(180deg) rotateY(0)'\n\t  },\n\t  '50%': {\n\t    transform: 'rotateX(180deg) rotateY(180deg)'\n\t  },\n\t  '75%': {\n\t    transform: 'rotateX(0) rotateY(180deg)'\n\t  },\n\t  '100%': {\n\t    transform: 'rotateX(0) rotateY(0)'\n\t  }\n\t\n\t  /**\n\t   * @type {String}\n\t   */\n\t};var animationName = (0, _insertKeyframesRule2.default)(keyframes);\n\t\n\tvar propTypes = {\n\t  loading: _propTypes2.default.bool,\n\t  color: _propTypes2.default.string,\n\t  size: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n\t  margin: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n\t  verticalAlign: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string])\n\t};\n\t\n\tvar ptKeys = Object.keys(propTypes);\n\t\n\tvar SquareLoader = function (_Component) {\n\t  _inherits(SquareLoader, _Component);\n\t\n\t  function SquareLoader() {\n\t    var _ref;\n\t\n\t    var _temp, _this, _ret;\n\t\n\t    _classCallCheck(this, SquareLoader);\n\t\n\t    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n\t      args[_key] = arguments[_key];\n\t    }\n\t\n\t    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = SquareLoader.__proto__ || Object.getPrototypeOf(SquareLoader)).call.apply(_ref, [this].concat(args))), _this), _this.getSquareStyle = function () {\n\t      return {\n\t        backgroundColor: _this.props.color,\n\t        width: _this.props.size,\n\t        height: _this.props.size,\n\t        verticalAlign: _this.props.verticalAlign\n\t      };\n\t    }, _this.getAnimationStyle = function () {\n\t      var animation = [animationName, '3s', '0s', 'infinite', 'cubic-bezier(.09,.57,.49,.9)'].join(' ');\n\t      var animationFillMode = 'both';\n\t      var perspective = '100px';\n\t\n\t      return {\n\t        perspective: perspective,\n\t        animation: animation,\n\t        animationFillMode: animationFillMode\n\t      };\n\t    }, _this.getStyle = function (i) {\n\t      return (0, _appendVendorPrefix2.default)(_this.getSquareStyle(i), _this.getAnimationStyle(i), {\n\t        display: 'inline-block',\n\t        border: '0px solid transparent' // fix firefox/chrome/opera rendering\n\t      });\n\t    }, _this.renderLoader = function (loading) {\n\t      if (loading) {\n\t        var props = Object.assign({}, _this.props);\n\t\n\t        if (propTypes && ptKeys) {\n\t          var klen = ptKeys.length;\n\t          for (var i = 0; i < klen; i++) {\n\t            delete props[ptKeys[i]];\n\t          }\n\t        }\n\t\n\t        return _react2.default.createElement(\n\t          'div',\n\t          props,\n\t          _react2.default.createElement('div', { style: _this.getStyle() })\n\t        );\n\t      }\n\t\n\t      return null;\n\t    }, _temp), _possibleConstructorReturn(_this, _ret);\n\t  }\n\t  /**\n\t   * @type {Object}\n\t   */\n\t\n\t\n\t  /**\n\t   * @return {Object}\n\t   */\n\t\n\t\n\t  /**\n\t   * @param  {Number} i\n\t   * @return {Object}\n\t   */\n\t\n\t\n\t  /**\n\t   * @param  {Number} i\n\t   * @return {Object}\n\t   */\n\t\n\t\n\t  /**\n\t   * @param  {Boolean} loading\n\t   * @return {ReactComponent || null}\n\t   */\n\t\n\t\n\t  _createClass(SquareLoader, [{\n\t    key: 'render',\n\t    value: function render() {\n\t      return this.renderLoader(this.props.loading);\n\t    }\n\t  }]);\n\t\n\t  return SquareLoader;\n\t}(_react.Component);\n\t\n\tSquareLoader.propTypes = propTypes;\n\tSquareLoader.defaultProps = {\n\t  loading: true,\n\t  color: '#ffffff',\n\t  size: '50px' };\n\texports.default = SquareLoader;\n\tmodule.exports = exports['default'];\n\t//# sourceMappingURL=SquareLoader.js.map\n\n/***/ }),\n/* 31 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _react = __webpack_require__(1);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _propTypes = __webpack_require__(2);\n\t\n\tvar _propTypes2 = _interopRequireDefault(_propTypes);\n\t\n\tvar _appendVendorPrefix = __webpack_require__(3);\n\t\n\tvar _appendVendorPrefix2 = _interopRequireDefault(_appendVendorPrefix);\n\t\n\tvar _insertKeyframesRule = __webpack_require__(4);\n\t\n\tvar _insertKeyframesRule2 = _interopRequireDefault(_insertKeyframesRule);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * @type {Object}\n\t */\n\tvar keyframes = {\n\t  '33%': {\n\t    transform: 'translateY(10px)'\n\t  },\n\t  '66%': {\n\t    transform: 'translateY(-10px)'\n\t  },\n\t  '100%': {\n\t    transform: 'translateY(0)'\n\t  }\n\t\n\t  /**\n\t   * @type {String}\n\t   */\n\t};var animationName = (0, _insertKeyframesRule2.default)(keyframes);\n\t\n\tvar propTypes = {\n\t  loading: _propTypes2.default.bool,\n\t  color: _propTypes2.default.string,\n\t  size: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n\t  margin: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n\t  verticalAlign: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string])\n\t};\n\t\n\tvar ptKeys = Object.keys(propTypes);\n\t\n\tvar SyncLoader = function (_Component) {\n\t  _inherits(SyncLoader, _Component);\n\t\n\t  function SyncLoader() {\n\t    var _ref;\n\t\n\t    var _temp, _this, _ret;\n\t\n\t    _classCallCheck(this, SyncLoader);\n\t\n\t    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n\t      args[_key] = arguments[_key];\n\t    }\n\t\n\t    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = SyncLoader.__proto__ || Object.getPrototypeOf(SyncLoader)).call.apply(_ref, [this].concat(args))), _this), _this.getBallStyle = function () {\n\t      return {\n\t        backgroundColor: _this.props.color,\n\t        width: _this.props.size,\n\t        height: _this.props.size,\n\t        margin: _this.props.margin,\n\t        borderRadius: '100%',\n\t        verticalAlign: _this.props.verticalAlign\n\t      };\n\t    }, _this.getAnimationStyle = function (i) {\n\t      var animation = [animationName, '0.6s', i * 0.07 + 's', 'infinite', 'ease-in-out'].join(' ');\n\t      var animationFillMode = 'both';\n\t\n\t      return {\n\t        animation: animation,\n\t        animationFillMode: animationFillMode\n\t      };\n\t    }, _this.getStyle = function (i) {\n\t      return (0, _appendVendorPrefix2.default)(_this.getBallStyle(i), _this.getAnimationStyle(i), {\n\t        display: 'inline-block',\n\t        border: '0px solid transparent' // fix firefox/chrome/opera rendering\n\t      });\n\t    }, _this.renderLoader = function (loading) {\n\t      if (loading) {\n\t        var props = Object.assign({}, _this.props);\n\t\n\t        if (propTypes && ptKeys) {\n\t          var klen = ptKeys.length;\n\t          for (var i = 0; i < klen; i++) {\n\t            delete props[ptKeys[i]];\n\t          }\n\t        }\n\t\n\t        return _react2.default.createElement(\n\t          'div',\n\t          props,\n\t          _react2.default.createElement('div', { style: _this.getStyle(1) }),\n\t          _react2.default.createElement('div', { style: _this.getStyle(2) }),\n\t          _react2.default.createElement('div', { style: _this.getStyle(3) })\n\t        );\n\t      }\n\t\n\t      return null;\n\t    }, _temp), _possibleConstructorReturn(_this, _ret);\n\t  }\n\t  /**\n\t   * @type {Object}\n\t   */\n\t\n\t\n\t  /**\n\t   * @return {Object}\n\t   */\n\t\n\t\n\t  /**\n\t   * @param  {Number} i\n\t   * @return {Object}\n\t   */\n\t\n\t\n\t  /**\n\t   * @param  {Number} i\n\t   * @return {Object}\n\t   */\n\t\n\t\n\t  /**\n\t   * @param  {Boolean} loading\n\t   * @return {ReactComponent || null}\n\t   */\n\t\n\t\n\t  _createClass(SyncLoader, [{\n\t    key: 'render',\n\t    value: function render() {\n\t      return this.renderLoader(this.props.loading);\n\t    }\n\t  }]);\n\t\n\t  return SyncLoader;\n\t}(_react.Component);\n\t\n\tSyncLoader.propTypes = propTypes;\n\tSyncLoader.defaultProps = {\n\t  loading: true,\n\t  color: '#ffffff',\n\t  size: '15px',\n\t  margin: '2px' };\n\texports.default = SyncLoader;\n\tmodule.exports = exports['default'];\n\t//# sourceMappingURL=SyncLoader.js.map\n\n/***/ }),\n/* 32 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright (c) 2013-present, Facebook, Inc.\n\t *\n\t * This source code is licensed under the MIT license found in the\n\t * LICENSE file in the root directory of this source tree.\n\t */\n\t\n\t'use strict';\n\t\n\tvar ReactPropTypesSecret = __webpack_require__(33);\n\t\n\tfunction emptyFunction() {}\n\t\n\tmodule.exports = function() {\n\t  function shim(props, propName, componentName, location, propFullName, secret) {\n\t    if (secret === ReactPropTypesSecret) {\n\t      // It is still safe when called from React.\n\t      return;\n\t    }\n\t    var err = new Error(\n\t      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n\t      'Use PropTypes.checkPropTypes() to call them. ' +\n\t      'Read more at http://fb.me/use-check-prop-types'\n\t    );\n\t    err.name = 'Invariant Violation';\n\t    throw err;\n\t  };\n\t  shim.isRequired = shim;\n\t  function getShim() {\n\t    return shim;\n\t  };\n\t  // Important!\n\t  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n\t  var ReactPropTypes = {\n\t    array: shim,\n\t    bool: shim,\n\t    func: shim,\n\t    number: shim,\n\t    object: shim,\n\t    string: shim,\n\t    symbol: shim,\n\t\n\t    any: shim,\n\t    arrayOf: getShim,\n\t    element: shim,\n\t    instanceOf: getShim,\n\t    node: shim,\n\t    objectOf: getShim,\n\t    oneOf: getShim,\n\t    oneOfType: getShim,\n\t    shape: getShim,\n\t    exact: getShim\n\t  };\n\t\n\t  ReactPropTypes.checkPropTypes = emptyFunction;\n\t  ReactPropTypes.PropTypes = ReactPropTypes;\n\t\n\t  return ReactPropTypes;\n\t};\n\n\n/***/ }),\n/* 33 */\n/***/ (function(module, exports) {\n\n\t/**\n\t * Copyright (c) 2013-present, Facebook, Inc.\n\t *\n\t * This source code is licensed under the MIT license found in the\n\t * LICENSE file in the root directory of this source tree.\n\t */\n\t\n\t'use strict';\n\t\n\tvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\t\n\tmodule.exports = ReactPropTypesSecret;\n\n\n/***/ }),\n/* 34 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/** @license React v16.7.0\n\t * react-dom.production.min.js\n\t *\n\t * Copyright (c) Facebook, Inc. and its affiliates.\n\t *\n\t * This source code is licensed under the MIT license found in the\n\t * LICENSE file in the root directory of this source tree.\n\t */\n\t\n\t/*\n\t Modernizr 3.0.0pre (Custom Build) | MIT\n\t*/\n\t'use strict';var aa=__webpack_require__(1),n=__webpack_require__(5),ba=__webpack_require__(37);function ca(a,b,c,d,e,f,g,h){if(!a){a=void 0;if(void 0===b)a=Error(\"Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.\");else{var k=[c,d,e,f,g,h],l=0;a=Error(b.replace(/%s/g,function(){return k[l++]}));a.name=\"Invariant Violation\"}a.framesToPop=1;throw a;}}\n\tfunction t(a){for(var b=arguments.length-1,c=\"https://reactjs.org/docs/error-decoder.html?invariant=\"+a,d=0;d<b;d++)c+=\"&args[]=\"+encodeURIComponent(arguments[d+1]);ca(!1,\"Minified React error #\"+a+\"; visit %s for the full message or use the non-minified dev environment for full errors and additional helpful warnings. \",c)}aa?void 0:t(\"227\");function da(a,b,c,d,e,f,g,h,k){var l=Array.prototype.slice.call(arguments,3);try{b.apply(c,l)}catch(m){this.onError(m)}}\n\tvar ea=!1,fa=null,ha=!1,ia=null,ja={onError:function(a){ea=!0;fa=a}};function ka(a,b,c,d,e,f,g,h,k){ea=!1;fa=null;da.apply(ja,arguments)}function la(a,b,c,d,e,f,g,h,k){ka.apply(this,arguments);if(ea){if(ea){var l=fa;ea=!1;fa=null}else t(\"198\"),l=void 0;ha||(ha=!0,ia=l)}}var ma=null,na={};\n\tfunction oa(){if(ma)for(var a in na){var b=na[a],c=ma.indexOf(a);-1<c?void 0:t(\"96\",a);if(!pa[c]){b.extractEvents?void 0:t(\"97\",a);pa[c]=b;c=b.eventTypes;for(var d in c){var e=void 0;var f=c[d],g=b,h=d;qa.hasOwnProperty(h)?t(\"99\",h):void 0;qa[h]=f;var k=f.phasedRegistrationNames;if(k){for(e in k)k.hasOwnProperty(e)&&ra(k[e],g,h);e=!0}else f.registrationName?(ra(f.registrationName,g,h),e=!0):e=!1;e?void 0:t(\"98\",d,a)}}}}\n\tfunction ra(a,b,c){sa[a]?t(\"100\",a):void 0;sa[a]=b;ta[a]=b.eventTypes[c].dependencies}var pa=[],qa={},sa={},ta={},ua=null,va=null,wa=null;function xa(a,b,c){var d=a.type||\"unknown-event\";a.currentTarget=wa(c);la(d,b,void 0,a);a.currentTarget=null}function ya(a,b){null==b?t(\"30\"):void 0;if(null==a)return b;if(Array.isArray(a)){if(Array.isArray(b))return a.push.apply(a,b),a;a.push(b);return a}return Array.isArray(b)?[a].concat(b):[a,b]}\n\tfunction za(a,b,c){Array.isArray(a)?a.forEach(b,c):a&&b.call(c,a)}var Aa=null;function Ba(a){if(a){var b=a._dispatchListeners,c=a._dispatchInstances;if(Array.isArray(b))for(var d=0;d<b.length&&!a.isPropagationStopped();d++)xa(a,b[d],c[d]);else b&&xa(a,b,c);a._dispatchListeners=null;a._dispatchInstances=null;a.isPersistent()||a.constructor.release(a)}}\n\tvar Ca={injectEventPluginOrder:function(a){ma?t(\"101\"):void 0;ma=Array.prototype.slice.call(a);oa()},injectEventPluginsByName:function(a){var b=!1,c;for(c in a)if(a.hasOwnProperty(c)){var d=a[c];na.hasOwnProperty(c)&&na[c]===d||(na[c]?t(\"102\",c):void 0,na[c]=d,b=!0)}b&&oa()}};\n\tfunction Da(a,b){var c=a.stateNode;if(!c)return null;var d=ua(c);if(!d)return null;c=d[b];a:switch(b){case \"onClick\":case \"onClickCapture\":case \"onDoubleClick\":case \"onDoubleClickCapture\":case \"onMouseDown\":case \"onMouseDownCapture\":case \"onMouseMove\":case \"onMouseMoveCapture\":case \"onMouseUp\":case \"onMouseUpCapture\":(d=!d.disabled)||(a=a.type,d=!(\"button\"===a||\"input\"===a||\"select\"===a||\"textarea\"===a));a=!d;break a;default:a=!1}if(a)return null;c&&\"function\"!==typeof c?t(\"231\",b,typeof c):void 0;\n\treturn c}function Ea(a){null!==a&&(Aa=ya(Aa,a));a=Aa;Aa=null;if(a&&(za(a,Ba),Aa?t(\"95\"):void 0,ha))throw a=ia,ha=!1,ia=null,a;}var Fa=Math.random().toString(36).slice(2),Ga=\"__reactInternalInstance$\"+Fa,Ha=\"__reactEventHandlers$\"+Fa;function Ia(a){if(a[Ga])return a[Ga];for(;!a[Ga];)if(a.parentNode)a=a.parentNode;else return null;a=a[Ga];return 5===a.tag||6===a.tag?a:null}function Ja(a){a=a[Ga];return!a||5!==a.tag&&6!==a.tag?null:a}\n\tfunction Ka(a){if(5===a.tag||6===a.tag)return a.stateNode;t(\"33\")}function La(a){return a[Ha]||null}function Ma(a){do a=a.return;while(a&&5!==a.tag);return a?a:null}function Na(a,b,c){if(b=Da(a,c.dispatchConfig.phasedRegistrationNames[b]))c._dispatchListeners=ya(c._dispatchListeners,b),c._dispatchInstances=ya(c._dispatchInstances,a)}\n\tfunction Oa(a){if(a&&a.dispatchConfig.phasedRegistrationNames){for(var b=a._targetInst,c=[];b;)c.push(b),b=Ma(b);for(b=c.length;0<b--;)Na(c[b],\"captured\",a);for(b=0;b<c.length;b++)Na(c[b],\"bubbled\",a)}}function Pa(a,b,c){a&&c&&c.dispatchConfig.registrationName&&(b=Da(a,c.dispatchConfig.registrationName))&&(c._dispatchListeners=ya(c._dispatchListeners,b),c._dispatchInstances=ya(c._dispatchInstances,a))}function Qa(a){a&&a.dispatchConfig.registrationName&&Pa(a._targetInst,null,a)}\n\tfunction Ra(a){za(a,Oa)}var Sa=!(\"undefined\"===typeof window||!window.document||!window.document.createElement);function Ta(a,b){var c={};c[a.toLowerCase()]=b.toLowerCase();c[\"Webkit\"+a]=\"webkit\"+b;c[\"Moz\"+a]=\"moz\"+b;return c}var Ua={animationend:Ta(\"Animation\",\"AnimationEnd\"),animationiteration:Ta(\"Animation\",\"AnimationIteration\"),animationstart:Ta(\"Animation\",\"AnimationStart\"),transitionend:Ta(\"Transition\",\"TransitionEnd\")},Va={},Wa={};\n\tSa&&(Wa=document.createElement(\"div\").style,\"AnimationEvent\"in window||(delete Ua.animationend.animation,delete Ua.animationiteration.animation,delete Ua.animationstart.animation),\"TransitionEvent\"in window||delete Ua.transitionend.transition);function Xa(a){if(Va[a])return Va[a];if(!Ua[a])return a;var b=Ua[a],c;for(c in b)if(b.hasOwnProperty(c)&&c in Wa)return Va[a]=b[c];return a}\n\tvar Ya=Xa(\"animationend\"),Za=Xa(\"animationiteration\"),$a=Xa(\"animationstart\"),ab=Xa(\"transitionend\"),bb=\"abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting\".split(\" \"),cb=null,eb=null,fb=null;\n\tfunction gb(){if(fb)return fb;var a,b=eb,c=b.length,d,e=\"value\"in cb?cb.value:cb.textContent,f=e.length;for(a=0;a<c&&b[a]===e[a];a++);var g=c-a;for(d=1;d<=g&&b[c-d]===e[f-d];d++);return fb=e.slice(a,1<d?1-d:void 0)}function hb(){return!0}function ib(){return!1}\n\tfunction z(a,b,c,d){this.dispatchConfig=a;this._targetInst=b;this.nativeEvent=c;a=this.constructor.Interface;for(var e in a)a.hasOwnProperty(e)&&((b=a[e])?this[e]=b(c):\"target\"===e?this.target=d:this[e]=c[e]);this.isDefaultPrevented=(null!=c.defaultPrevented?c.defaultPrevented:!1===c.returnValue)?hb:ib;this.isPropagationStopped=ib;return this}\n\tn(z.prototype,{preventDefault:function(){this.defaultPrevented=!0;var a=this.nativeEvent;a&&(a.preventDefault?a.preventDefault():\"unknown\"!==typeof a.returnValue&&(a.returnValue=!1),this.isDefaultPrevented=hb)},stopPropagation:function(){var a=this.nativeEvent;a&&(a.stopPropagation?a.stopPropagation():\"unknown\"!==typeof a.cancelBubble&&(a.cancelBubble=!0),this.isPropagationStopped=hb)},persist:function(){this.isPersistent=hb},isPersistent:ib,destructor:function(){var a=this.constructor.Interface,\n\tb;for(b in a)this[b]=null;this.nativeEvent=this._targetInst=this.dispatchConfig=null;this.isPropagationStopped=this.isDefaultPrevented=ib;this._dispatchInstances=this._dispatchListeners=null}});z.Interface={type:null,target:null,currentTarget:function(){return null},eventPhase:null,bubbles:null,cancelable:null,timeStamp:function(a){return a.timeStamp||Date.now()},defaultPrevented:null,isTrusted:null};\n\tz.extend=function(a){function b(){}function c(){return d.apply(this,arguments)}var d=this;b.prototype=d.prototype;var e=new b;n(e,c.prototype);c.prototype=e;c.prototype.constructor=c;c.Interface=n({},d.Interface,a);c.extend=d.extend;jb(c);return c};jb(z);function kb(a,b,c,d){if(this.eventPool.length){var e=this.eventPool.pop();this.call(e,a,b,c,d);return e}return new this(a,b,c,d)}function lb(a){a instanceof this?void 0:t(\"279\");a.destructor();10>this.eventPool.length&&this.eventPool.push(a)}\n\tfunction jb(a){a.eventPool=[];a.getPooled=kb;a.release=lb}var mb=z.extend({data:null}),nb=z.extend({data:null}),ob=[9,13,27,32],pb=Sa&&\"CompositionEvent\"in window,qb=null;Sa&&\"documentMode\"in document&&(qb=document.documentMode);\n\tvar rb=Sa&&\"TextEvent\"in window&&!qb,sb=Sa&&(!pb||qb&&8<qb&&11>=qb),tb=String.fromCharCode(32),ub={beforeInput:{phasedRegistrationNames:{bubbled:\"onBeforeInput\",captured:\"onBeforeInputCapture\"},dependencies:[\"compositionend\",\"keypress\",\"textInput\",\"paste\"]},compositionEnd:{phasedRegistrationNames:{bubbled:\"onCompositionEnd\",captured:\"onCompositionEndCapture\"},dependencies:\"blur compositionend keydown keypress keyup mousedown\".split(\" \")},compositionStart:{phasedRegistrationNames:{bubbled:\"onCompositionStart\",\n\tcaptured:\"onCompositionStartCapture\"},dependencies:\"blur compositionstart keydown keypress keyup mousedown\".split(\" \")},compositionUpdate:{phasedRegistrationNames:{bubbled:\"onCompositionUpdate\",captured:\"onCompositionUpdateCapture\"},dependencies:\"blur compositionupdate keydown keypress keyup mousedown\".split(\" \")}},vb=!1;\n\tfunction wb(a,b){switch(a){case \"keyup\":return-1!==ob.indexOf(b.keyCode);case \"keydown\":return 229!==b.keyCode;case \"keypress\":case \"mousedown\":case \"blur\":return!0;default:return!1}}function xb(a){a=a.detail;return\"object\"===typeof a&&\"data\"in a?a.data:null}var yb=!1;function zb(a,b){switch(a){case \"compositionend\":return xb(b);case \"keypress\":if(32!==b.which)return null;vb=!0;return tb;case \"textInput\":return a=b.data,a===tb&&vb?null:a;default:return null}}\n\tfunction Ab(a,b){if(yb)return\"compositionend\"===a||!pb&&wb(a,b)?(a=gb(),fb=eb=cb=null,yb=!1,a):null;switch(a){case \"paste\":return null;case \"keypress\":if(!(b.ctrlKey||b.altKey||b.metaKey)||b.ctrlKey&&b.altKey){if(b.char&&1<b.char.length)return b.char;if(b.which)return String.fromCharCode(b.which)}return null;case \"compositionend\":return sb&&\"ko\"!==b.locale?null:b.data;default:return null}}\n\tvar Bb={eventTypes:ub,extractEvents:function(a,b,c,d){var e=void 0;var f=void 0;if(pb)b:{switch(a){case \"compositionstart\":e=ub.compositionStart;break b;case \"compositionend\":e=ub.compositionEnd;break b;case \"compositionupdate\":e=ub.compositionUpdate;break b}e=void 0}else yb?wb(a,c)&&(e=ub.compositionEnd):\"keydown\"===a&&229===c.keyCode&&(e=ub.compositionStart);e?(sb&&\"ko\"!==c.locale&&(yb||e!==ub.compositionStart?e===ub.compositionEnd&&yb&&(f=gb()):(cb=d,eb=\"value\"in cb?cb.value:cb.textContent,yb=\n\t!0)),e=mb.getPooled(e,b,c,d),f?e.data=f:(f=xb(c),null!==f&&(e.data=f)),Ra(e),f=e):f=null;(a=rb?zb(a,c):Ab(a,c))?(b=nb.getPooled(ub.beforeInput,b,c,d),b.data=a,Ra(b)):b=null;return null===f?b:null===b?f:[f,b]}},Cb=null,Db=null,Eb=null;function Hb(a){if(a=va(a)){\"function\"!==typeof Cb?t(\"280\"):void 0;var b=ua(a.stateNode);Cb(a.stateNode,a.type,b)}}function Ib(a){Db?Eb?Eb.push(a):Eb=[a]:Db=a}function Jb(){if(Db){var a=Db,b=Eb;Eb=Db=null;Hb(a);if(b)for(a=0;a<b.length;a++)Hb(b[a])}}\n\tfunction Kb(a,b){return a(b)}function Lb(a,b,c){return a(b,c)}function Mb(){}var Nb=!1;function Ob(a,b){if(Nb)return a(b);Nb=!0;try{return Kb(a,b)}finally{if(Nb=!1,null!==Db||null!==Eb)Mb(),Jb()}}var Pb={color:!0,date:!0,datetime:!0,\"datetime-local\":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function Qb(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return\"input\"===b?!!Pb[a.type]:\"textarea\"===b?!0:!1}\n\tfunction Rb(a){a=a.target||a.srcElement||window;a.correspondingUseElement&&(a=a.correspondingUseElement);return 3===a.nodeType?a.parentNode:a}function Sb(a){if(!Sa)return!1;a=\"on\"+a;var b=a in document;b||(b=document.createElement(\"div\"),b.setAttribute(a,\"return;\"),b=\"function\"===typeof b[a]);return b}function Tb(a){var b=a.type;return(a=a.nodeName)&&\"input\"===a.toLowerCase()&&(\"checkbox\"===b||\"radio\"===b)}\n\tfunction Ub(a){var b=Tb(a)?\"checked\":\"value\",c=Object.getOwnPropertyDescriptor(a.constructor.prototype,b),d=\"\"+a[b];if(!a.hasOwnProperty(b)&&\"undefined\"!==typeof c&&\"function\"===typeof c.get&&\"function\"===typeof c.set){var e=c.get,f=c.set;Object.defineProperty(a,b,{configurable:!0,get:function(){return e.call(this)},set:function(a){d=\"\"+a;f.call(this,a)}});Object.defineProperty(a,b,{enumerable:c.enumerable});return{getValue:function(){return d},setValue:function(a){d=\"\"+a},stopTracking:function(){a._valueTracker=\n\tnull;delete a[b]}}}}function Vb(a){a._valueTracker||(a._valueTracker=Ub(a))}function Wb(a){if(!a)return!1;var b=a._valueTracker;if(!b)return!0;var c=b.getValue();var d=\"\";a&&(d=Tb(a)?a.checked?\"true\":\"false\":a.value);a=d;return a!==c?(b.setValue(a),!0):!1}\n\tvar Xb=aa.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,Yb=/^(.*)[\\\\\\/]/,D=\"function\"===typeof Symbol&&Symbol.for,Zb=D?Symbol.for(\"react.element\"):60103,$b=D?Symbol.for(\"react.portal\"):60106,ac=D?Symbol.for(\"react.fragment\"):60107,bc=D?Symbol.for(\"react.strict_mode\"):60108,cc=D?Symbol.for(\"react.profiler\"):60114,dc=D?Symbol.for(\"react.provider\"):60109,ec=D?Symbol.for(\"react.context\"):60110,fc=D?Symbol.for(\"react.concurrent_mode\"):60111,gc=D?Symbol.for(\"react.forward_ref\"):60112,hc=D?Symbol.for(\"react.suspense\"):\n\t60113,ic=D?Symbol.for(\"react.memo\"):60115,jc=D?Symbol.for(\"react.lazy\"):60116,kc=\"function\"===typeof Symbol&&Symbol.iterator;function lc(a){if(null===a||\"object\"!==typeof a)return null;a=kc&&a[kc]||a[\"@@iterator\"];return\"function\"===typeof a?a:null}\n\tfunction mc(a){if(null==a)return null;if(\"function\"===typeof a)return a.displayName||a.name||null;if(\"string\"===typeof a)return a;switch(a){case fc:return\"ConcurrentMode\";case ac:return\"Fragment\";case $b:return\"Portal\";case cc:return\"Profiler\";case bc:return\"StrictMode\";case hc:return\"Suspense\"}if(\"object\"===typeof a)switch(a.$$typeof){case ec:return\"Context.Consumer\";case dc:return\"Context.Provider\";case gc:var b=a.render;b=b.displayName||b.name||\"\";return a.displayName||(\"\"!==b?\"ForwardRef(\"+b+\n\t\")\":\"ForwardRef\");case ic:return mc(a.type);case jc:if(a=1===a._status?a._result:null)return mc(a)}return null}function nc(a){var b=\"\";do{a:switch(a.tag){case 3:case 4:case 6:case 7:case 10:case 9:var c=\"\";break a;default:var d=a._debugOwner,e=a._debugSource,f=mc(a.type);c=null;d&&(c=mc(d.type));d=f;f=\"\";e?f=\" (at \"+e.fileName.replace(Yb,\"\")+\":\"+e.lineNumber+\")\":c&&(f=\" (created by \"+c+\")\");c=\"\\n    in \"+(d||\"Unknown\")+f}b+=c;a=a.return}while(a);return b}\n\tvar oc=/^[:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD][:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040]*$/,pc=Object.prototype.hasOwnProperty,qc={},rc={};\n\tfunction sc(a){if(pc.call(rc,a))return!0;if(pc.call(qc,a))return!1;if(oc.test(a))return rc[a]=!0;qc[a]=!0;return!1}function tc(a,b,c,d){if(null!==c&&0===c.type)return!1;switch(typeof b){case \"function\":case \"symbol\":return!0;case \"boolean\":if(d)return!1;if(null!==c)return!c.acceptsBooleans;a=a.toLowerCase().slice(0,5);return\"data-\"!==a&&\"aria-\"!==a;default:return!1}}\n\tfunction uc(a,b,c,d){if(null===b||\"undefined\"===typeof b||tc(a,b,c,d))return!0;if(d)return!1;if(null!==c)switch(c.type){case 3:return!b;case 4:return!1===b;case 5:return isNaN(b);case 6:return isNaN(b)||1>b}return!1}function E(a,b,c,d,e){this.acceptsBooleans=2===b||3===b||4===b;this.attributeName=d;this.attributeNamespace=e;this.mustUseProperty=c;this.propertyName=a;this.type=b}var F={};\n\t\"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style\".split(\" \").forEach(function(a){F[a]=new E(a,0,!1,a,null)});[[\"acceptCharset\",\"accept-charset\"],[\"className\",\"class\"],[\"htmlFor\",\"for\"],[\"httpEquiv\",\"http-equiv\"]].forEach(function(a){var b=a[0];F[b]=new E(b,1,!1,a[1],null)});[\"contentEditable\",\"draggable\",\"spellCheck\",\"value\"].forEach(function(a){F[a]=new E(a,2,!1,a.toLowerCase(),null)});\n\t[\"autoReverse\",\"externalResourcesRequired\",\"focusable\",\"preserveAlpha\"].forEach(function(a){F[a]=new E(a,2,!1,a,null)});\"allowFullScreen async autoFocus autoPlay controls default defer disabled formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope\".split(\" \").forEach(function(a){F[a]=new E(a,3,!1,a.toLowerCase(),null)});[\"checked\",\"multiple\",\"muted\",\"selected\"].forEach(function(a){F[a]=new E(a,3,!0,a,null)});\n\t[\"capture\",\"download\"].forEach(function(a){F[a]=new E(a,4,!1,a,null)});[\"cols\",\"rows\",\"size\",\"span\"].forEach(function(a){F[a]=new E(a,6,!1,a,null)});[\"rowSpan\",\"start\"].forEach(function(a){F[a]=new E(a,5,!1,a.toLowerCase(),null)});var vc=/[\\-:]([a-z])/g;function wc(a){return a[1].toUpperCase()}\n\t\"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height\".split(\" \").forEach(function(a){var b=a.replace(vc,\n\twc);F[b]=new E(b,1,!1,a,null)});\"xlink:actuate xlink:arcrole xlink:href xlink:role xlink:show xlink:title xlink:type\".split(\" \").forEach(function(a){var b=a.replace(vc,wc);F[b]=new E(b,1,!1,a,\"http://www.w3.org/1999/xlink\")});[\"xml:base\",\"xml:lang\",\"xml:space\"].forEach(function(a){var b=a.replace(vc,wc);F[b]=new E(b,1,!1,a,\"http://www.w3.org/XML/1998/namespace\")});F.tabIndex=new E(\"tabIndex\",1,!1,\"tabindex\",null);\n\tfunction xc(a,b,c,d){var e=F.hasOwnProperty(b)?F[b]:null;var f=null!==e?0===e.type:d?!1:!(2<b.length)||\"o\"!==b[0]&&\"O\"!==b[0]||\"n\"!==b[1]&&\"N\"!==b[1]?!1:!0;f||(uc(b,c,e,d)&&(c=null),d||null===e?sc(b)&&(null===c?a.removeAttribute(b):a.setAttribute(b,\"\"+c)):e.mustUseProperty?a[e.propertyName]=null===c?3===e.type?!1:\"\":c:(b=e.attributeName,d=e.attributeNamespace,null===c?a.removeAttribute(b):(e=e.type,c=3===e||4===e&&!0===c?\"\":\"\"+c,d?a.setAttributeNS(d,b,c):a.setAttribute(b,c))))}\n\tfunction yc(a){switch(typeof a){case \"boolean\":case \"number\":case \"object\":case \"string\":case \"undefined\":return a;default:return\"\"}}function zc(a,b){var c=b.checked;return n({},b,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=c?c:a._wrapperState.initialChecked})}\n\tfunction Ac(a,b){var c=null==b.defaultValue?\"\":b.defaultValue,d=null!=b.checked?b.checked:b.defaultChecked;c=yc(null!=b.value?b.value:c);a._wrapperState={initialChecked:d,initialValue:c,controlled:\"checkbox\"===b.type||\"radio\"===b.type?null!=b.checked:null!=b.value}}function Bc(a,b){b=b.checked;null!=b&&xc(a,\"checked\",b,!1)}\n\tfunction Cc(a,b){Bc(a,b);var c=yc(b.value),d=b.type;if(null!=c)if(\"number\"===d){if(0===c&&\"\"===a.value||a.value!=c)a.value=\"\"+c}else a.value!==\"\"+c&&(a.value=\"\"+c);else if(\"submit\"===d||\"reset\"===d){a.removeAttribute(\"value\");return}b.hasOwnProperty(\"value\")?Dc(a,b.type,c):b.hasOwnProperty(\"defaultValue\")&&Dc(a,b.type,yc(b.defaultValue));null==b.checked&&null!=b.defaultChecked&&(a.defaultChecked=!!b.defaultChecked)}\n\tfunction Ec(a,b,c){if(b.hasOwnProperty(\"value\")||b.hasOwnProperty(\"defaultValue\")){var d=b.type;if(!(\"submit\"!==d&&\"reset\"!==d||void 0!==b.value&&null!==b.value))return;b=\"\"+a._wrapperState.initialValue;c||b===a.value||(a.value=b);a.defaultValue=b}c=a.name;\"\"!==c&&(a.name=\"\");a.defaultChecked=!a.defaultChecked;a.defaultChecked=!!a._wrapperState.initialChecked;\"\"!==c&&(a.name=c)}\n\tfunction Dc(a,b,c){if(\"number\"!==b||a.ownerDocument.activeElement!==a)null==c?a.defaultValue=\"\"+a._wrapperState.initialValue:a.defaultValue!==\"\"+c&&(a.defaultValue=\"\"+c)}var Fc={change:{phasedRegistrationNames:{bubbled:\"onChange\",captured:\"onChangeCapture\"},dependencies:\"blur change click focus input keydown keyup selectionchange\".split(\" \")}};function Gc(a,b,c){a=z.getPooled(Fc.change,a,b,c);a.type=\"change\";Ib(c);Ra(a);return a}var Jc=null,Kc=null;function Lc(a){Ea(a)}\n\tfunction Mc(a){var b=Ka(a);if(Wb(b))return a}function Nc(a,b){if(\"change\"===a)return b}var Oc=!1;Sa&&(Oc=Sb(\"input\")&&(!document.documentMode||9<document.documentMode));function Pc(){Jc&&(Jc.detachEvent(\"onpropertychange\",Qc),Kc=Jc=null)}function Qc(a){\"value\"===a.propertyName&&Mc(Kc)&&(a=Gc(Kc,a,Rb(a)),Ob(Lc,a))}function Rc(a,b,c){\"focus\"===a?(Pc(),Jc=b,Kc=c,Jc.attachEvent(\"onpropertychange\",Qc)):\"blur\"===a&&Pc()}function Sc(a){if(\"selectionchange\"===a||\"keyup\"===a||\"keydown\"===a)return Mc(Kc)}\n\tfunction Tc(a,b){if(\"click\"===a)return Mc(b)}function Uc(a,b){if(\"input\"===a||\"change\"===a)return Mc(b)}\n\tvar Vc={eventTypes:Fc,_isInputEventSupported:Oc,extractEvents:function(a,b,c,d){var e=b?Ka(b):window,f=void 0,g=void 0,h=e.nodeName&&e.nodeName.toLowerCase();\"select\"===h||\"input\"===h&&\"file\"===e.type?f=Nc:Qb(e)?Oc?f=Uc:(f=Sc,g=Rc):(h=e.nodeName)&&\"input\"===h.toLowerCase()&&(\"checkbox\"===e.type||\"radio\"===e.type)&&(f=Tc);if(f&&(f=f(a,b)))return Gc(f,c,d);g&&g(a,e,b);\"blur\"===a&&(a=e._wrapperState)&&a.controlled&&\"number\"===e.type&&Dc(e,\"number\",e.value)}},Wc=z.extend({view:null,detail:null}),Xc={Alt:\"altKey\",\n\tControl:\"ctrlKey\",Meta:\"metaKey\",Shift:\"shiftKey\"};function Yc(a){var b=this.nativeEvent;return b.getModifierState?b.getModifierState(a):(a=Xc[a])?!!b[a]:!1}function Zc(){return Yc}\n\tvar $c=0,ad=0,bd=!1,cd=!1,dd=Wc.extend({screenX:null,screenY:null,clientX:null,clientY:null,pageX:null,pageY:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,getModifierState:Zc,button:null,buttons:null,relatedTarget:function(a){return a.relatedTarget||(a.fromElement===a.srcElement?a.toElement:a.fromElement)},movementX:function(a){if(\"movementX\"in a)return a.movementX;var b=$c;$c=a.screenX;return bd?\"mousemove\"===a.type?a.screenX-b:0:(bd=!0,0)},movementY:function(a){if(\"movementY\"in a)return a.movementY;\n\tvar b=ad;ad=a.screenY;return cd?\"mousemove\"===a.type?a.screenY-b:0:(cd=!0,0)}}),ed=dd.extend({pointerId:null,width:null,height:null,pressure:null,tangentialPressure:null,tiltX:null,tiltY:null,twist:null,pointerType:null,isPrimary:null}),fd={mouseEnter:{registrationName:\"onMouseEnter\",dependencies:[\"mouseout\",\"mouseover\"]},mouseLeave:{registrationName:\"onMouseLeave\",dependencies:[\"mouseout\",\"mouseover\"]},pointerEnter:{registrationName:\"onPointerEnter\",dependencies:[\"pointerout\",\"pointerover\"]},pointerLeave:{registrationName:\"onPointerLeave\",\n\tdependencies:[\"pointerout\",\"pointerover\"]}},gd={eventTypes:fd,extractEvents:function(a,b,c,d){var e=\"mouseover\"===a||\"pointerover\"===a,f=\"mouseout\"===a||\"pointerout\"===a;if(e&&(c.relatedTarget||c.fromElement)||!f&&!e)return null;e=d.window===d?d:(e=d.ownerDocument)?e.defaultView||e.parentWindow:window;f?(f=b,b=(b=c.relatedTarget||c.toElement)?Ia(b):null):f=null;if(f===b)return null;var g=void 0,h=void 0,k=void 0,l=void 0;if(\"mouseout\"===a||\"mouseover\"===a)g=dd,h=fd.mouseLeave,k=fd.mouseEnter,l=\"mouse\";\n\telse if(\"pointerout\"===a||\"pointerover\"===a)g=ed,h=fd.pointerLeave,k=fd.pointerEnter,l=\"pointer\";var m=null==f?e:Ka(f);e=null==b?e:Ka(b);a=g.getPooled(h,f,c,d);a.type=l+\"leave\";a.target=m;a.relatedTarget=e;c=g.getPooled(k,b,c,d);c.type=l+\"enter\";c.target=e;c.relatedTarget=m;d=b;if(f&&d)a:{b=f;e=d;l=0;for(g=b;g;g=Ma(g))l++;g=0;for(k=e;k;k=Ma(k))g++;for(;0<l-g;)b=Ma(b),l--;for(;0<g-l;)e=Ma(e),g--;for(;l--;){if(b===e||b===e.alternate)break a;b=Ma(b);e=Ma(e)}b=null}else b=null;e=b;for(b=[];f&&f!==e;){l=\n\tf.alternate;if(null!==l&&l===e)break;b.push(f);f=Ma(f)}for(f=[];d&&d!==e;){l=d.alternate;if(null!==l&&l===e)break;f.push(d);d=Ma(d)}for(d=0;d<b.length;d++)Pa(b[d],\"bubbled\",a);for(d=f.length;0<d--;)Pa(f[d],\"captured\",c);return[a,c]}},hd=Object.prototype.hasOwnProperty;function id(a,b){return a===b?0!==a||0!==b||1/a===1/b:a!==a&&b!==b}\n\tfunction jd(a,b){if(id(a,b))return!0;if(\"object\"!==typeof a||null===a||\"object\"!==typeof b||null===b)return!1;var c=Object.keys(a),d=Object.keys(b);if(c.length!==d.length)return!1;for(d=0;d<c.length;d++)if(!hd.call(b,c[d])||!id(a[c[d]],b[c[d]]))return!1;return!0}function kd(a){var b=a;if(a.alternate)for(;b.return;)b=b.return;else{if(0!==(b.effectTag&2))return 1;for(;b.return;)if(b=b.return,0!==(b.effectTag&2))return 1}return 3===b.tag?2:3}function ld(a){2!==kd(a)?t(\"188\"):void 0}\n\tfunction md(a){var b=a.alternate;if(!b)return b=kd(a),3===b?t(\"188\"):void 0,1===b?null:a;for(var c=a,d=b;;){var e=c.return,f=e?e.alternate:null;if(!e||!f)break;if(e.child===f.child){for(var g=e.child;g;){if(g===c)return ld(e),a;if(g===d)return ld(e),b;g=g.sibling}t(\"188\")}if(c.return!==d.return)c=e,d=f;else{g=!1;for(var h=e.child;h;){if(h===c){g=!0;c=e;d=f;break}if(h===d){g=!0;d=e;c=f;break}h=h.sibling}if(!g){for(h=f.child;h;){if(h===c){g=!0;c=f;d=e;break}if(h===d){g=!0;d=f;c=e;break}h=h.sibling}g?\n\tvoid 0:t(\"189\")}}c.alternate!==d?t(\"190\"):void 0}3!==c.tag?t(\"188\"):void 0;return c.stateNode.current===c?a:b}function nd(a){a=md(a);if(!a)return null;for(var b=a;;){if(5===b.tag||6===b.tag)return b;if(b.child)b.child.return=b,b=b.child;else{if(b===a)break;for(;!b.sibling;){if(!b.return||b.return===a)return null;b=b.return}b.sibling.return=b.return;b=b.sibling}}return null}\n\tvar od=z.extend({animationName:null,elapsedTime:null,pseudoElement:null}),pd=z.extend({clipboardData:function(a){return\"clipboardData\"in a?a.clipboardData:window.clipboardData}}),qd=Wc.extend({relatedTarget:null});function rd(a){var b=a.keyCode;\"charCode\"in a?(a=a.charCode,0===a&&13===b&&(a=13)):a=b;10===a&&(a=13);return 32<=a||13===a?a:0}\n\tvar sd={Esc:\"Escape\",Spacebar:\" \",Left:\"ArrowLeft\",Up:\"ArrowUp\",Right:\"ArrowRight\",Down:\"ArrowDown\",Del:\"Delete\",Win:\"OS\",Menu:\"ContextMenu\",Apps:\"ContextMenu\",Scroll:\"ScrollLock\",MozPrintableKey:\"Unidentified\"},td={8:\"Backspace\",9:\"Tab\",12:\"Clear\",13:\"Enter\",16:\"Shift\",17:\"Control\",18:\"Alt\",19:\"Pause\",20:\"CapsLock\",27:\"Escape\",32:\" \",33:\"PageUp\",34:\"PageDown\",35:\"End\",36:\"Home\",37:\"ArrowLeft\",38:\"ArrowUp\",39:\"ArrowRight\",40:\"ArrowDown\",45:\"Insert\",46:\"Delete\",112:\"F1\",113:\"F2\",114:\"F3\",115:\"F4\",\n\t116:\"F5\",117:\"F6\",118:\"F7\",119:\"F8\",120:\"F9\",121:\"F10\",122:\"F11\",123:\"F12\",144:\"NumLock\",145:\"ScrollLock\",224:\"Meta\"},ud=Wc.extend({key:function(a){if(a.key){var b=sd[a.key]||a.key;if(\"Unidentified\"!==b)return b}return\"keypress\"===a.type?(a=rd(a),13===a?\"Enter\":String.fromCharCode(a)):\"keydown\"===a.type||\"keyup\"===a.type?td[a.keyCode]||\"Unidentified\":\"\"},location:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,repeat:null,locale:null,getModifierState:Zc,charCode:function(a){return\"keypress\"===\n\ta.type?rd(a):0},keyCode:function(a){return\"keydown\"===a.type||\"keyup\"===a.type?a.keyCode:0},which:function(a){return\"keypress\"===a.type?rd(a):\"keydown\"===a.type||\"keyup\"===a.type?a.keyCode:0}}),vd=dd.extend({dataTransfer:null}),wd=Wc.extend({touches:null,targetTouches:null,changedTouches:null,altKey:null,metaKey:null,ctrlKey:null,shiftKey:null,getModifierState:Zc}),xd=z.extend({propertyName:null,elapsedTime:null,pseudoElement:null}),yd=dd.extend({deltaX:function(a){return\"deltaX\"in a?a.deltaX:\"wheelDeltaX\"in\n\ta?-a.wheelDeltaX:0},deltaY:function(a){return\"deltaY\"in a?a.deltaY:\"wheelDeltaY\"in a?-a.wheelDeltaY:\"wheelDelta\"in a?-a.wheelDelta:0},deltaZ:null,deltaMode:null}),zd=[[\"abort\",\"abort\"],[Ya,\"animationEnd\"],[Za,\"animationIteration\"],[$a,\"animationStart\"],[\"canplay\",\"canPlay\"],[\"canplaythrough\",\"canPlayThrough\"],[\"drag\",\"drag\"],[\"dragenter\",\"dragEnter\"],[\"dragexit\",\"dragExit\"],[\"dragleave\",\"dragLeave\"],[\"dragover\",\"dragOver\"],[\"durationchange\",\"durationChange\"],[\"emptied\",\"emptied\"],[\"encrypted\",\"encrypted\"],\n\t[\"ended\",\"ended\"],[\"error\",\"error\"],[\"gotpointercapture\",\"gotPointerCapture\"],[\"load\",\"load\"],[\"loadeddata\",\"loadedData\"],[\"loadedmetadata\",\"loadedMetadata\"],[\"loadstart\",\"loadStart\"],[\"lostpointercapture\",\"lostPointerCapture\"],[\"mousemove\",\"mouseMove\"],[\"mouseout\",\"mouseOut\"],[\"mouseover\",\"mouseOver\"],[\"playing\",\"playing\"],[\"pointermove\",\"pointerMove\"],[\"pointerout\",\"pointerOut\"],[\"pointerover\",\"pointerOver\"],[\"progress\",\"progress\"],[\"scroll\",\"scroll\"],[\"seeking\",\"seeking\"],[\"stalled\",\"stalled\"],\n\t[\"suspend\",\"suspend\"],[\"timeupdate\",\"timeUpdate\"],[\"toggle\",\"toggle\"],[\"touchmove\",\"touchMove\"],[ab,\"transitionEnd\"],[\"waiting\",\"waiting\"],[\"wheel\",\"wheel\"]],Ad={},Bd={};function Cd(a,b){var c=a[0];a=a[1];var d=\"on\"+(a[0].toUpperCase()+a.slice(1));b={phasedRegistrationNames:{bubbled:d,captured:d+\"Capture\"},dependencies:[c],isInteractive:b};Ad[a]=b;Bd[c]=b}\n\t[[\"blur\",\"blur\"],[\"cancel\",\"cancel\"],[\"click\",\"click\"],[\"close\",\"close\"],[\"contextmenu\",\"contextMenu\"],[\"copy\",\"copy\"],[\"cut\",\"cut\"],[\"auxclick\",\"auxClick\"],[\"dblclick\",\"doubleClick\"],[\"dragend\",\"dragEnd\"],[\"dragstart\",\"dragStart\"],[\"drop\",\"drop\"],[\"focus\",\"focus\"],[\"input\",\"input\"],[\"invalid\",\"invalid\"],[\"keydown\",\"keyDown\"],[\"keypress\",\"keyPress\"],[\"keyup\",\"keyUp\"],[\"mousedown\",\"mouseDown\"],[\"mouseup\",\"mouseUp\"],[\"paste\",\"paste\"],[\"pause\",\"pause\"],[\"play\",\"play\"],[\"pointercancel\",\"pointerCancel\"],\n\t[\"pointerdown\",\"pointerDown\"],[\"pointerup\",\"pointerUp\"],[\"ratechange\",\"rateChange\"],[\"reset\",\"reset\"],[\"seeked\",\"seeked\"],[\"submit\",\"submit\"],[\"touchcancel\",\"touchCancel\"],[\"touchend\",\"touchEnd\"],[\"touchstart\",\"touchStart\"],[\"volumechange\",\"volumeChange\"]].forEach(function(a){Cd(a,!0)});zd.forEach(function(a){Cd(a,!1)});\n\tvar Dd={eventTypes:Ad,isInteractiveTopLevelEventType:function(a){a=Bd[a];return void 0!==a&&!0===a.isInteractive},extractEvents:function(a,b,c,d){var e=Bd[a];if(!e)return null;switch(a){case \"keypress\":if(0===rd(c))return null;case \"keydown\":case \"keyup\":a=ud;break;case \"blur\":case \"focus\":a=qd;break;case \"click\":if(2===c.button)return null;case \"auxclick\":case \"dblclick\":case \"mousedown\":case \"mousemove\":case \"mouseup\":case \"mouseout\":case \"mouseover\":case \"contextmenu\":a=dd;break;case \"drag\":case \"dragend\":case \"dragenter\":case \"dragexit\":case \"dragleave\":case \"dragover\":case \"dragstart\":case \"drop\":a=\n\tvd;break;case \"touchcancel\":case \"touchend\":case \"touchmove\":case \"touchstart\":a=wd;break;case Ya:case Za:case $a:a=od;break;case ab:a=xd;break;case \"scroll\":a=Wc;break;case \"wheel\":a=yd;break;case \"copy\":case \"cut\":case \"paste\":a=pd;break;case \"gotpointercapture\":case \"lostpointercapture\":case \"pointercancel\":case \"pointerdown\":case \"pointermove\":case \"pointerout\":case \"pointerover\":case \"pointerup\":a=ed;break;default:a=z}b=a.getPooled(e,b,c,d);Ra(b);return b}},Ed=Dd.isInteractiveTopLevelEventType,\n\tFd=[];function Gd(a){var b=a.targetInst,c=b;do{if(!c){a.ancestors.push(c);break}var d;for(d=c;d.return;)d=d.return;d=3!==d.tag?null:d.stateNode.containerInfo;if(!d)break;a.ancestors.push(c);c=Ia(d)}while(c);for(c=0;c<a.ancestors.length;c++){b=a.ancestors[c];var e=Rb(a.nativeEvent);d=a.topLevelType;for(var f=a.nativeEvent,g=null,h=0;h<pa.length;h++){var k=pa[h];k&&(k=k.extractEvents(d,b,f,e))&&(g=ya(g,k))}Ea(g)}}var Hd=!0;\n\tfunction H(a,b){if(!b)return null;var c=(Ed(a)?Id:Jd).bind(null,a);b.addEventListener(a,c,!1)}function Kd(a,b){if(!b)return null;var c=(Ed(a)?Id:Jd).bind(null,a);b.addEventListener(a,c,!0)}function Id(a,b){Lb(Jd,a,b)}\n\tfunction Jd(a,b){if(Hd){var c=Rb(b);c=Ia(c);null===c||\"number\"!==typeof c.tag||2===kd(c)||(c=null);if(Fd.length){var d=Fd.pop();d.topLevelType=a;d.nativeEvent=b;d.targetInst=c;a=d}else a={topLevelType:a,nativeEvent:b,targetInst:c,ancestors:[]};try{Ob(Gd,a)}finally{a.topLevelType=null,a.nativeEvent=null,a.targetInst=null,a.ancestors.length=0,10>Fd.length&&Fd.push(a)}}}var Ld={},Md=0,Nd=\"_reactListenersID\"+(\"\"+Math.random()).slice(2);\n\tfunction Od(a){Object.prototype.hasOwnProperty.call(a,Nd)||(a[Nd]=Md++,Ld[a[Nd]]={});return Ld[a[Nd]]}function Pd(a){a=a||(\"undefined\"!==typeof document?document:void 0);if(\"undefined\"===typeof a)return null;try{return a.activeElement||a.body}catch(b){return a.body}}function Qd(a){for(;a&&a.firstChild;)a=a.firstChild;return a}\n\tfunction Rd(a,b){var c=Qd(a);a=0;for(var d;c;){if(3===c.nodeType){d=a+c.textContent.length;if(a<=b&&d>=b)return{node:c,offset:b-a};a=d}a:{for(;c;){if(c.nextSibling){c=c.nextSibling;break a}c=c.parentNode}c=void 0}c=Qd(c)}}function Sd(a,b){return a&&b?a===b?!0:a&&3===a.nodeType?!1:b&&3===b.nodeType?Sd(a,b.parentNode):\"contains\"in a?a.contains(b):a.compareDocumentPosition?!!(a.compareDocumentPosition(b)&16):!1:!1}\n\tfunction Td(){for(var a=window,b=Pd();b instanceof a.HTMLIFrameElement;){try{a=b.contentDocument.defaultView}catch(c){break}b=Pd(a.document)}return b}function Ud(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return b&&(\"input\"===b&&(\"text\"===a.type||\"search\"===a.type||\"tel\"===a.type||\"url\"===a.type||\"password\"===a.type)||\"textarea\"===b||\"true\"===a.contentEditable)}\n\tvar Vd=Sa&&\"documentMode\"in document&&11>=document.documentMode,Wd={select:{phasedRegistrationNames:{bubbled:\"onSelect\",captured:\"onSelectCapture\"},dependencies:\"blur contextmenu dragend focus keydown keyup mousedown mouseup selectionchange\".split(\" \")}},Xd=null,Yd=null,Zd=null,$d=!1;\n\tfunction ae(a,b){var c=b.window===b?b.document:9===b.nodeType?b:b.ownerDocument;if($d||null==Xd||Xd!==Pd(c))return null;c=Xd;\"selectionStart\"in c&&Ud(c)?c={start:c.selectionStart,end:c.selectionEnd}:(c=(c.ownerDocument&&c.ownerDocument.defaultView||window).getSelection(),c={anchorNode:c.anchorNode,anchorOffset:c.anchorOffset,focusNode:c.focusNode,focusOffset:c.focusOffset});return Zd&&jd(Zd,c)?null:(Zd=c,a=z.getPooled(Wd.select,Yd,a,b),a.type=\"select\",a.target=Xd,Ra(a),a)}\n\tvar be={eventTypes:Wd,extractEvents:function(a,b,c,d){var e=d.window===d?d.document:9===d.nodeType?d:d.ownerDocument,f;if(!(f=!e)){a:{e=Od(e);f=ta.onSelect;for(var g=0;g<f.length;g++){var h=f[g];if(!e.hasOwnProperty(h)||!e[h]){e=!1;break a}}e=!0}f=!e}if(f)return null;e=b?Ka(b):window;switch(a){case \"focus\":if(Qb(e)||\"true\"===e.contentEditable)Xd=e,Yd=b,Zd=null;break;case \"blur\":Zd=Yd=Xd=null;break;case \"mousedown\":$d=!0;break;case \"contextmenu\":case \"mouseup\":case \"dragend\":return $d=!1,ae(c,d);case \"selectionchange\":if(Vd)break;\n\tcase \"keydown\":case \"keyup\":return ae(c,d)}return null}};Ca.injectEventPluginOrder(\"ResponderEventPlugin SimpleEventPlugin EnterLeaveEventPlugin ChangeEventPlugin SelectEventPlugin BeforeInputEventPlugin\".split(\" \"));ua=La;va=Ja;wa=Ka;Ca.injectEventPluginsByName({SimpleEventPlugin:Dd,EnterLeaveEventPlugin:gd,ChangeEventPlugin:Vc,SelectEventPlugin:be,BeforeInputEventPlugin:Bb});function de(a){var b=\"\";aa.Children.forEach(a,function(a){null!=a&&(b+=a)});return b}\n\tfunction ee(a,b){a=n({children:void 0},b);if(b=de(b.children))a.children=b;return a}function fe(a,b,c,d){a=a.options;if(b){b={};for(var e=0;e<c.length;e++)b[\"$\"+c[e]]=!0;for(c=0;c<a.length;c++)e=b.hasOwnProperty(\"$\"+a[c].value),a[c].selected!==e&&(a[c].selected=e),e&&d&&(a[c].defaultSelected=!0)}else{c=\"\"+yc(c);b=null;for(e=0;e<a.length;e++){if(a[e].value===c){a[e].selected=!0;d&&(a[e].defaultSelected=!0);return}null!==b||a[e].disabled||(b=a[e])}null!==b&&(b.selected=!0)}}\n\tfunction ge(a,b){null!=b.dangerouslySetInnerHTML?t(\"91\"):void 0;return n({},b,{value:void 0,defaultValue:void 0,children:\"\"+a._wrapperState.initialValue})}function he(a,b){var c=b.value;null==c&&(c=b.defaultValue,b=b.children,null!=b&&(null!=c?t(\"92\"):void 0,Array.isArray(b)&&(1>=b.length?void 0:t(\"93\"),b=b[0]),c=b),null==c&&(c=\"\"));a._wrapperState={initialValue:yc(c)}}\n\tfunction ie(a,b){var c=yc(b.value),d=yc(b.defaultValue);null!=c&&(c=\"\"+c,c!==a.value&&(a.value=c),null==b.defaultValue&&a.defaultValue!==c&&(a.defaultValue=c));null!=d&&(a.defaultValue=\"\"+d)}function je(a){var b=a.textContent;b===a._wrapperState.initialValue&&(a.value=b)}var ke={html:\"http://www.w3.org/1999/xhtml\",mathml:\"http://www.w3.org/1998/Math/MathML\",svg:\"http://www.w3.org/2000/svg\"};\n\tfunction le(a){switch(a){case \"svg\":return\"http://www.w3.org/2000/svg\";case \"math\":return\"http://www.w3.org/1998/Math/MathML\";default:return\"http://www.w3.org/1999/xhtml\"}}function me(a,b){return null==a||\"http://www.w3.org/1999/xhtml\"===a?le(b):\"http://www.w3.org/2000/svg\"===a&&\"foreignObject\"===b?\"http://www.w3.org/1999/xhtml\":a}\n\tvar ne=void 0,oe=function(a){return\"undefined\"!==typeof MSApp&&MSApp.execUnsafeLocalFunction?function(b,c,d,e){MSApp.execUnsafeLocalFunction(function(){return a(b,c,d,e)})}:a}(function(a,b){if(a.namespaceURI!==ke.svg||\"innerHTML\"in a)a.innerHTML=b;else{ne=ne||document.createElement(\"div\");ne.innerHTML=\"<svg>\"+b+\"</svg>\";for(b=ne.firstChild;a.firstChild;)a.removeChild(a.firstChild);for(;b.firstChild;)a.appendChild(b.firstChild)}});\n\tfunction pe(a,b){if(b){var c=a.firstChild;if(c&&c===a.lastChild&&3===c.nodeType){c.nodeValue=b;return}}a.textContent=b}\n\tvar qe={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,\n\tfloodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},re=[\"Webkit\",\"ms\",\"Moz\",\"O\"];Object.keys(qe).forEach(function(a){re.forEach(function(b){b=b+a.charAt(0).toUpperCase()+a.substring(1);qe[b]=qe[a]})});function se(a,b,c){return null==b||\"boolean\"===typeof b||\"\"===b?\"\":c||\"number\"!==typeof b||0===b||qe.hasOwnProperty(a)&&qe[a]?(\"\"+b).trim():b+\"px\"}\n\tfunction te(a,b){a=a.style;for(var c in b)if(b.hasOwnProperty(c)){var d=0===c.indexOf(\"--\"),e=se(c,b[c],d);\"float\"===c&&(c=\"cssFloat\");d?a.setProperty(c,e):a[c]=e}}var ue=n({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});\n\tfunction ve(a,b){b&&(ue[a]&&(null!=b.children||null!=b.dangerouslySetInnerHTML?t(\"137\",a,\"\"):void 0),null!=b.dangerouslySetInnerHTML&&(null!=b.children?t(\"60\"):void 0,\"object\"===typeof b.dangerouslySetInnerHTML&&\"__html\"in b.dangerouslySetInnerHTML?void 0:t(\"61\")),null!=b.style&&\"object\"!==typeof b.style?t(\"62\",\"\"):void 0)}\n\tfunction we(a,b){if(-1===a.indexOf(\"-\"))return\"string\"===typeof b.is;switch(a){case \"annotation-xml\":case \"color-profile\":case \"font-face\":case \"font-face-src\":case \"font-face-uri\":case \"font-face-format\":case \"font-face-name\":case \"missing-glyph\":return!1;default:return!0}}\n\tfunction xe(a,b){a=9===a.nodeType||11===a.nodeType?a:a.ownerDocument;var c=Od(a);b=ta[b];for(var d=0;d<b.length;d++){var e=b[d];if(!c.hasOwnProperty(e)||!c[e]){switch(e){case \"scroll\":Kd(\"scroll\",a);break;case \"focus\":case \"blur\":Kd(\"focus\",a);Kd(\"blur\",a);c.blur=!0;c.focus=!0;break;case \"cancel\":case \"close\":Sb(e)&&Kd(e,a);break;case \"invalid\":case \"submit\":case \"reset\":break;default:-1===bb.indexOf(e)&&H(e,a)}c[e]=!0}}}function ye(){}var ze=null,Ae=null;\n\tfunction Be(a,b){switch(a){case \"button\":case \"input\":case \"select\":case \"textarea\":return!!b.autoFocus}return!1}function Ce(a,b){return\"textarea\"===a||\"option\"===a||\"noscript\"===a||\"string\"===typeof b.children||\"number\"===typeof b.children||\"object\"===typeof b.dangerouslySetInnerHTML&&null!==b.dangerouslySetInnerHTML&&null!=b.dangerouslySetInnerHTML.__html}var De=\"function\"===typeof setTimeout?setTimeout:void 0,Ee=\"function\"===typeof clearTimeout?clearTimeout:void 0;\n\tfunction Fe(a,b,c,d,e){a[Ha]=e;\"input\"===c&&\"radio\"===e.type&&null!=e.name&&Bc(a,e);we(c,d);d=we(c,e);for(var f=0;f<b.length;f+=2){var g=b[f],h=b[f+1];\"style\"===g?te(a,h):\"dangerouslySetInnerHTML\"===g?oe(a,h):\"children\"===g?pe(a,h):xc(a,g,h,d)}switch(c){case \"input\":Cc(a,e);break;case \"textarea\":ie(a,e);break;case \"select\":b=a._wrapperState.wasMultiple,a._wrapperState.wasMultiple=!!e.multiple,c=e.value,null!=c?fe(a,!!e.multiple,c,!1):b!==!!e.multiple&&(null!=e.defaultValue?fe(a,!!e.multiple,e.defaultValue,\n\t!0):fe(a,!!e.multiple,e.multiple?[]:\"\",!1))}}function Ge(a){for(a=a.nextSibling;a&&1!==a.nodeType&&3!==a.nodeType;)a=a.nextSibling;return a}function He(a){for(a=a.firstChild;a&&1!==a.nodeType&&3!==a.nodeType;)a=a.nextSibling;return a}new Set;var Ie=[],Je=-1;function I(a){0>Je||(a.current=Ie[Je],Ie[Je]=null,Je--)}function J(a,b){Je++;Ie[Je]=a.current;a.current=b}var Ke={},K={current:Ke},L={current:!1},Le=Ke;\n\tfunction Me(a,b){var c=a.type.contextTypes;if(!c)return Ke;var d=a.stateNode;if(d&&d.__reactInternalMemoizedUnmaskedChildContext===b)return d.__reactInternalMemoizedMaskedChildContext;var e={},f;for(f in c)e[f]=b[f];d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=b,a.__reactInternalMemoizedMaskedChildContext=e);return e}function M(a){a=a.childContextTypes;return null!==a&&void 0!==a}function Ne(a){I(L,a);I(K,a)}function Oe(a){I(L,a);I(K,a)}\n\tfunction Pe(a,b,c){K.current!==Ke?t(\"168\"):void 0;J(K,b,a);J(L,c,a)}function Qe(a,b,c){var d=a.stateNode;a=b.childContextTypes;if(\"function\"!==typeof d.getChildContext)return c;d=d.getChildContext();for(var e in d)e in a?void 0:t(\"108\",mc(b)||\"Unknown\",e);return n({},c,d)}function Re(a){var b=a.stateNode;b=b&&b.__reactInternalMemoizedMergedChildContext||Ke;Le=K.current;J(K,b,a);J(L,L.current,a);return!0}\n\tfunction Se(a,b,c){var d=a.stateNode;d?void 0:t(\"169\");c?(b=Qe(a,b,Le),d.__reactInternalMemoizedMergedChildContext=b,I(L,a),I(K,a),J(K,b,a)):I(L,a);J(L,c,a)}var Te=null,Ue=null;function Ve(a){return function(b){try{return a(b)}catch(c){}}}\n\tfunction We(a){if(\"undefined\"===typeof __REACT_DEVTOOLS_GLOBAL_HOOK__)return!1;var b=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(b.isDisabled||!b.supportsFiber)return!0;try{var c=b.inject(a);Te=Ve(function(a){return b.onCommitFiberRoot(c,a)});Ue=Ve(function(a){return b.onCommitFiberUnmount(c,a)})}catch(d){}return!0}\n\tfunction Xe(a,b,c,d){this.tag=a;this.key=c;this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null;this.index=0;this.ref=null;this.pendingProps=b;this.firstContextDependency=this.memoizedState=this.updateQueue=this.memoizedProps=null;this.mode=d;this.effectTag=0;this.lastEffect=this.firstEffect=this.nextEffect=null;this.childExpirationTime=this.expirationTime=0;this.alternate=null}function N(a,b,c,d){return new Xe(a,b,c,d)}\n\tfunction Ye(a){a=a.prototype;return!(!a||!a.isReactComponent)}function Ze(a){if(\"function\"===typeof a)return Ye(a)?1:0;if(void 0!==a&&null!==a){a=a.$$typeof;if(a===gc)return 11;if(a===ic)return 14}return 2}\n\tfunction $e(a,b){var c=a.alternate;null===c?(c=N(a.tag,b,a.key,a.mode),c.elementType=a.elementType,c.type=a.type,c.stateNode=a.stateNode,c.alternate=a,a.alternate=c):(c.pendingProps=b,c.effectTag=0,c.nextEffect=null,c.firstEffect=null,c.lastEffect=null);c.childExpirationTime=a.childExpirationTime;c.expirationTime=a.expirationTime;c.child=a.child;c.memoizedProps=a.memoizedProps;c.memoizedState=a.memoizedState;c.updateQueue=a.updateQueue;c.firstContextDependency=a.firstContextDependency;c.sibling=a.sibling;\n\tc.index=a.index;c.ref=a.ref;return c}\n\tfunction af(a,b,c,d,e,f){var g=2;d=a;if(\"function\"===typeof a)Ye(a)&&(g=1);else if(\"string\"===typeof a)g=5;else a:switch(a){case ac:return bf(c.children,e,f,b);case fc:return cf(c,e|3,f,b);case bc:return cf(c,e|2,f,b);case cc:return a=N(12,c,b,e|4),a.elementType=cc,a.type=cc,a.expirationTime=f,a;case hc:return a=N(13,c,b,e),a.elementType=hc,a.type=hc,a.expirationTime=f,a;default:if(\"object\"===typeof a&&null!==a)switch(a.$$typeof){case dc:g=10;break a;case ec:g=9;break a;case gc:g=11;break a;case ic:g=\n\t14;break a;case jc:g=16;d=null;break a}t(\"130\",null==a?a:typeof a,\"\")}b=N(g,c,b,e);b.elementType=a;b.type=d;b.expirationTime=f;return b}function bf(a,b,c,d){a=N(7,a,d,b);a.expirationTime=c;return a}function cf(a,b,c,d){a=N(8,a,d,b);b=0===(b&1)?bc:fc;a.elementType=b;a.type=b;a.expirationTime=c;return a}function df(a,b,c){a=N(6,a,null,b);a.expirationTime=c;return a}\n\tfunction ef(a,b,c){b=N(4,null!==a.children?a.children:[],a.key,b);b.expirationTime=c;b.stateNode={containerInfo:a.containerInfo,pendingChildren:null,implementation:a.implementation};return b}function ff(a,b){a.didError=!1;var c=a.earliestPendingTime;0===c?a.earliestPendingTime=a.latestPendingTime=b:c<b?a.earliestPendingTime=b:a.latestPendingTime>b&&(a.latestPendingTime=b);gf(b,a)}\n\tfunction hf(a,b){a.didError=!1;a.latestPingedTime>=b&&(a.latestPingedTime=0);var c=a.earliestPendingTime,d=a.latestPendingTime;c===b?a.earliestPendingTime=d===b?a.latestPendingTime=0:d:d===b&&(a.latestPendingTime=c);c=a.earliestSuspendedTime;d=a.latestSuspendedTime;0===c?a.earliestSuspendedTime=a.latestSuspendedTime=b:c<b?a.earliestSuspendedTime=b:d>b&&(a.latestSuspendedTime=b);gf(b,a)}function jf(a,b){var c=a.earliestPendingTime;a=a.earliestSuspendedTime;c>b&&(b=c);a>b&&(b=a);return b}\n\tfunction gf(a,b){var c=b.earliestSuspendedTime,d=b.latestSuspendedTime,e=b.earliestPendingTime,f=b.latestPingedTime;e=0!==e?e:f;0===e&&(0===a||d<a)&&(e=d);a=e;0!==a&&c>a&&(a=c);b.nextExpirationTimeToWorkOn=e;b.expirationTime=a}var kf=!1;function lf(a){return{baseState:a,firstUpdate:null,lastUpdate:null,firstCapturedUpdate:null,lastCapturedUpdate:null,firstEffect:null,lastEffect:null,firstCapturedEffect:null,lastCapturedEffect:null}}\n\tfunction mf(a){return{baseState:a.baseState,firstUpdate:a.firstUpdate,lastUpdate:a.lastUpdate,firstCapturedUpdate:null,lastCapturedUpdate:null,firstEffect:null,lastEffect:null,firstCapturedEffect:null,lastCapturedEffect:null}}function nf(a){return{expirationTime:a,tag:0,payload:null,callback:null,next:null,nextEffect:null}}function of(a,b){null===a.lastUpdate?a.firstUpdate=a.lastUpdate=b:(a.lastUpdate.next=b,a.lastUpdate=b)}\n\tfunction pf(a,b){var c=a.alternate;if(null===c){var d=a.updateQueue;var e=null;null===d&&(d=a.updateQueue=lf(a.memoizedState))}else d=a.updateQueue,e=c.updateQueue,null===d?null===e?(d=a.updateQueue=lf(a.memoizedState),e=c.updateQueue=lf(c.memoizedState)):d=a.updateQueue=mf(e):null===e&&(e=c.updateQueue=mf(d));null===e||d===e?of(d,b):null===d.lastUpdate||null===e.lastUpdate?(of(d,b),of(e,b)):(of(d,b),e.lastUpdate=b)}\n\tfunction qf(a,b){var c=a.updateQueue;c=null===c?a.updateQueue=lf(a.memoizedState):rf(a,c);null===c.lastCapturedUpdate?c.firstCapturedUpdate=c.lastCapturedUpdate=b:(c.lastCapturedUpdate.next=b,c.lastCapturedUpdate=b)}function rf(a,b){var c=a.alternate;null!==c&&b===c.updateQueue&&(b=a.updateQueue=mf(b));return b}\n\tfunction sf(a,b,c,d,e,f){switch(c.tag){case 1:return a=c.payload,\"function\"===typeof a?a.call(f,d,e):a;case 3:a.effectTag=a.effectTag&-2049|64;case 0:a=c.payload;e=\"function\"===typeof a?a.call(f,d,e):a;if(null===e||void 0===e)break;return n({},d,e);case 2:kf=!0}return d}\n\tfunction tf(a,b,c,d,e){kf=!1;b=rf(a,b);for(var f=b.baseState,g=null,h=0,k=b.firstUpdate,l=f;null!==k;){var m=k.expirationTime;m<e?(null===g&&(g=k,f=l),h<m&&(h=m)):(l=sf(a,b,k,l,c,d),null!==k.callback&&(a.effectTag|=32,k.nextEffect=null,null===b.lastEffect?b.firstEffect=b.lastEffect=k:(b.lastEffect.nextEffect=k,b.lastEffect=k)));k=k.next}m=null;for(k=b.firstCapturedUpdate;null!==k;){var r=k.expirationTime;r<e?(null===m&&(m=k,null===g&&(f=l)),h<r&&(h=r)):(l=sf(a,b,k,l,c,d),null!==k.callback&&(a.effectTag|=\n\t32,k.nextEffect=null,null===b.lastCapturedEffect?b.firstCapturedEffect=b.lastCapturedEffect=k:(b.lastCapturedEffect.nextEffect=k,b.lastCapturedEffect=k)));k=k.next}null===g&&(b.lastUpdate=null);null===m?b.lastCapturedUpdate=null:a.effectTag|=32;null===g&&null===m&&(f=l);b.baseState=f;b.firstUpdate=g;b.firstCapturedUpdate=m;a.expirationTime=h;a.memoizedState=l}\n\tfunction uf(a,b,c){null!==b.firstCapturedUpdate&&(null!==b.lastUpdate&&(b.lastUpdate.next=b.firstCapturedUpdate,b.lastUpdate=b.lastCapturedUpdate),b.firstCapturedUpdate=b.lastCapturedUpdate=null);vf(b.firstEffect,c);b.firstEffect=b.lastEffect=null;vf(b.firstCapturedEffect,c);b.firstCapturedEffect=b.lastCapturedEffect=null}function vf(a,b){for(;null!==a;){var c=a.callback;if(null!==c){a.callback=null;var d=b;\"function\"!==typeof c?t(\"191\",c):void 0;c.call(d)}a=a.nextEffect}}\n\tfunction wf(a,b){return{value:a,source:b,stack:nc(b)}}var xf={current:null},yf=null,zf=null,Af=null;function Bf(a,b){var c=a.type._context;J(xf,c._currentValue,a);c._currentValue=b}function Cf(a){var b=xf.current;I(xf,a);a.type._context._currentValue=b}function Df(a){yf=a;Af=zf=null;a.firstContextDependency=null}\n\tfunction Ef(a,b){if(Af!==a&&!1!==b&&0!==b){if(\"number\"!==typeof b||1073741823===b)Af=a,b=1073741823;b={context:a,observedBits:b,next:null};null===zf?(null===yf?t(\"293\"):void 0,yf.firstContextDependency=zf=b):zf=zf.next=b}return a._currentValue}var Ff={},O={current:Ff},Gf={current:Ff},Hf={current:Ff};function If(a){a===Ff?t(\"174\"):void 0;return a}\n\tfunction Jf(a,b){J(Hf,b,a);J(Gf,a,a);J(O,Ff,a);var c=b.nodeType;switch(c){case 9:case 11:b=(b=b.documentElement)?b.namespaceURI:me(null,\"\");break;default:c=8===c?b.parentNode:b,b=c.namespaceURI||null,c=c.tagName,b=me(b,c)}I(O,a);J(O,b,a)}function Kf(a){I(O,a);I(Gf,a);I(Hf,a)}function Lf(a){If(Hf.current);var b=If(O.current);var c=me(b,a.type);b!==c&&(J(Gf,a,a),J(O,c,a))}function Mf(a){Gf.current===a&&(I(O,a),I(Gf,a))}\n\tfunction P(a,b){if(a&&a.defaultProps){b=n({},b);a=a.defaultProps;for(var c in a)void 0===b[c]&&(b[c]=a[c])}return b}function Nf(a){var b=a._result;switch(a._status){case 1:return b;case 2:throw b;case 0:throw b;default:throw a._status=0,b=a._ctor,b=b(),b.then(function(b){0===a._status&&(b=b.default,a._status=1,a._result=b)},function(b){0===a._status&&(a._status=2,a._result=b)}),a._result=b,b;}}var Of=Xb.ReactCurrentOwner,Pf=(new aa.Component).refs;\n\tfunction Qf(a,b,c,d){b=a.memoizedState;c=c(d,b);c=null===c||void 0===c?b:n({},b,c);a.memoizedState=c;d=a.updateQueue;null!==d&&0===a.expirationTime&&(d.baseState=c)}\n\tvar Vf={isMounted:function(a){return(a=a._reactInternalFiber)?2===kd(a):!1},enqueueSetState:function(a,b,c){a=a._reactInternalFiber;var d=Rf();d=Sf(d,a);var e=nf(d);e.payload=b;void 0!==c&&null!==c&&(e.callback=c);Tf();pf(a,e);Uf(a,d)},enqueueReplaceState:function(a,b,c){a=a._reactInternalFiber;var d=Rf();d=Sf(d,a);var e=nf(d);e.tag=1;e.payload=b;void 0!==c&&null!==c&&(e.callback=c);Tf();pf(a,e);Uf(a,d)},enqueueForceUpdate:function(a,b){a=a._reactInternalFiber;var c=Rf();c=Sf(c,a);var d=nf(c);d.tag=\n\t2;void 0!==b&&null!==b&&(d.callback=b);Tf();pf(a,d);Uf(a,c)}};function Wf(a,b,c,d,e,f,g){a=a.stateNode;return\"function\"===typeof a.shouldComponentUpdate?a.shouldComponentUpdate(d,f,g):b.prototype&&b.prototype.isPureReactComponent?!jd(c,d)||!jd(e,f):!0}\n\tfunction Xf(a,b,c){var d=!1,e=Ke;var f=b.contextType;\"object\"===typeof f&&null!==f?f=Of.currentDispatcher.readContext(f):(e=M(b)?Le:K.current,d=b.contextTypes,f=(d=null!==d&&void 0!==d)?Me(a,e):Ke);b=new b(c,f);a.memoizedState=null!==b.state&&void 0!==b.state?b.state:null;b.updater=Vf;a.stateNode=b;b._reactInternalFiber=a;d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=e,a.__reactInternalMemoizedMaskedChildContext=f);return b}\n\tfunction Zf(a,b,c,d){a=b.state;\"function\"===typeof b.componentWillReceiveProps&&b.componentWillReceiveProps(c,d);\"function\"===typeof b.UNSAFE_componentWillReceiveProps&&b.UNSAFE_componentWillReceiveProps(c,d);b.state!==a&&Vf.enqueueReplaceState(b,b.state,null)}\n\tfunction $f(a,b,c,d){var e=a.stateNode;e.props=c;e.state=a.memoizedState;e.refs=Pf;var f=b.contextType;\"object\"===typeof f&&null!==f?e.context=Of.currentDispatcher.readContext(f):(f=M(b)?Le:K.current,e.context=Me(a,f));f=a.updateQueue;null!==f&&(tf(a,f,c,e,d),e.state=a.memoizedState);f=b.getDerivedStateFromProps;\"function\"===typeof f&&(Qf(a,b,f,c),e.state=a.memoizedState);\"function\"===typeof b.getDerivedStateFromProps||\"function\"===typeof e.getSnapshotBeforeUpdate||\"function\"!==typeof e.UNSAFE_componentWillMount&&\n\t\"function\"!==typeof e.componentWillMount||(b=e.state,\"function\"===typeof e.componentWillMount&&e.componentWillMount(),\"function\"===typeof e.UNSAFE_componentWillMount&&e.UNSAFE_componentWillMount(),b!==e.state&&Vf.enqueueReplaceState(e,e.state,null),f=a.updateQueue,null!==f&&(tf(a,f,c,e,d),e.state=a.memoizedState));\"function\"===typeof e.componentDidMount&&(a.effectTag|=4)}var ag=Array.isArray;\n\tfunction bg(a,b,c){a=c.ref;if(null!==a&&\"function\"!==typeof a&&\"object\"!==typeof a){if(c._owner){c=c._owner;var d=void 0;c&&(1!==c.tag?t(\"289\"):void 0,d=c.stateNode);d?void 0:t(\"147\",a);var e=\"\"+a;if(null!==b&&null!==b.ref&&\"function\"===typeof b.ref&&b.ref._stringRef===e)return b.ref;b=function(a){var b=d.refs;b===Pf&&(b=d.refs={});null===a?delete b[e]:b[e]=a};b._stringRef=e;return b}\"string\"!==typeof a?t(\"284\"):void 0;c._owner?void 0:t(\"290\",a)}return a}\n\tfunction cg(a,b){\"textarea\"!==a.type&&t(\"31\",\"[object Object]\"===Object.prototype.toString.call(b)?\"object with keys {\"+Object.keys(b).join(\", \")+\"}\":b,\"\")}\n\tfunction dg(a){function b(b,c){if(a){var d=b.lastEffect;null!==d?(d.nextEffect=c,b.lastEffect=c):b.firstEffect=b.lastEffect=c;c.nextEffect=null;c.effectTag=8}}function c(c,d){if(!a)return null;for(;null!==d;)b(c,d),d=d.sibling;return null}function d(a,b){for(a=new Map;null!==b;)null!==b.key?a.set(b.key,b):a.set(b.index,b),b=b.sibling;return a}function e(a,b,c){a=$e(a,b,c);a.index=0;a.sibling=null;return a}function f(b,c,d){b.index=d;if(!a)return c;d=b.alternate;if(null!==d)return d=d.index,d<c?(b.effectTag=\n\t2,c):d;b.effectTag=2;return c}function g(b){a&&null===b.alternate&&(b.effectTag=2);return b}function h(a,b,c,d){if(null===b||6!==b.tag)return b=df(c,a.mode,d),b.return=a,b;b=e(b,c,d);b.return=a;return b}function k(a,b,c,d){if(null!==b&&b.elementType===c.type)return d=e(b,c.props,d),d.ref=bg(a,b,c),d.return=a,d;d=af(c.type,c.key,c.props,null,a.mode,d);d.ref=bg(a,b,c);d.return=a;return d}function l(a,b,c,d){if(null===b||4!==b.tag||b.stateNode.containerInfo!==c.containerInfo||b.stateNode.implementation!==\n\tc.implementation)return b=ef(c,a.mode,d),b.return=a,b;b=e(b,c.children||[],d);b.return=a;return b}function m(a,b,c,d,g){if(null===b||7!==b.tag)return b=bf(c,a.mode,d,g),b.return=a,b;b=e(b,c,d);b.return=a;return b}function r(a,b,c){if(\"string\"===typeof b||\"number\"===typeof b)return b=df(\"\"+b,a.mode,c),b.return=a,b;if(\"object\"===typeof b&&null!==b){switch(b.$$typeof){case Zb:return c=af(b.type,b.key,b.props,null,a.mode,c),c.ref=bg(a,null,b),c.return=a,c;case $b:return b=ef(b,a.mode,c),b.return=a,b}if(ag(b)||\n\tlc(b))return b=bf(b,a.mode,c,null),b.return=a,b;cg(a,b)}return null}function w(a,b,c,d){var e=null!==b?b.key:null;if(\"string\"===typeof c||\"number\"===typeof c)return null!==e?null:h(a,b,\"\"+c,d);if(\"object\"===typeof c&&null!==c){switch(c.$$typeof){case Zb:return c.key===e?c.type===ac?m(a,b,c.props.children,d,e):k(a,b,c,d):null;case $b:return c.key===e?l(a,b,c,d):null}if(ag(c)||lc(c))return null!==e?null:m(a,b,c,d,null);cg(a,c)}return null}function y(a,b,c,d,e){if(\"string\"===typeof d||\"number\"===typeof d)return a=\n\ta.get(c)||null,h(b,a,\"\"+d,e);if(\"object\"===typeof d&&null!==d){switch(d.$$typeof){case Zb:return a=a.get(null===d.key?c:d.key)||null,d.type===ac?m(b,a,d.props.children,e,d.key):k(b,a,d,e);case $b:return a=a.get(null===d.key?c:d.key)||null,l(b,a,d,e)}if(ag(d)||lc(d))return a=a.get(c)||null,m(b,a,d,e,null);cg(b,d)}return null}function B(e,g,h,k){for(var l=null,q=null,m=g,u=g=0,p=null;null!==m&&u<h.length;u++){m.index>u?(p=m,m=null):p=m.sibling;var v=w(e,m,h[u],k);if(null===v){null===m&&(m=p);break}a&&\n\tm&&null===v.alternate&&b(e,m);g=f(v,g,u);null===q?l=v:q.sibling=v;q=v;m=p}if(u===h.length)return c(e,m),l;if(null===m){for(;u<h.length;u++)if(m=r(e,h[u],k))g=f(m,g,u),null===q?l=m:q.sibling=m,q=m;return l}for(m=d(e,m);u<h.length;u++)if(p=y(m,e,u,h[u],k))a&&null!==p.alternate&&m.delete(null===p.key?u:p.key),g=f(p,g,u),null===q?l=p:q.sibling=p,q=p;a&&m.forEach(function(a){return b(e,a)});return l}function R(e,g,h,k){var l=lc(h);\"function\"!==typeof l?t(\"150\"):void 0;h=l.call(h);null==h?t(\"151\"):void 0;\n\tfor(var m=l=null,q=g,u=g=0,p=null,v=h.next();null!==q&&!v.done;u++,v=h.next()){q.index>u?(p=q,q=null):p=q.sibling;var A=w(e,q,v.value,k);if(null===A){q||(q=p);break}a&&q&&null===A.alternate&&b(e,q);g=f(A,g,u);null===m?l=A:m.sibling=A;m=A;q=p}if(v.done)return c(e,q),l;if(null===q){for(;!v.done;u++,v=h.next())v=r(e,v.value,k),null!==v&&(g=f(v,g,u),null===m?l=v:m.sibling=v,m=v);return l}for(q=d(e,q);!v.done;u++,v=h.next())v=y(q,e,u,v.value,k),null!==v&&(a&&null!==v.alternate&&q.delete(null===v.key?u:\n\tv.key),g=f(v,g,u),null===m?l=v:m.sibling=v,m=v);a&&q.forEach(function(a){return b(e,a)});return l}return function(a,d,f,h){var k=\"object\"===typeof f&&null!==f&&f.type===ac&&null===f.key;k&&(f=f.props.children);var l=\"object\"===typeof f&&null!==f;if(l)switch(f.$$typeof){case Zb:a:{l=f.key;for(k=d;null!==k;){if(k.key===l)if(7===k.tag?f.type===ac:k.elementType===f.type){c(a,k.sibling);d=e(k,f.type===ac?f.props.children:f.props,h);d.ref=bg(a,k,f);d.return=a;a=d;break a}else{c(a,k);break}else b(a,k);k=\n\tk.sibling}f.type===ac?(d=bf(f.props.children,a.mode,h,f.key),d.return=a,a=d):(h=af(f.type,f.key,f.props,null,a.mode,h),h.ref=bg(a,d,f),h.return=a,a=h)}return g(a);case $b:a:{for(k=f.key;null!==d;){if(d.key===k)if(4===d.tag&&d.stateNode.containerInfo===f.containerInfo&&d.stateNode.implementation===f.implementation){c(a,d.sibling);d=e(d,f.children||[],h);d.return=a;a=d;break a}else{c(a,d);break}else b(a,d);d=d.sibling}d=ef(f,a.mode,h);d.return=a;a=d}return g(a)}if(\"string\"===typeof f||\"number\"===typeof f)return f=\n\t\"\"+f,null!==d&&6===d.tag?(c(a,d.sibling),d=e(d,f,h),d.return=a,a=d):(c(a,d),d=df(f,a.mode,h),d.return=a,a=d),g(a);if(ag(f))return B(a,d,f,h);if(lc(f))return R(a,d,f,h);l&&cg(a,f);if(\"undefined\"===typeof f&&!k)switch(a.tag){case 1:case 0:h=a.type,t(\"152\",h.displayName||h.name||\"Component\")}return c(a,d)}}var eg=dg(!0),fg=dg(!1),gg=null,hg=null,ig=!1;\n\tfunction jg(a,b){var c=N(5,null,null,0);c.elementType=\"DELETED\";c.type=\"DELETED\";c.stateNode=b;c.return=a;c.effectTag=8;null!==a.lastEffect?(a.lastEffect.nextEffect=c,a.lastEffect=c):a.firstEffect=a.lastEffect=c}function kg(a,b){switch(a.tag){case 5:var c=a.type;b=1!==b.nodeType||c.toLowerCase()!==b.nodeName.toLowerCase()?null:b;return null!==b?(a.stateNode=b,!0):!1;case 6:return b=\"\"===a.pendingProps||3!==b.nodeType?null:b,null!==b?(a.stateNode=b,!0):!1;default:return!1}}\n\tfunction lg(a){if(ig){var b=hg;if(b){var c=b;if(!kg(a,b)){b=Ge(c);if(!b||!kg(a,b)){a.effectTag|=2;ig=!1;gg=a;return}jg(gg,c)}gg=a;hg=He(b)}else a.effectTag|=2,ig=!1,gg=a}}function mg(a){for(a=a.return;null!==a&&5!==a.tag&&3!==a.tag;)a=a.return;gg=a}function ng(a){if(a!==gg)return!1;if(!ig)return mg(a),ig=!0,!1;var b=a.type;if(5!==a.tag||\"head\"!==b&&\"body\"!==b&&!Ce(b,a.memoizedProps))for(b=hg;b;)jg(a,b),b=Ge(b);mg(a);hg=gg?Ge(a.stateNode):null;return!0}function og(){hg=gg=null;ig=!1}var pg=Xb.ReactCurrentOwner;\n\tfunction Q(a,b,c,d){b.child=null===a?fg(b,null,c,d):eg(b,a.child,c,d)}function qg(a,b,c,d,e){c=c.render;var f=b.ref;Df(b,e);d=c(d,f);b.effectTag|=1;Q(a,b,d,e);return b.child}\n\tfunction rg(a,b,c,d,e,f){if(null===a){var g=c.type;if(\"function\"===typeof g&&!Ye(g)&&void 0===g.defaultProps&&null===c.compare&&void 0===c.defaultProps)return b.tag=15,b.type=g,sg(a,b,g,d,e,f);a=af(c.type,null,d,null,b.mode,f);a.ref=b.ref;a.return=b;return b.child=a}g=a.child;if(e<f&&(e=g.memoizedProps,c=c.compare,c=null!==c?c:jd,c(e,d)&&a.ref===b.ref))return tg(a,b,f);b.effectTag|=1;a=$e(g,d,f);a.ref=b.ref;a.return=b;return b.child=a}\n\tfunction sg(a,b,c,d,e,f){return null!==a&&e<f&&jd(a.memoizedProps,d)&&a.ref===b.ref?tg(a,b,f):ug(a,b,c,d,f)}function vg(a,b){var c=b.ref;if(null===a&&null!==c||null!==a&&a.ref!==c)b.effectTag|=128}function ug(a,b,c,d,e){var f=M(c)?Le:K.current;f=Me(b,f);Df(b,e);c=c(d,f);b.effectTag|=1;Q(a,b,c,e);return b.child}\n\tfunction wg(a,b,c,d,e){if(M(c)){var f=!0;Re(b)}else f=!1;Df(b,e);if(null===b.stateNode)null!==a&&(a.alternate=null,b.alternate=null,b.effectTag|=2),Xf(b,c,d,e),$f(b,c,d,e),d=!0;else if(null===a){var g=b.stateNode,h=b.memoizedProps;g.props=h;var k=g.context,l=c.contextType;\"object\"===typeof l&&null!==l?l=Of.currentDispatcher.readContext(l):(l=M(c)?Le:K.current,l=Me(b,l));var m=c.getDerivedStateFromProps,r=\"function\"===typeof m||\"function\"===typeof g.getSnapshotBeforeUpdate;r||\"function\"!==typeof g.UNSAFE_componentWillReceiveProps&&\n\t\"function\"!==typeof g.componentWillReceiveProps||(h!==d||k!==l)&&Zf(b,g,d,l);kf=!1;var w=b.memoizedState;k=g.state=w;var y=b.updateQueue;null!==y&&(tf(b,y,d,g,e),k=b.memoizedState);h!==d||w!==k||L.current||kf?(\"function\"===typeof m&&(Qf(b,c,m,d),k=b.memoizedState),(h=kf||Wf(b,c,h,d,w,k,l))?(r||\"function\"!==typeof g.UNSAFE_componentWillMount&&\"function\"!==typeof g.componentWillMount||(\"function\"===typeof g.componentWillMount&&g.componentWillMount(),\"function\"===typeof g.UNSAFE_componentWillMount&&\n\tg.UNSAFE_componentWillMount()),\"function\"===typeof g.componentDidMount&&(b.effectTag|=4)):(\"function\"===typeof g.componentDidMount&&(b.effectTag|=4),b.memoizedProps=d,b.memoizedState=k),g.props=d,g.state=k,g.context=l,d=h):(\"function\"===typeof g.componentDidMount&&(b.effectTag|=4),d=!1)}else g=b.stateNode,h=b.memoizedProps,g.props=b.type===b.elementType?h:P(b.type,h),k=g.context,l=c.contextType,\"object\"===typeof l&&null!==l?l=Of.currentDispatcher.readContext(l):(l=M(c)?Le:K.current,l=Me(b,l)),m=c.getDerivedStateFromProps,\n\t(r=\"function\"===typeof m||\"function\"===typeof g.getSnapshotBeforeUpdate)||\"function\"!==typeof g.UNSAFE_componentWillReceiveProps&&\"function\"!==typeof g.componentWillReceiveProps||(h!==d||k!==l)&&Zf(b,g,d,l),kf=!1,k=b.memoizedState,w=g.state=k,y=b.updateQueue,null!==y&&(tf(b,y,d,g,e),w=b.memoizedState),h!==d||k!==w||L.current||kf?(\"function\"===typeof m&&(Qf(b,c,m,d),w=b.memoizedState),(m=kf||Wf(b,c,h,d,k,w,l))?(r||\"function\"!==typeof g.UNSAFE_componentWillUpdate&&\"function\"!==typeof g.componentWillUpdate||\n\t(\"function\"===typeof g.componentWillUpdate&&g.componentWillUpdate(d,w,l),\"function\"===typeof g.UNSAFE_componentWillUpdate&&g.UNSAFE_componentWillUpdate(d,w,l)),\"function\"===typeof g.componentDidUpdate&&(b.effectTag|=4),\"function\"===typeof g.getSnapshotBeforeUpdate&&(b.effectTag|=256)):(\"function\"!==typeof g.componentDidUpdate||h===a.memoizedProps&&k===a.memoizedState||(b.effectTag|=4),\"function\"!==typeof g.getSnapshotBeforeUpdate||h===a.memoizedProps&&k===a.memoizedState||(b.effectTag|=256),b.memoizedProps=\n\td,b.memoizedState=w),g.props=d,g.state=w,g.context=l,d=m):(\"function\"!==typeof g.componentDidUpdate||h===a.memoizedProps&&k===a.memoizedState||(b.effectTag|=4),\"function\"!==typeof g.getSnapshotBeforeUpdate||h===a.memoizedProps&&k===a.memoizedState||(b.effectTag|=256),d=!1);return xg(a,b,c,d,f,e)}\n\tfunction xg(a,b,c,d,e,f){vg(a,b);var g=0!==(b.effectTag&64);if(!d&&!g)return e&&Se(b,c,!1),tg(a,b,f);d=b.stateNode;pg.current=b;var h=g&&\"function\"!==typeof c.getDerivedStateFromError?null:d.render();b.effectTag|=1;null!==a&&g?(b.child=eg(b,a.child,null,f),b.child=eg(b,null,h,f)):Q(a,b,h,f);b.memoizedState=d.state;e&&Se(b,c,!0);return b.child}function yg(a){var b=a.stateNode;b.pendingContext?Pe(a,b.pendingContext,b.pendingContext!==b.context):b.context&&Pe(a,b.context,!1);Jf(a,b.containerInfo)}\n\tfunction zg(a,b,c){var d=b.mode,e=b.pendingProps,f=b.memoizedState;if(0===(b.effectTag&64)){f=null;var g=!1}else f={timedOutAt:null!==f?f.timedOutAt:0},g=!0,b.effectTag&=-65;if(null===a)if(g){var h=e.fallback;a=bf(null,d,0,null);0===(b.mode&1)&&(a.child=null!==b.memoizedState?b.child.child:b.child);d=bf(h,d,c,null);a.sibling=d;c=a;c.return=d.return=b}else c=d=fg(b,null,e.children,c);else null!==a.memoizedState?(d=a.child,h=d.sibling,g?(c=e.fallback,e=$e(d,d.pendingProps,0),0===(b.mode&1)&&(g=null!==\n\tb.memoizedState?b.child.child:b.child,g!==d.child&&(e.child=g)),d=e.sibling=$e(h,c,h.expirationTime),c=e,e.childExpirationTime=0,c.return=d.return=b):c=d=eg(b,d.child,e.children,c)):(h=a.child,g?(g=e.fallback,e=bf(null,d,0,null),e.child=h,0===(b.mode&1)&&(e.child=null!==b.memoizedState?b.child.child:b.child),d=e.sibling=bf(g,d,c,null),d.effectTag|=2,c=e,e.childExpirationTime=0,c.return=d.return=b):d=c=eg(b,h,e.children,c)),b.stateNode=a.stateNode;b.memoizedState=f;b.child=c;return d}\n\tfunction tg(a,b,c){null!==a&&(b.firstContextDependency=a.firstContextDependency);if(b.childExpirationTime<c)return null;null!==a&&b.child!==a.child?t(\"153\"):void 0;if(null!==b.child){a=b.child;c=$e(a,a.pendingProps,a.expirationTime);b.child=c;for(c.return=b;null!==a.sibling;)a=a.sibling,c=c.sibling=$e(a,a.pendingProps,a.expirationTime),c.return=b;c.sibling=null}return b.child}\n\tfunction Ag(a,b,c){var d=b.expirationTime;if(null!==a&&a.memoizedProps===b.pendingProps&&!L.current&&d<c){switch(b.tag){case 3:yg(b);og();break;case 5:Lf(b);break;case 1:M(b.type)&&Re(b);break;case 4:Jf(b,b.stateNode.containerInfo);break;case 10:Bf(b,b.memoizedProps.value);break;case 13:if(null!==b.memoizedState){d=b.child.childExpirationTime;if(0!==d&&d>=c)return zg(a,b,c);b=tg(a,b,c);return null!==b?b.sibling:null}}return tg(a,b,c)}b.expirationTime=0;switch(b.tag){case 2:d=b.elementType;null!==\n\ta&&(a.alternate=null,b.alternate=null,b.effectTag|=2);a=b.pendingProps;var e=Me(b,K.current);Df(b,c);e=d(a,e);b.effectTag|=1;if(\"object\"===typeof e&&null!==e&&\"function\"===typeof e.render&&void 0===e.$$typeof){b.tag=1;if(M(d)){var f=!0;Re(b)}else f=!1;b.memoizedState=null!==e.state&&void 0!==e.state?e.state:null;var g=d.getDerivedStateFromProps;\"function\"===typeof g&&Qf(b,d,g,a);e.updater=Vf;b.stateNode=e;e._reactInternalFiber=b;$f(b,d,a,c);b=xg(null,b,d,!0,f,c)}else b.tag=0,Q(null,b,e,c),b=b.child;\n\treturn b;case 16:e=b.elementType;null!==a&&(a.alternate=null,b.alternate=null,b.effectTag|=2);f=b.pendingProps;a=Nf(e);b.type=a;e=b.tag=Ze(a);f=P(a,f);g=void 0;switch(e){case 0:g=ug(null,b,a,f,c);break;case 1:g=wg(null,b,a,f,c);break;case 11:g=qg(null,b,a,f,c);break;case 14:g=rg(null,b,a,P(a.type,f),d,c);break;default:t(\"306\",a,\"\")}return g;case 0:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:P(d,e),ug(a,b,d,e,c);case 1:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:P(d,e),wg(a,b,\n\td,e,c);case 3:yg(b);d=b.updateQueue;null===d?t(\"282\"):void 0;e=b.memoizedState;e=null!==e?e.element:null;tf(b,d,b.pendingProps,null,c);d=b.memoizedState.element;if(d===e)og(),b=tg(a,b,c);else{e=b.stateNode;if(e=(null===a||null===a.child)&&e.hydrate)hg=He(b.stateNode.containerInfo),gg=b,e=ig=!0;e?(b.effectTag|=2,b.child=fg(b,null,d,c)):(Q(a,b,d,c),og());b=b.child}return b;case 5:return Lf(b),null===a&&lg(b),d=b.type,e=b.pendingProps,f=null!==a?a.memoizedProps:null,g=e.children,Ce(d,e)?g=null:null!==\n\tf&&Ce(d,f)&&(b.effectTag|=16),vg(a,b),1!==c&&b.mode&1&&e.hidden?(b.expirationTime=1,b=null):(Q(a,b,g,c),b=b.child),b;case 6:return null===a&&lg(b),null;case 13:return zg(a,b,c);case 4:return Jf(b,b.stateNode.containerInfo),d=b.pendingProps,null===a?b.child=eg(b,null,d,c):Q(a,b,d,c),b.child;case 11:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:P(d,e),qg(a,b,d,e,c);case 7:return Q(a,b,b.pendingProps,c),b.child;case 8:return Q(a,b,b.pendingProps.children,c),b.child;case 12:return Q(a,b,b.pendingProps.children,\n\tc),b.child;case 10:a:{d=b.type._context;e=b.pendingProps;g=b.memoizedProps;f=e.value;Bf(b,f);if(null!==g){var h=g.value;f=h===f&&(0!==h||1/h===1/f)||h!==h&&f!==f?0:(\"function\"===typeof d._calculateChangedBits?d._calculateChangedBits(h,f):1073741823)|0;if(0===f){if(g.children===e.children&&!L.current){b=tg(a,b,c);break a}}else for(g=b.child,null!==g&&(g.return=b);null!==g;){h=g.firstContextDependency;if(null!==h){do{if(h.context===d&&0!==(h.observedBits&f)){if(1===g.tag){var k=nf(c);k.tag=2;pf(g,k)}g.expirationTime<\n\tc&&(g.expirationTime=c);k=g.alternate;null!==k&&k.expirationTime<c&&(k.expirationTime=c);for(var l=g.return;null!==l;){k=l.alternate;if(l.childExpirationTime<c)l.childExpirationTime=c,null!==k&&k.childExpirationTime<c&&(k.childExpirationTime=c);else if(null!==k&&k.childExpirationTime<c)k.childExpirationTime=c;else break;l=l.return}}k=g.child;h=h.next}while(null!==h)}else k=10===g.tag?g.type===b.type?null:g.child:g.child;if(null!==k)k.return=g;else for(k=g;null!==k;){if(k===b){k=null;break}g=k.sibling;\n\tif(null!==g){g.return=k.return;k=g;break}k=k.return}g=k}}Q(a,b,e.children,c);b=b.child}return b;case 9:return e=b.type,f=b.pendingProps,d=f.children,Df(b,c),e=Ef(e,f.unstable_observedBits),d=d(e),b.effectTag|=1,Q(a,b,d,c),b.child;case 14:return e=b.type,f=P(e,b.pendingProps),f=P(e.type,f),rg(a,b,e,f,d,c);case 15:return sg(a,b,b.type,b.pendingProps,d,c);case 17:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:P(d,e),null!==a&&(a.alternate=null,b.alternate=null,b.effectTag|=2),b.tag=1,M(d)?(a=\n\t!0,Re(b)):a=!1,Df(b,c),Xf(b,d,e,c),$f(b,d,e,c),xg(null,b,d,!0,a,c);default:t(\"156\")}}function Bg(a){a.effectTag|=4}var Cg=void 0,Gg=void 0,Hg=void 0,Ig=void 0;Cg=function(a,b){for(var c=b.child;null!==c;){if(5===c.tag||6===c.tag)a.appendChild(c.stateNode);else if(4!==c.tag&&null!==c.child){c.child.return=c;c=c.child;continue}if(c===b)break;for(;null===c.sibling;){if(null===c.return||c.return===b)return;c=c.return}c.sibling.return=c.return;c=c.sibling}};Gg=function(){};\n\tHg=function(a,b,c,d,e){var f=a.memoizedProps;if(f!==d){var g=b.stateNode;If(O.current);a=null;switch(c){case \"input\":f=zc(g,f);d=zc(g,d);a=[];break;case \"option\":f=ee(g,f);d=ee(g,d);a=[];break;case \"select\":f=n({},f,{value:void 0});d=n({},d,{value:void 0});a=[];break;case \"textarea\":f=ge(g,f);d=ge(g,d);a=[];break;default:\"function\"!==typeof f.onClick&&\"function\"===typeof d.onClick&&(g.onclick=ye)}ve(c,d);g=c=void 0;var h=null;for(c in f)if(!d.hasOwnProperty(c)&&f.hasOwnProperty(c)&&null!=f[c])if(\"style\"===\n\tc){var k=f[c];for(g in k)k.hasOwnProperty(g)&&(h||(h={}),h[g]=\"\")}else\"dangerouslySetInnerHTML\"!==c&&\"children\"!==c&&\"suppressContentEditableWarning\"!==c&&\"suppressHydrationWarning\"!==c&&\"autoFocus\"!==c&&(sa.hasOwnProperty(c)?a||(a=[]):(a=a||[]).push(c,null));for(c in d){var l=d[c];k=null!=f?f[c]:void 0;if(d.hasOwnProperty(c)&&l!==k&&(null!=l||null!=k))if(\"style\"===c)if(k){for(g in k)!k.hasOwnProperty(g)||l&&l.hasOwnProperty(g)||(h||(h={}),h[g]=\"\");for(g in l)l.hasOwnProperty(g)&&k[g]!==l[g]&&(h||\n\t(h={}),h[g]=l[g])}else h||(a||(a=[]),a.push(c,h)),h=l;else\"dangerouslySetInnerHTML\"===c?(l=l?l.__html:void 0,k=k?k.__html:void 0,null!=l&&k!==l&&(a=a||[]).push(c,\"\"+l)):\"children\"===c?k===l||\"string\"!==typeof l&&\"number\"!==typeof l||(a=a||[]).push(c,\"\"+l):\"suppressContentEditableWarning\"!==c&&\"suppressHydrationWarning\"!==c&&(sa.hasOwnProperty(c)?(null!=l&&xe(e,c),a||k===l||(a=[])):(a=a||[]).push(c,l))}h&&(a=a||[]).push(\"style\",h);e=a;(b.updateQueue=e)&&Bg(b)}};Ig=function(a,b,c,d){c!==d&&Bg(b)};\n\tvar Jg=\"function\"===typeof WeakSet?WeakSet:Set;function Kg(a,b){var c=b.source,d=b.stack;null===d&&null!==c&&(d=nc(c));null!==c&&mc(c.type);b=b.value;null!==a&&1===a.tag&&mc(a.type);try{console.error(b)}catch(e){setTimeout(function(){throw e;})}}function Lg(a){var b=a.ref;if(null!==b)if(\"function\"===typeof b)try{b(null)}catch(c){Mg(a,c)}else b.current=null}\n\tfunction Ng(a,b){for(var c=a;;){if(5===c.tag){var d=c.stateNode;if(b)d.style.display=\"none\";else{d=c.stateNode;var e=c.memoizedProps.style;e=void 0!==e&&null!==e&&e.hasOwnProperty(\"display\")?e.display:null;d.style.display=se(\"display\",e)}}else if(6===c.tag)c.stateNode.nodeValue=b?\"\":c.memoizedProps;else if(13===c.tag&&null!==c.memoizedState){d=c.child.sibling;d.return=c;c=d;continue}else if(null!==c.child){c.child.return=c;c=c.child;continue}if(c===a)break;for(;null===c.sibling;){if(null===c.return||\n\tc.return===a)return;c=c.return}c.sibling.return=c.return;c=c.sibling}}\n\tfunction Og(a){\"function\"===typeof Ue&&Ue(a);switch(a.tag){case 0:case 11:case 14:case 15:var b=a.updateQueue;if(null!==b&&(b=b.lastEffect,null!==b)){var c=b=b.next;do{var d=c.destroy;if(null!==d){var e=a;try{d()}catch(f){Mg(e,f)}}c=c.next}while(c!==b)}break;case 1:Lg(a);b=a.stateNode;if(\"function\"===typeof b.componentWillUnmount)try{b.props=a.memoizedProps,b.state=a.memoizedState,b.componentWillUnmount()}catch(f){Mg(a,f)}break;case 5:Lg(a);break;case 4:Pg(a)}}\n\tfunction Qg(a){return 5===a.tag||3===a.tag||4===a.tag}\n\tfunction Rg(a){a:{for(var b=a.return;null!==b;){if(Qg(b)){var c=b;break a}b=b.return}t(\"160\");c=void 0}var d=b=void 0;switch(c.tag){case 5:b=c.stateNode;d=!1;break;case 3:b=c.stateNode.containerInfo;d=!0;break;case 4:b=c.stateNode.containerInfo;d=!0;break;default:t(\"161\")}c.effectTag&16&&(pe(b,\"\"),c.effectTag&=-17);a:b:for(c=a;;){for(;null===c.sibling;){if(null===c.return||Qg(c.return)){c=null;break a}c=c.return}c.sibling.return=c.return;for(c=c.sibling;5!==c.tag&&6!==c.tag;){if(c.effectTag&2)continue b;\n\tif(null===c.child||4===c.tag)continue b;else c.child.return=c,c=c.child}if(!(c.effectTag&2)){c=c.stateNode;break a}}for(var e=a;;){if(5===e.tag||6===e.tag)if(c)if(d){var f=b,g=e.stateNode,h=c;8===f.nodeType?f.parentNode.insertBefore(g,h):f.insertBefore(g,h)}else b.insertBefore(e.stateNode,c);else d?(g=b,h=e.stateNode,8===g.nodeType?(f=g.parentNode,f.insertBefore(h,g)):(f=g,f.appendChild(h)),g=g._reactRootContainer,null!==g&&void 0!==g||null!==f.onclick||(f.onclick=ye)):b.appendChild(e.stateNode);\n\telse if(4!==e.tag&&null!==e.child){e.child.return=e;e=e.child;continue}if(e===a)break;for(;null===e.sibling;){if(null===e.return||e.return===a)return;e=e.return}e.sibling.return=e.return;e=e.sibling}}\n\tfunction Pg(a){for(var b=a,c=!1,d=void 0,e=void 0;;){if(!c){c=b.return;a:for(;;){null===c?t(\"160\"):void 0;switch(c.tag){case 5:d=c.stateNode;e=!1;break a;case 3:d=c.stateNode.containerInfo;e=!0;break a;case 4:d=c.stateNode.containerInfo;e=!0;break a}c=c.return}c=!0}if(5===b.tag||6===b.tag){a:for(var f=b,g=f;;)if(Og(g),null!==g.child&&4!==g.tag)g.child.return=g,g=g.child;else{if(g===f)break;for(;null===g.sibling;){if(null===g.return||g.return===f)break a;g=g.return}g.sibling.return=g.return;g=g.sibling}e?\n\t(f=d,g=b.stateNode,8===f.nodeType?f.parentNode.removeChild(g):f.removeChild(g)):d.removeChild(b.stateNode)}else if(4===b.tag?(d=b.stateNode.containerInfo,e=!0):Og(b),null!==b.child){b.child.return=b;b=b.child;continue}if(b===a)break;for(;null===b.sibling;){if(null===b.return||b.return===a)return;b=b.return;4===b.tag&&(c=!1)}b.sibling.return=b.return;b=b.sibling}}\n\tfunction Sg(a,b){switch(b.tag){case 0:case 11:case 14:case 15:break;case 1:break;case 5:var c=b.stateNode;if(null!=c){var d=b.memoizedProps;a=null!==a?a.memoizedProps:d;var e=b.type,f=b.updateQueue;b.updateQueue=null;null!==f&&Fe(c,f,e,a,d,b)}break;case 6:null===b.stateNode?t(\"162\"):void 0;b.stateNode.nodeValue=b.memoizedProps;break;case 3:break;case 12:break;case 13:c=b.memoizedState;d=void 0;a=b;null===c?d=!1:(d=!0,a=b.child,0===c.timedOutAt&&(c.timedOutAt=Rf()));null!==a&&Ng(a,d);c=b.updateQueue;\n\tif(null!==c){b.updateQueue=null;var g=b.stateNode;null===g&&(g=b.stateNode=new Jg);c.forEach(function(a){var c=Tg.bind(null,b,a);g.has(a)||(g.add(a),a.then(c,c))})}break;case 17:break;default:t(\"163\")}}var Ug=\"function\"===typeof WeakMap?WeakMap:Map;function Vg(a,b,c){c=nf(c);c.tag=3;c.payload={element:null};var d=b.value;c.callback=function(){Wg(d);Kg(a,b)};return c}\n\tfunction Xg(a,b,c){c=nf(c);c.tag=3;var d=a.type.getDerivedStateFromError;if(\"function\"===typeof d){var e=b.value;c.payload=function(){return d(e)}}var f=a.stateNode;null!==f&&\"function\"===typeof f.componentDidCatch&&(c.callback=function(){\"function\"!==typeof d&&(null===Yg?Yg=new Set([this]):Yg.add(this));var c=b.value,e=b.stack;Kg(a,b);this.componentDidCatch(c,{componentStack:null!==e?e:\"\"})});return c}\n\tfunction Zg(a){switch(a.tag){case 1:M(a.type)&&Ne(a);var b=a.effectTag;return b&2048?(a.effectTag=b&-2049|64,a):null;case 3:return Kf(a),Oe(a),b=a.effectTag,0!==(b&64)?t(\"285\"):void 0,a.effectTag=b&-2049|64,a;case 5:return Mf(a),null;case 13:return b=a.effectTag,b&2048?(a.effectTag=b&-2049|64,a):null;case 4:return Kf(a),null;case 10:return Cf(a),null;default:return null}}\n\tvar $g={readContext:Ef},ah=Xb.ReactCurrentOwner,bh=1073741822,ch=0,dh=!1,S=null,T=null,U=0,eh=-1,fh=!1,V=null,gh=!1,hh=null,ih=null,Yg=null;function jh(){if(null!==S)for(var a=S.return;null!==a;){var b=a;switch(b.tag){case 1:var c=b.type.childContextTypes;null!==c&&void 0!==c&&Ne(b);break;case 3:Kf(b);Oe(b);break;case 5:Mf(b);break;case 4:Kf(b);break;case 10:Cf(b)}a=a.return}T=null;U=0;eh=-1;fh=!1;S=null}function Tf(){null!==ih&&(ba.unstable_cancelCallback(hh),ih())}\n\tfunction kh(a){for(;;){var b=a.alternate,c=a.return,d=a.sibling;if(0===(a.effectTag&1024)){S=a;a:{var e=b;b=a;var f=U;var g=b.pendingProps;switch(b.tag){case 2:break;case 16:break;case 15:case 0:break;case 1:M(b.type)&&Ne(b);break;case 3:Kf(b);Oe(b);g=b.stateNode;g.pendingContext&&(g.context=g.pendingContext,g.pendingContext=null);if(null===e||null===e.child)ng(b),b.effectTag&=-3;Gg(b);break;case 5:Mf(b);var h=If(Hf.current);f=b.type;if(null!==e&&null!=b.stateNode)Hg(e,b,f,g,h),e.ref!==b.ref&&(b.effectTag|=\n\t128);else if(g){var k=If(O.current);if(ng(b)){g=b;e=g.stateNode;var l=g.type,m=g.memoizedProps,r=h;e[Ga]=g;e[Ha]=m;f=void 0;h=l;switch(h){case \"iframe\":case \"object\":H(\"load\",e);break;case \"video\":case \"audio\":for(l=0;l<bb.length;l++)H(bb[l],e);break;case \"source\":H(\"error\",e);break;case \"img\":case \"image\":case \"link\":H(\"error\",e);H(\"load\",e);break;case \"form\":H(\"reset\",e);H(\"submit\",e);break;case \"details\":H(\"toggle\",e);break;case \"input\":Ac(e,m);H(\"invalid\",e);xe(r,\"onChange\");break;case \"select\":e._wrapperState=\n\t{wasMultiple:!!m.multiple};H(\"invalid\",e);xe(r,\"onChange\");break;case \"textarea\":he(e,m),H(\"invalid\",e),xe(r,\"onChange\")}ve(h,m);l=null;for(f in m)m.hasOwnProperty(f)&&(k=m[f],\"children\"===f?\"string\"===typeof k?e.textContent!==k&&(l=[\"children\",k]):\"number\"===typeof k&&e.textContent!==\"\"+k&&(l=[\"children\",\"\"+k]):sa.hasOwnProperty(f)&&null!=k&&xe(r,f));switch(h){case \"input\":Vb(e);Ec(e,m,!0);break;case \"textarea\":Vb(e);je(e,m);break;case \"select\":case \"option\":break;default:\"function\"===typeof m.onClick&&\n\t(e.onclick=ye)}f=l;g.updateQueue=f;g=null!==f?!0:!1;g&&Bg(b)}else{m=b;e=f;r=g;l=9===h.nodeType?h:h.ownerDocument;k===ke.html&&(k=le(e));k===ke.html?\"script\"===e?(e=l.createElement(\"div\"),e.innerHTML=\"<script>\\x3c/script>\",l=e.removeChild(e.firstChild)):\"string\"===typeof r.is?l=l.createElement(e,{is:r.is}):(l=l.createElement(e),\"select\"===e&&r.multiple&&(l.multiple=!0)):l=l.createElementNS(k,e);e=l;e[Ga]=m;e[Ha]=g;Cg(e,b,!1,!1);r=e;l=f;m=g;var w=h,y=we(l,m);switch(l){case \"iframe\":case \"object\":H(\"load\",\n\tr);h=m;break;case \"video\":case \"audio\":for(h=0;h<bb.length;h++)H(bb[h],r);h=m;break;case \"source\":H(\"error\",r);h=m;break;case \"img\":case \"image\":case \"link\":H(\"error\",r);H(\"load\",r);h=m;break;case \"form\":H(\"reset\",r);H(\"submit\",r);h=m;break;case \"details\":H(\"toggle\",r);h=m;break;case \"input\":Ac(r,m);h=zc(r,m);H(\"invalid\",r);xe(w,\"onChange\");break;case \"option\":h=ee(r,m);break;case \"select\":r._wrapperState={wasMultiple:!!m.multiple};h=n({},m,{value:void 0});H(\"invalid\",r);xe(w,\"onChange\");break;case \"textarea\":he(r,\n\tm);h=ge(r,m);H(\"invalid\",r);xe(w,\"onChange\");break;default:h=m}ve(l,h);k=void 0;var B=l,R=r,v=h;for(k in v)if(v.hasOwnProperty(k)){var q=v[k];\"style\"===k?te(R,q):\"dangerouslySetInnerHTML\"===k?(q=q?q.__html:void 0,null!=q&&oe(R,q)):\"children\"===k?\"string\"===typeof q?(\"textarea\"!==B||\"\"!==q)&&pe(R,q):\"number\"===typeof q&&pe(R,\"\"+q):\"suppressContentEditableWarning\"!==k&&\"suppressHydrationWarning\"!==k&&\"autoFocus\"!==k&&(sa.hasOwnProperty(k)?null!=q&&xe(w,k):null!=q&&xc(R,k,q,y))}switch(l){case \"input\":Vb(r);\n\tEc(r,m,!1);break;case \"textarea\":Vb(r);je(r,m);break;case \"option\":null!=m.value&&r.setAttribute(\"value\",\"\"+yc(m.value));break;case \"select\":h=r;h.multiple=!!m.multiple;r=m.value;null!=r?fe(h,!!m.multiple,r,!1):null!=m.defaultValue&&fe(h,!!m.multiple,m.defaultValue,!0);break;default:\"function\"===typeof h.onClick&&(r.onclick=ye)}(g=Be(f,g))&&Bg(b);b.stateNode=e}null!==b.ref&&(b.effectTag|=128)}else null===b.stateNode?t(\"166\"):void 0;break;case 6:e&&null!=b.stateNode?Ig(e,b,e.memoizedProps,g):(\"string\"!==\n\ttypeof g&&(null===b.stateNode?t(\"166\"):void 0),e=If(Hf.current),If(O.current),ng(b)?(g=b,f=g.stateNode,e=g.memoizedProps,f[Ga]=g,(g=f.nodeValue!==e)&&Bg(b)):(f=b,g=(9===e.nodeType?e:e.ownerDocument).createTextNode(g),g[Ga]=b,f.stateNode=g));break;case 11:break;case 13:g=b.memoizedState;if(0!==(b.effectTag&64)){b.expirationTime=f;S=b;break a}g=null!==g;f=null!==e&&null!==e.memoizedState;null!==e&&!g&&f&&(e=e.child.sibling,null!==e&&(h=b.firstEffect,null!==h?(b.firstEffect=e,e.nextEffect=h):(b.firstEffect=\n\tb.lastEffect=e,e.nextEffect=null),e.effectTag=8));if(g!==f||0===(b.effectTag&1)&&g)b.effectTag|=4;break;case 7:break;case 8:break;case 12:break;case 4:Kf(b);Gg(b);break;case 10:Cf(b);break;case 9:break;case 14:break;case 17:M(b.type)&&Ne(b);break;default:t(\"156\")}S=null}b=a;if(1===U||1!==b.childExpirationTime){g=0;for(f=b.child;null!==f;)e=f.expirationTime,h=f.childExpirationTime,e>g&&(g=e),h>g&&(g=h),f=f.sibling;b.childExpirationTime=g}if(null!==S)return S;null!==c&&0===(c.effectTag&1024)&&(null===\n\tc.firstEffect&&(c.firstEffect=a.firstEffect),null!==a.lastEffect&&(null!==c.lastEffect&&(c.lastEffect.nextEffect=a.firstEffect),c.lastEffect=a.lastEffect),1<a.effectTag&&(null!==c.lastEffect?c.lastEffect.nextEffect=a:c.firstEffect=a,c.lastEffect=a))}else{a=Zg(a,U);if(null!==a)return a.effectTag&=1023,a;null!==c&&(c.firstEffect=c.lastEffect=null,c.effectTag|=1024)}if(null!==d)return d;if(null!==c)a=c;else break}return null}\n\tfunction lh(a){var b=Ag(a.alternate,a,U);a.memoizedProps=a.pendingProps;null===b&&(b=kh(a));ah.current=null;return b}\n\tfunction mh(a,b){dh?t(\"243\"):void 0;Tf();dh=!0;ah.currentDispatcher=$g;var c=a.nextExpirationTimeToWorkOn;if(c!==U||a!==T||null===S)jh(),T=a,U=c,S=$e(T.current,null,U),a.pendingCommitExpirationTime=0;var d=!1;do{try{if(b)for(;null!==S&&!nh();)S=lh(S);else for(;null!==S;)S=lh(S)}catch(B){if(Af=zf=yf=null,null===S)d=!0,Wg(B);else{null===S?t(\"271\"):void 0;var e=S,f=e.return;if(null===f)d=!0,Wg(B);else{a:{var g=a,h=f,k=e,l=B;f=U;k.effectTag|=1024;k.firstEffect=k.lastEffect=null;if(null!==l&&\"object\"===\n\ttypeof l&&\"function\"===typeof l.then){var m=l;l=h;var r=-1,w=-1;do{if(13===l.tag){var y=l.alternate;if(null!==y&&(y=y.memoizedState,null!==y)){w=10*(1073741822-y.timedOutAt);break}y=l.pendingProps.maxDuration;if(\"number\"===typeof y)if(0>=y)r=0;else if(-1===r||y<r)r=y}l=l.return}while(null!==l);l=h;do{if(y=13===l.tag)y=void 0===l.memoizedProps.fallback?!1:null===l.memoizedState;if(y){h=l.updateQueue;null===h?l.updateQueue=new Set([m]):h.add(m);if(0===(l.mode&1)){l.effectTag|=64;k.effectTag&=-1957;\n\t1===k.tag&&(null===k.alternate?k.tag=17:(f=nf(1073741823),f.tag=2,pf(k,f)));k.expirationTime=1073741823;break a}k=g.pingCache;null===k?(k=g.pingCache=new Ug,h=new Set,k.set(m,h)):(h=k.get(m),void 0===h&&(h=new Set,k.set(m,h)));h.has(f)||(h.add(f),k=oh.bind(null,g,m,f),m.then(k,k));-1===r?g=1073741823:(-1===w&&(w=10*(1073741822-jf(g,f))-5E3),g=w+r);0<=g&&eh<g&&(eh=g);l.effectTag|=2048;l.expirationTime=f;break a}l=l.return}while(null!==l);l=Error((mc(k.type)||\"A React component\")+\" suspended while rendering, but no fallback UI was specified.\\n\\nAdd a <Suspense fallback=...> component higher in the tree to provide a loading indicator or placeholder to display.\"+\n\tnc(k))}fh=!0;l=wf(l,k);g=h;do{switch(g.tag){case 3:g.effectTag|=2048;g.expirationTime=f;f=Vg(g,l,f);qf(g,f);break a;case 1:if(m=l,r=g.type,w=g.stateNode,0===(g.effectTag&64)&&(\"function\"===typeof r.getDerivedStateFromError||null!==w&&\"function\"===typeof w.componentDidCatch&&(null===Yg||!Yg.has(w)))){g.effectTag|=2048;g.expirationTime=f;f=Xg(g,m,f);qf(g,f);break a}}g=g.return}while(null!==g)}S=kh(e);continue}}}break}while(1);dh=!1;Af=zf=yf=ah.currentDispatcher=null;if(d)T=null,a.finishedWork=null;\n\telse if(null!==S)a.finishedWork=null;else{d=a.current.alternate;null===d?t(\"281\"):void 0;T=null;if(fh){e=a.latestPendingTime;f=a.latestSuspendedTime;g=a.latestPingedTime;if(0!==e&&e<c||0!==f&&f<c||0!==g&&g<c){hf(a,c);ph(a,d,c,a.expirationTime,-1);return}if(!a.didError&&b){a.didError=!0;c=a.nextExpirationTimeToWorkOn=c;b=a.expirationTime=1073741823;ph(a,d,c,b,-1);return}}b&&-1!==eh?(hf(a,c),b=10*(1073741822-jf(a,c)),b<eh&&(eh=b),b=10*(1073741822-Rf()),b=eh-b,ph(a,d,c,a.expirationTime,0>b?0:b)):(a.pendingCommitExpirationTime=\n\tc,a.finishedWork=d)}}function Mg(a,b){for(var c=a.return;null!==c;){switch(c.tag){case 1:var d=c.stateNode;if(\"function\"===typeof c.type.getDerivedStateFromError||\"function\"===typeof d.componentDidCatch&&(null===Yg||!Yg.has(d))){a=wf(b,a);a=Xg(c,a,1073741823);pf(c,a);Uf(c,1073741823);return}break;case 3:a=wf(b,a);a=Vg(c,a,1073741823);pf(c,a);Uf(c,1073741823);return}c=c.return}3===a.tag&&(c=wf(b,a),c=Vg(a,c,1073741823),pf(a,c),Uf(a,1073741823))}\n\tfunction Sf(a,b){0!==ch?a=ch:dh?a=gh?1073741823:U:b.mode&1?(a=qh?1073741822-10*(((1073741822-a+15)/10|0)+1):1073741822-25*(((1073741822-a+500)/25|0)+1),null!==T&&a===U&&--a):a=1073741823;qh&&(0===rh||a<rh)&&(rh=a);return a}function oh(a,b,c){var d=a.pingCache;null!==d&&d.delete(b);if(null!==T&&U===c)T=null;else if(b=a.earliestSuspendedTime,d=a.latestSuspendedTime,0!==b&&c<=b&&c>=d){a.didError=!1;b=a.latestPingedTime;if(0===b||b>c)a.latestPingedTime=c;gf(c,a);c=a.expirationTime;0!==c&&sh(a,c)}}\n\tfunction Tg(a,b){var c=a.stateNode;null!==c&&c.delete(b);b=Rf();b=Sf(b,a);a=th(a,b);null!==a&&(ff(a,b),b=a.expirationTime,0!==b&&sh(a,b))}\n\tfunction th(a,b){a.expirationTime<b&&(a.expirationTime=b);var c=a.alternate;null!==c&&c.expirationTime<b&&(c.expirationTime=b);var d=a.return,e=null;if(null===d&&3===a.tag)e=a.stateNode;else for(;null!==d;){c=d.alternate;d.childExpirationTime<b&&(d.childExpirationTime=b);null!==c&&c.childExpirationTime<b&&(c.childExpirationTime=b);if(null===d.return&&3===d.tag){e=d.stateNode;break}d=d.return}return e}\n\tfunction Uf(a,b){a=th(a,b);null!==a&&(!dh&&0!==U&&b>U&&jh(),ff(a,b),dh&&!gh&&T===a||sh(a,a.expirationTime),uh>vh&&(uh=0,t(\"185\")))}function wh(a,b,c,d,e){var f=ch;ch=1073741823;try{return a(b,c,d,e)}finally{ch=f}}var xh=null,W=null,yh=0,zh=void 0,X=!1,Ah=null,Y=0,rh=0,Bh=!1,Ch=null,Z=!1,Dh=!1,qh=!1,Eh=null,Fh=ba.unstable_now(),Gh=1073741822-(Fh/10|0),Hh=Gh,vh=50,uh=0,Ih=null;function Jh(){Gh=1073741822-((ba.unstable_now()-Fh)/10|0)}\n\tfunction Kh(a,b){if(0!==yh){if(b<yh)return;null!==zh&&ba.unstable_cancelCallback(zh)}yh=b;a=ba.unstable_now()-Fh;zh=ba.unstable_scheduleCallback(Lh,{timeout:10*(1073741822-b)-a})}function ph(a,b,c,d,e){a.expirationTime=d;0!==e||nh()?0<e&&(a.timeoutHandle=De(Mh.bind(null,a,b,c),e)):(a.pendingCommitExpirationTime=c,a.finishedWork=b)}function Mh(a,b,c){a.pendingCommitExpirationTime=c;a.finishedWork=b;Jh();Hh=Gh;Nh(a,c)}function Rf(){if(X)return Hh;Oh();if(0===Y||1===Y)Jh(),Hh=Gh;return Hh}\n\tfunction sh(a,b){null===a.nextScheduledRoot?(a.expirationTime=b,null===W?(xh=W=a,a.nextScheduledRoot=a):(W=W.nextScheduledRoot=a,W.nextScheduledRoot=xh)):b>a.expirationTime&&(a.expirationTime=b);X||(Z?Dh&&(Ah=a,Y=1073741823,Ph(a,1073741823,!1)):1073741823===b?Qh(1073741823,!1):Kh(a,b))}\n\tfunction Oh(){var a=0,b=null;if(null!==W)for(var c=W,d=xh;null!==d;){var e=d.expirationTime;if(0===e){null===c||null===W?t(\"244\"):void 0;if(d===d.nextScheduledRoot){xh=W=d.nextScheduledRoot=null;break}else if(d===xh)xh=e=d.nextScheduledRoot,W.nextScheduledRoot=e,d.nextScheduledRoot=null;else if(d===W){W=c;W.nextScheduledRoot=xh;d.nextScheduledRoot=null;break}else c.nextScheduledRoot=d.nextScheduledRoot,d.nextScheduledRoot=null;d=c.nextScheduledRoot}else{e>a&&(a=e,b=d);if(d===W)break;if(1073741823===\n\ta)break;c=d;d=d.nextScheduledRoot}}Ah=b;Y=a}var Rh=!1;function nh(){return Rh?!0:ba.unstable_shouldYield()?Rh=!0:!1}function Lh(){try{if(!nh()&&null!==xh){Jh();var a=xh;do{var b=a.expirationTime;0!==b&&Gh<=b&&(a.nextExpirationTimeToWorkOn=Gh);a=a.nextScheduledRoot}while(a!==xh)}Qh(0,!0)}finally{Rh=!1}}\n\tfunction Qh(a,b){Oh();if(b)for(Jh(),Hh=Gh;null!==Ah&&0!==Y&&a<=Y&&!(Rh&&Gh>Y);)Ph(Ah,Y,Gh>Y),Oh(),Jh(),Hh=Gh;else for(;null!==Ah&&0!==Y&&a<=Y;)Ph(Ah,Y,!1),Oh();b&&(yh=0,zh=null);0!==Y&&Kh(Ah,Y);uh=0;Ih=null;if(null!==Eh)for(a=Eh,Eh=null,b=0;b<a.length;b++){var c=a[b];try{c._onComplete()}catch(d){Bh||(Bh=!0,Ch=d)}}if(Bh)throw a=Ch,Ch=null,Bh=!1,a;}function Nh(a,b){X?t(\"253\"):void 0;Ah=a;Y=b;Ph(a,b,!1);Qh(1073741823,!1)}\n\tfunction Ph(a,b,c){X?t(\"245\"):void 0;X=!0;if(c){var d=a.finishedWork;null!==d?Sh(a,d,b):(a.finishedWork=null,d=a.timeoutHandle,-1!==d&&(a.timeoutHandle=-1,Ee(d)),mh(a,c),d=a.finishedWork,null!==d&&(nh()?a.finishedWork=d:Sh(a,d,b)))}else d=a.finishedWork,null!==d?Sh(a,d,b):(a.finishedWork=null,d=a.timeoutHandle,-1!==d&&(a.timeoutHandle=-1,Ee(d)),mh(a,c),d=a.finishedWork,null!==d&&Sh(a,d,b));X=!1}\n\tfunction Sh(a,b,c){var d=a.firstBatch;if(null!==d&&d._expirationTime>=c&&(null===Eh?Eh=[d]:Eh.push(d),d._defer)){a.finishedWork=b;a.expirationTime=0;return}a.finishedWork=null;a===Ih?uh++:(Ih=a,uh=0);gh=dh=!0;a.current===b?t(\"177\"):void 0;c=a.pendingCommitExpirationTime;0===c?t(\"261\"):void 0;a.pendingCommitExpirationTime=0;d=b.expirationTime;var e=b.childExpirationTime;d=e>d?e:d;a.didError=!1;0===d?(a.earliestPendingTime=0,a.latestPendingTime=0,a.earliestSuspendedTime=0,a.latestSuspendedTime=0,a.latestPingedTime=\n\t0):(d<a.latestPingedTime&&(a.latestPingedTime=0),e=a.latestPendingTime,0!==e&&(e>d?a.earliestPendingTime=a.latestPendingTime=0:a.earliestPendingTime>d&&(a.earliestPendingTime=a.latestPendingTime)),e=a.earliestSuspendedTime,0===e?ff(a,d):d<a.latestSuspendedTime?(a.earliestSuspendedTime=0,a.latestSuspendedTime=0,a.latestPingedTime=0,ff(a,d)):d>e&&ff(a,d));gf(0,a);ah.current=null;1<b.effectTag?null!==b.lastEffect?(b.lastEffect.nextEffect=b,d=b.firstEffect):d=b:d=b.firstEffect;ze=Hd;e=Td();if(Ud(e)){if(\"selectionStart\"in\n\te)var f={start:e.selectionStart,end:e.selectionEnd};else a:{f=(f=e.ownerDocument)&&f.defaultView||window;var g=f.getSelection&&f.getSelection();if(g&&0!==g.rangeCount){f=g.anchorNode;var h=g.anchorOffset,k=g.focusNode;g=g.focusOffset;try{f.nodeType,k.nodeType}catch(db){f=null;break a}var l=0,m=-1,r=-1,w=0,y=0,B=e,R=null;b:for(;;){for(var v;;){B!==f||0!==h&&3!==B.nodeType||(m=l+h);B!==k||0!==g&&3!==B.nodeType||(r=l+g);3===B.nodeType&&(l+=B.nodeValue.length);if(null===(v=B.firstChild))break;R=B;B=v}for(;;){if(B===\n\te)break b;R===f&&++w===h&&(m=l);R===k&&++y===g&&(r=l);if(null!==(v=B.nextSibling))break;B=R;R=B.parentNode}B=v}f=-1===m||-1===r?null:{start:m,end:r}}else f=null}f=f||{start:0,end:0}}else f=null;Ae={focusedElem:e,selectionRange:f};Hd=!1;for(V=d;null!==V;){e=!1;f=void 0;try{for(;null!==V;){if(V.effectTag&256)a:{var q=V.alternate;h=V;switch(h.tag){case 0:case 11:case 15:break a;case 1:if(h.effectTag&256&&null!==q){var u=q.memoizedProps,A=q.memoizedState,Yf=h.stateNode,Vh=Yf.getSnapshotBeforeUpdate(h.elementType===\n\th.type?u:P(h.type,u),A);Yf.__reactInternalSnapshotBeforeUpdate=Vh}break a;case 3:case 5:case 6:case 4:case 17:break a;default:t(\"163\")}}V=V.nextEffect}}catch(db){e=!0,f=db}e&&(null===V?t(\"178\"):void 0,Mg(V,f),null!==V&&(V=V.nextEffect))}for(V=d;null!==V;){q=!1;u=void 0;try{for(;null!==V;){var x=V.effectTag;x&16&&pe(V.stateNode,\"\");if(x&128){var C=V.alternate;if(null!==C){var p=C.ref;null!==p&&(\"function\"===typeof p?p(null):p.current=null)}}switch(x&14){case 2:Rg(V);V.effectTag&=-3;break;case 6:Rg(V);\n\tV.effectTag&=-3;Sg(V.alternate,V);break;case 4:Sg(V.alternate,V);break;case 8:A=V;Pg(A);A.return=null;A.child=null;A.memoizedState=null;A.updateQueue=null;var G=A.alternate;null!==G&&(G.return=null,G.child=null,G.memoizedState=null,G.updateQueue=null)}V=V.nextEffect}}catch(db){q=!0,u=db}q&&(null===V?t(\"178\"):void 0,Mg(V,u),null!==V&&(V=V.nextEffect))}p=Ae;C=Td();x=p.focusedElem;q=p.selectionRange;if(C!==x&&x&&x.ownerDocument&&Sd(x.ownerDocument.documentElement,x)){null!==q&&Ud(x)&&(C=q.start,p=q.end,\n\tvoid 0===p&&(p=C),\"selectionStart\"in x?(x.selectionStart=C,x.selectionEnd=Math.min(p,x.value.length)):(p=(C=x.ownerDocument||document)&&C.defaultView||window,p.getSelection&&(p=p.getSelection(),u=x.textContent.length,G=Math.min(q.start,u),q=void 0===q.end?G:Math.min(q.end,u),!p.extend&&G>q&&(u=q,q=G,G=u),u=Rd(x,G),A=Rd(x,q),u&&A&&(1!==p.rangeCount||p.anchorNode!==u.node||p.anchorOffset!==u.offset||p.focusNode!==A.node||p.focusOffset!==A.offset)&&(C=C.createRange(),C.setStart(u.node,u.offset),p.removeAllRanges(),\n\tG>q?(p.addRange(C),p.extend(A.node,A.offset)):(C.setEnd(A.node,A.offset),p.addRange(C))))));C=[];for(p=x;p=p.parentNode;)1===p.nodeType&&C.push({element:p,left:p.scrollLeft,top:p.scrollTop});\"function\"===typeof x.focus&&x.focus();for(x=0;x<C.length;x++)p=C[x],p.element.scrollLeft=p.left,p.element.scrollTop=p.top}Ae=null;Hd=!!ze;ze=null;a.current=b;for(V=d;null!==V;){d=!1;x=void 0;try{for(C=c;null!==V;){var Fb=V.effectTag;if(Fb&36){var Gb=V.alternate;p=V;G=C;switch(p.tag){case 0:case 11:case 15:break;\n\tcase 1:var Hc=p.stateNode;if(p.effectTag&4)if(null===Gb)Hc.componentDidMount();else{var ii=p.elementType===p.type?Gb.memoizedProps:P(p.type,Gb.memoizedProps);Hc.componentDidUpdate(ii,Gb.memoizedState,Hc.__reactInternalSnapshotBeforeUpdate)}var Dg=p.updateQueue;null!==Dg&&uf(p,Dg,Hc,G);break;case 3:var Eg=p.updateQueue;if(null!==Eg){q=null;if(null!==p.child)switch(p.child.tag){case 5:q=p.child.stateNode;break;case 1:q=p.child.stateNode}uf(p,Eg,q,G)}break;case 5:var ji=p.stateNode;null===Gb&&p.effectTag&\n\t4&&Be(p.type,p.memoizedProps)&&ji.focus();break;case 6:break;case 4:break;case 12:break;case 13:break;case 17:break;default:t(\"163\")}}if(Fb&128){var Ic=V.ref;if(null!==Ic){var Fg=V.stateNode;switch(V.tag){case 5:var ce=Fg;break;default:ce=Fg}\"function\"===typeof Ic?Ic(ce):Ic.current=ce}}V=V.nextEffect}}catch(db){d=!0,x=db}d&&(null===V?t(\"178\"):void 0,Mg(V,x),null!==V&&(V=V.nextEffect))}dh=gh=!1;\"function\"===typeof Te&&Te(b.stateNode);Fb=b.expirationTime;b=b.childExpirationTime;b=b>Fb?b:Fb;0===b&&(Yg=\n\tnull);a.expirationTime=b;a.finishedWork=null}function Wg(a){null===Ah?t(\"246\"):void 0;Ah.expirationTime=0;Bh||(Bh=!0,Ch=a)}function Th(a,b){var c=Z;Z=!0;try{return a(b)}finally{(Z=c)||X||Qh(1073741823,!1)}}function Uh(a,b){if(Z&&!Dh){Dh=!0;try{return a(b)}finally{Dh=!1}}return a(b)}function Wh(a,b,c){if(qh)return a(b,c);Z||X||0===rh||(Qh(rh,!1),rh=0);var d=qh,e=Z;Z=qh=!0;try{return a(b,c)}finally{qh=d,(Z=e)||X||Qh(1073741823,!1)}}\n\tfunction Xh(a,b,c,d,e){var f=b.current;a:if(c){c=c._reactInternalFiber;b:{2===kd(c)&&1===c.tag?void 0:t(\"170\");var g=c;do{switch(g.tag){case 3:g=g.stateNode.context;break b;case 1:if(M(g.type)){g=g.stateNode.__reactInternalMemoizedMergedChildContext;break b}}g=g.return}while(null!==g);t(\"171\");g=void 0}if(1===c.tag){var h=c.type;if(M(h)){c=Qe(c,h,g);break a}}c=g}else c=Ke;null===b.context?b.context=c:b.pendingContext=c;b=e;e=nf(d);e.payload={element:a};b=void 0===b?null:b;null!==b&&(e.callback=b);\n\tTf();pf(f,e);Uf(f,d);return d}function Yh(a,b,c,d){var e=b.current,f=Rf();e=Sf(f,e);return Xh(a,b,c,e,d)}function Zh(a){a=a.current;if(!a.child)return null;switch(a.child.tag){case 5:return a.child.stateNode;default:return a.child.stateNode}}function $h(a,b,c){var d=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:$b,key:null==d?null:\"\"+d,children:a,containerInfo:b,implementation:c}}\n\tCb=function(a,b,c){switch(b){case \"input\":Cc(a,c);b=c.name;if(\"radio\"===c.type&&null!=b){for(c=a;c.parentNode;)c=c.parentNode;c=c.querySelectorAll(\"input[name=\"+JSON.stringify(\"\"+b)+'][type=\"radio\"]');for(b=0;b<c.length;b++){var d=c[b];if(d!==a&&d.form===a.form){var e=La(d);e?void 0:t(\"90\");Wb(d);Cc(d,e)}}}break;case \"textarea\":ie(a,c);break;case \"select\":b=c.value,null!=b&&fe(a,!!c.multiple,b,!1)}};\n\tfunction ai(a){var b=1073741822-25*(((1073741822-Rf()+500)/25|0)+1);b>=bh&&(b=bh-1);this._expirationTime=bh=b;this._root=a;this._callbacks=this._next=null;this._hasChildren=this._didComplete=!1;this._children=null;this._defer=!0}ai.prototype.render=function(a){this._defer?void 0:t(\"250\");this._hasChildren=!0;this._children=a;var b=this._root._internalRoot,c=this._expirationTime,d=new bi;Xh(a,b,null,c,d._onCommit);return d};\n\tai.prototype.then=function(a){if(this._didComplete)a();else{var b=this._callbacks;null===b&&(b=this._callbacks=[]);b.push(a)}};\n\tai.prototype.commit=function(){var a=this._root._internalRoot,b=a.firstBatch;this._defer&&null!==b?void 0:t(\"251\");if(this._hasChildren){var c=this._expirationTime;if(b!==this){this._hasChildren&&(c=this._expirationTime=b._expirationTime,this.render(this._children));for(var d=null,e=b;e!==this;)d=e,e=e._next;null===d?t(\"251\"):void 0;d._next=e._next;this._next=b;a.firstBatch=this}this._defer=!1;Nh(a,c);b=this._next;this._next=null;b=a.firstBatch=b;null!==b&&b._hasChildren&&b.render(b._children)}else this._next=\n\tnull,this._defer=!1};ai.prototype._onComplete=function(){if(!this._didComplete){this._didComplete=!0;var a=this._callbacks;if(null!==a)for(var b=0;b<a.length;b++)(0,a[b])()}};function bi(){this._callbacks=null;this._didCommit=!1;this._onCommit=this._onCommit.bind(this)}bi.prototype.then=function(a){if(this._didCommit)a();else{var b=this._callbacks;null===b&&(b=this._callbacks=[]);b.push(a)}};\n\tbi.prototype._onCommit=function(){if(!this._didCommit){this._didCommit=!0;var a=this._callbacks;if(null!==a)for(var b=0;b<a.length;b++){var c=a[b];\"function\"!==typeof c?t(\"191\",c):void 0;c()}}};\n\tfunction ci(a,b,c){b=N(3,null,null,b?3:0);a={current:b,containerInfo:a,pendingChildren:null,pingCache:null,earliestPendingTime:0,latestPendingTime:0,earliestSuspendedTime:0,latestSuspendedTime:0,latestPingedTime:0,didError:!1,pendingCommitExpirationTime:0,finishedWork:null,timeoutHandle:-1,context:null,pendingContext:null,hydrate:c,nextExpirationTimeToWorkOn:0,expirationTime:0,firstBatch:null,nextScheduledRoot:null};this._internalRoot=b.stateNode=a}\n\tci.prototype.render=function(a,b){var c=this._internalRoot,d=new bi;b=void 0===b?null:b;null!==b&&d.then(b);Yh(a,c,null,d._onCommit);return d};ci.prototype.unmount=function(a){var b=this._internalRoot,c=new bi;a=void 0===a?null:a;null!==a&&c.then(a);Yh(null,b,null,c._onCommit);return c};ci.prototype.legacy_renderSubtreeIntoContainer=function(a,b,c){var d=this._internalRoot,e=new bi;c=void 0===c?null:c;null!==c&&e.then(c);Yh(b,d,a,e._onCommit);return e};\n\tci.prototype.createBatch=function(){var a=new ai(this),b=a._expirationTime,c=this._internalRoot,d=c.firstBatch;if(null===d)c.firstBatch=a,a._next=null;else{for(c=null;null!==d&&d._expirationTime>=b;)c=d,d=d._next;a._next=d;null!==c&&(c._next=a)}return a};function di(a){return!(!a||1!==a.nodeType&&9!==a.nodeType&&11!==a.nodeType&&(8!==a.nodeType||\" react-mount-point-unstable \"!==a.nodeValue))}Kb=Th;Lb=Wh;Mb=function(){X||0===rh||(Qh(rh,!1),rh=0)};\n\tfunction ei(a,b){b||(b=a?9===a.nodeType?a.documentElement:a.firstChild:null,b=!(!b||1!==b.nodeType||!b.hasAttribute(\"data-reactroot\")));if(!b)for(var c;c=a.lastChild;)a.removeChild(c);return new ci(a,!1,b)}\n\tfunction fi(a,b,c,d,e){di(c)?void 0:t(\"200\");var f=c._reactRootContainer;if(f){if(\"function\"===typeof e){var g=e;e=function(){var a=Zh(f._internalRoot);g.call(a)}}null!=a?f.legacy_renderSubtreeIntoContainer(a,b,e):f.render(b,e)}else{f=c._reactRootContainer=ei(c,d);if(\"function\"===typeof e){var h=e;e=function(){var a=Zh(f._internalRoot);h.call(a)}}Uh(function(){null!=a?f.legacy_renderSubtreeIntoContainer(a,b,e):f.render(b,e)})}return Zh(f._internalRoot)}\n\tfunction gi(a,b){var c=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;di(b)?void 0:t(\"200\");return $h(a,b,null,c)}\n\tvar ki={createPortal:gi,findDOMNode:function(a){if(null==a)return null;if(1===a.nodeType)return a;var b=a._reactInternalFiber;void 0===b&&(\"function\"===typeof a.render?t(\"188\"):t(\"268\",Object.keys(a)));a=nd(b);a=null===a?null:a.stateNode;return a},hydrate:function(a,b,c){return fi(null,a,b,!0,c)},render:function(a,b,c){return fi(null,a,b,!1,c)},unstable_renderSubtreeIntoContainer:function(a,b,c,d){null==a||void 0===a._reactInternalFiber?t(\"38\"):void 0;return fi(a,b,c,!1,d)},unmountComponentAtNode:function(a){di(a)?\n\tvoid 0:t(\"40\");return a._reactRootContainer?(Uh(function(){fi(null,null,a,!1,function(){a._reactRootContainer=null})}),!0):!1},unstable_createPortal:function(){return gi.apply(void 0,arguments)},unstable_batchedUpdates:Th,unstable_interactiveUpdates:Wh,flushSync:function(a,b){X?t(\"187\"):void 0;var c=Z;Z=!0;try{return wh(a,b)}finally{Z=c,Qh(1073741823,!1)}},unstable_createRoot:hi,unstable_flushControlled:function(a){var b=Z;Z=!0;try{wh(a)}finally{(Z=b)||X||Qh(1073741823,!1)}},__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{Events:[Ja,\n\tKa,La,Ca.injectEventPluginsByName,qa,Ra,function(a){za(a,Qa)},Ib,Jb,Jd,Ea]}};function hi(a,b){di(a)?void 0:t(\"299\",\"unstable_createRoot\");return new ci(a,!0,null!=b&&!0===b.hydrate)}(function(a){var b=a.findFiberByHostInstance;return We(n({},a,{overrideProps:null,findHostInstanceByFiber:function(a){a=nd(a);return null===a?null:a.stateNode},findFiberByHostInstance:function(a){return b?b(a):null}}))})({findFiberByHostInstance:Ia,bundleType:0,version:\"16.7.0\",rendererPackageName:\"react-dom\"});\n\tvar li={default:ki},mi=li&&ki||li;module.exports=mi.default||mi;\n\n\n/***/ }),\n/* 35 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/** @license React v16.7.0\n\t * react.production.min.js\n\t *\n\t * Copyright (c) Facebook, Inc. and its affiliates.\n\t *\n\t * This source code is licensed under the MIT license found in the\n\t * LICENSE file in the root directory of this source tree.\n\t */\n\t\n\t'use strict';var k=__webpack_require__(5),n=\"function\"===typeof Symbol&&Symbol.for,p=n?Symbol.for(\"react.element\"):60103,q=n?Symbol.for(\"react.portal\"):60106,r=n?Symbol.for(\"react.fragment\"):60107,t=n?Symbol.for(\"react.strict_mode\"):60108,u=n?Symbol.for(\"react.profiler\"):60114,v=n?Symbol.for(\"react.provider\"):60109,w=n?Symbol.for(\"react.context\"):60110,x=n?Symbol.for(\"react.concurrent_mode\"):60111,y=n?Symbol.for(\"react.forward_ref\"):60112,z=n?Symbol.for(\"react.suspense\"):60113,A=n?Symbol.for(\"react.memo\"):\n\t60115,B=n?Symbol.for(\"react.lazy\"):60116,C=\"function\"===typeof Symbol&&Symbol.iterator;function aa(a,b,e,c,d,g,h,f){if(!a){a=void 0;if(void 0===b)a=Error(\"Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.\");else{var l=[e,c,d,g,h,f],m=0;a=Error(b.replace(/%s/g,function(){return l[m++]}));a.name=\"Invariant Violation\"}a.framesToPop=1;throw a;}}\n\tfunction D(a){for(var b=arguments.length-1,e=\"https://reactjs.org/docs/error-decoder.html?invariant=\"+a,c=0;c<b;c++)e+=\"&args[]=\"+encodeURIComponent(arguments[c+1]);aa(!1,\"Minified React error #\"+a+\"; visit %s for the full message or use the non-minified dev environment for full errors and additional helpful warnings. \",e)}var E={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},F={};\n\tfunction G(a,b,e){this.props=a;this.context=b;this.refs=F;this.updater=e||E}G.prototype.isReactComponent={};G.prototype.setState=function(a,b){\"object\"!==typeof a&&\"function\"!==typeof a&&null!=a?D(\"85\"):void 0;this.updater.enqueueSetState(this,a,b,\"setState\")};G.prototype.forceUpdate=function(a){this.updater.enqueueForceUpdate(this,a,\"forceUpdate\")};function H(){}H.prototype=G.prototype;function I(a,b,e){this.props=a;this.context=b;this.refs=F;this.updater=e||E}var J=I.prototype=new H;\n\tJ.constructor=I;k(J,G.prototype);J.isPureReactComponent=!0;var K={current:null,currentDispatcher:null},L=Object.prototype.hasOwnProperty,M={key:!0,ref:!0,__self:!0,__source:!0};\n\tfunction N(a,b,e){var c=void 0,d={},g=null,h=null;if(null!=b)for(c in void 0!==b.ref&&(h=b.ref),void 0!==b.key&&(g=\"\"+b.key),b)L.call(b,c)&&!M.hasOwnProperty(c)&&(d[c]=b[c]);var f=arguments.length-2;if(1===f)d.children=e;else if(1<f){for(var l=Array(f),m=0;m<f;m++)l[m]=arguments[m+2];d.children=l}if(a&&a.defaultProps)for(c in f=a.defaultProps,f)void 0===d[c]&&(d[c]=f[c]);return{$$typeof:p,type:a,key:g,ref:h,props:d,_owner:K.current}}\n\tfunction ba(a,b){return{$$typeof:p,type:a.type,key:b,ref:a.ref,props:a.props,_owner:a._owner}}function O(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===p}function escape(a){var b={\"=\":\"=0\",\":\":\"=2\"};return\"$\"+(\"\"+a).replace(/[=:]/g,function(a){return b[a]})}var P=/\\/+/g,Q=[];function R(a,b,e,c){if(Q.length){var d=Q.pop();d.result=a;d.keyPrefix=b;d.func=e;d.context=c;d.count=0;return d}return{result:a,keyPrefix:b,func:e,context:c,count:0}}\n\tfunction S(a){a.result=null;a.keyPrefix=null;a.func=null;a.context=null;a.count=0;10>Q.length&&Q.push(a)}\n\tfunction T(a,b,e,c){var d=typeof a;if(\"undefined\"===d||\"boolean\"===d)a=null;var g=!1;if(null===a)g=!0;else switch(d){case \"string\":case \"number\":g=!0;break;case \"object\":switch(a.$$typeof){case p:case q:g=!0}}if(g)return e(c,a,\"\"===b?\".\"+U(a,0):b),1;g=0;b=\"\"===b?\".\":b+\":\";if(Array.isArray(a))for(var h=0;h<a.length;h++){d=a[h];var f=b+U(d,h);g+=T(d,f,e,c)}else if(null===a||\"object\"!==typeof a?f=null:(f=C&&a[C]||a[\"@@iterator\"],f=\"function\"===typeof f?f:null),\"function\"===typeof f)for(a=f.call(a),h=\n\t0;!(d=a.next()).done;)d=d.value,f=b+U(d,h++),g+=T(d,f,e,c);else\"object\"===d&&(e=\"\"+a,D(\"31\",\"[object Object]\"===e?\"object with keys {\"+Object.keys(a).join(\", \")+\"}\":e,\"\"));return g}function V(a,b,e){return null==a?0:T(a,\"\",b,e)}function U(a,b){return\"object\"===typeof a&&null!==a&&null!=a.key?escape(a.key):b.toString(36)}function ca(a,b){a.func.call(a.context,b,a.count++)}\n\tfunction da(a,b,e){var c=a.result,d=a.keyPrefix;a=a.func.call(a.context,b,a.count++);Array.isArray(a)?W(a,c,e,function(a){return a}):null!=a&&(O(a)&&(a=ba(a,d+(!a.key||b&&b.key===a.key?\"\":(\"\"+a.key).replace(P,\"$&/\")+\"/\")+e)),c.push(a))}function W(a,b,e,c,d){var g=\"\";null!=e&&(g=(\"\"+e).replace(P,\"$&/\")+\"/\");b=R(b,g,c,d);V(a,da,b);S(b)}\n\tvar X={Children:{map:function(a,b,e){if(null==a)return a;var c=[];W(a,c,null,b,e);return c},forEach:function(a,b,e){if(null==a)return a;b=R(null,null,b,e);V(a,ca,b);S(b)},count:function(a){return V(a,function(){return null},null)},toArray:function(a){var b=[];W(a,b,null,function(a){return a});return b},only:function(a){O(a)?void 0:D(\"143\");return a}},createRef:function(){return{current:null}},Component:G,PureComponent:I,createContext:function(a,b){void 0===b&&(b=null);a={$$typeof:w,_calculateChangedBits:b,\n\t_currentValue:a,_currentValue2:a,_threadCount:0,Provider:null,Consumer:null};a.Provider={$$typeof:v,_context:a};return a.Consumer=a},forwardRef:function(a){return{$$typeof:y,render:a}},lazy:function(a){return{$$typeof:B,_ctor:a,_status:-1,_result:null}},memo:function(a,b){return{$$typeof:A,type:a,compare:void 0===b?null:b}},Fragment:r,StrictMode:t,Suspense:z,createElement:N,cloneElement:function(a,b,e){null===a||void 0===a?D(\"267\",a):void 0;var c=void 0,d=k({},a.props),g=a.key,h=a.ref,f=a._owner;\n\tif(null!=b){void 0!==b.ref&&(h=b.ref,f=K.current);void 0!==b.key&&(g=\"\"+b.key);var l=void 0;a.type&&a.type.defaultProps&&(l=a.type.defaultProps);for(c in b)L.call(b,c)&&!M.hasOwnProperty(c)&&(d[c]=void 0===b[c]&&void 0!==l?l[c]:b[c])}c=arguments.length-2;if(1===c)d.children=e;else if(1<c){l=Array(c);for(var m=0;m<c;m++)l[m]=arguments[m+2];d.children=l}return{$$typeof:p,type:a.type,key:g,ref:h,props:d,_owner:f}},createFactory:function(a){var b=N.bind(null,a);b.type=a;return b},isValidElement:O,version:\"16.7.0\",\n\tunstable_ConcurrentMode:x,unstable_Profiler:u,__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{ReactCurrentOwner:K,assign:k}},Y={default:X},Z=Y&&X||Y;module.exports=Z.default||Z;\n\n\n/***/ }),\n/* 36 */\n/***/ (function(module, exports) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {/** @license React v0.12.0\n\t * scheduler.production.min.js\n\t *\n\t * Copyright (c) Facebook, Inc. and its affiliates.\n\t *\n\t * This source code is licensed under the MIT license found in the\n\t * LICENSE file in the root directory of this source tree.\n\t */\n\t\n\t'use strict';Object.defineProperty(exports,\"__esModule\",{value:!0});var c=null,f=!1,h=3,k=-1,l=-1,m=!1,n=!1;function p(){if(!m){var a=c.expirationTime;n?q():n=!0;r(t,a)}}\n\tfunction u(){var a=c,b=c.next;if(c===b)c=null;else{var d=c.previous;c=d.next=b;b.previous=d}a.next=a.previous=null;d=a.callback;b=a.expirationTime;a=a.priorityLevel;var e=h,Q=l;h=a;l=b;try{var g=d()}finally{h=e,l=Q}if(\"function\"===typeof g)if(g={callback:g,priorityLevel:a,expirationTime:b,next:null,previous:null},null===c)c=g.next=g.previous=g;else{d=null;a=c;do{if(a.expirationTime>=b){d=a;break}a=a.next}while(a!==c);null===d?d=c:d===c&&(c=g,p());b=d.previous;b.next=d.previous=g;g.next=d;g.previous=\n\tb}}function v(){if(-1===k&&null!==c&&1===c.priorityLevel){m=!0;try{do u();while(null!==c&&1===c.priorityLevel)}finally{m=!1,null!==c?p():n=!1}}}function t(a){m=!0;var b=f;f=a;try{if(a)for(;null!==c;){var d=exports.unstable_now();if(c.expirationTime<=d){do u();while(null!==c&&c.expirationTime<=d)}else break}else if(null!==c){do u();while(null!==c&&!w())}}finally{m=!1,f=b,null!==c?p():n=!1,v()}}\n\tvar x=Date,y=\"function\"===typeof setTimeout?setTimeout:void 0,z=\"function\"===typeof clearTimeout?clearTimeout:void 0,A=\"function\"===typeof requestAnimationFrame?requestAnimationFrame:void 0,B=\"function\"===typeof cancelAnimationFrame?cancelAnimationFrame:void 0,C,D;function E(a){C=A(function(b){z(D);a(b)});D=y(function(){B(C);a(exports.unstable_now())},100)}\n\tif(\"object\"===typeof performance&&\"function\"===typeof performance.now){var F=performance;exports.unstable_now=function(){return F.now()}}else exports.unstable_now=function(){return x.now()};var r,q,w,G=null;\"undefined\"!==typeof window?G=window:\"undefined\"!==typeof global&&(G=global);\n\tif(G&&G._schedMock){var H=G._schedMock;r=H[0];q=H[1];w=H[2];exports.unstable_now=H[3]}else if(\"undefined\"===typeof window||\"function\"!==typeof MessageChannel){var I=null,J=function(a){if(null!==I)try{I(a)}finally{I=null}};r=function(a){null!==I?setTimeout(r,0,a):(I=a,setTimeout(J,0,!1))};q=function(){I=null};w=function(){return!1}}else{\"undefined\"!==typeof console&&(\"function\"!==typeof A&&console.error(\"This browser doesn't support requestAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills\"),\n\t\"function\"!==typeof B&&console.error(\"This browser doesn't support cancelAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills\"));var K=null,L=!1,M=-1,N=!1,O=!1,P=0,R=33,S=33;w=function(){return P<=exports.unstable_now()};var T=new MessageChannel,U=T.port2;T.port1.onmessage=function(){L=!1;var a=K,b=M;K=null;M=-1;var d=exports.unstable_now(),e=!1;if(0>=P-d)if(-1!==b&&b<=d)e=!0;else{N||(N=!0,E(V));K=a;M=b;return}if(null!==a){O=!0;try{a(e)}finally{O=!1}}};\n\tvar V=function(a){if(null!==K){E(V);var b=a-P+S;b<S&&R<S?(8>b&&(b=8),S=b<R?R:b):R=b;P=a+S;L||(L=!0,U.postMessage(void 0))}else N=!1};r=function(a,b){K=a;M=b;O||0>b?U.postMessage(void 0):N||(N=!0,E(V))};q=function(){K=null;L=!1;M=-1}}exports.unstable_ImmediatePriority=1;exports.unstable_UserBlockingPriority=2;exports.unstable_NormalPriority=3;exports.unstable_IdlePriority=5;exports.unstable_LowPriority=4;\n\texports.unstable_runWithPriority=function(a,b){switch(a){case 1:case 2:case 3:case 4:case 5:break;default:a=3}var d=h,e=k;h=a;k=exports.unstable_now();try{return b()}finally{h=d,k=e,v()}};\n\texports.unstable_scheduleCallback=function(a,b){var d=-1!==k?k:exports.unstable_now();if(\"object\"===typeof b&&null!==b&&\"number\"===typeof b.timeout)b=d+b.timeout;else switch(h){case 1:b=d+-1;break;case 2:b=d+250;break;case 5:b=d+1073741823;break;case 4:b=d+1E4;break;default:b=d+5E3}a={callback:a,priorityLevel:h,expirationTime:b,next:null,previous:null};if(null===c)c=a.next=a.previous=a,p();else{d=null;var e=c;do{if(e.expirationTime>b){d=e;break}e=e.next}while(e!==c);null===d?d=c:d===c&&(c=a,p());\n\tb=d.previous;b.next=d.previous=a;a.next=d;a.previous=b}return a};exports.unstable_cancelCallback=function(a){var b=a.next;if(null!==b){if(b===a)c=null;else{a===c&&(c=b);var d=a.previous;d.next=b;b.previous=d}a.next=a.previous=null}};exports.unstable_wrapCallback=function(a){var b=h;return function(){var d=h,e=k;h=b;k=exports.unstable_now();try{return a.apply(this,arguments)}finally{h=d,k=e,v()}}};exports.unstable_getCurrentPriorityLevel=function(){return h};\n\texports.unstable_shouldYield=function(){return!f&&(null!==c&&c.expirationTime<l||w())};exports.unstable_continueExecution=function(){null!==c&&p()};exports.unstable_pauseExecution=function(){};exports.unstable_getFirstCallbackNode=function(){return c};\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ }),\n/* 37 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tif (true) {\n\t  module.exports = __webpack_require__(36);\n\t} else {\n\t  module.exports = require('./cjs/scheduler.development.js');\n\t}\n\n\n/***/ }),\n/* 38 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = function(THREE) {\n\t\tvar MOUSE = THREE.MOUSE\n\t\tif (!MOUSE)\n\t\t\tMOUSE = { LEFT: 0, MIDDLE: 1, RIGHT: 2 };\n\t\n\t\t/**\n\t\t * @author qiao / https://github.com/qiao\n\t\t * @author mrdoob / http://mrdoob.com\n\t\t * @author alteredq / http://alteredqualia.com/\n\t\t * @author WestLangley / http://github.com/WestLangley\n\t\t * @author erich666 / http://erichaines.com\n\t\t */\n\t\t/*global THREE, console */\n\t\n\t\tfunction OrbitConstraint ( object ) {\n\t\n\t\t\tthis.object = object;\n\t\n\t\t\t// \"target\" sets the location of focus, where the object orbits around\n\t\t\t// and where it pans with respect to.\n\t\t\tthis.target = new THREE.Vector3();\n\t\n\t\t\t// Limits to how far you can dolly in and out ( PerspectiveCamera only )\n\t\t\tthis.minDistance = 0;\n\t\t\tthis.maxDistance = Infinity;\n\t\n\t\t\t// Limits to how far you can zoom in and out ( OrthographicCamera only )\n\t\t\tthis.minZoom = 0;\n\t\t\tthis.maxZoom = Infinity;\n\t\n\t\t\t// How far you can orbit vertically, upper and lower limits.\n\t\t\t// Range is 0 to Math.PI radians.\n\t\t\tthis.minPolarAngle = 0; // radians\n\t\t\tthis.maxPolarAngle = Math.PI; // radians\n\t\n\t\t\t// How far you can orbit horizontally, upper and lower limits.\n\t\t\t// If set, must be a sub-interval of the interval [ - Math.PI, Math.PI ].\n\t\t\tthis.minAzimuthAngle = - Infinity; // radians\n\t\t\tthis.maxAzimuthAngle = Infinity; // radians\n\t\n\t\t\t// Set to true to enable damping (inertia)\n\t\t\t// If damping is enabled, you must call controls.update() in your animation loop\n\t\t\tthis.enableDamping = false;\n\t\t\tthis.dampingFactor = 0.25;\n\t\n\t\t\t////////////\n\t\t\t// internals\n\t\n\t\t\tvar scope = this;\n\t\n\t\t\tvar EPS = 0.000001;\n\t\n\t\t\t// Current position in spherical coordinate system.\n\t\t\tvar theta;\n\t\t\tvar phi;\n\t\n\t\t\t// Pending changes\n\t\t\tvar phiDelta = 0;\n\t\t\tvar thetaDelta = 0;\n\t\t\tvar scale = 1;\n\t\t\tvar panOffset = new THREE.Vector3();\n\t\t\tvar zoomChanged = false;\n\t\n\t\t\t// API\n\t\n\t\t\tthis.getPolarAngle = function () {\n\t\n\t\t\t\treturn phi;\n\t\n\t\t\t};\n\t\n\t\t\tthis.getAzimuthalAngle = function () {\n\t\n\t\t\t\treturn theta;\n\t\n\t\t\t};\n\t\n\t\t\tthis.rotateLeft = function ( angle ) {\n\t\n\t\t\t\tthetaDelta -= angle;\n\t\n\t\t\t};\n\t\n\t\t\tthis.rotateUp = function ( angle ) {\n\t\n\t\t\t\tphiDelta -= angle;\n\t\n\t\t\t};\n\t\n\t\t\t// pass in distance in world space to move left\n\t\t\tthis.panLeft = function() {\n\t\n\t\t\t\tvar v = new THREE.Vector3();\n\t\n\t\t\t\treturn function panLeft ( distance ) {\n\t\n\t\t\t\t\tvar te = this.object.matrix.elements;\n\t\n\t\t\t\t\t// get X column of matrix\n\t\t\t\t\tv.set( te[ 0 ], te[ 1 ], te[ 2 ] );\n\t\t\t\t\tv.multiplyScalar( - distance );\n\t\n\t\t\t\t\tpanOffset.add( v );\n\t\n\t\t\t\t};\n\t\n\t\t\t}();\n\t\n\t\t\t// pass in distance in world space to move up\n\t\t\tthis.panUp = function() {\n\t\n\t\t\t\tvar v = new THREE.Vector3();\n\t\n\t\t\t\treturn function panUp ( distance ) {\n\t\n\t\t\t\t\tvar te = this.object.matrix.elements;\n\t\n\t\t\t\t\t// get Y column of matrix\n\t\t\t\t\tv.set( te[ 4 ], te[ 5 ], te[ 6 ] );\n\t\t\t\t\tv.multiplyScalar( distance );\n\t\n\t\t\t\t\tpanOffset.add( v );\n\t\n\t\t\t\t};\n\t\n\t\t\t}();\n\t\n\t\t\t// pass in x,y of change desired in pixel space,\n\t\t\t// right and down are positive\n\t\t\tthis.pan = function ( deltaX, deltaY, screenWidth, screenHeight ) {\n\t\n\t\t\t\tif ( scope.object instanceof THREE.PerspectiveCamera ) {\n\t\n\t\t\t\t\t// perspective\n\t\t\t\t\tvar position = scope.object.position;\n\t\t\t\t\tvar offset = position.clone().sub( scope.target );\n\t\t\t\t\tvar targetDistance = offset.length();\n\t\n\t\t\t\t\t// half of the fov is center to top of screen\n\t\t\t\t\ttargetDistance *= Math.tan( ( scope.object.fov / 2 ) * Math.PI / 180.0 );\n\t\n\t\t\t\t\t// we actually don't use screenWidth, since perspective camera is fixed to screen height\n\t\t\t\t\tscope.panLeft( 2 * deltaX * targetDistance / screenHeight );\n\t\t\t\t\tscope.panUp( 2 * deltaY * targetDistance / screenHeight );\n\t\n\t\t\t\t} else if ( scope.object instanceof THREE.OrthographicCamera ) {\n\t\n\t\t\t\t\t// orthographic\n\t\t\t\t\tscope.panLeft( deltaX * ( scope.object.right - scope.object.left ) / screenWidth );\n\t\t\t\t\tscope.panUp( deltaY * ( scope.object.top - scope.object.bottom ) / screenHeight );\n\t\n\t\t\t\t} else {\n\t\n\t\t\t\t\t// camera neither orthographic or perspective\n\t\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.' );\n\t\n\t\t\t\t}\n\t\n\t\t\t};\n\t\n\t\t\tthis.dollyIn = function ( dollyScale ) {\n\t\n\t\t\t\tif ( scope.object instanceof THREE.PerspectiveCamera ) {\n\t\n\t\t\t\t\tscale /= dollyScale;\n\t\n\t\t\t\t} else if ( scope.object instanceof THREE.OrthographicCamera ) {\n\t\n\t\t\t\t\tscope.object.zoom = Math.max( this.minZoom, Math.min( this.maxZoom, this.object.zoom * dollyScale ) );\n\t\t\t\t\tscope.object.updateProjectionMatrix();\n\t\t\t\t\tzoomChanged = true;\n\t\n\t\t\t\t} else {\n\t\n\t\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n\t\n\t\t\t\t}\n\t\n\t\t\t};\n\t\n\t\t\tthis.dollyOut = function ( dollyScale ) {\n\t\n\t\t\t\tif ( scope.object instanceof THREE.PerspectiveCamera ) {\n\t\n\t\t\t\t\tscale *= dollyScale;\n\t\n\t\t\t\t} else if ( scope.object instanceof THREE.OrthographicCamera ) {\n\t\n\t\t\t\t\tscope.object.zoom = Math.max( this.minZoom, Math.min( this.maxZoom, this.object.zoom / dollyScale ) );\n\t\t\t\t\tscope.object.updateProjectionMatrix();\n\t\t\t\t\tzoomChanged = true;\n\t\n\t\t\t\t} else {\n\t\n\t\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n\t\n\t\t\t\t}\n\t\n\t\t\t};\n\t\n\t\t\tthis.update = function() {\n\t\n\t\t\t\tvar offset = new THREE.Vector3();\n\t\n\t\t\t\t// so camera.up is the orbit axis\n\t\t\t\tvar quat = new THREE.Quaternion().setFromUnitVectors( object.up, new THREE.Vector3( 0, 1, 0 ) );\n\t\t\t\tvar quatInverse = quat.clone().inverse();\n\t\n\t\t\t\tvar lastPosition = new THREE.Vector3();\n\t\t\t\tvar lastQuaternion = new THREE.Quaternion();\n\t\n\t\t\t\treturn function () {\n\t\n\t\t\t\t\tvar position = this.object.position;\n\t\n\t\t\t\t\toffset.copy( position ).sub( this.target );\n\t\n\t\t\t\t\t// rotate offset to \"y-axis-is-up\" space\n\t\t\t\t\toffset.applyQuaternion( quat );\n\t\n\t\t\t\t\t// angle from z-axis around y-axis\n\t\n\t\t\t\t\ttheta = Math.atan2( offset.x, offset.z );\n\t\n\t\t\t\t\t// angle from y-axis\n\t\n\t\t\t\t\tphi = Math.atan2( Math.sqrt( offset.x * offset.x + offset.z * offset.z ), offset.y );\n\t\n\t\t\t\t\ttheta += thetaDelta;\n\t\t\t\t\tphi += phiDelta;\n\t\n\t\t\t\t\t// restrict theta to be between desired limits\n\t\t\t\t\ttheta = Math.max( this.minAzimuthAngle, Math.min( this.maxAzimuthAngle, theta ) );\n\t\n\t\t\t\t\t// restrict phi to be between desired limits\n\t\t\t\t\tphi = Math.max( this.minPolarAngle, Math.min( this.maxPolarAngle, phi ) );\n\t\n\t\t\t\t\t// restrict phi to be betwee EPS and PI-EPS\n\t\t\t\t\tphi = Math.max( EPS, Math.min( Math.PI - EPS, phi ) );\n\t\n\t\t\t\t\tvar radius = offset.length() * scale;\n\t\n\t\t\t\t\t// restrict radius to be between desired limits\n\t\t\t\t\tradius = Math.max( this.minDistance, Math.min( this.maxDistance, radius ) );\n\t\n\t\t\t\t\t// move target to panned location\n\t\t\t\t\tthis.target.add( panOffset );\n\t\n\t\t\t\t\toffset.x = radius * Math.sin( phi ) * Math.sin( theta );\n\t\t\t\t\toffset.y = radius * Math.cos( phi );\n\t\t\t\t\toffset.z = radius * Math.sin( phi ) * Math.cos( theta );\n\t\n\t\t\t\t\t// rotate offset back to \"camera-up-vector-is-up\" space\n\t\t\t\t\toffset.applyQuaternion( quatInverse );\n\t\n\t\t\t\t\tposition.copy( this.target ).add( offset );\n\t\n\t\t\t\t\tthis.object.lookAt( this.target );\n\t\n\t\t\t\t\tif ( this.enableDamping === true ) {\n\t\n\t\t\t\t\t\tthetaDelta *= ( 1 - this.dampingFactor );\n\t\t\t\t\t\tphiDelta *= ( 1 - this.dampingFactor );\n\t\n\t\t\t\t\t} else {\n\t\n\t\t\t\t\t\tthetaDelta = 0;\n\t\t\t\t\t\tphiDelta = 0;\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\tscale = 1;\n\t\t\t\t\tpanOffset.set( 0, 0, 0 );\n\t\n\t\t\t\t\t// update condition is:\n\t\t\t\t\t// min(camera displacement, camera rotation in radians)^2 > EPS\n\t\t\t\t\t// using small-angle approximation cos(x/2) = 1 - x^2 / 8\n\t\n\t\t\t\t\tif ( zoomChanged ||\n\t\t\t\t\t\t lastPosition.distanceToSquared( this.object.position ) > EPS ||\n\t\t\t\t\t\t8 * ( 1 - lastQuaternion.dot( this.object.quaternion ) ) > EPS ) {\n\t\n\t\t\t\t\t\tlastPosition.copy( this.object.position );\n\t\t\t\t\t\tlastQuaternion.copy( this.object.quaternion );\n\t\t\t\t\t\tzoomChanged = false;\n\t\n\t\t\t\t\t\treturn true;\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\treturn false;\n\t\n\t\t\t\t};\n\t\n\t\t\t}();\n\t\n\t\t};\n\t\n\t\n\t\t// This set of controls performs orbiting, dollying (zooming), and panning. It maintains\n\t\t// the \"up\" direction as +Y, unlike the TrackballControls. Touch on tablet and phones is\n\t\t// supported.\n\t\t//\n\t\t//    Orbit - left mouse / touch: one finger move\n\t\t//    Zoom - middle mouse, or mousewheel / touch: two finger spread or squish\n\t\t//    Pan - right mouse, or arrow keys / touch: three finter swipe\n\t\n\t\tfunction OrbitControls ( object, domElement ) {\n\t\n\t\t\tvar constraint = new OrbitConstraint( object );\n\t\n\t\t\tthis.domElement = ( domElement !== undefined ) ? domElement : document;\n\t\n\t\t\t// API\n\t\n\t\t\tObject.defineProperty( this, 'constraint', {\n\t\n\t\t\t\tget: function() {\n\t\n\t\t\t\t\treturn constraint;\n\t\n\t\t\t\t}\n\t\n\t\t\t} );\n\t\n\t\t\tthis.getPolarAngle = function () {\n\t\n\t\t\t\treturn constraint.getPolarAngle();\n\t\n\t\t\t};\n\t\n\t\t\tthis.getAzimuthalAngle = function () {\n\t\n\t\t\t\treturn constraint.getAzimuthalAngle();\n\t\n\t\t\t};\n\t\n\t\t\t// Set to false to disable this control\n\t\t\tthis.enabled = true;\n\t\n\t\t\t// center is old, deprecated; use \"target\" instead\n\t\t\tthis.center = this.target;\n\t\n\t\t\t// This option actually enables dollying in and out; left as \"zoom\" for\n\t\t\t// backwards compatibility.\n\t\t\t// Set to false to disable zooming\n\t\t\tthis.enableZoom = true;\n\t\t\tthis.zoomSpeed = 1.0;\n\t\n\t\t\t// Set to false to disable rotating\n\t\t\tthis.enableRotate = true;\n\t\t\tthis.rotateSpeed = 1.0;\n\t\n\t\t\t// Set to false to disable panning\n\t\t\tthis.enablePan = true;\n\t\t\tthis.keyPanSpeed = 7.0;\t// pixels moved per arrow key push\n\t\n\t\t\t// Set to true to automatically rotate around the target\n\t\t\t// If auto-rotate is enabled, you must call controls.update() in your animation loop\n\t\t\tthis.autoRotate = false;\n\t\t\tthis.autoRotateSpeed = 2.0; // 30 seconds per round when fps is 60\n\t\n\t\t\t// Set to false to disable use of the keys\n\t\t\tthis.enableKeys = true;\n\t\n\t\t\t// The four arrow keys\n\t\t\tthis.keys = { LEFT: 37, UP: 38, RIGHT: 39, BOTTOM: 40 };\n\t\n\t\t\t// Mouse buttons\n\t\t\tthis.mouseButtons = { ORBIT: THREE.MOUSE.LEFT, ZOOM: THREE.MOUSE.MIDDLE, PAN: THREE.MOUSE.RIGHT };\n\t\n\t\t\t////////////\n\t\t\t// internals\n\t\n\t\t\tvar scope = this;\n\t\n\t\t\tvar rotateStart = new THREE.Vector2();\n\t\t\tvar rotateEnd = new THREE.Vector2();\n\t\t\tvar rotateDelta = new THREE.Vector2();\n\t\n\t\t\tvar panStart = new THREE.Vector2();\n\t\t\tvar panEnd = new THREE.Vector2();\n\t\t\tvar panDelta = new THREE.Vector2();\n\t\n\t\t\tvar dollyStart = new THREE.Vector2();\n\t\t\tvar dollyEnd = new THREE.Vector2();\n\t\t\tvar dollyDelta = new THREE.Vector2();\n\t\n\t\t\tvar STATE = { NONE : - 1, ROTATE : 0, DOLLY : 1, PAN : 2, TOUCH_ROTATE : 3, TOUCH_DOLLY : 4, TOUCH_PAN : 5 };\n\t\n\t\t\tvar state = STATE.NONE;\n\t\n\t\t\t// for reset\n\t\n\t\t\tthis.target0 = this.target.clone();\n\t\t\tthis.position0 = this.object.position.clone();\n\t\t\tthis.zoom0 = this.object.zoom;\n\t\n\t\t\t// events\n\t\n\t\t\tvar changeEvent = { type: 'change' };\n\t\t\tvar startEvent = { type: 'start' };\n\t\t\tvar endEvent = { type: 'end' };\n\t\n\t\t\t// pass in x,y of change desired in pixel space,\n\t\t\t// right and down are positive\n\t\t\tfunction pan( deltaX, deltaY ) {\n\t\n\t\t\t\tvar element = scope.domElement === document ? scope.domElement.body : scope.domElement;\n\t\n\t\t\t\tconstraint.pan( deltaX, deltaY, element.clientWidth, element.clientHeight );\n\t\n\t\t\t}\n\t\n\t\t\tthis.update = function () {\n\t\n\t\t\t\tif ( this.autoRotate && state === STATE.NONE ) {\n\t\n\t\t\t\t\tconstraint.rotateLeft( getAutoRotationAngle() );\n\t\n\t\t\t\t}\n\t\n\t\t\t\tif ( constraint.update() === true ) {\n\t\n\t\t\t\t\tthis.dispatchEvent( changeEvent );\n\t\n\t\t\t\t}\n\t\n\t\t\t};\n\t\n\t\t\tthis.reset = function () {\n\t\n\t\t\t\tstate = STATE.NONE;\n\t\n\t\t\t\tthis.target.copy( this.target0 );\n\t\t\t\tthis.object.position.copy( this.position0 );\n\t\t\t\tthis.object.zoom = this.zoom0;\n\t\n\t\t\t\tthis.object.updateProjectionMatrix();\n\t\t\t\tthis.dispatchEvent( changeEvent );\n\t\n\t\t\t\tthis.update();\n\t\n\t\t\t};\n\t\n\t\t\tfunction getAutoRotationAngle() {\n\t\n\t\t\t\treturn 2 * Math.PI / 60 / 60 * scope.autoRotateSpeed;\n\t\n\t\t\t}\n\t\n\t\t\tfunction getZoomScale() {\n\t\n\t\t\t\treturn Math.pow( 0.95, scope.zoomSpeed );\n\t\n\t\t\t}\n\t\n\t\t\tfunction onMouseDown( event ) {\n\t\n\t\t\t\tif ( scope.enabled === false ) return;\n\t\n\t\t\t\tevent.preventDefault();\n\t\n\t\t\t\tif ( event.button === scope.mouseButtons.ORBIT ) {\n\t\n\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\t\n\t\t\t\t\tstate = STATE.ROTATE;\n\t\n\t\t\t\t\trotateStart.set( event.clientX, event.clientY );\n\t\n\t\t\t\t} else if ( event.button === scope.mouseButtons.ZOOM ) {\n\t\n\t\t\t\t\tif ( scope.enableZoom === false ) return;\n\t\n\t\t\t\t\tstate = STATE.DOLLY;\n\t\n\t\t\t\t\tdollyStart.set( event.clientX, event.clientY );\n\t\n\t\t\t\t} else if ( event.button === scope.mouseButtons.PAN ) {\n\t\n\t\t\t\t\tif ( scope.enablePan === false ) return;\n\t\n\t\t\t\t\tstate = STATE.PAN;\n\t\n\t\t\t\t\tpanStart.set( event.clientX, event.clientY );\n\t\n\t\t\t\t}\n\t\n\t\t\t\tif ( state !== STATE.NONE ) {\n\t\n\t\t\t\t\tdocument.addEventListener( 'mousemove', onMouseMove, false );\n\t\t\t\t\tdocument.addEventListener( 'mouseup', onMouseUp, false );\n\t\t\t\t\tscope.dispatchEvent( startEvent );\n\t\n\t\t\t\t}\n\t\n\t\t\t}\n\t\n\t\t\tfunction onMouseMove( event ) {\n\t\n\t\t\t\tif ( scope.enabled === false ) return;\n\t\n\t\t\t\tevent.preventDefault();\n\t\n\t\t\t\tvar element = scope.domElement === document ? scope.domElement.body : scope.domElement;\n\t\n\t\t\t\tif ( state === STATE.ROTATE ) {\n\t\n\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\t\n\t\t\t\t\trotateEnd.set( event.clientX, event.clientY );\n\t\t\t\t\trotateDelta.subVectors( rotateEnd, rotateStart );\n\t\n\t\t\t\t\t// rotating across whole screen goes 360 degrees around\n\t\t\t\t\tconstraint.rotateLeft( 2 * Math.PI * rotateDelta.x / element.clientWidth * scope.rotateSpeed );\n\t\n\t\t\t\t\t// rotating up and down along whole screen attempts to go 360, but limited to 180\n\t\t\t\t\tconstraint.rotateUp( 2 * Math.PI * rotateDelta.y / element.clientHeight * scope.rotateSpeed );\n\t\n\t\t\t\t\trotateStart.copy( rotateEnd );\n\t\n\t\t\t\t} else if ( state === STATE.DOLLY ) {\n\t\n\t\t\t\t\tif ( scope.enableZoom === false ) return;\n\t\n\t\t\t\t\tdollyEnd.set( event.clientX, event.clientY );\n\t\t\t\t\tdollyDelta.subVectors( dollyEnd, dollyStart );\n\t\n\t\t\t\t\tif ( dollyDelta.y > 0 ) {\n\t\n\t\t\t\t\t\tconstraint.dollyIn( getZoomScale() );\n\t\n\t\t\t\t\t} else if ( dollyDelta.y < 0 ) {\n\t\n\t\t\t\t\t\tconstraint.dollyOut( getZoomScale() );\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\tdollyStart.copy( dollyEnd );\n\t\n\t\t\t\t} else if ( state === STATE.PAN ) {\n\t\n\t\t\t\t\tif ( scope.enablePan === false ) return;\n\t\n\t\t\t\t\tpanEnd.set( event.clientX, event.clientY );\n\t\t\t\t\tpanDelta.subVectors( panEnd, panStart );\n\t\n\t\t\t\t\tpan( panDelta.x, panDelta.y );\n\t\n\t\t\t\t\tpanStart.copy( panEnd );\n\t\n\t\t\t\t}\n\t\n\t\t\t\tif ( state !== STATE.NONE ) scope.update();\n\t\n\t\t\t}\n\t\n\t\t\tfunction onMouseUp( /* event */ ) {\n\t\n\t\t\t\tif ( scope.enabled === false ) return;\n\t\n\t\t\t\tdocument.removeEventListener( 'mousemove', onMouseMove, false );\n\t\t\t\tdocument.removeEventListener( 'mouseup', onMouseUp, false );\n\t\t\t\tscope.dispatchEvent( endEvent );\n\t\t\t\tstate = STATE.NONE;\n\t\n\t\t\t}\n\t\n\t\t\tfunction onMouseWheel( event ) {\n\t\n\t\t\t\tif ( scope.enabled === false || scope.enableZoom === false || state !== STATE.NONE ) return;\n\t\n\t\t\t\tevent.preventDefault();\n\t\t\t\tevent.stopPropagation();\n\t\n\t\t\t\tvar delta = 0;\n\t\n\t\t\t\tif ( event.wheelDelta !== undefined ) {\n\t\n\t\t\t\t\t// WebKit / Opera / Explorer 9\n\t\n\t\t\t\t\tdelta = event.wheelDelta;\n\t\n\t\t\t\t} else if ( event.detail !== undefined ) {\n\t\n\t\t\t\t\t// Firefox\n\t\n\t\t\t\t\tdelta = - event.detail;\n\t\n\t\t\t\t}\n\t\n\t\t\t\tif ( delta > 0 ) {\n\t\n\t\t\t\t\tconstraint.dollyOut( getZoomScale() );\n\t\n\t\t\t\t} else if ( delta < 0 ) {\n\t\n\t\t\t\t\tconstraint.dollyIn( getZoomScale() );\n\t\n\t\t\t\t}\n\t\n\t\t\t\tscope.update();\n\t\t\t\tscope.dispatchEvent( startEvent );\n\t\t\t\tscope.dispatchEvent( endEvent );\n\t\n\t\t\t}\n\t\n\t\t\tfunction onKeyDown( event ) {\n\t\n\t\t\t\tif ( scope.enabled === false || scope.enableKeys === false || scope.enablePan === false ) return;\n\t\n\t\t\t\tswitch ( event.keyCode ) {\n\t\n\t\t\t\t\tcase scope.keys.UP:\n\t\t\t\t\t\tpan( 0, scope.keyPanSpeed );\n\t\t\t\t\t\tscope.update();\n\t\t\t\t\t\tbreak;\n\t\n\t\t\t\t\tcase scope.keys.BOTTOM:\n\t\t\t\t\t\tpan( 0, - scope.keyPanSpeed );\n\t\t\t\t\t\tscope.update();\n\t\t\t\t\t\tbreak;\n\t\n\t\t\t\t\tcase scope.keys.LEFT:\n\t\t\t\t\t\tpan( scope.keyPanSpeed, 0 );\n\t\t\t\t\t\tscope.update();\n\t\t\t\t\t\tbreak;\n\t\n\t\t\t\t\tcase scope.keys.RIGHT:\n\t\t\t\t\t\tpan( - scope.keyPanSpeed, 0 );\n\t\t\t\t\t\tscope.update();\n\t\t\t\t\t\tbreak;\n\t\n\t\t\t\t}\n\t\n\t\t\t}\n\t\n\t\t\tfunction touchstart( event ) {\n\t\n\t\t\t\tif ( scope.enabled === false ) return;\n\t\n\t\t\t\tswitch ( event.touches.length ) {\n\t\n\t\t\t\t\tcase 1:\t// one-fingered touch: rotate\n\t\n\t\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\t\n\t\t\t\t\t\tstate = STATE.TOUCH_ROTATE;\n\t\n\t\t\t\t\t\trotateStart.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\t\t\t\t\t\tbreak;\n\t\n\t\t\t\t\tcase 2:\t// two-fingered touch: dolly\n\t\n\t\t\t\t\t\tif ( scope.enableZoom === false ) return;\n\t\n\t\t\t\t\t\tstate = STATE.TOUCH_DOLLY;\n\t\n\t\t\t\t\t\tvar dx = event.touches[ 0 ].pageX - event.touches[ 1 ].pageX;\n\t\t\t\t\t\tvar dy = event.touches[ 0 ].pageY - event.touches[ 1 ].pageY;\n\t\t\t\t\t\tvar distance = Math.sqrt( dx * dx + dy * dy );\n\t\t\t\t\t\tdollyStart.set( 0, distance );\n\t\t\t\t\t\tbreak;\n\t\n\t\t\t\t\tcase 3: // three-fingered touch: pan\n\t\n\t\t\t\t\t\tif ( scope.enablePan === false ) return;\n\t\n\t\t\t\t\t\tstate = STATE.TOUCH_PAN;\n\t\n\t\t\t\t\t\tpanStart.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\t\t\t\t\t\tbreak;\n\t\n\t\t\t\t\tdefault:\n\t\n\t\t\t\t\t\tstate = STATE.NONE;\n\t\n\t\t\t\t}\n\t\n\t\t\t\tif ( state !== STATE.NONE ) scope.dispatchEvent( startEvent );\n\t\n\t\t\t}\n\t\n\t\t\tfunction touchmove( event ) {\n\t\n\t\t\t\tif ( scope.enabled === false ) return;\n\t\n\t\t\t\tevent.preventDefault();\n\t\t\t\tevent.stopPropagation();\n\t\n\t\t\t\tvar element = scope.domElement === document ? scope.domElement.body : scope.domElement;\n\t\n\t\t\t\tswitch ( event.touches.length ) {\n\t\n\t\t\t\t\tcase 1: // one-fingered touch: rotate\n\t\n\t\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\t\t\t\t\t\tif ( state !== STATE.TOUCH_ROTATE ) return;\n\t\n\t\t\t\t\t\trotateEnd.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\t\t\t\t\t\trotateDelta.subVectors( rotateEnd, rotateStart );\n\t\n\t\t\t\t\t\t// rotating across whole screen goes 360 degrees around\n\t\t\t\t\t\tconstraint.rotateLeft( 2 * Math.PI * rotateDelta.x / element.clientWidth * scope.rotateSpeed );\n\t\t\t\t\t\t// rotating up and down along whole screen attempts to go 360, but limited to 180\n\t\t\t\t\t\tconstraint.rotateUp( 2 * Math.PI * rotateDelta.y / element.clientHeight * scope.rotateSpeed );\n\t\n\t\t\t\t\t\trotateStart.copy( rotateEnd );\n\t\n\t\t\t\t\t\tscope.update();\n\t\t\t\t\t\tbreak;\n\t\n\t\t\t\t\tcase 2: // two-fingered touch: dolly\n\t\n\t\t\t\t\t\tif ( scope.enableZoom === false ) return;\n\t\t\t\t\t\tif ( state !== STATE.TOUCH_DOLLY ) return;\n\t\n\t\t\t\t\t\tvar dx = event.touches[ 0 ].pageX - event.touches[ 1 ].pageX;\n\t\t\t\t\t\tvar dy = event.touches[ 0 ].pageY - event.touches[ 1 ].pageY;\n\t\t\t\t\t\tvar distance = Math.sqrt( dx * dx + dy * dy );\n\t\n\t\t\t\t\t\tdollyEnd.set( 0, distance );\n\t\t\t\t\t\tdollyDelta.subVectors( dollyEnd, dollyStart );\n\t\n\t\t\t\t\t\tif ( dollyDelta.y > 0 ) {\n\t\n\t\t\t\t\t\t\tconstraint.dollyOut( getZoomScale() );\n\t\n\t\t\t\t\t\t} else if ( dollyDelta.y < 0 ) {\n\t\n\t\t\t\t\t\t\tconstraint.dollyIn( getZoomScale() );\n\t\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\tdollyStart.copy( dollyEnd );\n\t\n\t\t\t\t\t\tscope.update();\n\t\t\t\t\t\tbreak;\n\t\n\t\t\t\t\tcase 3: // three-fingered touch: pan\n\t\n\t\t\t\t\t\tif ( scope.enablePan === false ) return;\n\t\t\t\t\t\tif ( state !== STATE.TOUCH_PAN ) return;\n\t\n\t\t\t\t\t\tpanEnd.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\t\t\t\t\t\tpanDelta.subVectors( panEnd, panStart );\n\t\n\t\t\t\t\t\tpan( panDelta.x, panDelta.y );\n\t\n\t\t\t\t\t\tpanStart.copy( panEnd );\n\t\n\t\t\t\t\t\tscope.update();\n\t\t\t\t\t\tbreak;\n\t\n\t\t\t\t\tdefault:\n\t\n\t\t\t\t\t\tstate = STATE.NONE;\n\t\n\t\t\t\t}\n\t\n\t\t\t}\n\t\n\t\t\tfunction touchend( /* event */ ) {\n\t\n\t\t\t\tif ( scope.enabled === false ) return;\n\t\n\t\t\t\tscope.dispatchEvent( endEvent );\n\t\t\t\tstate = STATE.NONE;\n\t\n\t\t\t}\n\t\n\t\t\tfunction contextmenu( event ) {\n\t\n\t\t\t\tevent.preventDefault();\n\t\n\t\t\t}\n\t\n\t\t\tthis.dispose = function() {\n\t\n\t\t\t\tthis.domElement.removeEventListener( 'contextmenu', contextmenu, false );\n\t\t\t\tthis.domElement.removeEventListener( 'mousedown', onMouseDown, false );\n\t\t\t\tthis.domElement.removeEventListener( 'mousewheel', onMouseWheel, false );\n\t\t\t\tthis.domElement.removeEventListener( 'MozMousePixelScroll', onMouseWheel, false ); // firefox\n\t\n\t\t\t\tthis.domElement.removeEventListener( 'touchstart', touchstart, false );\n\t\t\t\tthis.domElement.removeEventListener( 'touchend', touchend, false );\n\t\t\t\tthis.domElement.removeEventListener( 'touchmove', touchmove, false );\n\t\n\t\t\t\tdocument.removeEventListener( 'mousemove', onMouseMove, false );\n\t\t\t\tdocument.removeEventListener( 'mouseup', onMouseUp, false );\n\t\n\t\t\t\twindow.removeEventListener( 'keydown', onKeyDown, false );\n\t\n\t\t\t}\n\t\n\t\t\tthis.domElement.addEventListener( 'contextmenu', contextmenu, false );\n\t\n\t\t\tthis.domElement.addEventListener( 'mousedown', onMouseDown, false );\n\t\t\tthis.domElement.addEventListener( 'mousewheel', onMouseWheel, false );\n\t\t\tthis.domElement.addEventListener( 'MozMousePixelScroll', onMouseWheel, false ); // firefox\n\t\n\t\t\tthis.domElement.addEventListener( 'touchstart', touchstart, false );\n\t\t\tthis.domElement.addEventListener( 'touchend', touchend, false );\n\t\t\tthis.domElement.addEventListener( 'touchmove', touchmove, false );\n\t\n\t\t\twindow.addEventListener( 'keydown', onKeyDown, false );\n\t\n\t\t\t// force an update at start\n\t\t\tthis.update();\n\t\n\t\t};\n\t\n\t\tOrbitControls.prototype = Object.create( THREE.EventDispatcher.prototype );\n\t\tOrbitControls.prototype.constructor = OrbitControls;\n\t\n\t\tObject.defineProperties( OrbitControls.prototype, {\n\t\n\t\t\tobject: {\n\t\n\t\t\t\tget: function () {\n\t\n\t\t\t\t\treturn this.constraint.object;\n\t\n\t\t\t\t}\n\t\n\t\t\t},\n\t\n\t\t\ttarget: {\n\t\n\t\t\t\tget: function () {\n\t\n\t\t\t\t\treturn this.constraint.target;\n\t\n\t\t\t\t},\n\t\n\t\t\t\tset: function ( value ) {\n\t\n\t\t\t\t\tconsole.warn( 'THREE.OrbitControls: target is now immutable. Use target.set() instead.' );\n\t\t\t\t\tthis.constraint.target.copy( value );\n\t\n\t\t\t\t}\n\t\n\t\t\t},\n\t\n\t\t\tminDistance : {\n\t\n\t\t\t\tget: function () {\n\t\n\t\t\t\t\treturn this.constraint.minDistance;\n\t\n\t\t\t\t},\n\t\n\t\t\t\tset: function ( value ) {\n\t\n\t\t\t\t\tthis.constraint.minDistance = value;\n\t\n\t\t\t\t}\n\t\n\t\t\t},\n\t\n\t\t\tmaxDistance : {\n\t\n\t\t\t\tget: function () {\n\t\n\t\t\t\t\treturn this.constraint.maxDistance;\n\t\n\t\t\t\t},\n\t\n\t\t\t\tset: function ( value ) {\n\t\n\t\t\t\t\tthis.constraint.maxDistance = value;\n\t\n\t\t\t\t}\n\t\n\t\t\t},\n\t\n\t\t\tminZoom : {\n\t\n\t\t\t\tget: function () {\n\t\n\t\t\t\t\treturn this.constraint.minZoom;\n\t\n\t\t\t\t},\n\t\n\t\t\t\tset: function ( value ) {\n\t\n\t\t\t\t\tthis.constraint.minZoom = value;\n\t\n\t\t\t\t}\n\t\n\t\t\t},\n\t\n\t\t\tmaxZoom : {\n\t\n\t\t\t\tget: function () {\n\t\n\t\t\t\t\treturn this.constraint.maxZoom;\n\t\n\t\t\t\t},\n\t\n\t\t\t\tset: function ( value ) {\n\t\n\t\t\t\t\tthis.constraint.maxZoom = value;\n\t\n\t\t\t\t}\n\t\n\t\t\t},\n\t\n\t\t\tminPolarAngle : {\n\t\n\t\t\t\tget: function () {\n\t\n\t\t\t\t\treturn this.constraint.minPolarAngle;\n\t\n\t\t\t\t},\n\t\n\t\t\t\tset: function ( value ) {\n\t\n\t\t\t\t\tthis.constraint.minPolarAngle = value;\n\t\n\t\t\t\t}\n\t\n\t\t\t},\n\t\n\t\t\tmaxPolarAngle : {\n\t\n\t\t\t\tget: function () {\n\t\n\t\t\t\t\treturn this.constraint.maxPolarAngle;\n\t\n\t\t\t\t},\n\t\n\t\t\t\tset: function ( value ) {\n\t\n\t\t\t\t\tthis.constraint.maxPolarAngle = value;\n\t\n\t\t\t\t}\n\t\n\t\t\t},\n\t\n\t\t\tminAzimuthAngle : {\n\t\n\t\t\t\tget: function () {\n\t\n\t\t\t\t\treturn this.constraint.minAzimuthAngle;\n\t\n\t\t\t\t},\n\t\n\t\t\t\tset: function ( value ) {\n\t\n\t\t\t\t\tthis.constraint.minAzimuthAngle = value;\n\t\n\t\t\t\t}\n\t\n\t\t\t},\n\t\n\t\t\tmaxAzimuthAngle : {\n\t\n\t\t\t\tget: function () {\n\t\n\t\t\t\t\treturn this.constraint.maxAzimuthAngle;\n\t\n\t\t\t\t},\n\t\n\t\t\t\tset: function ( value ) {\n\t\n\t\t\t\t\tthis.constraint.maxAzimuthAngle = value;\n\t\n\t\t\t\t}\n\t\n\t\t\t},\n\t\n\t\t\tenableDamping : {\n\t\n\t\t\t\tget: function () {\n\t\n\t\t\t\t\treturn this.constraint.enableDamping;\n\t\n\t\t\t\t},\n\t\n\t\t\t\tset: function ( value ) {\n\t\n\t\t\t\t\tthis.constraint.enableDamping = value;\n\t\n\t\t\t\t}\n\t\n\t\t\t},\n\t\n\t\t\tdampingFactor : {\n\t\n\t\t\t\tget: function () {\n\t\n\t\t\t\t\treturn this.constraint.dampingFactor;\n\t\n\t\t\t\t},\n\t\n\t\t\t\tset: function ( value ) {\n\t\n\t\t\t\t\tthis.constraint.dampingFactor = value;\n\t\n\t\t\t\t}\n\t\n\t\t\t},\n\t\n\t\t\t// backward compatibility\n\t\n\t\t\tnoZoom: {\n\t\n\t\t\t\tget: function () {\n\t\n\t\t\t\t\tconsole.warn( 'THREE.OrbitControls: .noZoom has been deprecated. Use .enableZoom instead.' );\n\t\t\t\t\treturn ! this.enableZoom;\n\t\n\t\t\t\t},\n\t\n\t\t\t\tset: function ( value ) {\n\t\n\t\t\t\t\tconsole.warn( 'THREE.OrbitControls: .noZoom has been deprecated. Use .enableZoom instead.' );\n\t\t\t\t\tthis.enableZoom = ! value;\n\t\n\t\t\t\t}\n\t\n\t\t\t},\n\t\n\t\t\tnoRotate: {\n\t\n\t\t\t\tget: function () {\n\t\n\t\t\t\t\tconsole.warn( 'THREE.OrbitControls: .noRotate has been deprecated. Use .enableRotate instead.' );\n\t\t\t\t\treturn ! this.enableRotate;\n\t\n\t\t\t\t},\n\t\n\t\t\t\tset: function ( value ) {\n\t\n\t\t\t\t\tconsole.warn( 'THREE.OrbitControls: .noRotate has been deprecated. Use .enableRotate instead.' );\n\t\t\t\t\tthis.enableRotate = ! value;\n\t\n\t\t\t\t}\n\t\n\t\t\t},\n\t\n\t\t\tnoPan: {\n\t\n\t\t\t\tget: function () {\n\t\n\t\t\t\t\tconsole.warn( 'THREE.OrbitControls: .noPan has been deprecated. Use .enablePan instead.' );\n\t\t\t\t\treturn ! this.enablePan;\n\t\n\t\t\t\t},\n\t\n\t\t\t\tset: function ( value ) {\n\t\n\t\t\t\t\tconsole.warn( 'THREE.OrbitControls: .noPan has been deprecated. Use .enablePan instead.' );\n\t\t\t\t\tthis.enablePan = ! value;\n\t\n\t\t\t\t}\n\t\n\t\t\t},\n\t\n\t\t\tnoKeys: {\n\t\n\t\t\t\tget: function () {\n\t\n\t\t\t\t\tconsole.warn( 'THREE.OrbitControls: .noKeys has been deprecated. Use .enableKeys instead.' );\n\t\t\t\t\treturn ! this.enableKeys;\n\t\n\t\t\t\t},\n\t\n\t\t\t\tset: function ( value ) {\n\t\n\t\t\t\t\tconsole.warn( 'THREE.OrbitControls: .noKeys has been deprecated. Use .enableKeys instead.' );\n\t\t\t\t\tthis.enableKeys = ! value;\n\t\n\t\t\t\t}\n\t\n\t\t\t},\n\t\n\t\t\tstaticMoving : {\n\t\n\t\t\t\tget: function () {\n\t\n\t\t\t\t\tconsole.warn( 'THREE.OrbitControls: .staticMoving has been deprecated. Use .enableDamping instead.' );\n\t\t\t\t\treturn ! this.constraint.enableDamping;\n\t\n\t\t\t\t},\n\t\n\t\t\t\tset: function ( value ) {\n\t\n\t\t\t\t\tconsole.warn( 'THREE.OrbitControls: .staticMoving has been deprecated. Use .enableDamping instead.' );\n\t\t\t\t\tthis.constraint.enableDamping = ! value;\n\t\n\t\t\t\t}\n\t\n\t\t\t},\n\t\n\t\t\tdynamicDampingFactor : {\n\t\n\t\t\t\tget: function () {\n\t\n\t\t\t\t\tconsole.warn( 'THREE.OrbitControls: .dynamicDampingFactor has been renamed. Use .dampingFactor instead.' );\n\t\t\t\t\treturn this.constraint.dampingFactor;\n\t\n\t\t\t\t},\n\t\n\t\t\t\tset: function ( value ) {\n\t\n\t\t\t\t\tconsole.warn( 'THREE.OrbitControls: .dynamicDampingFactor has been renamed. Use .dampingFactor instead.' );\n\t\t\t\t\tthis.constraint.dampingFactor = value;\n\t\n\t\t\t\t}\n\t\n\t\t\t}\n\t\n\t\t} );\n\t\n\t\treturn OrbitControls;\n\t}\n\n\n/***/ }),\n/* 39 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;var self = self || {};// File:src/Three.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tvar THREE = { REVISION: '72' };\r\n\t\r\n\t//\r\n\t\r\n\tif ( true ) {\r\n\t\r\n\t\t\t!(__WEBPACK_AMD_DEFINE_FACTORY__ = (THREE), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n\t\r\n\t} else if ( 'undefined' !== typeof exports && 'undefined' !== typeof module ) {\r\n\t\r\n\t\t\tmodule.exports = THREE;\r\n\t\r\n\t}\r\n\t\r\n\t\r\n\t// polyfills\r\n\t\r\n\tif ( self.requestAnimationFrame === undefined || self.cancelAnimationFrame === undefined ) {\r\n\t\r\n\t\t// Missing in Android stock browser.\r\n\t\r\n\t\t( function () {\r\n\t\r\n\t\t\tvar lastTime = 0;\r\n\t\t\tvar vendors = [ 'ms', 'moz', 'webkit', 'o' ];\r\n\t\r\n\t\t\tfor ( var x = 0; x < vendors.length && ! self.requestAnimationFrame; ++ x ) {\r\n\t\r\n\t\t\t\tself.requestAnimationFrame = self[ vendors[ x ] + 'RequestAnimationFrame' ];\r\n\t\t\t\tself.cancelAnimationFrame = self[ vendors[ x ] + 'CancelAnimationFrame' ] || self[ vendors[ x ] + 'CancelRequestAnimationFrame' ];\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( self.requestAnimationFrame === undefined && self.setTimeout !== undefined ) {\r\n\t\r\n\t\t\t\tself.requestAnimationFrame = function ( callback ) {\r\n\t\r\n\t\t\t\t\tvar currTime = Date.now(), timeToCall = Math.max( 0, 16 - ( currTime - lastTime ) );\r\n\t\t\t\t\tvar id = self.setTimeout( function () {\r\n\t\r\n\t\t\t\t\t\tcallback( currTime + timeToCall );\r\n\t\r\n\t\t\t\t\t}, timeToCall );\r\n\t\t\t\t\tlastTime = currTime + timeToCall;\r\n\t\t\t\t\treturn id;\r\n\t\r\n\t\t\t\t};\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( self.cancelAnimationFrame === undefined && self.clearTimeout !== undefined ) {\r\n\t\r\n\t\t\t\tself.cancelAnimationFrame = function ( id ) {\r\n\t\r\n\t\t\t\t\tself.clearTimeout( id );\r\n\t\r\n\t\t\t\t};\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}() );\r\n\t\r\n\t}\r\n\t\r\n\tif ( Math.sign === undefined ) {\r\n\t\r\n\t\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/sign\r\n\t\r\n\t\tMath.sign = function ( x ) {\r\n\t\r\n\t\t\treturn ( x < 0 ) ? - 1 : ( x > 0 ) ? 1 : + x;\r\n\t\r\n\t\t};\r\n\t\r\n\t}\r\n\t\r\n\tif ( Function.prototype.name === undefined && Object.defineProperty !== undefined ) {\r\n\t\r\n\t\t// Missing in IE9-11.\r\n\t\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/name\r\n\t\r\n\t\tObject.defineProperty( Function.prototype, 'name', {\r\n\t\r\n\t\t\tget: function () {\r\n\t\r\n\t\t\t\treturn this.toString().match( /^\\s*function\\s*(\\S*)\\s*\\(/ )[ 1 ];\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t} );\r\n\t\r\n\t}\r\n\t\r\n\t// https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent.button\r\n\t\r\n\tTHREE.MOUSE = { LEFT: 0, MIDDLE: 1, RIGHT: 2 };\r\n\t\r\n\t// GL STATE CONSTANTS\r\n\t\r\n\tTHREE.CullFaceNone = 0;\r\n\tTHREE.CullFaceBack = 1;\r\n\tTHREE.CullFaceFront = 2;\r\n\tTHREE.CullFaceFrontBack = 3;\r\n\t\r\n\tTHREE.FrontFaceDirectionCW = 0;\r\n\tTHREE.FrontFaceDirectionCCW = 1;\r\n\t\r\n\t// SHADOWING TYPES\r\n\t\r\n\tTHREE.BasicShadowMap = 0;\r\n\tTHREE.PCFShadowMap = 1;\r\n\tTHREE.PCFSoftShadowMap = 2;\r\n\t\r\n\t// MATERIAL CONSTANTS\r\n\t\r\n\t// side\r\n\t\r\n\tTHREE.FrontSide = 0;\r\n\tTHREE.BackSide = 1;\r\n\tTHREE.DoubleSide = 2;\r\n\t\r\n\t// shading\r\n\t\r\n\tTHREE.FlatShading = 1;\r\n\tTHREE.SmoothShading = 2;\r\n\t\r\n\t// colors\r\n\t\r\n\tTHREE.NoColors = 0;\r\n\tTHREE.FaceColors = 1;\r\n\tTHREE.VertexColors = 2;\r\n\t\r\n\t// blending modes\r\n\t\r\n\tTHREE.NoBlending = 0;\r\n\tTHREE.NormalBlending = 1;\r\n\tTHREE.AdditiveBlending = 2;\r\n\tTHREE.SubtractiveBlending = 3;\r\n\tTHREE.MultiplyBlending = 4;\r\n\tTHREE.CustomBlending = 5;\r\n\t\r\n\t// custom blending equations\r\n\t// (numbers start from 100 not to clash with other\r\n\t// mappings to OpenGL constants defined in Texture.js)\r\n\t\r\n\tTHREE.AddEquation = 100;\r\n\tTHREE.SubtractEquation = 101;\r\n\tTHREE.ReverseSubtractEquation = 102;\r\n\tTHREE.MinEquation = 103;\r\n\tTHREE.MaxEquation = 104;\r\n\t\r\n\t// custom blending destination factors\r\n\t\r\n\tTHREE.ZeroFactor = 200;\r\n\tTHREE.OneFactor = 201;\r\n\tTHREE.SrcColorFactor = 202;\r\n\tTHREE.OneMinusSrcColorFactor = 203;\r\n\tTHREE.SrcAlphaFactor = 204;\r\n\tTHREE.OneMinusSrcAlphaFactor = 205;\r\n\tTHREE.DstAlphaFactor = 206;\r\n\tTHREE.OneMinusDstAlphaFactor = 207;\r\n\t\r\n\t// custom blending source factors\r\n\t\r\n\t//THREE.ZeroFactor = 200;\r\n\t//THREE.OneFactor = 201;\r\n\t//THREE.SrcAlphaFactor = 204;\r\n\t//THREE.OneMinusSrcAlphaFactor = 205;\r\n\t//THREE.DstAlphaFactor = 206;\r\n\t//THREE.OneMinusDstAlphaFactor = 207;\r\n\tTHREE.DstColorFactor = 208;\r\n\tTHREE.OneMinusDstColorFactor = 209;\r\n\tTHREE.SrcAlphaSaturateFactor = 210;\r\n\t\r\n\t// depth modes\r\n\t\r\n\tTHREE.NeverDepth = 0;\r\n\tTHREE.AlwaysDepth = 1;\r\n\tTHREE.LessDepth = 2;\r\n\tTHREE.LessEqualDepth = 3;\r\n\tTHREE.EqualDepth = 4;\r\n\tTHREE.GreaterEqualDepth = 5;\r\n\tTHREE.GreaterDepth = 6;\r\n\tTHREE.NotEqualDepth = 7;\r\n\t\r\n\t\r\n\t// TEXTURE CONSTANTS\r\n\t\r\n\tTHREE.MultiplyOperation = 0;\r\n\tTHREE.MixOperation = 1;\r\n\tTHREE.AddOperation = 2;\r\n\t\r\n\t// Mapping modes\r\n\t\r\n\tTHREE.UVMapping = 300;\r\n\t\r\n\tTHREE.CubeReflectionMapping = 301;\r\n\tTHREE.CubeRefractionMapping = 302;\r\n\t\r\n\tTHREE.EquirectangularReflectionMapping = 303;\r\n\tTHREE.EquirectangularRefractionMapping = 304;\r\n\t\r\n\tTHREE.SphericalReflectionMapping = 305;\r\n\t\r\n\t// Wrapping modes\r\n\t\r\n\tTHREE.RepeatWrapping = 1000;\r\n\tTHREE.ClampToEdgeWrapping = 1001;\r\n\tTHREE.MirroredRepeatWrapping = 1002;\r\n\t\r\n\t// Filters\r\n\t\r\n\tTHREE.NearestFilter = 1003;\r\n\tTHREE.NearestMipMapNearestFilter = 1004;\r\n\tTHREE.NearestMipMapLinearFilter = 1005;\r\n\tTHREE.LinearFilter = 1006;\r\n\tTHREE.LinearMipMapNearestFilter = 1007;\r\n\tTHREE.LinearMipMapLinearFilter = 1008;\r\n\t\r\n\t// Data types\r\n\t\r\n\tTHREE.UnsignedByteType = 1009;\r\n\tTHREE.ByteType = 1010;\r\n\tTHREE.ShortType = 1011;\r\n\tTHREE.UnsignedShortType = 1012;\r\n\tTHREE.IntType = 1013;\r\n\tTHREE.UnsignedIntType = 1014;\r\n\tTHREE.FloatType = 1015;\r\n\tTHREE.HalfFloatType = 1025;\r\n\t\r\n\t// Pixel types\r\n\t\r\n\t//THREE.UnsignedByteType = 1009;\r\n\tTHREE.UnsignedShort4444Type = 1016;\r\n\tTHREE.UnsignedShort5551Type = 1017;\r\n\tTHREE.UnsignedShort565Type = 1018;\r\n\t\r\n\t// Pixel formats\r\n\t\r\n\tTHREE.AlphaFormat = 1019;\r\n\tTHREE.RGBFormat = 1020;\r\n\tTHREE.RGBAFormat = 1021;\r\n\tTHREE.LuminanceFormat = 1022;\r\n\tTHREE.LuminanceAlphaFormat = 1023;\r\n\t// THREE.RGBEFormat handled as THREE.RGBAFormat in shaders\r\n\tTHREE.RGBEFormat = THREE.RGBAFormat; //1024;\r\n\t\r\n\t// DDS / ST3C Compressed texture formats\r\n\t\r\n\tTHREE.RGB_S3TC_DXT1_Format = 2001;\r\n\tTHREE.RGBA_S3TC_DXT1_Format = 2002;\r\n\tTHREE.RGBA_S3TC_DXT3_Format = 2003;\r\n\tTHREE.RGBA_S3TC_DXT5_Format = 2004;\r\n\t\r\n\t\r\n\t// PVRTC compressed texture formats\r\n\t\r\n\tTHREE.RGB_PVRTC_4BPPV1_Format = 2100;\r\n\tTHREE.RGB_PVRTC_2BPPV1_Format = 2101;\r\n\tTHREE.RGBA_PVRTC_4BPPV1_Format = 2102;\r\n\tTHREE.RGBA_PVRTC_2BPPV1_Format = 2103;\r\n\t\r\n\t\r\n\t// DEPRECATED\r\n\t\r\n\tTHREE.Projector = function () {\r\n\t\r\n\t\tconsole.error( 'THREE.Projector has been moved to /examples/js/renderers/Projector.js.' );\r\n\t\r\n\t\tthis.projectVector = function ( vector, camera ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.Projector: .projectVector() is now vector.project().' );\r\n\t\t\tvector.project( camera );\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.unprojectVector = function ( vector, camera ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.Projector: .unprojectVector() is now vector.unproject().' );\r\n\t\t\tvector.unproject( camera );\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.pickingRay = function ( vector, camera ) {\r\n\t\r\n\t\t\tconsole.error( 'THREE.Projector: .pickingRay() is now raycaster.setFromCamera().' );\r\n\t\r\n\t\t};\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.CanvasRenderer = function () {\r\n\t\r\n\t\tconsole.error( 'THREE.CanvasRenderer has been moved to /examples/js/renderers/CanvasRenderer.js' );\r\n\t\r\n\t\tthis.domElement = document.createElement( 'canvas' );\r\n\t\tthis.clear = function () {};\r\n\t\tthis.render = function () {};\r\n\t\tthis.setClearColor = function () {};\r\n\t\tthis.setSize = function () {};\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/math/Color.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.Color = function ( color ) {\r\n\t\r\n\t\tif ( arguments.length === 3 ) {\r\n\t\r\n\t\t\treturn this.setRGB( arguments[ 0 ], arguments[ 1 ], arguments[ 2 ] );\r\n\t\r\n\t\t}\r\n\t\r\n\t\treturn this.set( color );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Color.prototype = {\r\n\t\r\n\t\tconstructor: THREE.Color,\r\n\t\r\n\t\tr: 1, g: 1, b: 1,\r\n\t\r\n\t\tset: function ( value ) {\r\n\t\r\n\t\t\tif ( value instanceof THREE.Color ) {\r\n\t\r\n\t\t\t\tthis.copy( value );\r\n\t\r\n\t\t\t} else if ( typeof value === 'number' ) {\r\n\t\r\n\t\t\t\tthis.setHex( value );\r\n\t\r\n\t\t\t} else if ( typeof value === 'string' ) {\r\n\t\r\n\t\t\t\tthis.setStyle( value );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetHex: function ( hex ) {\r\n\t\r\n\t\t\thex = Math.floor( hex );\r\n\t\r\n\t\t\tthis.r = ( hex >> 16 & 255 ) / 255;\r\n\t\t\tthis.g = ( hex >> 8 & 255 ) / 255;\r\n\t\t\tthis.b = ( hex & 255 ) / 255;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetRGB: function ( r, g, b ) {\r\n\t\r\n\t\t\tthis.r = r;\r\n\t\t\tthis.g = g;\r\n\t\t\tthis.b = b;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetHSL: function () {\r\n\t\r\n\t\t\tfunction hue2rgb ( p, q, t ) {\r\n\t\r\n\t\t\t\tif ( t < 0 ) t += 1;\r\n\t\t\t\tif ( t > 1 ) t -= 1;\r\n\t\t\t\tif ( t < 1 / 6 ) return p + ( q - p ) * 6 * t;\r\n\t\t\t\tif ( t < 1 / 2 ) return q;\r\n\t\t\t\tif ( t < 2 / 3 ) return p + ( q - p ) * 6 * ( 2 / 3 - t );\r\n\t\t\t\treturn p;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn function ( h, s, l ) {\r\n\t\r\n\t\t\t\t// h,s,l ranges are in 0.0 - 1.0\r\n\t\t\t\th = THREE.Math.euclideanModulo( h, 1 );\r\n\t\t\t\ts = THREE.Math.clamp( s, 0, 1 );\r\n\t\t\t\tl = THREE.Math.clamp( l, 0, 1 );\r\n\t\r\n\t\t\t\tif ( s === 0 ) {\r\n\t\r\n\t\t\t\t\tthis.r = this.g = this.b = l;\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tvar p = l <= 0.5 ? l * ( 1 + s ) : l + s - ( l * s );\r\n\t\t\t\t\tvar q = ( 2 * l ) - p;\r\n\t\r\n\t\t\t\t\tthis.r = hue2rgb( q, p, h + 1 / 3 );\r\n\t\t\t\t\tthis.g = hue2rgb( q, p, h );\r\n\t\t\t\t\tthis.b = hue2rgb( q, p, h - 1 / 3 );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tsetStyle: function ( style ) {\r\n\t\r\n\t\t\tvar parseAlpha = function ( strAlpha ) {\r\n\t\r\n\t\t\t\tvar alpha = parseFloat( strAlpha );\r\n\t\r\n\t\t\t\tif ( alpha < 1 ) {\r\n\t\r\n\t\t\t\t\tconsole.warn( 'THREE.Color: Alpha component of color ' + style + ' will be ignored.' );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn alpha;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\r\n\t\t\tvar m;\r\n\t\r\n\t\t\tif ( m = /^((?:rgb|hsl)a?)\\(\\s*([^\\)]*)\\)/.exec( style ) ) {\r\n\t\r\n\t\t\t\t// rgb / hsl\r\n\t\r\n\t\t\t\tvar color;\r\n\t\t\t\tvar name = m[ 1 ];\r\n\t\t\t\tvar components = m[ 2 ];\r\n\t\r\n\t\t\t\tswitch ( name ) {\r\n\t\r\n\t\t\t\t\tcase 'rgb':\r\n\t\r\n\t\t\t\t\t\tif ( color = /^(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*$/.exec( components ) ) {\r\n\t\r\n\t\t\t\t\t\t\t// rgb(255,0,0)\r\n\t\t\t\t\t\t\tthis.r = Math.min( 255, parseInt( color[ 1 ], 10 ) ) / 255;\r\n\t\t\t\t\t\t\tthis.g = Math.min( 255, parseInt( color[ 2 ], 10 ) ) / 255;\r\n\t\t\t\t\t\t\tthis.b = Math.min( 255, parseInt( color[ 3 ], 10 ) ) / 255;\r\n\t\r\n\t\t\t\t\t\t\treturn this;\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tif ( color = /^(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*$/.exec( components ) ) {\r\n\t\r\n\t\t\t\t\t\t\t// rgb(100%,0%,0%)\r\n\t\t\t\t\t\t\tthis.r = Math.min( 100, parseInt( color[ 1 ], 10 ) ) / 100;\r\n\t\t\t\t\t\t\tthis.g = Math.min( 100, parseInt( color[ 2 ], 10 ) ) / 100;\r\n\t\t\t\t\t\t\tthis.b = Math.min( 100, parseInt( color[ 3 ], 10 ) ) / 100;\r\n\t\r\n\t\t\t\t\t\t\treturn this;\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'rgba':\r\n\t\r\n\t\t\t\t\t\tif ( color = /^(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*([0-9]*\\.?[0-9]+)\\s*$/.exec( components ) ) {\r\n\t\r\n\t\t\t\t\t\t\t// rgba(255,0,0,0.5)\r\n\t\t\t\t\t\t\tthis.r = Math.min( 255, parseInt( color[ 1 ], 10 ) ) / 255;\r\n\t\t\t\t\t\t\tthis.g = Math.min( 255, parseInt( color[ 2 ], 10 ) ) / 255;\r\n\t\t\t\t\t\t\tthis.b = Math.min( 255, parseInt( color[ 3 ], 10 ) ) / 255;\r\n\t\t\t\t\t\t\tparseAlpha( color[ 4 ] );\r\n\t\r\n\t\t\t\t\t\t\treturn this;\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tif ( color = /^(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*([0-9]*\\.?[0-9]+)\\s*$/.exec( components ) ) {\r\n\t\r\n\t\t\t\t\t\t\t// rgba(100%,0%,0%,0.5)\r\n\t\t\t\t\t\t\tthis.r = Math.min( 100, parseInt( color[ 1 ], 10 ) ) / 100;\r\n\t\t\t\t\t\t\tthis.g = Math.min( 100, parseInt( color[ 2 ], 10 ) ) / 100;\r\n\t\t\t\t\t\t\tthis.b = Math.min( 100, parseInt( color[ 3 ], 10 ) ) / 100;\r\n\t\t\t\t\t\t\tparseAlpha( color[ 4 ] );\r\n\t\r\n\t\t\t\t\t\t\treturn this;\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'hsl':\r\n\t\r\n\t\t\t\t\t\tif ( color = /^([0-9]*\\.?[0-9]+)\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*$/.exec( components ) ) {\r\n\t\r\n\t\t\t\t\t\t\t// hsl(120,50%,50%)\r\n\t\t\t\t\t\t\tvar h = parseFloat( color[ 1 ] );\r\n\t\t\t\t\t\t\tvar s = parseInt( color[ 2 ], 10 ) / 100;\r\n\t\t\t\t\t\t\tvar l = parseInt( color[ 3 ], 10 ) / 100;\r\n\t\r\n\t\t\t\t\t\t\treturn this.setHSL( h, s, l );\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'hsla':\r\n\t\r\n\t\t\t\t\t\tif ( color = /^([0-9]*\\.?[0-9]+)\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*([0-9]*\\.?[0-9]+)\\s*$/.exec( components ) ) {\r\n\t\r\n\t\t\t\t\t\t\t// hsla(120,50%,50%,0.5)\r\n\t\t\t\t\t\t\tvar h = parseFloat( color[ 1 ] );\r\n\t\t\t\t\t\t\tvar s = parseInt( color[ 2 ], 10 ) / 100;\r\n\t\t\t\t\t\t\tvar l = parseInt( color[ 3 ], 10 ) / 100;\r\n\t\t\t\t\t\t\tparseAlpha( color[ 4 ] );\r\n\t\r\n\t\t\t\t\t\t\treturn this.setHSL( h, s, l );\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t} else if ( m = /^\\#([A-Fa-f0-9]+)$/.exec( style ) ) {\r\n\t\r\n\t\t\t\t// hex color\r\n\t\r\n\t\t\t\tvar hex = m[ 1 ];\r\n\t\t\t\tvar size = hex.length;\r\n\t\r\n\t\t\t\tif ( size === 3 ) {\r\n\t\r\n\t\t\t\t\t// #ff0\r\n\t\t\t\t\tthis.r = parseInt( hex.charAt( 0 ) + hex.charAt( 0 ), 16 ) / 255;\r\n\t\t\t\t\tthis.g = parseInt( hex.charAt( 1 ) + hex.charAt( 1 ), 16 ) / 255;\r\n\t\t\t\t\tthis.b = parseInt( hex.charAt( 2 ) + hex.charAt( 2 ), 16 ) / 255;\r\n\t\r\n\t\t\t\t\treturn this;\r\n\t\r\n\t\t\t\t} else if ( size === 6 ) {\r\n\t\r\n\t\t\t\t\t// #ff0000\r\n\t\t\t\t\tthis.r = parseInt( hex.charAt( 0 ) + hex.charAt( 1 ), 16 ) / 255;\r\n\t\t\t\t\tthis.g = parseInt( hex.charAt( 2 ) + hex.charAt( 3 ), 16 ) / 255;\r\n\t\t\t\t\tthis.b = parseInt( hex.charAt( 4 ) + hex.charAt( 5 ), 16 ) / 255;\r\n\t\r\n\t\t\t\t\treturn this;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( style && style.length > 0 ) {\r\n\t\r\n\t\t\t\t// color keywords\r\n\t\t\t\tvar hex = THREE.ColorKeywords[ style ];\r\n\t\r\n\t\t\t\tif ( hex !== undefined ) {\r\n\t\r\n\t\t\t\t\t// red\r\n\t\t\t\t\tthis.setHex( hex );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t// unknown color\r\n\t\t\t\t\tconsole.warn( 'THREE.Color: Unknown color ' + style );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclone: function () {\r\n\t\r\n\t\t\treturn new this.constructor( this.r, this.g, this.b );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopy: function ( color ) {\r\n\t\r\n\t\t\tthis.r = color.r;\r\n\t\t\tthis.g = color.g;\r\n\t\t\tthis.b = color.b;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopyGammaToLinear: function ( color, gammaFactor ) {\r\n\t\r\n\t\t\tif ( gammaFactor === undefined ) gammaFactor = 2.0;\r\n\t\r\n\t\t\tthis.r = Math.pow( color.r, gammaFactor );\r\n\t\t\tthis.g = Math.pow( color.g, gammaFactor );\r\n\t\t\tthis.b = Math.pow( color.b, gammaFactor );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopyLinearToGamma: function ( color, gammaFactor ) {\r\n\t\r\n\t\t\tif ( gammaFactor === undefined ) gammaFactor = 2.0;\r\n\t\r\n\t\t\tvar safeInverse = ( gammaFactor > 0 ) ? ( 1.0 / gammaFactor ) : 1.0;\r\n\t\r\n\t\t\tthis.r = Math.pow( color.r, safeInverse );\r\n\t\t\tthis.g = Math.pow( color.g, safeInverse );\r\n\t\t\tthis.b = Math.pow( color.b, safeInverse );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tconvertGammaToLinear: function () {\r\n\t\r\n\t\t\tvar r = this.r, g = this.g, b = this.b;\r\n\t\r\n\t\t\tthis.r = r * r;\r\n\t\t\tthis.g = g * g;\r\n\t\t\tthis.b = b * b;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tconvertLinearToGamma: function () {\r\n\t\r\n\t\t\tthis.r = Math.sqrt( this.r );\r\n\t\t\tthis.g = Math.sqrt( this.g );\r\n\t\t\tthis.b = Math.sqrt( this.b );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetHex: function () {\r\n\t\r\n\t\t\treturn ( this.r * 255 ) << 16 ^ ( this.g * 255 ) << 8 ^ ( this.b * 255 ) << 0;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetHexString: function () {\r\n\t\r\n\t\t\treturn ( '000000' + this.getHex().toString( 16 ) ).slice( - 6 );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetHSL: function ( optionalTarget ) {\r\n\t\r\n\t\t\t// h,s,l ranges are in 0.0 - 1.0\r\n\t\r\n\t\t\tvar hsl = optionalTarget || { h: 0, s: 0, l: 0 };\r\n\t\r\n\t\t\tvar r = this.r, g = this.g, b = this.b;\r\n\t\r\n\t\t\tvar max = Math.max( r, g, b );\r\n\t\t\tvar min = Math.min( r, g, b );\r\n\t\r\n\t\t\tvar hue, saturation;\r\n\t\t\tvar lightness = ( min + max ) / 2.0;\r\n\t\r\n\t\t\tif ( min === max ) {\r\n\t\r\n\t\t\t\thue = 0;\r\n\t\t\t\tsaturation = 0;\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tvar delta = max - min;\r\n\t\r\n\t\t\t\tsaturation = lightness <= 0.5 ? delta / ( max + min ) : delta / ( 2 - max - min );\r\n\t\r\n\t\t\t\tswitch ( max ) {\r\n\t\r\n\t\t\t\t\tcase r: hue = ( g - b ) / delta + ( g < b ? 6 : 0 ); break;\r\n\t\t\t\t\tcase g: hue = ( b - r ) / delta + 2; break;\r\n\t\t\t\t\tcase b: hue = ( r - g ) / delta + 4; break;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\thue /= 6;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\thsl.h = hue;\r\n\t\t\thsl.s = saturation;\r\n\t\t\thsl.l = lightness;\r\n\t\r\n\t\t\treturn hsl;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetStyle: function () {\r\n\t\r\n\t\t\treturn 'rgb(' + ( ( this.r * 255 ) | 0 ) + ',' + ( ( this.g * 255 ) | 0 ) + ',' + ( ( this.b * 255 ) | 0 ) + ')';\r\n\t\r\n\t\t},\r\n\t\r\n\t\toffsetHSL: function ( h, s, l ) {\r\n\t\r\n\t\t\tvar hsl = this.getHSL();\r\n\t\r\n\t\t\thsl.h += h; hsl.s += s; hsl.l += l;\r\n\t\r\n\t\t\tthis.setHSL( hsl.h, hsl.s, hsl.l );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tadd: function ( color ) {\r\n\t\r\n\t\t\tthis.r += color.r;\r\n\t\t\tthis.g += color.g;\r\n\t\t\tthis.b += color.b;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\taddColors: function ( color1, color2 ) {\r\n\t\r\n\t\t\tthis.r = color1.r + color2.r;\r\n\t\t\tthis.g = color1.g + color2.g;\r\n\t\t\tthis.b = color1.b + color2.b;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\taddScalar: function ( s ) {\r\n\t\r\n\t\t\tthis.r += s;\r\n\t\t\tthis.g += s;\r\n\t\t\tthis.b += s;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmultiply: function ( color ) {\r\n\t\r\n\t\t\tthis.r *= color.r;\r\n\t\t\tthis.g *= color.g;\r\n\t\t\tthis.b *= color.b;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmultiplyScalar: function ( s ) {\r\n\t\r\n\t\t\tthis.r *= s;\r\n\t\t\tthis.g *= s;\r\n\t\t\tthis.b *= s;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tlerp: function ( color, alpha ) {\r\n\t\r\n\t\t\tthis.r += ( color.r - this.r ) * alpha;\r\n\t\t\tthis.g += ( color.g - this.g ) * alpha;\r\n\t\t\tthis.b += ( color.b - this.b ) * alpha;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tequals: function ( c ) {\r\n\t\r\n\t\t\treturn ( c.r === this.r ) && ( c.g === this.g ) && ( c.b === this.b );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tfromArray: function ( array ) {\r\n\t\r\n\t\t\tthis.r = array[ 0 ];\r\n\t\t\tthis.g = array[ 1 ];\r\n\t\t\tthis.b = array[ 2 ];\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\ttoArray: function ( array, offset ) {\r\n\t\r\n\t\t\tif ( array === undefined ) array = [];\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\t\r\n\t\t\tarray[ offset ] = this.r;\r\n\t\t\tarray[ offset + 1 ] = this.g;\r\n\t\t\tarray[ offset + 2 ] = this.b;\r\n\t\r\n\t\t\treturn array;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.ColorKeywords = { 'aliceblue': 0xF0F8FF, 'antiquewhite': 0xFAEBD7, 'aqua': 0x00FFFF, 'aquamarine': 0x7FFFD4, 'azure': 0xF0FFFF,\r\n\t'beige': 0xF5F5DC, 'bisque': 0xFFE4C4, 'black': 0x000000, 'blanchedalmond': 0xFFEBCD, 'blue': 0x0000FF, 'blueviolet': 0x8A2BE2,\r\n\t'brown': 0xA52A2A, 'burlywood': 0xDEB887, 'cadetblue': 0x5F9EA0, 'chartreuse': 0x7FFF00, 'chocolate': 0xD2691E, 'coral': 0xFF7F50,\r\n\t'cornflowerblue': 0x6495ED, 'cornsilk': 0xFFF8DC, 'crimson': 0xDC143C, 'cyan': 0x00FFFF, 'darkblue': 0x00008B, 'darkcyan': 0x008B8B,\r\n\t'darkgoldenrod': 0xB8860B, 'darkgray': 0xA9A9A9, 'darkgreen': 0x006400, 'darkgrey': 0xA9A9A9, 'darkkhaki': 0xBDB76B, 'darkmagenta': 0x8B008B,\r\n\t'darkolivegreen': 0x556B2F, 'darkorange': 0xFF8C00, 'darkorchid': 0x9932CC, 'darkred': 0x8B0000, 'darksalmon': 0xE9967A, 'darkseagreen': 0x8FBC8F,\r\n\t'darkslateblue': 0x483D8B, 'darkslategray': 0x2F4F4F, 'darkslategrey': 0x2F4F4F, 'darkturquoise': 0x00CED1, 'darkviolet': 0x9400D3,\r\n\t'deeppink': 0xFF1493, 'deepskyblue': 0x00BFFF, 'dimgray': 0x696969, 'dimgrey': 0x696969, 'dodgerblue': 0x1E90FF, 'firebrick': 0xB22222,\r\n\t'floralwhite': 0xFFFAF0, 'forestgreen': 0x228B22, 'fuchsia': 0xFF00FF, 'gainsboro': 0xDCDCDC, 'ghostwhite': 0xF8F8FF, 'gold': 0xFFD700,\r\n\t'goldenrod': 0xDAA520, 'gray': 0x808080, 'green': 0x008000, 'greenyellow': 0xADFF2F, 'grey': 0x808080, 'honeydew': 0xF0FFF0, 'hotpink': 0xFF69B4,\r\n\t'indianred': 0xCD5C5C, 'indigo': 0x4B0082, 'ivory': 0xFFFFF0, 'khaki': 0xF0E68C, 'lavender': 0xE6E6FA, 'lavenderblush': 0xFFF0F5, 'lawngreen': 0x7CFC00,\r\n\t'lemonchiffon': 0xFFFACD, 'lightblue': 0xADD8E6, 'lightcoral': 0xF08080, 'lightcyan': 0xE0FFFF, 'lightgoldenrodyellow': 0xFAFAD2, 'lightgray': 0xD3D3D3,\r\n\t'lightgreen': 0x90EE90, 'lightgrey': 0xD3D3D3, 'lightpink': 0xFFB6C1, 'lightsalmon': 0xFFA07A, 'lightseagreen': 0x20B2AA, 'lightskyblue': 0x87CEFA,\r\n\t'lightslategray': 0x778899, 'lightslategrey': 0x778899, 'lightsteelblue': 0xB0C4DE, 'lightyellow': 0xFFFFE0, 'lime': 0x00FF00, 'limegreen': 0x32CD32,\r\n\t'linen': 0xFAF0E6, 'magenta': 0xFF00FF, 'maroon': 0x800000, 'mediumaquamarine': 0x66CDAA, 'mediumblue': 0x0000CD, 'mediumorchid': 0xBA55D3,\r\n\t'mediumpurple': 0x9370DB, 'mediumseagreen': 0x3CB371, 'mediumslateblue': 0x7B68EE, 'mediumspringgreen': 0x00FA9A, 'mediumturquoise': 0x48D1CC,\r\n\t'mediumvioletred': 0xC71585, 'midnightblue': 0x191970, 'mintcream': 0xF5FFFA, 'mistyrose': 0xFFE4E1, 'moccasin': 0xFFE4B5, 'navajowhite': 0xFFDEAD,\r\n\t'navy': 0x000080, 'oldlace': 0xFDF5E6, 'olive': 0x808000, 'olivedrab': 0x6B8E23, 'orange': 0xFFA500, 'orangered': 0xFF4500, 'orchid': 0xDA70D6,\r\n\t'palegoldenrod': 0xEEE8AA, 'palegreen': 0x98FB98, 'paleturquoise': 0xAFEEEE, 'palevioletred': 0xDB7093, 'papayawhip': 0xFFEFD5, 'peachpuff': 0xFFDAB9,\r\n\t'peru': 0xCD853F, 'pink': 0xFFC0CB, 'plum': 0xDDA0DD, 'powderblue': 0xB0E0E6, 'purple': 0x800080, 'red': 0xFF0000, 'rosybrown': 0xBC8F8F,\r\n\t'royalblue': 0x4169E1, 'saddlebrown': 0x8B4513, 'salmon': 0xFA8072, 'sandybrown': 0xF4A460, 'seagreen': 0x2E8B57, 'seashell': 0xFFF5EE,\r\n\t'sienna': 0xA0522D, 'silver': 0xC0C0C0, 'skyblue': 0x87CEEB, 'slateblue': 0x6A5ACD, 'slategray': 0x708090, 'slategrey': 0x708090, 'snow': 0xFFFAFA,\r\n\t'springgreen': 0x00FF7F, 'steelblue': 0x4682B4, 'tan': 0xD2B48C, 'teal': 0x008080, 'thistle': 0xD8BFD8, 'tomato': 0xFF6347, 'turquoise': 0x40E0D0,\r\n\t'violet': 0xEE82EE, 'wheat': 0xF5DEB3, 'white': 0xFFFFFF, 'whitesmoke': 0xF5F5F5, 'yellow': 0xFFFF00, 'yellowgreen': 0x9ACD32 };\r\n\t\r\n\t// File:src/math/Quaternion.js\r\n\t\r\n\t/**\r\n\t * @author mikael emtinger / http://gomo.se/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author WestLangley / http://github.com/WestLangley\r\n\t * @author bhouston / http://exocortex.com\r\n\t */\r\n\t\r\n\tTHREE.Quaternion = function ( x, y, z, w ) {\r\n\t\r\n\t\tthis._x = x || 0;\r\n\t\tthis._y = y || 0;\r\n\t\tthis._z = z || 0;\r\n\t\tthis._w = ( w !== undefined ) ? w : 1;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Quaternion.prototype = {\r\n\t\r\n\t\tconstructor: THREE.Quaternion,\r\n\t\r\n\t\tget x () {\r\n\t\r\n\t\t\treturn this._x;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tset x ( value ) {\r\n\t\r\n\t\t\tthis._x = value;\r\n\t\t\tthis.onChangeCallback();\r\n\t\r\n\t\t},\r\n\t\r\n\t\tget y () {\r\n\t\r\n\t\t\treturn this._y;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tset y ( value ) {\r\n\t\r\n\t\t\tthis._y = value;\r\n\t\t\tthis.onChangeCallback();\r\n\t\r\n\t\t},\r\n\t\r\n\t\tget z () {\r\n\t\r\n\t\t\treturn this._z;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tset z ( value ) {\r\n\t\r\n\t\t\tthis._z = value;\r\n\t\t\tthis.onChangeCallback();\r\n\t\r\n\t\t},\r\n\t\r\n\t\tget w () {\r\n\t\r\n\t\t\treturn this._w;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tset w ( value ) {\r\n\t\r\n\t\t\tthis._w = value;\r\n\t\t\tthis.onChangeCallback();\r\n\t\r\n\t\t},\r\n\t\r\n\t\tset: function ( x, y, z, w ) {\r\n\t\r\n\t\t\tthis._x = x;\r\n\t\t\tthis._y = y;\r\n\t\t\tthis._z = z;\r\n\t\t\tthis._w = w;\r\n\t\r\n\t\t\tthis.onChangeCallback();\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclone: function () {\r\n\t\r\n\t\t\treturn new this.constructor( this._x, this._y, this._z, this._w );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopy: function ( quaternion ) {\r\n\t\r\n\t\t\tthis._x = quaternion.x;\r\n\t\t\tthis._y = quaternion.y;\r\n\t\t\tthis._z = quaternion.z;\r\n\t\t\tthis._w = quaternion.w;\r\n\t\r\n\t\t\tthis.onChangeCallback();\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetFromEuler: function ( euler, update ) {\r\n\t\r\n\t\t\tif ( euler instanceof THREE.Euler === false ) {\r\n\t\r\n\t\t\t\tthrow new Error( 'THREE.Quaternion: .setFromEuler() now expects a Euler rotation rather than a Vector3 and order.' );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// http://www.mathworks.com/matlabcentral/fileexchange/\r\n\t\t\t// \t20696-function-to-convert-between-dcm-euler-angles-quaternions-and-euler-vectors/\r\n\t\t\t//\tcontent/SpinCalc.m\r\n\t\r\n\t\t\tvar c1 = Math.cos( euler._x / 2 );\r\n\t\t\tvar c2 = Math.cos( euler._y / 2 );\r\n\t\t\tvar c3 = Math.cos( euler._z / 2 );\r\n\t\t\tvar s1 = Math.sin( euler._x / 2 );\r\n\t\t\tvar s2 = Math.sin( euler._y / 2 );\r\n\t\t\tvar s3 = Math.sin( euler._z / 2 );\r\n\t\r\n\t\t\tvar order = euler.order;\r\n\t\r\n\t\t\tif ( order === 'XYZ' ) {\r\n\t\r\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\r\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\r\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\r\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\r\n\t\r\n\t\t\t} else if ( order === 'YXZ' ) {\r\n\t\r\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\r\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\r\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\r\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\r\n\t\r\n\t\t\t} else if ( order === 'ZXY' ) {\r\n\t\r\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\r\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\r\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\r\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\r\n\t\r\n\t\t\t} else if ( order === 'ZYX' ) {\r\n\t\r\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\r\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\r\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\r\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\r\n\t\r\n\t\t\t} else if ( order === 'YZX' ) {\r\n\t\r\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\r\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\r\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\r\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\r\n\t\r\n\t\t\t} else if ( order === 'XZY' ) {\r\n\t\r\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\r\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\r\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\r\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( update !== false ) this.onChangeCallback();\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetFromAxisAngle: function ( axis, angle ) {\r\n\t\r\n\t\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/angleToQuaternion/index.htm\r\n\t\r\n\t\t\t// assumes axis is normalized\r\n\t\r\n\t\t\tvar halfAngle = angle / 2, s = Math.sin( halfAngle );\r\n\t\r\n\t\t\tthis._x = axis.x * s;\r\n\t\t\tthis._y = axis.y * s;\r\n\t\t\tthis._z = axis.z * s;\r\n\t\t\tthis._w = Math.cos( halfAngle );\r\n\t\r\n\t\t\tthis.onChangeCallback();\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetFromRotationMatrix: function ( m ) {\r\n\t\r\n\t\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\r\n\t\r\n\t\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\r\n\t\r\n\t\t\tvar te = m.elements,\r\n\t\r\n\t\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\r\n\t\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\r\n\t\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ],\r\n\t\r\n\t\t\t\ttrace = m11 + m22 + m33,\r\n\t\t\t\ts;\r\n\t\r\n\t\t\tif ( trace > 0 ) {\r\n\t\r\n\t\t\t\ts = 0.5 / Math.sqrt( trace + 1.0 );\r\n\t\r\n\t\t\t\tthis._w = 0.25 / s;\r\n\t\t\t\tthis._x = ( m32 - m23 ) * s;\r\n\t\t\t\tthis._y = ( m13 - m31 ) * s;\r\n\t\t\t\tthis._z = ( m21 - m12 ) * s;\r\n\t\r\n\t\t\t} else if ( m11 > m22 && m11 > m33 ) {\r\n\t\r\n\t\t\t\ts = 2.0 * Math.sqrt( 1.0 + m11 - m22 - m33 );\r\n\t\r\n\t\t\t\tthis._w = ( m32 - m23 ) / s;\r\n\t\t\t\tthis._x = 0.25 * s;\r\n\t\t\t\tthis._y = ( m12 + m21 ) / s;\r\n\t\t\t\tthis._z = ( m13 + m31 ) / s;\r\n\t\r\n\t\t\t} else if ( m22 > m33 ) {\r\n\t\r\n\t\t\t\ts = 2.0 * Math.sqrt( 1.0 + m22 - m11 - m33 );\r\n\t\r\n\t\t\t\tthis._w = ( m13 - m31 ) / s;\r\n\t\t\t\tthis._x = ( m12 + m21 ) / s;\r\n\t\t\t\tthis._y = 0.25 * s;\r\n\t\t\t\tthis._z = ( m23 + m32 ) / s;\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\ts = 2.0 * Math.sqrt( 1.0 + m33 - m11 - m22 );\r\n\t\r\n\t\t\t\tthis._w = ( m21 - m12 ) / s;\r\n\t\t\t\tthis._x = ( m13 + m31 ) / s;\r\n\t\t\t\tthis._y = ( m23 + m32 ) / s;\r\n\t\t\t\tthis._z = 0.25 * s;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.onChangeCallback();\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetFromUnitVectors: function () {\r\n\t\r\n\t\t\t// http://lolengine.net/blog/2014/02/24/quaternion-from-two-vectors-final\r\n\t\r\n\t\t\t// assumes direction vectors vFrom and vTo are normalized\r\n\t\r\n\t\t\tvar v1, r;\r\n\t\r\n\t\t\tvar EPS = 0.000001;\r\n\t\r\n\t\t\treturn function ( vFrom, vTo ) {\r\n\t\r\n\t\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\r\n\t\r\n\t\t\t\tr = vFrom.dot( vTo ) + 1;\r\n\t\r\n\t\t\t\tif ( r < EPS ) {\r\n\t\r\n\t\t\t\t\tr = 0;\r\n\t\r\n\t\t\t\t\tif ( Math.abs( vFrom.x ) > Math.abs( vFrom.z ) ) {\r\n\t\r\n\t\t\t\t\t\tv1.set( - vFrom.y, vFrom.x, 0 );\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\tv1.set( 0, - vFrom.z, vFrom.y );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tv1.crossVectors( vFrom, vTo );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tthis._x = v1.x;\r\n\t\t\t\tthis._y = v1.y;\r\n\t\t\t\tthis._z = v1.z;\r\n\t\t\t\tthis._w = r;\r\n\t\r\n\t\t\t\tthis.normalize();\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tinverse: function () {\r\n\t\r\n\t\t\tthis.conjugate().normalize();\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tconjugate: function () {\r\n\t\r\n\t\t\tthis._x *= - 1;\r\n\t\t\tthis._y *= - 1;\r\n\t\t\tthis._z *= - 1;\r\n\t\r\n\t\t\tthis.onChangeCallback();\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdot: function ( v ) {\r\n\t\r\n\t\t\treturn this._x * v._x + this._y * v._y + this._z * v._z + this._w * v._w;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tlengthSq: function () {\r\n\t\r\n\t\t\treturn this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tlength: function () {\r\n\t\r\n\t\t\treturn Math.sqrt( this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tnormalize: function () {\r\n\t\r\n\t\t\tvar l = this.length();\r\n\t\r\n\t\t\tif ( l === 0 ) {\r\n\t\r\n\t\t\t\tthis._x = 0;\r\n\t\t\t\tthis._y = 0;\r\n\t\t\t\tthis._z = 0;\r\n\t\t\t\tthis._w = 1;\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tl = 1 / l;\r\n\t\r\n\t\t\t\tthis._x = this._x * l;\r\n\t\t\t\tthis._y = this._y * l;\r\n\t\t\t\tthis._z = this._z * l;\r\n\t\t\t\tthis._w = this._w * l;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.onChangeCallback();\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmultiply: function ( q, p ) {\r\n\t\r\n\t\t\tif ( p !== undefined ) {\r\n\t\r\n\t\t\t\tconsole.warn( 'THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead.' );\r\n\t\t\t\treturn this.multiplyQuaternions( q, p );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this.multiplyQuaternions( this, q );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmultiplyQuaternions: function ( a, b ) {\r\n\t\r\n\t\t\t// from http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/code/index.htm\r\n\t\r\n\t\t\tvar qax = a._x, qay = a._y, qaz = a._z, qaw = a._w;\r\n\t\t\tvar qbx = b._x, qby = b._y, qbz = b._z, qbw = b._w;\r\n\t\r\n\t\t\tthis._x = qax * qbw + qaw * qbx + qay * qbz - qaz * qby;\r\n\t\t\tthis._y = qay * qbw + qaw * qby + qaz * qbx - qax * qbz;\r\n\t\t\tthis._z = qaz * qbw + qaw * qbz + qax * qby - qay * qbx;\r\n\t\t\tthis._w = qaw * qbw - qax * qbx - qay * qby - qaz * qbz;\r\n\t\r\n\t\t\tthis.onChangeCallback();\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmultiplyVector3: function ( vector ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead.' );\r\n\t\t\treturn vector.applyQuaternion( this );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tslerp: function ( qb, t ) {\r\n\t\r\n\t\t\tif ( t === 0 ) return this;\r\n\t\t\tif ( t === 1 ) return this.copy( qb );\r\n\t\r\n\t\t\tvar x = this._x, y = this._y, z = this._z, w = this._w;\r\n\t\r\n\t\t\t// http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/slerp/\r\n\t\r\n\t\t\tvar cosHalfTheta = w * qb._w + x * qb._x + y * qb._y + z * qb._z;\r\n\t\r\n\t\t\tif ( cosHalfTheta < 0 ) {\r\n\t\r\n\t\t\t\tthis._w = - qb._w;\r\n\t\t\t\tthis._x = - qb._x;\r\n\t\t\t\tthis._y = - qb._y;\r\n\t\t\t\tthis._z = - qb._z;\r\n\t\r\n\t\t\t\tcosHalfTheta = - cosHalfTheta;\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tthis.copy( qb );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( cosHalfTheta >= 1.0 ) {\r\n\t\r\n\t\t\t\tthis._w = w;\r\n\t\t\t\tthis._x = x;\r\n\t\t\t\tthis._y = y;\r\n\t\t\t\tthis._z = z;\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar halfTheta = Math.acos( cosHalfTheta );\r\n\t\t\tvar sinHalfTheta = Math.sqrt( 1.0 - cosHalfTheta * cosHalfTheta );\r\n\t\r\n\t\t\tif ( Math.abs( sinHalfTheta ) < 0.001 ) {\r\n\t\r\n\t\t\t\tthis._w = 0.5 * ( w + this._w );\r\n\t\t\t\tthis._x = 0.5 * ( x + this._x );\r\n\t\t\t\tthis._y = 0.5 * ( y + this._y );\r\n\t\t\t\tthis._z = 0.5 * ( z + this._z );\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar ratioA = Math.sin( ( 1 - t ) * halfTheta ) / sinHalfTheta,\r\n\t\t\tratioB = Math.sin( t * halfTheta ) / sinHalfTheta;\r\n\t\r\n\t\t\tthis._w = ( w * ratioA + this._w * ratioB );\r\n\t\t\tthis._x = ( x * ratioA + this._x * ratioB );\r\n\t\t\tthis._y = ( y * ratioA + this._y * ratioB );\r\n\t\t\tthis._z = ( z * ratioA + this._z * ratioB );\r\n\t\r\n\t\t\tthis.onChangeCallback();\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tequals: function ( quaternion ) {\r\n\t\r\n\t\t\treturn ( quaternion._x === this._x ) && ( quaternion._y === this._y ) && ( quaternion._z === this._z ) && ( quaternion._w === this._w );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tfromArray: function ( array, offset ) {\r\n\t\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\t\r\n\t\t\tthis._x = array[ offset ];\r\n\t\t\tthis._y = array[ offset + 1 ];\r\n\t\t\tthis._z = array[ offset + 2 ];\r\n\t\t\tthis._w = array[ offset + 3 ];\r\n\t\r\n\t\t\tthis.onChangeCallback();\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\ttoArray: function ( array, offset ) {\r\n\t\r\n\t\t\tif ( array === undefined ) array = [];\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\t\r\n\t\t\tarray[ offset ] = this._x;\r\n\t\t\tarray[ offset + 1 ] = this._y;\r\n\t\t\tarray[ offset + 2 ] = this._z;\r\n\t\t\tarray[ offset + 3 ] = this._w;\r\n\t\r\n\t\t\treturn array;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tonChange: function ( callback ) {\r\n\t\r\n\t\t\tthis.onChangeCallback = callback;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tonChangeCallback: function () {}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Quaternion.slerp = function ( qa, qb, qm, t ) {\r\n\t\r\n\t\treturn qm.copy( qa ).slerp( qb, t );\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/math/Vector2.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author philogb / http://blog.thejit.org/\r\n\t * @author egraether / http://egraether.com/\r\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\r\n\t */\r\n\t\r\n\tTHREE.Vector2 = function ( x, y ) {\r\n\t\r\n\t\tthis.x = x || 0;\r\n\t\tthis.y = y || 0;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Vector2.prototype = {\r\n\t\r\n\t\tconstructor: THREE.Vector2,\r\n\t\r\n\t\tset: function ( x, y ) {\r\n\t\r\n\t\t\tthis.x = x;\r\n\t\t\tthis.y = y;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetX: function ( x ) {\r\n\t\r\n\t\t\tthis.x = x;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetY: function ( y ) {\r\n\t\r\n\t\t\tthis.y = y;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetComponent: function ( index, value ) {\r\n\t\r\n\t\t\tswitch ( index ) {\r\n\t\r\n\t\t\t\tcase 0: this.x = value; break;\r\n\t\t\t\tcase 1: this.y = value; break;\r\n\t\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetComponent: function ( index ) {\r\n\t\r\n\t\t\tswitch ( index ) {\r\n\t\r\n\t\t\t\tcase 0: return this.x;\r\n\t\t\t\tcase 1: return this.y;\r\n\t\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclone: function () {\r\n\t\r\n\t\t\treturn new this.constructor( this.x, this.y );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopy: function ( v ) {\r\n\t\r\n\t\t\tthis.x = v.x;\r\n\t\t\tthis.y = v.y;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tadd: function ( v, w ) {\r\n\t\r\n\t\t\tif ( w !== undefined ) {\r\n\t\r\n\t\t\t\tconsole.warn( 'THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\r\n\t\t\t\treturn this.addVectors( v, w );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.x += v.x;\r\n\t\t\tthis.y += v.y;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\taddScalar: function ( s ) {\r\n\t\r\n\t\t\tthis.x += s;\r\n\t\t\tthis.y += s;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\taddVectors: function ( a, b ) {\r\n\t\r\n\t\t\tthis.x = a.x + b.x;\r\n\t\t\tthis.y = a.y + b.y;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\taddScaledVector: function ( v, s ) {\r\n\t\r\n\t\t\tthis.x += v.x * s;\r\n\t\t\tthis.y += v.y * s;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsub: function ( v, w ) {\r\n\t\r\n\t\t\tif ( w !== undefined ) {\r\n\t\r\n\t\t\t\tconsole.warn( 'THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\r\n\t\t\t\treturn this.subVectors( v, w );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.x -= v.x;\r\n\t\t\tthis.y -= v.y;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsubScalar: function ( s ) {\r\n\t\r\n\t\t\tthis.x -= s;\r\n\t\t\tthis.y -= s;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsubVectors: function ( a, b ) {\r\n\t\r\n\t\t\tthis.x = a.x - b.x;\r\n\t\t\tthis.y = a.y - b.y;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmultiply: function ( v ) {\r\n\t\r\n\t\t\tthis.x *= v.x;\r\n\t\t\tthis.y *= v.y;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmultiplyScalar: function ( s ) {\r\n\t\r\n\t\t\tthis.x *= s;\r\n\t\t\tthis.y *= s;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdivide: function ( v ) {\r\n\t\r\n\t\t\tthis.x /= v.x;\r\n\t\t\tthis.y /= v.y;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdivideScalar: function ( scalar ) {\r\n\t\r\n\t\t\tif ( scalar !== 0 ) {\r\n\t\r\n\t\t\t\tvar invScalar = 1 / scalar;\r\n\t\r\n\t\t\t\tthis.x *= invScalar;\r\n\t\t\t\tthis.y *= invScalar;\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tthis.x = 0;\r\n\t\t\t\tthis.y = 0;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmin: function ( v ) {\r\n\t\r\n\t\t\tif ( this.x > v.x ) {\r\n\t\r\n\t\t\t\tthis.x = v.x;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( this.y > v.y ) {\r\n\t\r\n\t\t\t\tthis.y = v.y;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmax: function ( v ) {\r\n\t\r\n\t\t\tif ( this.x < v.x ) {\r\n\t\r\n\t\t\t\tthis.x = v.x;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( this.y < v.y ) {\r\n\t\r\n\t\t\t\tthis.y = v.y;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclamp: function ( min, max ) {\r\n\t\r\n\t\t\t// This function assumes min < max, if this assumption isn't true it will not operate correctly\r\n\t\r\n\t\t\tif ( this.x < min.x ) {\r\n\t\r\n\t\t\t\tthis.x = min.x;\r\n\t\r\n\t\t\t} else if ( this.x > max.x ) {\r\n\t\r\n\t\t\t\tthis.x = max.x;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( this.y < min.y ) {\r\n\t\r\n\t\t\t\tthis.y = min.y;\r\n\t\r\n\t\t\t} else if ( this.y > max.y ) {\r\n\t\r\n\t\t\t\tthis.y = max.y;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclampScalar: function () {\r\n\t\r\n\t\t\tvar min, max;\r\n\t\r\n\t\t\treturn function clampScalar( minVal, maxVal ) {\r\n\t\r\n\t\t\t\tif ( min === undefined ) {\r\n\t\r\n\t\t\t\t\tmin = new THREE.Vector2();\r\n\t\t\t\t\tmax = new THREE.Vector2();\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tmin.set( minVal, minVal );\r\n\t\t\t\tmax.set( maxVal, maxVal );\r\n\t\r\n\t\t\t\treturn this.clamp( min, max );\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tfloor: function () {\r\n\t\r\n\t\t\tthis.x = Math.floor( this.x );\r\n\t\t\tthis.y = Math.floor( this.y );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tceil: function () {\r\n\t\r\n\t\t\tthis.x = Math.ceil( this.x );\r\n\t\t\tthis.y = Math.ceil( this.y );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tround: function () {\r\n\t\r\n\t\t\tthis.x = Math.round( this.x );\r\n\t\t\tthis.y = Math.round( this.y );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\troundToZero: function () {\r\n\t\r\n\t\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\r\n\t\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tnegate: function () {\r\n\t\r\n\t\t\tthis.x = - this.x;\r\n\t\t\tthis.y = - this.y;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdot: function ( v ) {\r\n\t\r\n\t\t\treturn this.x * v.x + this.y * v.y;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tlengthSq: function () {\r\n\t\r\n\t\t\treturn this.x * this.x + this.y * this.y;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tlength: function () {\r\n\t\r\n\t\t\treturn Math.sqrt( this.x * this.x + this.y * this.y );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tlengthManhattan: function() {\r\n\t\r\n\t\t\treturn Math.abs( this.x ) + Math.abs( this.y );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tnormalize: function () {\r\n\t\r\n\t\t\treturn this.divideScalar( this.length() );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdistanceTo: function ( v ) {\r\n\t\r\n\t\t\treturn Math.sqrt( this.distanceToSquared( v ) );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdistanceToSquared: function ( v ) {\r\n\t\r\n\t\t\tvar dx = this.x - v.x, dy = this.y - v.y;\r\n\t\t\treturn dx * dx + dy * dy;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetLength: function ( l ) {\r\n\t\r\n\t\t\tvar oldLength = this.length();\r\n\t\r\n\t\t\tif ( oldLength !== 0 && l !== oldLength ) {\r\n\t\r\n\t\t\t\tthis.multiplyScalar( l / oldLength );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tlerp: function ( v, alpha ) {\r\n\t\r\n\t\t\tthis.x += ( v.x - this.x ) * alpha;\r\n\t\t\tthis.y += ( v.y - this.y ) * alpha;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tlerpVectors: function ( v1, v2, alpha ) {\r\n\t\r\n\t\t\tthis.subVectors( v2, v1 ).multiplyScalar( alpha ).add( v1 );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tequals: function ( v ) {\r\n\t\r\n\t\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tfromArray: function ( array, offset ) {\r\n\t\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\t\r\n\t\t\tthis.x = array[ offset ];\r\n\t\t\tthis.y = array[ offset + 1 ];\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\ttoArray: function ( array, offset ) {\r\n\t\r\n\t\t\tif ( array === undefined ) array = [];\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\t\r\n\t\t\tarray[ offset ] = this.x;\r\n\t\t\tarray[ offset + 1 ] = this.y;\r\n\t\r\n\t\t\treturn array;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tfromAttribute: function ( attribute, index, offset ) {\r\n\t\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\t\r\n\t\t\tindex = index * attribute.itemSize + offset;\r\n\t\r\n\t\t\tthis.x = attribute.array[ index ];\r\n\t\t\tthis.y = attribute.array[ index + 1 ];\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/math/Vector3.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author *kile / http://kile.stravaganza.org/\r\n\t * @author philogb / http://blog.thejit.org/\r\n\t * @author mikael emtinger / http://gomo.se/\r\n\t * @author egraether / http://egraether.com/\r\n\t * @author WestLangley / http://github.com/WestLangley\r\n\t */\r\n\t\r\n\tTHREE.Vector3 = function ( x, y, z ) {\r\n\t\r\n\t\tthis.x = x || 0;\r\n\t\tthis.y = y || 0;\r\n\t\tthis.z = z || 0;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Vector3.prototype = {\r\n\t\r\n\t\tconstructor: THREE.Vector3,\r\n\t\r\n\t\tset: function ( x, y, z ) {\r\n\t\r\n\t\t\tthis.x = x;\r\n\t\t\tthis.y = y;\r\n\t\t\tthis.z = z;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetX: function ( x ) {\r\n\t\r\n\t\t\tthis.x = x;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetY: function ( y ) {\r\n\t\r\n\t\t\tthis.y = y;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetZ: function ( z ) {\r\n\t\r\n\t\t\tthis.z = z;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetComponent: function ( index, value ) {\r\n\t\r\n\t\t\tswitch ( index ) {\r\n\t\r\n\t\t\t\tcase 0: this.x = value; break;\r\n\t\t\t\tcase 1: this.y = value; break;\r\n\t\t\t\tcase 2: this.z = value; break;\r\n\t\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetComponent: function ( index ) {\r\n\t\r\n\t\t\tswitch ( index ) {\r\n\t\r\n\t\t\t\tcase 0: return this.x;\r\n\t\t\t\tcase 1: return this.y;\r\n\t\t\t\tcase 2: return this.z;\r\n\t\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclone: function () {\r\n\t\r\n\t\t\treturn new this.constructor( this.x, this.y, this.z );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopy: function ( v ) {\r\n\t\r\n\t\t\tthis.x = v.x;\r\n\t\t\tthis.y = v.y;\r\n\t\t\tthis.z = v.z;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tadd: function ( v, w ) {\r\n\t\r\n\t\t\tif ( w !== undefined ) {\r\n\t\r\n\t\t\t\tconsole.warn( 'THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\r\n\t\t\t\treturn this.addVectors( v, w );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.x += v.x;\r\n\t\t\tthis.y += v.y;\r\n\t\t\tthis.z += v.z;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\taddScalar: function ( s ) {\r\n\t\r\n\t\t\tthis.x += s;\r\n\t\t\tthis.y += s;\r\n\t\t\tthis.z += s;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\taddVectors: function ( a, b ) {\r\n\t\r\n\t\t\tthis.x = a.x + b.x;\r\n\t\t\tthis.y = a.y + b.y;\r\n\t\t\tthis.z = a.z + b.z;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\taddScaledVector: function ( v, s ) {\r\n\t\r\n\t\t\tthis.x += v.x * s;\r\n\t\t\tthis.y += v.y * s;\r\n\t\t\tthis.z += v.z * s;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsub: function ( v, w ) {\r\n\t\r\n\t\t\tif ( w !== undefined ) {\r\n\t\r\n\t\t\t\tconsole.warn( 'THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\r\n\t\t\t\treturn this.subVectors( v, w );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.x -= v.x;\r\n\t\t\tthis.y -= v.y;\r\n\t\t\tthis.z -= v.z;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsubScalar: function ( s ) {\r\n\t\r\n\t\t\tthis.x -= s;\r\n\t\t\tthis.y -= s;\r\n\t\t\tthis.z -= s;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsubVectors: function ( a, b ) {\r\n\t\r\n\t\t\tthis.x = a.x - b.x;\r\n\t\t\tthis.y = a.y - b.y;\r\n\t\t\tthis.z = a.z - b.z;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmultiply: function ( v, w ) {\r\n\t\r\n\t\t\tif ( w !== undefined ) {\r\n\t\r\n\t\t\t\tconsole.warn( 'THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead.' );\r\n\t\t\t\treturn this.multiplyVectors( v, w );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.x *= v.x;\r\n\t\t\tthis.y *= v.y;\r\n\t\t\tthis.z *= v.z;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmultiplyScalar: function ( scalar ) {\r\n\t\r\n\t\t\tthis.x *= scalar;\r\n\t\t\tthis.y *= scalar;\r\n\t\t\tthis.z *= scalar;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmultiplyVectors: function ( a, b ) {\r\n\t\r\n\t\t\tthis.x = a.x * b.x;\r\n\t\t\tthis.y = a.y * b.y;\r\n\t\t\tthis.z = a.z * b.z;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tapplyEuler: function () {\r\n\t\r\n\t\t\tvar quaternion;\r\n\t\r\n\t\t\treturn function applyEuler( euler ) {\r\n\t\r\n\t\t\t\tif ( euler instanceof THREE.Euler === false ) {\r\n\t\r\n\t\t\t\t\tconsole.error( 'THREE.Vector3: .applyEuler() now expects a Euler rotation rather than a Vector3 and order.' );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( quaternion === undefined ) quaternion = new THREE.Quaternion();\r\n\t\r\n\t\t\t\tthis.applyQuaternion( quaternion.setFromEuler( euler ) );\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tapplyAxisAngle: function () {\r\n\t\r\n\t\t\tvar quaternion;\r\n\t\r\n\t\t\treturn function applyAxisAngle( axis, angle ) {\r\n\t\r\n\t\t\t\tif ( quaternion === undefined ) quaternion = new THREE.Quaternion();\r\n\t\r\n\t\t\t\tthis.applyQuaternion( quaternion.setFromAxisAngle( axis, angle ) );\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tapplyMatrix3: function ( m ) {\r\n\t\r\n\t\t\tvar x = this.x;\r\n\t\t\tvar y = this.y;\r\n\t\t\tvar z = this.z;\r\n\t\r\n\t\t\tvar e = m.elements;\r\n\t\r\n\t\t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ] * z;\r\n\t\t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ] * z;\r\n\t\t\tthis.z = e[ 2 ] * x + e[ 5 ] * y + e[ 8 ] * z;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tapplyMatrix4: function ( m ) {\r\n\t\r\n\t\t\t// input: THREE.Matrix4 affine matrix\r\n\t\r\n\t\t\tvar x = this.x, y = this.y, z = this.z;\r\n\t\r\n\t\t\tvar e = m.elements;\r\n\t\r\n\t\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ]  * z + e[ 12 ];\r\n\t\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ]  * z + e[ 13 ];\r\n\t\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ];\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tapplyProjection: function ( m ) {\r\n\t\r\n\t\t\t// input: THREE.Matrix4 projection matrix\r\n\t\r\n\t\t\tvar x = this.x, y = this.y, z = this.z;\r\n\t\r\n\t\t\tvar e = m.elements;\r\n\t\t\tvar d = 1 / ( e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] ); // perspective divide\r\n\t\r\n\t\t\tthis.x = ( e[ 0 ] * x + e[ 4 ] * y + e[ 8 ]  * z + e[ 12 ] ) * d;\r\n\t\t\tthis.y = ( e[ 1 ] * x + e[ 5 ] * y + e[ 9 ]  * z + e[ 13 ] ) * d;\r\n\t\t\tthis.z = ( e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] ) * d;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tapplyQuaternion: function ( q ) {\r\n\t\r\n\t\t\tvar x = this.x;\r\n\t\t\tvar y = this.y;\r\n\t\t\tvar z = this.z;\r\n\t\r\n\t\t\tvar qx = q.x;\r\n\t\t\tvar qy = q.y;\r\n\t\t\tvar qz = q.z;\r\n\t\t\tvar qw = q.w;\r\n\t\r\n\t\t\t// calculate quat * vector\r\n\t\r\n\t\t\tvar ix =  qw * x + qy * z - qz * y;\r\n\t\t\tvar iy =  qw * y + qz * x - qx * z;\r\n\t\t\tvar iz =  qw * z + qx * y - qy * x;\r\n\t\t\tvar iw = - qx * x - qy * y - qz * z;\r\n\t\r\n\t\t\t// calculate result * inverse quat\r\n\t\r\n\t\t\tthis.x = ix * qw + iw * - qx + iy * - qz - iz * - qy;\r\n\t\t\tthis.y = iy * qw + iw * - qy + iz * - qx - ix * - qz;\r\n\t\t\tthis.z = iz * qw + iw * - qz + ix * - qy - iy * - qx;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tproject: function () {\r\n\t\r\n\t\t\tvar matrix;\r\n\t\r\n\t\t\treturn function project( camera ) {\r\n\t\r\n\t\t\t\tif ( matrix === undefined ) matrix = new THREE.Matrix4();\r\n\t\r\n\t\t\t\tmatrix.multiplyMatrices( camera.projectionMatrix, matrix.getInverse( camera.matrixWorld ) );\r\n\t\t\t\treturn this.applyProjection( matrix );\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tunproject: function () {\r\n\t\r\n\t\t\tvar matrix;\r\n\t\r\n\t\t\treturn function unproject( camera ) {\r\n\t\r\n\t\t\t\tif ( matrix === undefined ) matrix = new THREE.Matrix4();\r\n\t\r\n\t\t\t\tmatrix.multiplyMatrices( camera.matrixWorld, matrix.getInverse( camera.projectionMatrix ) );\r\n\t\t\t\treturn this.applyProjection( matrix );\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\ttransformDirection: function ( m ) {\r\n\t\r\n\t\t\t// input: THREE.Matrix4 affine matrix\r\n\t\t\t// vector interpreted as a direction\r\n\t\r\n\t\t\tvar x = this.x, y = this.y, z = this.z;\r\n\t\r\n\t\t\tvar e = m.elements;\r\n\t\r\n\t\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ]  * z;\r\n\t\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ]  * z;\r\n\t\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z;\r\n\t\r\n\t\t\tthis.normalize();\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdivide: function ( v ) {\r\n\t\r\n\t\t\tthis.x /= v.x;\r\n\t\t\tthis.y /= v.y;\r\n\t\t\tthis.z /= v.z;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdivideScalar: function ( scalar ) {\r\n\t\r\n\t\t\tif ( scalar !== 0 ) {\r\n\t\r\n\t\t\t\tvar invScalar = 1 / scalar;\r\n\t\r\n\t\t\t\tthis.x *= invScalar;\r\n\t\t\t\tthis.y *= invScalar;\r\n\t\t\t\tthis.z *= invScalar;\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tthis.x = 0;\r\n\t\t\t\tthis.y = 0;\r\n\t\t\t\tthis.z = 0;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmin: function ( v ) {\r\n\t\r\n\t\t\tif ( this.x > v.x ) {\r\n\t\r\n\t\t\t\tthis.x = v.x;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( this.y > v.y ) {\r\n\t\r\n\t\t\t\tthis.y = v.y;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( this.z > v.z ) {\r\n\t\r\n\t\t\t\tthis.z = v.z;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmax: function ( v ) {\r\n\t\r\n\t\t\tif ( this.x < v.x ) {\r\n\t\r\n\t\t\t\tthis.x = v.x;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( this.y < v.y ) {\r\n\t\r\n\t\t\t\tthis.y = v.y;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( this.z < v.z ) {\r\n\t\r\n\t\t\t\tthis.z = v.z;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclamp: function ( min, max ) {\r\n\t\r\n\t\t\t// This function assumes min < max, if this assumption isn't true it will not operate correctly\r\n\t\r\n\t\t\tif ( this.x < min.x ) {\r\n\t\r\n\t\t\t\tthis.x = min.x;\r\n\t\r\n\t\t\t} else if ( this.x > max.x ) {\r\n\t\r\n\t\t\t\tthis.x = max.x;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( this.y < min.y ) {\r\n\t\r\n\t\t\t\tthis.y = min.y;\r\n\t\r\n\t\t\t} else if ( this.y > max.y ) {\r\n\t\r\n\t\t\t\tthis.y = max.y;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( this.z < min.z ) {\r\n\t\r\n\t\t\t\tthis.z = min.z;\r\n\t\r\n\t\t\t} else if ( this.z > max.z ) {\r\n\t\r\n\t\t\t\tthis.z = max.z;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclampScalar: function () {\r\n\t\r\n\t\t\tvar min, max;\r\n\t\r\n\t\t\treturn function clampScalar( minVal, maxVal ) {\r\n\t\r\n\t\t\t\tif ( min === undefined ) {\r\n\t\r\n\t\t\t\t\tmin = new THREE.Vector3();\r\n\t\t\t\t\tmax = new THREE.Vector3();\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tmin.set( minVal, minVal, minVal );\r\n\t\t\t\tmax.set( maxVal, maxVal, maxVal );\r\n\t\r\n\t\t\t\treturn this.clamp( min, max );\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tfloor: function () {\r\n\t\r\n\t\t\tthis.x = Math.floor( this.x );\r\n\t\t\tthis.y = Math.floor( this.y );\r\n\t\t\tthis.z = Math.floor( this.z );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tceil: function () {\r\n\t\r\n\t\t\tthis.x = Math.ceil( this.x );\r\n\t\t\tthis.y = Math.ceil( this.y );\r\n\t\t\tthis.z = Math.ceil( this.z );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tround: function () {\r\n\t\r\n\t\t\tthis.x = Math.round( this.x );\r\n\t\t\tthis.y = Math.round( this.y );\r\n\t\t\tthis.z = Math.round( this.z );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\troundToZero: function () {\r\n\t\r\n\t\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\r\n\t\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\r\n\t\t\tthis.z = ( this.z < 0 ) ? Math.ceil( this.z ) : Math.floor( this.z );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tnegate: function () {\r\n\t\r\n\t\t\tthis.x = - this.x;\r\n\t\t\tthis.y = - this.y;\r\n\t\t\tthis.z = - this.z;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdot: function ( v ) {\r\n\t\r\n\t\t\treturn this.x * v.x + this.y * v.y + this.z * v.z;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tlengthSq: function () {\r\n\t\r\n\t\t\treturn this.x * this.x + this.y * this.y + this.z * this.z;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tlength: function () {\r\n\t\r\n\t\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tlengthManhattan: function () {\r\n\t\r\n\t\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tnormalize: function () {\r\n\t\r\n\t\t\treturn this.divideScalar( this.length() );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetLength: function ( l ) {\r\n\t\r\n\t\t\tvar oldLength = this.length();\r\n\t\r\n\t\t\tif ( oldLength !== 0 && l !== oldLength  ) {\r\n\t\r\n\t\t\t\tthis.multiplyScalar( l / oldLength );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tlerp: function ( v, alpha ) {\r\n\t\r\n\t\t\tthis.x += ( v.x - this.x ) * alpha;\r\n\t\t\tthis.y += ( v.y - this.y ) * alpha;\r\n\t\t\tthis.z += ( v.z - this.z ) * alpha;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tlerpVectors: function ( v1, v2, alpha ) {\r\n\t\r\n\t\t\tthis.subVectors( v2, v1 ).multiplyScalar( alpha ).add( v1 );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcross: function ( v, w ) {\r\n\t\r\n\t\t\tif ( w !== undefined ) {\r\n\t\r\n\t\t\t\tconsole.warn( 'THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead.' );\r\n\t\t\t\treturn this.crossVectors( v, w );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar x = this.x, y = this.y, z = this.z;\r\n\t\r\n\t\t\tthis.x = y * v.z - z * v.y;\r\n\t\t\tthis.y = z * v.x - x * v.z;\r\n\t\t\tthis.z = x * v.y - y * v.x;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcrossVectors: function ( a, b ) {\r\n\t\r\n\t\t\tvar ax = a.x, ay = a.y, az = a.z;\r\n\t\t\tvar bx = b.x, by = b.y, bz = b.z;\r\n\t\r\n\t\t\tthis.x = ay * bz - az * by;\r\n\t\t\tthis.y = az * bx - ax * bz;\r\n\t\t\tthis.z = ax * by - ay * bx;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tprojectOnVector: function () {\r\n\t\r\n\t\t\tvar v1, dot;\r\n\t\r\n\t\t\treturn function projectOnVector( vector ) {\r\n\t\r\n\t\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\r\n\t\r\n\t\t\t\tv1.copy( vector ).normalize();\r\n\t\r\n\t\t\t\tdot = this.dot( v1 );\r\n\t\r\n\t\t\t\treturn this.copy( v1 ).multiplyScalar( dot );\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tprojectOnPlane: function () {\r\n\t\r\n\t\t\tvar v1;\r\n\t\r\n\t\t\treturn function projectOnPlane( planeNormal ) {\r\n\t\r\n\t\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\r\n\t\r\n\t\t\t\tv1.copy( this ).projectOnVector( planeNormal );\r\n\t\r\n\t\t\t\treturn this.sub( v1 );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\treflect: function () {\r\n\t\r\n\t\t\t// reflect incident vector off plane orthogonal to normal\r\n\t\t\t// normal is assumed to have unit length\r\n\t\r\n\t\t\tvar v1;\r\n\t\r\n\t\t\treturn function reflect( normal ) {\r\n\t\r\n\t\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\r\n\t\r\n\t\t\t\treturn this.sub( v1.copy( normal ).multiplyScalar( 2 * this.dot( normal ) ) );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tangleTo: function ( v ) {\r\n\t\r\n\t\t\tvar theta = this.dot( v ) / ( this.length() * v.length() );\r\n\t\r\n\t\t\t// clamp, to handle numerical problems\r\n\t\r\n\t\t\treturn Math.acos( THREE.Math.clamp( theta, - 1, 1 ) );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdistanceTo: function ( v ) {\r\n\t\r\n\t\t\treturn Math.sqrt( this.distanceToSquared( v ) );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdistanceToSquared: function ( v ) {\r\n\t\r\n\t\t\tvar dx = this.x - v.x;\r\n\t\t\tvar dy = this.y - v.y;\r\n\t\t\tvar dz = this.z - v.z;\r\n\t\r\n\t\t\treturn dx * dx + dy * dy + dz * dz;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetEulerFromRotationMatrix: function ( m, order ) {\r\n\t\r\n\t\t\tconsole.error( 'THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.' );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetEulerFromQuaternion: function ( q, order ) {\r\n\t\r\n\t\t\tconsole.error( 'THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.' );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetPositionFromMatrix: function ( m ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition().' );\r\n\t\r\n\t\t\treturn this.setFromMatrixPosition( m );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetScaleFromMatrix: function ( m ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale().' );\r\n\t\r\n\t\t\treturn this.setFromMatrixScale( m );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetColumnFromMatrix: function ( index, matrix ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn().' );\r\n\t\r\n\t\t\treturn this.setFromMatrixColumn( index, matrix );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetFromMatrixPosition: function ( m ) {\r\n\t\r\n\t\t\tthis.x = m.elements[ 12 ];\r\n\t\t\tthis.y = m.elements[ 13 ];\r\n\t\t\tthis.z = m.elements[ 14 ];\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetFromMatrixScale: function ( m ) {\r\n\t\r\n\t\t\tvar sx = this.set( m.elements[ 0 ], m.elements[ 1 ], m.elements[ 2 ] ).length();\r\n\t\t\tvar sy = this.set( m.elements[ 4 ], m.elements[ 5 ], m.elements[ 6 ] ).length();\r\n\t\t\tvar sz = this.set( m.elements[ 8 ], m.elements[ 9 ], m.elements[ 10 ] ).length();\r\n\t\r\n\t\t\tthis.x = sx;\r\n\t\t\tthis.y = sy;\r\n\t\t\tthis.z = sz;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetFromMatrixColumn: function ( index, matrix ) {\r\n\t\r\n\t\t\tvar offset = index * 4;\r\n\t\r\n\t\t\tvar me = matrix.elements;\r\n\t\r\n\t\t\tthis.x = me[ offset ];\r\n\t\t\tthis.y = me[ offset + 1 ];\r\n\t\t\tthis.z = me[ offset + 2 ];\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tequals: function ( v ) {\r\n\t\r\n\t\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tfromArray: function ( array, offset ) {\r\n\t\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\t\r\n\t\t\tthis.x = array[ offset ];\r\n\t\t\tthis.y = array[ offset + 1 ];\r\n\t\t\tthis.z = array[ offset + 2 ];\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\ttoArray: function ( array, offset ) {\r\n\t\r\n\t\t\tif ( array === undefined ) array = [];\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\t\r\n\t\t\tarray[ offset ] = this.x;\r\n\t\t\tarray[ offset + 1 ] = this.y;\r\n\t\t\tarray[ offset + 2 ] = this.z;\r\n\t\r\n\t\t\treturn array;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tfromAttribute: function ( attribute, index, offset ) {\r\n\t\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\t\r\n\t\t\tindex = index * attribute.itemSize + offset;\r\n\t\r\n\t\t\tthis.x = attribute.array[ index ];\r\n\t\t\tthis.y = attribute.array[ index + 1 ];\r\n\t\t\tthis.z = attribute.array[ index + 2 ];\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/math/Vector4.js\r\n\t\r\n\t/**\r\n\t * @author supereggbert / http://www.paulbrunt.co.uk/\r\n\t * @author philogb / http://blog.thejit.org/\r\n\t * @author mikael emtinger / http://gomo.se/\r\n\t * @author egraether / http://egraether.com/\r\n\t * @author WestLangley / http://github.com/WestLangley\r\n\t */\r\n\t\r\n\tTHREE.Vector4 = function ( x, y, z, w ) {\r\n\t\r\n\t\tthis.x = x || 0;\r\n\t\tthis.y = y || 0;\r\n\t\tthis.z = z || 0;\r\n\t\tthis.w = ( w !== undefined ) ? w : 1;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Vector4.prototype = {\r\n\t\r\n\t\tconstructor: THREE.Vector4,\r\n\t\r\n\t\tset: function ( x, y, z, w ) {\r\n\t\r\n\t\t\tthis.x = x;\r\n\t\t\tthis.y = y;\r\n\t\t\tthis.z = z;\r\n\t\t\tthis.w = w;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetX: function ( x ) {\r\n\t\r\n\t\t\tthis.x = x;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetY: function ( y ) {\r\n\t\r\n\t\t\tthis.y = y;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetZ: function ( z ) {\r\n\t\r\n\t\t\tthis.z = z;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetW: function ( w ) {\r\n\t\r\n\t\t\tthis.w = w;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetComponent: function ( index, value ) {\r\n\t\r\n\t\t\tswitch ( index ) {\r\n\t\r\n\t\t\t\tcase 0: this.x = value; break;\r\n\t\t\t\tcase 1: this.y = value; break;\r\n\t\t\t\tcase 2: this.z = value; break;\r\n\t\t\t\tcase 3: this.w = value; break;\r\n\t\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetComponent: function ( index ) {\r\n\t\r\n\t\t\tswitch ( index ) {\r\n\t\r\n\t\t\t\tcase 0: return this.x;\r\n\t\t\t\tcase 1: return this.y;\r\n\t\t\t\tcase 2: return this.z;\r\n\t\t\t\tcase 3: return this.w;\r\n\t\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclone: function () {\r\n\t\r\n\t\t\treturn new this.constructor( this.x, this.y, this.z, this.w );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopy: function ( v ) {\r\n\t\r\n\t\t\tthis.x = v.x;\r\n\t\t\tthis.y = v.y;\r\n\t\t\tthis.z = v.z;\r\n\t\t\tthis.w = ( v.w !== undefined ) ? v.w : 1;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tadd: function ( v, w ) {\r\n\t\r\n\t\t\tif ( w !== undefined ) {\r\n\t\r\n\t\t\t\tconsole.warn( 'THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\r\n\t\t\t\treturn this.addVectors( v, w );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.x += v.x;\r\n\t\t\tthis.y += v.y;\r\n\t\t\tthis.z += v.z;\r\n\t\t\tthis.w += v.w;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\taddScalar: function ( s ) {\r\n\t\r\n\t\t\tthis.x += s;\r\n\t\t\tthis.y += s;\r\n\t\t\tthis.z += s;\r\n\t\t\tthis.w += s;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\taddVectors: function ( a, b ) {\r\n\t\r\n\t\t\tthis.x = a.x + b.x;\r\n\t\t\tthis.y = a.y + b.y;\r\n\t\t\tthis.z = a.z + b.z;\r\n\t\t\tthis.w = a.w + b.w;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\taddScaledVector: function ( v, s ) {\r\n\t\r\n\t\t\tthis.x += v.x * s;\r\n\t\t\tthis.y += v.y * s;\r\n\t\t\tthis.z += v.z * s;\r\n\t\t\tthis.w += v.w * s;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsub: function ( v, w ) {\r\n\t\r\n\t\t\tif ( w !== undefined ) {\r\n\t\r\n\t\t\t\tconsole.warn( 'THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\r\n\t\t\t\treturn this.subVectors( v, w );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.x -= v.x;\r\n\t\t\tthis.y -= v.y;\r\n\t\t\tthis.z -= v.z;\r\n\t\t\tthis.w -= v.w;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsubScalar: function ( s ) {\r\n\t\r\n\t\t\tthis.x -= s;\r\n\t\t\tthis.y -= s;\r\n\t\t\tthis.z -= s;\r\n\t\t\tthis.w -= s;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsubVectors: function ( a, b ) {\r\n\t\r\n\t\t\tthis.x = a.x - b.x;\r\n\t\t\tthis.y = a.y - b.y;\r\n\t\t\tthis.z = a.z - b.z;\r\n\t\t\tthis.w = a.w - b.w;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmultiplyScalar: function ( scalar ) {\r\n\t\r\n\t\t\tthis.x *= scalar;\r\n\t\t\tthis.y *= scalar;\r\n\t\t\tthis.z *= scalar;\r\n\t\t\tthis.w *= scalar;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tapplyMatrix4: function ( m ) {\r\n\t\r\n\t\t\tvar x = this.x;\r\n\t\t\tvar y = this.y;\r\n\t\t\tvar z = this.z;\r\n\t\t\tvar w = this.w;\r\n\t\r\n\t\t\tvar e = m.elements;\r\n\t\r\n\t\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] * w;\r\n\t\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] * w;\r\n\t\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] * w;\r\n\t\t\tthis.w = e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] * w;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdivideScalar: function ( scalar ) {\r\n\t\r\n\t\t\tif ( scalar !== 0 ) {\r\n\t\r\n\t\t\t\tvar invScalar = 1 / scalar;\r\n\t\r\n\t\t\t\tthis.x *= invScalar;\r\n\t\t\t\tthis.y *= invScalar;\r\n\t\t\t\tthis.z *= invScalar;\r\n\t\t\t\tthis.w *= invScalar;\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tthis.x = 0;\r\n\t\t\t\tthis.y = 0;\r\n\t\t\t\tthis.z = 0;\r\n\t\t\t\tthis.w = 1;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetAxisAngleFromQuaternion: function ( q ) {\r\n\t\r\n\t\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/quaternionToAngle/index.htm\r\n\t\r\n\t\t\t// q is assumed to be normalized\r\n\t\r\n\t\t\tthis.w = 2 * Math.acos( q.w );\r\n\t\r\n\t\t\tvar s = Math.sqrt( 1 - q.w * q.w );\r\n\t\r\n\t\t\tif ( s < 0.0001 ) {\r\n\t\r\n\t\t\t\t this.x = 1;\r\n\t\t\t\t this.y = 0;\r\n\t\t\t\t this.z = 0;\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\t this.x = q.x / s;\r\n\t\t\t\t this.y = q.y / s;\r\n\t\t\t\t this.z = q.z / s;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetAxisAngleFromRotationMatrix: function ( m ) {\r\n\t\r\n\t\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToAngle/index.htm\r\n\t\r\n\t\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\r\n\t\r\n\t\t\tvar angle, x, y, z,\t\t// variables for result\r\n\t\t\t\tepsilon = 0.01,\t\t// margin to allow for rounding errors\r\n\t\t\t\tepsilon2 = 0.1,\t\t// margin to distinguish between 0 and 180 degrees\r\n\t\r\n\t\t\t\tte = m.elements,\r\n\t\r\n\t\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\r\n\t\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\r\n\t\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\r\n\t\r\n\t\t\tif ( ( Math.abs( m12 - m21 ) < epsilon )\r\n\t\t\t   && ( Math.abs( m13 - m31 ) < epsilon )\r\n\t\t\t   && ( Math.abs( m23 - m32 ) < epsilon ) ) {\r\n\t\r\n\t\t\t\t// singularity found\r\n\t\t\t\t// first check for identity matrix which must have +1 for all terms\r\n\t\t\t\t// in leading diagonal and zero in other terms\r\n\t\r\n\t\t\t\tif ( ( Math.abs( m12 + m21 ) < epsilon2 )\r\n\t\t\t\t   && ( Math.abs( m13 + m31 ) < epsilon2 )\r\n\t\t\t\t   && ( Math.abs( m23 + m32 ) < epsilon2 )\r\n\t\t\t\t   && ( Math.abs( m11 + m22 + m33 - 3 ) < epsilon2 ) ) {\r\n\t\r\n\t\t\t\t\t// this singularity is identity matrix so angle = 0\r\n\t\r\n\t\t\t\t\tthis.set( 1, 0, 0, 0 );\r\n\t\r\n\t\t\t\t\treturn this; // zero angle, arbitrary axis\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// otherwise this singularity is angle = 180\r\n\t\r\n\t\t\t\tangle = Math.PI;\r\n\t\r\n\t\t\t\tvar xx = ( m11 + 1 ) / 2;\r\n\t\t\t\tvar yy = ( m22 + 1 ) / 2;\r\n\t\t\t\tvar zz = ( m33 + 1 ) / 2;\r\n\t\t\t\tvar xy = ( m12 + m21 ) / 4;\r\n\t\t\t\tvar xz = ( m13 + m31 ) / 4;\r\n\t\t\t\tvar yz = ( m23 + m32 ) / 4;\r\n\t\r\n\t\t\t\tif ( ( xx > yy ) && ( xx > zz ) ) {\r\n\t\r\n\t\t\t\t\t// m11 is the largest diagonal term\r\n\t\r\n\t\t\t\t\tif ( xx < epsilon ) {\r\n\t\r\n\t\t\t\t\t\tx = 0;\r\n\t\t\t\t\t\ty = 0.707106781;\r\n\t\t\t\t\t\tz = 0.707106781;\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\tx = Math.sqrt( xx );\r\n\t\t\t\t\t\ty = xy / x;\r\n\t\t\t\t\t\tz = xz / x;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t} else if ( yy > zz ) {\r\n\t\r\n\t\t\t\t\t// m22 is the largest diagonal term\r\n\t\r\n\t\t\t\t\tif ( yy < epsilon ) {\r\n\t\r\n\t\t\t\t\t\tx = 0.707106781;\r\n\t\t\t\t\t\ty = 0;\r\n\t\t\t\t\t\tz = 0.707106781;\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\ty = Math.sqrt( yy );\r\n\t\t\t\t\t\tx = xy / y;\r\n\t\t\t\t\t\tz = yz / y;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t// m33 is the largest diagonal term so base result on this\r\n\t\r\n\t\t\t\t\tif ( zz < epsilon ) {\r\n\t\r\n\t\t\t\t\t\tx = 0.707106781;\r\n\t\t\t\t\t\ty = 0.707106781;\r\n\t\t\t\t\t\tz = 0;\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\tz = Math.sqrt( zz );\r\n\t\t\t\t\t\tx = xz / z;\r\n\t\t\t\t\t\ty = yz / z;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tthis.set( x, y, z, angle );\r\n\t\r\n\t\t\t\treturn this; // return 180 deg rotation\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// as we have reached here there are no singularities so we can handle normally\r\n\t\r\n\t\t\tvar s = Math.sqrt( ( m32 - m23 ) * ( m32 - m23 )\r\n\t\t\t\t\t\t\t  + ( m13 - m31 ) * ( m13 - m31 )\r\n\t\t\t\t\t\t\t  + ( m21 - m12 ) * ( m21 - m12 ) ); // used to normalize\r\n\t\r\n\t\t\tif ( Math.abs( s ) < 0.001 ) s = 1;\r\n\t\r\n\t\t\t// prevent divide by zero, should not happen if matrix is orthogonal and should be\r\n\t\t\t// caught by singularity test above, but I've left it in just in case\r\n\t\r\n\t\t\tthis.x = ( m32 - m23 ) / s;\r\n\t\t\tthis.y = ( m13 - m31 ) / s;\r\n\t\t\tthis.z = ( m21 - m12 ) / s;\r\n\t\t\tthis.w = Math.acos( ( m11 + m22 + m33 - 1 ) / 2 );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmin: function ( v ) {\r\n\t\r\n\t\t\tif ( this.x > v.x ) {\r\n\t\r\n\t\t\t\tthis.x = v.x;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( this.y > v.y ) {\r\n\t\r\n\t\t\t\tthis.y = v.y;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( this.z > v.z ) {\r\n\t\r\n\t\t\t\tthis.z = v.z;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( this.w > v.w ) {\r\n\t\r\n\t\t\t\tthis.w = v.w;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmax: function ( v ) {\r\n\t\r\n\t\t\tif ( this.x < v.x ) {\r\n\t\r\n\t\t\t\tthis.x = v.x;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( this.y < v.y ) {\r\n\t\r\n\t\t\t\tthis.y = v.y;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( this.z < v.z ) {\r\n\t\r\n\t\t\t\tthis.z = v.z;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( this.w < v.w ) {\r\n\t\r\n\t\t\t\tthis.w = v.w;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclamp: function ( min, max ) {\r\n\t\r\n\t\t\t// This function assumes min < max, if this assumption isn't true it will not operate correctly\r\n\t\r\n\t\t\tif ( this.x < min.x ) {\r\n\t\r\n\t\t\t\tthis.x = min.x;\r\n\t\r\n\t\t\t} else if ( this.x > max.x ) {\r\n\t\r\n\t\t\t\tthis.x = max.x;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( this.y < min.y ) {\r\n\t\r\n\t\t\t\tthis.y = min.y;\r\n\t\r\n\t\t\t} else if ( this.y > max.y ) {\r\n\t\r\n\t\t\t\tthis.y = max.y;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( this.z < min.z ) {\r\n\t\r\n\t\t\t\tthis.z = min.z;\r\n\t\r\n\t\t\t} else if ( this.z > max.z ) {\r\n\t\r\n\t\t\t\tthis.z = max.z;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( this.w < min.w ) {\r\n\t\r\n\t\t\t\tthis.w = min.w;\r\n\t\r\n\t\t\t} else if ( this.w > max.w ) {\r\n\t\r\n\t\t\t\tthis.w = max.w;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclampScalar: function () {\r\n\t\r\n\t\t\tvar min, max;\r\n\t\r\n\t\t\treturn function clampScalar( minVal, maxVal ) {\r\n\t\r\n\t\t\t\tif ( min === undefined ) {\r\n\t\r\n\t\t\t\t\tmin = new THREE.Vector4();\r\n\t\t\t\t\tmax = new THREE.Vector4();\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tmin.set( minVal, minVal, minVal, minVal );\r\n\t\t\t\tmax.set( maxVal, maxVal, maxVal, maxVal );\r\n\t\r\n\t\t\t\treturn this.clamp( min, max );\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tfloor: function () {\r\n\t\r\n\t\t\tthis.x = Math.floor( this.x );\r\n\t\t\tthis.y = Math.floor( this.y );\r\n\t\t\tthis.z = Math.floor( this.z );\r\n\t\t\tthis.w = Math.floor( this.w );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tceil: function () {\r\n\t\r\n\t\t\tthis.x = Math.ceil( this.x );\r\n\t\t\tthis.y = Math.ceil( this.y );\r\n\t\t\tthis.z = Math.ceil( this.z );\r\n\t\t\tthis.w = Math.ceil( this.w );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tround: function () {\r\n\t\r\n\t\t\tthis.x = Math.round( this.x );\r\n\t\t\tthis.y = Math.round( this.y );\r\n\t\t\tthis.z = Math.round( this.z );\r\n\t\t\tthis.w = Math.round( this.w );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\troundToZero: function () {\r\n\t\r\n\t\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\r\n\t\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\r\n\t\t\tthis.z = ( this.z < 0 ) ? Math.ceil( this.z ) : Math.floor( this.z );\r\n\t\t\tthis.w = ( this.w < 0 ) ? Math.ceil( this.w ) : Math.floor( this.w );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tnegate: function () {\r\n\t\r\n\t\t\tthis.x = - this.x;\r\n\t\t\tthis.y = - this.y;\r\n\t\t\tthis.z = - this.z;\r\n\t\t\tthis.w = - this.w;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdot: function ( v ) {\r\n\t\r\n\t\t\treturn this.x * v.x + this.y * v.y + this.z * v.z + this.w * v.w;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tlengthSq: function () {\r\n\t\r\n\t\t\treturn this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tlength: function () {\r\n\t\r\n\t\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tlengthManhattan: function () {\r\n\t\r\n\t\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z ) + Math.abs( this.w );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tnormalize: function () {\r\n\t\r\n\t\t\treturn this.divideScalar( this.length() );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetLength: function ( l ) {\r\n\t\r\n\t\t\tvar oldLength = this.length();\r\n\t\r\n\t\t\tif ( oldLength !== 0 && l !== oldLength ) {\r\n\t\r\n\t\t\t\tthis.multiplyScalar( l / oldLength );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tlerp: function ( v, alpha ) {\r\n\t\r\n\t\t\tthis.x += ( v.x - this.x ) * alpha;\r\n\t\t\tthis.y += ( v.y - this.y ) * alpha;\r\n\t\t\tthis.z += ( v.z - this.z ) * alpha;\r\n\t\t\tthis.w += ( v.w - this.w ) * alpha;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tlerpVectors: function ( v1, v2, alpha ) {\r\n\t\r\n\t\t\tthis.subVectors( v2, v1 ).multiplyScalar( alpha ).add( v1 );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tequals: function ( v ) {\r\n\t\r\n\t\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) && ( v.w === this.w ) );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tfromArray: function ( array, offset ) {\r\n\t\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\t\r\n\t\t\tthis.x = array[ offset ];\r\n\t\t\tthis.y = array[ offset + 1 ];\r\n\t\t\tthis.z = array[ offset + 2 ];\r\n\t\t\tthis.w = array[ offset + 3 ];\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\ttoArray: function ( array, offset ) {\r\n\t\r\n\t\t\tif ( array === undefined ) array = [];\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\t\r\n\t\t\tarray[ offset ] = this.x;\r\n\t\t\tarray[ offset + 1 ] = this.y;\r\n\t\t\tarray[ offset + 2 ] = this.z;\r\n\t\t\tarray[ offset + 3 ] = this.w;\r\n\t\r\n\t\t\treturn array;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tfromAttribute: function ( attribute, index, offset ) {\r\n\t\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\t\r\n\t\t\tindex = index * attribute.itemSize + offset;\r\n\t\r\n\t\t\tthis.x = attribute.array[ index ];\r\n\t\t\tthis.y = attribute.array[ index + 1 ];\r\n\t\t\tthis.z = attribute.array[ index + 2 ];\r\n\t\t\tthis.w = attribute.array[ index + 3 ];\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/math/Euler.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author WestLangley / http://github.com/WestLangley\r\n\t * @author bhouston / http://exocortex.com\r\n\t */\r\n\t\r\n\tTHREE.Euler = function ( x, y, z, order ) {\r\n\t\r\n\t\tthis._x = x || 0;\r\n\t\tthis._y = y || 0;\r\n\t\tthis._z = z || 0;\r\n\t\tthis._order = order || THREE.Euler.DefaultOrder;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Euler.RotationOrders = [ 'XYZ', 'YZX', 'ZXY', 'XZY', 'YXZ', 'ZYX' ];\r\n\t\r\n\tTHREE.Euler.DefaultOrder = 'XYZ';\r\n\t\r\n\tTHREE.Euler.prototype = {\r\n\t\r\n\t\tconstructor: THREE.Euler,\r\n\t\r\n\t\tget x () {\r\n\t\r\n\t\t\treturn this._x;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tset x ( value ) {\r\n\t\r\n\t\t\tthis._x = value;\r\n\t\t\tthis.onChangeCallback();\r\n\t\r\n\t\t},\r\n\t\r\n\t\tget y () {\r\n\t\r\n\t\t\treturn this._y;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tset y ( value ) {\r\n\t\r\n\t\t\tthis._y = value;\r\n\t\t\tthis.onChangeCallback();\r\n\t\r\n\t\t},\r\n\t\r\n\t\tget z () {\r\n\t\r\n\t\t\treturn this._z;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tset z ( value ) {\r\n\t\r\n\t\t\tthis._z = value;\r\n\t\t\tthis.onChangeCallback();\r\n\t\r\n\t\t},\r\n\t\r\n\t\tget order () {\r\n\t\r\n\t\t\treturn this._order;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tset order ( value ) {\r\n\t\r\n\t\t\tthis._order = value;\r\n\t\t\tthis.onChangeCallback();\r\n\t\r\n\t\t},\r\n\t\r\n\t\tset: function ( x, y, z, order ) {\r\n\t\r\n\t\t\tthis._x = x;\r\n\t\t\tthis._y = y;\r\n\t\t\tthis._z = z;\r\n\t\t\tthis._order = order || this._order;\r\n\t\r\n\t\t\tthis.onChangeCallback();\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclone: function () {\r\n\t\r\n\t\t\treturn new this.constructor( this._x, this._y, this._z, this._order);\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopy: function ( euler ) {\r\n\t\r\n\t\t\tthis._x = euler._x;\r\n\t\t\tthis._y = euler._y;\r\n\t\t\tthis._z = euler._z;\r\n\t\t\tthis._order = euler._order;\r\n\t\r\n\t\t\tthis.onChangeCallback();\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetFromRotationMatrix: function ( m, order, update ) {\r\n\t\r\n\t\t\tvar clamp = THREE.Math.clamp;\r\n\t\r\n\t\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\r\n\t\r\n\t\t\tvar te = m.elements;\r\n\t\t\tvar m11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ];\r\n\t\t\tvar m21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ];\r\n\t\t\tvar m31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\r\n\t\r\n\t\t\torder = order || this._order;\r\n\t\r\n\t\t\tif ( order === 'XYZ' ) {\r\n\t\r\n\t\t\t\tthis._y = Math.asin( clamp( m13, - 1, 1 ) );\r\n\t\r\n\t\t\t\tif ( Math.abs( m13 ) < 0.99999 ) {\r\n\t\r\n\t\t\t\t\tthis._x = Math.atan2( - m23, m33 );\r\n\t\t\t\t\tthis._z = Math.atan2( - m12, m11 );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tthis._x = Math.atan2( m32, m22 );\r\n\t\t\t\t\tthis._z = 0;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t} else if ( order === 'YXZ' ) {\r\n\t\r\n\t\t\t\tthis._x = Math.asin( - clamp( m23, - 1, 1 ) );\r\n\t\r\n\t\t\t\tif ( Math.abs( m23 ) < 0.99999 ) {\r\n\t\r\n\t\t\t\t\tthis._y = Math.atan2( m13, m33 );\r\n\t\t\t\t\tthis._z = Math.atan2( m21, m22 );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tthis._y = Math.atan2( - m31, m11 );\r\n\t\t\t\t\tthis._z = 0;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t} else if ( order === 'ZXY' ) {\r\n\t\r\n\t\t\t\tthis._x = Math.asin( clamp( m32, - 1, 1 ) );\r\n\t\r\n\t\t\t\tif ( Math.abs( m32 ) < 0.99999 ) {\r\n\t\r\n\t\t\t\t\tthis._y = Math.atan2( - m31, m33 );\r\n\t\t\t\t\tthis._z = Math.atan2( - m12, m22 );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tthis._y = 0;\r\n\t\t\t\t\tthis._z = Math.atan2( m21, m11 );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t} else if ( order === 'ZYX' ) {\r\n\t\r\n\t\t\t\tthis._y = Math.asin( - clamp( m31, - 1, 1 ) );\r\n\t\r\n\t\t\t\tif ( Math.abs( m31 ) < 0.99999 ) {\r\n\t\r\n\t\t\t\t\tthis._x = Math.atan2( m32, m33 );\r\n\t\t\t\t\tthis._z = Math.atan2( m21, m11 );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tthis._x = 0;\r\n\t\t\t\t\tthis._z = Math.atan2( - m12, m22 );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t} else if ( order === 'YZX' ) {\r\n\t\r\n\t\t\t\tthis._z = Math.asin( clamp( m21, - 1, 1 ) );\r\n\t\r\n\t\t\t\tif ( Math.abs( m21 ) < 0.99999 ) {\r\n\t\r\n\t\t\t\t\tthis._x = Math.atan2( - m23, m22 );\r\n\t\t\t\t\tthis._y = Math.atan2( - m31, m11 );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tthis._x = 0;\r\n\t\t\t\t\tthis._y = Math.atan2( m13, m33 );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t} else if ( order === 'XZY' ) {\r\n\t\r\n\t\t\t\tthis._z = Math.asin( - clamp( m12, - 1, 1 ) );\r\n\t\r\n\t\t\t\tif ( Math.abs( m12 ) < 0.99999 ) {\r\n\t\r\n\t\t\t\t\tthis._x = Math.atan2( m32, m22 );\r\n\t\t\t\t\tthis._y = Math.atan2( m13, m11 );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tthis._x = Math.atan2( - m23, m33 );\r\n\t\t\t\t\tthis._y = 0;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tconsole.warn( 'THREE.Euler: .setFromRotationMatrix() given unsupported order: ' + order )\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis._order = order;\r\n\t\r\n\t\t\tif ( update !== false ) this.onChangeCallback();\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetFromQuaternion: function () {\r\n\t\r\n\t\t\tvar matrix;\r\n\t\r\n\t\t\treturn function ( q, order, update ) {\r\n\t\r\n\t\t\t\tif ( matrix === undefined ) matrix = new THREE.Matrix4();\r\n\t\t\t\tmatrix.makeRotationFromQuaternion( q );\r\n\t\t\t\tthis.setFromRotationMatrix( matrix, order, update );\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tsetFromVector3: function ( v, order ) {\r\n\t\r\n\t\t\treturn this.set( v.x, v.y, v.z, order || this._order );\r\n\t\r\n\t\t},\r\n\t\r\n\t\treorder: function () {\r\n\t\r\n\t\t\t// WARNING: this discards revolution information -bhouston\r\n\t\r\n\t\t\tvar q = new THREE.Quaternion();\r\n\t\r\n\t\t\treturn function ( newOrder ) {\r\n\t\r\n\t\t\t\tq.setFromEuler( this );\r\n\t\t\t\tthis.setFromQuaternion( q, newOrder );\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tequals: function ( euler ) {\r\n\t\r\n\t\t\treturn ( euler._x === this._x ) && ( euler._y === this._y ) && ( euler._z === this._z ) && ( euler._order === this._order );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tfromArray: function ( array ) {\r\n\t\r\n\t\t\tthis._x = array[ 0 ];\r\n\t\t\tthis._y = array[ 1 ];\r\n\t\t\tthis._z = array[ 2 ];\r\n\t\t\tif ( array[ 3 ] !== undefined ) this._order = array[ 3 ];\r\n\t\r\n\t\t\tthis.onChangeCallback();\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\ttoArray: function ( array, offset ) {\r\n\t\r\n\t\t\tif ( array === undefined ) array = [];\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\t\r\n\t\t\tarray[ offset ] = this._x;\r\n\t\t\tarray[ offset + 1 ] = this._y;\r\n\t\t\tarray[ offset + 2 ] = this._z;\r\n\t\t\tarray[ offset + 3 ] = this._order;\r\n\t\r\n\t\t\treturn array;\r\n\t\r\n\t\t},\r\n\t\r\n\t\ttoVector3: function ( optionalResult ) {\r\n\t\r\n\t\t\tif ( optionalResult ) {\r\n\t\r\n\t\t\t\treturn optionalResult.set( this._x, this._y, this._z );\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\treturn new THREE.Vector3( this._x, this._y, this._z );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\tonChange: function ( callback ) {\r\n\t\r\n\t\t\tthis.onChangeCallback = callback;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tonChangeCallback: function () {}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/math/Line3.js\r\n\t\r\n\t/**\r\n\t * @author bhouston / http://exocortex.com\r\n\t */\r\n\t\r\n\tTHREE.Line3 = function ( start, end ) {\r\n\t\r\n\t\tthis.start = ( start !== undefined ) ? start : new THREE.Vector3();\r\n\t\tthis.end = ( end !== undefined ) ? end : new THREE.Vector3();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Line3.prototype = {\r\n\t\r\n\t\tconstructor: THREE.Line3,\r\n\t\r\n\t\tset: function ( start, end ) {\r\n\t\r\n\t\t\tthis.start.copy( start );\r\n\t\t\tthis.end.copy( end );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclone: function () {\r\n\t\r\n\t\t\treturn new this.constructor().copy( this );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopy: function ( line ) {\r\n\t\r\n\t\t\tthis.start.copy( line.start );\r\n\t\t\tthis.end.copy( line.end );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcenter: function ( optionalTarget ) {\r\n\t\r\n\t\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\t\treturn result.addVectors( this.start, this.end ).multiplyScalar( 0.5 );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdelta: function ( optionalTarget ) {\r\n\t\r\n\t\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\t\treturn result.subVectors( this.end, this.start );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdistanceSq: function () {\r\n\t\r\n\t\t\treturn this.start.distanceToSquared( this.end );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdistance: function () {\r\n\t\r\n\t\t\treturn this.start.distanceTo( this.end );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tat: function ( t, optionalTarget ) {\r\n\t\r\n\t\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\r\n\t\t\treturn this.delta( result ).multiplyScalar( t ).add( this.start );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclosestPointToPointParameter: function () {\r\n\t\r\n\t\t\tvar startP = new THREE.Vector3();\r\n\t\t\tvar startEnd = new THREE.Vector3();\r\n\t\r\n\t\t\treturn function ( point, clampToLine ) {\r\n\t\r\n\t\t\t\tstartP.subVectors( point, this.start );\r\n\t\t\t\tstartEnd.subVectors( this.end, this.start );\r\n\t\r\n\t\t\t\tvar startEnd2 = startEnd.dot( startEnd );\r\n\t\t\t\tvar startEnd_startP = startEnd.dot( startP );\r\n\t\r\n\t\t\t\tvar t = startEnd_startP / startEnd2;\r\n\t\r\n\t\t\t\tif ( clampToLine ) {\r\n\t\r\n\t\t\t\t\tt = THREE.Math.clamp( t, 0, 1 );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn t;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tclosestPointToPoint: function ( point, clampToLine, optionalTarget ) {\r\n\t\r\n\t\t\tvar t = this.closestPointToPointParameter( point, clampToLine );\r\n\t\r\n\t\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\r\n\t\t\treturn this.delta( result ).multiplyScalar( t ).add( this.start );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tapplyMatrix4: function ( matrix ) {\r\n\t\r\n\t\t\tthis.start.applyMatrix4( matrix );\r\n\t\t\tthis.end.applyMatrix4( matrix );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tequals: function ( line ) {\r\n\t\r\n\t\t\treturn line.start.equals( this.start ) && line.end.equals( this.end );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/math/Box2.js\r\n\t\r\n\t/**\r\n\t * @author bhouston / http://exocortex.com\r\n\t */\r\n\t\r\n\tTHREE.Box2 = function ( min, max ) {\r\n\t\r\n\t\tthis.min = ( min !== undefined ) ? min : new THREE.Vector2( Infinity, Infinity );\r\n\t\tthis.max = ( max !== undefined ) ? max : new THREE.Vector2( - Infinity, - Infinity );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Box2.prototype = {\r\n\t\r\n\t\tconstructor: THREE.Box2,\r\n\t\r\n\t\tset: function ( min, max ) {\r\n\t\r\n\t\t\tthis.min.copy( min );\r\n\t\t\tthis.max.copy( max );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetFromPoints: function ( points ) {\r\n\t\r\n\t\t\tthis.makeEmpty();\r\n\t\r\n\t\t\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\tthis.expandByPoint( points[ i ] )\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetFromCenterAndSize: function () {\r\n\t\r\n\t\t\tvar v1 = new THREE.Vector2();\r\n\t\r\n\t\t\treturn function ( center, size ) {\r\n\t\r\n\t\t\t\tvar halfSize = v1.copy( size ).multiplyScalar( 0.5 );\r\n\t\t\t\tthis.min.copy( center ).sub( halfSize );\r\n\t\t\t\tthis.max.copy( center ).add( halfSize );\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\t\r\n\t\tclone: function () {\r\n\t\r\n\t\t\treturn new this.constructor().copy( this );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopy: function ( box ) {\r\n\t\r\n\t\t\tthis.min.copy( box.min );\r\n\t\t\tthis.max.copy( box.max );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmakeEmpty: function () {\r\n\t\r\n\t\t\tthis.min.x = this.min.y = Infinity;\r\n\t\t\tthis.max.x = this.max.y = - Infinity;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tempty: function () {\r\n\t\r\n\t\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\r\n\t\r\n\t\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcenter: function ( optionalTarget ) {\r\n\t\r\n\t\t\tvar result = optionalTarget || new THREE.Vector2();\r\n\t\t\treturn result.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsize: function ( optionalTarget ) {\r\n\t\r\n\t\t\tvar result = optionalTarget || new THREE.Vector2();\r\n\t\t\treturn result.subVectors( this.max, this.min );\r\n\t\r\n\t\t},\r\n\t\r\n\t\texpandByPoint: function ( point ) {\r\n\t\r\n\t\t\tthis.min.min( point );\r\n\t\t\tthis.max.max( point );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\texpandByVector: function ( vector ) {\r\n\t\r\n\t\t\tthis.min.sub( vector );\r\n\t\t\tthis.max.add( vector );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\texpandByScalar: function ( scalar ) {\r\n\t\r\n\t\t\tthis.min.addScalar( - scalar );\r\n\t\t\tthis.max.addScalar( scalar );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcontainsPoint: function ( point ) {\r\n\t\r\n\t\t\tif ( point.x < this.min.x || point.x > this.max.x ||\r\n\t\t\t     point.y < this.min.y || point.y > this.max.y ) {\r\n\t\r\n\t\t\t\treturn false;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn true;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcontainsBox: function ( box ) {\r\n\t\r\n\t\t\tif ( ( this.min.x <= box.min.x ) && ( box.max.x <= this.max.x ) &&\r\n\t\t\t     ( this.min.y <= box.min.y ) && ( box.max.y <= this.max.y ) ) {\r\n\t\r\n\t\t\t\treturn true;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn false;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetParameter: function ( point, optionalTarget ) {\r\n\t\r\n\t\t\t// This can potentially have a divide by zero if the box\r\n\t\t\t// has a size dimension of 0.\r\n\t\r\n\t\t\tvar result = optionalTarget || new THREE.Vector2();\r\n\t\r\n\t\t\treturn result.set(\r\n\t\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\r\n\t\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y )\r\n\t\t\t);\r\n\t\r\n\t\t},\r\n\t\r\n\t\tisIntersectionBox: function ( box ) {\r\n\t\r\n\t\t\t// using 6 splitting planes to rule out intersections.\r\n\t\r\n\t\t\tif ( box.max.x < this.min.x || box.min.x > this.max.x ||\r\n\t\t\t     box.max.y < this.min.y || box.min.y > this.max.y ) {\r\n\t\r\n\t\t\t\treturn false;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn true;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclampPoint: function ( point, optionalTarget ) {\r\n\t\r\n\t\t\tvar result = optionalTarget || new THREE.Vector2();\r\n\t\t\treturn result.copy( point ).clamp( this.min, this.max );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdistanceToPoint: function () {\r\n\t\r\n\t\t\tvar v1 = new THREE.Vector2();\r\n\t\r\n\t\t\treturn function ( point ) {\r\n\t\r\n\t\t\t\tvar clampedPoint = v1.copy( point ).clamp( this.min, this.max );\r\n\t\t\t\treturn clampedPoint.sub( point ).length();\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tintersect: function ( box ) {\r\n\t\r\n\t\t\tthis.min.max( box.min );\r\n\t\t\tthis.max.min( box.max );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tunion: function ( box ) {\r\n\t\r\n\t\t\tthis.min.min( box.min );\r\n\t\t\tthis.max.max( box.max );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\ttranslate: function ( offset ) {\r\n\t\r\n\t\t\tthis.min.add( offset );\r\n\t\t\tthis.max.add( offset );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tequals: function ( box ) {\r\n\t\r\n\t\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/math/Box3.js\r\n\t\r\n\t/**\r\n\t * @author bhouston / http://exocortex.com\r\n\t * @author WestLangley / http://github.com/WestLangley\r\n\t */\r\n\t\r\n\tTHREE.Box3 = function ( min, max ) {\r\n\t\r\n\t\tthis.min = ( min !== undefined ) ? min : new THREE.Vector3( Infinity, Infinity, Infinity );\r\n\t\tthis.max = ( max !== undefined ) ? max : new THREE.Vector3( - Infinity, - Infinity, - Infinity );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Box3.prototype = {\r\n\t\r\n\t\tconstructor: THREE.Box3,\r\n\t\r\n\t\tset: function ( min, max ) {\r\n\t\r\n\t\t\tthis.min.copy( min );\r\n\t\t\tthis.max.copy( max );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetFromPoints: function ( points ) {\r\n\t\r\n\t\t\tthis.makeEmpty();\r\n\t\r\n\t\t\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\tthis.expandByPoint( points[ i ] );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetFromCenterAndSize: function () {\r\n\t\r\n\t\t\tvar v1 = new THREE.Vector3();\r\n\t\r\n\t\t\treturn function ( center, size ) {\r\n\t\r\n\t\t\t\tvar halfSize = v1.copy( size ).multiplyScalar( 0.5 );\r\n\t\r\n\t\t\t\tthis.min.copy( center ).sub( halfSize );\r\n\t\t\t\tthis.max.copy( center ).add( halfSize );\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tsetFromObject: function () {\r\n\t\r\n\t\t\t// Computes the world-axis-aligned bounding box of an object (including its children),\r\n\t\t\t// accounting for both the object's, and children's, world transforms\r\n\t\r\n\t\t\tvar v1 = new THREE.Vector3();\r\n\t\r\n\t\t\treturn function ( object ) {\r\n\t\r\n\t\t\t\tvar scope = this;\r\n\t\r\n\t\t\t\tobject.updateMatrixWorld( true );\r\n\t\r\n\t\t\t\tthis.makeEmpty();\r\n\t\r\n\t\t\t\tobject.traverse( function ( node ) {\r\n\t\r\n\t\t\t\t\tvar geometry = node.geometry;\r\n\t\r\n\t\t\t\t\tif ( geometry !== undefined ) {\r\n\t\r\n\t\t\t\t\t\tif ( geometry instanceof THREE.Geometry ) {\r\n\t\r\n\t\t\t\t\t\t\tvar vertices = geometry.vertices;\r\n\t\r\n\t\t\t\t\t\t\tfor ( var i = 0, il = vertices.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\t\t\t\t\tv1.copy( vertices[ i ] );\r\n\t\r\n\t\t\t\t\t\t\t\tv1.applyMatrix4( node.matrixWorld );\r\n\t\r\n\t\t\t\t\t\t\t\tscope.expandByPoint( v1 );\r\n\t\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t} else if ( geometry instanceof THREE.BufferGeometry && geometry.attributes[ 'position' ] !== undefined ) {\r\n\t\r\n\t\t\t\t\t\t\tvar positions = geometry.attributes[ 'position' ].array;\r\n\t\r\n\t\t\t\t\t\t\tfor ( var i = 0, il = positions.length; i < il; i += 3 ) {\r\n\t\r\n\t\t\t\t\t\t\t\tv1.set( positions[ i ], positions[ i + 1 ], positions[ i + 2 ] );\r\n\t\r\n\t\t\t\t\t\t\t\tv1.applyMatrix4( node.matrixWorld );\r\n\t\r\n\t\t\t\t\t\t\t\tscope.expandByPoint( v1 );\r\n\t\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t} );\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tclone: function () {\r\n\t\r\n\t\t\treturn new this.constructor().copy( this );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopy: function ( box ) {\r\n\t\r\n\t\t\tthis.min.copy( box.min );\r\n\t\t\tthis.max.copy( box.max );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmakeEmpty: function () {\r\n\t\r\n\t\t\tthis.min.x = this.min.y = this.min.z = Infinity;\r\n\t\t\tthis.max.x = this.max.y = this.max.z = - Infinity;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tempty: function () {\r\n\t\r\n\t\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\r\n\t\r\n\t\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y ) || ( this.max.z < this.min.z );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcenter: function ( optionalTarget ) {\r\n\t\r\n\t\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\t\treturn result.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsize: function ( optionalTarget ) {\r\n\t\r\n\t\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\t\treturn result.subVectors( this.max, this.min );\r\n\t\r\n\t\t},\r\n\t\r\n\t\texpandByPoint: function ( point ) {\r\n\t\r\n\t\t\tthis.min.min( point );\r\n\t\t\tthis.max.max( point );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\texpandByVector: function ( vector ) {\r\n\t\r\n\t\t\tthis.min.sub( vector );\r\n\t\t\tthis.max.add( vector );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\texpandByScalar: function ( scalar ) {\r\n\t\r\n\t\t\tthis.min.addScalar( - scalar );\r\n\t\t\tthis.max.addScalar( scalar );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcontainsPoint: function ( point ) {\r\n\t\r\n\t\t\tif ( point.x < this.min.x || point.x > this.max.x ||\r\n\t\t\t     point.y < this.min.y || point.y > this.max.y ||\r\n\t\t\t     point.z < this.min.z || point.z > this.max.z ) {\r\n\t\r\n\t\t\t\treturn false;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn true;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcontainsBox: function ( box ) {\r\n\t\r\n\t\t\tif ( ( this.min.x <= box.min.x ) && ( box.max.x <= this.max.x ) &&\r\n\t\t\t\t ( this.min.y <= box.min.y ) && ( box.max.y <= this.max.y ) &&\r\n\t\t\t\t ( this.min.z <= box.min.z ) && ( box.max.z <= this.max.z ) ) {\r\n\t\r\n\t\t\t\treturn true;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn false;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetParameter: function ( point, optionalTarget ) {\r\n\t\r\n\t\t\t// This can potentially have a divide by zero if the box\r\n\t\t\t// has a size dimension of 0.\r\n\t\r\n\t\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\r\n\t\t\treturn result.set(\r\n\t\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\r\n\t\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y ),\r\n\t\t\t\t( point.z - this.min.z ) / ( this.max.z - this.min.z )\r\n\t\t\t);\r\n\t\r\n\t\t},\r\n\t\r\n\t\tisIntersectionBox: function ( box ) {\r\n\t\r\n\t\t\t// using 6 splitting planes to rule out intersections.\r\n\t\r\n\t\t\tif ( box.max.x < this.min.x || box.min.x > this.max.x ||\r\n\t\t\t     box.max.y < this.min.y || box.min.y > this.max.y ||\r\n\t\t\t     box.max.z < this.min.z || box.min.z > this.max.z ) {\r\n\t\r\n\t\t\t\treturn false;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn true;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclampPoint: function ( point, optionalTarget ) {\r\n\t\r\n\t\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\t\treturn result.copy( point ).clamp( this.min, this.max );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdistanceToPoint: function () {\r\n\t\r\n\t\t\tvar v1 = new THREE.Vector3();\r\n\t\r\n\t\t\treturn function ( point ) {\r\n\t\r\n\t\t\t\tvar clampedPoint = v1.copy( point ).clamp( this.min, this.max );\r\n\t\t\t\treturn clampedPoint.sub( point ).length();\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tgetBoundingSphere: function () {\r\n\t\r\n\t\t\tvar v1 = new THREE.Vector3();\r\n\t\r\n\t\t\treturn function ( optionalTarget ) {\r\n\t\r\n\t\t\t\tvar result = optionalTarget || new THREE.Sphere();\r\n\t\r\n\t\t\t\tresult.center = this.center();\r\n\t\t\t\tresult.radius = this.size( v1 ).length() * 0.5;\r\n\t\r\n\t\t\t\treturn result;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tintersect: function ( box ) {\r\n\t\r\n\t\t\tthis.min.max( box.min );\r\n\t\t\tthis.max.min( box.max );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tunion: function ( box ) {\r\n\t\r\n\t\t\tthis.min.min( box.min );\r\n\t\t\tthis.max.max( box.max );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tapplyMatrix4: function () {\r\n\t\r\n\t\t\tvar points = [\r\n\t\t\t\tnew THREE.Vector3(),\r\n\t\t\t\tnew THREE.Vector3(),\r\n\t\t\t\tnew THREE.Vector3(),\r\n\t\t\t\tnew THREE.Vector3(),\r\n\t\t\t\tnew THREE.Vector3(),\r\n\t\t\t\tnew THREE.Vector3(),\r\n\t\t\t\tnew THREE.Vector3(),\r\n\t\t\t\tnew THREE.Vector3()\r\n\t\t\t];\r\n\t\r\n\t\t\treturn function ( matrix ) {\r\n\t\r\n\t\t\t\t// NOTE: I am using a binary pattern to specify all 2^3 combinations below\r\n\t\t\t\tpoints[ 0 ].set( this.min.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 000\r\n\t\t\t\tpoints[ 1 ].set( this.min.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 001\r\n\t\t\t\tpoints[ 2 ].set( this.min.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 010\r\n\t\t\t\tpoints[ 3 ].set( this.min.x, this.max.y, this.max.z ).applyMatrix4( matrix ); // 011\r\n\t\t\t\tpoints[ 4 ].set( this.max.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 100\r\n\t\t\t\tpoints[ 5 ].set( this.max.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 101\r\n\t\t\t\tpoints[ 6 ].set( this.max.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 110\r\n\t\t\t\tpoints[ 7 ].set( this.max.x, this.max.y, this.max.z ).applyMatrix4( matrix );  // 111\r\n\t\r\n\t\t\t\tthis.makeEmpty();\r\n\t\t\t\tthis.setFromPoints( points );\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\ttranslate: function ( offset ) {\r\n\t\r\n\t\t\tthis.min.add( offset );\r\n\t\t\tthis.max.add( offset );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tequals: function ( box ) {\r\n\t\r\n\t\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/math/Matrix3.js\r\n\t\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author WestLangley / http://github.com/WestLangley\r\n\t * @author bhouston / http://exocortex.com\r\n\t */\r\n\t\r\n\tTHREE.Matrix3 = function () {\r\n\t\r\n\t\tthis.elements = new Float32Array( [\r\n\t\r\n\t\t\t1, 0, 0,\r\n\t\t\t0, 1, 0,\r\n\t\t\t0, 0, 1\r\n\t\r\n\t\t] );\r\n\t\r\n\t\tif ( arguments.length > 0 ) {\r\n\t\r\n\t\t\tconsole.error( 'THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.' );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Matrix3.prototype = {\r\n\t\r\n\t\tconstructor: THREE.Matrix3,\r\n\t\r\n\t\tset: function ( n11, n12, n13, n21, n22, n23, n31, n32, n33 ) {\r\n\t\r\n\t\t\tvar te = this.elements;\r\n\t\r\n\t\t\tte[ 0 ] = n11; te[ 3 ] = n12; te[ 6 ] = n13;\r\n\t\t\tte[ 1 ] = n21; te[ 4 ] = n22; te[ 7 ] = n23;\r\n\t\t\tte[ 2 ] = n31; te[ 5 ] = n32; te[ 8 ] = n33;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tidentity: function () {\r\n\t\r\n\t\t\tthis.set(\r\n\t\r\n\t\t\t\t1, 0, 0,\r\n\t\t\t\t0, 1, 0,\r\n\t\t\t\t0, 0, 1\r\n\t\r\n\t\t\t);\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclone: function () {\r\n\t\r\n\t\t\treturn new this.constructor().fromArray( this.elements );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopy: function ( m ) {\r\n\t\r\n\t\t\tvar me = m.elements;\r\n\t\r\n\t\t\tthis.set(\r\n\t\r\n\t\t\t\tme[ 0 ], me[ 3 ], me[ 6 ],\r\n\t\t\t\tme[ 1 ], me[ 4 ], me[ 7 ],\r\n\t\t\t\tme[ 2 ], me[ 5 ], me[ 8 ]\r\n\t\r\n\t\t\t);\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmultiplyVector3: function ( vector ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead.' );\r\n\t\t\treturn vector.applyMatrix3( this );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmultiplyVector3Array: function ( a ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.Matrix3: .multiplyVector3Array() has been renamed. Use matrix.applyToVector3Array( array ) instead.' );\r\n\t\t\treturn this.applyToVector3Array( a );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tapplyToVector3Array: function () {\r\n\t\r\n\t\t\tvar v1;\r\n\t\r\n\t\t\treturn function ( array, offset, length ) {\r\n\t\r\n\t\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\r\n\t\t\t\tif ( offset === undefined ) offset = 0;\r\n\t\t\t\tif ( length === undefined ) length = array.length;\r\n\t\r\n\t\t\t\tfor ( var i = 0, j = offset; i < length; i += 3, j += 3 ) {\r\n\t\r\n\t\t\t\t\tv1.fromArray( array, j );\r\n\t\t\t\t\tv1.applyMatrix3( this );\r\n\t\t\t\t\tv1.toArray( array, j );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn array;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tapplyToBuffer: function () {\r\n\t\r\n\t\t\tvar v1;\r\n\t\r\n\t\t\treturn function applyToBuffer( buffer, offset, length ) {\r\n\t\r\n\t\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\r\n\t\t\t\tif ( offset === undefined ) offset = 0;\r\n\t\t\t\tif ( length === undefined ) length = buffer.length / buffer.itemSize;\r\n\t\r\n\t\t\t\tfor ( var i = 0, j = offset; i < length; i ++, j ++ ) {\r\n\t\r\n\t\t\t\t\tv1.x = buffer.getX( j );\r\n\t\t\t\t\tv1.y = buffer.getY( j );\r\n\t\t\t\t\tv1.z = buffer.getZ( j );\r\n\t\r\n\t\t\t\t\tv1.applyMatrix3( this );\r\n\t\r\n\t\t\t\t\tbuffer.setXYZ( v1.x, v1.y, v1.z );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn buffer;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tmultiplyScalar: function ( s ) {\r\n\t\r\n\t\t\tvar te = this.elements;\r\n\t\r\n\t\t\tte[ 0 ] *= s; te[ 3 ] *= s; te[ 6 ] *= s;\r\n\t\t\tte[ 1 ] *= s; te[ 4 ] *= s; te[ 7 ] *= s;\r\n\t\t\tte[ 2 ] *= s; te[ 5 ] *= s; te[ 8 ] *= s;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdeterminant: function () {\r\n\t\r\n\t\t\tvar te = this.elements;\r\n\t\r\n\t\t\tvar a = te[ 0 ], b = te[ 1 ], c = te[ 2 ],\r\n\t\t\t\td = te[ 3 ], e = te[ 4 ], f = te[ 5 ],\r\n\t\t\t\tg = te[ 6 ], h = te[ 7 ], i = te[ 8 ];\r\n\t\r\n\t\t\treturn a * e * i - a * f * h - b * d * i + b * f * g + c * d * h - c * e * g;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetInverse: function ( matrix, throwOnInvertible ) {\r\n\t\r\n\t\t\t// input: THREE.Matrix4\r\n\t\t\t// ( based on http://code.google.com/p/webgl-mjs/ )\r\n\t\r\n\t\t\tvar me = matrix.elements;\r\n\t\t\tvar te = this.elements;\r\n\t\r\n\t\t\tte[ 0 ] =   me[ 10 ] * me[ 5 ] - me[ 6 ] * me[ 9 ];\r\n\t\t\tte[ 1 ] = - me[ 10 ] * me[ 1 ] + me[ 2 ] * me[ 9 ];\r\n\t\t\tte[ 2 ] =   me[ 6 ] * me[ 1 ] - me[ 2 ] * me[ 5 ];\r\n\t\t\tte[ 3 ] = - me[ 10 ] * me[ 4 ] + me[ 6 ] * me[ 8 ];\r\n\t\t\tte[ 4 ] =   me[ 10 ] * me[ 0 ] - me[ 2 ] * me[ 8 ];\r\n\t\t\tte[ 5 ] = - me[ 6 ] * me[ 0 ] + me[ 2 ] * me[ 4 ];\r\n\t\t\tte[ 6 ] =   me[ 9 ] * me[ 4 ] - me[ 5 ] * me[ 8 ];\r\n\t\t\tte[ 7 ] = - me[ 9 ] * me[ 0 ] + me[ 1 ] * me[ 8 ];\r\n\t\t\tte[ 8 ] =   me[ 5 ] * me[ 0 ] - me[ 1 ] * me[ 4 ];\r\n\t\r\n\t\t\tvar det = me[ 0 ] * te[ 0 ] + me[ 1 ] * te[ 3 ] + me[ 2 ] * te[ 6 ];\r\n\t\r\n\t\t\t// no inverse\r\n\t\r\n\t\t\tif ( det === 0 ) {\r\n\t\r\n\t\t\t\tvar msg = \"Matrix3.getInverse(): can't invert matrix, determinant is 0\";\r\n\t\r\n\t\t\t\tif ( throwOnInvertible || false ) {\r\n\t\r\n\t\t\t\t\tthrow new Error( msg );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tconsole.warn( msg );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tthis.identity();\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.multiplyScalar( 1.0 / det );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\ttranspose: function () {\r\n\t\r\n\t\t\tvar tmp, m = this.elements;\r\n\t\r\n\t\t\ttmp = m[ 1 ]; m[ 1 ] = m[ 3 ]; m[ 3 ] = tmp;\r\n\t\t\ttmp = m[ 2 ]; m[ 2 ] = m[ 6 ]; m[ 6 ] = tmp;\r\n\t\t\ttmp = m[ 5 ]; m[ 5 ] = m[ 7 ]; m[ 7 ] = tmp;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tflattenToArrayOffset: function ( array, offset ) {\r\n\t\r\n\t\t\tvar te = this.elements;\r\n\t\r\n\t\t\tarray[ offset ] = te[ 0 ];\r\n\t\t\tarray[ offset + 1 ] = te[ 1 ];\r\n\t\t\tarray[ offset + 2 ] = te[ 2 ];\r\n\t\r\n\t\t\tarray[ offset + 3 ] = te[ 3 ];\r\n\t\t\tarray[ offset + 4 ] = te[ 4 ];\r\n\t\t\tarray[ offset + 5 ] = te[ 5 ];\r\n\t\r\n\t\t\tarray[ offset + 6 ] = te[ 6 ];\r\n\t\t\tarray[ offset + 7 ] = te[ 7 ];\r\n\t\t\tarray[ offset + 8 ]  = te[ 8 ];\r\n\t\r\n\t\t\treturn array;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetNormalMatrix: function ( m ) {\r\n\t\r\n\t\t\t// input: THREE.Matrix4\r\n\t\r\n\t\t\tthis.getInverse( m ).transpose();\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\ttransposeIntoArray: function ( r ) {\r\n\t\r\n\t\t\tvar m = this.elements;\r\n\t\r\n\t\t\tr[ 0 ] = m[ 0 ];\r\n\t\t\tr[ 1 ] = m[ 3 ];\r\n\t\t\tr[ 2 ] = m[ 6 ];\r\n\t\t\tr[ 3 ] = m[ 1 ];\r\n\t\t\tr[ 4 ] = m[ 4 ];\r\n\t\t\tr[ 5 ] = m[ 7 ];\r\n\t\t\tr[ 6 ] = m[ 2 ];\r\n\t\t\tr[ 7 ] = m[ 5 ];\r\n\t\t\tr[ 8 ] = m[ 8 ];\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tfromArray: function ( array ) {\r\n\t\r\n\t\t\tthis.elements.set( array );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\ttoArray: function () {\r\n\t\r\n\t\t\tvar te = this.elements;\r\n\t\r\n\t\t\treturn [\r\n\t\t\t\tte[ 0 ], te[ 1 ], te[ 2 ],\r\n\t\t\t\tte[ 3 ], te[ 4 ], te[ 5 ],\r\n\t\t\t\tte[ 6 ], te[ 7 ], te[ 8 ]\r\n\t\t\t];\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/math/Matrix4.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author supereggbert / http://www.paulbrunt.co.uk/\r\n\t * @author philogb / http://blog.thejit.org/\r\n\t * @author jordi_ros / http://plattsoft.com\r\n\t * @author D1plo1d / http://github.com/D1plo1d\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author mikael emtinger / http://gomo.se/\r\n\t * @author timknip / http://www.floorplanner.com/\r\n\t * @author bhouston / http://exocortex.com\r\n\t * @author WestLangley / http://github.com/WestLangley\r\n\t */\r\n\t\r\n\tTHREE.Matrix4 = function () {\r\n\t\r\n\t\tthis.elements = new Float32Array( [\r\n\t\r\n\t\t\t1, 0, 0, 0,\r\n\t\t\t0, 1, 0, 0,\r\n\t\t\t0, 0, 1, 0,\r\n\t\t\t0, 0, 0, 1\r\n\t\r\n\t\t] );\r\n\t\r\n\t\tif ( arguments.length > 0 ) {\r\n\t\r\n\t\t\tconsole.error( 'THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.' );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Matrix4.prototype = {\r\n\t\r\n\t\tconstructor: THREE.Matrix4,\r\n\t\r\n\t\tset: function ( n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44 ) {\r\n\t\r\n\t\t\tvar te = this.elements;\r\n\t\r\n\t\t\tte[ 0 ] = n11; te[ 4 ] = n12; te[ 8 ] = n13; te[ 12 ] = n14;\r\n\t\t\tte[ 1 ] = n21; te[ 5 ] = n22; te[ 9 ] = n23; te[ 13 ] = n24;\r\n\t\t\tte[ 2 ] = n31; te[ 6 ] = n32; te[ 10 ] = n33; te[ 14 ] = n34;\r\n\t\t\tte[ 3 ] = n41; te[ 7 ] = n42; te[ 11 ] = n43; te[ 15 ] = n44;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tidentity: function () {\r\n\t\r\n\t\t\tthis.set(\r\n\t\r\n\t\t\t\t1, 0, 0, 0,\r\n\t\t\t\t0, 1, 0, 0,\r\n\t\t\t\t0, 0, 1, 0,\r\n\t\t\t\t0, 0, 0, 1\r\n\t\r\n\t\t\t);\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclone: function () {\r\n\t\r\n\t\t\treturn new THREE.Matrix4().fromArray( this.elements );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopy: function ( m ) {\r\n\t\r\n\t\t\tthis.elements.set( m.elements );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\textractPosition: function ( m ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.Matrix4: .extractPosition() has been renamed to .copyPosition().' );\r\n\t\t\treturn this.copyPosition( m );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopyPosition: function ( m ) {\r\n\t\r\n\t\t\tvar te = this.elements;\r\n\t\t\tvar me = m.elements;\r\n\t\r\n\t\t\tte[ 12 ] = me[ 12 ];\r\n\t\t\tte[ 13 ] = me[ 13 ];\r\n\t\t\tte[ 14 ] = me[ 14 ];\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\textractBasis: function ( xAxis, yAxis, zAxis ) {\r\n\t\r\n\t\t\tvar te = this.elements;\r\n\t\r\n\t\t\txAxis.set( te[ 0 ], te[ 1 ], te[ 2 ] );\r\n\t\t\tyAxis.set( te[ 4 ], te[ 5 ], te[ 6 ] );\r\n\t\t\tzAxis.set( te[ 8 ], te[ 9 ], te[ 10 ] );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmakeBasis: function ( xAxis, yAxis, zAxis ) {\r\n\t\r\n\t\t\tthis.set(\r\n\t\t\t\txAxis.x, yAxis.x, zAxis.x, 0,\r\n\t\t\t\txAxis.y, yAxis.y, zAxis.y, 0,\r\n\t\t\t\txAxis.z, yAxis.z, zAxis.z, 0,\r\n\t\t\t\t0,       0,       0,       1\r\n\t\t\t);\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\textractRotation: function () {\r\n\t\r\n\t\t\tvar v1;\r\n\t\r\n\t\t\treturn function ( m ) {\r\n\t\r\n\t\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\r\n\t\r\n\t\t\t\tvar te = this.elements;\r\n\t\t\t\tvar me = m.elements;\r\n\t\r\n\t\t\t\tvar scaleX = 1 / v1.set( me[ 0 ], me[ 1 ], me[ 2 ] ).length();\r\n\t\t\t\tvar scaleY = 1 / v1.set( me[ 4 ], me[ 5 ], me[ 6 ] ).length();\r\n\t\t\t\tvar scaleZ = 1 / v1.set( me[ 8 ], me[ 9 ], me[ 10 ] ).length();\r\n\t\r\n\t\t\t\tte[ 0 ] = me[ 0 ] * scaleX;\r\n\t\t\t\tte[ 1 ] = me[ 1 ] * scaleX;\r\n\t\t\t\tte[ 2 ] = me[ 2 ] * scaleX;\r\n\t\r\n\t\t\t\tte[ 4 ] = me[ 4 ] * scaleY;\r\n\t\t\t\tte[ 5 ] = me[ 5 ] * scaleY;\r\n\t\t\t\tte[ 6 ] = me[ 6 ] * scaleY;\r\n\t\r\n\t\t\t\tte[ 8 ] = me[ 8 ] * scaleZ;\r\n\t\t\t\tte[ 9 ] = me[ 9 ] * scaleZ;\r\n\t\t\t\tte[ 10 ] = me[ 10 ] * scaleZ;\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tmakeRotationFromEuler: function ( euler ) {\r\n\t\r\n\t\t\tif ( euler instanceof THREE.Euler === false ) {\r\n\t\r\n\t\t\t\tconsole.error( 'THREE.Matrix: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.' );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar te = this.elements;\r\n\t\r\n\t\t\tvar x = euler.x, y = euler.y, z = euler.z;\r\n\t\t\tvar a = Math.cos( x ), b = Math.sin( x );\r\n\t\t\tvar c = Math.cos( y ), d = Math.sin( y );\r\n\t\t\tvar e = Math.cos( z ), f = Math.sin( z );\r\n\t\r\n\t\t\tif ( euler.order === 'XYZ' ) {\r\n\t\r\n\t\t\t\tvar ae = a * e, af = a * f, be = b * e, bf = b * f;\r\n\t\r\n\t\t\t\tte[ 0 ] = c * e;\r\n\t\t\t\tte[ 4 ] = - c * f;\r\n\t\t\t\tte[ 8 ] = d;\r\n\t\r\n\t\t\t\tte[ 1 ] = af + be * d;\r\n\t\t\t\tte[ 5 ] = ae - bf * d;\r\n\t\t\t\tte[ 9 ] = - b * c;\r\n\t\r\n\t\t\t\tte[ 2 ] = bf - ae * d;\r\n\t\t\t\tte[ 6 ] = be + af * d;\r\n\t\t\t\tte[ 10 ] = a * c;\r\n\t\r\n\t\t\t} else if ( euler.order === 'YXZ' ) {\r\n\t\r\n\t\t\t\tvar ce = c * e, cf = c * f, de = d * e, df = d * f;\r\n\t\r\n\t\t\t\tte[ 0 ] = ce + df * b;\r\n\t\t\t\tte[ 4 ] = de * b - cf;\r\n\t\t\t\tte[ 8 ] = a * d;\r\n\t\r\n\t\t\t\tte[ 1 ] = a * f;\r\n\t\t\t\tte[ 5 ] = a * e;\r\n\t\t\t\tte[ 9 ] = - b;\r\n\t\r\n\t\t\t\tte[ 2 ] = cf * b - de;\r\n\t\t\t\tte[ 6 ] = df + ce * b;\r\n\t\t\t\tte[ 10 ] = a * c;\r\n\t\r\n\t\t\t} else if ( euler.order === 'ZXY' ) {\r\n\t\r\n\t\t\t\tvar ce = c * e, cf = c * f, de = d * e, df = d * f;\r\n\t\r\n\t\t\t\tte[ 0 ] = ce - df * b;\r\n\t\t\t\tte[ 4 ] = - a * f;\r\n\t\t\t\tte[ 8 ] = de + cf * b;\r\n\t\r\n\t\t\t\tte[ 1 ] = cf + de * b;\r\n\t\t\t\tte[ 5 ] = a * e;\r\n\t\t\t\tte[ 9 ] = df - ce * b;\r\n\t\r\n\t\t\t\tte[ 2 ] = - a * d;\r\n\t\t\t\tte[ 6 ] = b;\r\n\t\t\t\tte[ 10 ] = a * c;\r\n\t\r\n\t\t\t} else if ( euler.order === 'ZYX' ) {\r\n\t\r\n\t\t\t\tvar ae = a * e, af = a * f, be = b * e, bf = b * f;\r\n\t\r\n\t\t\t\tte[ 0 ] = c * e;\r\n\t\t\t\tte[ 4 ] = be * d - af;\r\n\t\t\t\tte[ 8 ] = ae * d + bf;\r\n\t\r\n\t\t\t\tte[ 1 ] = c * f;\r\n\t\t\t\tte[ 5 ] = bf * d + ae;\r\n\t\t\t\tte[ 9 ] = af * d - be;\r\n\t\r\n\t\t\t\tte[ 2 ] = - d;\r\n\t\t\t\tte[ 6 ] = b * c;\r\n\t\t\t\tte[ 10 ] = a * c;\r\n\t\r\n\t\t\t} else if ( euler.order === 'YZX' ) {\r\n\t\r\n\t\t\t\tvar ac = a * c, ad = a * d, bc = b * c, bd = b * d;\r\n\t\r\n\t\t\t\tte[ 0 ] = c * e;\r\n\t\t\t\tte[ 4 ] = bd - ac * f;\r\n\t\t\t\tte[ 8 ] = bc * f + ad;\r\n\t\r\n\t\t\t\tte[ 1 ] = f;\r\n\t\t\t\tte[ 5 ] = a * e;\r\n\t\t\t\tte[ 9 ] = - b * e;\r\n\t\r\n\t\t\t\tte[ 2 ] = - d * e;\r\n\t\t\t\tte[ 6 ] = ad * f + bc;\r\n\t\t\t\tte[ 10 ] = ac - bd * f;\r\n\t\r\n\t\t\t} else if ( euler.order === 'XZY' ) {\r\n\t\r\n\t\t\t\tvar ac = a * c, ad = a * d, bc = b * c, bd = b * d;\r\n\t\r\n\t\t\t\tte[ 0 ] = c * e;\r\n\t\t\t\tte[ 4 ] = - f;\r\n\t\t\t\tte[ 8 ] = d * e;\r\n\t\r\n\t\t\t\tte[ 1 ] = ac * f + bd;\r\n\t\t\t\tte[ 5 ] = a * e;\r\n\t\t\t\tte[ 9 ] = ad * f - bc;\r\n\t\r\n\t\t\t\tte[ 2 ] = bc * f - ad;\r\n\t\t\t\tte[ 6 ] = b * e;\r\n\t\t\t\tte[ 10 ] = bd * f + ac;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// last column\r\n\t\t\tte[ 3 ] = 0;\r\n\t\t\tte[ 7 ] = 0;\r\n\t\t\tte[ 11 ] = 0;\r\n\t\r\n\t\t\t// bottom row\r\n\t\t\tte[ 12 ] = 0;\r\n\t\t\tte[ 13 ] = 0;\r\n\t\t\tte[ 14 ] = 0;\r\n\t\t\tte[ 15 ] = 1;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetRotationFromQuaternion: function ( q ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion().' );\r\n\t\r\n\t\t\treturn this.makeRotationFromQuaternion( q );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmakeRotationFromQuaternion: function ( q ) {\r\n\t\r\n\t\t\tvar te = this.elements;\r\n\t\r\n\t\t\tvar x = q.x, y = q.y, z = q.z, w = q.w;\r\n\t\t\tvar x2 = x + x, y2 = y + y, z2 = z + z;\r\n\t\t\tvar xx = x * x2, xy = x * y2, xz = x * z2;\r\n\t\t\tvar yy = y * y2, yz = y * z2, zz = z * z2;\r\n\t\t\tvar wx = w * x2, wy = w * y2, wz = w * z2;\r\n\t\r\n\t\t\tte[ 0 ] = 1 - ( yy + zz );\r\n\t\t\tte[ 4 ] = xy - wz;\r\n\t\t\tte[ 8 ] = xz + wy;\r\n\t\r\n\t\t\tte[ 1 ] = xy + wz;\r\n\t\t\tte[ 5 ] = 1 - ( xx + zz );\r\n\t\t\tte[ 9 ] = yz - wx;\r\n\t\r\n\t\t\tte[ 2 ] = xz - wy;\r\n\t\t\tte[ 6 ] = yz + wx;\r\n\t\t\tte[ 10 ] = 1 - ( xx + yy );\r\n\t\r\n\t\t\t// last column\r\n\t\t\tte[ 3 ] = 0;\r\n\t\t\tte[ 7 ] = 0;\r\n\t\t\tte[ 11 ] = 0;\r\n\t\r\n\t\t\t// bottom row\r\n\t\t\tte[ 12 ] = 0;\r\n\t\t\tte[ 13 ] = 0;\r\n\t\t\tte[ 14 ] = 0;\r\n\t\t\tte[ 15 ] = 1;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tlookAt: function () {\r\n\t\r\n\t\t\tvar x, y, z;\r\n\t\r\n\t\t\treturn function ( eye, target, up ) {\r\n\t\r\n\t\t\t\tif ( x === undefined ) x = new THREE.Vector3();\r\n\t\t\t\tif ( y === undefined ) y = new THREE.Vector3();\r\n\t\t\t\tif ( z === undefined ) z = new THREE.Vector3();\r\n\t\r\n\t\t\t\tvar te = this.elements;\r\n\t\r\n\t\t\t\tz.subVectors( eye, target ).normalize();\r\n\t\r\n\t\t\t\tif ( z.length() === 0 ) {\r\n\t\r\n\t\t\t\t\tz.z = 1;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tx.crossVectors( up, z ).normalize();\r\n\t\r\n\t\t\t\tif ( x.length() === 0 ) {\r\n\t\r\n\t\t\t\t\tz.x += 0.0001;\r\n\t\t\t\t\tx.crossVectors( up, z ).normalize();\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\ty.crossVectors( z, x );\r\n\t\r\n\t\r\n\t\t\t\tte[ 0 ] = x.x; te[ 4 ] = y.x; te[ 8 ] = z.x;\r\n\t\t\t\tte[ 1 ] = x.y; te[ 5 ] = y.y; te[ 9 ] = z.y;\r\n\t\t\t\tte[ 2 ] = x.z; te[ 6 ] = y.z; te[ 10 ] = z.z;\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tmultiply: function ( m, n ) {\r\n\t\r\n\t\t\tif ( n !== undefined ) {\r\n\t\r\n\t\t\t\tconsole.warn( 'THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead.' );\r\n\t\t\t\treturn this.multiplyMatrices( m, n );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this.multiplyMatrices( this, m );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmultiplyMatrices: function ( a, b ) {\r\n\t\r\n\t\t\tvar ae = a.elements;\r\n\t\t\tvar be = b.elements;\r\n\t\t\tvar te = this.elements;\r\n\t\r\n\t\t\tvar a11 = ae[ 0 ], a12 = ae[ 4 ], a13 = ae[ 8 ], a14 = ae[ 12 ];\r\n\t\t\tvar a21 = ae[ 1 ], a22 = ae[ 5 ], a23 = ae[ 9 ], a24 = ae[ 13 ];\r\n\t\t\tvar a31 = ae[ 2 ], a32 = ae[ 6 ], a33 = ae[ 10 ], a34 = ae[ 14 ];\r\n\t\t\tvar a41 = ae[ 3 ], a42 = ae[ 7 ], a43 = ae[ 11 ], a44 = ae[ 15 ];\r\n\t\r\n\t\t\tvar b11 = be[ 0 ], b12 = be[ 4 ], b13 = be[ 8 ], b14 = be[ 12 ];\r\n\t\t\tvar b21 = be[ 1 ], b22 = be[ 5 ], b23 = be[ 9 ], b24 = be[ 13 ];\r\n\t\t\tvar b31 = be[ 2 ], b32 = be[ 6 ], b33 = be[ 10 ], b34 = be[ 14 ];\r\n\t\t\tvar b41 = be[ 3 ], b42 = be[ 7 ], b43 = be[ 11 ], b44 = be[ 15 ];\r\n\t\r\n\t\t\tte[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31 + a14 * b41;\r\n\t\t\tte[ 4 ] = a11 * b12 + a12 * b22 + a13 * b32 + a14 * b42;\r\n\t\t\tte[ 8 ] = a11 * b13 + a12 * b23 + a13 * b33 + a14 * b43;\r\n\t\t\tte[ 12 ] = a11 * b14 + a12 * b24 + a13 * b34 + a14 * b44;\r\n\t\r\n\t\t\tte[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31 + a24 * b41;\r\n\t\t\tte[ 5 ] = a21 * b12 + a22 * b22 + a23 * b32 + a24 * b42;\r\n\t\t\tte[ 9 ] = a21 * b13 + a22 * b23 + a23 * b33 + a24 * b43;\r\n\t\t\tte[ 13 ] = a21 * b14 + a22 * b24 + a23 * b34 + a24 * b44;\r\n\t\r\n\t\t\tte[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31 + a34 * b41;\r\n\t\t\tte[ 6 ] = a31 * b12 + a32 * b22 + a33 * b32 + a34 * b42;\r\n\t\t\tte[ 10 ] = a31 * b13 + a32 * b23 + a33 * b33 + a34 * b43;\r\n\t\t\tte[ 14 ] = a31 * b14 + a32 * b24 + a33 * b34 + a34 * b44;\r\n\t\r\n\t\t\tte[ 3 ] = a41 * b11 + a42 * b21 + a43 * b31 + a44 * b41;\r\n\t\t\tte[ 7 ] = a41 * b12 + a42 * b22 + a43 * b32 + a44 * b42;\r\n\t\t\tte[ 11 ] = a41 * b13 + a42 * b23 + a43 * b33 + a44 * b43;\r\n\t\t\tte[ 15 ] = a41 * b14 + a42 * b24 + a43 * b34 + a44 * b44;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmultiplyToArray: function ( a, b, r ) {\r\n\t\r\n\t\t\tvar te = this.elements;\r\n\t\r\n\t\t\tthis.multiplyMatrices( a, b );\r\n\t\r\n\t\t\tr[ 0 ] = te[ 0 ]; r[ 1 ] = te[ 1 ]; r[ 2 ] = te[ 2 ]; r[ 3 ] = te[ 3 ];\r\n\t\t\tr[ 4 ] = te[ 4 ]; r[ 5 ] = te[ 5 ]; r[ 6 ] = te[ 6 ]; r[ 7 ] = te[ 7 ];\r\n\t\t\tr[ 8 ]  = te[ 8 ]; r[ 9 ]  = te[ 9 ]; r[ 10 ] = te[ 10 ]; r[ 11 ] = te[ 11 ];\r\n\t\t\tr[ 12 ] = te[ 12 ]; r[ 13 ] = te[ 13 ]; r[ 14 ] = te[ 14 ]; r[ 15 ] = te[ 15 ];\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmultiplyScalar: function ( s ) {\r\n\t\r\n\t\t\tvar te = this.elements;\r\n\t\r\n\t\t\tte[ 0 ] *= s; te[ 4 ] *= s; te[ 8 ] *= s; te[ 12 ] *= s;\r\n\t\t\tte[ 1 ] *= s; te[ 5 ] *= s; te[ 9 ] *= s; te[ 13 ] *= s;\r\n\t\t\tte[ 2 ] *= s; te[ 6 ] *= s; te[ 10 ] *= s; te[ 14 ] *= s;\r\n\t\t\tte[ 3 ] *= s; te[ 7 ] *= s; te[ 11 ] *= s; te[ 15 ] *= s;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmultiplyVector3: function ( vector ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) or vector.applyProjection( matrix ) instead.' );\r\n\t\t\treturn vector.applyProjection( this );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmultiplyVector4: function ( vector ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead.' );\r\n\t\t\treturn vector.applyMatrix4( this );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmultiplyVector3Array: function ( a ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.Matrix4: .multiplyVector3Array() has been renamed. Use matrix.applyToVector3Array( array ) instead.' );\r\n\t\t\treturn this.applyToVector3Array( a );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tapplyToVector3Array: function () {\r\n\t\r\n\t\t\tvar v1;\r\n\t\r\n\t\t\treturn function ( array, offset, length ) {\r\n\t\r\n\t\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\r\n\t\t\t\tif ( offset === undefined ) offset = 0;\r\n\t\t\t\tif ( length === undefined ) length = array.length;\r\n\t\r\n\t\t\t\tfor ( var i = 0, j = offset; i < length; i += 3, j += 3 ) {\r\n\t\r\n\t\t\t\t\tv1.fromArray( array, j );\r\n\t\t\t\t\tv1.applyMatrix4( this );\r\n\t\t\t\t\tv1.toArray( array, j );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn array;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tapplyToBuffer: function () {\r\n\t\r\n\t\t\tvar v1;\r\n\t\r\n\t\t\treturn function applyToBuffer( buffer, offset, length ) {\r\n\t\r\n\t\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\r\n\t\t\t\tif ( offset === undefined ) offset = 0;\r\n\t\t\t\tif ( length === undefined ) length = buffer.length / buffer.itemSize;\r\n\t\r\n\t\t\t\tfor ( var i = 0, j = offset; i < length; i ++, j ++ ) {\r\n\t\r\n\t\t\t\t\tv1.x = buffer.getX( j );\r\n\t\t\t\t\tv1.y = buffer.getY( j );\r\n\t\t\t\t\tv1.z = buffer.getZ( j );\r\n\t\r\n\t\t\t\t\tv1.applyMatrix4( this );\r\n\t\r\n\t\t\t\t\tbuffer.setXYZ( v1.x, v1.y, v1.z );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn buffer;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\trotateAxis: function ( v ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead.' );\r\n\t\r\n\t\t\tv.transformDirection( this );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcrossVector: function ( vector ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead.' );\r\n\t\t\treturn vector.applyMatrix4( this );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdeterminant: function () {\r\n\t\r\n\t\t\tvar te = this.elements;\r\n\t\r\n\t\t\tvar n11 = te[ 0 ], n12 = te[ 4 ], n13 = te[ 8 ], n14 = te[ 12 ];\r\n\t\t\tvar n21 = te[ 1 ], n22 = te[ 5 ], n23 = te[ 9 ], n24 = te[ 13 ];\r\n\t\t\tvar n31 = te[ 2 ], n32 = te[ 6 ], n33 = te[ 10 ], n34 = te[ 14 ];\r\n\t\t\tvar n41 = te[ 3 ], n42 = te[ 7 ], n43 = te[ 11 ], n44 = te[ 15 ];\r\n\t\r\n\t\t\t//TODO: make this more efficient\r\n\t\t\t//( based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm )\r\n\t\r\n\t\t\treturn (\r\n\t\t\t\tn41 * (\r\n\t\t\t\t\t+ n14 * n23 * n32\r\n\t\t\t\t\t - n13 * n24 * n32\r\n\t\t\t\t\t - n14 * n22 * n33\r\n\t\t\t\t\t + n12 * n24 * n33\r\n\t\t\t\t\t + n13 * n22 * n34\r\n\t\t\t\t\t - n12 * n23 * n34\r\n\t\t\t\t) +\r\n\t\t\t\tn42 * (\r\n\t\t\t\t\t+ n11 * n23 * n34\r\n\t\t\t\t\t - n11 * n24 * n33\r\n\t\t\t\t\t + n14 * n21 * n33\r\n\t\t\t\t\t - n13 * n21 * n34\r\n\t\t\t\t\t + n13 * n24 * n31\r\n\t\t\t\t\t - n14 * n23 * n31\r\n\t\t\t\t) +\r\n\t\t\t\tn43 * (\r\n\t\t\t\t\t+ n11 * n24 * n32\r\n\t\t\t\t\t - n11 * n22 * n34\r\n\t\t\t\t\t - n14 * n21 * n32\r\n\t\t\t\t\t + n12 * n21 * n34\r\n\t\t\t\t\t + n14 * n22 * n31\r\n\t\t\t\t\t - n12 * n24 * n31\r\n\t\t\t\t) +\r\n\t\t\t\tn44 * (\r\n\t\t\t\t\t- n13 * n22 * n31\r\n\t\t\t\t\t - n11 * n23 * n32\r\n\t\t\t\t\t + n11 * n22 * n33\r\n\t\t\t\t\t + n13 * n21 * n32\r\n\t\t\t\t\t - n12 * n21 * n33\r\n\t\t\t\t\t + n12 * n23 * n31\r\n\t\t\t\t)\r\n\t\r\n\t\t\t);\r\n\t\r\n\t\t},\r\n\t\r\n\t\ttranspose: function () {\r\n\t\r\n\t\t\tvar te = this.elements;\r\n\t\t\tvar tmp;\r\n\t\r\n\t\t\ttmp = te[ 1 ]; te[ 1 ] = te[ 4 ]; te[ 4 ] = tmp;\r\n\t\t\ttmp = te[ 2 ]; te[ 2 ] = te[ 8 ]; te[ 8 ] = tmp;\r\n\t\t\ttmp = te[ 6 ]; te[ 6 ] = te[ 9 ]; te[ 9 ] = tmp;\r\n\t\r\n\t\t\ttmp = te[ 3 ]; te[ 3 ] = te[ 12 ]; te[ 12 ] = tmp;\r\n\t\t\ttmp = te[ 7 ]; te[ 7 ] = te[ 13 ]; te[ 13 ] = tmp;\r\n\t\t\ttmp = te[ 11 ]; te[ 11 ] = te[ 14 ]; te[ 14 ] = tmp;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tflattenToArrayOffset: function ( array, offset ) {\r\n\t\r\n\t\t\tvar te = this.elements;\r\n\t\r\n\t\t\tarray[ offset ] = te[ 0 ];\r\n\t\t\tarray[ offset + 1 ] = te[ 1 ];\r\n\t\t\tarray[ offset + 2 ] = te[ 2 ];\r\n\t\t\tarray[ offset + 3 ] = te[ 3 ];\r\n\t\r\n\t\t\tarray[ offset + 4 ] = te[ 4 ];\r\n\t\t\tarray[ offset + 5 ] = te[ 5 ];\r\n\t\t\tarray[ offset + 6 ] = te[ 6 ];\r\n\t\t\tarray[ offset + 7 ] = te[ 7 ];\r\n\t\r\n\t\t\tarray[ offset + 8 ]  = te[ 8 ];\r\n\t\t\tarray[ offset + 9 ]  = te[ 9 ];\r\n\t\t\tarray[ offset + 10 ] = te[ 10 ];\r\n\t\t\tarray[ offset + 11 ] = te[ 11 ];\r\n\t\r\n\t\t\tarray[ offset + 12 ] = te[ 12 ];\r\n\t\t\tarray[ offset + 13 ] = te[ 13 ];\r\n\t\t\tarray[ offset + 14 ] = te[ 14 ];\r\n\t\t\tarray[ offset + 15 ] = te[ 15 ];\r\n\t\r\n\t\t\treturn array;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetPosition: function () {\r\n\t\r\n\t\t\tvar v1;\r\n\t\r\n\t\t\treturn function () {\r\n\t\r\n\t\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\r\n\t\t\t\tconsole.warn( 'THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead.' );\r\n\t\r\n\t\t\t\tvar te = this.elements;\r\n\t\t\t\treturn v1.set( te[ 12 ], te[ 13 ], te[ 14 ] );\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tsetPosition: function ( v ) {\r\n\t\r\n\t\t\tvar te = this.elements;\r\n\t\r\n\t\t\tte[ 12 ] = v.x;\r\n\t\t\tte[ 13 ] = v.y;\r\n\t\t\tte[ 14 ] = v.z;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetInverse: function ( m, throwOnInvertible ) {\r\n\t\r\n\t\t\t// based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm\r\n\t\t\tvar te = this.elements;\r\n\t\t\tvar me = m.elements;\r\n\t\r\n\t\t\tvar n11 = me[ 0 ], n12 = me[ 4 ], n13 = me[ 8 ], n14 = me[ 12 ];\r\n\t\t\tvar n21 = me[ 1 ], n22 = me[ 5 ], n23 = me[ 9 ], n24 = me[ 13 ];\r\n\t\t\tvar n31 = me[ 2 ], n32 = me[ 6 ], n33 = me[ 10 ], n34 = me[ 14 ];\r\n\t\t\tvar n41 = me[ 3 ], n42 = me[ 7 ], n43 = me[ 11 ], n44 = me[ 15 ];\r\n\t\r\n\t\t\tte[ 0 ] = n23 * n34 * n42 - n24 * n33 * n42 + n24 * n32 * n43 - n22 * n34 * n43 - n23 * n32 * n44 + n22 * n33 * n44;\r\n\t\t\tte[ 4 ] = n14 * n33 * n42 - n13 * n34 * n42 - n14 * n32 * n43 + n12 * n34 * n43 + n13 * n32 * n44 - n12 * n33 * n44;\r\n\t\t\tte[ 8 ] = n13 * n24 * n42 - n14 * n23 * n42 + n14 * n22 * n43 - n12 * n24 * n43 - n13 * n22 * n44 + n12 * n23 * n44;\r\n\t\t\tte[ 12 ] = n14 * n23 * n32 - n13 * n24 * n32 - n14 * n22 * n33 + n12 * n24 * n33 + n13 * n22 * n34 - n12 * n23 * n34;\r\n\t\t\tte[ 1 ] = n24 * n33 * n41 - n23 * n34 * n41 - n24 * n31 * n43 + n21 * n34 * n43 + n23 * n31 * n44 - n21 * n33 * n44;\r\n\t\t\tte[ 5 ] = n13 * n34 * n41 - n14 * n33 * n41 + n14 * n31 * n43 - n11 * n34 * n43 - n13 * n31 * n44 + n11 * n33 * n44;\r\n\t\t\tte[ 9 ] = n14 * n23 * n41 - n13 * n24 * n41 - n14 * n21 * n43 + n11 * n24 * n43 + n13 * n21 * n44 - n11 * n23 * n44;\r\n\t\t\tte[ 13 ] = n13 * n24 * n31 - n14 * n23 * n31 + n14 * n21 * n33 - n11 * n24 * n33 - n13 * n21 * n34 + n11 * n23 * n34;\r\n\t\t\tte[ 2 ] = n22 * n34 * n41 - n24 * n32 * n41 + n24 * n31 * n42 - n21 * n34 * n42 - n22 * n31 * n44 + n21 * n32 * n44;\r\n\t\t\tte[ 6 ] = n14 * n32 * n41 - n12 * n34 * n41 - n14 * n31 * n42 + n11 * n34 * n42 + n12 * n31 * n44 - n11 * n32 * n44;\r\n\t\t\tte[ 10 ] = n12 * n24 * n41 - n14 * n22 * n41 + n14 * n21 * n42 - n11 * n24 * n42 - n12 * n21 * n44 + n11 * n22 * n44;\r\n\t\t\tte[ 14 ] = n14 * n22 * n31 - n12 * n24 * n31 - n14 * n21 * n32 + n11 * n24 * n32 + n12 * n21 * n34 - n11 * n22 * n34;\r\n\t\t\tte[ 3 ] = n23 * n32 * n41 - n22 * n33 * n41 - n23 * n31 * n42 + n21 * n33 * n42 + n22 * n31 * n43 - n21 * n32 * n43;\r\n\t\t\tte[ 7 ] = n12 * n33 * n41 - n13 * n32 * n41 + n13 * n31 * n42 - n11 * n33 * n42 - n12 * n31 * n43 + n11 * n32 * n43;\r\n\t\t\tte[ 11 ] = n13 * n22 * n41 - n12 * n23 * n41 - n13 * n21 * n42 + n11 * n23 * n42 + n12 * n21 * n43 - n11 * n22 * n43;\r\n\t\t\tte[ 15 ] = n12 * n23 * n31 - n13 * n22 * n31 + n13 * n21 * n32 - n11 * n23 * n32 - n12 * n21 * n33 + n11 * n22 * n33;\r\n\t\r\n\t\t\tvar det = n11 * te[ 0 ] + n21 * te[ 4 ] + n31 * te[ 8 ] + n41 * te[ 12 ];\r\n\t\r\n\t\t\tif ( det === 0 ) {\r\n\t\r\n\t\t\t\tvar msg = \"THREE.Matrix4.getInverse(): can't invert matrix, determinant is 0\";\r\n\t\r\n\t\t\t\tif ( throwOnInvertible || false ) {\r\n\t\r\n\t\t\t\t\tthrow new Error( msg );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tconsole.warn( msg );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tthis.identity();\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.multiplyScalar( 1 / det );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\ttranslate: function ( v ) {\r\n\t\r\n\t\t\tconsole.error( 'THREE.Matrix4: .translate() has been removed.' );\r\n\t\r\n\t\t},\r\n\t\r\n\t\trotateX: function ( angle ) {\r\n\t\r\n\t\t\tconsole.error( 'THREE.Matrix4: .rotateX() has been removed.' );\r\n\t\r\n\t\t},\r\n\t\r\n\t\trotateY: function ( angle ) {\r\n\t\r\n\t\t\tconsole.error( 'THREE.Matrix4: .rotateY() has been removed.' );\r\n\t\r\n\t\t},\r\n\t\r\n\t\trotateZ: function ( angle ) {\r\n\t\r\n\t\t\tconsole.error( 'THREE.Matrix4: .rotateZ() has been removed.' );\r\n\t\r\n\t\t},\r\n\t\r\n\t\trotateByAxis: function ( axis, angle ) {\r\n\t\r\n\t\t\tconsole.error( 'THREE.Matrix4: .rotateByAxis() has been removed.' );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tscale: function ( v ) {\r\n\t\r\n\t\t\tvar te = this.elements;\r\n\t\t\tvar x = v.x, y = v.y, z = v.z;\r\n\t\r\n\t\t\tte[ 0 ] *= x; te[ 4 ] *= y; te[ 8 ] *= z;\r\n\t\t\tte[ 1 ] *= x; te[ 5 ] *= y; te[ 9 ] *= z;\r\n\t\t\tte[ 2 ] *= x; te[ 6 ] *= y; te[ 10 ] *= z;\r\n\t\t\tte[ 3 ] *= x; te[ 7 ] *= y; te[ 11 ] *= z;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetMaxScaleOnAxis: function () {\r\n\t\r\n\t\t\tvar te = this.elements;\r\n\t\r\n\t\t\tvar scaleXSq = te[ 0 ] * te[ 0 ] + te[ 1 ] * te[ 1 ] + te[ 2 ] * te[ 2 ];\r\n\t\t\tvar scaleYSq = te[ 4 ] * te[ 4 ] + te[ 5 ] * te[ 5 ] + te[ 6 ] * te[ 6 ];\r\n\t\t\tvar scaleZSq = te[ 8 ] * te[ 8 ] + te[ 9 ] * te[ 9 ] + te[ 10 ] * te[ 10 ];\r\n\t\r\n\t\t\treturn Math.sqrt( Math.max( scaleXSq, Math.max( scaleYSq, scaleZSq ) ) );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmakeTranslation: function ( x, y, z ) {\r\n\t\r\n\t\t\tthis.set(\r\n\t\r\n\t\t\t\t1, 0, 0, x,\r\n\t\t\t\t0, 1, 0, y,\r\n\t\t\t\t0, 0, 1, z,\r\n\t\t\t\t0, 0, 0, 1\r\n\t\r\n\t\t\t);\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmakeRotationX: function ( theta ) {\r\n\t\r\n\t\t\tvar c = Math.cos( theta ), s = Math.sin( theta );\r\n\t\r\n\t\t\tthis.set(\r\n\t\r\n\t\t\t\t1, 0,  0, 0,\r\n\t\t\t\t0, c, - s, 0,\r\n\t\t\t\t0, s,  c, 0,\r\n\t\t\t\t0, 0,  0, 1\r\n\t\r\n\t\t\t);\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmakeRotationY: function ( theta ) {\r\n\t\r\n\t\t\tvar c = Math.cos( theta ), s = Math.sin( theta );\r\n\t\r\n\t\t\tthis.set(\r\n\t\r\n\t\t\t\t c, 0, s, 0,\r\n\t\t\t\t 0, 1, 0, 0,\r\n\t\t\t\t- s, 0, c, 0,\r\n\t\t\t\t 0, 0, 0, 1\r\n\t\r\n\t\t\t);\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmakeRotationZ: function ( theta ) {\r\n\t\r\n\t\t\tvar c = Math.cos( theta ), s = Math.sin( theta );\r\n\t\r\n\t\t\tthis.set(\r\n\t\r\n\t\t\t\tc, - s, 0, 0,\r\n\t\t\t\ts,  c, 0, 0,\r\n\t\t\t\t0,  0, 1, 0,\r\n\t\t\t\t0,  0, 0, 1\r\n\t\r\n\t\t\t);\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmakeRotationAxis: function ( axis, angle ) {\r\n\t\r\n\t\t\t// Based on http://www.gamedev.net/reference/articles/article1199.asp\r\n\t\r\n\t\t\tvar c = Math.cos( angle );\r\n\t\t\tvar s = Math.sin( angle );\r\n\t\t\tvar t = 1 - c;\r\n\t\t\tvar x = axis.x, y = axis.y, z = axis.z;\r\n\t\t\tvar tx = t * x, ty = t * y;\r\n\t\r\n\t\t\tthis.set(\r\n\t\r\n\t\t\t\ttx * x + c, tx * y - s * z, tx * z + s * y, 0,\r\n\t\t\t\ttx * y + s * z, ty * y + c, ty * z - s * x, 0,\r\n\t\t\t\ttx * z - s * y, ty * z + s * x, t * z * z + c, 0,\r\n\t\t\t\t0, 0, 0, 1\r\n\t\r\n\t\t\t);\r\n\t\r\n\t\t\t return this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmakeScale: function ( x, y, z ) {\r\n\t\r\n\t\t\tthis.set(\r\n\t\r\n\t\t\t\tx, 0, 0, 0,\r\n\t\t\t\t0, y, 0, 0,\r\n\t\t\t\t0, 0, z, 0,\r\n\t\t\t\t0, 0, 0, 1\r\n\t\r\n\t\t\t);\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcompose: function ( position, quaternion, scale ) {\r\n\t\r\n\t\t\tthis.makeRotationFromQuaternion( quaternion );\r\n\t\t\tthis.scale( scale );\r\n\t\t\tthis.setPosition( position );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdecompose: function () {\r\n\t\r\n\t\t\tvar vector, matrix;\r\n\t\r\n\t\t\treturn function ( position, quaternion, scale ) {\r\n\t\r\n\t\t\t\tif ( vector === undefined ) vector = new THREE.Vector3();\r\n\t\t\t\tif ( matrix === undefined ) matrix = new THREE.Matrix4();\r\n\t\r\n\t\t\t\tvar te = this.elements;\r\n\t\r\n\t\t\t\tvar sx = vector.set( te[ 0 ], te[ 1 ], te[ 2 ] ).length();\r\n\t\t\t\tvar sy = vector.set( te[ 4 ], te[ 5 ], te[ 6 ] ).length();\r\n\t\t\t\tvar sz = vector.set( te[ 8 ], te[ 9 ], te[ 10 ] ).length();\r\n\t\r\n\t\t\t\t// if determine is negative, we need to invert one scale\r\n\t\t\t\tvar det = this.determinant();\r\n\t\t\t\tif ( det < 0 ) {\r\n\t\r\n\t\t\t\t\tsx = - sx;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tposition.x = te[ 12 ];\r\n\t\t\t\tposition.y = te[ 13 ];\r\n\t\t\t\tposition.z = te[ 14 ];\r\n\t\r\n\t\t\t\t// scale the rotation part\r\n\t\r\n\t\t\t\tmatrix.elements.set( this.elements ); // at this point matrix is incomplete so we can't use .copy()\r\n\t\r\n\t\t\t\tvar invSX = 1 / sx;\r\n\t\t\t\tvar invSY = 1 / sy;\r\n\t\t\t\tvar invSZ = 1 / sz;\r\n\t\r\n\t\t\t\tmatrix.elements[ 0 ] *= invSX;\r\n\t\t\t\tmatrix.elements[ 1 ] *= invSX;\r\n\t\t\t\tmatrix.elements[ 2 ] *= invSX;\r\n\t\r\n\t\t\t\tmatrix.elements[ 4 ] *= invSY;\r\n\t\t\t\tmatrix.elements[ 5 ] *= invSY;\r\n\t\t\t\tmatrix.elements[ 6 ] *= invSY;\r\n\t\r\n\t\t\t\tmatrix.elements[ 8 ] *= invSZ;\r\n\t\t\t\tmatrix.elements[ 9 ] *= invSZ;\r\n\t\t\t\tmatrix.elements[ 10 ] *= invSZ;\r\n\t\r\n\t\t\t\tquaternion.setFromRotationMatrix( matrix );\r\n\t\r\n\t\t\t\tscale.x = sx;\r\n\t\t\t\tscale.y = sy;\r\n\t\t\t\tscale.z = sz;\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tmakeFrustum: function ( left, right, bottom, top, near, far ) {\r\n\t\r\n\t\t\tvar te = this.elements;\r\n\t\t\tvar x = 2 * near / ( right - left );\r\n\t\t\tvar y = 2 * near / ( top - bottom );\r\n\t\r\n\t\t\tvar a = ( right + left ) / ( right - left );\r\n\t\t\tvar b = ( top + bottom ) / ( top - bottom );\r\n\t\t\tvar c = - ( far + near ) / ( far - near );\r\n\t\t\tvar d = - 2 * far * near / ( far - near );\r\n\t\r\n\t\t\tte[ 0 ] = x;\tte[ 4 ] = 0;\tte[ 8 ] = a;\tte[ 12 ] = 0;\r\n\t\t\tte[ 1 ] = 0;\tte[ 5 ] = y;\tte[ 9 ] = b;\tte[ 13 ] = 0;\r\n\t\t\tte[ 2 ] = 0;\tte[ 6 ] = 0;\tte[ 10 ] = c;\tte[ 14 ] = d;\r\n\t\t\tte[ 3 ] = 0;\tte[ 7 ] = 0;\tte[ 11 ] = - 1;\tte[ 15 ] = 0;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmakePerspective: function ( fov, aspect, near, far ) {\r\n\t\r\n\t\t\tvar ymax = near * Math.tan( THREE.Math.degToRad( fov * 0.5 ) );\r\n\t\t\tvar ymin = - ymax;\r\n\t\t\tvar xmin = ymin * aspect;\r\n\t\t\tvar xmax = ymax * aspect;\r\n\t\r\n\t\t\treturn this.makeFrustum( xmin, xmax, ymin, ymax, near, far );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmakeOrthographic: function ( left, right, top, bottom, near, far ) {\r\n\t\r\n\t\t\tvar te = this.elements;\r\n\t\t\tvar w = right - left;\r\n\t\t\tvar h = top - bottom;\r\n\t\t\tvar p = far - near;\r\n\t\r\n\t\t\tvar x = ( right + left ) / w;\r\n\t\t\tvar y = ( top + bottom ) / h;\r\n\t\t\tvar z = ( far + near ) / p;\r\n\t\r\n\t\t\tte[ 0 ] = 2 / w;\tte[ 4 ] = 0;\tte[ 8 ] = 0;\tte[ 12 ] = - x;\r\n\t\t\tte[ 1 ] = 0;\tte[ 5 ] = 2 / h;\tte[ 9 ] = 0;\tte[ 13 ] = - y;\r\n\t\t\tte[ 2 ] = 0;\tte[ 6 ] = 0;\tte[ 10 ] = - 2 / p;\tte[ 14 ] = - z;\r\n\t\t\tte[ 3 ] = 0;\tte[ 7 ] = 0;\tte[ 11 ] = 0;\tte[ 15 ] = 1;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tequals: function ( matrix ) {\r\n\t\r\n\t\t\tvar te = this.elements;\r\n\t\t\tvar me = matrix.elements;\r\n\t\r\n\t\t\tfor ( var i = 0; i < 16; i ++ ) {\r\n\t\r\n\t\t\t\tif ( te[ i ] !== me[ i ] ) return false;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn true;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tfromArray: function ( array ) {\r\n\t\r\n\t\t\tthis.elements.set( array );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\ttoArray: function () {\r\n\t\r\n\t\t\tvar te = this.elements;\r\n\t\r\n\t\t\treturn [\r\n\t\t\t\tte[ 0 ], te[ 1 ], te[ 2 ], te[ 3 ],\r\n\t\t\t\tte[ 4 ], te[ 5 ], te[ 6 ], te[ 7 ],\r\n\t\t\t\tte[ 8 ], te[ 9 ], te[ 10 ], te[ 11 ],\r\n\t\t\t\tte[ 12 ], te[ 13 ], te[ 14 ], te[ 15 ]\r\n\t\t\t];\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/math/Ray.js\r\n\t\r\n\t/**\r\n\t * @author bhouston / http://exocortex.com\r\n\t */\r\n\t\r\n\tTHREE.Ray = function ( origin, direction ) {\r\n\t\r\n\t\tthis.origin = ( origin !== undefined ) ? origin : new THREE.Vector3();\r\n\t\tthis.direction = ( direction !== undefined ) ? direction : new THREE.Vector3();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Ray.prototype = {\r\n\t\r\n\t\tconstructor: THREE.Ray,\r\n\t\r\n\t\tset: function ( origin, direction ) {\r\n\t\r\n\t\t\tthis.origin.copy( origin );\r\n\t\t\tthis.direction.copy( direction );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclone: function () {\r\n\t\r\n\t\t\treturn new this.constructor().copy( this );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopy: function ( ray ) {\r\n\t\r\n\t\t\tthis.origin.copy( ray.origin );\r\n\t\t\tthis.direction.copy( ray.direction );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tat: function ( t, optionalTarget ) {\r\n\t\r\n\t\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\r\n\t\t\treturn result.copy( this.direction ).multiplyScalar( t ).add( this.origin );\r\n\t\r\n\t\t},\r\n\t\r\n\t\trecast: function () {\r\n\t\r\n\t\t\tvar v1 = new THREE.Vector3();\r\n\t\r\n\t\t\treturn function ( t ) {\r\n\t\r\n\t\t\t\tthis.origin.copy( this.at( t, v1 ) );\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tclosestPointToPoint: function ( point, optionalTarget ) {\r\n\t\r\n\t\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\t\tresult.subVectors( point, this.origin );\r\n\t\t\tvar directionDistance = result.dot( this.direction );\r\n\t\r\n\t\t\tif ( directionDistance < 0 ) {\r\n\t\r\n\t\t\t\treturn result.copy( this.origin );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn result.copy( this.direction ).multiplyScalar( directionDistance ).add( this.origin );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdistanceToPoint: function ( point ) {\r\n\t\r\n\t\t\treturn Math.sqrt( this.distanceSqToPoint( point ) );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdistanceSqToPoint: function () {\r\n\t\r\n\t\t\tvar v1 = new THREE.Vector3();\r\n\t\r\n\t\t\treturn function ( point ) {\r\n\t\r\n\t\t\t\tvar directionDistance = v1.subVectors( point, this.origin ).dot( this.direction );\r\n\t\r\n\t\t\t\t// point behind the ray\r\n\t\r\n\t\t\t\tif ( directionDistance < 0 ) {\r\n\t\r\n\t\t\t\t\treturn this.origin.distanceToSquared( point );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tv1.copy( this.direction ).multiplyScalar( directionDistance ).add( this.origin );\r\n\t\r\n\t\t\t\treturn v1.distanceToSquared( point );\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tdistanceSqToSegment: function () {\r\n\t\r\n\t\t\tvar segCenter = new THREE.Vector3();\r\n\t\t\tvar segDir = new THREE.Vector3();\r\n\t\t\tvar diff = new THREE.Vector3();\r\n\t\r\n\t\t\treturn function ( v0, v1, optionalPointOnRay, optionalPointOnSegment ) {\r\n\t\r\n\t\t\t\t// from http://www.geometrictools.com/LibMathematics/Distance/Wm5DistRay3Segment3.cpp\r\n\t\t\t\t// It returns the min distance between the ray and the segment\r\n\t\t\t\t// defined by v0 and v1\r\n\t\t\t\t// It can also set two optional targets :\r\n\t\t\t\t// - The closest point on the ray\r\n\t\t\t\t// - The closest point on the segment\r\n\t\r\n\t\t\t\tsegCenter.copy( v0 ).add( v1 ).multiplyScalar( 0.5 );\r\n\t\t\t\tsegDir.copy( v1 ).sub( v0 ).normalize();\r\n\t\t\t\tdiff.copy( this.origin ).sub( segCenter );\r\n\t\r\n\t\t\t\tvar segExtent = v0.distanceTo( v1 ) * 0.5;\r\n\t\t\t\tvar a01 = - this.direction.dot( segDir );\r\n\t\t\t\tvar b0 = diff.dot( this.direction );\r\n\t\t\t\tvar b1 = - diff.dot( segDir );\r\n\t\t\t\tvar c = diff.lengthSq();\r\n\t\t\t\tvar det = Math.abs( 1 - a01 * a01 );\r\n\t\t\t\tvar s0, s1, sqrDist, extDet;\r\n\t\r\n\t\t\t\tif ( det > 0 ) {\r\n\t\r\n\t\t\t\t\t// The ray and segment are not parallel.\r\n\t\r\n\t\t\t\t\ts0 = a01 * b1 - b0;\r\n\t\t\t\t\ts1 = a01 * b0 - b1;\r\n\t\t\t\t\textDet = segExtent * det;\r\n\t\r\n\t\t\t\t\tif ( s0 >= 0 ) {\r\n\t\r\n\t\t\t\t\t\tif ( s1 >= - extDet ) {\r\n\t\r\n\t\t\t\t\t\t\tif ( s1 <= extDet ) {\r\n\t\r\n\t\t\t\t\t\t\t\t// region 0\r\n\t\t\t\t\t\t\t\t// Minimum at interior points of ray and segment.\r\n\t\r\n\t\t\t\t\t\t\t\tvar invDet = 1 / det;\r\n\t\t\t\t\t\t\t\ts0 *= invDet;\r\n\t\t\t\t\t\t\t\ts1 *= invDet;\r\n\t\t\t\t\t\t\t\tsqrDist = s0 * ( s0 + a01 * s1 + 2 * b0 ) + s1 * ( a01 * s0 + s1 + 2 * b1 ) + c;\r\n\t\r\n\t\t\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\t\t\t// region 1\r\n\t\r\n\t\t\t\t\t\t\t\ts1 = segExtent;\r\n\t\t\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\r\n\t\t\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\r\n\t\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\t\t// region 5\r\n\t\r\n\t\t\t\t\t\t\ts1 = - segExtent;\r\n\t\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\r\n\t\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\tif ( s1 <= - extDet ) {\r\n\t\r\n\t\t\t\t\t\t\t// region 4\r\n\t\r\n\t\t\t\t\t\t\ts0 = Math.max( 0, - ( - a01 * segExtent + b0 ) );\r\n\t\t\t\t\t\t\ts1 = ( s0 > 0 ) ? - segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\r\n\t\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\r\n\t\r\n\t\t\t\t\t\t} else if ( s1 <= extDet ) {\r\n\t\r\n\t\t\t\t\t\t\t// region 3\r\n\t\r\n\t\t\t\t\t\t\ts0 = 0;\r\n\t\t\t\t\t\t\ts1 = Math.min( Math.max( - segExtent, - b1 ), segExtent );\r\n\t\t\t\t\t\t\tsqrDist = s1 * ( s1 + 2 * b1 ) + c;\r\n\t\r\n\t\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\t\t// region 2\r\n\t\r\n\t\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * segExtent + b0 ) );\r\n\t\t\t\t\t\t\ts1 = ( s0 > 0 ) ? segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\r\n\t\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t// Ray and segment are parallel.\r\n\t\r\n\t\t\t\t\ts1 = ( a01 > 0 ) ? - segExtent : segExtent;\r\n\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\r\n\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( optionalPointOnRay ) {\r\n\t\r\n\t\t\t\t\toptionalPointOnRay.copy( this.direction ).multiplyScalar( s0 ).add( this.origin );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( optionalPointOnSegment ) {\r\n\t\r\n\t\t\t\t\toptionalPointOnSegment.copy( segDir ).multiplyScalar( s1 ).add( segCenter );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn sqrDist;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\r\n\t\tisIntersectionSphere: function ( sphere ) {\r\n\t\r\n\t\t\treturn this.distanceToPoint( sphere.center ) <= sphere.radius;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tintersectSphere: function () {\r\n\t\r\n\t\t\t// from http://www.scratchapixel.com/lessons/3d-basic-lessons/lesson-7-intersecting-simple-shapes/ray-sphere-intersection/\r\n\t\r\n\t\t\tvar v1 = new THREE.Vector3();\r\n\t\r\n\t\t\treturn function ( sphere, optionalTarget ) {\r\n\t\r\n\t\t\t\tv1.subVectors( sphere.center, this.origin );\r\n\t\r\n\t\t\t\tvar tca = v1.dot( this.direction );\r\n\t\r\n\t\t\t\tvar d2 = v1.dot( v1 ) - tca * tca;\r\n\t\r\n\t\t\t\tvar radius2 = sphere.radius * sphere.radius;\r\n\t\r\n\t\t\t\tif ( d2 > radius2 ) return null;\r\n\t\r\n\t\t\t\tvar thc = Math.sqrt( radius2 - d2 );\r\n\t\r\n\t\t\t\t// t0 = first intersect point - entrance on front of sphere\r\n\t\t\t\tvar t0 = tca - thc;\r\n\t\r\n\t\t\t\t// t1 = second intersect point - exit point on back of sphere\r\n\t\t\t\tvar t1 = tca + thc;\r\n\t\r\n\t\t\t\t// test to see if both t0 and t1 are behind the ray - if so, return null\r\n\t\t\t\tif ( t0 < 0 && t1 < 0 ) return null;\r\n\t\r\n\t\t\t\t// test to see if t0 is behind the ray:\r\n\t\t\t\t// if it is, the ray is inside the sphere, so return the second exit point scaled by t1,\r\n\t\t\t\t// in order to always return an intersect point that is in front of the ray.\r\n\t\t\t\tif ( t0 < 0 ) return this.at( t1, optionalTarget );\r\n\t\r\n\t\t\t\t// else t0 is in front of the ray, so return the first collision point scaled by t0\r\n\t\t\t\treturn this.at( t0, optionalTarget );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tisIntersectionPlane: function ( plane ) {\r\n\t\r\n\t\t\t// check if the ray lies on the plane first\r\n\t\r\n\t\t\tvar distToPoint = plane.distanceToPoint( this.origin );\r\n\t\r\n\t\t\tif ( distToPoint === 0 ) {\r\n\t\r\n\t\t\t\treturn true;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar denominator = plane.normal.dot( this.direction );\r\n\t\r\n\t\t\tif ( denominator * distToPoint < 0 ) {\r\n\t\r\n\t\t\t\treturn true;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// ray origin is behind the plane (and is pointing behind it)\r\n\t\r\n\t\t\treturn false;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdistanceToPlane: function ( plane ) {\r\n\t\r\n\t\t\tvar denominator = plane.normal.dot( this.direction );\r\n\t\t\tif ( denominator === 0 ) {\r\n\t\r\n\t\t\t\t// line is coplanar, return origin\r\n\t\t\t\tif ( plane.distanceToPoint( this.origin ) === 0 ) {\r\n\t\r\n\t\t\t\t\treturn 0;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// Null is preferable to undefined since undefined means.... it is undefined\r\n\t\r\n\t\t\t\treturn null;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar t = - ( this.origin.dot( plane.normal ) + plane.constant ) / denominator;\r\n\t\r\n\t\t\t// Return if the ray never intersects the plane\r\n\t\r\n\t\t\treturn t >= 0 ? t :  null;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tintersectPlane: function ( plane, optionalTarget ) {\r\n\t\r\n\t\t\tvar t = this.distanceToPlane( plane );\r\n\t\r\n\t\t\tif ( t === null ) {\r\n\t\r\n\t\t\t\treturn null;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this.at( t, optionalTarget );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tisIntersectionBox: function () {\r\n\t\r\n\t\t\tvar v = new THREE.Vector3();\r\n\t\r\n\t\t\treturn function ( box ) {\r\n\t\r\n\t\t\t\treturn this.intersectBox( box, v ) !== null;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tintersectBox: function ( box, optionalTarget ) {\r\n\t\r\n\t\t\t// http://www.scratchapixel.com/lessons/3d-basic-lessons/lesson-7-intersecting-simple-shapes/ray-box-intersection/\r\n\t\r\n\t\t\tvar tmin, tmax, tymin, tymax, tzmin, tzmax;\r\n\t\r\n\t\t\tvar invdirx = 1 / this.direction.x,\r\n\t\t\t\tinvdiry = 1 / this.direction.y,\r\n\t\t\t\tinvdirz = 1 / this.direction.z;\r\n\t\r\n\t\t\tvar origin = this.origin;\r\n\t\r\n\t\t\tif ( invdirx >= 0 ) {\r\n\t\r\n\t\t\t\ttmin = ( box.min.x - origin.x ) * invdirx;\r\n\t\t\t\ttmax = ( box.max.x - origin.x ) * invdirx;\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\ttmin = ( box.max.x - origin.x ) * invdirx;\r\n\t\t\t\ttmax = ( box.min.x - origin.x ) * invdirx;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( invdiry >= 0 ) {\r\n\t\r\n\t\t\t\ttymin = ( box.min.y - origin.y ) * invdiry;\r\n\t\t\t\ttymax = ( box.max.y - origin.y ) * invdiry;\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\ttymin = ( box.max.y - origin.y ) * invdiry;\r\n\t\t\t\ttymax = ( box.min.y - origin.y ) * invdiry;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( ( tmin > tymax ) || ( tymin > tmax ) ) return null;\r\n\t\r\n\t\t\t// These lines also handle the case where tmin or tmax is NaN\r\n\t\t\t// (result of 0 * Infinity). x !== x returns true if x is NaN\r\n\t\r\n\t\t\tif ( tymin > tmin || tmin !== tmin ) tmin = tymin;\r\n\t\r\n\t\t\tif ( tymax < tmax || tmax !== tmax ) tmax = tymax;\r\n\t\r\n\t\t\tif ( invdirz >= 0 ) {\r\n\t\r\n\t\t\t\ttzmin = ( box.min.z - origin.z ) * invdirz;\r\n\t\t\t\ttzmax = ( box.max.z - origin.z ) * invdirz;\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\ttzmin = ( box.max.z - origin.z ) * invdirz;\r\n\t\t\t\ttzmax = ( box.min.z - origin.z ) * invdirz;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( ( tmin > tzmax ) || ( tzmin > tmax ) ) return null;\r\n\t\r\n\t\t\tif ( tzmin > tmin || tmin !== tmin ) tmin = tzmin;\r\n\t\r\n\t\t\tif ( tzmax < tmax || tmax !== tmax ) tmax = tzmax;\r\n\t\r\n\t\t\t//return point closest to the ray (positive side)\r\n\t\r\n\t\t\tif ( tmax < 0 ) return null;\r\n\t\r\n\t\t\treturn this.at( tmin >= 0 ? tmin : tmax, optionalTarget );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tintersectTriangle: function () {\r\n\t\r\n\t\t\t// Compute the offset origin, edges, and normal.\r\n\t\t\tvar diff = new THREE.Vector3();\r\n\t\t\tvar edge1 = new THREE.Vector3();\r\n\t\t\tvar edge2 = new THREE.Vector3();\r\n\t\t\tvar normal = new THREE.Vector3();\r\n\t\r\n\t\t\treturn function ( a, b, c, backfaceCulling, optionalTarget ) {\r\n\t\r\n\t\t\t\t// from http://www.geometrictools.com/LibMathematics/Intersection/Wm5IntrRay3Triangle3.cpp\r\n\t\r\n\t\t\t\tedge1.subVectors( b, a );\r\n\t\t\t\tedge2.subVectors( c, a );\r\n\t\t\t\tnormal.crossVectors( edge1, edge2 );\r\n\t\r\n\t\t\t\t// Solve Q + t*D = b1*E1 + b2*E2 (Q = kDiff, D = ray direction,\r\n\t\t\t\t// E1 = kEdge1, E2 = kEdge2, N = Cross(E1,E2)) by\r\n\t\t\t\t//   |Dot(D,N)|*b1 = sign(Dot(D,N))*Dot(D,Cross(Q,E2))\r\n\t\t\t\t//   |Dot(D,N)|*b2 = sign(Dot(D,N))*Dot(D,Cross(E1,Q))\r\n\t\t\t\t//   |Dot(D,N)|*t = -sign(Dot(D,N))*Dot(Q,N)\r\n\t\t\t\tvar DdN = this.direction.dot( normal );\r\n\t\t\t\tvar sign;\r\n\t\r\n\t\t\t\tif ( DdN > 0 ) {\r\n\t\r\n\t\t\t\t\tif ( backfaceCulling ) return null;\r\n\t\t\t\t\tsign = 1;\r\n\t\r\n\t\t\t\t} else if ( DdN < 0 ) {\r\n\t\r\n\t\t\t\t\tsign = - 1;\r\n\t\t\t\t\tDdN = - DdN;\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\treturn null;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tdiff.subVectors( this.origin, a );\r\n\t\t\t\tvar DdQxE2 = sign * this.direction.dot( edge2.crossVectors( diff, edge2 ) );\r\n\t\r\n\t\t\t\t// b1 < 0, no intersection\r\n\t\t\t\tif ( DdQxE2 < 0 ) {\r\n\t\r\n\t\t\t\t\treturn null;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar DdE1xQ = sign * this.direction.dot( edge1.cross( diff ) );\r\n\t\r\n\t\t\t\t// b2 < 0, no intersection\r\n\t\t\t\tif ( DdE1xQ < 0 ) {\r\n\t\r\n\t\t\t\t\treturn null;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// b1+b2 > 1, no intersection\r\n\t\t\t\tif ( DdQxE2 + DdE1xQ > DdN ) {\r\n\t\r\n\t\t\t\t\treturn null;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// Line intersects triangle, check if ray does.\r\n\t\t\t\tvar QdN = - sign * diff.dot( normal );\r\n\t\r\n\t\t\t\t// t < 0, no intersection\r\n\t\t\t\tif ( QdN < 0 ) {\r\n\t\r\n\t\t\t\t\treturn null;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// Ray intersects triangle.\r\n\t\t\t\treturn this.at( QdN / DdN, optionalTarget );\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tapplyMatrix4: function ( matrix4 ) {\r\n\t\r\n\t\t\tthis.direction.add( this.origin ).applyMatrix4( matrix4 );\r\n\t\t\tthis.origin.applyMatrix4( matrix4 );\r\n\t\t\tthis.direction.sub( this.origin );\r\n\t\t\tthis.direction.normalize();\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tequals: function ( ray ) {\r\n\t\r\n\t\t\treturn ray.origin.equals( this.origin ) && ray.direction.equals( this.direction );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/math/Sphere.js\r\n\t\r\n\t/**\r\n\t * @author bhouston / http://exocortex.com\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.Sphere = function ( center, radius ) {\r\n\t\r\n\t\tthis.center = ( center !== undefined ) ? center : new THREE.Vector3();\r\n\t\tthis.radius = ( radius !== undefined ) ? radius : 0;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Sphere.prototype = {\r\n\t\r\n\t\tconstructor: THREE.Sphere,\r\n\t\r\n\t\tset: function ( center, radius ) {\r\n\t\r\n\t\t\tthis.center.copy( center );\r\n\t\t\tthis.radius = radius;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetFromPoints: function () {\r\n\t\r\n\t\t\tvar box = new THREE.Box3();\r\n\t\r\n\t\t\treturn function ( points, optionalCenter ) {\r\n\t\r\n\t\t\t\tvar center = this.center;\r\n\t\r\n\t\t\t\tif ( optionalCenter !== undefined ) {\r\n\t\r\n\t\t\t\t\tcenter.copy( optionalCenter );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tbox.setFromPoints( points ).center( center );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar maxRadiusSq = 0;\r\n\t\r\n\t\t\t\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( points[ i ] ) );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tthis.radius = Math.sqrt( maxRadiusSq );\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tclone: function () {\r\n\t\r\n\t\t\treturn new this.constructor().copy( this );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopy: function ( sphere ) {\r\n\t\r\n\t\t\tthis.center.copy( sphere.center );\r\n\t\t\tthis.radius = sphere.radius;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tempty: function () {\r\n\t\r\n\t\t\treturn ( this.radius <= 0 );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcontainsPoint: function ( point ) {\r\n\t\r\n\t\t\treturn ( point.distanceToSquared( this.center ) <= ( this.radius * this.radius ) );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdistanceToPoint: function ( point ) {\r\n\t\r\n\t\t\treturn ( point.distanceTo( this.center ) - this.radius );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tintersectsSphere: function ( sphere ) {\r\n\t\r\n\t\t\tvar radiusSum = this.radius + sphere.radius;\r\n\t\r\n\t\t\treturn sphere.center.distanceToSquared( this.center ) <= ( radiusSum * radiusSum );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclampPoint: function ( point, optionalTarget ) {\r\n\t\r\n\t\t\tvar deltaLengthSq = this.center.distanceToSquared( point );\r\n\t\r\n\t\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\t\tresult.copy( point );\r\n\t\r\n\t\t\tif ( deltaLengthSq > ( this.radius * this.radius ) ) {\r\n\t\r\n\t\t\t\tresult.sub( this.center ).normalize();\r\n\t\t\t\tresult.multiplyScalar( this.radius ).add( this.center );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn result;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetBoundingBox: function ( optionalTarget ) {\r\n\t\r\n\t\t\tvar box = optionalTarget || new THREE.Box3();\r\n\t\r\n\t\t\tbox.set( this.center, this.center );\r\n\t\t\tbox.expandByScalar( this.radius );\r\n\t\r\n\t\t\treturn box;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tapplyMatrix4: function ( matrix ) {\r\n\t\r\n\t\t\tthis.center.applyMatrix4( matrix );\r\n\t\t\tthis.radius = this.radius * matrix.getMaxScaleOnAxis();\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\ttranslate: function ( offset ) {\r\n\t\r\n\t\t\tthis.center.add( offset );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tequals: function ( sphere ) {\r\n\t\r\n\t\t\treturn sphere.center.equals( this.center ) && ( sphere.radius === this.radius );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/math/Frustum.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author bhouston / http://exocortex.com\r\n\t */\r\n\t\r\n\tTHREE.Frustum = function ( p0, p1, p2, p3, p4, p5 ) {\r\n\t\r\n\t\tthis.planes = [\r\n\t\r\n\t\t\t( p0 !== undefined ) ? p0 : new THREE.Plane(),\r\n\t\t\t( p1 !== undefined ) ? p1 : new THREE.Plane(),\r\n\t\t\t( p2 !== undefined ) ? p2 : new THREE.Plane(),\r\n\t\t\t( p3 !== undefined ) ? p3 : new THREE.Plane(),\r\n\t\t\t( p4 !== undefined ) ? p4 : new THREE.Plane(),\r\n\t\t\t( p5 !== undefined ) ? p5 : new THREE.Plane()\r\n\t\r\n\t\t];\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Frustum.prototype = {\r\n\t\r\n\t\tconstructor: THREE.Frustum,\r\n\t\r\n\t\tset: function ( p0, p1, p2, p3, p4, p5 ) {\r\n\t\r\n\t\t\tvar planes = this.planes;\r\n\t\r\n\t\t\tplanes[ 0 ].copy( p0 );\r\n\t\t\tplanes[ 1 ].copy( p1 );\r\n\t\t\tplanes[ 2 ].copy( p2 );\r\n\t\t\tplanes[ 3 ].copy( p3 );\r\n\t\t\tplanes[ 4 ].copy( p4 );\r\n\t\t\tplanes[ 5 ].copy( p5 );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclone: function () {\r\n\t\r\n\t\t\treturn new this.constructor().copy( this );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopy: function ( frustum ) {\r\n\t\r\n\t\t\tvar planes = this.planes;\r\n\t\r\n\t\t\tfor ( var i = 0; i < 6; i ++ ) {\r\n\t\r\n\t\t\t\tplanes[ i ].copy( frustum.planes[ i ] );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetFromMatrix: function ( m ) {\r\n\t\r\n\t\t\tvar planes = this.planes;\r\n\t\t\tvar me = m.elements;\r\n\t\t\tvar me0 = me[ 0 ], me1 = me[ 1 ], me2 = me[ 2 ], me3 = me[ 3 ];\r\n\t\t\tvar me4 = me[ 4 ], me5 = me[ 5 ], me6 = me[ 6 ], me7 = me[ 7 ];\r\n\t\t\tvar me8 = me[ 8 ], me9 = me[ 9 ], me10 = me[ 10 ], me11 = me[ 11 ];\r\n\t\t\tvar me12 = me[ 12 ], me13 = me[ 13 ], me14 = me[ 14 ], me15 = me[ 15 ];\r\n\t\r\n\t\t\tplanes[ 0 ].setComponents( me3 - me0, me7 - me4, me11 - me8, me15 - me12 ).normalize();\r\n\t\t\tplanes[ 1 ].setComponents( me3 + me0, me7 + me4, me11 + me8, me15 + me12 ).normalize();\r\n\t\t\tplanes[ 2 ].setComponents( me3 + me1, me7 + me5, me11 + me9, me15 + me13 ).normalize();\r\n\t\t\tplanes[ 3 ].setComponents( me3 - me1, me7 - me5, me11 - me9, me15 - me13 ).normalize();\r\n\t\t\tplanes[ 4 ].setComponents( me3 - me2, me7 - me6, me11 - me10, me15 - me14 ).normalize();\r\n\t\t\tplanes[ 5 ].setComponents( me3 + me2, me7 + me6, me11 + me10, me15 + me14 ).normalize();\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tintersectsObject: function () {\r\n\t\r\n\t\t\tvar sphere = new THREE.Sphere();\r\n\t\r\n\t\t\treturn function ( object ) {\r\n\t\r\n\t\t\t\tvar geometry = object.geometry;\r\n\t\r\n\t\t\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\r\n\t\r\n\t\t\t\tsphere.copy( geometry.boundingSphere );\r\n\t\t\t\tsphere.applyMatrix4( object.matrixWorld );\r\n\t\r\n\t\t\t\treturn this.intersectsSphere( sphere );\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tintersectsSphere: function ( sphere ) {\r\n\t\r\n\t\t\tvar planes = this.planes;\r\n\t\t\tvar center = sphere.center;\r\n\t\t\tvar negRadius = - sphere.radius;\r\n\t\r\n\t\t\tfor ( var i = 0; i < 6; i ++ ) {\r\n\t\r\n\t\t\t\tvar distance = planes[ i ].distanceToPoint( center );\r\n\t\r\n\t\t\t\tif ( distance < negRadius ) {\r\n\t\r\n\t\t\t\t\treturn false;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn true;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tintersectsBox: function () {\r\n\t\r\n\t\t\tvar p1 = new THREE.Vector3(),\r\n\t\t\t\tp2 = new THREE.Vector3();\r\n\t\r\n\t\t\treturn function ( box ) {\r\n\t\r\n\t\t\t\tvar planes = this.planes;\r\n\t\r\n\t\t\t\tfor ( var i = 0; i < 6 ; i ++ ) {\r\n\t\r\n\t\t\t\t\tvar plane = planes[ i ];\r\n\t\r\n\t\t\t\t\tp1.x = plane.normal.x > 0 ? box.min.x : box.max.x;\r\n\t\t\t\t\tp2.x = plane.normal.x > 0 ? box.max.x : box.min.x;\r\n\t\t\t\t\tp1.y = plane.normal.y > 0 ? box.min.y : box.max.y;\r\n\t\t\t\t\tp2.y = plane.normal.y > 0 ? box.max.y : box.min.y;\r\n\t\t\t\t\tp1.z = plane.normal.z > 0 ? box.min.z : box.max.z;\r\n\t\t\t\t\tp2.z = plane.normal.z > 0 ? box.max.z : box.min.z;\r\n\t\r\n\t\t\t\t\tvar d1 = plane.distanceToPoint( p1 );\r\n\t\t\t\t\tvar d2 = plane.distanceToPoint( p2 );\r\n\t\r\n\t\t\t\t\t// if both outside plane, no intersection\r\n\t\r\n\t\t\t\t\tif ( d1 < 0 && d2 < 0 ) {\r\n\t\r\n\t\t\t\t\t\treturn false;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn true;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\r\n\t\tcontainsPoint: function ( point ) {\r\n\t\r\n\t\t\tvar planes = this.planes;\r\n\t\r\n\t\t\tfor ( var i = 0; i < 6; i ++ ) {\r\n\t\r\n\t\t\t\tif ( planes[ i ].distanceToPoint( point ) < 0 ) {\r\n\t\r\n\t\t\t\t\treturn false;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn true;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/math/Plane.js\r\n\t\r\n\t/**\r\n\t * @author bhouston / http://exocortex.com\r\n\t */\r\n\t\r\n\tTHREE.Plane = function ( normal, constant ) {\r\n\t\r\n\t\tthis.normal = ( normal !== undefined ) ? normal : new THREE.Vector3( 1, 0, 0 );\r\n\t\tthis.constant = ( constant !== undefined ) ? constant : 0;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Plane.prototype = {\r\n\t\r\n\t\tconstructor: THREE.Plane,\r\n\t\r\n\t\tset: function ( normal, constant ) {\r\n\t\r\n\t\t\tthis.normal.copy( normal );\r\n\t\t\tthis.constant = constant;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetComponents: function ( x, y, z, w ) {\r\n\t\r\n\t\t\tthis.normal.set( x, y, z );\r\n\t\t\tthis.constant = w;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetFromNormalAndCoplanarPoint: function ( normal, point ) {\r\n\t\r\n\t\t\tthis.normal.copy( normal );\r\n\t\t\tthis.constant = - point.dot( this.normal );\t// must be this.normal, not normal, as this.normal is normalized\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetFromCoplanarPoints: function () {\r\n\t\r\n\t\t\tvar v1 = new THREE.Vector3();\r\n\t\t\tvar v2 = new THREE.Vector3();\r\n\t\r\n\t\t\treturn function ( a, b, c ) {\r\n\t\r\n\t\t\t\tvar normal = v1.subVectors( c, b ).cross( v2.subVectors( a, b ) ).normalize();\r\n\t\r\n\t\t\t\t// Q: should an error be thrown if normal is zero (e.g. degenerate plane)?\r\n\t\r\n\t\t\t\tthis.setFromNormalAndCoplanarPoint( normal, a );\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tclone: function () {\r\n\t\r\n\t\t\treturn new this.constructor().copy( this );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopy: function ( plane ) {\r\n\t\r\n\t\t\tthis.normal.copy( plane.normal );\r\n\t\t\tthis.constant = plane.constant;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tnormalize: function () {\r\n\t\r\n\t\t\t// Note: will lead to a divide by zero if the plane is invalid.\r\n\t\r\n\t\t\tvar inverseNormalLength = 1.0 / this.normal.length();\r\n\t\t\tthis.normal.multiplyScalar( inverseNormalLength );\r\n\t\t\tthis.constant *= inverseNormalLength;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tnegate: function () {\r\n\t\r\n\t\t\tthis.constant *= - 1;\r\n\t\t\tthis.normal.negate();\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdistanceToPoint: function ( point ) {\r\n\t\r\n\t\t\treturn this.normal.dot( point ) + this.constant;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdistanceToSphere: function ( sphere ) {\r\n\t\r\n\t\t\treturn this.distanceToPoint( sphere.center ) - sphere.radius;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tprojectPoint: function ( point, optionalTarget ) {\r\n\t\r\n\t\t\treturn this.orthoPoint( point, optionalTarget ).sub( point ).negate();\r\n\t\r\n\t\t},\r\n\t\r\n\t\torthoPoint: function ( point, optionalTarget ) {\r\n\t\r\n\t\t\tvar perpendicularMagnitude = this.distanceToPoint( point );\r\n\t\r\n\t\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\t\treturn result.copy( this.normal ).multiplyScalar( perpendicularMagnitude );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tisIntersectionLine: function ( line ) {\r\n\t\r\n\t\t\t// Note: this tests if a line intersects the plane, not whether it (or its end-points) are coplanar with it.\r\n\t\r\n\t\t\tvar startSign = this.distanceToPoint( line.start );\r\n\t\t\tvar endSign = this.distanceToPoint( line.end );\r\n\t\r\n\t\t\treturn ( startSign < 0 && endSign > 0 ) || ( endSign < 0 && startSign > 0 );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tintersectLine: function () {\r\n\t\r\n\t\t\tvar v1 = new THREE.Vector3();\r\n\t\r\n\t\t\treturn function ( line, optionalTarget ) {\r\n\t\r\n\t\t\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\r\n\t\t\t\tvar direction = line.delta( v1 );\r\n\t\r\n\t\t\t\tvar denominator = this.normal.dot( direction );\r\n\t\r\n\t\t\t\tif ( denominator === 0 ) {\r\n\t\r\n\t\t\t\t\t// line is coplanar, return origin\r\n\t\t\t\t\tif ( this.distanceToPoint( line.start ) === 0 ) {\r\n\t\r\n\t\t\t\t\t\treturn result.copy( line.start );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t// Unsure if this is the correct method to handle this case.\r\n\t\t\t\t\treturn undefined;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar t = - ( line.start.dot( this.normal ) + this.constant ) / denominator;\r\n\t\r\n\t\t\t\tif ( t < 0 || t > 1 ) {\r\n\t\r\n\t\t\t\t\treturn undefined;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn result.copy( direction ).multiplyScalar( t ).add( line.start );\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\r\n\t\tcoplanarPoint: function ( optionalTarget ) {\r\n\t\r\n\t\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\t\treturn result.copy( this.normal ).multiplyScalar( - this.constant );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tapplyMatrix4: function () {\r\n\t\r\n\t\t\tvar v1 = new THREE.Vector3();\r\n\t\t\tvar v2 = new THREE.Vector3();\r\n\t\t\tvar m1 = new THREE.Matrix3();\r\n\t\r\n\t\t\treturn function ( matrix, optionalNormalMatrix ) {\r\n\t\r\n\t\t\t\t// compute new normal based on theory here:\r\n\t\t\t\t// http://www.songho.ca/opengl/gl_normaltransform.html\r\n\t\t\t\tvar normalMatrix = optionalNormalMatrix || m1.getNormalMatrix( matrix );\r\n\t\t\t\tvar newNormal = v1.copy( this.normal ).applyMatrix3( normalMatrix );\r\n\t\r\n\t\t\t\tvar newCoplanarPoint = this.coplanarPoint( v2 );\r\n\t\t\t\tnewCoplanarPoint.applyMatrix4( matrix );\r\n\t\r\n\t\t\t\tthis.setFromNormalAndCoplanarPoint( newNormal, newCoplanarPoint );\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\ttranslate: function ( offset ) {\r\n\t\r\n\t\t\tthis.constant = this.constant - offset.dot( this.normal );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tequals: function ( plane ) {\r\n\t\r\n\t\t\treturn plane.normal.equals( this.normal ) && ( plane.constant === this.constant );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/math/Math.js\r\n\t\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.Math = {\r\n\t\r\n\t\tgenerateUUID: function () {\r\n\t\r\n\t\t\t// http://www.broofa.com/Tools/Math.uuid.htm\r\n\t\r\n\t\t\tvar chars = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz'.split( '' );\r\n\t\t\tvar uuid = new Array( 36 );\r\n\t\t\tvar rnd = 0, r;\r\n\t\r\n\t\t\treturn function () {\r\n\t\r\n\t\t\t\tfor ( var i = 0; i < 36; i ++ ) {\r\n\t\r\n\t\t\t\t\tif ( i === 8 || i === 13 || i === 18 || i === 23 ) {\r\n\t\r\n\t\t\t\t\t\tuuid[ i ] = '-';\r\n\t\r\n\t\t\t\t\t} else if ( i === 14 ) {\r\n\t\r\n\t\t\t\t\t\tuuid[ i ] = '4';\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\tif ( rnd <= 0x02 ) rnd = 0x2000000 + ( Math.random() * 0x1000000 ) | 0;\r\n\t\t\t\t\t\tr = rnd & 0xf;\r\n\t\t\t\t\t\trnd = rnd >> 4;\r\n\t\t\t\t\t\tuuid[ i ] = chars[ ( i === 19 ) ? ( r & 0x3 ) | 0x8 : r ];\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn uuid.join( '' );\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\t// Clamp value to range <a, b>\r\n\t\r\n\t\tclamp: function ( x, a, b ) {\r\n\t\r\n\t\t\treturn ( x < a ) ? a : ( ( x > b ) ? b : x );\r\n\t\r\n\t\t},\r\n\t\r\n\t\t// Clamp value to range <a, inf)\r\n\t\r\n\t\tclampBottom: function ( x, a ) {\r\n\t\r\n\t\t\treturn x < a ? a : x;\r\n\t\r\n\t\t},\r\n\t\r\n\t\t// compute euclidian modulo of m % n\r\n\t\t// https://en.wikipedia.org/wiki/Modulo_operation\r\n\t\r\n\t\teuclideanModulo: function ( n, m ) {\r\n\t\r\n\t\t\treturn ( ( n % m ) + m ) % m;\r\n\t\r\n\t\t},\r\n\t\r\n\t\t// Linear mapping from range <a1, a2> to range <b1, b2>\r\n\t\r\n\t\tmapLinear: function ( x, a1, a2, b1, b2 ) {\r\n\t\r\n\t\t\treturn b1 + ( x - a1 ) * ( b2 - b1 ) / ( a2 - a1 );\r\n\t\r\n\t\t},\r\n\t\r\n\t\t// http://en.wikipedia.org/wiki/Smoothstep\r\n\t\r\n\t\tsmoothstep: function ( x, min, max ) {\r\n\t\r\n\t\t\tif ( x <= min ) return 0;\r\n\t\t\tif ( x >= max ) return 1;\r\n\t\r\n\t\t\tx = ( x - min ) / ( max - min );\r\n\t\r\n\t\t\treturn x * x * ( 3 - 2 * x );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsmootherstep: function ( x, min, max ) {\r\n\t\r\n\t\t\tif ( x <= min ) return 0;\r\n\t\t\tif ( x >= max ) return 1;\r\n\t\r\n\t\t\tx = ( x - min ) / ( max - min );\r\n\t\r\n\t\t\treturn x * x * x * ( x * ( x * 6 - 15 ) + 10 );\r\n\t\r\n\t\t},\r\n\t\r\n\t\t// Random float from <0, 1> with 16 bits of randomness\r\n\t\t// (standard Math.random() creates repetitive patterns when applied over larger space)\r\n\t\r\n\t\trandom16: function () {\r\n\t\r\n\t\t\treturn ( 65280 * Math.random() + 255 * Math.random() ) / 65535;\r\n\t\r\n\t\t},\r\n\t\r\n\t\t// Random integer from <low, high> interval\r\n\t\r\n\t\trandInt: function ( low, high ) {\r\n\t\r\n\t\t\treturn low + Math.floor( Math.random() * ( high - low + 1 ) );\r\n\t\r\n\t\t},\r\n\t\r\n\t\t// Random float from <low, high> interval\r\n\t\r\n\t\trandFloat: function ( low, high ) {\r\n\t\r\n\t\t\treturn low + Math.random() * ( high - low );\r\n\t\r\n\t\t},\r\n\t\r\n\t\t// Random float from <-range/2, range/2> interval\r\n\t\r\n\t\trandFloatSpread: function ( range ) {\r\n\t\r\n\t\t\treturn range * ( 0.5 - Math.random() );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdegToRad: function () {\r\n\t\r\n\t\t\tvar degreeToRadiansFactor = Math.PI / 180;\r\n\t\r\n\t\t\treturn function ( degrees ) {\r\n\t\r\n\t\t\t\treturn degrees * degreeToRadiansFactor;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tradToDeg: function () {\r\n\t\r\n\t\t\tvar radianToDegreesFactor = 180 / Math.PI;\r\n\t\r\n\t\t\treturn function ( radians ) {\r\n\t\r\n\t\t\t\treturn radians * radianToDegreesFactor;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tisPowerOfTwo: function ( value ) {\r\n\t\r\n\t\t\treturn ( value & ( value - 1 ) ) === 0 && value !== 0;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tnextPowerOfTwo: function ( value ) {\r\n\t\r\n\t\t\tvalue --;\r\n\t\t\tvalue |= value >> 1;\r\n\t\t\tvalue |= value >> 2;\r\n\t\t\tvalue |= value >> 4;\r\n\t\t\tvalue |= value >> 8;\r\n\t\t\tvalue |= value >> 16;\r\n\t\t\tvalue ++;\r\n\t\r\n\t\t\treturn value;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/math/Spline.js\r\n\t\r\n\t/**\r\n\t * Spline from Tween.js, slightly optimized (and trashed)\r\n\t * http://sole.github.com/tween.js/examples/05_spline.html\r\n\t *\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\t\r\n\tTHREE.Spline = function ( points ) {\r\n\t\r\n\t\tthis.points = points;\r\n\t\r\n\t\tvar c = [], v3 = { x: 0, y: 0, z: 0 },\r\n\t\tpoint, intPoint, weight, w2, w3,\r\n\t\tpa, pb, pc, pd;\r\n\t\r\n\t\tthis.initFromArray = function ( a ) {\r\n\t\r\n\t\t\tthis.points = [];\r\n\t\r\n\t\t\tfor ( var i = 0; i < a.length; i ++ ) {\r\n\t\r\n\t\t\t\tthis.points[ i ] = { x: a[ i ][ 0 ], y: a[ i ][ 1 ], z: a[ i ][ 2 ] };\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.getPoint = function ( k ) {\r\n\t\r\n\t\t\tpoint = ( this.points.length - 1 ) * k;\r\n\t\t\tintPoint = Math.floor( point );\r\n\t\t\tweight = point - intPoint;\r\n\t\r\n\t\t\tc[ 0 ] = intPoint === 0 ? intPoint : intPoint - 1;\r\n\t\t\tc[ 1 ] = intPoint;\r\n\t\t\tc[ 2 ] = intPoint  > this.points.length - 2 ? this.points.length - 1 : intPoint + 1;\r\n\t\t\tc[ 3 ] = intPoint  > this.points.length - 3 ? this.points.length - 1 : intPoint + 2;\r\n\t\r\n\t\t\tpa = this.points[ c[ 0 ] ];\r\n\t\t\tpb = this.points[ c[ 1 ] ];\r\n\t\t\tpc = this.points[ c[ 2 ] ];\r\n\t\t\tpd = this.points[ c[ 3 ] ];\r\n\t\r\n\t\t\tw2 = weight * weight;\r\n\t\t\tw3 = weight * w2;\r\n\t\r\n\t\t\tv3.x = interpolate( pa.x, pb.x, pc.x, pd.x, weight, w2, w3 );\r\n\t\t\tv3.y = interpolate( pa.y, pb.y, pc.y, pd.y, weight, w2, w3 );\r\n\t\t\tv3.z = interpolate( pa.z, pb.z, pc.z, pd.z, weight, w2, w3 );\r\n\t\r\n\t\t\treturn v3;\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.getControlPointsArray = function () {\r\n\t\r\n\t\t\tvar i, p, l = this.points.length,\r\n\t\t\t\tcoords = [];\r\n\t\r\n\t\t\tfor ( i = 0; i < l; i ++ ) {\r\n\t\r\n\t\t\t\tp = this.points[ i ];\r\n\t\t\t\tcoords[ i ] = [ p.x, p.y, p.z ];\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn coords;\r\n\t\r\n\t\t};\r\n\t\r\n\t\t// approximate length by summing linear segments\r\n\t\r\n\t\tthis.getLength = function ( nSubDivisions ) {\r\n\t\r\n\t\t\tvar i, index, nSamples, position,\r\n\t\t\t\tpoint = 0, intPoint = 0, oldIntPoint = 0,\r\n\t\t\t\toldPosition = new THREE.Vector3(),\r\n\t\t\t\ttmpVec = new THREE.Vector3(),\r\n\t\t\t\tchunkLengths = [],\r\n\t\t\t\ttotalLength = 0;\r\n\t\r\n\t\t\t// first point has 0 length\r\n\t\r\n\t\t\tchunkLengths[ 0 ] = 0;\r\n\t\r\n\t\t\tif ( ! nSubDivisions ) nSubDivisions = 100;\r\n\t\r\n\t\t\tnSamples = this.points.length * nSubDivisions;\r\n\t\r\n\t\t\toldPosition.copy( this.points[ 0 ] );\r\n\t\r\n\t\t\tfor ( i = 1; i < nSamples; i ++ ) {\r\n\t\r\n\t\t\t\tindex = i / nSamples;\r\n\t\r\n\t\t\t\tposition = this.getPoint( index );\r\n\t\t\t\ttmpVec.copy( position );\r\n\t\r\n\t\t\t\ttotalLength += tmpVec.distanceTo( oldPosition );\r\n\t\r\n\t\t\t\toldPosition.copy( position );\r\n\t\r\n\t\t\t\tpoint = ( this.points.length - 1 ) * index;\r\n\t\t\t\tintPoint = Math.floor( point );\r\n\t\r\n\t\t\t\tif ( intPoint !== oldIntPoint ) {\r\n\t\r\n\t\t\t\t\tchunkLengths[ intPoint ] = totalLength;\r\n\t\t\t\t\toldIntPoint = intPoint;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// last point ends with total length\r\n\t\r\n\t\t\tchunkLengths[ chunkLengths.length ] = totalLength;\r\n\t\r\n\t\t\treturn { chunks: chunkLengths, total: totalLength };\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.reparametrizeByArcLength = function ( samplingCoef ) {\r\n\t\r\n\t\t\tvar i, j,\r\n\t\t\t\tindex, indexCurrent, indexNext,\r\n\t\t\t\trealDistance,\r\n\t\t\t\tsampling, position,\r\n\t\t\t\tnewpoints = [],\r\n\t\t\t\ttmpVec = new THREE.Vector3(),\r\n\t\t\t\tsl = this.getLength();\r\n\t\r\n\t\t\tnewpoints.push( tmpVec.copy( this.points[ 0 ] ).clone() );\r\n\t\r\n\t\t\tfor ( i = 1; i < this.points.length; i ++ ) {\r\n\t\r\n\t\t\t\t//tmpVec.copy( this.points[ i - 1 ] );\r\n\t\t\t\t//linearDistance = tmpVec.distanceTo( this.points[ i ] );\r\n\t\r\n\t\t\t\trealDistance = sl.chunks[ i ] - sl.chunks[ i - 1 ];\r\n\t\r\n\t\t\t\tsampling = Math.ceil( samplingCoef * realDistance / sl.total );\r\n\t\r\n\t\t\t\tindexCurrent = ( i - 1 ) / ( this.points.length - 1 );\r\n\t\t\t\tindexNext = i / ( this.points.length - 1 );\r\n\t\r\n\t\t\t\tfor ( j = 1; j < sampling - 1; j ++ ) {\r\n\t\r\n\t\t\t\t\tindex = indexCurrent + j * ( 1 / sampling ) * ( indexNext - indexCurrent );\r\n\t\r\n\t\t\t\t\tposition = this.getPoint( index );\r\n\t\t\t\t\tnewpoints.push( tmpVec.copy( position ).clone() );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tnewpoints.push( tmpVec.copy( this.points[ i ] ).clone() );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.points = newpoints;\r\n\t\r\n\t\t};\r\n\t\r\n\t\t// Catmull-Rom\r\n\t\r\n\t\tfunction interpolate( p0, p1, p2, p3, t, t2, t3 ) {\r\n\t\r\n\t\t\tvar v0 = ( p2 - p0 ) * 0.5,\r\n\t\t\t\tv1 = ( p3 - p1 ) * 0.5;\r\n\t\r\n\t\t\treturn ( 2 * ( p1 - p2 ) + v0 + v1 ) * t3 + ( - 3 * ( p1 - p2 ) - 2 * v0 - v1 ) * t2 + v0 * t + p1;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/math/Triangle.js\r\n\t\r\n\t/**\r\n\t * @author bhouston / http://exocortex.com\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.Triangle = function ( a, b, c ) {\r\n\t\r\n\t\tthis.a = ( a !== undefined ) ? a : new THREE.Vector3();\r\n\t\tthis.b = ( b !== undefined ) ? b : new THREE.Vector3();\r\n\t\tthis.c = ( c !== undefined ) ? c : new THREE.Vector3();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Triangle.normal = function () {\r\n\t\r\n\t\tvar v0 = new THREE.Vector3();\r\n\t\r\n\t\treturn function ( a, b, c, optionalTarget ) {\r\n\t\r\n\t\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\r\n\t\t\tresult.subVectors( c, b );\r\n\t\t\tv0.subVectors( a, b );\r\n\t\t\tresult.cross( v0 );\r\n\t\r\n\t\t\tvar resultLengthSq = result.lengthSq();\r\n\t\t\tif ( resultLengthSq > 0 ) {\r\n\t\r\n\t\t\t\treturn result.multiplyScalar( 1 / Math.sqrt( resultLengthSq ) );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn result.set( 0, 0, 0 );\r\n\t\r\n\t\t};\r\n\t\r\n\t}();\r\n\t\r\n\t// static/instance method to calculate barycentric coordinates\r\n\t// based on: http://www.blackpawn.com/texts/pointinpoly/default.html\r\n\tTHREE.Triangle.barycoordFromPoint = function () {\r\n\t\r\n\t\tvar v0 = new THREE.Vector3();\r\n\t\tvar v1 = new THREE.Vector3();\r\n\t\tvar v2 = new THREE.Vector3();\r\n\t\r\n\t\treturn function ( point, a, b, c, optionalTarget ) {\r\n\t\r\n\t\t\tv0.subVectors( c, a );\r\n\t\t\tv1.subVectors( b, a );\r\n\t\t\tv2.subVectors( point, a );\r\n\t\r\n\t\t\tvar dot00 = v0.dot( v0 );\r\n\t\t\tvar dot01 = v0.dot( v1 );\r\n\t\t\tvar dot02 = v0.dot( v2 );\r\n\t\t\tvar dot11 = v1.dot( v1 );\r\n\t\t\tvar dot12 = v1.dot( v2 );\r\n\t\r\n\t\t\tvar denom = ( dot00 * dot11 - dot01 * dot01 );\r\n\t\r\n\t\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\r\n\t\t\t// collinear or singular triangle\r\n\t\t\tif ( denom === 0 ) {\r\n\t\r\n\t\t\t\t// arbitrary location outside of triangle?\r\n\t\t\t\t// not sure if this is the best idea, maybe should be returning undefined\r\n\t\t\t\treturn result.set( - 2, - 1, - 1 );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar invDenom = 1 / denom;\r\n\t\t\tvar u = ( dot11 * dot02 - dot01 * dot12 ) * invDenom;\r\n\t\t\tvar v = ( dot00 * dot12 - dot01 * dot02 ) * invDenom;\r\n\t\r\n\t\t\t// barycentric coordinates must always sum to 1\r\n\t\t\treturn result.set( 1 - u - v, v, u );\r\n\t\r\n\t\t};\r\n\t\r\n\t}();\r\n\t\r\n\tTHREE.Triangle.containsPoint = function () {\r\n\t\r\n\t\tvar v1 = new THREE.Vector3();\r\n\t\r\n\t\treturn function ( point, a, b, c ) {\r\n\t\r\n\t\t\tvar result = THREE.Triangle.barycoordFromPoint( point, a, b, c, v1 );\r\n\t\r\n\t\t\treturn ( result.x >= 0 ) && ( result.y >= 0 ) && ( ( result.x + result.y ) <= 1 );\r\n\t\r\n\t\t};\r\n\t\r\n\t}();\r\n\t\r\n\tTHREE.Triangle.prototype = {\r\n\t\r\n\t\tconstructor: THREE.Triangle,\r\n\t\r\n\t\tset: function ( a, b, c ) {\r\n\t\r\n\t\t\tthis.a.copy( a );\r\n\t\t\tthis.b.copy( b );\r\n\t\t\tthis.c.copy( c );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetFromPointsAndIndices: function ( points, i0, i1, i2 ) {\r\n\t\r\n\t\t\tthis.a.copy( points[ i0 ] );\r\n\t\t\tthis.b.copy( points[ i1 ] );\r\n\t\t\tthis.c.copy( points[ i2 ] );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclone: function () {\r\n\t\r\n\t\t\treturn new this.constructor().copy( this );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopy: function ( triangle ) {\r\n\t\r\n\t\t\tthis.a.copy( triangle.a );\r\n\t\t\tthis.b.copy( triangle.b );\r\n\t\t\tthis.c.copy( triangle.c );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tarea: function () {\r\n\t\r\n\t\t\tvar v0 = new THREE.Vector3();\r\n\t\t\tvar v1 = new THREE.Vector3();\r\n\t\r\n\t\t\treturn function () {\r\n\t\r\n\t\t\t\tv0.subVectors( this.c, this.b );\r\n\t\t\t\tv1.subVectors( this.a, this.b );\r\n\t\r\n\t\t\t\treturn v0.cross( v1 ).length() * 0.5;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tmidpoint: function ( optionalTarget ) {\r\n\t\r\n\t\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\t\treturn result.addVectors( this.a, this.b ).add( this.c ).multiplyScalar( 1 / 3 );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tnormal: function ( optionalTarget ) {\r\n\t\r\n\t\t\treturn THREE.Triangle.normal( this.a, this.b, this.c, optionalTarget );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tplane: function ( optionalTarget ) {\r\n\t\r\n\t\t\tvar result = optionalTarget || new THREE.Plane();\r\n\t\r\n\t\t\treturn result.setFromCoplanarPoints( this.a, this.b, this.c );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tbarycoordFromPoint: function ( point, optionalTarget ) {\r\n\t\r\n\t\t\treturn THREE.Triangle.barycoordFromPoint( point, this.a, this.b, this.c, optionalTarget );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcontainsPoint: function ( point ) {\r\n\t\r\n\t\t\treturn THREE.Triangle.containsPoint( point, this.a, this.b, this.c );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tequals: function ( triangle ) {\r\n\t\r\n\t\t\treturn triangle.a.equals( this.a ) && triangle.b.equals( this.b ) && triangle.c.equals( this.c );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/core/Clock.js\r\n\t\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\t\r\n\tTHREE.Clock = function ( autoStart ) {\r\n\t\r\n\t\tthis.autoStart = ( autoStart !== undefined ) ? autoStart : true;\r\n\t\r\n\t\tthis.startTime = 0;\r\n\t\tthis.oldTime = 0;\r\n\t\tthis.elapsedTime = 0;\r\n\t\r\n\t\tthis.running = false;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Clock.prototype = {\r\n\t\r\n\t\tconstructor: THREE.Clock,\r\n\t\r\n\t\tstart: function () {\r\n\t\r\n\t\t\tthis.startTime = self.performance !== undefined && self.performance.now !== undefined\r\n\t\t\t\t\t\t ? self.performance.now()\r\n\t\t\t\t\t\t : Date.now();\r\n\t\r\n\t\t\tthis.oldTime = this.startTime;\r\n\t\t\tthis.running = true;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tstop: function () {\r\n\t\r\n\t\t\tthis.getElapsedTime();\r\n\t\t\tthis.running = false;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetElapsedTime: function () {\r\n\t\r\n\t\t\tthis.getDelta();\r\n\t\t\treturn this.elapsedTime;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetDelta: function () {\r\n\t\r\n\t\t\tvar diff = 0;\r\n\t\r\n\t\t\tif ( this.autoStart && ! this.running ) {\r\n\t\r\n\t\t\t\tthis.start();\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( this.running ) {\r\n\t\r\n\t\t\t\tvar newTime = self.performance !== undefined && self.performance.now !== undefined\r\n\t\t\t\t\t\t ? self.performance.now()\r\n\t\t\t\t\t\t : Date.now();\r\n\t\r\n\t\t\t\tdiff = 0.001 * ( newTime - this.oldTime );\r\n\t\t\t\tthis.oldTime = newTime;\r\n\t\r\n\t\t\t\tthis.elapsedTime += diff;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn diff;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/core/EventDispatcher.js\r\n\t\r\n\t/**\r\n\t * https://github.com/mrdoob/eventdispatcher.js/\r\n\t */\r\n\t\r\n\tTHREE.EventDispatcher = function () {};\r\n\t\r\n\tTHREE.EventDispatcher.prototype = {\r\n\t\r\n\t\tconstructor: THREE.EventDispatcher,\r\n\t\r\n\t\tapply: function ( object ) {\r\n\t\r\n\t\t\tobject.addEventListener = THREE.EventDispatcher.prototype.addEventListener;\r\n\t\t\tobject.hasEventListener = THREE.EventDispatcher.prototype.hasEventListener;\r\n\t\t\tobject.removeEventListener = THREE.EventDispatcher.prototype.removeEventListener;\r\n\t\t\tobject.dispatchEvent = THREE.EventDispatcher.prototype.dispatchEvent;\r\n\t\r\n\t\t},\r\n\t\r\n\t\taddEventListener: function ( type, listener ) {\r\n\t\r\n\t\t\tif ( this._listeners === undefined ) this._listeners = {};\r\n\t\r\n\t\t\tvar listeners = this._listeners;\r\n\t\r\n\t\t\tif ( listeners[ type ] === undefined ) {\r\n\t\r\n\t\t\t\tlisteners[ type ] = [];\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( listeners[ type ].indexOf( listener ) === - 1 ) {\r\n\t\r\n\t\t\t\tlisteners[ type ].push( listener );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\thasEventListener: function ( type, listener ) {\r\n\t\r\n\t\t\tif ( this._listeners === undefined ) return false;\r\n\t\r\n\t\t\tvar listeners = this._listeners;\r\n\t\r\n\t\t\tif ( listeners[ type ] !== undefined && listeners[ type ].indexOf( listener ) !== - 1 ) {\r\n\t\r\n\t\t\t\treturn true;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn false;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tremoveEventListener: function ( type, listener ) {\r\n\t\r\n\t\t\tif ( this._listeners === undefined ) return;\r\n\t\r\n\t\t\tvar listeners = this._listeners;\r\n\t\t\tvar listenerArray = listeners[ type ];\r\n\t\r\n\t\t\tif ( listenerArray !== undefined ) {\r\n\t\r\n\t\t\t\tvar index = listenerArray.indexOf( listener );\r\n\t\r\n\t\t\t\tif ( index !== - 1 ) {\r\n\t\r\n\t\t\t\t\tlistenerArray.splice( index, 1 );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdispatchEvent: function ( event ) {\r\n\t\r\n\t\t\tif ( this._listeners === undefined ) return;\r\n\t\r\n\t\t\tvar listeners = this._listeners;\r\n\t\t\tvar listenerArray = listeners[ event.type ];\r\n\t\r\n\t\t\tif ( listenerArray !== undefined ) {\r\n\t\r\n\t\t\t\tevent.target = this;\r\n\t\r\n\t\t\t\tvar array = [];\r\n\t\t\t\tvar length = listenerArray.length;\r\n\t\r\n\t\t\t\tfor ( var i = 0; i < length; i ++ ) {\r\n\t\r\n\t\t\t\t\tarray[ i ] = listenerArray[ i ];\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tfor ( var i = 0; i < length; i ++ ) {\r\n\t\r\n\t\t\t\t\tarray[ i ].call( this, event );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/core/Raycaster.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author bhouston / http://exocortex.com/\r\n\t * @author stephomi / http://stephaneginier.com/\r\n\t */\r\n\t\r\n\t( function ( THREE ) {\r\n\t\r\n\t\tTHREE.Raycaster = function ( origin, direction, near, far ) {\r\n\t\r\n\t\t\tthis.ray = new THREE.Ray( origin, direction );\r\n\t\t\t// direction is assumed to be normalized (for accurate distance calculations)\r\n\t\r\n\t\t\tthis.near = near || 0;\r\n\t\t\tthis.far = far || Infinity;\r\n\t\r\n\t\t\tthis.params = {\r\n\t\t\t\tMesh: {},\r\n\t\t\t\tLine: {},\r\n\t\t\t\tLOD: {},\r\n\t\t\t\tPoints: { threshold: 1 },\r\n\t\t\t\tSprite: {}\r\n\t\t\t};\r\n\t\r\n\t\t\tObject.defineProperties( this.params, {\r\n\t\t\t\tPointCloud: {\r\n\t\t\t\t\tget: function () {\r\n\t\t\t\t\t\tconsole.warn( 'THREE.Raycaster: params.PointCloud has been renamed to params.Points.' );\r\n\t\t\t\t\t\treturn this.Points;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} );\r\n\t\r\n\t\t};\r\n\t\r\n\t\tfunction descSort( a, b ) {\r\n\t\r\n\t\t\treturn a.distance - b.distance;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tvar intersectObject = function ( object, raycaster, intersects, recursive ) {\r\n\t\r\n\t\t\tif ( object.visible === false ) return;\r\n\t\r\n\t\t\tobject.raycast( raycaster, intersects );\r\n\t\r\n\t\t\tif ( recursive === true ) {\r\n\t\r\n\t\t\t\tvar children = object.children;\r\n\t\r\n\t\t\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\t\tintersectObject( children[ i ], raycaster, intersects, true );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t\t//\r\n\t\r\n\t\tTHREE.Raycaster.prototype = {\r\n\t\r\n\t\t\tconstructor: THREE.Raycaster,\r\n\t\r\n\t\t\tlinePrecision: 1,\r\n\t\r\n\t\t\tset: function ( origin, direction ) {\r\n\t\r\n\t\t\t\t// direction is assumed to be normalized (for accurate distance calculations)\r\n\t\r\n\t\t\t\tthis.ray.set( origin, direction );\r\n\t\r\n\t\t\t},\r\n\t\r\n\t\t\tsetFromCamera: function ( coords, camera ) {\r\n\t\r\n\t\t\t\tif ( camera instanceof THREE.PerspectiveCamera ) {\r\n\t\r\n\t\t\t\t\tthis.ray.origin.setFromMatrixPosition( camera.matrixWorld );\r\n\t\t\t\t\tthis.ray.direction.set( coords.x, coords.y, 0.5 ).unproject( camera ).sub( this.ray.origin ).normalize();\r\n\t\r\n\t\t\t\t} else if ( camera instanceof THREE.OrthographicCamera ) {\r\n\t\r\n\t\t\t\t\tthis.ray.origin.set( coords.x, coords.y, - 1 ).unproject( camera );\r\n\t\t\t\t\tthis.ray.direction.set( 0, 0, - 1 ).transformDirection( camera.matrixWorld );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tconsole.error( 'THREE.Raycaster: Unsupported camera type.' );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t},\r\n\t\r\n\t\t\tintersectObject: function ( object, recursive ) {\r\n\t\r\n\t\t\t\tvar intersects = [];\r\n\t\r\n\t\t\t\tintersectObject( object, this, intersects, recursive );\r\n\t\r\n\t\t\t\tintersects.sort( descSort );\r\n\t\r\n\t\t\t\treturn intersects;\r\n\t\r\n\t\t\t},\r\n\t\r\n\t\t\tintersectObjects: function ( objects, recursive ) {\r\n\t\r\n\t\t\t\tvar intersects = [];\r\n\t\r\n\t\t\t\tif ( Array.isArray( objects ) === false ) {\r\n\t\r\n\t\t\t\t\tconsole.warn( 'THREE.Raycaster.intersectObjects: objects is not an Array.' );\r\n\t\t\t\t\treturn intersects;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tfor ( var i = 0, l = objects.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\t\tintersectObject( objects[ i ], this, intersects, recursive );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tintersects.sort( descSort );\r\n\t\r\n\t\t\t\treturn intersects;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t}( THREE ) );\r\n\t\r\n\t// File:src/core/Object3D.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author mikael emtinger / http://gomo.se/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author WestLangley / http://github.com/WestLangley\r\n\t * @author elephantatwork / www.elephantatwork.ch\r\n\t */\r\n\t\r\n\tTHREE.Object3D = function () {\r\n\t\r\n\t\tObject.defineProperty( this, 'id', { value: THREE.Object3DIdCount ++ } );\r\n\t\r\n\t\tthis.uuid = THREE.Math.generateUUID();\r\n\t\r\n\t\tthis.name = '';\r\n\t\tthis.type = 'Object3D';\r\n\t\r\n\t\tthis.parent = null;\r\n\t\tthis.children = [];\r\n\t\r\n\t\tthis.up = THREE.Object3D.DefaultUp.clone();\r\n\t\r\n\t\tvar position = new THREE.Vector3();\r\n\t\tvar rotation = new THREE.Euler();\r\n\t\tvar quaternion = new THREE.Quaternion();\r\n\t\tvar scale = new THREE.Vector3( 1, 1, 1 );\r\n\t\r\n\t\tvar onRotationChange = function () {\r\n\t\r\n\t\t\tquaternion.setFromEuler( rotation, false );\r\n\t\r\n\t\t};\r\n\t\r\n\t\tvar onQuaternionChange = function () {\r\n\t\r\n\t\t\trotation.setFromQuaternion( quaternion, undefined, false );\r\n\t\r\n\t\t};\r\n\t\r\n\t\trotation.onChange( onRotationChange );\r\n\t\tquaternion.onChange( onQuaternionChange );\r\n\t\r\n\t\tObject.defineProperties( this, {\r\n\t\t\tposition: {\r\n\t\t\t\tenumerable: true,\r\n\t\t\t\tvalue: position\r\n\t\t\t},\r\n\t\t\trotation: {\r\n\t\t\t\tenumerable: true,\r\n\t\t\t\tvalue: rotation\r\n\t\t\t},\r\n\t\t\tquaternion: {\r\n\t\t\t\tenumerable: true,\r\n\t\t\t\tvalue: quaternion\r\n\t\t\t},\r\n\t\t\tscale: {\r\n\t\t\t\tenumerable: true,\r\n\t\t\t\tvalue: scale\r\n\t\t\t},\r\n\t\t\tmodelViewMatrix: {\r\n\t\t\t\tvalue: new THREE.Matrix4()\r\n\t\t\t},\r\n\t\t\tnormalMatrix: {\r\n\t\t\t\tvalue: new THREE.Matrix3()\r\n\t\t\t}\r\n\t\t} );\r\n\t\r\n\t\tthis.rotationAutoUpdate = true;\r\n\t\r\n\t\tthis.matrix = new THREE.Matrix4();\r\n\t\tthis.matrixWorld = new THREE.Matrix4();\r\n\t\r\n\t\tthis.matrixAutoUpdate = THREE.Object3D.DefaultMatrixAutoUpdate;\r\n\t\tthis.matrixWorldNeedsUpdate = false;\r\n\t\r\n\t\tthis.visible = true;\r\n\t\r\n\t\tthis.castShadow = false;\r\n\t\tthis.receiveShadow = false;\r\n\t\r\n\t\tthis.frustumCulled = true;\r\n\t\tthis.renderOrder = 0;\r\n\t\r\n\t\tthis.userData = {};\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Object3D.DefaultUp = new THREE.Vector3( 0, 1, 0 );\r\n\tTHREE.Object3D.DefaultMatrixAutoUpdate = true;\r\n\t\r\n\tTHREE.Object3D.prototype = {\r\n\t\r\n\t\tconstructor: THREE.Object3D,\r\n\t\r\n\t\tget eulerOrder () {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.Object3D: .eulerOrder has been moved to .rotation.order.' );\r\n\t\r\n\t\t\treturn this.rotation.order;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tset eulerOrder ( value ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.Object3D: .eulerOrder has been moved to .rotation.order.' );\r\n\t\r\n\t\t\tthis.rotation.order = value;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tget useQuaternion () {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.' );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tset useQuaternion ( value ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.' );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tset renderDepth ( value ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.' );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tapplyMatrix: function ( matrix ) {\r\n\t\r\n\t\t\tthis.matrix.multiplyMatrices( matrix, this.matrix );\r\n\t\r\n\t\t\tthis.matrix.decompose( this.position, this.quaternion, this.scale );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetRotationFromAxisAngle: function ( axis, angle ) {\r\n\t\r\n\t\t\t// assumes axis is normalized\r\n\t\r\n\t\t\tthis.quaternion.setFromAxisAngle( axis, angle );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetRotationFromEuler: function ( euler ) {\r\n\t\r\n\t\t\tthis.quaternion.setFromEuler( euler, true );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetRotationFromMatrix: function ( m ) {\r\n\t\r\n\t\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\r\n\t\r\n\t\t\tthis.quaternion.setFromRotationMatrix( m );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetRotationFromQuaternion: function ( q ) {\r\n\t\r\n\t\t\t// assumes q is normalized\r\n\t\r\n\t\t\tthis.quaternion.copy( q );\r\n\t\r\n\t\t},\r\n\t\r\n\t\trotateOnAxis: function () {\r\n\t\r\n\t\t\t// rotate object on axis in object space\r\n\t\t\t// axis is assumed to be normalized\r\n\t\r\n\t\t\tvar q1 = new THREE.Quaternion();\r\n\t\r\n\t\t\treturn function ( axis, angle ) {\r\n\t\r\n\t\t\t\tq1.setFromAxisAngle( axis, angle );\r\n\t\r\n\t\t\t\tthis.quaternion.multiply( q1 );\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\trotateX: function () {\r\n\t\r\n\t\t\tvar v1 = new THREE.Vector3( 1, 0, 0 );\r\n\t\r\n\t\t\treturn function ( angle ) {\r\n\t\r\n\t\t\t\treturn this.rotateOnAxis( v1, angle );\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\trotateY: function () {\r\n\t\r\n\t\t\tvar v1 = new THREE.Vector3( 0, 1, 0 );\r\n\t\r\n\t\t\treturn function ( angle ) {\r\n\t\r\n\t\t\t\treturn this.rotateOnAxis( v1, angle );\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\trotateZ: function () {\r\n\t\r\n\t\t\tvar v1 = new THREE.Vector3( 0, 0, 1 );\r\n\t\r\n\t\t\treturn function ( angle ) {\r\n\t\r\n\t\t\t\treturn this.rotateOnAxis( v1, angle );\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\ttranslateOnAxis: function () {\r\n\t\r\n\t\t\t// translate object by distance along axis in object space\r\n\t\t\t// axis is assumed to be normalized\r\n\t\r\n\t\t\tvar v1 = new THREE.Vector3();\r\n\t\r\n\t\t\treturn function ( axis, distance ) {\r\n\t\r\n\t\t\t\tv1.copy( axis ).applyQuaternion( this.quaternion );\r\n\t\r\n\t\t\t\tthis.position.add( v1.multiplyScalar( distance ) );\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\ttranslate: function ( distance, axis ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead.' );\r\n\t\t\treturn this.translateOnAxis( axis, distance );\r\n\t\r\n\t\t},\r\n\t\r\n\t\ttranslateX: function () {\r\n\t\r\n\t\t\tvar v1 = new THREE.Vector3( 1, 0, 0 );\r\n\t\r\n\t\t\treturn function ( distance ) {\r\n\t\r\n\t\t\t\treturn this.translateOnAxis( v1, distance );\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\ttranslateY: function () {\r\n\t\r\n\t\t\tvar v1 = new THREE.Vector3( 0, 1, 0 );\r\n\t\r\n\t\t\treturn function ( distance ) {\r\n\t\r\n\t\t\t\treturn this.translateOnAxis( v1, distance );\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\ttranslateZ: function () {\r\n\t\r\n\t\t\tvar v1 = new THREE.Vector3( 0, 0, 1 );\r\n\t\r\n\t\t\treturn function ( distance ) {\r\n\t\r\n\t\t\t\treturn this.translateOnAxis( v1, distance );\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tlocalToWorld: function ( vector ) {\r\n\t\r\n\t\t\treturn vector.applyMatrix4( this.matrixWorld );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tworldToLocal: function () {\r\n\t\r\n\t\t\tvar m1 = new THREE.Matrix4();\r\n\t\r\n\t\t\treturn function ( vector ) {\r\n\t\r\n\t\t\t\treturn vector.applyMatrix4( m1.getInverse( this.matrixWorld ) );\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tlookAt: function () {\r\n\t\r\n\t\t\t// This routine does not support objects with rotated and/or translated parent(s)\r\n\t\r\n\t\t\tvar m1 = new THREE.Matrix4();\r\n\t\r\n\t\t\treturn function ( vector ) {\r\n\t\r\n\t\t\t\tm1.lookAt( vector, this.position, this.up );\r\n\t\r\n\t\t\t\tthis.quaternion.setFromRotationMatrix( m1 );\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tadd: function ( object ) {\r\n\t\r\n\t\t\tif ( arguments.length > 1 ) {\r\n\t\r\n\t\t\t\tfor ( var i = 0; i < arguments.length; i ++ ) {\r\n\t\r\n\t\t\t\t\tthis.add( arguments[ i ] );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( object === this ) {\r\n\t\r\n\t\t\t\tconsole.error( \"THREE.Object3D.add: object can't be added as a child of itself.\", object );\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( object instanceof THREE.Object3D ) {\r\n\t\r\n\t\t\t\tif ( object.parent !== null ) {\r\n\t\r\n\t\t\t\t\tobject.parent.remove( object );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tobject.parent = this;\r\n\t\t\t\tobject.dispatchEvent( { type: 'added' } );\r\n\t\r\n\t\t\t\tthis.children.push( object );\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tconsole.error( \"THREE.Object3D.add: object not an instance of THREE.Object3D.\", object );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tremove: function ( object ) {\r\n\t\r\n\t\t\tif ( arguments.length > 1 ) {\r\n\t\r\n\t\t\t\tfor ( var i = 0; i < arguments.length; i ++ ) {\r\n\t\r\n\t\t\t\t\tthis.remove( arguments[ i ] );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar index = this.children.indexOf( object );\r\n\t\r\n\t\t\tif ( index !== - 1 ) {\r\n\t\r\n\t\t\t\tobject.parent = null;\r\n\t\r\n\t\t\t\tobject.dispatchEvent( { type: 'removed' } );\r\n\t\r\n\t\t\t\tthis.children.splice( index, 1 );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetChildByName: function ( name ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.Object3D: .getChildByName() has been renamed to .getObjectByName().' );\r\n\t\t\treturn this.getObjectByName( name );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetObjectById: function ( id ) {\r\n\t\r\n\t\t\treturn this.getObjectByProperty( 'id', id );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetObjectByName: function ( name ) {\r\n\t\r\n\t\t\treturn this.getObjectByProperty( 'name', name );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetObjectByProperty: function ( name, value ) {\r\n\t\r\n\t\t\tif ( this[ name ] === value ) return this;\r\n\t\r\n\t\t\tfor ( var i = 0, l = this.children.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\tvar child = this.children[ i ];\r\n\t\t\t\tvar object = child.getObjectByProperty( name, value );\r\n\t\r\n\t\t\t\tif ( object !== undefined ) {\r\n\t\r\n\t\t\t\t\treturn object;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn undefined;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetWorldPosition: function ( optionalTarget ) {\r\n\t\r\n\t\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\r\n\t\t\tthis.updateMatrixWorld( true );\r\n\t\r\n\t\t\treturn result.setFromMatrixPosition( this.matrixWorld );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetWorldQuaternion: function () {\r\n\t\r\n\t\t\tvar position = new THREE.Vector3();\r\n\t\t\tvar scale = new THREE.Vector3();\r\n\t\r\n\t\t\treturn function ( optionalTarget ) {\r\n\t\r\n\t\t\t\tvar result = optionalTarget || new THREE.Quaternion();\r\n\t\r\n\t\t\t\tthis.updateMatrixWorld( true );\r\n\t\r\n\t\t\t\tthis.matrixWorld.decompose( position, result, scale );\r\n\t\r\n\t\t\t\treturn result;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tgetWorldRotation: function () {\r\n\t\r\n\t\t\tvar quaternion = new THREE.Quaternion();\r\n\t\r\n\t\t\treturn function ( optionalTarget ) {\r\n\t\r\n\t\t\t\tvar result = optionalTarget || new THREE.Euler();\r\n\t\r\n\t\t\t\tthis.getWorldQuaternion( quaternion );\r\n\t\r\n\t\t\t\treturn result.setFromQuaternion( quaternion, this.rotation.order, false );\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tgetWorldScale: function () {\r\n\t\r\n\t\t\tvar position = new THREE.Vector3();\r\n\t\t\tvar quaternion = new THREE.Quaternion();\r\n\t\r\n\t\t\treturn function ( optionalTarget ) {\r\n\t\r\n\t\t\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\r\n\t\t\t\tthis.updateMatrixWorld( true );\r\n\t\r\n\t\t\t\tthis.matrixWorld.decompose( position, quaternion, result );\r\n\t\r\n\t\t\t\treturn result;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tgetWorldDirection: function () {\r\n\t\r\n\t\t\tvar quaternion = new THREE.Quaternion();\r\n\t\r\n\t\t\treturn function ( optionalTarget ) {\r\n\t\r\n\t\t\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\r\n\t\t\t\tthis.getWorldQuaternion( quaternion );\r\n\t\r\n\t\t\t\treturn result.set( 0, 0, 1 ).applyQuaternion( quaternion );\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\traycast: function () {},\r\n\t\r\n\t\ttraverse: function ( callback ) {\r\n\t\r\n\t\t\tcallback( this );\r\n\t\r\n\t\t\tvar children = this.children;\r\n\t\r\n\t\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\tchildren[ i ].traverse( callback );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\ttraverseVisible: function ( callback ) {\r\n\t\r\n\t\t\tif ( this.visible === false ) return;\r\n\t\r\n\t\t\tcallback( this );\r\n\t\r\n\t\t\tvar children = this.children;\r\n\t\r\n\t\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\tchildren[ i ].traverseVisible( callback );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\ttraverseAncestors: function ( callback ) {\r\n\t\r\n\t\t\tvar parent = this.parent;\r\n\t\r\n\t\t\tif ( parent !== null ) {\r\n\t\r\n\t\t\t\tcallback( parent );\r\n\t\r\n\t\t\t\tparent.traverseAncestors( callback );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\tupdateMatrix: function () {\r\n\t\r\n\t\t\tthis.matrix.compose( this.position, this.quaternion, this.scale );\r\n\t\r\n\t\t\tthis.matrixWorldNeedsUpdate = true;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tupdateMatrixWorld: function ( force ) {\r\n\t\r\n\t\t\tif ( this.matrixAutoUpdate === true ) this.updateMatrix();\r\n\t\r\n\t\t\tif ( this.matrixWorldNeedsUpdate === true || force === true ) {\r\n\t\r\n\t\t\t\tif ( this.parent === null ) {\r\n\t\r\n\t\t\t\t\tthis.matrixWorld.copy( this.matrix );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tthis.matrixWorld.multiplyMatrices( this.parent.matrixWorld, this.matrix );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tthis.matrixWorldNeedsUpdate = false;\r\n\t\r\n\t\t\t\tforce = true;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// update children\r\n\t\r\n\t\t\tfor ( var i = 0, l = this.children.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\tthis.children[ i ].updateMatrixWorld( force );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\ttoJSON: function ( meta ) {\r\n\t\r\n\t\t\tvar isRootObject = ( meta === undefined );\r\n\t\r\n\t\t\tvar data = {};\r\n\t\r\n\t\t\t// meta is a hash used to collect geometries, materials.\r\n\t\t\t// not providing it implies that this is the root object\r\n\t\t\t// being serialized.\r\n\t\t\tif ( isRootObject ) {\r\n\t\r\n\t\t\t\t// initialize meta obj\r\n\t\t\t\tmeta = {\r\n\t\t\t\t\tgeometries: {},\r\n\t\t\t\t\tmaterials: {},\r\n\t\t\t\t\ttextures: {},\r\n\t\t\t\t\timages: {}\r\n\t\t\t\t};\r\n\t\r\n\t\t\t\tdata.metadata = {\r\n\t\t\t\t\tversion: 4.4,\r\n\t\t\t\t\ttype: 'Object',\r\n\t\t\t\t\tgenerator: 'Object3D.toJSON'\r\n\t\t\t\t};\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// standard Object3D serialization\r\n\t\r\n\t\t\tdata.uuid = this.uuid;\r\n\t\t\tdata.type = this.type;\r\n\t\r\n\t\t\tif ( this.name !== '' ) data.name = this.name;\r\n\t\t\tif ( JSON.stringify( this.userData ) !== '{}' ) data.userData = this.userData;\r\n\t\t\tif ( this.visible !== true ) data.visible = this.visible;\r\n\t\r\n\t\t\tdata.matrix = this.matrix.toArray();\r\n\t\r\n\t\t\tif ( this.children.length > 0 ) {\r\n\t\r\n\t\t\t\tdata.children = [];\r\n\t\r\n\t\t\t\tfor ( var i = 0; i < this.children.length; i ++ ) {\r\n\t\r\n\t\t\t\t\tdata.children.push( this.children[ i ].toJSON( meta ).object );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar output = {};\r\n\t\r\n\t\t\tif ( isRootObject ) {\r\n\t\r\n\t\t\t\tvar geometries = extractFromCache( meta.geometries );\r\n\t\t\t\tvar materials = extractFromCache( meta.materials );\r\n\t\t\t\tvar textures = extractFromCache( meta.textures );\r\n\t\t\t\tvar images = extractFromCache( meta.images );\r\n\t\r\n\t\t\t\tif ( geometries.length > 0 ) output.geometries = geometries;\r\n\t\t\t\tif ( materials.length > 0 ) output.materials = materials;\r\n\t\t\t\tif ( textures.length > 0 ) output.textures = textures;\r\n\t\t\t\tif ( images.length > 0 ) output.images = images;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\toutput.object = data;\r\n\t\r\n\t\t\treturn output;\r\n\t\r\n\t\t\t// extract data from the cache hash\r\n\t\t\t// remove metadata on each item\r\n\t\t\t// and return as array\r\n\t\t\tfunction extractFromCache ( cache ) {\r\n\t\r\n\t\t\t\tvar values = [];\r\n\t\t\t\tfor ( var key in cache ) {\r\n\t\r\n\t\t\t\t\tvar data = cache[ key ];\r\n\t\t\t\t\tdelete data.metadata;\r\n\t\t\t\t\tvalues.push( data );\r\n\t\r\n\t\t\t\t}\r\n\t\t\t\treturn values;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclone: function ( recursive ) {\r\n\t\r\n\t\t\treturn new this.constructor().copy( this, recursive );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopy: function ( source, recursive ) {\r\n\t\r\n\t\t\tif ( recursive === undefined ) recursive = true;\r\n\t\r\n\t\t\tthis.name = source.name;\r\n\t\r\n\t\t\tthis.up.copy( source.up );\r\n\t\r\n\t\t\tthis.position.copy( source.position );\r\n\t\t\tthis.quaternion.copy( source.quaternion );\r\n\t\t\tthis.scale.copy( source.scale );\r\n\t\r\n\t\t\tthis.rotationAutoUpdate = source.rotationAutoUpdate;\r\n\t\r\n\t\t\tthis.matrix.copy( source.matrix );\r\n\t\t\tthis.matrixWorld.copy( source.matrixWorld );\r\n\t\r\n\t\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\r\n\t\t\tthis.matrixWorldNeedsUpdate = source.matrixWorldNeedsUpdate;\r\n\t\r\n\t\t\tthis.visible = source.visible;\r\n\t\r\n\t\t\tthis.castShadow = source.castShadow;\r\n\t\t\tthis.receiveShadow = source.receiveShadow;\r\n\t\r\n\t\t\tthis.frustumCulled = source.frustumCulled;\r\n\t\t\tthis.renderOrder = source.renderOrder;\r\n\t\r\n\t\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\r\n\t\r\n\t\t\tif ( recursive === true ) {\r\n\t\r\n\t\t\t\tfor ( var i = 0; i < source.children.length; i ++ ) {\r\n\t\r\n\t\t\t\t\tvar child = source.children[ i ];\r\n\t\t\t\t\tthis.add( child.clone() );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.EventDispatcher.prototype.apply( THREE.Object3D.prototype );\r\n\t\r\n\tTHREE.Object3DIdCount = 0;\r\n\t\r\n\t// File:src/core/Face3.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\t\r\n\tTHREE.Face3 = function ( a, b, c, normal, color, materialIndex ) {\r\n\t\r\n\t\tthis.a = a;\r\n\t\tthis.b = b;\r\n\t\tthis.c = c;\r\n\t\r\n\t\tthis.normal = normal instanceof THREE.Vector3 ? normal : new THREE.Vector3();\r\n\t\tthis.vertexNormals = Array.isArray( normal ) ? normal : [];\r\n\t\r\n\t\tthis.color = color instanceof THREE.Color ? color : new THREE.Color();\r\n\t\tthis.vertexColors = Array.isArray( color ) ? color : [];\r\n\t\r\n\t\tthis.materialIndex = materialIndex !== undefined ? materialIndex : 0;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Face3.prototype = {\r\n\t\r\n\t\tconstructor: THREE.Face3,\r\n\t\r\n\t\tclone: function () {\r\n\t\r\n\t\t\treturn new this.constructor().copy( this );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopy: function ( source ) {\r\n\t\r\n\t\t\tthis.a = source.a;\r\n\t\t\tthis.b = source.b;\r\n\t\t\tthis.c = source.c;\r\n\t\r\n\t\t\tthis.normal.copy( source.normal );\r\n\t\t\tthis.color.copy( source.color );\r\n\t\r\n\t\t\tthis.materialIndex = source.materialIndex;\r\n\t\r\n\t\t\tfor ( var i = 0, il = source.vertexNormals.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\tthis.vertexNormals[ i ] = source.vertexNormals[ i ].clone();\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tfor ( var i = 0, il = source.vertexColors.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\tthis.vertexColors[ i ] = source.vertexColors[ i ].clone();\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/core/Face4.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.Face4 = function ( a, b, c, d, normal, color, materialIndex ) {\r\n\t\r\n\t\tconsole.warn( 'THREE.Face4 has been removed. A THREE.Face3 will be created instead.' );\r\n\t\treturn new THREE.Face3( a, b, c, normal, color, materialIndex );\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/core/BufferAttribute.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.BufferAttribute = function ( array, itemSize ) {\r\n\t\r\n\t\tthis.uuid = THREE.Math.generateUUID();\r\n\t\r\n\t\tthis.array = array;\r\n\t\tthis.itemSize = itemSize;\r\n\t\r\n\t\tthis.dynamic = false;\r\n\t\tthis.updateRange = { offset: 0, count: - 1 };\r\n\t\r\n\t\tthis.version = 0;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.BufferAttribute.prototype = {\r\n\t\r\n\t\tconstructor: THREE.BufferAttribute,\r\n\t\r\n\t\tget length() {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.BufferAttribute: .length has been deprecated. Please use .count.' );\r\n\t\t\treturn this.array.length;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tget count() {\r\n\t\r\n\t\t\treturn this.array.length / this.itemSize;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tset needsUpdate( value ) {\r\n\t\r\n\t\t\tif ( value === true ) this.version ++;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetDynamic: function ( value ) {\r\n\t\r\n\t\t\tthis.dynamic = value;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopy: function ( source ) {\r\n\t\r\n\t\t\tthis.array = new source.array.constructor( source.array );\r\n\t\t\tthis.itemSize = source.itemSize;\r\n\t\r\n\t\t\tthis.dynamic = source.dynamic;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopyAt: function ( index1, attribute, index2 ) {\r\n\t\r\n\t\t\tindex1 *= this.itemSize;\r\n\t\t\tindex2 *= attribute.itemSize;\r\n\t\r\n\t\t\tfor ( var i = 0, l = this.itemSize; i < l; i ++ ) {\r\n\t\r\n\t\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopyArray: function ( array ) {\r\n\t\r\n\t\t\tthis.array.set( array );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopyColorsArray: function ( colors ) {\r\n\t\r\n\t\t\tvar array = this.array, offset = 0;\r\n\t\r\n\t\t\tfor ( var i = 0, l = colors.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\tvar color = colors[ i ];\r\n\t\r\n\t\t\t\tif ( color === undefined ) {\r\n\t\r\n\t\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyColorsArray(): color is undefined', i );\r\n\t\t\t\t\tcolor = new THREE.Color();\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tarray[ offset ++ ] = color.r;\r\n\t\t\t\tarray[ offset ++ ] = color.g;\r\n\t\t\t\tarray[ offset ++ ] = color.b;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopyIndicesArray: function ( indices ) {\r\n\t\r\n\t\t\tvar array = this.array, offset = 0;\r\n\t\r\n\t\t\tfor ( var i = 0, l = indices.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\tvar index = indices[ i ];\r\n\t\r\n\t\t\t\tarray[ offset ++ ] = index.a;\r\n\t\t\t\tarray[ offset ++ ] = index.b;\r\n\t\t\t\tarray[ offset ++ ] = index.c;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopyVector2sArray: function ( vectors ) {\r\n\t\r\n\t\t\tvar array = this.array, offset = 0;\r\n\t\r\n\t\t\tfor ( var i = 0, l = vectors.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\tvar vector = vectors[ i ];\r\n\t\r\n\t\t\t\tif ( vector === undefined ) {\r\n\t\r\n\t\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyVector2sArray(): vector is undefined', i );\r\n\t\t\t\t\tvector = new THREE.Vector2();\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tarray[ offset ++ ] = vector.x;\r\n\t\t\t\tarray[ offset ++ ] = vector.y;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopyVector3sArray: function ( vectors ) {\r\n\t\r\n\t\t\tvar array = this.array, offset = 0;\r\n\t\r\n\t\t\tfor ( var i = 0, l = vectors.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\tvar vector = vectors[ i ];\r\n\t\r\n\t\t\t\tif ( vector === undefined ) {\r\n\t\r\n\t\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyVector3sArray(): vector is undefined', i );\r\n\t\t\t\t\tvector = new THREE.Vector3();\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tarray[ offset ++ ] = vector.x;\r\n\t\t\t\tarray[ offset ++ ] = vector.y;\r\n\t\t\t\tarray[ offset ++ ] = vector.z;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopyVector4sArray: function ( vectors ) {\r\n\t\r\n\t\t\tvar array = this.array, offset = 0;\r\n\t\r\n\t\t\tfor ( var i = 0, l = vectors.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\tvar vector = vectors[ i ];\r\n\t\r\n\t\t\t\tif ( vector === undefined ) {\r\n\t\r\n\t\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyVector4sArray(): vector is undefined', i );\r\n\t\t\t\t\tvector = new THREE.Vector4();\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tarray[ offset ++ ] = vector.x;\r\n\t\t\t\tarray[ offset ++ ] = vector.y;\r\n\t\t\t\tarray[ offset ++ ] = vector.z;\r\n\t\t\t\tarray[ offset ++ ] = vector.w;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tset: function ( value, offset ) {\r\n\t\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\t\r\n\t\t\tthis.array.set( value, offset );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetX: function ( index ) {\r\n\t\r\n\t\t\treturn this.array[ index * this.itemSize ];\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetX: function ( index, x ) {\r\n\t\r\n\t\t\tthis.array[ index * this.itemSize ] = x;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetY: function ( index ) {\r\n\t\r\n\t\t\treturn this.array[ index * this.itemSize + 1 ];\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetY: function ( index, y ) {\r\n\t\r\n\t\t\tthis.array[ index * this.itemSize + 1 ] = y;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetZ: function ( index ) {\r\n\t\r\n\t\t\treturn this.array[ index * this.itemSize + 2 ];\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetZ: function ( index, z ) {\r\n\t\r\n\t\t\tthis.array[ index * this.itemSize + 2 ] = z;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetW: function ( index ) {\r\n\t\r\n\t\t\treturn this.array[ index * this.itemSize + 3 ];\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetW: function ( index, w ) {\r\n\t\r\n\t\t\tthis.array[ index * this.itemSize + 3 ] = w;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetXY: function ( index, x, y ) {\r\n\t\r\n\t\t\tindex *= this.itemSize;\r\n\t\r\n\t\t\tthis.array[ index + 0 ] = x;\r\n\t\t\tthis.array[ index + 1 ] = y;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetXYZ: function ( index, x, y, z ) {\r\n\t\r\n\t\t\tindex *= this.itemSize;\r\n\t\r\n\t\t\tthis.array[ index + 0 ] = x;\r\n\t\t\tthis.array[ index + 1 ] = y;\r\n\t\t\tthis.array[ index + 2 ] = z;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetXYZW: function ( index, x, y, z, w ) {\r\n\t\r\n\t\t\tindex *= this.itemSize;\r\n\t\r\n\t\t\tthis.array[ index + 0 ] = x;\r\n\t\t\tthis.array[ index + 1 ] = y;\r\n\t\t\tthis.array[ index + 2 ] = z;\r\n\t\t\tthis.array[ index + 3 ] = w;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclone: function () {\r\n\t\r\n\t\t\treturn new this.constructor().copy( this );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t//\r\n\t\r\n\tTHREE.Int8Attribute = function ( array, itemSize ) {\r\n\t\r\n\t\treturn new THREE.BufferAttribute( new Int8Array( array ), itemSize );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Uint8Attribute = function ( array, itemSize ) {\r\n\t\r\n\t\treturn new THREE.BufferAttribute( new Uint8Array( array ), itemSize );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Uint8ClampedAttribute = function ( array, itemSize ) {\r\n\t\r\n\t\treturn new THREE.BufferAttribute( new Uint8ClampedArray( array ), itemSize );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Int16Attribute = function ( array, itemSize ) {\r\n\t\r\n\t\treturn new THREE.BufferAttribute( new Int16Array( array ), itemSize );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Uint16Attribute = function ( array, itemSize ) {\r\n\t\r\n\t\treturn new THREE.BufferAttribute( new Uint16Array( array ), itemSize );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Int32Attribute = function ( array, itemSize ) {\r\n\t\r\n\t\treturn new THREE.BufferAttribute( new Int32Array( array ), itemSize );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Uint32Attribute = function ( array, itemSize ) {\r\n\t\r\n\t\treturn new THREE.BufferAttribute( new Uint32Array( array ), itemSize );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Float32Attribute = function ( array, itemSize ) {\r\n\t\r\n\t\treturn new THREE.BufferAttribute( new Float32Array( array ), itemSize );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Float64Attribute = function ( array, itemSize ) {\r\n\t\r\n\t\treturn new THREE.BufferAttribute( new Float64Array( array ), itemSize );\r\n\t\r\n\t};\r\n\t\r\n\t\r\n\t// Deprecated\r\n\t\r\n\tTHREE.DynamicBufferAttribute = function ( array, itemSize ) {\r\n\t\r\n\t\tconsole.warn( 'THREE.DynamicBufferAttribute has been removed. Use new THREE.BufferAttribute().setDynamic( true ) instead.' );\r\n\t\treturn new THREE.BufferAttribute( array, itemSize ).setDynamic( true );\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/core/InstancedBufferAttribute.js\r\n\t\r\n\t/**\r\n\t * @author benaadams / https://twitter.com/ben_a_adams\r\n\t */\r\n\t\r\n\tTHREE.InstancedBufferAttribute = function ( array, itemSize, meshPerAttribute ) {\r\n\t\r\n\t\tTHREE.BufferAttribute.call( this, array, itemSize );\r\n\t\r\n\t\tthis.meshPerAttribute = meshPerAttribute || 1;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.InstancedBufferAttribute.prototype = Object.create( THREE.BufferAttribute.prototype );\r\n\tTHREE.InstancedBufferAttribute.prototype.constructor = THREE.InstancedBufferAttribute;\r\n\t\r\n\tTHREE.InstancedBufferAttribute.prototype.copy = function ( source ) {\r\n\t\r\n\t\tTHREE.BufferAttribute.prototype.copy.call( this, source );\r\n\t\r\n\t\tthis.meshPerAttribute = source.meshPerAttribute;\r\n\t\r\n\t\treturn this;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/core/InterleavedBuffer.js\r\n\t\r\n\t/**\r\n\t * @author benaadams / https://twitter.com/ben_a_adams\r\n\t */\r\n\t\r\n\tTHREE.InterleavedBuffer = function ( array, stride ) {\r\n\t\r\n\t\tthis.uuid = THREE.Math.generateUUID();\r\n\t\r\n\t\tthis.array = array;\r\n\t\tthis.stride = stride;\r\n\t\r\n\t\tthis.dynamic = false;\r\n\t\tthis.updateRange = { offset: 0, count: - 1 };\r\n\t\r\n\t\tthis.version = 0;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.InterleavedBuffer.prototype = {\r\n\t\r\n\t\tconstructor: THREE.InterleavedBuffer,\r\n\t\r\n\t\tget length () {\r\n\t\r\n\t\t\treturn this.array.length;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tget count () {\r\n\t\r\n\t\t\treturn this.array.length / this.stride;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tset needsUpdate( value ) {\r\n\t\r\n\t\t\tif ( value === true ) this.version ++;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetDynamic: function ( value ) {\r\n\t\r\n\t\t\tthis.dynamic = value;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopy: function ( source ) {\r\n\t\r\n\t\t\tthis.array = new source.array.constructor( source.array );\r\n\t\t\tthis.stride = source.stride;\r\n\t\t\tthis.dynamic = source.dynamic;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopyAt: function ( index1, attribute, index2 ) {\r\n\t\r\n\t\t\tindex1 *= this.stride;\r\n\t\t\tindex2 *= attribute.stride;\r\n\t\r\n\t\t\tfor ( var i = 0, l = this.stride; i < l; i ++ ) {\r\n\t\r\n\t\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tset: function ( value, offset ) {\r\n\t\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\t\r\n\t\t\tthis.array.set( value, offset );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclone: function () {\r\n\t\r\n\t\t\treturn new this.constructor().copy( this );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/core/InstancedInterleavedBuffer.js\r\n\t\r\n\t/**\r\n\t * @author benaadams / https://twitter.com/ben_a_adams\r\n\t */\r\n\t\r\n\tTHREE.InstancedInterleavedBuffer = function ( array, stride, meshPerAttribute ) {\r\n\t\r\n\t\tTHREE.InterleavedBuffer.call( this, array, stride );\r\n\t\r\n\t\tthis.meshPerAttribute = meshPerAttribute || 1;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.InstancedInterleavedBuffer.prototype = Object.create( THREE.InterleavedBuffer.prototype );\r\n\tTHREE.InstancedInterleavedBuffer.prototype.constructor = THREE.InstancedInterleavedBuffer;\r\n\t\r\n\tTHREE.InstancedInterleavedBuffer.prototype.copy = function ( source ) {\r\n\t\r\n\t\tTHREE.InterleavedBuffer.prototype.copy.call( this, source );\r\n\t\r\n\t\tthis.meshPerAttribute = source.meshPerAttribute;\r\n\t\r\n\t\treturn this;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/core/InterleavedBufferAttribute.js\r\n\t\r\n\t/**\r\n\t * @author benaadams / https://twitter.com/ben_a_adams\r\n\t */\r\n\t\r\n\tTHREE.InterleavedBufferAttribute = function ( interleavedBuffer, itemSize, offset ) {\r\n\t\r\n\t\tthis.uuid = THREE.Math.generateUUID();\r\n\t\r\n\t\tthis.data = interleavedBuffer;\r\n\t\tthis.itemSize = itemSize;\r\n\t\tthis.offset = offset;\r\n\t\r\n\t};\r\n\t\r\n\t\r\n\tTHREE.InterleavedBufferAttribute.prototype = {\r\n\t\r\n\t\tconstructor: THREE.InterleavedBufferAttribute,\r\n\t\r\n\t\tget length() {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.BufferAttribute: .length has been deprecated. Please use .count.' );\r\n\t\t\treturn this.array.length;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tget count() {\r\n\t\r\n\t\t\treturn this.data.array.length / this.data.stride;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetX: function ( index, x ) {\r\n\t\r\n\t\t\tthis.data.array[ index * this.data.stride + this.offset ] = x;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetY: function ( index, y ) {\r\n\t\r\n\t\t\tthis.data.array[ index * this.data.stride + this.offset + 1 ] = y;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetZ: function ( index, z ) {\r\n\t\r\n\t\t\tthis.data.array[ index * this.data.stride + this.offset + 2 ] = z;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetW: function ( index, w ) {\r\n\t\r\n\t\t\tthis.data.array[ index * this.data.stride + this.offset + 3 ] = w;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetX: function ( index ) {\r\n\t\r\n\t\t\treturn this.data.array[ index * this.data.stride + this.offset ];\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetY: function ( index ) {\r\n\t\r\n\t\t\treturn this.data.array[ index * this.data.stride + this.offset + 1 ];\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetZ: function ( index ) {\r\n\t\r\n\t\t\treturn this.data.array[ index * this.data.stride + this.offset + 2 ];\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetW: function ( index ) {\r\n\t\r\n\t\t\treturn this.data.array[ index * this.data.stride + this.offset + 3 ];\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetXY: function ( index, x, y ) {\r\n\t\r\n\t\t\tindex = index * this.data.stride + this.offset;\r\n\t\r\n\t\t\tthis.data.array[ index + 0 ] = x;\r\n\t\t\tthis.data.array[ index + 1 ] = y;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetXYZ: function ( index, x, y, z ) {\r\n\t\r\n\t\t\tindex = index * this.data.stride + this.offset;\r\n\t\r\n\t\t\tthis.data.array[ index + 0 ] = x;\r\n\t\t\tthis.data.array[ index + 1 ] = y;\r\n\t\t\tthis.data.array[ index + 2 ] = z;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetXYZW: function ( index, x, y, z, w ) {\r\n\t\r\n\t\t\tindex = index * this.data.stride + this.offset;\r\n\t\r\n\t\t\tthis.data.array[ index + 0 ] = x;\r\n\t\t\tthis.data.array[ index + 1 ] = y;\r\n\t\t\tthis.data.array[ index + 2 ] = z;\r\n\t\t\tthis.data.array[ index + 3 ] = w;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/core/Geometry.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author kile / http://kile.stravaganza.org/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author mikael emtinger / http://gomo.se/\r\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\r\n\t * @author bhouston / http://exocortex.com\r\n\t */\r\n\t\r\n\tTHREE.Geometry = function () {\r\n\t\r\n\t\tObject.defineProperty( this, 'id', { value: THREE.GeometryIdCount ++ } );\r\n\t\r\n\t\tthis.uuid = THREE.Math.generateUUID();\r\n\t\r\n\t\tthis.name = '';\r\n\t\tthis.type = 'Geometry';\r\n\t\r\n\t\tthis.vertices = [];\r\n\t\tthis.colors = [];\r\n\t\tthis.faces = [];\r\n\t\tthis.faceVertexUvs = [ [] ];\r\n\t\r\n\t\tthis.morphTargets = [];\r\n\t\tthis.morphColors = [];\r\n\t\tthis.morphNormals = [];\r\n\t\r\n\t\tthis.skinWeights = [];\r\n\t\tthis.skinIndices = [];\r\n\t\r\n\t\tthis.lineDistances = [];\r\n\t\r\n\t\tthis.boundingBox = null;\r\n\t\tthis.boundingSphere = null;\r\n\t\r\n\t\t// update flags\r\n\t\r\n\t\tthis.verticesNeedUpdate = false;\r\n\t\tthis.elementsNeedUpdate = false;\r\n\t\tthis.uvsNeedUpdate = false;\r\n\t\tthis.normalsNeedUpdate = false;\r\n\t\tthis.colorsNeedUpdate = false;\r\n\t\tthis.lineDistancesNeedUpdate = false;\r\n\t\tthis.groupsNeedUpdate = false;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Geometry.prototype = {\r\n\t\r\n\t\tconstructor: THREE.Geometry,\r\n\t\r\n\t\tapplyMatrix: function ( matrix ) {\r\n\t\r\n\t\t\tvar normalMatrix = new THREE.Matrix3().getNormalMatrix( matrix );\r\n\t\r\n\t\t\tfor ( var i = 0, il = this.vertices.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\tvar vertex = this.vertices[ i ];\r\n\t\t\t\tvertex.applyMatrix4( matrix );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tfor ( var i = 0, il = this.faces.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\tvar face = this.faces[ i ];\r\n\t\t\t\tface.normal.applyMatrix3( normalMatrix ).normalize();\r\n\t\r\n\t\t\t\tfor ( var j = 0, jl = face.vertexNormals.length; j < jl; j ++ ) {\r\n\t\r\n\t\t\t\t\tface.vertexNormals[ j ].applyMatrix3( normalMatrix ).normalize();\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( this.boundingBox !== null ) {\r\n\t\r\n\t\t\t\tthis.computeBoundingBox();\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( this.boundingSphere !== null ) {\r\n\t\r\n\t\t\t\tthis.computeBoundingSphere();\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.verticesNeedUpdate = true;\r\n\t\t\tthis.normalsNeedUpdate = true;\r\n\t\r\n\t\t},\r\n\t\r\n\t\trotateX: function () {\r\n\t\r\n\t\t\t// rotate geometry around world x-axis\r\n\t\r\n\t\t\tvar m1;\r\n\t\r\n\t\t\treturn function rotateX( angle ) {\r\n\t\r\n\t\t\t\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\r\n\t\r\n\t\t\t\tm1.makeRotationX( angle );\r\n\t\r\n\t\t\t\tthis.applyMatrix( m1 );\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\trotateY: function () {\r\n\t\r\n\t\t\t// rotate geometry around world y-axis\r\n\t\r\n\t\t\tvar m1;\r\n\t\r\n\t\t\treturn function rotateY( angle ) {\r\n\t\r\n\t\t\t\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\r\n\t\r\n\t\t\t\tm1.makeRotationY( angle );\r\n\t\r\n\t\t\t\tthis.applyMatrix( m1 );\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\trotateZ: function () {\r\n\t\r\n\t\t\t// rotate geometry around world z-axis\r\n\t\r\n\t\t\tvar m1;\r\n\t\r\n\t\t\treturn function rotateZ( angle ) {\r\n\t\r\n\t\t\t\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\r\n\t\r\n\t\t\t\tm1.makeRotationZ( angle );\r\n\t\r\n\t\t\t\tthis.applyMatrix( m1 );\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\ttranslate: function () {\r\n\t\r\n\t\t\t// translate geometry\r\n\t\r\n\t\t\tvar m1;\r\n\t\r\n\t\t\treturn function translate( x, y, z ) {\r\n\t\r\n\t\t\t\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\r\n\t\r\n\t\t\t\tm1.makeTranslation( x, y, z );\r\n\t\r\n\t\t\t\tthis.applyMatrix( m1 );\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tscale: function () {\r\n\t\r\n\t\t\t// scale geometry\r\n\t\r\n\t\t\tvar m1;\r\n\t\r\n\t\t\treturn function scale( x, y, z ) {\r\n\t\r\n\t\t\t\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\r\n\t\r\n\t\t\t\tm1.makeScale( x, y, z );\r\n\t\r\n\t\t\t\tthis.applyMatrix( m1 );\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tlookAt: function () {\r\n\t\r\n\t\t\tvar obj;\r\n\t\r\n\t\t\treturn function lookAt( vector ) {\r\n\t\r\n\t\t\t\tif ( obj === undefined ) obj = new THREE.Object3D();\r\n\t\r\n\t\t\t\tobj.lookAt( vector );\r\n\t\r\n\t\t\t\tobj.updateMatrix();\r\n\t\r\n\t\t\t\tthis.applyMatrix( obj.matrix );\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tfromBufferGeometry: function ( geometry ) {\r\n\t\r\n\t\t\tvar scope = this;\r\n\t\r\n\t\t\tvar indices = geometry.index !== null ? geometry.index.array : undefined;\r\n\t\t\tvar attributes = geometry.attributes;\r\n\t\r\n\t\t\tvar vertices = attributes.position.array;\r\n\t\t\tvar normals = attributes.normal !== undefined ? attributes.normal.array : undefined;\r\n\t\t\tvar colors = attributes.color !== undefined ? attributes.color.array : undefined;\r\n\t\t\tvar uvs = attributes.uv !== undefined ? attributes.uv.array : undefined;\r\n\t\t\tvar uvs2 = attributes.uv2 !== undefined ? attributes.uv2.array : undefined;\r\n\t\r\n\t\t\tif ( uvs2 !== undefined ) this.faceVertexUvs[ 1 ] = [];\r\n\t\r\n\t\t\tvar tempNormals = [];\r\n\t\t\tvar tempUVs = [];\r\n\t\t\tvar tempUVs2 = [];\r\n\t\r\n\t\t\tfor ( var i = 0, j = 0, k = 0; i < vertices.length; i += 3, j += 2, k += 4 ) {\r\n\t\r\n\t\t\t\tscope.vertices.push( new THREE.Vector3( vertices[ i ], vertices[ i + 1 ], vertices[ i + 2 ] ) );\r\n\t\r\n\t\t\t\tif ( normals !== undefined ) {\r\n\t\r\n\t\t\t\t\ttempNormals.push( new THREE.Vector3( normals[ i ], normals[ i + 1 ], normals[ i + 2 ] ) );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( colors !== undefined ) {\r\n\t\r\n\t\t\t\t\tscope.colors.push( new THREE.Color( colors[ i ], colors[ i + 1 ], colors[ i + 2 ] ) );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( uvs !== undefined ) {\r\n\t\r\n\t\t\t\t\ttempUVs.push( new THREE.Vector2( uvs[ j ], uvs[ j + 1 ] ) );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( uvs2 !== undefined ) {\r\n\t\r\n\t\t\t\t\ttempUVs2.push( new THREE.Vector2( uvs2[ j ], uvs2[ j + 1 ] ) );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar addFace = function ( a, b, c ) {\r\n\t\r\n\t\t\t\tvar vertexNormals = normals !== undefined ? [ tempNormals[ a ].clone(), tempNormals[ b ].clone(), tempNormals[ c ].clone() ] : [];\r\n\t\t\t\tvar vertexColors = colors !== undefined ? [ scope.colors[ a ].clone(), scope.colors[ b ].clone(), scope.colors[ c ].clone() ] : [];\r\n\t\r\n\t\t\t\tvar face = new THREE.Face3( a, b, c, vertexNormals, vertexColors );\r\n\t\r\n\t\t\t\tscope.faces.push( face );\r\n\t\r\n\t\t\t\tif ( uvs !== undefined ) {\r\n\t\r\n\t\t\t\t\tscope.faceVertexUvs[ 0 ].push( [ tempUVs[ a ].clone(), tempUVs[ b ].clone(), tempUVs[ c ].clone() ] );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( uvs2 !== undefined ) {\r\n\t\r\n\t\t\t\t\tscope.faceVertexUvs[ 1 ].push( [ tempUVs2[ a ].clone(), tempUVs2[ b ].clone(), tempUVs2[ c ].clone() ] );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t\tif ( indices !== undefined ) {\r\n\t\r\n\t\t\t\tvar groups = geometry.groups;\r\n\t\r\n\t\t\t\tif ( groups.length > 0 ) {\r\n\t\r\n\t\t\t\t\tfor ( var i = 0; i < groups.length; i ++ ) {\r\n\t\r\n\t\t\t\t\t\tvar group = groups[ i ];\r\n\t\r\n\t\t\t\t\t\tvar start = group.start;\r\n\t\t\t\t\t\tvar count = group.count;\r\n\t\r\n\t\t\t\t\t\tfor ( var j = start, jl = start + count; j < jl; j += 3 ) {\r\n\t\r\n\t\t\t\t\t\t\taddFace( indices[ j ], indices[ j + 1 ], indices[ j + 2 ] );\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tfor ( var i = 0; i < indices.length; i += 3 ) {\r\n\t\r\n\t\t\t\t\t\taddFace( indices[ i ], indices[ i + 1 ], indices[ i + 2 ] );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tfor ( var i = 0; i < vertices.length / 3; i += 3 ) {\r\n\t\r\n\t\t\t\t\taddFace( i, i + 1, i + 2 );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.computeFaceNormals();\r\n\t\r\n\t\t\tif ( geometry.boundingBox !== null ) {\r\n\t\r\n\t\t\t\tthis.boundingBox = geometry.boundingBox.clone();\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( geometry.boundingSphere !== null ) {\r\n\t\r\n\t\t\t\tthis.boundingSphere = geometry.boundingSphere.clone();\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcenter: function () {\r\n\t\r\n\t\t\tthis.computeBoundingBox();\r\n\t\r\n\t\t\tvar offset = this.boundingBox.center().negate();\r\n\t\r\n\t\t\tthis.translate( offset.x, offset.y, offset.z );\r\n\t\r\n\t\t\treturn offset;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tnormalize: function () {\r\n\t\r\n\t\t\tthis.computeBoundingSphere();\r\n\t\r\n\t\t\tvar center = this.boundingSphere.center;\r\n\t\t\tvar radius = this.boundingSphere.radius;\r\n\t\r\n\t\t\tvar s = radius === 0 ? 1 : 1.0 / radius;\r\n\t\r\n\t\t\tvar matrix = new THREE.Matrix4();\r\n\t\t\tmatrix.set(\r\n\t\t\t\ts, 0, 0, - s * center.x,\r\n\t\t\t\t0, s, 0, - s * center.y,\r\n\t\t\t\t0, 0, s, - s * center.z,\r\n\t\t\t\t0, 0, 0, 1\r\n\t\t\t);\r\n\t\r\n\t\t\tthis.applyMatrix( matrix );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcomputeFaceNormals: function () {\r\n\t\r\n\t\t\tvar cb = new THREE.Vector3(), ab = new THREE.Vector3();\r\n\t\r\n\t\t\tfor ( var f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\t\r\n\t\t\t\tvar face = this.faces[ f ];\r\n\t\r\n\t\t\t\tvar vA = this.vertices[ face.a ];\r\n\t\t\t\tvar vB = this.vertices[ face.b ];\r\n\t\t\t\tvar vC = this.vertices[ face.c ];\r\n\t\r\n\t\t\t\tcb.subVectors( vC, vB );\r\n\t\t\t\tab.subVectors( vA, vB );\r\n\t\t\t\tcb.cross( ab );\r\n\t\r\n\t\t\t\tcb.normalize();\r\n\t\r\n\t\t\t\tface.normal.copy( cb );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcomputeVertexNormals: function ( areaWeighted ) {\r\n\t\r\n\t\t\tvar v, vl, f, fl, face, vertices;\r\n\t\r\n\t\t\tvertices = new Array( this.vertices.length );\r\n\t\r\n\t\t\tfor ( v = 0, vl = this.vertices.length; v < vl; v ++ ) {\r\n\t\r\n\t\t\t\tvertices[ v ] = new THREE.Vector3();\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( areaWeighted ) {\r\n\t\r\n\t\t\t\t// vertex normals weighted by triangle areas\r\n\t\t\t\t// http://www.iquilezles.org/www/articles/normals/normals.htm\r\n\t\r\n\t\t\t\tvar vA, vB, vC;\r\n\t\t\t\tvar cb = new THREE.Vector3(), ab = new THREE.Vector3();\r\n\t\r\n\t\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\t\r\n\t\t\t\t\tface = this.faces[ f ];\r\n\t\r\n\t\t\t\t\tvA = this.vertices[ face.a ];\r\n\t\t\t\t\tvB = this.vertices[ face.b ];\r\n\t\t\t\t\tvC = this.vertices[ face.c ];\r\n\t\r\n\t\t\t\t\tcb.subVectors( vC, vB );\r\n\t\t\t\t\tab.subVectors( vA, vB );\r\n\t\t\t\t\tcb.cross( ab );\r\n\t\r\n\t\t\t\t\tvertices[ face.a ].add( cb );\r\n\t\t\t\t\tvertices[ face.b ].add( cb );\r\n\t\t\t\t\tvertices[ face.c ].add( cb );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\t\r\n\t\t\t\t\tface = this.faces[ f ];\r\n\t\r\n\t\t\t\t\tvertices[ face.a ].add( face.normal );\r\n\t\t\t\t\tvertices[ face.b ].add( face.normal );\r\n\t\t\t\t\tvertices[ face.c ].add( face.normal );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tfor ( v = 0, vl = this.vertices.length; v < vl; v ++ ) {\r\n\t\r\n\t\t\t\tvertices[ v ].normalize();\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\t\r\n\t\t\t\tface = this.faces[ f ];\r\n\t\r\n\t\t\t\tvar vertexNormals = face.vertexNormals;\r\n\t\r\n\t\t\t\tif ( vertexNormals.length === 3 ) {\r\n\t\r\n\t\t\t\t\tvertexNormals[ 0 ].copy( vertices[ face.a ] );\r\n\t\t\t\t\tvertexNormals[ 1 ].copy( vertices[ face.b ] );\r\n\t\t\t\t\tvertexNormals[ 2 ].copy( vertices[ face.c ] );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tvertexNormals[ 0 ] = vertices[ face.a ].clone();\r\n\t\t\t\t\tvertexNormals[ 1 ] = vertices[ face.b ].clone();\r\n\t\t\t\t\tvertexNormals[ 2 ] = vertices[ face.c ].clone();\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcomputeMorphNormals: function () {\r\n\t\r\n\t\t\tvar i, il, f, fl, face;\r\n\t\r\n\t\t\t// save original normals\r\n\t\t\t// - create temp variables on first access\r\n\t\t\t//   otherwise just copy (for faster repeated calls)\r\n\t\r\n\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\t\r\n\t\t\t\tface = this.faces[ f ];\r\n\t\r\n\t\t\t\tif ( ! face.__originalFaceNormal ) {\r\n\t\r\n\t\t\t\t\tface.__originalFaceNormal = face.normal.clone();\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tface.__originalFaceNormal.copy( face.normal );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( ! face.__originalVertexNormals ) face.__originalVertexNormals = [];\r\n\t\r\n\t\t\t\tfor ( i = 0, il = face.vertexNormals.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\t\tif ( ! face.__originalVertexNormals[ i ] ) {\r\n\t\r\n\t\t\t\t\t\tface.__originalVertexNormals[ i ] = face.vertexNormals[ i ].clone();\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\tface.__originalVertexNormals[ i ].copy( face.vertexNormals[ i ] );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// use temp geometry to compute face and vertex normals for each morph\r\n\t\r\n\t\t\tvar tmpGeo = new THREE.Geometry();\r\n\t\t\ttmpGeo.faces = this.faces;\r\n\t\r\n\t\t\tfor ( i = 0, il = this.morphTargets.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\t// create on first access\r\n\t\r\n\t\t\t\tif ( ! this.morphNormals[ i ] ) {\r\n\t\r\n\t\t\t\t\tthis.morphNormals[ i ] = {};\r\n\t\t\t\t\tthis.morphNormals[ i ].faceNormals = [];\r\n\t\t\t\t\tthis.morphNormals[ i ].vertexNormals = [];\r\n\t\r\n\t\t\t\t\tvar dstNormalsFace = this.morphNormals[ i ].faceNormals;\r\n\t\t\t\t\tvar dstNormalsVertex = this.morphNormals[ i ].vertexNormals;\r\n\t\r\n\t\t\t\t\tvar faceNormal, vertexNormals;\r\n\t\r\n\t\t\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\t\r\n\t\t\t\t\t\tfaceNormal = new THREE.Vector3();\r\n\t\t\t\t\t\tvertexNormals = { a: new THREE.Vector3(), b: new THREE.Vector3(), c: new THREE.Vector3() };\r\n\t\r\n\t\t\t\t\t\tdstNormalsFace.push( faceNormal );\r\n\t\t\t\t\t\tdstNormalsVertex.push( vertexNormals );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar morphNormals = this.morphNormals[ i ];\r\n\t\r\n\t\t\t\t// set vertices to morph target\r\n\t\r\n\t\t\t\ttmpGeo.vertices = this.morphTargets[ i ].vertices;\r\n\t\r\n\t\t\t\t// compute morph normals\r\n\t\r\n\t\t\t\ttmpGeo.computeFaceNormals();\r\n\t\t\t\ttmpGeo.computeVertexNormals();\r\n\t\r\n\t\t\t\t// store morph normals\r\n\t\r\n\t\t\t\tvar faceNormal, vertexNormals;\r\n\t\r\n\t\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\t\r\n\t\t\t\t\tface = this.faces[ f ];\r\n\t\r\n\t\t\t\t\tfaceNormal = morphNormals.faceNormals[ f ];\r\n\t\t\t\t\tvertexNormals = morphNormals.vertexNormals[ f ];\r\n\t\r\n\t\t\t\t\tfaceNormal.copy( face.normal );\r\n\t\r\n\t\t\t\t\tvertexNormals.a.copy( face.vertexNormals[ 0 ] );\r\n\t\t\t\t\tvertexNormals.b.copy( face.vertexNormals[ 1 ] );\r\n\t\t\t\t\tvertexNormals.c.copy( face.vertexNormals[ 2 ] );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// restore original normals\r\n\t\r\n\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\t\r\n\t\t\t\tface = this.faces[ f ];\r\n\t\r\n\t\t\t\tface.normal = face.__originalFaceNormal;\r\n\t\t\t\tface.vertexNormals = face.__originalVertexNormals;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcomputeTangents: function () {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.Geometry: .computeTangents() has been removed.' );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcomputeLineDistances: function () {\r\n\t\r\n\t\t\tvar d = 0;\r\n\t\t\tvar vertices = this.vertices;\r\n\t\r\n\t\t\tfor ( var i = 0, il = vertices.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\tif ( i > 0 ) {\r\n\t\r\n\t\t\t\t\td += vertices[ i ].distanceTo( vertices[ i - 1 ] );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tthis.lineDistances[ i ] = d;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcomputeBoundingBox: function () {\r\n\t\r\n\t\t\tif ( this.boundingBox === null ) {\r\n\t\r\n\t\t\t\tthis.boundingBox = new THREE.Box3();\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.boundingBox.setFromPoints( this.vertices );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcomputeBoundingSphere: function () {\r\n\t\r\n\t\t\tif ( this.boundingSphere === null ) {\r\n\t\r\n\t\t\t\tthis.boundingSphere = new THREE.Sphere();\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.boundingSphere.setFromPoints( this.vertices );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmerge: function ( geometry, matrix, materialIndexOffset ) {\r\n\t\r\n\t\t\tif ( geometry instanceof THREE.Geometry === false ) {\r\n\t\r\n\t\t\t\tconsole.error( 'THREE.Geometry.merge(): geometry not an instance of THREE.Geometry.', geometry );\r\n\t\t\t\treturn;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar normalMatrix,\r\n\t\t\tvertexOffset = this.vertices.length,\r\n\t\t\tvertices1 = this.vertices,\r\n\t\t\tvertices2 = geometry.vertices,\r\n\t\t\tfaces1 = this.faces,\r\n\t\t\tfaces2 = geometry.faces,\r\n\t\t\tuvs1 = this.faceVertexUvs[ 0 ],\r\n\t\t\tuvs2 = geometry.faceVertexUvs[ 0 ];\r\n\t\r\n\t\t\tif ( materialIndexOffset === undefined ) materialIndexOffset = 0;\r\n\t\r\n\t\t\tif ( matrix !== undefined ) {\r\n\t\r\n\t\t\t\tnormalMatrix = new THREE.Matrix3().getNormalMatrix( matrix );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// vertices\r\n\t\r\n\t\t\tfor ( var i = 0, il = vertices2.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\tvar vertex = vertices2[ i ];\r\n\t\r\n\t\t\t\tvar vertexCopy = vertex.clone();\r\n\t\r\n\t\t\t\tif ( matrix !== undefined ) vertexCopy.applyMatrix4( matrix );\r\n\t\r\n\t\t\t\tvertices1.push( vertexCopy );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// faces\r\n\t\r\n\t\t\tfor ( i = 0, il = faces2.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\tvar face = faces2[ i ], faceCopy, normal, color,\r\n\t\t\t\tfaceVertexNormals = face.vertexNormals,\r\n\t\t\t\tfaceVertexColors = face.vertexColors;\r\n\t\r\n\t\t\t\tfaceCopy = new THREE.Face3( face.a + vertexOffset, face.b + vertexOffset, face.c + vertexOffset );\r\n\t\t\t\tfaceCopy.normal.copy( face.normal );\r\n\t\r\n\t\t\t\tif ( normalMatrix !== undefined ) {\r\n\t\r\n\t\t\t\t\tfaceCopy.normal.applyMatrix3( normalMatrix ).normalize();\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tfor ( var j = 0, jl = faceVertexNormals.length; j < jl; j ++ ) {\r\n\t\r\n\t\t\t\t\tnormal = faceVertexNormals[ j ].clone();\r\n\t\r\n\t\t\t\t\tif ( normalMatrix !== undefined ) {\r\n\t\r\n\t\t\t\t\t\tnormal.applyMatrix3( normalMatrix ).normalize();\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tfaceCopy.vertexNormals.push( normal );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tfaceCopy.color.copy( face.color );\r\n\t\r\n\t\t\t\tfor ( var j = 0, jl = faceVertexColors.length; j < jl; j ++ ) {\r\n\t\r\n\t\t\t\t\tcolor = faceVertexColors[ j ];\r\n\t\t\t\t\tfaceCopy.vertexColors.push( color.clone() );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tfaceCopy.materialIndex = face.materialIndex + materialIndexOffset;\r\n\t\r\n\t\t\t\tfaces1.push( faceCopy );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// uvs\r\n\t\r\n\t\t\tfor ( i = 0, il = uvs2.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\tvar uv = uvs2[ i ], uvCopy = [];\r\n\t\r\n\t\t\t\tif ( uv === undefined ) {\r\n\t\r\n\t\t\t\t\tcontinue;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tfor ( var j = 0, jl = uv.length; j < jl; j ++ ) {\r\n\t\r\n\t\t\t\t\tuvCopy.push( uv[ j ].clone() );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tuvs1.push( uvCopy );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmergeMesh: function ( mesh ) {\r\n\t\r\n\t\t\tif ( mesh instanceof THREE.Mesh === false ) {\r\n\t\r\n\t\t\t\tconsole.error( 'THREE.Geometry.mergeMesh(): mesh not an instance of THREE.Mesh.', mesh );\r\n\t\t\t\treturn;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tmesh.matrixAutoUpdate && mesh.updateMatrix();\r\n\t\r\n\t\t\tthis.merge( mesh.geometry, mesh.matrix );\r\n\t\r\n\t\t},\r\n\t\r\n\t\t/*\r\n\t\t * Checks for duplicate vertices with hashmap.\r\n\t\t * Duplicated vertices are removed\r\n\t\t * and faces' vertices are updated.\r\n\t\t */\r\n\t\r\n\t\tmergeVertices: function () {\r\n\t\r\n\t\t\tvar verticesMap = {}; // Hashmap for looking up vertices by position coordinates (and making sure they are unique)\r\n\t\t\tvar unique = [], changes = [];\r\n\t\r\n\t\t\tvar v, key;\r\n\t\t\tvar precisionPoints = 4; // number of decimal points, e.g. 4 for epsilon of 0.0001\r\n\t\t\tvar precision = Math.pow( 10, precisionPoints );\r\n\t\t\tvar i, il, face;\r\n\t\t\tvar indices, j, jl;\r\n\t\r\n\t\t\tfor ( i = 0, il = this.vertices.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\tv = this.vertices[ i ];\r\n\t\t\t\tkey = Math.round( v.x * precision ) + '_' + Math.round( v.y * precision ) + '_' + Math.round( v.z * precision );\r\n\t\r\n\t\t\t\tif ( verticesMap[ key ] === undefined ) {\r\n\t\r\n\t\t\t\t\tverticesMap[ key ] = i;\r\n\t\t\t\t\tunique.push( this.vertices[ i ] );\r\n\t\t\t\t\tchanges[ i ] = unique.length - 1;\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t//console.log('Duplicate vertex found. ', i, ' could be using ', verticesMap[key]);\r\n\t\t\t\t\tchanges[ i ] = changes[ verticesMap[ key ] ];\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\r\n\t\t\t// if faces are completely degenerate after merging vertices, we\r\n\t\t\t// have to remove them from the geometry.\r\n\t\t\tvar faceIndicesToRemove = [];\r\n\t\r\n\t\t\tfor ( i = 0, il = this.faces.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\tface = this.faces[ i ];\r\n\t\r\n\t\t\t\tface.a = changes[ face.a ];\r\n\t\t\t\tface.b = changes[ face.b ];\r\n\t\t\t\tface.c = changes[ face.c ];\r\n\t\r\n\t\t\t\tindices = [ face.a, face.b, face.c ];\r\n\t\r\n\t\t\t\tvar dupIndex = - 1;\r\n\t\r\n\t\t\t\t// if any duplicate vertices are found in a Face3\r\n\t\t\t\t// we have to remove the face as nothing can be saved\r\n\t\t\t\tfor ( var n = 0; n < 3; n ++ ) {\r\n\t\r\n\t\t\t\t\tif ( indices[ n ] === indices[ ( n + 1 ) % 3 ] ) {\r\n\t\r\n\t\t\t\t\t\tdupIndex = n;\r\n\t\t\t\t\t\tfaceIndicesToRemove.push( i );\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tfor ( i = faceIndicesToRemove.length - 1; i >= 0; i -- ) {\r\n\t\r\n\t\t\t\tvar idx = faceIndicesToRemove[ i ];\r\n\t\r\n\t\t\t\tthis.faces.splice( idx, 1 );\r\n\t\r\n\t\t\t\tfor ( j = 0, jl = this.faceVertexUvs.length; j < jl; j ++ ) {\r\n\t\r\n\t\t\t\t\tthis.faceVertexUvs[ j ].splice( idx, 1 );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// Use unique set of vertices\r\n\t\r\n\t\t\tvar diff = this.vertices.length - unique.length;\r\n\t\t\tthis.vertices = unique;\r\n\t\t\treturn diff;\r\n\t\r\n\t\t},\r\n\t\r\n\t\ttoJSON: function () {\r\n\t\r\n\t\t\tvar data = {\r\n\t\t\t\tmetadata: {\r\n\t\t\t\t\tversion: 4.4,\r\n\t\t\t\t\ttype: 'Geometry',\r\n\t\t\t\t\tgenerator: 'Geometry.toJSON'\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\r\n\t\t\t// standard Geometry serialization\r\n\t\r\n\t\t\tdata.uuid = this.uuid;\r\n\t\t\tdata.type = this.type;\r\n\t\t\tif ( this.name !== '' ) data.name = this.name;\r\n\t\r\n\t\t\tif ( this.parameters !== undefined ) {\r\n\t\r\n\t\t\t\tvar parameters = this.parameters;\r\n\t\r\n\t\t\t\tfor ( var key in parameters ) {\r\n\t\r\n\t\t\t\t\tif ( parameters[ key ] !== undefined ) data[ key ] = parameters[ key ];\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn data;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar vertices = [];\r\n\t\r\n\t\t\tfor ( var i = 0; i < this.vertices.length; i ++ ) {\r\n\t\r\n\t\t\t\tvar vertex = this.vertices[ i ];\r\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar faces = [];\r\n\t\t\tvar normals = [];\r\n\t\t\tvar normalsHash = {};\r\n\t\t\tvar colors = [];\r\n\t\t\tvar colorsHash = {};\r\n\t\t\tvar uvs = [];\r\n\t\t\tvar uvsHash = {};\r\n\t\r\n\t\t\tfor ( var i = 0; i < this.faces.length; i ++ ) {\r\n\t\r\n\t\t\t\tvar face = this.faces[ i ];\r\n\t\r\n\t\t\t\tvar hasMaterial = false; // face.materialIndex !== undefined;\r\n\t\t\t\tvar hasFaceUv = false; // deprecated\r\n\t\t\t\tvar hasFaceVertexUv = this.faceVertexUvs[ 0 ][ i ] !== undefined;\r\n\t\t\t\tvar hasFaceNormal = face.normal.length() > 0;\r\n\t\t\t\tvar hasFaceVertexNormal = face.vertexNormals.length > 0;\r\n\t\t\t\tvar hasFaceColor = face.color.r !== 1 || face.color.g !== 1 || face.color.b !== 1;\r\n\t\t\t\tvar hasFaceVertexColor = face.vertexColors.length > 0;\r\n\t\r\n\t\t\t\tvar faceType = 0;\r\n\t\r\n\t\t\t\tfaceType = setBit( faceType, 0, 0 );\r\n\t\t\t\tfaceType = setBit( faceType, 1, hasMaterial );\r\n\t\t\t\tfaceType = setBit( faceType, 2, hasFaceUv );\r\n\t\t\t\tfaceType = setBit( faceType, 3, hasFaceVertexUv );\r\n\t\t\t\tfaceType = setBit( faceType, 4, hasFaceNormal );\r\n\t\t\t\tfaceType = setBit( faceType, 5, hasFaceVertexNormal );\r\n\t\t\t\tfaceType = setBit( faceType, 6, hasFaceColor );\r\n\t\t\t\tfaceType = setBit( faceType, 7, hasFaceVertexColor );\r\n\t\r\n\t\t\t\tfaces.push( faceType );\r\n\t\t\t\tfaces.push( face.a, face.b, face.c );\r\n\t\r\n\t\t\t\tif ( hasFaceVertexUv ) {\r\n\t\r\n\t\t\t\t\tvar faceVertexUvs = this.faceVertexUvs[ 0 ][ i ];\r\n\t\r\n\t\t\t\t\tfaces.push(\r\n\t\t\t\t\t\tgetUvIndex( faceVertexUvs[ 0 ] ),\r\n\t\t\t\t\t\tgetUvIndex( faceVertexUvs[ 1 ] ),\r\n\t\t\t\t\t\tgetUvIndex( faceVertexUvs[ 2 ] )\r\n\t\t\t\t\t);\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( hasFaceNormal ) {\r\n\t\r\n\t\t\t\t\tfaces.push( getNormalIndex( face.normal ) );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( hasFaceVertexNormal ) {\r\n\t\r\n\t\t\t\t\tvar vertexNormals = face.vertexNormals;\r\n\t\r\n\t\t\t\t\tfaces.push(\r\n\t\t\t\t\t\tgetNormalIndex( vertexNormals[ 0 ] ),\r\n\t\t\t\t\t\tgetNormalIndex( vertexNormals[ 1 ] ),\r\n\t\t\t\t\t\tgetNormalIndex( vertexNormals[ 2 ] )\r\n\t\t\t\t\t);\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( hasFaceColor ) {\r\n\t\r\n\t\t\t\t\tfaces.push( getColorIndex( face.color ) );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( hasFaceVertexColor ) {\r\n\t\r\n\t\t\t\t\tvar vertexColors = face.vertexColors;\r\n\t\r\n\t\t\t\t\tfaces.push(\r\n\t\t\t\t\t\tgetColorIndex( vertexColors[ 0 ] ),\r\n\t\t\t\t\t\tgetColorIndex( vertexColors[ 1 ] ),\r\n\t\t\t\t\t\tgetColorIndex( vertexColors[ 2 ] )\r\n\t\t\t\t\t);\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tfunction setBit( value, position, enabled ) {\r\n\t\r\n\t\t\t\treturn enabled ? value | ( 1 << position ) : value & ( ~ ( 1 << position ) );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tfunction getNormalIndex( normal ) {\r\n\t\r\n\t\t\t\tvar hash = normal.x.toString() + normal.y.toString() + normal.z.toString();\r\n\t\r\n\t\t\t\tif ( normalsHash[ hash ] !== undefined ) {\r\n\t\r\n\t\t\t\t\treturn normalsHash[ hash ];\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tnormalsHash[ hash ] = normals.length / 3;\r\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\r\n\t\r\n\t\t\t\treturn normalsHash[ hash ];\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tfunction getColorIndex( color ) {\r\n\t\r\n\t\t\t\tvar hash = color.r.toString() + color.g.toString() + color.b.toString();\r\n\t\r\n\t\t\t\tif ( colorsHash[ hash ] !== undefined ) {\r\n\t\r\n\t\t\t\t\treturn colorsHash[ hash ];\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tcolorsHash[ hash ] = colors.length;\r\n\t\t\t\tcolors.push( color.getHex() );\r\n\t\r\n\t\t\t\treturn colorsHash[ hash ];\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tfunction getUvIndex( uv ) {\r\n\t\r\n\t\t\t\tvar hash = uv.x.toString() + uv.y.toString();\r\n\t\r\n\t\t\t\tif ( uvsHash[ hash ] !== undefined ) {\r\n\t\r\n\t\t\t\t\treturn uvsHash[ hash ];\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tuvsHash[ hash ] = uvs.length / 2;\r\n\t\t\t\tuvs.push( uv.x, uv.y );\r\n\t\r\n\t\t\t\treturn uvsHash[ hash ];\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tdata.data = {};\r\n\t\r\n\t\t\tdata.data.vertices = vertices;\r\n\t\t\tdata.data.normals = normals;\r\n\t\t\tif ( colors.length > 0 ) data.data.colors = colors;\r\n\t\t\tif ( uvs.length > 0 ) data.data.uvs = [ uvs ]; // temporal backward compatibility\r\n\t\t\tdata.data.faces = faces;\r\n\t\r\n\t\t\treturn data;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclone: function () {\r\n\t\r\n\t\t\treturn new this.constructor().copy( this );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopy: function ( source ) {\r\n\t\r\n\t\t\tthis.vertices = [];\r\n\t\t\tthis.faces = [];\r\n\t\t\tthis.faceVertexUvs = [ [] ];\r\n\t\r\n\t\t\tvar vertices = source.vertices;\r\n\t\r\n\t\t\tfor ( var i = 0, il = vertices.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\tthis.vertices.push( vertices[ i ].clone() );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar faces = source.faces;\r\n\t\r\n\t\t\tfor ( var i = 0, il = faces.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\tthis.faces.push( faces[ i ].clone() );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tfor ( var i = 0, il = source.faceVertexUvs.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\tvar faceVertexUvs = source.faceVertexUvs[ i ];\r\n\t\r\n\t\t\t\tif ( this.faceVertexUvs[ i ] === undefined ) {\r\n\t\r\n\t\t\t\t\tthis.faceVertexUvs[ i ] = [];\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tfor ( var j = 0, jl = faceVertexUvs.length; j < jl; j ++ ) {\r\n\t\r\n\t\t\t\t\tvar uvs = faceVertexUvs[ j ], uvsCopy = [];\r\n\t\r\n\t\t\t\t\tfor ( var k = 0, kl = uvs.length; k < kl; k ++ ) {\r\n\t\r\n\t\t\t\t\t\tvar uv = uvs[ k ];\r\n\t\r\n\t\t\t\t\t\tuvsCopy.push( uv.clone() );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tthis.faceVertexUvs[ i ].push( uvsCopy );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdispose: function () {\r\n\t\r\n\t\t\tthis.dispatchEvent( { type: 'dispose' } );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.EventDispatcher.prototype.apply( THREE.Geometry.prototype );\r\n\t\r\n\tTHREE.GeometryIdCount = 0;\r\n\t\r\n\t// File:src/core/DirectGeometry.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.DirectGeometry = function () {\r\n\t\r\n\t\tObject.defineProperty( this, 'id', { value: THREE.GeometryIdCount ++ } );\r\n\t\r\n\t\tthis.uuid = THREE.Math.generateUUID();\r\n\t\r\n\t\tthis.name = '';\r\n\t\tthis.type = 'DirectGeometry';\r\n\t\r\n\t\tthis.indices = [];\r\n\t\tthis.vertices = [];\r\n\t\tthis.normals = [];\r\n\t\tthis.colors = [];\r\n\t\tthis.uvs = [];\r\n\t\tthis.uvs2 = [];\r\n\t\r\n\t\tthis.groups = [];\r\n\t\r\n\t\tthis.morphTargets = {};\r\n\t\r\n\t\tthis.skinWeights = [];\r\n\t\tthis.skinIndices = [];\r\n\t\r\n\t\t// this.lineDistances = [];\r\n\t\r\n\t\tthis.boundingBox = null;\r\n\t\tthis.boundingSphere = null;\r\n\t\r\n\t\t// update flags\r\n\t\r\n\t\tthis.verticesNeedUpdate = false;\r\n\t\tthis.normalsNeedUpdate = false;\r\n\t\tthis.colorsNeedUpdate = false;\r\n\t\tthis.uvsNeedUpdate = false;\r\n\t\tthis.groupsNeedUpdate = false;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.DirectGeometry.prototype = {\r\n\t\r\n\t\tconstructor: THREE.DirectGeometry,\r\n\t\r\n\t\tcomputeBoundingBox: THREE.Geometry.prototype.computeBoundingBox,\r\n\t\tcomputeBoundingSphere: THREE.Geometry.prototype.computeBoundingSphere,\r\n\t\r\n\t\tcomputeFaceNormals: function () {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.DirectGeometry: computeFaceNormals() is not a method of this type of geometry.' );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcomputeVertexNormals: function () {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.DirectGeometry: computeVertexNormals() is not a method of this type of geometry.' );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcomputeGroups: function ( geometry ) {\r\n\t\r\n\t\t\tvar group;\r\n\t\t\tvar groups = [];\r\n\t\t\tvar materialIndex;\r\n\t\r\n\t\t\tvar faces = geometry.faces;\r\n\t\r\n\t\t\tfor ( var i = 0; i < faces.length; i ++ ) {\r\n\t\r\n\t\t\t\tvar face = faces[ i ];\r\n\t\r\n\t\t\t\t// materials\r\n\t\r\n\t\t\t\tif ( face.materialIndex !== materialIndex ) {\r\n\t\r\n\t\t\t\t\tmaterialIndex = face.materialIndex;\r\n\t\r\n\t\t\t\t\tif ( group !== undefined ) {\r\n\t\r\n\t\t\t\t\t\tgroup.count = ( i * 3 ) - group.start;\r\n\t\t\t\t\t\tgroups.push( group );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tgroup = {\r\n\t\t\t\t\t\tstart: i * 3,\r\n\t\t\t\t\t\tmaterialIndex: materialIndex\r\n\t\t\t\t\t};\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( group !== undefined ) {\r\n\t\r\n\t\t\t\tgroup.count = ( i * 3 ) - group.start;\r\n\t\t\t\tgroups.push( group );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.groups = groups;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tfromGeometry: function ( geometry ) {\r\n\t\r\n\t\t\tvar faces = geometry.faces;\r\n\t\t\tvar vertices = geometry.vertices;\r\n\t\t\tvar faceVertexUvs = geometry.faceVertexUvs;\r\n\t\r\n\t\t\tvar hasFaceVertexUv = faceVertexUvs[ 0 ] && faceVertexUvs[ 0 ].length > 0;\r\n\t\t\tvar hasFaceVertexUv2 = faceVertexUvs[ 1 ] && faceVertexUvs[ 1 ].length > 0;\r\n\t\r\n\t\t\t// morphs\r\n\t\r\n\t\t\tvar morphTargets = geometry.morphTargets;\r\n\t\t\tvar morphTargetsLength = morphTargets.length;\r\n\t\r\n\t\t\tif ( morphTargetsLength > 0 ) {\r\n\t\r\n\t\t\t\tvar morphTargetsPosition = [];\r\n\t\r\n\t\t\t\tfor ( var i = 0; i < morphTargetsLength; i ++ ) {\r\n\t\r\n\t\t\t\t\tmorphTargetsPosition[ i ] = [];\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tthis.morphTargets.position = morphTargetsPosition;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar morphNormals = geometry.morphNormals;\r\n\t\t\tvar morphNormalsLength = morphNormals.length;\r\n\t\r\n\t\t\tif ( morphNormalsLength > 0 ) {\r\n\t\r\n\t\t\t\tvar morphTargetsNormal = [];\r\n\t\r\n\t\t\t\tfor ( var i = 0; i < morphNormalsLength; i ++ ) {\r\n\t\r\n\t\t\t\t\tmorphTargetsNormal[ i ] = [];\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tthis.morphTargets.normal = morphTargetsNormal;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// skins\r\n\t\r\n\t\t\tvar skinIndices = geometry.skinIndices;\r\n\t\t\tvar skinWeights = geometry.skinWeights;\r\n\t\r\n\t\t\tvar hasSkinIndices = skinIndices.length === vertices.length;\r\n\t\t\tvar hasSkinWeights = skinWeights.length === vertices.length;\r\n\t\r\n\t\t\t//\r\n\t\r\n\t\t\tfor ( var i = 0; i < faces.length; i ++ ) {\r\n\t\r\n\t\t\t\tvar face = faces[ i ];\r\n\t\r\n\t\t\t\tthis.vertices.push( vertices[ face.a ], vertices[ face.b ], vertices[ face.c ] );\r\n\t\r\n\t\t\t\tvar vertexNormals = face.vertexNormals;\r\n\t\r\n\t\t\t\tif ( vertexNormals.length === 3 ) {\r\n\t\r\n\t\t\t\t\tthis.normals.push( vertexNormals[ 0 ], vertexNormals[ 1 ], vertexNormals[ 2 ] );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tvar normal = face.normal;\r\n\t\r\n\t\t\t\t\tthis.normals.push( normal, normal, normal );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar vertexColors = face.vertexColors;\r\n\t\r\n\t\t\t\tif ( vertexColors.length === 3 ) {\r\n\t\r\n\t\t\t\t\tthis.colors.push( vertexColors[ 0 ], vertexColors[ 1 ], vertexColors[ 2 ] );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tvar color = face.color;\r\n\t\r\n\t\t\t\t\tthis.colors.push( color, color, color );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( hasFaceVertexUv === true ) {\r\n\t\r\n\t\t\t\t\tvar vertexUvs = faceVertexUvs[ 0 ][ i ];\r\n\t\r\n\t\t\t\t\tif ( vertexUvs !== undefined ) {\r\n\t\r\n\t\t\t\t\t\tthis.uvs.push( vertexUvs[ 0 ], vertexUvs[ 1 ], vertexUvs[ 2 ] );\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\tconsole.warn( 'THREE.DirectGeometry.fromGeometry(): Undefined vertexUv ', i );\r\n\t\r\n\t\t\t\t\t\tthis.uvs.push( new THREE.Vector2(), new THREE.Vector2(), new THREE.Vector2() );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( hasFaceVertexUv2 === true ) {\r\n\t\r\n\t\t\t\t\tvar vertexUvs = faceVertexUvs[ 1 ][ i ];\r\n\t\r\n\t\t\t\t\tif ( vertexUvs !== undefined ) {\r\n\t\r\n\t\t\t\t\t\tthis.uvs2.push( vertexUvs[ 0 ], vertexUvs[ 1 ], vertexUvs[ 2 ] );\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\tconsole.warn( 'THREE.DirectGeometry.fromGeometry(): Undefined vertexUv2 ', i );\r\n\t\r\n\t\t\t\t\t\tthis.uvs2.push( new THREE.Vector2(), new THREE.Vector2(), new THREE.Vector2() );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// morphs\r\n\t\r\n\t\t\t\tfor ( var j = 0; j < morphTargetsLength; j ++ ) {\r\n\t\r\n\t\t\t\t\tvar morphTarget = morphTargets[ j ].vertices;\r\n\t\r\n\t\t\t\t\tmorphTargetsPosition[ j ].push( morphTarget[ face.a ], morphTarget[ face.b ], morphTarget[ face.c ] );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tfor ( var j = 0; j < morphNormalsLength; j ++ ) {\r\n\t\r\n\t\t\t\t\tvar morphNormal = morphNormals[ j ].vertexNormals[ i ];\r\n\t\r\n\t\t\t\t\tmorphTargetsNormal[ j ].push( morphNormal.a, morphNormal.b, morphNormal.c );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// skins\r\n\t\r\n\t\t\t\tif ( hasSkinIndices ) {\r\n\t\r\n\t\t\t\t\tthis.skinIndices.push( skinIndices[ face.a ], skinIndices[ face.b ], skinIndices[ face.c ] );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( hasSkinWeights ) {\r\n\t\r\n\t\t\t\t\tthis.skinWeights.push( skinWeights[ face.a ], skinWeights[ face.b ], skinWeights[ face.c ] );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.computeGroups( geometry );\r\n\t\r\n\t\t\tthis.verticesNeedUpdate = geometry.verticesNeedUpdate;\r\n\t\t\tthis.normalsNeedUpdate = geometry.normalsNeedUpdate;\r\n\t\t\tthis.colorsNeedUpdate = geometry.colorsNeedUpdate;\r\n\t\t\tthis.uvsNeedUpdate = geometry.uvsNeedUpdate;\r\n\t\t\tthis.groupsNeedUpdate = geometry.groupsNeedUpdate;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdispose: function () {\r\n\t\r\n\t\t\tthis.dispatchEvent( { type: 'dispose' } );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.EventDispatcher.prototype.apply( THREE.DirectGeometry.prototype );\r\n\t\r\n\t// File:src/core/BufferGeometry.js\r\n\t\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.BufferGeometry = function () {\r\n\t\r\n\t\tObject.defineProperty( this, 'id', { value: THREE.GeometryIdCount ++ } );\r\n\t\r\n\t\tthis.uuid = THREE.Math.generateUUID();\r\n\t\r\n\t\tthis.name = '';\r\n\t\tthis.type = 'BufferGeometry';\r\n\t\r\n\t\tthis.index = null;\r\n\t\tthis.attributes = {};\r\n\t\r\n\t\tthis.morphAttributes = {};\r\n\t\r\n\t\tthis.groups = [];\r\n\t\r\n\t\tthis.boundingBox = null;\r\n\t\tthis.boundingSphere = null;\r\n\t\r\n\t\tthis.drawRange = { start: 0, count: Infinity };\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.BufferGeometry.prototype = {\r\n\t\r\n\t\tconstructor: THREE.BufferGeometry,\r\n\t\r\n\t\taddIndex: function ( index ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .addIndex() has been renamed to .setIndex().' );\r\n\t\t\tthis.setIndex( index );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetIndex: function () {\r\n\t\r\n\t\t\treturn this.index;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetIndex: function ( index ) {\r\n\t\r\n\t\t\tthis.index = index;\r\n\t\r\n\t\t},\r\n\t\r\n\t\taddAttribute: function ( name, attribute ) {\r\n\t\r\n\t\t\tif ( attribute instanceof THREE.BufferAttribute === false && attribute instanceof THREE.InterleavedBufferAttribute === false ) {\r\n\t\r\n\t\t\t\tconsole.warn( 'THREE.BufferGeometry: .addAttribute() now expects ( name, attribute ).' );\r\n\t\r\n\t\t\t\tthis.addAttribute( name, new THREE.BufferAttribute( arguments[ 1 ], arguments[ 2 ] ) );\r\n\t\r\n\t\t\t\treturn;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( name === 'index' ) {\r\n\t\r\n\t\t\t\tconsole.warn( 'THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute.' );\r\n\t\t\t\tthis.setIndex( attribute );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.attributes[ name ] = attribute;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetAttribute: function ( name ) {\r\n\t\r\n\t\t\treturn this.attributes[ name ];\r\n\t\r\n\t\t},\r\n\t\r\n\t\tremoveAttribute: function ( name ) {\r\n\t\r\n\t\t\tdelete this.attributes[ name ];\r\n\t\r\n\t\t},\r\n\t\r\n\t\tget drawcalls() {\r\n\t\r\n\t\t\tconsole.error( 'THREE.BufferGeometry: .drawcalls has been renamed to .groups.' );\r\n\t\t\treturn this.groups;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tget offsets() {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .offsets has been renamed to .groups.' );\r\n\t\t\treturn this.groups;\r\n\t\r\n\t\t},\r\n\t\r\n\t\taddDrawCall: function ( start, count, indexOffset ) {\r\n\t\r\n\t\t\tif ( indexOffset !== undefined ) {\r\n\t\r\n\t\t\t\tconsole.warn( 'THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset.' );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .addDrawCall() is now .addGroup().' );\r\n\t\t\tthis.addGroup( start, count );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclearDrawCalls: function () {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups().' );\r\n\t\t\tthis.clearGroups();\r\n\t\r\n\t\t},\r\n\t\r\n\t\taddGroup: function ( start, count, materialIndex ) {\r\n\t\r\n\t\t\tthis.groups.push( {\r\n\t\r\n\t\t\t\tstart: start,\r\n\t\t\t\tcount: count,\r\n\t\t\t\tmaterialIndex: materialIndex !== undefined ? materialIndex : 0\r\n\t\r\n\t\t\t} );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclearGroups: function () {\r\n\t\r\n\t\t\tthis.groups = [];\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetDrawRange: function ( start, count ) {\r\n\t\r\n\t\t\tthis.drawRange.start = start;\r\n\t\t\tthis.drawRange.count = count;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tapplyMatrix: function ( matrix ) {\r\n\t\r\n\t\t\tvar position = this.attributes.position;\r\n\t\r\n\t\t\tif ( position !== undefined ) {\r\n\t\r\n\t\t\t\tmatrix.applyToVector3Array( position.array );\r\n\t\t\t\tposition.needsUpdate = true;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar normal = this.attributes.normal;\r\n\t\r\n\t\t\tif ( normal !== undefined ) {\r\n\t\r\n\t\t\t\tvar normalMatrix = new THREE.Matrix3().getNormalMatrix( matrix );\r\n\t\r\n\t\t\t\tnormalMatrix.applyToVector3Array( normal.array );\r\n\t\t\t\tnormal.needsUpdate = true;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( this.boundingBox !== null ) {\r\n\t\r\n\t\t\t\tthis.computeBoundingBox();\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( this.boundingSphere !== null ) {\r\n\t\r\n\t\t\t\tthis.computeBoundingSphere();\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\trotateX: function () {\r\n\t\r\n\t\t\t// rotate geometry around world x-axis\r\n\t\r\n\t\t\tvar m1;\r\n\t\r\n\t\t\treturn function rotateX( angle ) {\r\n\t\r\n\t\t\t\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\r\n\t\r\n\t\t\t\tm1.makeRotationX( angle );\r\n\t\r\n\t\t\t\tthis.applyMatrix( m1 );\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\trotateY: function () {\r\n\t\r\n\t\t\t// rotate geometry around world y-axis\r\n\t\r\n\t\t\tvar m1;\r\n\t\r\n\t\t\treturn function rotateY( angle ) {\r\n\t\r\n\t\t\t\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\r\n\t\r\n\t\t\t\tm1.makeRotationY( angle );\r\n\t\r\n\t\t\t\tthis.applyMatrix( m1 );\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\trotateZ: function () {\r\n\t\r\n\t\t\t// rotate geometry around world z-axis\r\n\t\r\n\t\t\tvar m1;\r\n\t\r\n\t\t\treturn function rotateZ( angle ) {\r\n\t\r\n\t\t\t\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\r\n\t\r\n\t\t\t\tm1.makeRotationZ( angle );\r\n\t\r\n\t\t\t\tthis.applyMatrix( m1 );\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\ttranslate: function () {\r\n\t\r\n\t\t\t// translate geometry\r\n\t\r\n\t\t\tvar m1;\r\n\t\r\n\t\t\treturn function translate( x, y, z ) {\r\n\t\r\n\t\t\t\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\r\n\t\r\n\t\t\t\tm1.makeTranslation( x, y, z );\r\n\t\r\n\t\t\t\tthis.applyMatrix( m1 );\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tscale: function () {\r\n\t\r\n\t\t\t// scale geometry\r\n\t\r\n\t\t\tvar m1;\r\n\t\r\n\t\t\treturn function scale( x, y, z ) {\r\n\t\r\n\t\t\t\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\r\n\t\r\n\t\t\t\tm1.makeScale( x, y, z );\r\n\t\r\n\t\t\t\tthis.applyMatrix( m1 );\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tlookAt: function () {\r\n\t\r\n\t\t\tvar obj;\r\n\t\r\n\t\t\treturn function lookAt( vector ) {\r\n\t\r\n\t\t\t\tif ( obj === undefined ) obj = new THREE.Object3D();\r\n\t\r\n\t\t\t\tobj.lookAt( vector );\r\n\t\r\n\t\t\t\tobj.updateMatrix();\r\n\t\r\n\t\t\t\tthis.applyMatrix( obj.matrix );\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tcenter: function () {\r\n\t\r\n\t\t\tthis.computeBoundingBox();\r\n\t\r\n\t\t\tvar offset = this.boundingBox.center().negate();\r\n\t\r\n\t\t\tthis.translate( offset.x, offset.y, offset.z );\r\n\t\r\n\t\t\treturn offset;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetFromObject: function ( object ) {\r\n\t\r\n\t\t\t// console.log( 'THREE.BufferGeometry.setFromObject(). Converting', object, this );\r\n\t\r\n\t\t\tvar geometry = object.geometry;\r\n\t\r\n\t\t\tif ( object instanceof THREE.Points || object instanceof THREE.Line ) {\r\n\t\r\n\t\t\t\tvar positions = new THREE.Float32Attribute( geometry.vertices.length * 3, 3 );\r\n\t\t\t\tvar colors = new THREE.Float32Attribute( geometry.colors.length * 3, 3 );\r\n\t\r\n\t\t\t\tthis.addAttribute( 'position', positions.copyVector3sArray( geometry.vertices ) );\r\n\t\t\t\tthis.addAttribute( 'color', colors.copyColorsArray( geometry.colors ) );\r\n\t\r\n\t\t\t\tif ( geometry.lineDistances && geometry.lineDistances.length === geometry.vertices.length ) {\r\n\t\r\n\t\t\t\t\tvar lineDistances = new THREE.Float32Attribute( geometry.lineDistances.length, 1 );\r\n\t\r\n\t\t\t\t\tthis.addAttribute( 'lineDistance',  lineDistances.copyArray( geometry.lineDistances ) );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( geometry.boundingSphere !== null ) {\r\n\t\r\n\t\t\t\t\tthis.boundingSphere = geometry.boundingSphere.clone();\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( geometry.boundingBox !== null ) {\r\n\t\r\n\t\t\t\t\tthis.boundingBox = geometry.boundingBox.clone();\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t} else if ( object instanceof THREE.Mesh ) {\r\n\t\r\n\t\t\t\tif ( geometry instanceof THREE.Geometry ) {\r\n\t\r\n\t\t\t\t\tthis.fromGeometry( geometry );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tupdateFromObject: function ( object ) {\r\n\t\r\n\t\t\tvar geometry = object.geometry;\r\n\t\r\n\t\t\tif ( object instanceof THREE.Mesh ) {\r\n\t\r\n\t\t\t\tvar direct = geometry.__directGeometry;\r\n\t\r\n\t\t\t\tif ( direct === undefined ) {\r\n\t\r\n\t\t\t\t\treturn this.fromGeometry( geometry );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tdirect.verticesNeedUpdate = geometry.verticesNeedUpdate;\r\n\t\t\t\tdirect.normalsNeedUpdate = geometry.normalsNeedUpdate;\r\n\t\t\t\tdirect.colorsNeedUpdate = geometry.colorsNeedUpdate;\r\n\t\t\t\tdirect.uvsNeedUpdate = geometry.uvsNeedUpdate;\r\n\t\t\t\tdirect.groupsNeedUpdate = geometry.groupsNeedUpdate;\r\n\t\r\n\t\t\t\tgeometry.verticesNeedUpdate = false;\r\n\t\t\t\tgeometry.normalsNeedUpdate = false;\r\n\t\t\t\tgeometry.colorsNeedUpdate = false;\r\n\t\t\t\tgeometry.uvsNeedUpdate = false;\r\n\t\t\t\tgeometry.groupsNeedUpdate = false;\r\n\t\r\n\t\t\t\tgeometry = direct;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( geometry.verticesNeedUpdate === true ) {\r\n\t\r\n\t\t\t\tvar attribute = this.attributes.position;\r\n\t\r\n\t\t\t\tif ( attribute !== undefined ) {\r\n\t\r\n\t\t\t\t\tattribute.copyVector3sArray( geometry.vertices );\r\n\t\t\t\t\tattribute.needsUpdate = true;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tgeometry.verticesNeedUpdate = false;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( geometry.normalsNeedUpdate === true ) {\r\n\t\r\n\t\t\t\tvar attribute = this.attributes.normal;\r\n\t\r\n\t\t\t\tif ( attribute !== undefined ) {\r\n\t\r\n\t\t\t\t\tattribute.copyVector3sArray( geometry.normals );\r\n\t\t\t\t\tattribute.needsUpdate = true;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tgeometry.normalsNeedUpdate = false;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( geometry.colorsNeedUpdate === true ) {\r\n\t\r\n\t\t\t\tvar attribute = this.attributes.color;\r\n\t\r\n\t\t\t\tif ( attribute !== undefined ) {\r\n\t\r\n\t\t\t\t\tattribute.copyColorsArray( geometry.colors );\r\n\t\t\t\t\tattribute.needsUpdate = true;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tgeometry.colorsNeedUpdate = false;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( geometry.lineDistancesNeedUpdate ) {\r\n\t\r\n\t\t\t\tvar attribute = this.attributes.lineDistance;\r\n\t\r\n\t\t\t\tif ( attribute !== undefined ) {\r\n\t\r\n\t\t\t\t\tattribute.copyArray( geometry.lineDistances );\r\n\t\t\t\t\tattribute.needsUpdate = true;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tgeometry.lineDistancesNeedUpdate = false;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( geometry.groupsNeedUpdate ) {\r\n\t\r\n\t\t\t\tgeometry.computeGroups( object.geometry );\r\n\t\t\t\tthis.groups = geometry.groups;\r\n\t\r\n\t\t\t\tgeometry.groupsNeedUpdate = false;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tfromGeometry: function ( geometry ) {\r\n\t\r\n\t\t\tgeometry.__directGeometry = new THREE.DirectGeometry().fromGeometry( geometry );\r\n\t\r\n\t\t\treturn this.fromDirectGeometry( geometry.__directGeometry );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tfromDirectGeometry: function ( geometry ) {\r\n\t\r\n\t\t\tvar positions = new Float32Array( geometry.vertices.length * 3 );\r\n\t\t\tthis.addAttribute( 'position', new THREE.BufferAttribute( positions, 3 ).copyVector3sArray( geometry.vertices ) );\r\n\t\r\n\t\t\tif ( geometry.normals.length > 0 ) {\r\n\t\r\n\t\t\t\tvar normals = new Float32Array( geometry.normals.length * 3 );\r\n\t\t\t\tthis.addAttribute( 'normal', new THREE.BufferAttribute( normals, 3 ).copyVector3sArray( geometry.normals ) );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( geometry.colors.length > 0 ) {\r\n\t\r\n\t\t\t\tvar colors = new Float32Array( geometry.colors.length * 3 );\r\n\t\t\t\tthis.addAttribute( 'color', new THREE.BufferAttribute( colors, 3 ).copyColorsArray( geometry.colors ) );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( geometry.uvs.length > 0 ) {\r\n\t\r\n\t\t\t\tvar uvs = new Float32Array( geometry.uvs.length * 2 );\r\n\t\t\t\tthis.addAttribute( 'uv', new THREE.BufferAttribute( uvs, 2 ).copyVector2sArray( geometry.uvs ) );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( geometry.uvs2.length > 0 ) {\r\n\t\r\n\t\t\t\tvar uvs2 = new Float32Array( geometry.uvs2.length * 2 );\r\n\t\t\t\tthis.addAttribute( 'uv2', new THREE.BufferAttribute( uvs2, 2 ).copyVector2sArray( geometry.uvs2 ) );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( geometry.indices.length > 0 ) {\r\n\t\r\n\t\t\t\tvar TypeArray = geometry.vertices.length > 65535 ? Uint32Array : Uint16Array;\r\n\t\t\t\tvar indices = new TypeArray( geometry.indices.length * 3 );\r\n\t\t\t\tthis.setIndex( new THREE.BufferAttribute( indices, 1 ).copyIndicesArray( geometry.indices ) );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// groups\r\n\t\r\n\t\t\tthis.groups = geometry.groups;\r\n\t\r\n\t\t\t// morphs\r\n\t\r\n\t\t\tfor ( var name in geometry.morphTargets ) {\r\n\t\r\n\t\t\t\tvar array = [];\r\n\t\t\t\tvar morphTargets = geometry.morphTargets[ name ];\r\n\t\r\n\t\t\t\tfor ( var i = 0, l = morphTargets.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\t\tvar morphTarget = morphTargets[ i ];\r\n\t\r\n\t\t\t\t\tvar attribute = new THREE.Float32Attribute( morphTarget.length * 3, 3 );\r\n\t\r\n\t\t\t\t\tarray.push( attribute.copyVector3sArray( morphTarget ) );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tthis.morphAttributes[ name ] = array;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// skinning\r\n\t\r\n\t\t\tif ( geometry.skinIndices.length > 0 ) {\r\n\t\r\n\t\t\t\tvar skinIndices = new THREE.Float32Attribute( geometry.skinIndices.length * 4, 4 );\r\n\t\t\t\tthis.addAttribute( 'skinIndex', skinIndices.copyVector4sArray( geometry.skinIndices ) );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( geometry.skinWeights.length > 0 ) {\r\n\t\r\n\t\t\t\tvar skinWeights = new THREE.Float32Attribute( geometry.skinWeights.length * 4, 4 );\r\n\t\t\t\tthis.addAttribute( 'skinWeight', skinWeights.copyVector4sArray( geometry.skinWeights ) );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t//\r\n\t\r\n\t\t\tif ( geometry.boundingSphere !== null ) {\r\n\t\r\n\t\t\t\tthis.boundingSphere = geometry.boundingSphere.clone();\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( geometry.boundingBox !== null ) {\r\n\t\r\n\t\t\t\tthis.boundingBox = geometry.boundingBox.clone();\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcomputeBoundingBox: function () {\r\n\t\r\n\t\t\tvar vector = new THREE.Vector3();\r\n\t\r\n\t\t\treturn function () {\r\n\t\r\n\t\t\t\tif ( this.boundingBox === null ) {\r\n\t\r\n\t\t\t\t\tthis.boundingBox = new THREE.Box3();\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar positions = this.attributes.position.array;\r\n\t\r\n\t\t\t\tif ( positions ) {\r\n\t\r\n\t\t\t\t\tvar bb = this.boundingBox;\r\n\t\t\t\t\tbb.makeEmpty();\r\n\t\r\n\t\t\t\t\tfor ( var i = 0, il = positions.length; i < il; i += 3 ) {\r\n\t\r\n\t\t\t\t\t\tvector.fromArray( positions, i );\r\n\t\t\t\t\t\tbb.expandByPoint( vector );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( positions === undefined || positions.length === 0 ) {\r\n\t\r\n\t\t\t\t\tthis.boundingBox.min.set( 0, 0, 0 );\r\n\t\t\t\t\tthis.boundingBox.max.set( 0, 0, 0 );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( isNaN( this.boundingBox.min.x ) || isNaN( this.boundingBox.min.y ) || isNaN( this.boundingBox.min.z ) ) {\r\n\t\r\n\t\t\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingBox: Computed min/max have NaN values. The \"position\" attribute is likely to have NaN values.', this );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tcomputeBoundingSphere: function () {\r\n\t\r\n\t\t\tvar box = new THREE.Box3();\r\n\t\t\tvar vector = new THREE.Vector3();\r\n\t\r\n\t\t\treturn function () {\r\n\t\r\n\t\t\t\tif ( this.boundingSphere === null ) {\r\n\t\r\n\t\t\t\t\tthis.boundingSphere = new THREE.Sphere();\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar positions = this.attributes.position.array;\r\n\t\r\n\t\t\t\tif ( positions ) {\r\n\t\r\n\t\t\t\t\tbox.makeEmpty();\r\n\t\r\n\t\t\t\t\tvar center = this.boundingSphere.center;\r\n\t\r\n\t\t\t\t\tfor ( var i = 0, il = positions.length; i < il; i += 3 ) {\r\n\t\r\n\t\t\t\t\t\tvector.fromArray( positions, i );\r\n\t\t\t\t\t\tbox.expandByPoint( vector );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tbox.center( center );\r\n\t\r\n\t\t\t\t\t// hoping to find a boundingSphere with a radius smaller than the\r\n\t\t\t\t\t// boundingSphere of the boundingBox: sqrt(3) smaller in the best case\r\n\t\r\n\t\t\t\t\tvar maxRadiusSq = 0;\r\n\t\r\n\t\t\t\t\tfor ( var i = 0, il = positions.length; i < il; i += 3 ) {\r\n\t\r\n\t\t\t\t\t\tvector.fromArray( positions, i );\r\n\t\t\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( vector ) );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tthis.boundingSphere.radius = Math.sqrt( maxRadiusSq );\r\n\t\r\n\t\t\t\t\tif ( isNaN( this.boundingSphere.radius ) ) {\r\n\t\r\n\t\t\t\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The \"position\" attribute is likely to have NaN values.', this );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tcomputeFaceNormals: function () {\r\n\t\r\n\t\t\t// backwards compatibility\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcomputeVertexNormals: function () {\r\n\t\r\n\t\t\tvar index = this.index;\r\n\t\t\tvar attributes = this.attributes;\r\n\t\t\tvar groups = this.groups;\r\n\t\r\n\t\t\tif ( attributes.position ) {\r\n\t\r\n\t\t\t\tvar positions = attributes.position.array;\r\n\t\r\n\t\t\t\tif ( attributes.normal === undefined ) {\r\n\t\r\n\t\t\t\t\tthis.addAttribute( 'normal', new THREE.BufferAttribute( new Float32Array( positions.length ), 3 ) );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t// reset existing normals to zero\r\n\t\r\n\t\t\t\t\tvar normals = attributes.normal.array;\r\n\t\r\n\t\t\t\t\tfor ( var i = 0, il = normals.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\t\t\tnormals[ i ] = 0;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar normals = attributes.normal.array;\r\n\t\r\n\t\t\t\tvar vA, vB, vC,\r\n\t\r\n\t\t\t\tpA = new THREE.Vector3(),\r\n\t\t\t\tpB = new THREE.Vector3(),\r\n\t\t\t\tpC = new THREE.Vector3(),\r\n\t\r\n\t\t\t\tcb = new THREE.Vector3(),\r\n\t\t\t\tab = new THREE.Vector3();\r\n\t\r\n\t\t\t\t// indexed elements\r\n\t\r\n\t\t\t\tif ( index ) {\r\n\t\r\n\t\t\t\t\tvar indices = index.array;\r\n\t\r\n\t\t\t\t\tif ( groups.length === 0 ) {\r\n\t\r\n\t\t\t\t\t\tthis.addGroup( 0, indices.length );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tfor ( var j = 0, jl = groups.length; j < jl; ++ j ) {\r\n\t\r\n\t\t\t\t\t\tvar group = groups[ j ];\r\n\t\r\n\t\t\t\t\t\tvar start = group.start;\r\n\t\t\t\t\t\tvar count = group.count;\r\n\t\r\n\t\t\t\t\t\tfor ( var i = start, il = start + count; i < il; i += 3 ) {\r\n\t\r\n\t\t\t\t\t\t\tvA = indices[ i + 0 ] * 3;\r\n\t\t\t\t\t\t\tvB = indices[ i + 1 ] * 3;\r\n\t\t\t\t\t\t\tvC = indices[ i + 2 ] * 3;\r\n\t\r\n\t\t\t\t\t\t\tpA.fromArray( positions, vA );\r\n\t\t\t\t\t\t\tpB.fromArray( positions, vB );\r\n\t\t\t\t\t\t\tpC.fromArray( positions, vC );\r\n\t\r\n\t\t\t\t\t\t\tcb.subVectors( pC, pB );\r\n\t\t\t\t\t\t\tab.subVectors( pA, pB );\r\n\t\t\t\t\t\t\tcb.cross( ab );\r\n\t\r\n\t\t\t\t\t\t\tnormals[ vA ] += cb.x;\r\n\t\t\t\t\t\t\tnormals[ vA + 1 ] += cb.y;\r\n\t\t\t\t\t\t\tnormals[ vA + 2 ] += cb.z;\r\n\t\r\n\t\t\t\t\t\t\tnormals[ vB ] += cb.x;\r\n\t\t\t\t\t\t\tnormals[ vB + 1 ] += cb.y;\r\n\t\t\t\t\t\t\tnormals[ vB + 2 ] += cb.z;\r\n\t\r\n\t\t\t\t\t\t\tnormals[ vC ] += cb.x;\r\n\t\t\t\t\t\t\tnormals[ vC + 1 ] += cb.y;\r\n\t\t\t\t\t\t\tnormals[ vC + 2 ] += cb.z;\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t// non-indexed elements (unconnected triangle soup)\r\n\t\r\n\t\t\t\t\tfor ( var i = 0, il = positions.length; i < il; i += 9 ) {\r\n\t\r\n\t\t\t\t\t\tpA.fromArray( positions, i );\r\n\t\t\t\t\t\tpB.fromArray( positions, i + 3 );\r\n\t\t\t\t\t\tpC.fromArray( positions, i + 6 );\r\n\t\r\n\t\t\t\t\t\tcb.subVectors( pC, pB );\r\n\t\t\t\t\t\tab.subVectors( pA, pB );\r\n\t\t\t\t\t\tcb.cross( ab );\r\n\t\r\n\t\t\t\t\t\tnormals[ i ] = cb.x;\r\n\t\t\t\t\t\tnormals[ i + 1 ] = cb.y;\r\n\t\t\t\t\t\tnormals[ i + 2 ] = cb.z;\r\n\t\r\n\t\t\t\t\t\tnormals[ i + 3 ] = cb.x;\r\n\t\t\t\t\t\tnormals[ i + 4 ] = cb.y;\r\n\t\t\t\t\t\tnormals[ i + 5 ] = cb.z;\r\n\t\r\n\t\t\t\t\t\tnormals[ i + 6 ] = cb.x;\r\n\t\t\t\t\t\tnormals[ i + 7 ] = cb.y;\r\n\t\t\t\t\t\tnormals[ i + 8 ] = cb.z;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tthis.normalizeNormals();\r\n\t\r\n\t\t\t\tattributes.normal.needsUpdate = true;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcomputeTangents: function () {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .computeTangents() has been removed.' );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcomputeOffsets: function ( size ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .computeOffsets() has been removed.')\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmerge: function ( geometry, offset ) {\r\n\t\r\n\t\t\tif ( geometry instanceof THREE.BufferGeometry === false ) {\r\n\t\r\n\t\t\t\tconsole.error( 'THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.', geometry );\r\n\t\t\t\treturn;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\t\r\n\t\t\tvar attributes = this.attributes;\r\n\t\r\n\t\t\tfor ( var key in attributes ) {\r\n\t\r\n\t\t\t\tif ( geometry.attributes[ key ] === undefined ) continue;\r\n\t\r\n\t\t\t\tvar attribute1 = attributes[ key ];\r\n\t\t\t\tvar attributeArray1 = attribute1.array;\r\n\t\r\n\t\t\t\tvar attribute2 = geometry.attributes[ key ];\r\n\t\t\t\tvar attributeArray2 = attribute2.array;\r\n\t\r\n\t\t\t\tvar attributeSize = attribute2.itemSize;\r\n\t\r\n\t\t\t\tfor ( var i = 0, j = attributeSize * offset; i < attributeArray2.length; i ++, j ++ ) {\r\n\t\r\n\t\t\t\t\tattributeArray1[ j ] = attributeArray2[ i ];\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tnormalizeNormals: function () {\r\n\t\r\n\t\t\tvar normals = this.attributes.normal.array;\r\n\t\r\n\t\t\tvar x, y, z, n;\r\n\t\r\n\t\t\tfor ( var i = 0, il = normals.length; i < il; i += 3 ) {\r\n\t\r\n\t\t\t\tx = normals[ i ];\r\n\t\t\t\ty = normals[ i + 1 ];\r\n\t\t\t\tz = normals[ i + 2 ];\r\n\t\r\n\t\t\t\tn = 1.0 / Math.sqrt( x * x + y * y + z * z );\r\n\t\r\n\t\t\t\tnormals[ i ] *= n;\r\n\t\t\t\tnormals[ i + 1 ] *= n;\r\n\t\t\t\tnormals[ i + 2 ] *= n;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\ttoJSON: function () {\r\n\t\r\n\t\t\tvar data = {\r\n\t\t\t\tmetadata: {\r\n\t\t\t\t\tversion: 4.4,\r\n\t\t\t\t\ttype: 'BufferGeometry',\r\n\t\t\t\t\tgenerator: 'BufferGeometry.toJSON'\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\r\n\t\t\t// standard BufferGeometry serialization\r\n\t\r\n\t\t\tdata.uuid = this.uuid;\r\n\t\t\tdata.type = this.type;\r\n\t\t\tif ( this.name !== '' ) data.name = this.name;\r\n\t\r\n\t\t\tif ( this.parameters !== undefined ) {\r\n\t\r\n\t\t\t\tvar parameters = this.parameters;\r\n\t\r\n\t\t\t\tfor ( var key in parameters ) {\r\n\t\r\n\t\t\t\t\tif ( parameters[ key ] !== undefined ) data[ key ] = parameters[ key ];\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn data;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tdata.data = { attributes: {} };\r\n\t\r\n\t\t\tvar index = this.index;\r\n\t\r\n\t\t\tif ( index !== null ) {\r\n\t\r\n\t\t\t\tvar array = Array.prototype.slice.call( index.array );\r\n\t\r\n\t\t\t\tdata.data.index = {\r\n\t\t\t\t\ttype: index.array.constructor.name,\r\n\t\t\t\t\tarray: array\r\n\t\t\t\t};\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar attributes = this.attributes;\r\n\t\r\n\t\t\tfor ( var key in attributes ) {\r\n\t\r\n\t\t\t\tvar attribute = attributes[ key ];\r\n\t\r\n\t\t\t\tvar array = Array.prototype.slice.call( attribute.array );\r\n\t\r\n\t\t\t\tdata.data.attributes[ key ] = {\r\n\t\t\t\t\titemSize: attribute.itemSize,\r\n\t\t\t\t\ttype: attribute.array.constructor.name,\r\n\t\t\t\t\tarray: array\r\n\t\t\t\t};\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar groups = this.groups;\r\n\t\r\n\t\t\tif ( groups.length > 0 ) {\r\n\t\r\n\t\t\t\tdata.data.groups = JSON.parse( JSON.stringify( groups ) );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar boundingSphere = this.boundingSphere;\r\n\t\r\n\t\t\tif ( boundingSphere !== null ) {\r\n\t\r\n\t\t\t\tdata.data.boundingSphere = {\r\n\t\t\t\t\tcenter: boundingSphere.center.toArray(),\r\n\t\t\t\t\tradius: boundingSphere.radius\r\n\t\t\t\t};\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn data;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclone: function () {\r\n\t\r\n\t\t\treturn new this.constructor().copy( this );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopy: function ( source ) {\r\n\t\r\n\t\t\tvar index = source.index;\r\n\t\r\n\t\t\tif ( index !== null ) {\r\n\t\r\n\t\t\t\tthis.setIndex( index.clone() );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar attributes = source.attributes;\r\n\t\r\n\t\t\tfor ( var name in attributes ) {\r\n\t\r\n\t\t\t\tvar attribute = attributes[ name ];\r\n\t\t\t\tthis.addAttribute( name, attribute.clone() );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar groups = source.groups;\r\n\t\r\n\t\t\tfor ( var i = 0, l = groups.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\tvar group = groups[ i ];\r\n\t\t\t\tthis.addGroup( group.start, group.count );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdispose: function () {\r\n\t\r\n\t\t\tthis.dispatchEvent( { type: 'dispose' } );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.EventDispatcher.prototype.apply( THREE.BufferGeometry.prototype );\r\n\t\r\n\tTHREE.BufferGeometry.MaxIndex = 65535;\r\n\t\r\n\t// File:src/core/InstancedBufferGeometry.js\r\n\t\r\n\t/**\r\n\t * @author benaadams / https://twitter.com/ben_a_adams\r\n\t */\r\n\t\r\n\tTHREE.InstancedBufferGeometry = function () {\r\n\t\r\n\t\tTHREE.BufferGeometry.call( this );\r\n\t\r\n\t\tthis.type = 'InstancedBufferGeometry';\r\n\t\tthis.maxInstancedCount = undefined;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.InstancedBufferGeometry.prototype = Object.create( THREE.BufferGeometry.prototype );\r\n\tTHREE.InstancedBufferGeometry.prototype.constructor = THREE.InstancedBufferGeometry;\r\n\t\r\n\tTHREE.InstancedBufferGeometry.prototype.addGroup = function ( start, count, instances ) {\r\n\t\r\n\t\tthis.groups.push( {\r\n\t\r\n\t\t\tstart: start,\r\n\t\t\tcount: count,\r\n\t\t\tinstances: instances\r\n\t\r\n\t\t} );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.InstancedBufferGeometry.prototype.copy = function ( source ) {\r\n\t\r\n\t\tvar index = source.index;\r\n\t\r\n\t\tif ( index !== null ) {\r\n\t\r\n\t\t\tthis.setIndex( index.clone() );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tvar attributes = source.attributes;\r\n\t\r\n\t\tfor ( var name in attributes ) {\r\n\t\r\n\t\t\tvar attribute = attributes[ name ];\r\n\t\t\tthis.addAttribute( name, attribute.clone() );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tvar groups = source.groups;\r\n\t\r\n\t\tfor ( var i = 0, l = groups.length; i < l; i ++ ) {\r\n\t\r\n\t\t\tvar group = groups[ i ];\r\n\t\t\tthis.addGroup( group.start, group.count, group.instances );\r\n\t\r\n\t\t}\r\n\t\r\n\t\treturn this;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.EventDispatcher.prototype.apply( THREE.InstancedBufferGeometry.prototype );\r\n\t\r\n\t// File:src/cameras/Camera.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author mikael emtinger / http://gomo.se/\r\n\t * @author WestLangley / http://github.com/WestLangley\r\n\t*/\r\n\t\r\n\tTHREE.Camera = function () {\r\n\t\r\n\t\tTHREE.Object3D.call( this );\r\n\t\r\n\t\tthis.type = 'Camera';\r\n\t\r\n\t\tthis.matrixWorldInverse = new THREE.Matrix4();\r\n\t\tthis.projectionMatrix = new THREE.Matrix4();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Camera.prototype = Object.create( THREE.Object3D.prototype );\r\n\tTHREE.Camera.prototype.constructor = THREE.Camera;\r\n\t\r\n\tTHREE.Camera.prototype.getWorldDirection = function () {\r\n\t\r\n\t\tvar quaternion = new THREE.Quaternion();\r\n\t\r\n\t\treturn function ( optionalTarget ) {\r\n\t\r\n\t\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\r\n\t\t\tthis.getWorldQuaternion( quaternion );\r\n\t\r\n\t\t\treturn result.set( 0, 0, - 1 ).applyQuaternion( quaternion );\r\n\t\r\n\t\t};\r\n\t\r\n\t}();\r\n\t\r\n\tTHREE.Camera.prototype.lookAt = function () {\r\n\t\r\n\t\t// This routine does not support cameras with rotated and/or translated parent(s)\r\n\t\r\n\t\tvar m1 = new THREE.Matrix4();\r\n\t\r\n\t\treturn function ( vector ) {\r\n\t\r\n\t\t\tm1.lookAt( this.position, vector, this.up );\r\n\t\r\n\t\t\tthis.quaternion.setFromRotationMatrix( m1 );\r\n\t\r\n\t\t};\r\n\t\r\n\t}();\r\n\t\r\n\tTHREE.Camera.prototype.clone = function () {\r\n\t\r\n\t\treturn new this.constructor().copy( this );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Camera.prototype.copy = function ( source ) {\r\n\t\r\n\t\tTHREE.Object3D.prototype.copy.call( this, source );\r\n\t\r\n\t\tthis.matrixWorldInverse.copy( source.matrixWorldInverse );\r\n\t\tthis.projectionMatrix.copy( source.projectionMatrix );\r\n\t\r\n\t\treturn this;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/cameras/CubeCamera.js\r\n\t\r\n\t/**\r\n\t * Camera for rendering cube maps\r\n\t *\t- renders scene into axis-aligned cube\r\n\t *\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\t\r\n\tTHREE.CubeCamera = function ( near, far, cubeResolution ) {\r\n\t\r\n\t\tTHREE.Object3D.call( this );\r\n\t\r\n\t\tthis.type = 'CubeCamera';\r\n\t\r\n\t\tvar fov = 90, aspect = 1;\r\n\t\r\n\t\tvar cameraPX = new THREE.PerspectiveCamera( fov, aspect, near, far );\r\n\t\tcameraPX.up.set( 0, - 1, 0 );\r\n\t\tcameraPX.lookAt( new THREE.Vector3( 1, 0, 0 ) );\r\n\t\tthis.add( cameraPX );\r\n\t\r\n\t\tvar cameraNX = new THREE.PerspectiveCamera( fov, aspect, near, far );\r\n\t\tcameraNX.up.set( 0, - 1, 0 );\r\n\t\tcameraNX.lookAt( new THREE.Vector3( - 1, 0, 0 ) );\r\n\t\tthis.add( cameraNX );\r\n\t\r\n\t\tvar cameraPY = new THREE.PerspectiveCamera( fov, aspect, near, far );\r\n\t\tcameraPY.up.set( 0, 0, 1 );\r\n\t\tcameraPY.lookAt( new THREE.Vector3( 0, 1, 0 ) );\r\n\t\tthis.add( cameraPY );\r\n\t\r\n\t\tvar cameraNY = new THREE.PerspectiveCamera( fov, aspect, near, far );\r\n\t\tcameraNY.up.set( 0, 0, - 1 );\r\n\t\tcameraNY.lookAt( new THREE.Vector3( 0, - 1, 0 ) );\r\n\t\tthis.add( cameraNY );\r\n\t\r\n\t\tvar cameraPZ = new THREE.PerspectiveCamera( fov, aspect, near, far );\r\n\t\tcameraPZ.up.set( 0, - 1, 0 );\r\n\t\tcameraPZ.lookAt( new THREE.Vector3( 0, 0, 1 ) );\r\n\t\tthis.add( cameraPZ );\r\n\t\r\n\t\tvar cameraNZ = new THREE.PerspectiveCamera( fov, aspect, near, far );\r\n\t\tcameraNZ.up.set( 0, - 1, 0 );\r\n\t\tcameraNZ.lookAt( new THREE.Vector3( 0, 0, - 1 ) );\r\n\t\tthis.add( cameraNZ );\r\n\t\r\n\t\tthis.renderTarget = new THREE.WebGLRenderTargetCube( cubeResolution, cubeResolution, { format: THREE.RGBFormat, magFilter: THREE.LinearFilter, minFilter: THREE.LinearFilter } );\r\n\t\r\n\t\tthis.updateCubeMap = function ( renderer, scene ) {\r\n\t\r\n\t\t\tif ( this.parent === null ) this.updateMatrixWorld();\r\n\t\r\n\t\t\tvar renderTarget = this.renderTarget;\r\n\t\t\tvar generateMipmaps = renderTarget.generateMipmaps;\r\n\t\r\n\t\t\trenderTarget.generateMipmaps = false;\r\n\t\r\n\t\t\trenderTarget.activeCubeFace = 0;\r\n\t\t\trenderer.render( scene, cameraPX, renderTarget );\r\n\t\r\n\t\t\trenderTarget.activeCubeFace = 1;\r\n\t\t\trenderer.render( scene, cameraNX, renderTarget );\r\n\t\r\n\t\t\trenderTarget.activeCubeFace = 2;\r\n\t\t\trenderer.render( scene, cameraPY, renderTarget );\r\n\t\r\n\t\t\trenderTarget.activeCubeFace = 3;\r\n\t\t\trenderer.render( scene, cameraNY, renderTarget );\r\n\t\r\n\t\t\trenderTarget.activeCubeFace = 4;\r\n\t\t\trenderer.render( scene, cameraPZ, renderTarget );\r\n\t\r\n\t\t\trenderTarget.generateMipmaps = generateMipmaps;\r\n\t\r\n\t\t\trenderTarget.activeCubeFace = 5;\r\n\t\t\trenderer.render( scene, cameraNZ, renderTarget );\r\n\t\r\n\t\t\trenderer.setRenderTarget( null );\r\n\t\r\n\t\t};\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.CubeCamera.prototype = Object.create( THREE.Object3D.prototype );\r\n\tTHREE.CubeCamera.prototype.constructor = THREE.CubeCamera;\r\n\t\r\n\t// File:src/cameras/OrthographicCamera.js\r\n\t\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\t\r\n\tTHREE.OrthographicCamera = function ( left, right, top, bottom, near, far ) {\r\n\t\r\n\t\tTHREE.Camera.call( this );\r\n\t\r\n\t\tthis.type = 'OrthographicCamera';\r\n\t\r\n\t\tthis.zoom = 1;\r\n\t\r\n\t\tthis.left = left;\r\n\t\tthis.right = right;\r\n\t\tthis.top = top;\r\n\t\tthis.bottom = bottom;\r\n\t\r\n\t\tthis.near = ( near !== undefined ) ? near : 0.1;\r\n\t\tthis.far = ( far !== undefined ) ? far : 2000;\r\n\t\r\n\t\tthis.updateProjectionMatrix();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.OrthographicCamera.prototype = Object.create( THREE.Camera.prototype );\r\n\tTHREE.OrthographicCamera.prototype.constructor = THREE.OrthographicCamera;\r\n\t\r\n\tTHREE.OrthographicCamera.prototype.updateProjectionMatrix = function () {\r\n\t\r\n\t\tvar dx = ( this.right - this.left ) / ( 2 * this.zoom );\r\n\t\tvar dy = ( this.top - this.bottom ) / ( 2 * this.zoom );\r\n\t\tvar cx = ( this.right + this.left ) / 2;\r\n\t\tvar cy = ( this.top + this.bottom ) / 2;\r\n\t\r\n\t\tthis.projectionMatrix.makeOrthographic( cx - dx, cx + dx, cy + dy, cy - dy, this.near, this.far );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.OrthographicCamera.prototype.copy = function ( source ) {\r\n\t\t\r\n\t\tTHREE.Camera.prototype.copy.call( this, source );\r\n\t\t\r\n\t\tthis.left = source.left;\r\n\t\tthis.right = source.right;\r\n\t\tthis.top = source.top;\r\n\t\tthis.bottom = source.bottom;\r\n\t\tthis.near = source.near;\r\n\t\tthis.far = source.far;\r\n\t\t\r\n\t\tthis.zoom = source.zoom;\r\n\t\t\r\n\t\treturn this;\r\n\t\t\t\r\n\t};\r\n\t\r\n\tTHREE.OrthographicCamera.prototype.toJSON = function ( meta ) {\r\n\t\r\n\t\tvar data = THREE.Object3D.prototype.toJSON.call( this, meta );\r\n\t\r\n\t\tdata.object.zoom = this.zoom;\r\n\t\tdata.object.left = this.left;\r\n\t\tdata.object.right = this.right;\r\n\t\tdata.object.top = this.top;\r\n\t\tdata.object.bottom = this.bottom;\r\n\t\tdata.object.near = this.near;\r\n\t\tdata.object.far = this.far;\r\n\t\r\n\t\treturn data;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/cameras/PerspectiveCamera.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author greggman / http://games.greggman.com/\r\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\r\n\t */\r\n\t\r\n\tTHREE.PerspectiveCamera = function ( fov, aspect, near, far ) {\r\n\t\r\n\t\tTHREE.Camera.call( this );\r\n\t\r\n\t\tthis.type = 'PerspectiveCamera';\r\n\t\r\n\t\tthis.zoom = 1;\r\n\t\r\n\t\tthis.fov = fov !== undefined ? fov : 50;\r\n\t\tthis.aspect = aspect !== undefined ? aspect : 1;\r\n\t\tthis.near = near !== undefined ? near : 0.1;\r\n\t\tthis.far = far !== undefined ? far : 2000;\r\n\t\r\n\t\tthis.updateProjectionMatrix();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.PerspectiveCamera.prototype = Object.create( THREE.Camera.prototype );\r\n\tTHREE.PerspectiveCamera.prototype.constructor = THREE.PerspectiveCamera;\r\n\t\r\n\t\r\n\t/**\r\n\t * Uses Focal Length (in mm) to estimate and set FOV\r\n\t * 35mm (full-frame) camera is used if frame size is not specified;\r\n\t * Formula based on http://www.bobatkins.com/photography/technical/field_of_view.html\r\n\t */\r\n\t\r\n\tTHREE.PerspectiveCamera.prototype.setLens = function ( focalLength, frameHeight ) {\r\n\t\r\n\t\tif ( frameHeight === undefined ) frameHeight = 24;\r\n\t\r\n\t\tthis.fov = 2 * THREE.Math.radToDeg( Math.atan( frameHeight / ( focalLength * 2 ) ) );\r\n\t\tthis.updateProjectionMatrix();\r\n\t\r\n\t};\r\n\t\r\n\t\r\n\t/**\r\n\t * Sets an offset in a larger frustum. This is useful for multi-window or\r\n\t * multi-monitor/multi-machine setups.\r\n\t *\r\n\t * For example, if you have 3x2 monitors and each monitor is 1920x1080 and\r\n\t * the monitors are in grid like this\r\n\t *\r\n\t *   +---+---+---+\r\n\t *   | A | B | C |\r\n\t *   +---+---+---+\r\n\t *   | D | E | F |\r\n\t *   +---+---+---+\r\n\t *\r\n\t * then for each monitor you would call it like this\r\n\t *\r\n\t *   var w = 1920;\r\n\t *   var h = 1080;\r\n\t *   var fullWidth = w * 3;\r\n\t *   var fullHeight = h * 2;\r\n\t *\r\n\t *   --A--\r\n\t *   camera.setOffset( fullWidth, fullHeight, w * 0, h * 0, w, h );\r\n\t *   --B--\r\n\t *   camera.setOffset( fullWidth, fullHeight, w * 1, h * 0, w, h );\r\n\t *   --C--\r\n\t *   camera.setOffset( fullWidth, fullHeight, w * 2, h * 0, w, h );\r\n\t *   --D--\r\n\t *   camera.setOffset( fullWidth, fullHeight, w * 0, h * 1, w, h );\r\n\t *   --E--\r\n\t *   camera.setOffset( fullWidth, fullHeight, w * 1, h * 1, w, h );\r\n\t *   --F--\r\n\t *   camera.setOffset( fullWidth, fullHeight, w * 2, h * 1, w, h );\r\n\t *\r\n\t *   Note there is no reason monitors have to be the same size or in a grid.\r\n\t */\r\n\t\r\n\tTHREE.PerspectiveCamera.prototype.setViewOffset = function ( fullWidth, fullHeight, x, y, width, height ) {\r\n\t\r\n\t\tthis.fullWidth = fullWidth;\r\n\t\tthis.fullHeight = fullHeight;\r\n\t\tthis.x = x;\r\n\t\tthis.y = y;\r\n\t\tthis.width = width;\r\n\t\tthis.height = height;\r\n\t\r\n\t\tthis.updateProjectionMatrix();\r\n\t\r\n\t};\r\n\t\r\n\t\r\n\tTHREE.PerspectiveCamera.prototype.updateProjectionMatrix = function () {\r\n\t\r\n\t\tvar fov = THREE.Math.radToDeg( 2 * Math.atan( Math.tan( THREE.Math.degToRad( this.fov ) * 0.5 ) / this.zoom ) );\r\n\t\r\n\t\tif ( this.fullWidth ) {\r\n\t\r\n\t\t\tvar aspect = this.fullWidth / this.fullHeight;\r\n\t\t\tvar top = Math.tan( THREE.Math.degToRad( fov * 0.5 ) ) * this.near;\r\n\t\t\tvar bottom = - top;\r\n\t\t\tvar left = aspect * bottom;\r\n\t\t\tvar right = aspect * top;\r\n\t\t\tvar width = Math.abs( right - left );\r\n\t\t\tvar height = Math.abs( top - bottom );\r\n\t\r\n\t\t\tthis.projectionMatrix.makeFrustum(\r\n\t\t\t\tleft + this.x * width / this.fullWidth,\r\n\t\t\t\tleft + ( this.x + this.width ) * width / this.fullWidth,\r\n\t\t\t\ttop - ( this.y + this.height ) * height / this.fullHeight,\r\n\t\t\t\ttop - this.y * height / this.fullHeight,\r\n\t\t\t\tthis.near,\r\n\t\t\t\tthis.far\r\n\t\t\t);\r\n\t\r\n\t\t} else {\r\n\t\r\n\t\t\tthis.projectionMatrix.makePerspective( fov, this.aspect, this.near, this.far );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.PerspectiveCamera.prototype.copy = function ( source ) {\r\n\t\t\r\n\t\tTHREE.Camera.prototype.copy.call( this, source );\r\n\t\t\r\n\t\tthis.fov = source.fov;\r\n\t\tthis.aspect = source.aspect;\r\n\t\tthis.near = source.near;\r\n\t\tthis.far = source.far;\r\n\t\t\r\n\t\tthis.zoom = source.zoom;\r\n\t\t\r\n\t\treturn this;\r\n\t\t\t\r\n\t};\r\n\t\r\n\tTHREE.PerspectiveCamera.prototype.toJSON = function ( meta ) {\r\n\t\r\n\t\tvar data = THREE.Object3D.prototype.toJSON.call( this, meta );\r\n\t\r\n\t\tdata.object.zoom = this.zoom;\r\n\t\tdata.object.fov = this.fov;\r\n\t\tdata.object.aspect = this.aspect;\r\n\t\tdata.object.near = this.near;\r\n\t\tdata.object.far = this.far;\r\n\t\r\n\t\treturn data;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/lights/Light.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\t\r\n\tTHREE.Light = function ( color ) {\r\n\t\r\n\t\tTHREE.Object3D.call( this );\r\n\t\r\n\t\tthis.type = 'Light';\r\n\t\r\n\t\tthis.color = new THREE.Color( color );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Light.prototype = Object.create( THREE.Object3D.prototype );\r\n\tTHREE.Light.prototype.constructor = THREE.Light;\r\n\t\r\n\tTHREE.Light.prototype.copy = function ( source ) {\r\n\t\t\r\n\t\tTHREE.Object3D.prototype.copy.call( this, source );\r\n\t\t\r\n\t\tthis.color.copy( source.color );\r\n\t\t\r\n\t\treturn this;\r\n\t\r\n\t};\r\n\t// File:src/lights/AmbientLight.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.AmbientLight = function ( color ) {\r\n\t\r\n\t\tTHREE.Light.call( this, color );\r\n\t\r\n\t\tthis.type = 'AmbientLight';\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.AmbientLight.prototype = Object.create( THREE.Light.prototype );\r\n\tTHREE.AmbientLight.prototype.constructor = THREE.AmbientLight;\r\n\t\r\n\tTHREE.AmbientLight.prototype.toJSON = function ( meta ) {\r\n\t\r\n\t\tvar data = THREE.Object3D.prototype.toJSON.call( this, meta );\r\n\t\r\n\t\tdata.object.color = this.color.getHex();\r\n\t\r\n\t\treturn data;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/lights/DirectionalLight.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\t\r\n\tTHREE.DirectionalLight = function ( color, intensity ) {\r\n\t\r\n\t\tTHREE.Light.call( this, color );\r\n\t\r\n\t\tthis.type = 'DirectionalLight';\r\n\t\r\n\t\tthis.position.set( 0, 1, 0 );\r\n\t\tthis.updateMatrix();\r\n\t\r\n\t\tthis.target = new THREE.Object3D();\r\n\t\r\n\t\tthis.intensity = ( intensity !== undefined ) ? intensity : 1;\r\n\t\r\n\t\tthis.castShadow = false;\r\n\t\tthis.onlyShadow = false;\r\n\t\r\n\t\tthis.shadowCameraNear = 50;\r\n\t\tthis.shadowCameraFar = 5000;\r\n\t\r\n\t\tthis.shadowCameraLeft = - 500;\r\n\t\tthis.shadowCameraRight = 500;\r\n\t\tthis.shadowCameraTop = 500;\r\n\t\tthis.shadowCameraBottom = - 500;\r\n\t\r\n\t\tthis.shadowCameraVisible = false;\r\n\t\r\n\t\tthis.shadowBias = 0;\r\n\t\tthis.shadowDarkness = 0.5;\r\n\t\r\n\t\tthis.shadowMapWidth = 512;\r\n\t\tthis.shadowMapHeight = 512;\r\n\t\r\n\t\tthis.shadowMap = null;\r\n\t\tthis.shadowMapSize = null;\r\n\t\tthis.shadowCamera = null;\r\n\t\tthis.shadowMatrix = null;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.DirectionalLight.prototype = Object.create( THREE.Light.prototype );\r\n\tTHREE.DirectionalLight.prototype.constructor = THREE.DirectionalLight;\r\n\t\r\n\tTHREE.DirectionalLight.prototype.copy = function ( source ) {\r\n\t\r\n\t\tTHREE.Light.prototype.copy.call( this, source );\r\n\t\r\n\t\tthis.intensity = source.intensity;\r\n\t\tthis.target = source.target.clone();\r\n\t\r\n\t\tthis.castShadow = source.castShadow;\r\n\t\tthis.onlyShadow = source.onlyShadow;\r\n\t\r\n\t\tthis.shadowCameraNear = source.shadowCameraNear;\r\n\t\tthis.shadowCameraFar = source.shadowCameraFar;\r\n\t\r\n\t\tthis.shadowCameraLeft = source.shadowCameraLeft;\r\n\t\tthis.shadowCameraRight = source.shadowCameraRight;\r\n\t\tthis.shadowCameraTop = source.shadowCameraTop;\r\n\t\tthis.shadowCameraBottom = source.shadowCameraBottom;\r\n\t\r\n\t\tthis.shadowCameraVisible = source.shadowCameraVisible;\r\n\t\r\n\t\tthis.shadowBias = source.shadowBias;\r\n\t\tthis.shadowDarkness = source.shadowDarkness;\r\n\t\r\n\t\tthis.shadowMapWidth = source.shadowMapWidth;\r\n\t\tthis.shadowMapHeight = source.shadowMapHeight;\r\n\t\r\n\t\treturn this;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.DirectionalLight.prototype.toJSON = function ( meta ) {\r\n\t\r\n\t\tvar data = THREE.Object3D.prototype.toJSON.call( this, meta );\r\n\t\r\n\t\tdata.object.color = this.color.getHex();\r\n\t\tdata.object.intensity = this.intensity;\r\n\t\r\n\t\treturn data;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/lights/HemisphereLight.js\r\n\t\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\t\r\n\tTHREE.HemisphereLight = function ( skyColor, groundColor, intensity ) {\r\n\t\r\n\t\tTHREE.Light.call( this, skyColor );\r\n\t\r\n\t\tthis.type = 'HemisphereLight';\r\n\t\r\n\t\tthis.position.set( 0, 1, 0 );\r\n\t\tthis.updateMatrix();\r\n\t\r\n\t\tthis.groundColor = new THREE.Color( groundColor );\r\n\t\tthis.intensity = ( intensity !== undefined ) ? intensity : 1;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.HemisphereLight.prototype = Object.create( THREE.Light.prototype );\r\n\tTHREE.HemisphereLight.prototype.constructor = THREE.HemisphereLight;\r\n\t\r\n\tTHREE.HemisphereLight.prototype.copy = function ( source ) {\r\n\t\r\n\t\tTHREE.Light.prototype.copy.call( this, source );\r\n\t\r\n\t\tthis.groundColor.copy( source.groundColor );\r\n\t\tthis.intensity = source.intensity;\r\n\t\r\n\t\treturn this;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.HemisphereLight.prototype.toJSON = function ( meta ) {\r\n\t\r\n\t\tvar data = THREE.Object3D.prototype.toJSON.call( this, meta );\r\n\t\r\n\t\tdata.object.color = this.color.getHex();\r\n\t\tdata.object.groundColor = this.groundColor.getHex();\r\n\t\tdata.object.intensity = this.intensity;\r\n\t\r\n\t\treturn data;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/lights/PointLight.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.PointLight = function ( color, intensity, distance, decay ) {\r\n\t\r\n\t\tTHREE.Light.call( this, color );\r\n\t\r\n\t\tthis.type = 'PointLight';\r\n\t\r\n\t\tthis.intensity = ( intensity !== undefined ) ? intensity : 1;\r\n\t\tthis.distance = ( distance !== undefined ) ? distance : 0;\r\n\t\tthis.decay = ( decay !== undefined ) ? decay : 1;\t// for physically correct lights, should be 2.\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.PointLight.prototype = Object.create( THREE.Light.prototype );\r\n\tTHREE.PointLight.prototype.constructor = THREE.PointLight;\r\n\t\r\n\tTHREE.PointLight.prototype.copy = function ( source ) {\r\n\t\r\n\t\tTHREE.Light.prototype.copy.call( this, source );\r\n\t\r\n\t\tthis.intensity = source.intensity;\r\n\t\tthis.distance = source.distance;\r\n\t\tthis.decay = source.decay;\r\n\t\r\n\t\treturn this;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.PointLight.prototype.toJSON = function ( meta ) {\r\n\t\r\n\t\tvar data = THREE.Object3D.prototype.toJSON.call( this, meta );\r\n\t\r\n\t\tdata.object.color = this.color.getHex();\r\n\t\tdata.object.intensity = this.intensity;\r\n\t\tdata.object.distance = this.distance;\r\n\t\tdata.object.decay = this.decay;\r\n\t\r\n\t\treturn data;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/lights/SpotLight.js\r\n\t\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\t\r\n\tTHREE.SpotLight = function ( color, intensity, distance, angle, exponent, decay ) {\r\n\t\r\n\t\tTHREE.Light.call( this, color );\r\n\t\r\n\t\tthis.type = 'SpotLight';\r\n\t\r\n\t\tthis.position.set( 0, 1, 0 );\r\n\t\tthis.updateMatrix();\r\n\t\r\n\t\tthis.target = new THREE.Object3D();\r\n\t\r\n\t\tthis.intensity = ( intensity !== undefined ) ? intensity : 1;\r\n\t\tthis.distance = ( distance !== undefined ) ? distance : 0;\r\n\t\tthis.angle = ( angle !== undefined ) ? angle : Math.PI / 3;\r\n\t\tthis.exponent = ( exponent !== undefined ) ? exponent : 10;\r\n\t\tthis.decay = ( decay !== undefined ) ? decay : 1;\t// for physically correct lights, should be 2.\r\n\t\r\n\t\tthis.castShadow = false;\r\n\t\tthis.onlyShadow = false;\r\n\t\r\n\t\tthis.shadowCameraNear = 50;\r\n\t\tthis.shadowCameraFar = 5000;\r\n\t\tthis.shadowCameraFov = 50;\r\n\t\r\n\t\tthis.shadowCameraVisible = false;\r\n\t\r\n\t\tthis.shadowBias = 0;\r\n\t\tthis.shadowDarkness = 0.5;\r\n\t\r\n\t\tthis.shadowMapWidth = 512;\r\n\t\tthis.shadowMapHeight = 512;\r\n\t\r\n\t\tthis.shadowMap = null;\r\n\t\tthis.shadowMapSize = null;\r\n\t\tthis.shadowCamera = null;\r\n\t\tthis.shadowMatrix = null;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.SpotLight.prototype = Object.create( THREE.Light.prototype );\r\n\tTHREE.SpotLight.prototype.constructor = THREE.SpotLight;\r\n\t\r\n\tTHREE.SpotLight.prototype.copy = function ( source ) {\r\n\t\r\n\t\tTHREE.Light.prototype.copy.call( this, source );\r\n\t\r\n\t\tthis.intensity = source.intensity;\r\n\t\tthis.distance = source.distance;\r\n\t\tthis.angle = source.angle;\r\n\t\tthis.exponent = source.exponent;\r\n\t\tthis.decay = source.decay;\r\n\t\r\n\t\tthis.target = source.target.clone();\r\n\t\r\n\t\tthis.castShadow = source.castShadow;\r\n\t\tthis.onlyShadow = source.onlyShadow;\r\n\t\r\n\t\tthis.shadowCameraNear = source.shadowCameraNear;\r\n\t\tthis.shadowCameraFar = source.shadowCameraFar;\r\n\t\tthis.shadowCameraFov = source.shadowCameraFov;\r\n\t\r\n\t\tthis.shadowCameraVisible = source.shadowCameraVisible;\r\n\t\r\n\t\tthis.shadowBias = source.shadowBias;\r\n\t\tthis.shadowDarkness = source.shadowDarkness;\r\n\t\r\n\t\tthis.shadowMapWidth = source.shadowMapWidth;\r\n\t\tthis.shadowMapHeight = source.shadowMapHeight;\r\n\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\tTHREE.SpotLight.prototype.toJSON = function ( meta ) {\r\n\t\r\n\t\tvar data = THREE.Object3D.prototype.toJSON.call( this, meta );\r\n\t\r\n\t\tdata.object.color = this.color.getHex();\r\n\t\tdata.object.intensity = this.intensity;\r\n\t\tdata.object.distance = this.distance;\r\n\t\tdata.object.angle = this.angle;\r\n\t\tdata.object.exponent = this.exponent;\r\n\t\tdata.object.decay = this.decay;\r\n\t\r\n\t\treturn data;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/loaders/Cache.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.Cache = {\r\n\t\r\n\t\tenabled: false,\r\n\t\r\n\t\tfiles: {},\r\n\t\r\n\t\tadd: function ( key, file ) {\r\n\t\r\n\t\t\tif ( this.enabled === false ) return;\r\n\t\r\n\t\t\t// console.log( 'THREE.Cache', 'Adding key:', key );\r\n\t\r\n\t\t\tthis.files[ key ] = file;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tget: function ( key ) {\r\n\t\r\n\t\t\tif ( this.enabled === false ) return;\r\n\t\r\n\t\t\t// console.log( 'THREE.Cache', 'Checking key:', key );\r\n\t\r\n\t\t\treturn this.files[ key ];\r\n\t\r\n\t\t},\r\n\t\r\n\t\tremove: function ( key ) {\r\n\t\r\n\t\t\tdelete this.files[ key ];\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclear: function () {\r\n\t\r\n\t\t\tthis.files = {};\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/loaders/Loader.js\r\n\t\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\t\r\n\tTHREE.Loader = function () {\r\n\t\r\n\t\tthis.onLoadStart = function () {};\r\n\t\tthis.onLoadProgress = function () {};\r\n\t\tthis.onLoadComplete = function () {};\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Loader.prototype = {\r\n\t\r\n\t\tconstructor: THREE.Loader,\r\n\t\r\n\t\tcrossOrigin: undefined,\r\n\t\r\n\t\textractUrlBase: function ( url ) {\r\n\t\r\n\t\t\tvar parts = url.split( '/' );\r\n\t\r\n\t\t\tif ( parts.length === 1 ) return './';\r\n\t\r\n\t\t\tparts.pop();\r\n\t\r\n\t\t\treturn parts.join( '/' ) + '/';\r\n\t\r\n\t\t},\r\n\t\r\n\t\tinitMaterials: function ( materials, texturePath, crossOrigin ) {\r\n\t\r\n\t\t\tvar array = [];\r\n\t\r\n\t\t\tfor ( var i = 0; i < materials.length; ++ i ) {\r\n\t\r\n\t\t\t\tarray[ i ] = this.createMaterial( materials[ i ], texturePath, crossOrigin );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn array;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcreateMaterial: ( function () {\r\n\t\r\n\t\t\tvar imageLoader;\r\n\t\r\n\t\t\treturn function createMaterial( m, texturePath, crossOrigin ) {\r\n\t\r\n\t\t\t\tvar scope = this;\r\n\t\r\n\t\t\t\tif ( crossOrigin === undefined && scope.crossOrigin !== undefined ) crossOrigin = scope.crossOrigin;\r\n\t\r\n\t\t\t\tif ( imageLoader === undefined ) imageLoader = new THREE.ImageLoader();\r\n\t\r\n\t\t\t\tfunction nearest_pow2( n ) {\r\n\t\r\n\t\t\t\t\tvar l = Math.log( n ) / Math.LN2;\r\n\t\t\t\t\treturn Math.pow( 2, Math.round(  l ) );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tfunction create_texture( where, name, sourceFile, repeat, offset, wrap, anisotropy ) {\r\n\t\r\n\t\t\t\t\tvar fullPath = texturePath + sourceFile;\r\n\t\r\n\t\t\t\t\tvar texture;\r\n\t\r\n\t\t\t\t\tvar loader = THREE.Loader.Handlers.get( fullPath );\r\n\t\r\n\t\t\t\t\tif ( loader !== null ) {\r\n\t\r\n\t\t\t\t\t\ttexture = loader.load( fullPath );\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\ttexture = new THREE.Texture();\r\n\t\r\n\t\t\t\t\t\tloader = imageLoader;\r\n\t\t\t\t\t\tloader.setCrossOrigin( crossOrigin );\r\n\t\t\t\t\t\tloader.load( fullPath, function ( image ) {\r\n\t\r\n\t\t\t\t\t\t\tif ( THREE.Math.isPowerOfTwo( image.width ) === false ||\r\n\t\t\t\t\t\t\t\tTHREE.Math.isPowerOfTwo( image.height ) === false ) {\r\n\t\r\n\t\t\t\t\t\t\t\tvar width = nearest_pow2( image.width );\r\n\t\t\t\t\t\t\t\tvar height = nearest_pow2( image.height );\r\n\t\r\n\t\t\t\t\t\t\t\tvar canvas = document.createElement( 'canvas' );\r\n\t\t\t\t\t\t\t\tcanvas.width = width;\r\n\t\t\t\t\t\t\t\tcanvas.height = height;\r\n\t\r\n\t\t\t\t\t\t\t\tvar context = canvas.getContext( '2d' );\r\n\t\t\t\t\t\t\t\tcontext.drawImage( image, 0, 0, width, height );\r\n\t\r\n\t\t\t\t\t\t\t\ttexture.image = canvas;\r\n\t\r\n\t\t\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\t\t\ttexture.image = image;\r\n\t\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t\ttexture.needsUpdate = true;\r\n\t\r\n\t\t\t\t\t\t} );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\ttexture.sourceFile = sourceFile;\r\n\t\r\n\t\t\t\t\tif ( repeat ) {\r\n\t\r\n\t\t\t\t\t\ttexture.repeat.set( repeat[ 0 ], repeat[ 1 ] );\r\n\t\r\n\t\t\t\t\t\tif ( repeat[ 0 ] !== 1 ) texture.wrapS = THREE.RepeatWrapping;\r\n\t\t\t\t\t\tif ( repeat[ 1 ] !== 1 ) texture.wrapT = THREE.RepeatWrapping;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tif ( offset ) {\r\n\t\r\n\t\t\t\t\t\ttexture.offset.set( offset[ 0 ], offset[ 1 ] );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tif ( wrap ) {\r\n\t\r\n\t\t\t\t\t\tvar wrapMap = {\r\n\t\t\t\t\t\t\t'repeat': THREE.RepeatWrapping,\r\n\t\t\t\t\t\t\t'mirror': THREE.MirroredRepeatWrapping\r\n\t\t\t\t\t\t};\r\n\t\r\n\t\t\t\t\t\tif ( wrapMap[ wrap[ 0 ] ] !== undefined ) texture.wrapS = wrapMap[ wrap[ 0 ] ];\r\n\t\t\t\t\t\tif ( wrapMap[ wrap[ 1 ] ] !== undefined ) texture.wrapT = wrapMap[ wrap[ 1 ] ];\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tif ( anisotropy ) {\r\n\t\r\n\t\t\t\t\t\ttexture.anisotropy = anisotropy;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\twhere[ name ] = texture;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tfunction rgb2hex( rgb ) {\r\n\t\r\n\t\t\t\t\treturn ( rgb[ 0 ] * 255 << 16 ) + ( rgb[ 1 ] * 255 << 8 ) + rgb[ 2 ] * 255;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// defaults\r\n\t\r\n\t\t\t\tvar mtype = 'MeshLambertMaterial';\r\n\t\t\t\tvar mpars = {};\r\n\t\r\n\t\t\t\t// parameters from model file\r\n\t\r\n\t\t\t\tif ( m.shading ) {\r\n\t\r\n\t\t\t\t\tvar shading = m.shading.toLowerCase();\r\n\t\r\n\t\t\t\t\tif ( shading === 'phong' ) mtype = 'MeshPhongMaterial';\r\n\t\t\t\t\telse if ( shading === 'basic' ) mtype = 'MeshBasicMaterial';\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( m.blending !== undefined && THREE[ m.blending ] !== undefined ) {\r\n\t\r\n\t\t\t\t\tmpars.blending = THREE[ m.blending ];\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( m.transparent !== undefined ) {\r\n\t\r\n\t\t\t\t\tmpars.transparent = m.transparent;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( m.opacity !== undefined && m.opacity < 1.0 ) {\r\n\t\r\n\t\t\t\t\tmpars.transparent = true;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( m.depthTest !== undefined ) {\r\n\t\r\n\t\t\t\t\tmpars.depthTest = m.depthTest;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( m.depthWrite !== undefined ) {\r\n\t\r\n\t\t\t\t\tmpars.depthWrite = m.depthWrite;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( m.visible !== undefined ) {\r\n\t\r\n\t\t\t\t\tmpars.visible = m.visible;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( m.flipSided !== undefined ) {\r\n\t\r\n\t\t\t\t\tmpars.side = THREE.BackSide;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( m.doubleSided !== undefined ) {\r\n\t\r\n\t\t\t\t\tmpars.side = THREE.DoubleSide;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( m.wireframe !== undefined ) {\r\n\t\r\n\t\t\t\t\tmpars.wireframe = m.wireframe;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( m.vertexColors !== undefined ) {\r\n\t\r\n\t\t\t\t\tif ( m.vertexColors === 'face' ) {\r\n\t\r\n\t\t\t\t\t\tmpars.vertexColors = THREE.FaceColors;\r\n\t\r\n\t\t\t\t\t} else if ( m.vertexColors ) {\r\n\t\r\n\t\t\t\t\t\tmpars.vertexColors = THREE.VertexColors;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// colors\r\n\t\r\n\t\t\t\tif ( m.colorDiffuse ) {\r\n\t\r\n\t\t\t\t\tmpars.color = rgb2hex( m.colorDiffuse );\r\n\t\r\n\t\t\t\t} else if ( m.DbgColor ) {\r\n\t\r\n\t\t\t\t\tmpars.color = m.DbgColor;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( m.colorEmissive ) {\r\n\t\r\n\t\t\t\t\tmpars.emissive = rgb2hex( m.colorEmissive );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( mtype === 'MeshPhongMaterial' ) {\r\n\t\r\n\t\t\t\t\tif ( m.colorSpecular ) {\r\n\t\r\n\t\t\t\t\t\tmpars.specular = rgb2hex( m.colorSpecular );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tif ( m.specularCoef ) {\r\n\t\r\n\t\t\t\t\t\tmpars.shininess = m.specularCoef;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// modifiers\r\n\t\r\n\t\t\t\tif ( m.transparency !== undefined ) {\r\n\t\r\n\t\t\t\t\tconsole.warn( 'THREE.Loader: transparency has been renamed to opacity' );\r\n\t\t\t\t\tm.opacity = m.transparency;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( m.opacity !== undefined ) {\r\n\t\r\n\t\t\t\t\tmpars.opacity = m.opacity;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// textures\r\n\t\r\n\t\t\t\tif ( texturePath ) {\r\n\t\r\n\t\t\t\t\tif ( m.mapDiffuse ) {\r\n\t\r\n\t\t\t\t\t\tcreate_texture( mpars, 'map', m.mapDiffuse, m.mapDiffuseRepeat, m.mapDiffuseOffset, m.mapDiffuseWrap, m.mapDiffuseAnisotropy );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tif ( m.mapLight ) {\r\n\t\r\n\t\t\t\t\t\tcreate_texture( mpars, 'lightMap', m.mapLight, m.mapLightRepeat, m.mapLightOffset, m.mapLightWrap, m.mapLightAnisotropy );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tif ( m.mapAO ) {\r\n\t\r\n\t\t\t\t\t\tcreate_texture( mpars, 'aoMap', m.mapAO, m.mapAORepeat, m.mapAOOffset, m.mapAOWrap, m.mapAOAnisotropy );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tif ( m.mapBump ) {\r\n\t\r\n\t\t\t\t\t\tcreate_texture( mpars, 'bumpMap', m.mapBump, m.mapBumpRepeat, m.mapBumpOffset, m.mapBumpWrap, m.mapBumpAnisotropy );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tif ( m.mapNormal ) {\r\n\t\r\n\t\t\t\t\t\tcreate_texture( mpars, 'normalMap', m.mapNormal, m.mapNormalRepeat, m.mapNormalOffset, m.mapNormalWrap, m.mapNormalAnisotropy );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tif ( m.mapSpecular ) {\r\n\t\r\n\t\t\t\t\t\tcreate_texture( mpars, 'specularMap', m.mapSpecular, m.mapSpecularRepeat, m.mapSpecularOffset, m.mapSpecularWrap, m.mapSpecularAnisotropy );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tif ( m.mapAlpha ) {\r\n\t\r\n\t\t\t\t\t\tcreate_texture( mpars, 'alphaMap', m.mapAlpha, m.mapAlphaRepeat, m.mapAlphaOffset, m.mapAlphaWrap, m.mapAlphaAnisotropy );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t//\r\n\t\r\n\t\t\t\tif ( m.mapBumpScale ) {\r\n\t\r\n\t\t\t\t\tmpars.bumpScale = m.mapBumpScale;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( m.mapNormalFactor ) {\r\n\t\r\n\t\t\t\t\tmpars.normalScale = new THREE.Vector2( m.mapNormalFactor, m.mapNormalFactor );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar material = new THREE[ mtype ]( mpars );\r\n\t\r\n\t\t\t\tif ( m.DbgName !== undefined ) material.name = m.DbgName;\r\n\t\r\n\t\t\t\treturn material;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t} )()\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Loader.Handlers = {\r\n\t\r\n\t\thandlers: [],\r\n\t\r\n\t\tadd: function ( regex, loader ) {\r\n\t\r\n\t\t\tthis.handlers.push( regex, loader );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tget: function ( file ) {\r\n\t\r\n\t\t\tfor ( var i = 0, l = this.handlers.length; i < l; i += 2 ) {\r\n\t\r\n\t\t\t\tvar regex = this.handlers[ i ];\r\n\t\t\t\tvar loader  = this.handlers[ i + 1 ];\r\n\t\r\n\t\t\t\tif ( regex.test( file ) ) {\r\n\t\r\n\t\t\t\t\treturn loader;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn null;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/loaders/XHRLoader.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.XHRLoader = function ( manager ) {\r\n\t\r\n\t\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.XHRLoader.prototype = {\r\n\t\r\n\t\tconstructor: THREE.XHRLoader,\r\n\t\r\n\t\tload: function ( url, onLoad, onProgress, onError ) {\r\n\t\r\n\t\t\tvar scope = this;\r\n\t\r\n\t\t\tvar cached = THREE.Cache.get( url );\r\n\t\r\n\t\t\tif ( cached !== undefined ) {\r\n\t\r\n\t\t\t\tif ( onLoad ) {\r\n\t\r\n\t\t\t\t\tsetTimeout( function () {\r\n\t\r\n\t\t\t\t\t\tonLoad( cached );\r\n\t\r\n\t\t\t\t\t}, 0 );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn cached;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar request = new XMLHttpRequest();\r\n\t\t\trequest.open( 'GET', url, true );\r\n\t\r\n\t\t\trequest.addEventListener( 'load', function ( event ) {\r\n\t\r\n\t\t\t\tTHREE.Cache.add( url, this.response );\r\n\t\r\n\t\t\t\tif ( onLoad ) onLoad( this.response );\r\n\t\r\n\t\t\t\tscope.manager.itemEnd( url );\r\n\t\r\n\t\t\t}, false );\r\n\t\r\n\t\t\tif ( onProgress !== undefined ) {\r\n\t\r\n\t\t\t\trequest.addEventListener( 'progress', function ( event ) {\r\n\t\r\n\t\t\t\t\tonProgress( event );\r\n\t\r\n\t\t\t\t}, false );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\trequest.addEventListener( 'error', function ( event ) {\r\n\t\r\n\t\t\t\tif ( onError ) onError( event );\r\n\t\r\n\t\t\t\tscope.manager.itemError( url );\r\n\t\r\n\t\t\t}, false );\r\n\t\r\n\t\t\tif ( this.crossOrigin !== undefined ) request.crossOrigin = this.crossOrigin;\r\n\t\t\tif ( this.responseType !== undefined ) request.responseType = this.responseType;\r\n\t\t\tif ( this.withCredentials !== undefined ) request.withCredentials = this.withCredentials;\r\n\t\r\n\t\t\trequest.send( null );\r\n\t\r\n\t\t\tscope.manager.itemStart( url );\r\n\t\r\n\t\t\treturn request;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetResponseType: function ( value ) {\r\n\t\r\n\t\t\tthis.responseType = value;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetCrossOrigin: function ( value ) {\r\n\t\r\n\t\t\tthis.crossOrigin = value;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetWithCredentials: function ( value ) {\r\n\t\r\n\t\t\tthis.withCredentials = value;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/loaders/ImageLoader.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.ImageLoader = function ( manager ) {\r\n\t\r\n\t\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.ImageLoader.prototype = {\r\n\t\r\n\t\tconstructor: THREE.ImageLoader,\r\n\t\r\n\t\tload: function ( url, onLoad, onProgress, onError ) {\r\n\t\r\n\t\t\tvar scope = this;\r\n\t\r\n\t\t\tvar cached = THREE.Cache.get( url );\r\n\t\r\n\t\t\tif ( cached !== undefined ) {\r\n\t\r\n\t\t\t\tif ( onLoad ) {\r\n\t\r\n\t\t\t\t\tsetTimeout( function () {\r\n\t\r\n\t\t\t\t\t\tonLoad( cached );\r\n\t\r\n\t\t\t\t\t}, 0 );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn cached;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar image = document.createElement( 'img' );\r\n\t\r\n\t\t\timage.addEventListener( 'load', function ( event ) {\r\n\t\r\n\t\t\t\tTHREE.Cache.add( url, this );\r\n\t\r\n\t\t\t\tif ( onLoad ) onLoad( this );\r\n\t\r\n\t\t\t\tscope.manager.itemEnd( url );\r\n\t\r\n\t\t\t}, false );\r\n\t\r\n\t\t\tif ( onProgress !== undefined ) {\r\n\t\r\n\t\t\t\timage.addEventListener( 'progress', function ( event ) {\r\n\t\r\n\t\t\t\t\tonProgress( event );\r\n\t\r\n\t\t\t\t}, false );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\timage.addEventListener( 'error', function ( event ) {\r\n\t\r\n\t\t\t\tif ( onError ) onError( event );\r\n\t\r\n\t\t\t\tscope.manager.itemError( url );\r\n\t\r\n\t\t\t}, false );\r\n\t\r\n\t\t\tif ( this.crossOrigin !== undefined ) image.crossOrigin = this.crossOrigin;\r\n\t\r\n\t\t\tscope.manager.itemStart( url );\r\n\t\r\n\t\t\timage.src = url;\r\n\t\r\n\t\t\treturn image;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetCrossOrigin: function ( value ) {\r\n\t\r\n\t\t\tthis.crossOrigin = value;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/loaders/JSONLoader.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\t\r\n\tTHREE.JSONLoader = function ( manager ) {\r\n\t\r\n\t\tif ( typeof manager === 'boolean' ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.JSONLoader: showStatus parameter has been removed from constructor.' );\r\n\t\t\tmanager = undefined;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\r\n\t\r\n\t\tthis.withCredentials = false;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.JSONLoader.prototype = {\r\n\t\r\n\t\tconstructor: THREE.JSONLoader,\r\n\t\r\n\t\t// Deprecated\r\n\t\t\r\n\t\tget statusDomElement () {\r\n\t\r\n\t\t\tif ( this._statusDomElement === undefined ) {\r\n\t\r\n\t\t\t\tthis._statusDomElement = document.createElement( 'div' );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tconsole.warn( 'THREE.JSONLoader: .statusDomElement has been removed.' );\r\n\t\t\treturn this._statusDomElement;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tload: function( url, onLoad, onProgress, onError ) {\r\n\t\r\n\t\t\tvar scope = this;\r\n\t\r\n\t\t\tvar texturePath = this.texturePath && ( typeof this.texturePath === \"string\" ) ? this.texturePath : THREE.Loader.prototype.extractUrlBase( url );\r\n\t\r\n\t\t\tvar loader = new THREE.XHRLoader( this.manager );\r\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\r\n\t\t\tloader.setWithCredentials( this.withCredentials );\r\n\t\t\tloader.load( url, function ( text ) {\r\n\t\r\n\t\t\t\tvar json = JSON.parse( text );\r\n\t\t\t\tvar metadata = json.metadata;\r\n\t\r\n\t\t\t\tif ( metadata !== undefined ) {\r\n\t\r\n\t\t\t\t\tif ( metadata.type === 'object' ) {\r\n\t\r\n\t\t\t\t\t\tconsole.error( 'THREE.JSONLoader: ' + url + ' should be loaded with THREE.ObjectLoader instead.' );\r\n\t\t\t\t\t\treturn;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tif ( metadata.type === 'scene' ) {\r\n\t\r\n\t\t\t\t\t\tconsole.error( 'THREE.JSONLoader: ' + url + ' should be loaded with THREE.SceneLoader instead.' );\r\n\t\t\t\t\t\treturn;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar object = scope.parse( json, texturePath );\r\n\t\t\t\tonLoad( object.geometry, object.materials );\r\n\t\r\n\t\t\t} );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetCrossOrigin: function ( value ) {\r\n\t\r\n\t\t\tthis.crossOrigin = value;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetTexturePath: function ( value ) {\r\n\t\r\n\t\t\tthis.texturePath = value;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tparse: function ( json, texturePath ) {\r\n\t\r\n\t\t\tvar geometry = new THREE.Geometry(),\r\n\t\t\tscale = ( json.scale !== undefined ) ? 1.0 / json.scale : 1.0;\r\n\t\r\n\t\t\tparseModel( scale );\r\n\t\r\n\t\t\tparseSkin();\r\n\t\t\tparseMorphing( scale );\r\n\t\r\n\t\t\tgeometry.computeFaceNormals();\r\n\t\t\tgeometry.computeBoundingSphere();\r\n\t\r\n\t\t\tfunction parseModel( scale ) {\r\n\t\r\n\t\t\t\tfunction isBitSet( value, position ) {\r\n\t\r\n\t\t\t\t\treturn value & ( 1 << position );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar i, j, fi,\r\n\t\r\n\t\t\t\toffset, zLength,\r\n\t\r\n\t\t\tcolorIndex, normalIndex, uvIndex, materialIndex,\r\n\t\r\n\t\t\t\ttype,\r\n\t\t\t\tisQuad,\r\n\t\t\t\thasMaterial,\r\n\t\t\t\thasFaceVertexUv,\r\n\t\t\t\thasFaceNormal, hasFaceVertexNormal,\r\n\t\t\t\thasFaceColor, hasFaceVertexColor,\r\n\t\r\n\t\t\tvertex, face, faceA, faceB, hex, normal,\r\n\t\r\n\t\t\t\tuvLayer, uv, u, v,\r\n\t\r\n\t\t\t\tfaces = json.faces,\r\n\t\t\t\tvertices = json.vertices,\r\n\t\t\t\tnormals = json.normals,\r\n\t\t\t\tcolors = json.colors,\r\n\t\r\n\t\t\t\tnUvLayers = 0;\r\n\t\r\n\t\t\t\tif ( json.uvs !== undefined ) {\r\n\t\r\n\t\t\t\t\t// disregard empty arrays\r\n\t\r\n\t\t\t\t\tfor ( i = 0; i < json.uvs.length; i ++ ) {\r\n\t\r\n\t\t\t\t\t\tif ( json.uvs[ i ].length ) nUvLayers ++;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tfor ( i = 0; i < nUvLayers; i ++ ) {\r\n\t\r\n\t\t\t\t\t\tgeometry.faceVertexUvs[ i ] = [];\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\toffset = 0;\r\n\t\t\t\tzLength = vertices.length;\r\n\t\r\n\t\t\t\twhile ( offset < zLength ) {\r\n\t\r\n\t\t\t\t\tvertex = new THREE.Vector3();\r\n\t\r\n\t\t\t\t\tvertex.x = vertices[ offset ++ ] * scale;\r\n\t\t\t\t\tvertex.y = vertices[ offset ++ ] * scale;\r\n\t\t\t\t\tvertex.z = vertices[ offset ++ ] * scale;\r\n\t\r\n\t\t\t\t\tgeometry.vertices.push( vertex );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\toffset = 0;\r\n\t\t\t\tzLength = faces.length;\r\n\t\r\n\t\t\t\twhile ( offset < zLength ) {\r\n\t\r\n\t\t\t\t\ttype = faces[ offset ++ ];\r\n\t\r\n\t\r\n\t\t\t\t\tisQuad              = isBitSet( type, 0 );\r\n\t\t\t\t\thasMaterial         = isBitSet( type, 1 );\r\n\t\t\t\t\thasFaceVertexUv     = isBitSet( type, 3 );\r\n\t\t\t\t\thasFaceNormal       = isBitSet( type, 4 );\r\n\t\t\t\t\thasFaceVertexNormal = isBitSet( type, 5 );\r\n\t\t\t\t\thasFaceColor\t     = isBitSet( type, 6 );\r\n\t\t\t\t\thasFaceVertexColor  = isBitSet( type, 7 );\r\n\t\r\n\t\t\t\t\t// console.log(\"type\", type, \"bits\", isQuad, hasMaterial, hasFaceVertexUv, hasFaceNormal, hasFaceVertexNormal, hasFaceColor, hasFaceVertexColor);\r\n\t\r\n\t\t\t\t\tif ( isQuad ) {\r\n\t\r\n\t\t\t\t\t\tfaceA = new THREE.Face3();\r\n\t\t\t\t\t\tfaceA.a = faces[ offset ];\r\n\t\t\t\t\t\tfaceA.b = faces[ offset + 1 ];\r\n\t\t\t\t\t\tfaceA.c = faces[ offset + 3 ];\r\n\t\r\n\t\t\t\t\t\tfaceB = new THREE.Face3();\r\n\t\t\t\t\t\tfaceB.a = faces[ offset + 1 ];\r\n\t\t\t\t\t\tfaceB.b = faces[ offset + 2 ];\r\n\t\t\t\t\t\tfaceB.c = faces[ offset + 3 ];\r\n\t\r\n\t\t\t\t\t\toffset += 4;\r\n\t\r\n\t\t\t\t\t\tif ( hasMaterial ) {\r\n\t\r\n\t\t\t\t\t\t\tmaterialIndex = faces[ offset ++ ];\r\n\t\t\t\t\t\t\tfaceA.materialIndex = materialIndex;\r\n\t\t\t\t\t\t\tfaceB.materialIndex = materialIndex;\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t// to get face <=> uv index correspondence\r\n\t\r\n\t\t\t\t\t\tfi = geometry.faces.length;\r\n\t\r\n\t\t\t\t\t\tif ( hasFaceVertexUv ) {\r\n\t\r\n\t\t\t\t\t\t\tfor ( i = 0; i < nUvLayers; i ++ ) {\r\n\t\r\n\t\t\t\t\t\t\t\tuvLayer = json.uvs[ i ];\r\n\t\r\n\t\t\t\t\t\t\t\tgeometry.faceVertexUvs[ i ][ fi ] = [];\r\n\t\t\t\t\t\t\t\tgeometry.faceVertexUvs[ i ][ fi + 1 ] = [];\r\n\t\r\n\t\t\t\t\t\t\t\tfor ( j = 0; j < 4; j ++ ) {\r\n\t\r\n\t\t\t\t\t\t\t\t\tuvIndex = faces[ offset ++ ];\r\n\t\r\n\t\t\t\t\t\t\t\t\tu = uvLayer[ uvIndex * 2 ];\r\n\t\t\t\t\t\t\t\t\tv = uvLayer[ uvIndex * 2 + 1 ];\r\n\t\r\n\t\t\t\t\t\t\t\t\tuv = new THREE.Vector2( u, v );\r\n\t\r\n\t\t\t\t\t\t\t\t\tif ( j !== 2 ) geometry.faceVertexUvs[ i ][ fi ].push( uv );\r\n\t\t\t\t\t\t\t\t\tif ( j !== 0 ) geometry.faceVertexUvs[ i ][ fi + 1 ].push( uv );\r\n\t\r\n\t\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tif ( hasFaceNormal ) {\r\n\t\r\n\t\t\t\t\t\t\tnormalIndex = faces[ offset ++ ] * 3;\r\n\t\r\n\t\t\t\t\t\t\tfaceA.normal.set(\r\n\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\r\n\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\r\n\t\t\t\t\t\t\t\tnormals[ normalIndex ]\r\n\t\t\t\t\t\t\t);\r\n\t\r\n\t\t\t\t\t\t\tfaceB.normal.copy( faceA.normal );\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tif ( hasFaceVertexNormal ) {\r\n\t\r\n\t\t\t\t\t\t\tfor ( i = 0; i < 4; i ++ ) {\r\n\t\r\n\t\t\t\t\t\t\t\tnormalIndex = faces[ offset ++ ] * 3;\r\n\t\r\n\t\t\t\t\t\t\t\tnormal = new THREE.Vector3(\r\n\t\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\r\n\t\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\r\n\t\t\t\t\t\t\t\t\tnormals[ normalIndex ]\r\n\t\t\t\t\t\t\t\t);\r\n\t\r\n\t\r\n\t\t\t\t\t\t\t\tif ( i !== 2 ) faceA.vertexNormals.push( normal );\r\n\t\t\t\t\t\t\t\tif ( i !== 0 ) faceB.vertexNormals.push( normal );\r\n\t\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\r\n\t\t\t\t\t\tif ( hasFaceColor ) {\r\n\t\r\n\t\t\t\t\t\t\tcolorIndex = faces[ offset ++ ];\r\n\t\t\t\t\t\t\thex = colors[ colorIndex ];\r\n\t\r\n\t\t\t\t\t\t\tfaceA.color.setHex( hex );\r\n\t\t\t\t\t\t\tfaceB.color.setHex( hex );\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\r\n\t\t\t\t\t\tif ( hasFaceVertexColor ) {\r\n\t\r\n\t\t\t\t\t\t\tfor ( i = 0; i < 4; i ++ ) {\r\n\t\r\n\t\t\t\t\t\t\t\tcolorIndex = faces[ offset ++ ];\r\n\t\t\t\t\t\t\t\thex = colors[ colorIndex ];\r\n\t\r\n\t\t\t\t\t\t\t\tif ( i !== 2 ) faceA.vertexColors.push( new THREE.Color( hex ) );\r\n\t\t\t\t\t\t\t\tif ( i !== 0 ) faceB.vertexColors.push( new THREE.Color( hex ) );\r\n\t\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tgeometry.faces.push( faceA );\r\n\t\t\t\t\t\tgeometry.faces.push( faceB );\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\tface = new THREE.Face3();\r\n\t\t\t\t\t\tface.a = faces[ offset ++ ];\r\n\t\t\t\t\t\tface.b = faces[ offset ++ ];\r\n\t\t\t\t\t\tface.c = faces[ offset ++ ];\r\n\t\r\n\t\t\t\t\t\tif ( hasMaterial ) {\r\n\t\r\n\t\t\t\t\t\t\tmaterialIndex = faces[ offset ++ ];\r\n\t\t\t\t\t\t\tface.materialIndex = materialIndex;\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t// to get face <=> uv index correspondence\r\n\t\r\n\t\t\t\t\t\tfi = geometry.faces.length;\r\n\t\r\n\t\t\t\t\t\tif ( hasFaceVertexUv ) {\r\n\t\r\n\t\t\t\t\t\t\tfor ( i = 0; i < nUvLayers; i ++ ) {\r\n\t\r\n\t\t\t\t\t\t\t\tuvLayer = json.uvs[ i ];\r\n\t\r\n\t\t\t\t\t\t\t\tgeometry.faceVertexUvs[ i ][ fi ] = [];\r\n\t\r\n\t\t\t\t\t\t\t\tfor ( j = 0; j < 3; j ++ ) {\r\n\t\r\n\t\t\t\t\t\t\t\t\tuvIndex = faces[ offset ++ ];\r\n\t\r\n\t\t\t\t\t\t\t\t\tu = uvLayer[ uvIndex * 2 ];\r\n\t\t\t\t\t\t\t\t\tv = uvLayer[ uvIndex * 2 + 1 ];\r\n\t\r\n\t\t\t\t\t\t\t\t\tuv = new THREE.Vector2( u, v );\r\n\t\r\n\t\t\t\t\t\t\t\t\tgeometry.faceVertexUvs[ i ][ fi ].push( uv );\r\n\t\r\n\t\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tif ( hasFaceNormal ) {\r\n\t\r\n\t\t\t\t\t\t\tnormalIndex = faces[ offset ++ ] * 3;\r\n\t\r\n\t\t\t\t\t\t\tface.normal.set(\r\n\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\r\n\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\r\n\t\t\t\t\t\t\t\tnormals[ normalIndex ]\r\n\t\t\t\t\t\t\t);\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tif ( hasFaceVertexNormal ) {\r\n\t\r\n\t\t\t\t\t\t\tfor ( i = 0; i < 3; i ++ ) {\r\n\t\r\n\t\t\t\t\t\t\t\tnormalIndex = faces[ offset ++ ] * 3;\r\n\t\r\n\t\t\t\t\t\t\t\tnormal = new THREE.Vector3(\r\n\t\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\r\n\t\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\r\n\t\t\t\t\t\t\t\t\tnormals[ normalIndex ]\r\n\t\t\t\t\t\t\t\t);\r\n\t\r\n\t\t\t\t\t\t\t\tface.vertexNormals.push( normal );\r\n\t\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\r\n\t\t\t\t\t\tif ( hasFaceColor ) {\r\n\t\r\n\t\t\t\t\t\t\tcolorIndex = faces[ offset ++ ];\r\n\t\t\t\t\t\t\tface.color.setHex( colors[ colorIndex ] );\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\r\n\t\t\t\t\t\tif ( hasFaceVertexColor ) {\r\n\t\r\n\t\t\t\t\t\t\tfor ( i = 0; i < 3; i ++ ) {\r\n\t\r\n\t\t\t\t\t\t\t\tcolorIndex = faces[ offset ++ ];\r\n\t\t\t\t\t\t\t\tface.vertexColors.push( new THREE.Color( colors[ colorIndex ] ) );\r\n\t\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tgeometry.faces.push( face );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t\tfunction parseSkin() {\r\n\t\r\n\t\t\t\tvar influencesPerVertex = ( json.influencesPerVertex !== undefined ) ? json.influencesPerVertex : 2;\r\n\t\r\n\t\t\t\tif ( json.skinWeights ) {\r\n\t\r\n\t\t\t\t\tfor ( var i = 0, l = json.skinWeights.length; i < l; i += influencesPerVertex ) {\r\n\t\r\n\t\t\t\t\t\tvar x =                               json.skinWeights[ i ];\r\n\t\t\t\t\t\tvar y = ( influencesPerVertex > 1 ) ? json.skinWeights[ i + 1 ] : 0;\r\n\t\t\t\t\t\tvar z = ( influencesPerVertex > 2 ) ? json.skinWeights[ i + 2 ] : 0;\r\n\t\t\t\t\t\tvar w = ( influencesPerVertex > 3 ) ? json.skinWeights[ i + 3 ] : 0;\r\n\t\r\n\t\t\t\t\t\tgeometry.skinWeights.push( new THREE.Vector4( x, y, z, w ) );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( json.skinIndices ) {\r\n\t\r\n\t\t\t\t\tfor ( var i = 0, l = json.skinIndices.length; i < l; i += influencesPerVertex ) {\r\n\t\r\n\t\t\t\t\t\tvar a =                               json.skinIndices[ i ];\r\n\t\t\t\t\t\tvar b = ( influencesPerVertex > 1 ) ? json.skinIndices[ i + 1 ] : 0;\r\n\t\t\t\t\t\tvar c = ( influencesPerVertex > 2 ) ? json.skinIndices[ i + 2 ] : 0;\r\n\t\t\t\t\t\tvar d = ( influencesPerVertex > 3 ) ? json.skinIndices[ i + 3 ] : 0;\r\n\t\r\n\t\t\t\t\t\tgeometry.skinIndices.push( new THREE.Vector4( a, b, c, d ) );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tgeometry.bones = json.bones;\r\n\t\r\n\t\t\t\tif ( geometry.bones && geometry.bones.length > 0 && ( geometry.skinWeights.length !== geometry.skinIndices.length || geometry.skinIndices.length !== geometry.vertices.length ) ) {\r\n\t\r\n\t\t\t\t\tconsole.warn( 'When skinning, number of vertices (' + geometry.vertices.length + '), skinIndices (' +\r\n\t\t\t\t\t\tgeometry.skinIndices.length + '), and skinWeights (' + geometry.skinWeights.length + ') should match.' );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\r\n\t\t\t\t// could change this to json.animations[0] or remove completely\r\n\t\r\n\t\t\t\tgeometry.animation = json.animation;\r\n\t\t\t\tgeometry.animations = json.animations;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t\tfunction parseMorphing( scale ) {\r\n\t\r\n\t\t\t\tif ( json.morphTargets !== undefined ) {\r\n\t\r\n\t\t\t\t\tvar i, l, v, vl, dstVertices, srcVertices;\r\n\t\r\n\t\t\t\t\tfor ( i = 0, l = json.morphTargets.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\t\t\tgeometry.morphTargets[ i ] = {};\r\n\t\t\t\t\t\tgeometry.morphTargets[ i ].name = json.morphTargets[ i ].name;\r\n\t\t\t\t\t\tgeometry.morphTargets[ i ].vertices = [];\r\n\t\r\n\t\t\t\t\t\tdstVertices = geometry.morphTargets[ i ].vertices;\r\n\t\t\t\t\t\tsrcVertices = json.morphTargets[ i ].vertices;\r\n\t\r\n\t\t\t\t\t\tfor ( v = 0, vl = srcVertices.length; v < vl; v += 3 ) {\r\n\t\r\n\t\t\t\t\t\t\tvar vertex = new THREE.Vector3();\r\n\t\t\t\t\t\t\tvertex.x = srcVertices[ v ] * scale;\r\n\t\t\t\t\t\t\tvertex.y = srcVertices[ v + 1 ] * scale;\r\n\t\t\t\t\t\t\tvertex.z = srcVertices[ v + 2 ] * scale;\r\n\t\r\n\t\t\t\t\t\t\tdstVertices.push( vertex );\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( json.morphColors !== undefined ) {\r\n\t\r\n\t\t\t\t\tvar i, l, c, cl, dstColors, srcColors, color;\r\n\t\r\n\t\t\t\t\tfor ( i = 0, l = json.morphColors.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\t\t\tgeometry.morphColors[ i ] = {};\r\n\t\t\t\t\t\tgeometry.morphColors[ i ].name = json.morphColors[ i ].name;\r\n\t\t\t\t\t\tgeometry.morphColors[ i ].colors = [];\r\n\t\r\n\t\t\t\t\t\tdstColors = geometry.morphColors[ i ].colors;\r\n\t\t\t\t\t\tsrcColors = json.morphColors[ i ].colors;\r\n\t\r\n\t\t\t\t\t\tfor ( c = 0, cl = srcColors.length; c < cl; c += 3 ) {\r\n\t\r\n\t\t\t\t\t\t\tcolor = new THREE.Color( 0xffaa00 );\r\n\t\t\t\t\t\t\tcolor.setRGB( srcColors[ c ], srcColors[ c + 1 ], srcColors[ c + 2 ] );\r\n\t\t\t\t\t\t\tdstColors.push( color );\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t\tif ( json.materials === undefined || json.materials.length === 0 ) {\r\n\t\r\n\t\t\t\treturn { geometry: geometry };\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tvar materials = THREE.Loader.prototype.initMaterials( json.materials, texturePath, this.crossOrigin );\r\n\t\r\n\t\t\t\treturn { geometry: geometry, materials: materials };\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/loaders/LoadingManager.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.LoadingManager = function ( onLoad, onProgress, onError ) {\r\n\t\r\n\t\tvar scope = this;\r\n\t\r\n\t\tvar isLoading = false, itemsLoaded = 0, itemsTotal = 0;\r\n\t\r\n\t\tthis.onStart = undefined;\r\n\t\tthis.onLoad = onLoad;\r\n\t\tthis.onProgress = onProgress;\r\n\t\tthis.onError = onError;\r\n\t\r\n\t\tthis.itemStart = function ( url ) {\r\n\t\r\n\t\t\titemsTotal ++;\r\n\t\r\n\t\t\tif ( isLoading === false ) {\r\n\t\r\n\t\t\t\tif ( scope.onStart !== undefined ) {\r\n\t\r\n\t\t\t\t\tscope.onStart( url, itemsLoaded, itemsTotal );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tisLoading = true;\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.itemEnd = function ( url ) {\r\n\t\r\n\t\t\titemsLoaded ++;\r\n\t\r\n\t\t\tif ( scope.onProgress !== undefined ) {\r\n\t\r\n\t\t\t\tscope.onProgress( url, itemsLoaded, itemsTotal );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( itemsLoaded === itemsTotal ) {\r\n\t\r\n\t\t\t\tisLoading = false;\r\n\t\r\n\t\t\t\tif ( scope.onLoad !== undefined ) {\r\n\t\r\n\t\t\t\t\tscope.onLoad();\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.itemError = function ( url ) {\r\n\t\r\n\t\t\tif ( scope.onError !== undefined ) {\r\n\t\r\n\t\t\t\tscope.onError( url );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.DefaultLoadingManager = new THREE.LoadingManager();\r\n\t\r\n\t// File:src/loaders/BufferGeometryLoader.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.BufferGeometryLoader = function ( manager ) {\r\n\t\r\n\t\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.BufferGeometryLoader.prototype = {\r\n\t\r\n\t\tconstructor: THREE.BufferGeometryLoader,\r\n\t\r\n\t\tload: function ( url, onLoad, onProgress, onError ) {\r\n\t\r\n\t\t\tvar scope = this;\r\n\t\r\n\t\t\tvar loader = new THREE.XHRLoader( scope.manager );\r\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\r\n\t\t\tloader.load( url, function ( text ) {\r\n\t\r\n\t\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\r\n\t\r\n\t\t\t}, onProgress, onError );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetCrossOrigin: function ( value ) {\r\n\t\r\n\t\t\tthis.crossOrigin = value;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tparse: function ( json ) {\r\n\t\r\n\t\t\tvar geometry = new THREE.BufferGeometry();\r\n\t\r\n\t\t\tvar index = json.data.index;\r\n\t\r\n\t\t\tif ( index !== undefined ) {\r\n\t\r\n\t\t\t\tvar typedArray = new self[ index.type ]( index.array );\r\n\t\t\t\tgeometry.setIndex( new THREE.BufferAttribute( typedArray, 1 ) );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar attributes = json.data.attributes;\r\n\t\r\n\t\t\tfor ( var key in attributes ) {\r\n\t\r\n\t\t\t\tvar attribute = attributes[ key ];\r\n\t\t\t\tvar typedArray = new self[ attribute.type ]( attribute.array );\r\n\t\r\n\t\t\t\tgeometry.addAttribute( key, new THREE.BufferAttribute( typedArray, attribute.itemSize ) );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar groups = json.data.groups || json.data.drawcalls || json.data.offsets;\r\n\t\r\n\t\t\tif ( groups !== undefined ) {\r\n\t\r\n\t\t\t\tfor ( var i = 0, n = groups.length; i !== n; ++ i ) {\r\n\t\r\n\t\t\t\t\tvar group = groups[ i ];\r\n\t\r\n\t\t\t\t\tgeometry.addGroup( group.start, group.count );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar boundingSphere = json.data.boundingSphere;\r\n\t\r\n\t\t\tif ( boundingSphere !== undefined ) {\r\n\t\r\n\t\t\t\tvar center = new THREE.Vector3();\r\n\t\r\n\t\t\t\tif ( boundingSphere.center !== undefined ) {\r\n\t\r\n\t\t\t\t\tcenter.fromArray( boundingSphere.center );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tgeometry.boundingSphere = new THREE.Sphere( center, boundingSphere.radius );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn geometry;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/loaders/MaterialLoader.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.MaterialLoader = function ( manager ) {\r\n\t\r\n\t\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\r\n\t\tthis.textures = {};\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.MaterialLoader.prototype = {\r\n\t\r\n\t\tconstructor: THREE.MaterialLoader,\r\n\t\r\n\t\tload: function ( url, onLoad, onProgress, onError ) {\r\n\t\r\n\t\t\tvar scope = this;\r\n\t\r\n\t\t\tvar loader = new THREE.XHRLoader( scope.manager );\r\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\r\n\t\t\tloader.load( url, function ( text ) {\r\n\t\r\n\t\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\r\n\t\r\n\t\t\t}, onProgress, onError );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetCrossOrigin: function ( value ) {\r\n\t\r\n\t\t\tthis.crossOrigin = value;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetTextures: function ( value ) {\r\n\t\r\n\t\t\tthis.textures = value;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetTexture: function ( name ) {\r\n\t\r\n\t\t\tvar textures = this.textures;\r\n\t\r\n\t\t\tif ( textures[ name ] === undefined ) {\r\n\t\r\n\t\t\t\tconsole.warn( 'THREE.MaterialLoader: Undefined texture', name );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn textures[ name ];\r\n\t\r\n\t\t},\r\n\t\r\n\t\tparse: function ( json ) {\r\n\t\r\n\t\t\tvar material = new THREE[ json.type ];\r\n\t\t\tmaterial.uuid = json.uuid;\r\n\t\r\n\t\t\tif ( json.name !== undefined ) material.name = json.name;\r\n\t\t\tif ( json.color !== undefined ) material.color.setHex( json.color );\r\n\t\t\tif ( json.emissive !== undefined ) material.emissive.setHex( json.emissive );\r\n\t\t\tif ( json.specular !== undefined ) material.specular.setHex( json.specular );\r\n\t\t\tif ( json.shininess !== undefined ) material.shininess = json.shininess;\r\n\t\t\tif ( json.uniforms !== undefined ) material.uniforms = json.uniforms;\r\n\t\t\tif ( json.vertexShader !== undefined ) material.vertexShader = json.vertexShader;\r\n\t\t\tif ( json.fragmentShader !== undefined ) material.fragmentShader = json.fragmentShader;\r\n\t\t\tif ( json.vertexColors !== undefined ) material.vertexColors = json.vertexColors;\r\n\t\t\tif ( json.shading !== undefined ) material.shading = json.shading;\r\n\t\t\tif ( json.blending !== undefined ) material.blending = json.blending;\r\n\t\t\tif ( json.side !== undefined ) material.side = json.side;\r\n\t\t\tif ( json.opacity !== undefined ) material.opacity = json.opacity;\r\n\t\t\tif ( json.transparent !== undefined ) material.transparent = json.transparent;\r\n\t\t\tif ( json.alphaTest !== undefined ) material.alphaTest = json.alphaTest;\r\n\t\t\tif ( json.depthTest !== undefined ) material.depthTest = json.depthTest;\r\n\t\t\tif ( json.depthWrite !== undefined ) material.depthWrite = json.depthWrite;\r\n\t\t\tif ( json.wireframe !== undefined ) material.wireframe = json.wireframe;\r\n\t\t\tif ( json.wireframeLinewidth !== undefined ) material.wireframeLinewidth = json.wireframeLinewidth;\r\n\t\r\n\t\t\t// for PointsMaterial\r\n\t\t\tif ( json.size !== undefined ) material.size = json.size;\r\n\t\t\tif ( json.sizeAttenuation !== undefined ) material.sizeAttenuation = json.sizeAttenuation;\r\n\t\r\n\t\t\t// maps\r\n\t\r\n\t\t\tif ( json.map !== undefined ) material.map = this.getTexture( json.map );\r\n\t\r\n\t\t\tif ( json.alphaMap !== undefined ) {\r\n\t\r\n\t\t\t\tmaterial.alphaMap = this.getTexture( json.alphaMap );\r\n\t\t\t\tmaterial.transparent = true;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( json.bumpMap !== undefined ) material.bumpMap = this.getTexture( json.bumpMap );\r\n\t\t\tif ( json.bumpScale !== undefined ) material.bumpScale = json.bumpScale;\r\n\t\r\n\t\t\tif ( json.normalMap !== undefined ) material.normalMap = this.getTexture( json.normalMap );\r\n\t\t\tif ( json.normalScale )\tmaterial.normalScale = new THREE.Vector2( json.normalScale, json.normalScale );\r\n\t\r\n\t\t\tif ( json.displacementMap !== undefined ) material.displacementMap = this.getTexture( json.displacementMap );\r\n\t\t\tif ( json.displacementScale !== undefined ) material.displacementScale = json.displacementScale;\r\n\t\t\tif ( json.displacementBias !== undefined ) material.displacementBias = json.displacementBias;\r\n\t\r\n\t\t\tif ( json.specularMap !== undefined ) material.specularMap = this.getTexture( json.specularMap );\r\n\t\r\n\t\t\tif ( json.envMap !== undefined ) {\r\n\t\r\n\t\t\t\tmaterial.envMap = this.getTexture( json.envMap );\r\n\t\t\t\tmaterial.combine = THREE.MultiplyOperation;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( json.reflectivity ) material.reflectivity = json.reflectivity;\r\n\t\r\n\t\t\tif ( json.lightMap !== undefined ) material.lightMap = this.getTexture( json.lightMap );\r\n\t\t\tif ( json.lightMapIntensity !== undefined ) material.lightMapIntensity = json.lightMapIntensity;\r\n\t\r\n\t\t\tif ( json.aoMap !== undefined ) material.aoMap = this.getTexture( json.aoMap );\r\n\t\t\tif ( json.aoMapIntensity !== undefined ) material.aoMapIntensity = json.aoMapIntensity;\r\n\t\r\n\t\t\t// MeshFaceMaterial\r\n\t\r\n\t\t\tif ( json.materials !== undefined ) {\r\n\t\r\n\t\t\t\tfor ( var i = 0, l = json.materials.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\t\tmaterial.materials.push( this.parse( json.materials[ i ] ) );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn material;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/loaders/ObjectLoader.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.ObjectLoader = function ( manager ) {\r\n\t\r\n\t\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\r\n\t\tthis.texturePath = '';\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.ObjectLoader.prototype = {\r\n\t\r\n\t\tconstructor: THREE.ObjectLoader,\r\n\t\r\n\t\tload: function ( url, onLoad, onProgress, onError ) {\r\n\t\r\n\t\t\tif ( this.texturePath === '' ) {\r\n\t\r\n\t\t\t\tthis.texturePath = url.substring( 0, url.lastIndexOf( '/' ) + 1 );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar scope = this;\r\n\t\r\n\t\t\tvar loader = new THREE.XHRLoader( scope.manager );\r\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\r\n\t\t\tloader.load( url, function ( text ) {\r\n\t\r\n\t\t\t\tscope.parse( JSON.parse( text ), onLoad );\r\n\t\r\n\t\t\t}, onProgress, onError );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetTexturePath: function ( value ) {\r\n\t\r\n\t\t\tthis.texturePath = value;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetCrossOrigin: function ( value ) {\r\n\t\r\n\t\t\tthis.crossOrigin = value;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tparse: function ( json, onLoad ) {\r\n\t\r\n\t\t\tvar geometries = this.parseGeometries( json.geometries );\r\n\t\r\n\t\t\tvar images = this.parseImages( json.images, function () {\r\n\t\r\n\t\t\t\tif ( onLoad !== undefined ) onLoad( object );\r\n\t\r\n\t\t\t} );\r\n\t\r\n\t\t\tvar textures  = this.parseTextures( json.textures, images );\r\n\t\t\tvar materials = this.parseMaterials( json.materials, textures );\r\n\t\t\tvar object = this.parseObject( json.object, geometries, materials );\r\n\t\r\n\t\t\tif ( json.images === undefined || json.images.length === 0 ) {\r\n\t\r\n\t\t\t\tif ( onLoad !== undefined ) onLoad( object );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn object;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tparseGeometries: function ( json ) {\r\n\t\r\n\t\t\tvar geometries = {};\r\n\t\r\n\t\t\tif ( json !== undefined ) {\r\n\t\r\n\t\t\t\tvar geometryLoader = new THREE.JSONLoader();\r\n\t\t\t\tvar bufferGeometryLoader = new THREE.BufferGeometryLoader();\r\n\t\r\n\t\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\t\tvar geometry;\r\n\t\t\t\t\tvar data = json[ i ];\r\n\t\r\n\t\t\t\t\tswitch ( data.type ) {\r\n\t\r\n\t\t\t\t\t\tcase 'PlaneGeometry':\r\n\t\t\t\t\t\tcase 'PlaneBufferGeometry':\r\n\t\r\n\t\t\t\t\t\t\tgeometry = new THREE[ data.type ](\r\n\t\t\t\t\t\t\t\tdata.width,\r\n\t\t\t\t\t\t\t\tdata.height,\r\n\t\t\t\t\t\t\t\tdata.widthSegments,\r\n\t\t\t\t\t\t\t\tdata.heightSegments\r\n\t\t\t\t\t\t\t);\r\n\t\r\n\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\tcase 'BoxGeometry':\r\n\t\t\t\t\t\tcase 'CubeGeometry': // backwards compatible\r\n\t\r\n\t\t\t\t\t\t\tgeometry = new THREE.BoxGeometry(\r\n\t\t\t\t\t\t\t\tdata.width,\r\n\t\t\t\t\t\t\t\tdata.height,\r\n\t\t\t\t\t\t\t\tdata.depth,\r\n\t\t\t\t\t\t\t\tdata.widthSegments,\r\n\t\t\t\t\t\t\t\tdata.heightSegments,\r\n\t\t\t\t\t\t\t\tdata.depthSegments\r\n\t\t\t\t\t\t\t);\r\n\t\r\n\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\tcase 'CircleBufferGeometry':\r\n\t\r\n\t\t\t\t\t\t\tgeometry = new THREE.CircleBufferGeometry(\r\n\t\t\t\t\t\t\t\tdata.radius,\r\n\t\t\t\t\t\t\t\tdata.segments,\r\n\t\t\t\t\t\t\t\tdata.thetaStart,\r\n\t\t\t\t\t\t\t\tdata.thetaLength\r\n\t\t\t\t\t\t\t);\r\n\t\r\n\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\tcase 'CircleGeometry':\r\n\t\r\n\t\t\t\t\t\t\tgeometry = new THREE.CircleGeometry(\r\n\t\t\t\t\t\t\t\tdata.radius,\r\n\t\t\t\t\t\t\t\tdata.segments,\r\n\t\t\t\t\t\t\t\tdata.thetaStart,\r\n\t\t\t\t\t\t\t\tdata.thetaLength\r\n\t\t\t\t\t\t\t);\r\n\t\r\n\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\tcase 'CylinderGeometry':\r\n\t\r\n\t\t\t\t\t\t\tgeometry = new THREE.CylinderGeometry(\r\n\t\t\t\t\t\t\t\tdata.radiusTop,\r\n\t\t\t\t\t\t\t\tdata.radiusBottom,\r\n\t\t\t\t\t\t\t\tdata.height,\r\n\t\t\t\t\t\t\t\tdata.radialSegments,\r\n\t\t\t\t\t\t\t\tdata.heightSegments,\r\n\t\t\t\t\t\t\t\tdata.openEnded,\r\n\t\t\t\t\t\t\t\tdata.thetaStart,\r\n\t\t\t\t\t\t\t\tdata.thetaLength\r\n\t\t\t\t\t\t\t);\r\n\t\r\n\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\tcase 'SphereGeometry':\r\n\t\r\n\t\t\t\t\t\t\tgeometry = new THREE.SphereGeometry(\r\n\t\t\t\t\t\t\t\tdata.radius,\r\n\t\t\t\t\t\t\t\tdata.widthSegments,\r\n\t\t\t\t\t\t\t\tdata.heightSegments,\r\n\t\t\t\t\t\t\t\tdata.phiStart,\r\n\t\t\t\t\t\t\t\tdata.phiLength,\r\n\t\t\t\t\t\t\t\tdata.thetaStart,\r\n\t\t\t\t\t\t\t\tdata.thetaLength\r\n\t\t\t\t\t\t\t);\r\n\t\r\n\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\tcase 'SphereBufferGeometry':\r\n\t\r\n\t\t\t\t\t\t\tgeometry = new THREE.SphereBufferGeometry(\r\n\t\t\t\t\t\t\t\tdata.radius,\r\n\t\t\t\t\t\t\t\tdata.widthSegments,\r\n\t\t\t\t\t\t\t\tdata.heightSegments,\r\n\t\t\t\t\t\t\t\tdata.phiStart,\r\n\t\t\t\t\t\t\t\tdata.phiLength,\r\n\t\t\t\t\t\t\t\tdata.thetaStart,\r\n\t\t\t\t\t\t\t\tdata.thetaLength\r\n\t\t\t\t\t\t\t);\r\n\t\r\n\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\tcase 'DodecahedronGeometry':\r\n\t\r\n\t\t\t\t\t\t\tgeometry = new THREE.DodecahedronGeometry(\r\n\t\t\t\t\t\t\t\tdata.radius,\r\n\t\t\t\t\t\t\t\tdata.detail\r\n\t\t\t\t\t\t\t);\r\n\t\r\n\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\tcase 'IcosahedronGeometry':\r\n\t\r\n\t\t\t\t\t\t\tgeometry = new THREE.IcosahedronGeometry(\r\n\t\t\t\t\t\t\t\tdata.radius,\r\n\t\t\t\t\t\t\t\tdata.detail\r\n\t\t\t\t\t\t\t);\r\n\t\r\n\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\tcase 'OctahedronGeometry':\r\n\t\r\n\t\t\t\t\t\t\tgeometry = new THREE.OctahedronGeometry(\r\n\t\t\t\t\t\t\t\tdata.radius,\r\n\t\t\t\t\t\t\t\tdata.detail\r\n\t\t\t\t\t\t\t);\r\n\t\r\n\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\tcase 'TetrahedronGeometry':\r\n\t\r\n\t\t\t\t\t\t\tgeometry = new THREE.TetrahedronGeometry(\r\n\t\t\t\t\t\t\t\tdata.radius,\r\n\t\t\t\t\t\t\t\tdata.detail\r\n\t\t\t\t\t\t\t);\r\n\t\r\n\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\tcase 'RingGeometry':\r\n\t\r\n\t\t\t\t\t\t\tgeometry = new THREE.RingGeometry(\r\n\t\t\t\t\t\t\t\tdata.innerRadius,\r\n\t\t\t\t\t\t\t\tdata.outerRadius,\r\n\t\t\t\t\t\t\t\tdata.thetaSegments,\r\n\t\t\t\t\t\t\t\tdata.phiSegments,\r\n\t\t\t\t\t\t\t\tdata.thetaStart,\r\n\t\t\t\t\t\t\t\tdata.thetaLength\r\n\t\t\t\t\t\t\t);\r\n\t\r\n\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\tcase 'TorusGeometry':\r\n\t\r\n\t\t\t\t\t\t\tgeometry = new THREE.TorusGeometry(\r\n\t\t\t\t\t\t\t\tdata.radius,\r\n\t\t\t\t\t\t\t\tdata.tube,\r\n\t\t\t\t\t\t\t\tdata.radialSegments,\r\n\t\t\t\t\t\t\t\tdata.tubularSegments,\r\n\t\t\t\t\t\t\t\tdata.arc\r\n\t\t\t\t\t\t\t);\r\n\t\r\n\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\tcase 'TorusKnotGeometry':\r\n\t\r\n\t\t\t\t\t\t\tgeometry = new THREE.TorusKnotGeometry(\r\n\t\t\t\t\t\t\t\tdata.radius,\r\n\t\t\t\t\t\t\t\tdata.tube,\r\n\t\t\t\t\t\t\t\tdata.radialSegments,\r\n\t\t\t\t\t\t\t\tdata.tubularSegments,\r\n\t\t\t\t\t\t\t\tdata.p,\r\n\t\t\t\t\t\t\t\tdata.q,\r\n\t\t\t\t\t\t\t\tdata.heightScale\r\n\t\t\t\t\t\t\t);\r\n\t\r\n\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\tcase 'TextGeometry':\r\n\t\r\n\t\t\t\t\t\t\tgeometry = new THREE.TextGeometry(\r\n\t\t\t\t\t\t\t\tdata.text,\r\n\t\t\t\t\t\t\t\tdata.data\r\n\t\t\t\t\t\t\t);\r\n\t\r\n\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\tcase 'BufferGeometry':\r\n\t\r\n\t\t\t\t\t\t\tgeometry = bufferGeometryLoader.parse( data );\r\n\t\r\n\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\tcase 'Geometry':\r\n\t\r\n\t\t\t\t\t\t\tgeometry = geometryLoader.parse( data.data, this.texturePath ).geometry;\r\n\t\r\n\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\tdefault:\r\n\t\r\n\t\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Unsupported geometry type \"' + data.type + '\"' );\r\n\t\r\n\t\t\t\t\t\t\tcontinue;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tgeometry.uuid = data.uuid;\r\n\t\r\n\t\t\t\t\tif ( data.name !== undefined ) geometry.name = data.name;\r\n\t\r\n\t\t\t\t\tgeometries[ data.uuid ] = geometry;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn geometries;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tparseMaterials: function ( json, textures ) {\r\n\t\r\n\t\t\tvar materials = {};\r\n\t\r\n\t\t\tif ( json !== undefined ) {\r\n\t\r\n\t\t\t\tvar loader = new THREE.MaterialLoader();\r\n\t\t\t\tloader.setTextures( textures );\r\n\t\r\n\t\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\t\tvar material = loader.parse( json[ i ] );\r\n\t\t\t\t\tmaterials[ material.uuid ] = material;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn materials;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tparseImages: function ( json, onLoad ) {\r\n\t\r\n\t\t\tvar scope = this;\r\n\t\t\tvar images = {};\r\n\t\r\n\t\t\tfunction loadImage( url ) {\r\n\t\r\n\t\t\t\tscope.manager.itemStart( url );\r\n\t\r\n\t\t\t\treturn loader.load( url, function () {\r\n\t\r\n\t\t\t\t\tscope.manager.itemEnd( url );\r\n\t\r\n\t\t\t\t} );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( json !== undefined && json.length > 0 ) {\r\n\t\r\n\t\t\t\tvar manager = new THREE.LoadingManager( onLoad );\r\n\t\r\n\t\t\t\tvar loader = new THREE.ImageLoader( manager );\r\n\t\t\t\tloader.setCrossOrigin( this.crossOrigin );\r\n\t\r\n\t\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\t\tvar image = json[ i ];\r\n\t\t\t\t\tvar path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test( image.url ) ? image.url : scope.texturePath + image.url;\r\n\t\r\n\t\t\t\t\timages[ image.uuid ] = loadImage( path );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn images;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tparseTextures: function ( json, images ) {\r\n\t\r\n\t\t\tfunction parseConstant( value ) {\r\n\t\r\n\t\t\t\tif ( typeof( value ) === 'number' ) return value;\r\n\t\r\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader.parseTexture: Constant should be in numeric form.', value );\r\n\t\r\n\t\t\t\treturn THREE[ value ];\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar textures = {};\r\n\t\r\n\t\t\tif ( json !== undefined ) {\r\n\t\r\n\t\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\t\tvar data = json[ i ];\r\n\t\r\n\t\t\t\t\tif ( data.image === undefined ) {\r\n\t\r\n\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: No \"image\" specified for', data.uuid );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tif ( images[ data.image ] === undefined ) {\r\n\t\r\n\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined image', data.image );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tvar texture = new THREE.Texture( images[ data.image ] );\r\n\t\t\t\t\ttexture.needsUpdate = true;\r\n\t\r\n\t\t\t\t\ttexture.uuid = data.uuid;\r\n\t\r\n\t\t\t\t\tif ( data.name !== undefined ) texture.name = data.name;\r\n\t\t\t\t\tif ( data.mapping !== undefined ) texture.mapping = parseConstant( data.mapping );\r\n\t\t\t\t\tif ( data.offset !== undefined ) texture.offset = new THREE.Vector2( data.offset[ 0 ], data.offset[ 1 ] );\r\n\t\t\t\t\tif ( data.repeat !== undefined ) texture.repeat = new THREE.Vector2( data.repeat[ 0 ], data.repeat[ 1 ] );\r\n\t\t\t\t\tif ( data.minFilter !== undefined ) texture.minFilter = parseConstant( data.minFilter );\r\n\t\t\t\t\tif ( data.magFilter !== undefined ) texture.magFilter = parseConstant( data.magFilter );\r\n\t\t\t\t\tif ( data.anisotropy !== undefined ) texture.anisotropy = data.anisotropy;\r\n\t\t\t\t\tif ( Array.isArray( data.wrap ) ) {\r\n\t\r\n\t\t\t\t\t\ttexture.wrapS = parseConstant( data.wrap[ 0 ] );\r\n\t\t\t\t\t\ttexture.wrapT = parseConstant( data.wrap[ 1 ] );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\ttextures[ data.uuid ] = texture;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn textures;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tparseObject: function () {\r\n\t\r\n\t\t\tvar matrix = new THREE.Matrix4();\r\n\t\r\n\t\t\treturn function ( data, geometries, materials ) {\r\n\t\r\n\t\t\t\tvar object;\r\n\t\r\n\t\t\t\tvar getGeometry = function ( name ) {\r\n\t\r\n\t\t\t\t\tif ( geometries[ name ] === undefined ) {\r\n\t\r\n\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined geometry', name );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\treturn geometries[ name ];\r\n\t\r\n\t\t\t\t};\r\n\t\r\n\t\t\t\tvar getMaterial = function ( name ) {\r\n\t\r\n\t\t\t\t\tif ( materials[ name ] === undefined ) {\r\n\t\r\n\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined material', name );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\treturn materials[ name ];\r\n\t\r\n\t\t\t\t};\r\n\t\r\n\t\t\t\tswitch ( data.type ) {\r\n\t\r\n\t\t\t\t\tcase 'Scene':\r\n\t\r\n\t\t\t\t\t\tobject = new THREE.Scene();\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'PerspectiveCamera':\r\n\t\r\n\t\t\t\t\t\tobject = new THREE.PerspectiveCamera( data.fov, data.aspect, data.near, data.far );\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'OrthographicCamera':\r\n\t\r\n\t\t\t\t\t\tobject = new THREE.OrthographicCamera( data.left, data.right, data.top, data.bottom, data.near, data.far );\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'AmbientLight':\r\n\t\r\n\t\t\t\t\t\tobject = new THREE.AmbientLight( data.color );\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'DirectionalLight':\r\n\t\r\n\t\t\t\t\t\tobject = new THREE.DirectionalLight( data.color, data.intensity );\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'PointLight':\r\n\t\r\n\t\t\t\t\t\tobject = new THREE.PointLight( data.color, data.intensity, data.distance, data.decay );\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'SpotLight':\r\n\t\r\n\t\t\t\t\t\tobject = new THREE.SpotLight( data.color, data.intensity, data.distance, data.angle, data.exponent, data.decay );\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'HemisphereLight':\r\n\t\r\n\t\t\t\t\t\tobject = new THREE.HemisphereLight( data.color, data.groundColor, data.intensity );\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'Mesh':\r\n\t\r\n\t\t\t\t\t\tobject = new THREE.Mesh( getGeometry( data.geometry ), getMaterial( data.material ) );\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'LOD':\r\n\t\r\n\t\t\t\t\t\tobject = new THREE.LOD();\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'Line':\r\n\t\r\n\t\t\t\t\t\tobject = new THREE.Line( getGeometry( data.geometry ), getMaterial( data.material ), data.mode );\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'PointCloud':\r\n\t\t\t\t\tcase 'Points':\r\n\t\r\n\t\t\t\t\t\tobject = new THREE.Points( getGeometry( data.geometry ), getMaterial( data.material ) );\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'Sprite':\r\n\t\r\n\t\t\t\t\t\tobject = new THREE.Sprite( getMaterial( data.material ) );\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'Group':\r\n\t\r\n\t\t\t\t\t\tobject = new THREE.Group();\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tdefault:\r\n\t\r\n\t\t\t\t\t\tobject = new THREE.Object3D();\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tobject.uuid = data.uuid;\r\n\t\r\n\t\t\t\tif ( data.name !== undefined ) object.name = data.name;\r\n\t\t\t\tif ( data.matrix !== undefined ) {\r\n\t\r\n\t\t\t\t\tmatrix.fromArray( data.matrix );\r\n\t\t\t\t\tmatrix.decompose( object.position, object.quaternion, object.scale );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tif ( data.position !== undefined ) object.position.fromArray( data.position );\r\n\t\t\t\t\tif ( data.rotation !== undefined ) object.rotation.fromArray( data.rotation );\r\n\t\t\t\t\tif ( data.scale !== undefined ) object.scale.fromArray( data.scale );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( data.castShadow !== undefined ) object.castShadow = data.castShadow;\r\n\t\t\t\tif ( data.receiveShadow !== undefined ) object.receiveShadow = data.receiveShadow;\r\n\t\r\n\t\t\t\tif ( data.visible !== undefined ) object.visible = data.visible;\r\n\t\t\t\tif ( data.userData !== undefined ) object.userData = data.userData;\r\n\t\r\n\t\t\t\tif ( data.children !== undefined ) {\r\n\t\r\n\t\t\t\t\tfor ( var child in data.children ) {\r\n\t\r\n\t\t\t\t\t\tobject.add( this.parseObject( data.children[ child ], geometries, materials ) );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( data.type === 'LOD' ) {\r\n\t\r\n\t\t\t\t\tvar levels = data.levels;\r\n\t\r\n\t\t\t\t\tfor ( var l = 0; l < levels.length; l ++ ) {\r\n\t\r\n\t\t\t\t\t\tvar level = levels[ l ];\r\n\t\t\t\t\t\tvar child = object.getObjectByProperty( 'uuid', level.object );\r\n\t\r\n\t\t\t\t\t\tif ( child !== undefined ) {\r\n\t\r\n\t\t\t\t\t\t\tobject.addLevel( child, level.distance );\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn object;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}()\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/loaders/TextureLoader.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.TextureLoader = function ( manager ) {\r\n\t\r\n\t\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.TextureLoader.prototype = {\r\n\t\r\n\t\tconstructor: THREE.TextureLoader,\r\n\t\r\n\t\tload: function ( url, onLoad, onProgress, onError ) {\r\n\t\r\n\t\t\tvar scope = this;\r\n\t\r\n\t\t\tvar loader = new THREE.ImageLoader( scope.manager );\r\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\r\n\t\t\tloader.load( url, function ( image ) {\r\n\t\r\n\t\t\t\tvar texture = new THREE.Texture( image );\r\n\t\t\t\ttexture.needsUpdate = true;\r\n\t\r\n\t\t\t\tif ( onLoad !== undefined ) {\r\n\t\r\n\t\t\t\t\tonLoad( texture );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}, onProgress, onError );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetCrossOrigin: function ( value ) {\r\n\t\r\n\t\t\tthis.crossOrigin = value;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/loaders/BinaryTextureLoader.js\r\n\t\r\n\t/**\r\n\t * @author Nikos M. / https://github.com/foo123/\r\n\t *\r\n\t * Abstract Base class to load generic binary textures formats (rgbe, hdr, ...)\r\n\t */\r\n\t\r\n\tTHREE.DataTextureLoader = THREE.BinaryTextureLoader = function ( manager ) {\r\n\t\r\n\t\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\r\n\t\r\n\t\t// override in sub classes\r\n\t\tthis._parser = null;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.BinaryTextureLoader.prototype = {\r\n\t\r\n\t\tconstructor: THREE.BinaryTextureLoader,\r\n\t\r\n\t\tload: function ( url, onLoad, onProgress, onError ) {\r\n\t\r\n\t\t\tvar scope = this;\r\n\t\r\n\t\t\tvar texture = new THREE.DataTexture();\r\n\t\r\n\t\t\tvar loader = new THREE.XHRLoader( this.manager );\r\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\r\n\t\t\tloader.setResponseType( 'arraybuffer' );\r\n\t\r\n\t\t\tloader.load( url, function ( buffer ) {\r\n\t\r\n\t\t\t\tvar texData = scope._parser( buffer );\r\n\t\r\n\t\t\t\tif ( ! texData ) return;\r\n\t\r\n\t\t\t\tif ( undefined !== texData.image ) {\r\n\t\r\n\t\t\t\t\ttexture.image = texData.image;\r\n\t\r\n\t\t\t\t} else if ( undefined !== texData.data ) {\r\n\t\r\n\t\t\t\t\ttexture.image.width = texData.width;\r\n\t\t\t\t\ttexture.image.height = texData.height;\r\n\t\t\t\t\ttexture.image.data = texData.data;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\ttexture.wrapS = undefined !== texData.wrapS ? texData.wrapS : THREE.ClampToEdgeWrapping;\r\n\t\t\t\ttexture.wrapT = undefined !== texData.wrapT ? texData.wrapT : THREE.ClampToEdgeWrapping;\r\n\t\r\n\t\t\t\ttexture.magFilter = undefined !== texData.magFilter ? texData.magFilter : THREE.LinearFilter;\r\n\t\t\t\ttexture.minFilter = undefined !== texData.minFilter ? texData.minFilter : THREE.LinearMipMapLinearFilter;\r\n\t\r\n\t\t\t\ttexture.anisotropy = undefined !== texData.anisotropy ? texData.anisotropy : 1;\r\n\t\r\n\t\t\t\tif ( undefined !== texData.format ) {\r\n\t\r\n\t\t\t\t\ttexture.format = texData.format;\r\n\t\r\n\t\t\t\t}\r\n\t\t\t\tif ( undefined !== texData.type ) {\r\n\t\r\n\t\t\t\t\ttexture.type = texData.type;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( undefined !== texData.mipmaps ) {\r\n\t\r\n\t\t\t\t\ttexture.mipmaps = texData.mipmaps;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( 1 === texData.mipmapCount ) {\r\n\t\r\n\t\t\t\t\ttexture.minFilter = THREE.LinearFilter;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\ttexture.needsUpdate = true;\r\n\t\r\n\t\t\t\tif ( onLoad ) onLoad( texture, texData );\r\n\t\r\n\t\t\t}, onProgress, onError );\r\n\t\r\n\t\r\n\t\t\treturn texture;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetCrossOrigin: function ( value ) {\r\n\t\r\n\t\t\tthis.crossOrigin = value;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/loaders/CompressedTextureLoader.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t *\r\n\t * Abstract Base class to block based textures loader (dds, pvr, ...)\r\n\t */\r\n\t\r\n\tTHREE.CompressedTextureLoader = function ( manager ) {\r\n\t\r\n\t\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\r\n\t\r\n\t\t// override in sub classes\r\n\t\tthis._parser = null;\r\n\t\r\n\t};\r\n\t\r\n\t\r\n\tTHREE.CompressedTextureLoader.prototype = {\r\n\t\r\n\t\tconstructor: THREE.CompressedTextureLoader,\r\n\t\r\n\t\tload: function ( url, onLoad, onProgress, onError ) {\r\n\t\r\n\t\t\tvar scope = this;\r\n\t\r\n\t\t\tvar images = [];\r\n\t\r\n\t\t\tvar texture = new THREE.CompressedTexture();\r\n\t\t\ttexture.image = images;\r\n\t\r\n\t\t\tvar loader = new THREE.XHRLoader( this.manager );\r\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\r\n\t\t\tloader.setResponseType( 'arraybuffer' );\r\n\t\r\n\t\t\tif ( Array.isArray( url ) ) {\r\n\t\r\n\t\t\t\tvar loaded = 0;\r\n\t\r\n\t\t\t\tvar loadTexture = function ( i ) {\r\n\t\r\n\t\t\t\t\tloader.load( url[ i ], function ( buffer ) {\r\n\t\r\n\t\t\t\t\t\tvar texDatas = scope._parser( buffer, true );\r\n\t\r\n\t\t\t\t\t\timages[ i ] = {\r\n\t\t\t\t\t\t\twidth: texDatas.width,\r\n\t\t\t\t\t\t\theight: texDatas.height,\r\n\t\t\t\t\t\t\tformat: texDatas.format,\r\n\t\t\t\t\t\t\tmipmaps: texDatas.mipmaps\r\n\t\t\t\t\t\t};\r\n\t\r\n\t\t\t\t\t\tloaded += 1;\r\n\t\r\n\t\t\t\t\t\tif ( loaded === 6 ) {\r\n\t\r\n\t\t\t\t\t\t\tif ( texDatas.mipmapCount === 1 )\r\n\t \t\t\t\t\t\t\ttexture.minFilter = THREE.LinearFilter;\r\n\t\r\n\t\t\t\t\t\t\ttexture.format = texDatas.format;\r\n\t\t\t\t\t\t\ttexture.needsUpdate = true;\r\n\t\r\n\t\t\t\t\t\t\tif ( onLoad ) onLoad( texture );\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t}, onProgress, onError );\r\n\t\r\n\t\t\t\t};\r\n\t\r\n\t\t\t\tfor ( var i = 0, il = url.length; i < il; ++ i ) {\r\n\t\r\n\t\t\t\t\tloadTexture( i );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\t// compressed cubemap texture stored in a single DDS file\r\n\t\r\n\t\t\t\tloader.load( url, function ( buffer ) {\r\n\t\r\n\t\t\t\t\tvar texDatas = scope._parser( buffer, true );\r\n\t\r\n\t\t\t\t\tif ( texDatas.isCubemap ) {\r\n\t\r\n\t\t\t\t\t\tvar faces = texDatas.mipmaps.length / texDatas.mipmapCount;\r\n\t\r\n\t\t\t\t\t\tfor ( var f = 0; f < faces; f ++ ) {\r\n\t\r\n\t\t\t\t\t\t\timages[ f ] = { mipmaps : [] };\r\n\t\r\n\t\t\t\t\t\t\tfor ( var i = 0; i < texDatas.mipmapCount; i ++ ) {\r\n\t\r\n\t\t\t\t\t\t\t\timages[ f ].mipmaps.push( texDatas.mipmaps[ f * texDatas.mipmapCount + i ] );\r\n\t\t\t\t\t\t\t\timages[ f ].format = texDatas.format;\r\n\t\t\t\t\t\t\t\timages[ f ].width = texDatas.width;\r\n\t\t\t\t\t\t\t\timages[ f ].height = texDatas.height;\r\n\t\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\ttexture.image.width = texDatas.width;\r\n\t\t\t\t\t\ttexture.image.height = texDatas.height;\r\n\t\t\t\t\t\ttexture.mipmaps = texDatas.mipmaps;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tif ( texDatas.mipmapCount === 1 ) {\r\n\t\r\n\t\t\t\t\t\ttexture.minFilter = THREE.LinearFilter;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\ttexture.format = texDatas.format;\r\n\t\t\t\t\ttexture.needsUpdate = true;\r\n\t\r\n\t\t\t\t\tif ( onLoad ) onLoad( texture );\r\n\t\r\n\t\t\t\t}, onProgress, onError );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn texture;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetCrossOrigin: function ( value ) {\r\n\t\r\n\t\t\tthis.crossOrigin = value;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/materials/Material.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\t\r\n\tTHREE.Material = function () {\r\n\t\r\n\t\tObject.defineProperty( this, 'id', { value: THREE.MaterialIdCount ++ } );\r\n\t\r\n\t\tthis.uuid = THREE.Math.generateUUID();\r\n\t\r\n\t\tthis.name = '';\r\n\t\tthis.type = 'Material';\r\n\t\r\n\t\tthis.side = THREE.FrontSide;\r\n\t\r\n\t\tthis.opacity = 1;\r\n\t\tthis.transparent = false;\r\n\t\r\n\t\tthis.blending = THREE.NormalBlending;\r\n\t\r\n\t\tthis.blendSrc = THREE.SrcAlphaFactor;\r\n\t\tthis.blendDst = THREE.OneMinusSrcAlphaFactor;\r\n\t\tthis.blendEquation = THREE.AddEquation;\r\n\t\tthis.blendSrcAlpha = null;\r\n\t\tthis.blendDstAlpha = null;\r\n\t\tthis.blendEquationAlpha = null;\r\n\t\r\n\t\tthis.depthFunc = THREE.LessEqualDepth;\r\n\t\tthis.depthTest = true;\r\n\t\tthis.depthWrite = true;\r\n\t\r\n\t\tthis.colorWrite = true;\r\n\t\r\n\t\tthis.precision = null; // override the renderer's default precision for this material\r\n\t\r\n\t\tthis.polygonOffset = false;\r\n\t\tthis.polygonOffsetFactor = 0;\r\n\t\tthis.polygonOffsetUnits = 0;\r\n\t\r\n\t\tthis.alphaTest = 0;\r\n\t\r\n\t\tthis.overdraw = 0; // Overdrawn pixels (typically between 0 and 1) for fixing antialiasing gaps in CanvasRenderer\r\n\t\r\n\t\tthis.visible = true;\r\n\t\r\n\t\tthis._needsUpdate = true;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Material.prototype = {\r\n\t\r\n\t\tconstructor: THREE.Material,\r\n\t\r\n\t\tget needsUpdate () {\r\n\t\r\n\t\t\treturn this._needsUpdate;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tset needsUpdate ( value ) {\r\n\t\r\n\t\t\tif ( value === true ) this.update();\r\n\t\r\n\t\t\tthis._needsUpdate = value;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetValues: function ( values ) {\r\n\t\r\n\t\t\tif ( values === undefined ) return;\r\n\t\r\n\t\t\tfor ( var key in values ) {\r\n\t\r\n\t\t\t\tvar newValue = values[ key ];\r\n\t\r\n\t\t\t\tif ( newValue === undefined ) {\r\n\t\r\n\t\t\t\t\tconsole.warn( \"THREE.Material: '\" + key + \"' parameter is undefined.\" );\r\n\t\t\t\t\tcontinue;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar currentValue = this[ key ];\r\n\t\r\n\t\t\t\tif ( currentValue === undefined ) {\r\n\t\r\n\t\t\t\t\tconsole.warn( \"THREE.\" + this.type + \": '\" + key + \"' is not a property of this material.\" );\r\n\t\t\t\t\tcontinue;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( currentValue instanceof THREE.Color ) {\r\n\t\r\n\t\t\t\t\tcurrentValue.set( newValue );\r\n\t\r\n\t\t\t\t} else if ( currentValue instanceof THREE.Vector3 && newValue instanceof THREE.Vector3 ) {\r\n\t\r\n\t\t\t\t\tcurrentValue.copy( newValue );\r\n\t\r\n\t\t\t\t} else if ( key === 'overdraw' ) {\r\n\t\r\n\t\t\t\t\t// ensure overdraw is backwards-compatible with legacy boolean type\r\n\t\t\t\t\tthis[ key ] = Number( newValue );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tthis[ key ] = newValue;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\ttoJSON: function ( meta ) {\r\n\t\r\n\t\t\tvar data = {\r\n\t\t\t\tmetadata: {\r\n\t\t\t\t\tversion: 4.4,\r\n\t\t\t\t\ttype: 'Material',\r\n\t\t\t\t\tgenerator: 'Material.toJSON'\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\r\n\t\t\t// standard Material serialization\r\n\t\t\tdata.uuid = this.uuid;\r\n\t\t\tdata.type = this.type;\r\n\t\t\tif ( this.name !== '' ) data.name = this.name;\r\n\t\r\n\t\t\tif ( this.color instanceof THREE.Color ) data.color = this.color.getHex();\r\n\t\t\tif ( this.emissive instanceof THREE.Color ) data.emissive = this.emissive.getHex();\r\n\t\t\tif ( this.specular instanceof THREE.Color ) data.specular = this.specular.getHex();\r\n\t\t\tif ( this.shininess !== undefined ) data.shininess = this.shininess;\r\n\t\r\n\t\t\tif ( this.map instanceof THREE.Texture ) data.map = this.map.toJSON( meta ).uuid;\r\n\t\t\tif ( this.alphaMap instanceof THREE.Texture ) data.alphaMap = this.alphaMap.toJSON( meta ).uuid;\r\n\t\t\tif ( this.lightMap instanceof THREE.Texture ) data.lightMap = this.lightMap.toJSON( meta ).uuid;\r\n\t\t\tif ( this.bumpMap instanceof THREE.Texture ) {\r\n\t\r\n\t\t\t\tdata.bumpMap = this.bumpMap.toJSON( meta ).uuid;\r\n\t\t\t\tdata.bumpScale = this.bumpScale;\r\n\t\r\n\t\t\t}\r\n\t\t\tif ( this.normalMap instanceof THREE.Texture ) {\r\n\t\r\n\t\t\t\tdata.normalMap = this.normalMap.toJSON( meta ).uuid;\r\n\t\t\t\tdata.normalScale = this.normalScale; // Removed for now, causes issue in editor ui.js\r\n\t\r\n\t\t\t}\r\n\t\t\tif ( this.displacementMap instanceof THREE.Texture ) {\r\n\t\r\n\t\t\t\tdata.displacementMap = this.displacementMap.toJSON( meta ).uuid;\r\n\t\t\t\tdata.displacementScale = this.displacementScale;\r\n\t\t\t\tdata.displacementBias = this.displacementBias;\r\n\t\r\n\t\t\t}\r\n\t\t\tif ( this.specularMap instanceof THREE.Texture ) data.specularMap = this.specularMap.toJSON( meta ).uuid;\r\n\t\t\tif ( this.envMap instanceof THREE.Texture ) {\r\n\t\r\n\t\t\t\tdata.envMap = this.envMap.toJSON( meta ).uuid;\r\n\t\t\t\tdata.reflectivity = this.reflectivity; // Scale behind envMap\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( this.size !== undefined ) data.size = this.size;\r\n\t\t\tif ( this.sizeAttenuation !== undefined ) data.sizeAttenuation = this.sizeAttenuation;\r\n\t\r\n\t\t\tif ( this.vertexColors !== undefined && this.vertexColors !== THREE.NoColors ) data.vertexColors = this.vertexColors;\r\n\t\t\tif ( this.shading !== undefined && this.shading !== THREE.SmoothShading ) data.shading = this.shading;\r\n\t\t\tif ( this.blending !== undefined && this.blending !== THREE.NormalBlending ) data.blending = this.blending;\r\n\t\t\tif ( this.side !== undefined && this.side !== THREE.FrontSide ) data.side = this.side;\r\n\t\r\n\t\t\tif ( this.opacity < 1 ) data.opacity = this.opacity;\r\n\t\t\tif ( this.transparent === true ) data.transparent = this.transparent;\r\n\t\t\tif ( this.alphaTest > 0 ) data.alphaTest = this.alphaTest;\r\n\t\t\tif ( this.wireframe === true ) data.wireframe = this.wireframe;\r\n\t\t\tif ( this.wireframeLinewidth > 1 ) data.wireframeLinewidth = this.wireframeLinewidth;\r\n\t\r\n\t\t\treturn data;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclone: function () {\r\n\t\r\n\t\t\treturn new this.constructor().copy( this );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopy: function ( source ) {\r\n\t\r\n\t\t\tthis.name = source.name;\r\n\t\r\n\t\t\tthis.side = source.side;\r\n\t\r\n\t\t\tthis.opacity = source.opacity;\r\n\t\t\tthis.transparent = source.transparent;\r\n\t\r\n\t\t\tthis.blending = source.blending;\r\n\t\r\n\t\t\tthis.blendSrc = source.blendSrc;\r\n\t\t\tthis.blendDst = source.blendDst;\r\n\t\t\tthis.blendEquation = source.blendEquation;\r\n\t\t\tthis.blendSrcAlpha = source.blendSrcAlpha;\r\n\t\t\tthis.blendDstAlpha = source.blendDstAlpha;\r\n\t\t\tthis.blendEquationAlpha = source.blendEquationAlpha;\r\n\t\r\n\t\t\tthis.depthFunc = source.depthFunc;\r\n\t\t\tthis.depthTest = source.depthTest;\r\n\t\t\tthis.depthWrite = source.depthWrite;\r\n\t\r\n\t\t\tthis.precision = source.precision;\r\n\t\r\n\t\t\tthis.polygonOffset = source.polygonOffset;\r\n\t\t\tthis.polygonOffsetFactor = source.polygonOffsetFactor;\r\n\t\t\tthis.polygonOffsetUnits = source.polygonOffsetUnits;\r\n\t\r\n\t\t\tthis.alphaTest = source.alphaTest;\r\n\t\r\n\t\t\tthis.overdraw = source.overdraw;\r\n\t\r\n\t\t\tthis.visible = source.visible;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tupdate: function () {\r\n\t\r\n\t\t\tthis.dispatchEvent( { type: 'update' } );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdispose: function () {\r\n\t\r\n\t\t\tthis.dispatchEvent( { type: 'dispose' } );\r\n\t\r\n\t\t},\r\n\t\r\n\t\t// Deprecated\r\n\t\r\n\t\tget wrapAround () {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.' + this.type + ': .wrapAround has been removed.' );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tset wrapAround ( boolean ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.' + this.type + ': .wrapAround has been removed.' );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tget wrapRGB () {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.' + this.type + ': .wrapRGB has been removed.' );\r\n\t\t\treturn new THREE.Color();\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.EventDispatcher.prototype.apply( THREE.Material.prototype );\r\n\t\r\n\tTHREE.MaterialIdCount = 0;\r\n\t\r\n\t// File:src/materials/LineBasicMaterial.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t *\r\n\t * parameters = {\r\n\t *  color: <hex>,\r\n\t *  opacity: <float>,\r\n\t *\r\n\t *  blending: THREE.NormalBlending,\r\n\t *  depthTest: <bool>,\r\n\t *  depthWrite: <bool>,\r\n\t *\r\n\t *  linewidth: <float>,\r\n\t *  linecap: \"round\",\r\n\t *  linejoin: \"round\",\r\n\t *\r\n\t *  vertexColors: <bool>\r\n\t *\r\n\t *  fog: <bool>\r\n\t * }\r\n\t */\r\n\t\r\n\tTHREE.LineBasicMaterial = function ( parameters ) {\r\n\t\r\n\t\tTHREE.Material.call( this );\r\n\t\r\n\t\tthis.type = 'LineBasicMaterial';\r\n\t\r\n\t\tthis.color = new THREE.Color( 0xffffff );\r\n\t\r\n\t\tthis.linewidth = 1;\r\n\t\tthis.linecap = 'round';\r\n\t\tthis.linejoin = 'round';\r\n\t\r\n\t\tthis.vertexColors = THREE.NoColors;\r\n\t\r\n\t\tthis.fog = true;\r\n\t\r\n\t\tthis.setValues( parameters );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.LineBasicMaterial.prototype = Object.create( THREE.Material.prototype );\r\n\tTHREE.LineBasicMaterial.prototype.constructor = THREE.LineBasicMaterial;\r\n\t\r\n\tTHREE.LineBasicMaterial.prototype.copy = function ( source ) {\r\n\t\r\n\t\tTHREE.Material.prototype.copy.call( this, source );\r\n\t\r\n\t\tthis.color.copy( source.color );\r\n\t\r\n\t\tthis.linewidth = source.linewidth;\r\n\t\tthis.linecap = source.linecap;\r\n\t\tthis.linejoin = source.linejoin;\r\n\t\r\n\t\tthis.vertexColors = source.vertexColors;\r\n\t\r\n\t\tthis.fog = source.fog;\r\n\t\r\n\t\treturn this;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/materials/LineDashedMaterial.js\r\n\t\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t *\r\n\t * parameters = {\r\n\t *  color: <hex>,\r\n\t *  opacity: <float>,\r\n\t *\r\n\t *  blending: THREE.NormalBlending,\r\n\t *  depthTest: <bool>,\r\n\t *  depthWrite: <bool>,\r\n\t *\r\n\t *  linewidth: <float>,\r\n\t *\r\n\t *  scale: <float>,\r\n\t *  dashSize: <float>,\r\n\t *  gapSize: <float>,\r\n\t *\r\n\t *  vertexColors: <bool>\r\n\t *\r\n\t *  fog: <bool>\r\n\t * }\r\n\t */\r\n\t\r\n\tTHREE.LineDashedMaterial = function ( parameters ) {\r\n\t\r\n\t\tTHREE.Material.call( this );\r\n\t\r\n\t\tthis.type = 'LineDashedMaterial';\r\n\t\r\n\t\tthis.color = new THREE.Color( 0xffffff );\r\n\t\r\n\t\tthis.linewidth = 1;\r\n\t\r\n\t\tthis.scale = 1;\r\n\t\tthis.dashSize = 3;\r\n\t\tthis.gapSize = 1;\r\n\t\r\n\t\tthis.vertexColors = false;\r\n\t\r\n\t\tthis.fog = true;\r\n\t\r\n\t\tthis.setValues( parameters );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.LineDashedMaterial.prototype = Object.create( THREE.Material.prototype );\r\n\tTHREE.LineDashedMaterial.prototype.constructor = THREE.LineDashedMaterial;\r\n\t\r\n\tTHREE.LineDashedMaterial.prototype.copy = function ( source ) {\r\n\t\r\n\t\tTHREE.Material.prototype.copy.call( this, source );\r\n\t\r\n\t\tthis.color.copy( source.color );\r\n\t\t\r\n\t\tthis.linewidth = source.linewidth;\r\n\t\r\n\t\tthis.scale = source.scale;\r\n\t\tthis.dashSize = source.dashSize;\r\n\t\tthis.gapSize = source.gapSize;\r\n\t\r\n\t\tthis.vertexColors = source.vertexColors;\r\n\t\r\n\t\tthis.fog = source.fog;\r\n\t\r\n\t\treturn this;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/materials/MeshBasicMaterial.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t *\r\n\t * parameters = {\r\n\t *  color: <hex>,\r\n\t *  opacity: <float>,\r\n\t *  map: new THREE.Texture( <Image> ),\r\n\t *\r\n\t *  aoMap: new THREE.Texture( <Image> ),\r\n\t *  aoMapIntensity: <float>\r\n\t *\r\n\t *  specularMap: new THREE.Texture( <Image> ),\r\n\t *\r\n\t *  alphaMap: new THREE.Texture( <Image> ),\r\n\t *\r\n\t *  envMap: new THREE.TextureCube( [posx, negx, posy, negy, posz, negz] ),\r\n\t *  combine: THREE.Multiply,\r\n\t *  reflectivity: <float>,\r\n\t *  refractionRatio: <float>,\r\n\t *\r\n\t *  shading: THREE.SmoothShading,\r\n\t *  blending: THREE.NormalBlending,\r\n\t *  depthTest: <bool>,\r\n\t *  depthWrite: <bool>,\r\n\t *\r\n\t *  wireframe: <boolean>,\r\n\t *  wireframeLinewidth: <float>,\r\n\t *\r\n\t *  vertexColors: THREE.NoColors / THREE.VertexColors / THREE.FaceColors,\r\n\t *\r\n\t *  skinning: <bool>,\r\n\t *  morphTargets: <bool>,\r\n\t *\r\n\t *  fog: <bool>\r\n\t * }\r\n\t */\r\n\t\r\n\tTHREE.MeshBasicMaterial = function ( parameters ) {\r\n\t\r\n\t\tTHREE.Material.call( this );\r\n\t\r\n\t\tthis.type = 'MeshBasicMaterial';\r\n\t\r\n\t\tthis.color = new THREE.Color( 0xffffff ); // emissive\r\n\t\r\n\t\tthis.map = null;\r\n\t\r\n\t\tthis.aoMap = null;\r\n\t\tthis.aoMapIntensity = 1.0;\r\n\t\r\n\t\tthis.specularMap = null;\r\n\t\r\n\t\tthis.alphaMap = null;\r\n\t\r\n\t\tthis.envMap = null;\r\n\t\tthis.combine = THREE.MultiplyOperation;\r\n\t\tthis.reflectivity = 1;\r\n\t\tthis.refractionRatio = 0.98;\r\n\t\r\n\t\tthis.fog = true;\r\n\t\r\n\t\tthis.shading = THREE.SmoothShading;\r\n\t\r\n\t\tthis.wireframe = false;\r\n\t\tthis.wireframeLinewidth = 1;\r\n\t\tthis.wireframeLinecap = 'round';\r\n\t\tthis.wireframeLinejoin = 'round';\r\n\t\r\n\t\tthis.vertexColors = THREE.NoColors;\r\n\t\r\n\t\tthis.skinning = false;\r\n\t\tthis.morphTargets = false;\r\n\t\r\n\t\tthis.setValues( parameters );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.MeshBasicMaterial.prototype = Object.create( THREE.Material.prototype );\r\n\tTHREE.MeshBasicMaterial.prototype.constructor = THREE.MeshBasicMaterial;\r\n\t\r\n\tTHREE.MeshBasicMaterial.prototype.copy = function ( source ) {\r\n\t\t\r\n\t\tTHREE.Material.prototype.copy.call( this, source );\r\n\t\r\n\t\tthis.color.copy( source.color );\r\n\t\r\n\t\tthis.map = source.map;\r\n\t\r\n\t\tthis.aoMap = source.aoMap;\r\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\r\n\t\r\n\t\tthis.specularMap = source.specularMap;\r\n\t\r\n\t\tthis.alphaMap = source.alphaMap;\r\n\t\r\n\t\tthis.envMap = source.envMap;\r\n\t\tthis.combine = source.combine;\r\n\t\tthis.reflectivity = source.reflectivity;\r\n\t\tthis.refractionRatio = source.refractionRatio;\r\n\t\r\n\t\tthis.fog = source.fog;\r\n\t\r\n\t\tthis.shading = source.shading;\r\n\t\r\n\t\tthis.wireframe = source.wireframe;\r\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\r\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\r\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\r\n\t\r\n\t\tthis.vertexColors = source.vertexColors;\r\n\t\r\n\t\tthis.skinning = source.skinning;\r\n\t\tthis.morphTargets = source.morphTargets;\r\n\t\t\r\n\t\treturn this;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/materials/MeshLambertMaterial.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t *\r\n\t * parameters = {\r\n\t *  color: <hex>,\r\n\t *  emissive: <hex>,\r\n\t *  opacity: <float>,\r\n\t *\r\n\t *  map: new THREE.Texture( <Image> ),\r\n\t *\r\n\t *  specularMap: new THREE.Texture( <Image> ),\r\n\t *\r\n\t *  alphaMap: new THREE.Texture( <Image> ),\r\n\t *\r\n\t *  envMap: new THREE.TextureCube( [posx, negx, posy, negy, posz, negz] ),\r\n\t *  combine: THREE.Multiply,\r\n\t *  reflectivity: <float>,\r\n\t *  refractionRatio: <float>,\r\n\t *\r\n\t *  blending: THREE.NormalBlending,\r\n\t *  depthTest: <bool>,\r\n\t *  depthWrite: <bool>,\r\n\t *\r\n\t *  wireframe: <boolean>,\r\n\t *  wireframeLinewidth: <float>,\r\n\t *\r\n\t *  vertexColors: THREE.NoColors / THREE.VertexColors / THREE.FaceColors,\r\n\t *\r\n\t *  skinning: <bool>,\r\n\t *  morphTargets: <bool>,\r\n\t *  morphNormals: <bool>,\r\n\t *\r\n\t *\tfog: <bool>\r\n\t * }\r\n\t */\r\n\t\r\n\tTHREE.MeshLambertMaterial = function ( parameters ) {\r\n\t\r\n\t\tTHREE.Material.call( this );\r\n\t\r\n\t\tthis.type = 'MeshLambertMaterial';\r\n\t\r\n\t\tthis.color = new THREE.Color( 0xffffff ); // diffuse\r\n\t\tthis.emissive = new THREE.Color( 0x000000 );\r\n\t\r\n\t\tthis.map = null;\r\n\t\r\n\t\tthis.specularMap = null;\r\n\t\r\n\t\tthis.alphaMap = null;\r\n\t\r\n\t\tthis.envMap = null;\r\n\t\tthis.combine = THREE.MultiplyOperation;\r\n\t\tthis.reflectivity = 1;\r\n\t\tthis.refractionRatio = 0.98;\r\n\t\r\n\t\tthis.fog = true;\r\n\t\r\n\t\tthis.wireframe = false;\r\n\t\tthis.wireframeLinewidth = 1;\r\n\t\tthis.wireframeLinecap = 'round';\r\n\t\tthis.wireframeLinejoin = 'round';\r\n\t\r\n\t\tthis.vertexColors = THREE.NoColors;\r\n\t\r\n\t\tthis.skinning = false;\r\n\t\tthis.morphTargets = false;\r\n\t\tthis.morphNormals = false;\r\n\t\r\n\t\tthis.setValues( parameters );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.MeshLambertMaterial.prototype = Object.create( THREE.Material.prototype );\r\n\tTHREE.MeshLambertMaterial.prototype.constructor = THREE.MeshLambertMaterial;\r\n\t\r\n\tTHREE.MeshLambertMaterial.prototype.copy = function ( source ) {\r\n\t\r\n\t\tTHREE.Material.prototype.copy.call( this, source );\r\n\t\r\n\t\tthis.color.copy( source.color );\r\n\t\tthis.emissive.copy( source.emissive );\r\n\t\r\n\t\tthis.map = source.map;\r\n\t\r\n\t\tthis.specularMap = source.specularMap;\r\n\t\r\n\t\tthis.alphaMap = source.alphaMap;\r\n\t\r\n\t\tthis.envMap = source.envMap;\r\n\t\tthis.combine = source.combine;\r\n\t\tthis.reflectivity = source.reflectivity;\r\n\t\tthis.refractionRatio = source.refractionRatio;\r\n\t\r\n\t\tthis.fog = source.fog;\r\n\t\r\n\t\tthis.wireframe = source.wireframe;\r\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\r\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\r\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\r\n\t\r\n\t\tthis.vertexColors = source.vertexColors;\r\n\t\r\n\t\tthis.skinning = source.skinning;\r\n\t\tthis.morphTargets = source.morphTargets;\r\n\t\tthis.morphNormals = source.morphNormals;\r\n\t\r\n\t\treturn this;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/materials/MeshPhongMaterial.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t *\r\n\t * parameters = {\r\n\t *  color: <hex>,\r\n\t *  emissive: <hex>,\r\n\t *  specular: <hex>,\r\n\t *  shininess: <float>,\r\n\t *  opacity: <float>,\r\n\t *\r\n\t *  map: new THREE.Texture( <Image> ),\r\n\t *\r\n\t *  lightMap: new THREE.Texture( <Image> ),\r\n\t *  lightMapIntensity: <float>\r\n\t *\r\n\t *  aoMap: new THREE.Texture( <Image> ),\r\n\t *  aoMapIntensity: <float>\r\n\t *\r\n\t *  emissiveMap: new THREE.Texture( <Image> ),\r\n\t *\r\n\t *  bumpMap: new THREE.Texture( <Image> ),\r\n\t *  bumpScale: <float>,\r\n\t *\r\n\t *  normalMap: new THREE.Texture( <Image> ),\r\n\t *  normalScale: <Vector2>,\r\n\t *\r\n\t *  displacementMap: new THREE.Texture( <Image> ),\r\n\t *  displacementScale: <float>,\r\n\t *  displacementBias: <float>,\r\n\t *\r\n\t *  specularMap: new THREE.Texture( <Image> ),\r\n\t *\r\n\t *  alphaMap: new THREE.Texture( <Image> ),\r\n\t *\r\n\t *  envMap: new THREE.TextureCube( [posx, negx, posy, negy, posz, negz] ),\r\n\t *  combine: THREE.Multiply,\r\n\t *  reflectivity: <float>,\r\n\t *  refractionRatio: <float>,\r\n\t *\r\n\t *  shading: THREE.SmoothShading,\r\n\t *  blending: THREE.NormalBlending,\r\n\t *  depthTest: <bool>,\r\n\t *  depthWrite: <bool>,\r\n\t *\r\n\t *  wireframe: <boolean>,\r\n\t *  wireframeLinewidth: <float>,\r\n\t *\r\n\t *  vertexColors: THREE.NoColors / THREE.VertexColors / THREE.FaceColors,\r\n\t *\r\n\t *  skinning: <bool>,\r\n\t *  morphTargets: <bool>,\r\n\t *  morphNormals: <bool>,\r\n\t *\r\n\t *\tfog: <bool>\r\n\t * }\r\n\t */\r\n\t\r\n\tTHREE.MeshPhongMaterial = function ( parameters ) {\r\n\t\r\n\t\tTHREE.Material.call( this );\r\n\t\r\n\t\tthis.type = 'MeshPhongMaterial';\r\n\t\r\n\t\tthis.color = new THREE.Color( 0xffffff ); // diffuse\r\n\t\tthis.emissive = new THREE.Color( 0x000000 );\r\n\t\tthis.specular = new THREE.Color( 0x111111 );\r\n\t\tthis.shininess = 30;\r\n\t\r\n\t\tthis.metal = false;\r\n\t\r\n\t\tthis.map = null;\r\n\t\r\n\t\tthis.lightMap = null;\r\n\t\tthis.lightMapIntensity = 1.0;\r\n\t\r\n\t\tthis.aoMap = null;\r\n\t\tthis.aoMapIntensity = 1.0;\r\n\t\r\n\t\tthis.emissiveMap = null;\r\n\t\r\n\t\tthis.bumpMap = null;\r\n\t\tthis.bumpScale = 1;\r\n\t\r\n\t\tthis.normalMap = null;\r\n\t\tthis.normalScale = new THREE.Vector2( 1, 1 );\r\n\t\r\n\t\tthis.displacementMap = null;\r\n\t\tthis.displacementScale = 1;\r\n\t\tthis.displacementBias = 0;\r\n\t\r\n\t\tthis.specularMap = null;\r\n\t\r\n\t\tthis.alphaMap = null;\r\n\t\r\n\t\tthis.envMap = null;\r\n\t\tthis.combine = THREE.MultiplyOperation;\r\n\t\tthis.reflectivity = 1;\r\n\t\tthis.refractionRatio = 0.98;\r\n\t\r\n\t\tthis.fog = true;\r\n\t\r\n\t\tthis.shading = THREE.SmoothShading;\r\n\t\r\n\t\tthis.wireframe = false;\r\n\t\tthis.wireframeLinewidth = 1;\r\n\t\tthis.wireframeLinecap = 'round';\r\n\t\tthis.wireframeLinejoin = 'round';\r\n\t\r\n\t\tthis.vertexColors = THREE.NoColors;\r\n\t\r\n\t\tthis.skinning = false;\r\n\t\tthis.morphTargets = false;\r\n\t\tthis.morphNormals = false;\r\n\t\r\n\t\tthis.setValues( parameters );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.MeshPhongMaterial.prototype = Object.create( THREE.Material.prototype );\r\n\tTHREE.MeshPhongMaterial.prototype.constructor = THREE.MeshPhongMaterial;\r\n\t\r\n\tTHREE.MeshPhongMaterial.prototype.copy = function ( source ) {\r\n\t\r\n\t\tTHREE.Material.prototype.copy.call( this, source );\r\n\t\r\n\t\tthis.color.copy( source.color );\r\n\t\tthis.emissive.copy( source.emissive );\r\n\t\tthis.specular.copy( source.specular );\r\n\t\tthis.shininess = source.shininess;\r\n\t\r\n\t\tthis.metal = source.metal;\r\n\t\r\n\t\tthis.map = source.map;\r\n\t\r\n\t\tthis.lightMap = source.lightMap;\r\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\r\n\t\r\n\t\tthis.aoMap = source.aoMap;\r\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\r\n\t\r\n\t\tthis.emissiveMap = source.emissiveMap;\r\n\t\r\n\t\tthis.bumpMap = source.bumpMap;\r\n\t\tthis.bumpScale = source.bumpScale;\r\n\t\r\n\t\tthis.normalMap = source.normalMap;\r\n\t\tthis.normalScale.copy( source.normalScale );\r\n\t\r\n\t\tthis.displacementMap = source.displacementMap;\r\n\t\tthis.displacementScale = source.displacementScale;\r\n\t\tthis.displacementBias = source.displacementBias;\r\n\t\r\n\t\tthis.specularMap = source.specularMap;\r\n\t\r\n\t\tthis.alphaMap = source.alphaMap;\r\n\t\r\n\t\tthis.envMap = source.envMap;\r\n\t\tthis.combine = source.combine;\r\n\t\tthis.reflectivity = source.reflectivity;\r\n\t\tthis.refractionRatio = source.refractionRatio;\r\n\t\r\n\t\tthis.fog = source.fog;\r\n\t\r\n\t\tthis.shading = source.shading;\r\n\t\r\n\t\tthis.wireframe = source.wireframe;\r\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\r\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\r\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\r\n\t\r\n\t\tthis.vertexColors = source.vertexColors;\r\n\t\r\n\t\tthis.skinning = source.skinning;\r\n\t\tthis.morphTargets = source.morphTargets;\r\n\t\tthis.morphNormals = source.morphNormals;\r\n\t\r\n\t\treturn this;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/materials/MeshDepthMaterial.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t *\r\n\t * parameters = {\r\n\t *  opacity: <float>,\r\n\t *\r\n\t *  blending: THREE.NormalBlending,\r\n\t *  depthTest: <bool>,\r\n\t *  depthWrite: <bool>,\r\n\t *\r\n\t *  wireframe: <boolean>,\r\n\t *  wireframeLinewidth: <float>\r\n\t * }\r\n\t */\r\n\t\r\n\tTHREE.MeshDepthMaterial = function ( parameters ) {\r\n\t\r\n\t\tTHREE.Material.call( this );\r\n\t\r\n\t\tthis.type = 'MeshDepthMaterial';\r\n\t\r\n\t\tthis.morphTargets = false;\r\n\t\tthis.wireframe = false;\r\n\t\tthis.wireframeLinewidth = 1;\r\n\t\r\n\t\tthis.setValues( parameters );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.MeshDepthMaterial.prototype = Object.create( THREE.Material.prototype );\r\n\tTHREE.MeshDepthMaterial.prototype.constructor = THREE.MeshDepthMaterial;\r\n\t\r\n\tTHREE.MeshDepthMaterial.prototype.copy = function ( source ) {\r\n\t\r\n\t\tTHREE.Material.prototype.copy.call( this, source );\r\n\t\r\n\t\tthis.wireframe = source.wireframe;\r\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\r\n\t\r\n\t\treturn this;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/materials/MeshNormalMaterial.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t *\r\n\t * parameters = {\r\n\t *  opacity: <float>,\r\n\t *\r\n\t *  shading: THREE.FlatShading,\r\n\t *  blending: THREE.NormalBlending,\r\n\t *  depthTest: <bool>,\r\n\t *  depthWrite: <bool>,\r\n\t *\r\n\t *  wireframe: <boolean>,\r\n\t *  wireframeLinewidth: <float>\r\n\t * }\r\n\t */\r\n\t\r\n\tTHREE.MeshNormalMaterial = function ( parameters ) {\r\n\t\r\n\t\tTHREE.Material.call( this, parameters );\r\n\t\r\n\t\tthis.type = 'MeshNormalMaterial';\r\n\t\r\n\t\tthis.wireframe = false;\r\n\t\tthis.wireframeLinewidth = 1;\r\n\t\r\n\t\tthis.morphTargets = false;\r\n\t\r\n\t\tthis.setValues( parameters );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.MeshNormalMaterial.prototype = Object.create( THREE.Material.prototype );\r\n\tTHREE.MeshNormalMaterial.prototype.constructor = THREE.MeshNormalMaterial;\r\n\t\r\n\tTHREE.MeshNormalMaterial.prototype.copy = function ( source ) {\r\n\t\r\n\t\tTHREE.Material.prototype.copy.call( this, source );\r\n\t\r\n\t\tthis.wireframe = source.wireframe;\r\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\r\n\t\r\n\t\treturn this;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/materials/MultiMaterial.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.MultiMaterial = function ( materials ) {\r\n\t\r\n\t\tthis.uuid = THREE.Math.generateUUID();\r\n\t\r\n\t\tthis.type = 'MultiMaterial';\r\n\t\r\n\t\tthis.materials = materials instanceof Array ? materials : [];\r\n\t\r\n\t\tthis.visible = true;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.MultiMaterial.prototype = {\r\n\t\r\n\t\tconstructor: THREE.MultiMaterial,\r\n\t\r\n\t\ttoJSON: function () {\r\n\t\r\n\t\t\tvar output = {\r\n\t\t\t\tmetadata: {\r\n\t\t\t\t\tversion: 4.2,\r\n\t\t\t\t\ttype: 'material',\r\n\t\t\t\t\tgenerator: 'MaterialExporter'\r\n\t\t\t\t},\r\n\t\t\t\tuuid: this.uuid,\r\n\t\t\t\ttype: this.type,\r\n\t\t\t\tmaterials: []\r\n\t\t\t};\r\n\t\r\n\t\t\tfor ( var i = 0, l = this.materials.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\toutput.materials.push( this.materials[ i ].toJSON() );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\toutput.visible = this.visible;\r\n\t\r\n\t\t\treturn output;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclone: function () {\r\n\t\r\n\t\t\tvar material = new this.constructor();\r\n\t\r\n\t\t\tfor ( var i = 0; i < this.materials.length; i ++ ) {\r\n\t\r\n\t\t\t\tmaterial.materials.push( this.materials[ i ].clone() );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tmaterial.visible = this.visible;\r\n\t\r\n\t\t\treturn material;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// backwards compatibility\r\n\t\r\n\tTHREE.MeshFaceMaterial = THREE.MultiMaterial;\r\n\t\r\n\t// File:src/materials/PointsMaterial.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t *\r\n\t * parameters = {\r\n\t *  color: <hex>,\r\n\t *  opacity: <float>,\r\n\t *  map: new THREE.Texture( <Image> ),\r\n\t *\r\n\t *  size: <float>,\r\n\t *  sizeAttenuation: <bool>,\r\n\t *\r\n\t *  blending: THREE.NormalBlending,\r\n\t *  depthTest: <bool>,\r\n\t *  depthWrite: <bool>,\r\n\t *\r\n\t *  vertexColors: <bool>,\r\n\t *\r\n\t *  fog: <bool>\r\n\t * }\r\n\t */\r\n\t\r\n\tTHREE.PointsMaterial = function ( parameters ) {\r\n\t\r\n\t\tTHREE.Material.call( this );\r\n\t\r\n\t\tthis.type = 'PointsMaterial';\r\n\t\r\n\t\tthis.color = new THREE.Color( 0xffffff );\r\n\t\r\n\t\tthis.map = null;\r\n\t\r\n\t\tthis.size = 1;\r\n\t\tthis.sizeAttenuation = true;\r\n\t\r\n\t\tthis.vertexColors = THREE.NoColors;\r\n\t\r\n\t\tthis.fog = true;\r\n\t\r\n\t\tthis.setValues( parameters );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.PointsMaterial.prototype = Object.create( THREE.Material.prototype );\r\n\tTHREE.PointsMaterial.prototype.constructor = THREE.PointsMaterial;\r\n\t\r\n\tTHREE.PointsMaterial.prototype.copy = function ( source ) {\r\n\t\r\n\t\tTHREE.Material.prototype.copy.call( this, source );\r\n\t\r\n\t\tthis.color.copy( source.color );\r\n\t\r\n\t\tthis.map = source.map;\r\n\t\r\n\t\tthis.size = source.size;\r\n\t\tthis.sizeAttenuation = source.sizeAttenuation;\r\n\t\r\n\t\tthis.vertexColors = source.vertexColors;\r\n\t\r\n\t\tthis.fog = source.fog;\r\n\t\r\n\t\treturn this;\r\n\t\r\n\t};\r\n\t\r\n\t// backwards compatibility\r\n\t\r\n\tTHREE.PointCloudMaterial = function ( parameters ) {\r\n\t\r\n\t\tconsole.warn( 'THREE.PointCloudMaterial has been renamed to THREE.PointsMaterial.' );\r\n\t\treturn new THREE.PointsMaterial( parameters );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.ParticleBasicMaterial = function ( parameters ) {\r\n\t\r\n\t\tconsole.warn( 'THREE.ParticleBasicMaterial has been renamed to THREE.PointsMaterial.' );\r\n\t\treturn new THREE.PointsMaterial( parameters );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.ParticleSystemMaterial = function ( parameters ) {\r\n\t\r\n\t\tconsole.warn( 'THREE.ParticleSystemMaterial has been renamed to THREE.PointsMaterial.' );\r\n\t\treturn new THREE.PointsMaterial( parameters );\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/materials/ShaderMaterial.js\r\n\t\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t *\r\n\t * parameters = {\r\n\t *  defines: { \"label\" : \"value\" },\r\n\t *  uniforms: { \"parameter1\": { type: \"f\", value: 1.0 }, \"parameter2\": { type: \"i\" value2: 2 } },\r\n\t *\r\n\t *  fragmentShader: <string>,\r\n\t *  vertexShader: <string>,\r\n\t *\r\n\t *  shading: THREE.SmoothShading,\r\n\t *  blending: THREE.NormalBlending,\r\n\t *  depthTest: <bool>,\r\n\t *  depthWrite: <bool>,\r\n\t *\r\n\t *  wireframe: <boolean>,\r\n\t *  wireframeLinewidth: <float>,\r\n\t *\r\n\t *  lights: <bool>,\r\n\t *\r\n\t *  vertexColors: THREE.NoColors / THREE.VertexColors / THREE.FaceColors,\r\n\t *\r\n\t *  skinning: <bool>,\r\n\t *  morphTargets: <bool>,\r\n\t *  morphNormals: <bool>,\r\n\t *\r\n\t *\tfog: <bool>\r\n\t * }\r\n\t */\r\n\t\r\n\tTHREE.ShaderMaterial = function ( parameters ) {\r\n\t\r\n\t\tTHREE.Material.call( this );\r\n\t\r\n\t\tthis.type = 'ShaderMaterial';\r\n\t\r\n\t\tthis.defines = {};\r\n\t\tthis.uniforms = {};\r\n\t\r\n\t\tthis.vertexShader = 'void main() {\\n\\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n}';\r\n\t\tthis.fragmentShader = 'void main() {\\n\\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\\n}';\r\n\t\r\n\t\tthis.shading = THREE.SmoothShading;\r\n\t\r\n\t\tthis.linewidth = 1;\r\n\t\r\n\t\tthis.wireframe = false;\r\n\t\tthis.wireframeLinewidth = 1;\r\n\t\r\n\t\tthis.fog = false; // set to use scene fog\r\n\t\r\n\t\tthis.lights = false; // set to use scene lights\r\n\t\r\n\t\tthis.vertexColors = THREE.NoColors; // set to use \"color\" attribute stream\r\n\t\r\n\t\tthis.skinning = false; // set to use skinning attribute streams\r\n\t\r\n\t\tthis.morphTargets = false; // set to use morph targets\r\n\t\tthis.morphNormals = false; // set to use morph normals\r\n\t\r\n\t\tthis.derivatives = false; // set to use derivatives\r\n\t\r\n\t\t// When rendered geometry doesn't include these attributes but the material does,\r\n\t\t// use these default values in WebGL. This avoids errors when buffer data is missing.\r\n\t\tthis.defaultAttributeValues = {\r\n\t\t\t'color': [ 1, 1, 1 ],\r\n\t\t\t'uv': [ 0, 0 ],\r\n\t\t\t'uv2': [ 0, 0 ]\r\n\t\t};\r\n\t\r\n\t\tthis.index0AttributeName = undefined;\r\n\t\r\n\t\tif ( parameters !== undefined ) {\r\n\t\r\n\t\t\tif ( parameters.attributes !== undefined ) {\r\n\t\r\n\t\t\t\tconsole.error( 'THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead.' );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.setValues( parameters );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.ShaderMaterial.prototype = Object.create( THREE.Material.prototype );\r\n\tTHREE.ShaderMaterial.prototype.constructor = THREE.ShaderMaterial;\r\n\t\r\n\tTHREE.ShaderMaterial.prototype.copy = function ( source ) {\r\n\t\r\n\t\tTHREE.Material.prototype.copy.call( this, source );\r\n\t\r\n\t\tthis.fragmentShader = source.fragmentShader;\r\n\t\tthis.vertexShader = source.vertexShader;\r\n\t\r\n\t\tthis.uniforms = THREE.UniformsUtils.clone( source.uniforms );\r\n\t\r\n\t\tthis.attributes = source.attributes;\r\n\t\tthis.defines = source.defines;\r\n\t\r\n\t\tthis.shading = source.shading;\r\n\t\r\n\t\tthis.wireframe = source.wireframe;\r\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\r\n\t\r\n\t\tthis.fog = source.fog;\r\n\t\r\n\t\tthis.lights = source.lights;\r\n\t\r\n\t\tthis.vertexColors = source.vertexColors;\r\n\t\r\n\t\tthis.skinning = source.skinning;\r\n\t\r\n\t\tthis.morphTargets = source.morphTargets;\r\n\t\tthis.morphNormals = source.morphNormals;\r\n\t\r\n\t\tthis.derivatives = source.derivatives;\r\n\t\r\n\t\treturn this;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.ShaderMaterial.prototype.toJSON = function ( meta ) {\r\n\t\r\n\t\tvar data = THREE.Material.prototype.toJSON.call( this, meta );\r\n\t\r\n\t\tdata.uniforms = this.uniforms;\r\n\t\tdata.attributes = this.attributes;\r\n\t\tdata.vertexShader = this.vertexShader;\r\n\t\tdata.fragmentShader = this.fragmentShader;\r\n\t\r\n\t\treturn data;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/materials/RawShaderMaterial.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.RawShaderMaterial = function ( parameters ) {\r\n\t\r\n\t\tTHREE.ShaderMaterial.call( this, parameters );\r\n\t\r\n\t\tthis.type = 'RawShaderMaterial';\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.RawShaderMaterial.prototype = Object.create( THREE.ShaderMaterial.prototype );\r\n\tTHREE.RawShaderMaterial.prototype.constructor = THREE.RawShaderMaterial;\r\n\t// File:src/materials/SpriteMaterial.js\r\n\t\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t *\r\n\t * parameters = {\r\n\t *  color: <hex>,\r\n\t *  opacity: <float>,\r\n\t *  map: new THREE.Texture( <Image> ),\r\n\t *\r\n\t *  blending: THREE.NormalBlending,\r\n\t *  depthTest: <bool>,\r\n\t *  depthWrite: <bool>,\r\n\t *\r\n\t *\tuvOffset: new THREE.Vector2(),\r\n\t *\tuvScale: new THREE.Vector2(),\r\n\t *\r\n\t *  fog: <bool>\r\n\t * }\r\n\t */\r\n\t\r\n\tTHREE.SpriteMaterial = function ( parameters ) {\r\n\t\r\n\t\tTHREE.Material.call( this );\r\n\t\r\n\t\tthis.type = 'SpriteMaterial';\r\n\t\r\n\t\tthis.color = new THREE.Color( 0xffffff );\r\n\t\tthis.map = null;\r\n\t\r\n\t\tthis.rotation = 0;\r\n\t\r\n\t\tthis.fog = false;\r\n\t\r\n\t\t// set parameters\r\n\t\r\n\t\tthis.setValues( parameters );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.SpriteMaterial.prototype = Object.create( THREE.Material.prototype );\r\n\tTHREE.SpriteMaterial.prototype.constructor = THREE.SpriteMaterial;\r\n\t\r\n\tTHREE.SpriteMaterial.prototype.copy = function ( source ) {\r\n\t\r\n\t\tTHREE.Material.prototype.copy.call( this, source );\r\n\t\r\n\t\tthis.color.copy( source.color );\r\n\t\tthis.map = source.map;\r\n\t\r\n\t\tthis.rotation = source.rotation;\r\n\t\r\n\t\tthis.fog = source.fog;\r\n\t\r\n\t\treturn this;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/textures/Texture.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author szimek / https://github.com/szimek/\r\n\t */\r\n\t\r\n\tTHREE.Texture = function ( image, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\r\n\t\r\n\t\tObject.defineProperty( this, 'id', { value: THREE.TextureIdCount ++ } );\r\n\t\r\n\t\tthis.uuid = THREE.Math.generateUUID();\r\n\t\r\n\t\tthis.name = '';\r\n\t\tthis.sourceFile = '';\r\n\t\r\n\t\tthis.image = image !== undefined ? image : THREE.Texture.DEFAULT_IMAGE;\r\n\t\tthis.mipmaps = [];\r\n\t\r\n\t\tthis.mapping = mapping !== undefined ? mapping : THREE.Texture.DEFAULT_MAPPING;\r\n\t\r\n\t\tthis.wrapS = wrapS !== undefined ? wrapS : THREE.ClampToEdgeWrapping;\r\n\t\tthis.wrapT = wrapT !== undefined ? wrapT : THREE.ClampToEdgeWrapping;\r\n\t\r\n\t\tthis.magFilter = magFilter !== undefined ? magFilter : THREE.LinearFilter;\r\n\t\tthis.minFilter = minFilter !== undefined ? minFilter : THREE.LinearMipMapLinearFilter;\r\n\t\r\n\t\tthis.anisotropy = anisotropy !== undefined ? anisotropy : 1;\r\n\t\r\n\t\tthis.format = format !== undefined ? format : THREE.RGBAFormat;\r\n\t\tthis.type = type !== undefined ? type : THREE.UnsignedByteType;\r\n\t\r\n\t\tthis.offset = new THREE.Vector2( 0, 0 );\r\n\t\tthis.repeat = new THREE.Vector2( 1, 1 );\r\n\t\r\n\t\tthis.generateMipmaps = true;\r\n\t\tthis.premultiplyAlpha = false;\r\n\t\tthis.flipY = true;\r\n\t\tthis.unpackAlignment = 4; // valid values: 1, 2, 4, 8 (see http://www.khronos.org/opengles/sdk/docs/man/xhtml/glPixelStorei.xml)\r\n\t\r\n\t\tthis.version = 0;\r\n\t\tthis.onUpdate = null;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Texture.DEFAULT_IMAGE = undefined;\r\n\tTHREE.Texture.DEFAULT_MAPPING = THREE.UVMapping;\r\n\t\r\n\tTHREE.Texture.prototype = {\r\n\t\r\n\t\tconstructor: THREE.Texture,\r\n\t\r\n\t\tset needsUpdate ( value ) {\r\n\t\r\n\t\t\tif ( value === true ) this.version ++;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclone: function () {\r\n\t\r\n\t\t\treturn new this.constructor().copy( this );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopy: function ( source ) {\r\n\t\r\n\t\t\tthis.image = source.image;\r\n\t\t\tthis.mipmaps = source.mipmaps.slice( 0 );\r\n\t\r\n\t\t\tthis.mapping = source.mapping;\r\n\t\r\n\t\t\tthis.wrapS = source.wrapS;\r\n\t\t\tthis.wrapT = source.wrapT;\r\n\t\r\n\t\t\tthis.magFilter = source.magFilter;\r\n\t\t\tthis.minFilter = source.minFilter;\r\n\t\r\n\t\t\tthis.anisotropy = source.anisotropy;\r\n\t\r\n\t\t\tthis.format = source.format;\r\n\t\t\tthis.type = source.type;\r\n\t\r\n\t\t\tthis.offset.copy( source.offset );\r\n\t\t\tthis.repeat.copy( source.repeat );\r\n\t\r\n\t\t\tthis.generateMipmaps = source.generateMipmaps;\r\n\t\t\tthis.premultiplyAlpha = source.premultiplyAlpha;\r\n\t\t\tthis.flipY = source.flipY;\r\n\t\t\tthis.unpackAlignment = source.unpackAlignment;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\ttoJSON: function ( meta ) {\r\n\t\r\n\t\t\tif ( meta.textures[ this.uuid ] !== undefined ) {\r\n\t\r\n\t\t\t\treturn meta.textures[ this.uuid ];\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tfunction getDataURL( image ) {\r\n\t\r\n\t\t\t\tvar canvas;\r\n\t\r\n\t\t\t\tif ( image.toDataURL !== undefined ) {\r\n\t\r\n\t\t\t\t\tcanvas = image;\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tcanvas = document.createElement( 'canvas' );\r\n\t\t\t\t\tcanvas.width = image.width;\r\n\t\t\t\t\tcanvas.height = image.height;\r\n\t\r\n\t\t\t\t\tcanvas.getContext( '2d' ).drawImage( image, 0, 0, image.width, image.height );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( canvas.width > 2048 || canvas.height > 2048 ) {\r\n\t\r\n\t\t\t\t\treturn canvas.toDataURL( 'image/jpeg', 0.6 );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\treturn canvas.toDataURL( 'image/png' );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar output = {\r\n\t\t\t\tmetadata: {\r\n\t\t\t\t\tversion: 4.4,\r\n\t\t\t\t\ttype: 'Texture',\r\n\t\t\t\t\tgenerator: 'Texture.toJSON'\r\n\t\t\t\t},\r\n\t\r\n\t\t\t\tuuid: this.uuid,\r\n\t\t\t\tname: this.name,\r\n\t\r\n\t\t\t\tmapping: this.mapping,\r\n\t\r\n\t\t\t\trepeat: [ this.repeat.x, this.repeat.y ],\r\n\t\t\t\toffset: [ this.offset.x, this.offset.y ],\r\n\t\t\t\twrap: [ this.wrapS, this.wrapT ],\r\n\t\r\n\t\t\t\tminFilter: this.minFilter,\r\n\t\t\t\tmagFilter: this.magFilter,\r\n\t\t\t\tanisotropy: this.anisotropy\r\n\t\t\t};\r\n\t\r\n\t\t\tif ( this.image !== undefined ) {\r\n\t\r\n\t\t\t\t// TODO: Move to THREE.Image\r\n\t\r\n\t\t\t\tvar image = this.image;\r\n\t\r\n\t\t\t\tif ( image.uuid === undefined ) {\r\n\t\r\n\t\t\t\t\timage.uuid = THREE.Math.generateUUID(); // UGH\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( meta.images[ image.uuid ] === undefined ) {\r\n\t\r\n\t\t\t\t\tmeta.images[ image.uuid ] = {\r\n\t\t\t\t\t\tuuid: image.uuid,\r\n\t\t\t\t\t\turl: getDataURL( image )\r\n\t\t\t\t\t};\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\toutput.image = image.uuid;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tmeta.textures[ this.uuid ] = output;\r\n\t\r\n\t\t\treturn output;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdispose: function () {\r\n\t\r\n\t\t\tthis.dispatchEvent( { type: 'dispose' } );\r\n\t\r\n\t\t},\r\n\t\r\n\t\ttransformUv: function ( uv ) {\r\n\t\r\n\t\t\tif ( this.mapping !== THREE.UVMapping )  return;\r\n\t\r\n\t\t\tuv.multiply( this.repeat );\r\n\t\t\tuv.add( this.offset );\r\n\t\r\n\t\t\tif ( uv.x < 0 || uv.x > 1 ) {\r\n\t\r\n\t\t\t\tswitch ( this.wrapS ) {\r\n\t\r\n\t\t\t\t\tcase THREE.RepeatWrapping:\r\n\t\r\n\t\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase THREE.ClampToEdgeWrapping:\r\n\t\r\n\t\t\t\t\t\tuv.x = uv.x < 0 ? 0 : 1;\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase THREE.MirroredRepeatWrapping:\r\n\t\r\n\t\t\t\t\t\tif ( Math.abs( Math.floor( uv.x ) % 2 ) === 1 ) {\r\n\t\r\n\t\t\t\t\t\t\tuv.x = Math.ceil( uv.x ) - uv.x;\r\n\t\r\n\t\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( uv.y < 0 || uv.y > 1 ) {\r\n\t\r\n\t\t\t\tswitch ( this.wrapT ) {\r\n\t\r\n\t\t\t\t\tcase THREE.RepeatWrapping:\r\n\t\r\n\t\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase THREE.ClampToEdgeWrapping:\r\n\t\r\n\t\t\t\t\t\tuv.y = uv.y < 0 ? 0 : 1;\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase THREE.MirroredRepeatWrapping:\r\n\t\r\n\t\t\t\t\t\tif ( Math.abs( Math.floor( uv.y ) % 2 ) === 1 ) {\r\n\t\r\n\t\t\t\t\t\t\tuv.y = Math.ceil( uv.y ) - uv.y;\r\n\t\r\n\t\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( this.flipY ) {\r\n\t\r\n\t\t\t\tuv.y = 1 - uv.y;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.EventDispatcher.prototype.apply( THREE.Texture.prototype );\r\n\t\r\n\tTHREE.TextureIdCount = 0;\r\n\t\r\n\t// File:src/textures/CanvasTexture.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.CanvasTexture = function ( canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\r\n\t\r\n\t\tTHREE.Texture.call( this, canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\r\n\t\r\n\t\tthis.needsUpdate = true;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.CanvasTexture.prototype = Object.create( THREE.Texture.prototype );\r\n\tTHREE.CanvasTexture.prototype.constructor = THREE.CanvasTexture;\r\n\t\r\n\t// File:src/textures/CubeTexture.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.CubeTexture = function ( images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\r\n\t\r\n\t\tmapping = mapping !== undefined ? mapping : THREE.CubeReflectionMapping;\r\n\t\r\n\t\tTHREE.Texture.call( this, images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\r\n\t\r\n\t\tthis.images = images;\r\n\t\tthis.flipY = false;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.CubeTexture.prototype = Object.create( THREE.Texture.prototype );\r\n\tTHREE.CubeTexture.prototype.constructor = THREE.CubeTexture;\r\n\t\r\n\tTHREE.CubeTexture.prototype.copy = function ( source ) {\r\n\t\r\n\t\tTHREE.Texture.prototype.copy.call( this, source );\r\n\t\t\r\n\t\tthis.images = source.images;\r\n\t\t\r\n\t\treturn this;\r\n\t\r\n\t};\r\n\t// File:src/textures/CompressedTexture.js\r\n\t\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\t\r\n\tTHREE.CompressedTexture = function ( mipmaps, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy ) {\r\n\t\r\n\t\tTHREE.Texture.call( this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\r\n\t\r\n\t\tthis.image = { width: width, height: height };\r\n\t\tthis.mipmaps = mipmaps;\r\n\t\r\n\t\t// no flipping for cube textures\r\n\t\t// (also flipping doesn't work for compressed textures )\r\n\t\r\n\t\tthis.flipY = false;\r\n\t\r\n\t\t// can't generate mipmaps for compressed textures\r\n\t\t// mips must be embedded in DDS files\r\n\t\r\n\t\tthis.generateMipmaps = false;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.CompressedTexture.prototype = Object.create( THREE.Texture.prototype );\r\n\tTHREE.CompressedTexture.prototype.constructor = THREE.CompressedTexture;\r\n\t\r\n\t// File:src/textures/DataTexture.js\r\n\t\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\t\r\n\tTHREE.DataTexture = function ( data, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy ) {\r\n\t\r\n\t\tTHREE.Texture.call( this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\r\n\t\r\n\t\tthis.image = { data: data, width: width, height: height };\r\n\t\r\n\t\tthis.magFilter = magFilter !== undefined ? magFilter : THREE.NearestFilter;\r\n\t\tthis.minFilter = minFilter !== undefined ? minFilter : THREE.NearestFilter;\r\n\t\t\r\n\t\tthis.flipY = false;\r\n\t\tthis.generateMipmaps  = false;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.DataTexture.prototype = Object.create( THREE.Texture.prototype );\r\n\tTHREE.DataTexture.prototype.constructor = THREE.DataTexture;\r\n\t\r\n\t// File:src/textures/VideoTexture.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.VideoTexture = function ( video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\r\n\t\r\n\t\tTHREE.Texture.call( this, video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\r\n\t\r\n\t\tthis.generateMipmaps = false;\r\n\t\r\n\t\tvar scope = this;\r\n\t\r\n\t\tvar update = function () {\r\n\t\r\n\t\t\trequestAnimationFrame( update );\r\n\t\r\n\t\t\tif ( video.readyState === video.HAVE_ENOUGH_DATA ) {\r\n\t\r\n\t\t\t\tscope.needsUpdate = true;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t\tupdate();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.VideoTexture.prototype = Object.create( THREE.Texture.prototype );\r\n\tTHREE.VideoTexture.prototype.constructor = THREE.VideoTexture;\r\n\t\r\n\t// File:src/objects/Group.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.Group = function () {\r\n\t\r\n\t\tTHREE.Object3D.call( this );\r\n\t\r\n\t\tthis.type = 'Group';\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Group.prototype = Object.create( THREE.Object3D.prototype );\r\n\tTHREE.Group.prototype.constructor = THREE.Group;\r\n\t// File:src/objects/Points.js\r\n\t\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\t\r\n\tTHREE.Points = function ( geometry, material ) {\r\n\t\r\n\t\tTHREE.Object3D.call( this );\r\n\t\r\n\t\tthis.type = 'Points';\r\n\t\r\n\t\tthis.geometry = geometry !== undefined ? geometry : new THREE.Geometry();\r\n\t\tthis.material = material !== undefined ? material : new THREE.PointsMaterial( { color: Math.random() * 0xffffff } );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Points.prototype = Object.create( THREE.Object3D.prototype );\r\n\tTHREE.Points.prototype.constructor = THREE.Points;\r\n\t\r\n\tTHREE.Points.prototype.raycast = ( function () {\r\n\t\r\n\t\tvar inverseMatrix = new THREE.Matrix4();\r\n\t\tvar ray = new THREE.Ray();\r\n\t\r\n\t\treturn function raycast( raycaster, intersects ) {\r\n\t\r\n\t\t\tvar object = this;\r\n\t\t\tvar geometry = object.geometry;\r\n\t\t\tvar threshold = raycaster.params.Points.threshold;\r\n\t\r\n\t\t\tinverseMatrix.getInverse( this.matrixWorld );\r\n\t\t\tray.copy( raycaster.ray ).applyMatrix4( inverseMatrix );\r\n\t\r\n\t\t\tif ( geometry.boundingBox !== null ) {\r\n\t\r\n\t\t\t\tif ( ray.isIntersectionBox( geometry.boundingBox ) === false ) {\r\n\t\r\n\t\t\t\t\treturn;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar localThreshold = threshold / ( ( this.scale.x + this.scale.y + this.scale.z ) / 3 );\r\n\t\t\tvar localThresholdSq = localThreshold * localThreshold;\r\n\t\t\tvar position = new THREE.Vector3();\r\n\t\r\n\t\t\tfunction testPoint( point, index ) {\r\n\t\r\n\t\t\t\tvar rayPointDistanceSq = ray.distanceSqToPoint( point );\r\n\t\r\n\t\t\t\tif ( rayPointDistanceSq < localThresholdSq ) {\r\n\t\r\n\t\t\t\t\tvar intersectPoint = ray.closestPointToPoint( point );\r\n\t\t\t\t\tintersectPoint.applyMatrix4( object.matrixWorld );\r\n\t\r\n\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( intersectPoint );\r\n\t\r\n\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) return;\r\n\t\r\n\t\t\t\t\tintersects.push( {\r\n\t\r\n\t\t\t\t\t\tdistance: distance,\r\n\t\t\t\t\t\tdistanceToRay: Math.sqrt( rayPointDistanceSq ),\r\n\t\t\t\t\t\tpoint: intersectPoint.clone(),\r\n\t\t\t\t\t\tindex: index,\r\n\t\t\t\t\t\tface: null,\r\n\t\t\t\t\t\tobject: object\r\n\t\r\n\t\t\t\t\t} );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( geometry instanceof THREE.BufferGeometry ) {\r\n\t\r\n\t\t\t\tvar index = geometry.index;\r\n\t\t\t\tvar attributes = geometry.attributes;\r\n\t\t\t\tvar positions = attributes.position.array;\r\n\t\r\n\t\t\t\tif ( index !== null ) {\r\n\t\r\n\t\t\t\t\tvar indices = index.array;\r\n\t\r\n\t\t\t\t\tfor ( var i = 0, il = indices.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\t\t\tvar a = indices[ i ];\r\n\t\r\n\t\t\t\t\t\tposition.fromArray( positions, a * 3 );\r\n\t\r\n\t\t\t\t\t\ttestPoint( position, a );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tfor ( var i = 0, l = positions.length / 3; i < l; i ++ ) {\r\n\t\r\n\t\t\t\t\t\tposition.fromArray( positions, i * 3 );\r\n\t\r\n\t\t\t\t\t\ttestPoint( position, i );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tvar vertices = geometry.vertices;\r\n\t\r\n\t\t\t\tfor ( var i = 0, l = vertices.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\t\ttestPoint( vertices[ i ], i );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t}() );\r\n\t\r\n\tTHREE.Points.prototype.clone = function () {\r\n\t\r\n\t\treturn new this.constructor( this.geometry, this.material ).copy( this );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Points.prototype.toJSON = function ( meta ) {\r\n\t\r\n\t\tvar data = THREE.Object3D.prototype.toJSON.call( this, meta );\r\n\t\r\n\t\t// only serialize if not in meta geometries cache\r\n\t\tif ( meta.geometries[ this.geometry.uuid ] === undefined ) {\r\n\t\r\n\t\t\tmeta.geometries[ this.geometry.uuid ] = this.geometry.toJSON();\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// only serialize if not in meta materials cache\r\n\t\tif ( meta.materials[ this.material.uuid ] === undefined ) {\r\n\t\r\n\t\t\tmeta.materials[ this.material.uuid ] = this.material.toJSON();\r\n\t\r\n\t\t}\r\n\t\r\n\t\tdata.object.geometry = this.geometry.uuid;\r\n\t\tdata.object.material = this.material.uuid;\r\n\t\r\n\t\treturn data;\r\n\t\r\n\t};\r\n\t\r\n\t// Backwards compatibility\r\n\t\r\n\tTHREE.PointCloud = function ( geometry, material ) {\r\n\t\r\n\t\tconsole.warn( 'THREE.PointCloud has been renamed to THREE.Points.' );\r\n\t\treturn new THREE.Points( geometry, material );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.ParticleSystem = function ( geometry, material ) {\r\n\t\r\n\t\tconsole.warn( 'THREE.ParticleSystem has been renamed to THREE.Points.' );\r\n\t\treturn new THREE.Points( geometry, material );\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/objects/Line.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.Line = function ( geometry, material, mode ) {\r\n\t\r\n\t\tif ( mode === 1 ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.Line: parameter THREE.LinePieces no longer supported. Created THREE.LineSegments instead.' );\r\n\t\t\treturn new THREE.LineSegments( geometry, material );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tTHREE.Object3D.call( this );\r\n\t\r\n\t\tthis.type = 'Line';\r\n\t\r\n\t\tthis.geometry = geometry !== undefined ? geometry : new THREE.Geometry();\r\n\t\tthis.material = material !== undefined ? material : new THREE.LineBasicMaterial( { color: Math.random() * 0xffffff } );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Line.prototype = Object.create( THREE.Object3D.prototype );\r\n\tTHREE.Line.prototype.constructor = THREE.Line;\r\n\t\r\n\tTHREE.Line.prototype.raycast = ( function () {\r\n\t\r\n\t\tvar inverseMatrix = new THREE.Matrix4();\r\n\t\tvar ray = new THREE.Ray();\r\n\t\tvar sphere = new THREE.Sphere();\r\n\t\r\n\t\treturn function raycast( raycaster, intersects ) {\r\n\t\r\n\t\t\tvar precision = raycaster.linePrecision;\r\n\t\t\tvar precisionSq = precision * precision;\r\n\t\r\n\t\t\tvar geometry = this.geometry;\r\n\t\r\n\t\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\r\n\t\r\n\t\t\t// Checking boundingSphere distance to ray\r\n\t\r\n\t\t\tsphere.copy( geometry.boundingSphere );\r\n\t\t\tsphere.applyMatrix4( this.matrixWorld );\r\n\t\r\n\t\t\tif ( raycaster.ray.isIntersectionSphere( sphere ) === false ) {\r\n\t\r\n\t\t\t\treturn;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tinverseMatrix.getInverse( this.matrixWorld );\r\n\t\t\tray.copy( raycaster.ray ).applyMatrix4( inverseMatrix );\r\n\t\r\n\t\t\tvar vStart = new THREE.Vector3();\r\n\t\t\tvar vEnd = new THREE.Vector3();\r\n\t\t\tvar interSegment = new THREE.Vector3();\r\n\t\t\tvar interRay = new THREE.Vector3();\r\n\t\t\tvar step = this instanceof THREE.LineSegments ? 2 : 1;\r\n\t\r\n\t\t\tif ( geometry instanceof THREE.BufferGeometry ) {\r\n\t\r\n\t\t\t\tvar index = geometry.index;\r\n\t\t\t\tvar attributes = geometry.attributes;\r\n\t\r\n\t\t\t\tif ( index !== null ) {\r\n\t\r\n\t\t\t\t\tvar indices = index.array;\r\n\t\t\t\t\tvar positions = attributes.position.array;\r\n\t\r\n\t\t\t\t\tfor ( var i = 0, l = indices.length - 1; i < l; i += step ) {\r\n\t\r\n\t\t\t\t\t\tvar a = indices[ i ];\r\n\t\t\t\t\t\tvar b = indices[ i + 1 ];\r\n\t\r\n\t\t\t\t\t\tvStart.fromArray( positions, a * 3 );\r\n\t\t\t\t\t\tvEnd.fromArray( positions, b * 3 );\r\n\t\r\n\t\t\t\t\t\tvar distSq = ray.distanceSqToSegment( vStart, vEnd, interRay, interSegment );\r\n\t\r\n\t\t\t\t\t\tif ( distSq > precisionSq ) continue;\r\n\t\r\n\t\t\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\r\n\t\r\n\t\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( interRay );\r\n\t\r\n\t\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\r\n\t\r\n\t\t\t\t\t\tintersects.push( {\r\n\t\r\n\t\t\t\t\t\t\tdistance: distance,\r\n\t\t\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\r\n\t\t\t\t\t\t\t// point: raycaster.ray.at( distance ),\r\n\t\t\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\r\n\t\t\t\t\t\t\tindex: i,\r\n\t\t\t\t\t\t\tface: null,\r\n\t\t\t\t\t\t\tfaceIndex: null,\r\n\t\t\t\t\t\t\tobject: this\r\n\t\r\n\t\t\t\t\t\t} );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tvar positions = attributes.position.array;\r\n\t\r\n\t\t\t\t\tfor ( var i = 0, l = positions.length / 3 - 1; i < l; i += step ) {\r\n\t\r\n\t\t\t\t\t\tvStart.fromArray( positions, 3 * i );\r\n\t\t\t\t\t\tvEnd.fromArray( positions, 3 * i + 3 );\r\n\t\r\n\t\t\t\t\t\tvar distSq = ray.distanceSqToSegment( vStart, vEnd, interRay, interSegment );\r\n\t\r\n\t\t\t\t\t\tif ( distSq > precisionSq ) continue;\r\n\t\r\n\t\t\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\r\n\t\r\n\t\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( interRay );\r\n\t\r\n\t\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\r\n\t\r\n\t\t\t\t\t\tintersects.push( {\r\n\t\r\n\t\t\t\t\t\t\tdistance: distance,\r\n\t\t\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\r\n\t\t\t\t\t\t\t// point: raycaster.ray.at( distance ),\r\n\t\t\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\r\n\t\t\t\t\t\t\tindex: i,\r\n\t\t\t\t\t\t\tface: null,\r\n\t\t\t\t\t\t\tfaceIndex: null,\r\n\t\t\t\t\t\t\tobject: this\r\n\t\r\n\t\t\t\t\t\t} );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t} else if ( geometry instanceof THREE.Geometry ) {\r\n\t\r\n\t\t\t\tvar vertices = geometry.vertices;\r\n\t\t\t\tvar nbVertices = vertices.length;\r\n\t\r\n\t\t\t\tfor ( var i = 0; i < nbVertices - 1; i += step ) {\r\n\t\r\n\t\t\t\t\tvar distSq = ray.distanceSqToSegment( vertices[ i ], vertices[ i + 1 ], interRay, interSegment );\r\n\t\r\n\t\t\t\t\tif ( distSq > precisionSq ) continue;\r\n\t\r\n\t\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\r\n\t\r\n\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( interRay );\r\n\t\r\n\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\r\n\t\r\n\t\t\t\t\tintersects.push( {\r\n\t\r\n\t\t\t\t\t\tdistance: distance,\r\n\t\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\r\n\t\t\t\t\t\t// point: raycaster.ray.at( distance ),\r\n\t\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\r\n\t\t\t\t\t\tindex: i,\r\n\t\t\t\t\t\tface: null,\r\n\t\t\t\t\t\tfaceIndex: null,\r\n\t\t\t\t\t\tobject: this\r\n\t\r\n\t\t\t\t\t} );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t}() );\r\n\t\r\n\tTHREE.Line.prototype.clone = function () {\r\n\t\r\n\t\treturn new this.constructor( this.geometry, this.material ).copy( this );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Line.prototype.toJSON = function ( meta ) {\r\n\t\r\n\t\tvar data = THREE.Object3D.prototype.toJSON.call( this, meta );\r\n\t\r\n\t\t// only serialize if not in meta geometries cache\r\n\t\tif ( meta.geometries[ this.geometry.uuid ] === undefined ) {\r\n\t\r\n\t\t\tmeta.geometries[ this.geometry.uuid ] = this.geometry.toJSON();\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// only serialize if not in meta materials cache\r\n\t\tif ( meta.materials[ this.material.uuid ] === undefined ) {\r\n\t\r\n\t\t\tmeta.materials[ this.material.uuid ] = this.material.toJSON();\r\n\t\r\n\t\t}\r\n\t\r\n\t\tdata.object.geometry = this.geometry.uuid;\r\n\t\tdata.object.material = this.material.uuid;\r\n\t\r\n\t\treturn data;\r\n\t\r\n\t};\r\n\t\r\n\t// DEPRECATED\r\n\t\r\n\tTHREE.LineStrip = 0;\r\n\tTHREE.LinePieces = 1;\r\n\t\r\n\t// File:src/objects/LineSegments.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.LineSegments = function ( geometry, material ) {\r\n\t\r\n\t\tTHREE.Line.call( this, geometry, material );\r\n\t\r\n\t\tthis.type = 'LineSegments';\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.LineSegments.prototype = Object.create( THREE.Line.prototype );\r\n\tTHREE.LineSegments.prototype.constructor = THREE.LineSegments;\r\n\t\r\n\t// File:src/objects/Mesh.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author mikael emtinger / http://gomo.se/\r\n\t * @author jonobr1 / http://jonobr1.com/\r\n\t */\r\n\t\r\n\tTHREE.Mesh = function ( geometry, material ) {\r\n\t\r\n\t\tTHREE.Object3D.call( this );\r\n\t\r\n\t\tthis.type = 'Mesh';\r\n\t\r\n\t\tthis.geometry = geometry !== undefined ? geometry : new THREE.Geometry();\r\n\t\tthis.material = material !== undefined ? material : new THREE.MeshBasicMaterial( { color: Math.random() * 0xffffff } );\r\n\t\r\n\t\tthis.updateMorphTargets();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Mesh.prototype = Object.create( THREE.Object3D.prototype );\r\n\tTHREE.Mesh.prototype.constructor = THREE.Mesh;\r\n\t\r\n\tTHREE.Mesh.prototype.updateMorphTargets = function () {\r\n\t\r\n\t\tif ( this.geometry.morphTargets !== undefined && this.geometry.morphTargets.length > 0 ) {\r\n\t\r\n\t\t\tthis.morphTargetBase = - 1;\r\n\t\t\tthis.morphTargetInfluences = [];\r\n\t\t\tthis.morphTargetDictionary = {};\r\n\t\r\n\t\t\tfor ( var m = 0, ml = this.geometry.morphTargets.length; m < ml; m ++ ) {\r\n\t\r\n\t\t\t\tthis.morphTargetInfluences.push( 0 );\r\n\t\t\t\tthis.morphTargetDictionary[ this.geometry.morphTargets[ m ].name ] = m;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Mesh.prototype.getMorphTargetIndexByName = function ( name ) {\r\n\t\r\n\t\tif ( this.morphTargetDictionary[ name ] !== undefined ) {\r\n\t\r\n\t\t\treturn this.morphTargetDictionary[ name ];\r\n\t\r\n\t\t}\r\n\t\r\n\t\tconsole.warn( 'THREE.Mesh.getMorphTargetIndexByName: morph target ' + name + ' does not exist. Returning 0.' );\r\n\t\r\n\t\treturn 0;\r\n\t\r\n\t};\r\n\t\r\n\t\r\n\tTHREE.Mesh.prototype.raycast = ( function () {\r\n\t\r\n\t\tvar inverseMatrix = new THREE.Matrix4();\r\n\t\tvar ray = new THREE.Ray();\r\n\t\tvar sphere = new THREE.Sphere();\r\n\t\r\n\t\tvar vA = new THREE.Vector3();\r\n\t\tvar vB = new THREE.Vector3();\r\n\t\tvar vC = new THREE.Vector3();\r\n\t\r\n\t\tvar tempA = new THREE.Vector3();\r\n\t\tvar tempB = new THREE.Vector3();\r\n\t\tvar tempC = new THREE.Vector3();\r\n\t\r\n\t\tvar uvA = new THREE.Vector2();\r\n\t\tvar uvB = new THREE.Vector2();\r\n\t\tvar uvC = new THREE.Vector2();\r\n\t\r\n\t\tvar barycoord = new THREE.Vector3();\r\n\t\r\n\t\tvar intersectionPoint = new THREE.Vector3();\r\n\t\tvar intersectionPointWorld = new THREE.Vector3();\r\n\t\r\n\t\tfunction uvIntersection( point, p1, p2, p3, uv1, uv2, uv3 ) {\r\n\t\r\n\t\t\tTHREE.Triangle.barycoordFromPoint( point, p1, p2, p3, barycoord );\r\n\t\r\n\t\t\tuv1.multiplyScalar( barycoord.x );\r\n\t\t\tuv2.multiplyScalar( barycoord.y );\r\n\t\t\tuv3.multiplyScalar( barycoord.z );\r\n\t\r\n\t\t\tuv1.add( uv2 ).add( uv3 );\r\n\t\r\n\t\t\treturn uv1.clone();\r\n\t\r\n\t\t}\r\n\t\r\n\t\treturn function raycast( raycaster, intersects ) {\r\n\t\r\n\t\t\tvar geometry = this.geometry;\r\n\t\t\tvar material = this.material;\r\n\t\r\n\t\t\tif ( material === undefined ) return;\r\n\t\r\n\t\t\t// Checking boundingSphere distance to ray\r\n\t\r\n\t\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\r\n\t\r\n\t\t\tsphere.copy( geometry.boundingSphere );\r\n\t\t\tsphere.applyMatrix4( this.matrixWorld );\r\n\t\r\n\t\t\tif ( raycaster.ray.isIntersectionSphere( sphere ) === false ) {\r\n\t\r\n\t\t\t\treturn;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// Check boundingBox before continuing\r\n\t\r\n\t\t\tinverseMatrix.getInverse( this.matrixWorld );\r\n\t\t\tray.copy( raycaster.ray ).applyMatrix4( inverseMatrix );\r\n\t\r\n\t\t\tif ( geometry.boundingBox !== null ) {\r\n\t\r\n\t\t\t\tif ( ray.isIntersectionBox( geometry.boundingBox ) === false ) {\r\n\t\r\n\t\t\t\t\treturn;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar a, b, c;\r\n\t\r\n\t\t\tif ( geometry instanceof THREE.BufferGeometry ) {\r\n\t\r\n\t\t\t\tvar index = geometry.index;\r\n\t\t\t\tvar attributes = geometry.attributes;\r\n\t\r\n\t\t\t\tif ( index !== null ) {\r\n\t\r\n\t\t\t\t\tvar indices = index.array;\r\n\t\t\t\t\tvar positions = attributes.position.array;\r\n\t\r\n\t\t\t\t\tfor ( var i = 0, l = indices.length; i < l; i += 3 ) {\r\n\t\r\n\t\t\t\t\t\ta = indices[ i ];\r\n\t\t\t\t\t\tb = indices[ i + 1 ];\r\n\t\t\t\t\t\tc = indices[ i + 2 ];\r\n\t\r\n\t\t\t\t\t\tvA.fromArray( positions, a * 3 );\r\n\t\t\t\t\t\tvB.fromArray( positions, b * 3 );\r\n\t\t\t\t\t\tvC.fromArray( positions, c * 3 );\r\n\t\r\n\t\t\t\t\t\tif ( material.side === THREE.BackSide ) {\r\n\t\r\n\t\t\t\t\t\t\tif ( ray.intersectTriangle( vC, vB, vA, true, intersectionPoint ) === null ) continue;\r\n\t\r\n\t\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\t\tif ( ray.intersectTriangle( vA, vB, vC, material.side !== THREE.DoubleSide, intersectionPoint ) === null ) continue;\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tintersectionPointWorld.copy( intersectionPoint );\r\n\t\t\t\t\t\tintersectionPointWorld.applyMatrix4( this.matrixWorld );\r\n\t\r\n\t\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( intersectionPointWorld );\r\n\t\r\n\t\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\r\n\t\r\n\t\t\t\t\t\tvar uv;\r\n\t\r\n\t\t\t\t\t\tif ( attributes.uv !== undefined ) {\r\n\t\r\n\t\t\t\t\t\t\tvar uvs = attributes.uv.array;\r\n\t\t\t\t\t\t\tuvA.fromArray( uvs, a * 2 );\r\n\t\t\t\t\t\t\tuvB.fromArray( uvs, b * 2 );\r\n\t\t\t\t\t\t\tuvC.fromArray( uvs, c * 2 );\r\n\t\t\t\t\t\t\tuv = uvIntersection( intersectionPoint, vA, vB, vC, uvA, uvB, uvC );\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tintersects.push( {\r\n\t\r\n\t\t\t\t\t\t\tdistance: distance,\r\n\t\t\t\t\t\t\tpoint: intersectionPointWorld.clone(),\r\n\t\t\t\t\t\t\tuv: uv,\r\n\t\t\t\t\t\t\tface: new THREE.Face3( a, b, c, THREE.Triangle.normal( vA, vB, vC ) ),\r\n\t\t\t\t\t\t\tfaceIndex: Math.floor( i / 3 ), // triangle number in indices buffer semantics\r\n\t\t\t\t\t\t\tobject: this\r\n\t\r\n\t\t\t\t\t\t} );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tvar positions = attributes.position.array;\r\n\t\r\n\t\t\t\t\tfor ( var i = 0, l = positions.length; i < l; i += 9 ) {\r\n\t\r\n\t\t\t\t\t\tvA.fromArray( positions, i );\r\n\t\t\t\t\t\tvB.fromArray( positions, i + 3 );\r\n\t\t\t\t\t\tvC.fromArray( positions, i + 6 );\r\n\t\r\n\t\t\t\t\t\tif ( material.side === THREE.BackSide ) {\r\n\t\r\n\t\t\t\t\t\t\tif ( ray.intersectTriangle( vC, vB, vA, true, intersectionPoint ) === null ) continue;\r\n\t\r\n\t\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\t\tif ( ray.intersectTriangle( vA, vB, vC, material.side !== THREE.DoubleSide, intersectionPoint ) === null ) continue;\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tintersectionPointWorld.copy( intersectionPoint );\r\n\t\t\t\t\t\tintersectionPointWorld.applyMatrix4( this.matrixWorld );\r\n\t\r\n\t\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( intersectionPointWorld );\r\n\t\r\n\t\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\r\n\t\r\n\t\t\t\t\t\tvar uv;\r\n\t\r\n\t\t\t\t\t\tif ( attributes.uv !== undefined ) {\r\n\t\r\n\t\t\t\t\t\t\tvar uvs = attributes.uv.array;\r\n\t\t\t\t\t\t\tuvA.fromArray( uvs, i );\r\n\t\t\t\t\t\t\tuvB.fromArray( uvs, i + 2 );\r\n\t\t\t\t\t\t\tuvC.fromArray( uvs, i + 4 );\r\n\t\t\t\t\t\t\tuv = uvIntersection( intersectionPoint, vA, vB, vC, uvA, uvB, uvC );\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\ta = i / 3;\r\n\t\t\t\t\t\tb = a + 1;\r\n\t\t\t\t\t\tc = a + 2;\r\n\t\r\n\t\t\t\t\t\tintersects.push( {\r\n\t\r\n\t\t\t\t\t\t\tdistance: distance,\r\n\t\t\t\t\t\t\tpoint: intersectionPointWorld.clone(),\r\n\t\t\t\t\t\t\tuv: uv,\r\n\t\t\t\t\t\t\tface: new THREE.Face3( a, b, c, THREE.Triangle.normal( vA, vB, vC ) ),\r\n\t\t\t\t\t\t\tindex: a, // triangle number in positions buffer semantics\r\n\t\t\t\t\t\t\tobject: this\r\n\t\r\n\t\t\t\t\t\t} );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t} else if ( geometry instanceof THREE.Geometry ) {\r\n\t\r\n\t\t\t\tvar isFaceMaterial = material instanceof THREE.MeshFaceMaterial;\r\n\t\t\t\tvar materials = isFaceMaterial === true ? material.materials : null;\r\n\t\r\n\t\t\t\tvar vertices = geometry.vertices;\r\n\t\t\t\tvar faces = geometry.faces;\r\n\t\r\n\t\t\t\tfor ( var f = 0, fl = faces.length; f < fl; f ++ ) {\r\n\t\r\n\t\t\t\t\tvar face = faces[ f ];\r\n\t\t\t\t\tvar faceMaterial = isFaceMaterial === true ? materials[ face.materialIndex ] : material;\r\n\t\r\n\t\t\t\t\tif ( faceMaterial === undefined ) continue;\r\n\t\r\n\t\t\t\t\ta = vertices[ face.a ];\r\n\t\t\t\t\tb = vertices[ face.b ];\r\n\t\t\t\t\tc = vertices[ face.c ];\r\n\t\r\n\t\t\t\t\tif ( faceMaterial.morphTargets === true ) {\r\n\t\r\n\t\t\t\t\t\tvar morphTargets = geometry.morphTargets;\r\n\t\t\t\t\t\tvar morphInfluences = this.morphTargetInfluences;\r\n\t\r\n\t\t\t\t\t\tvA.set( 0, 0, 0 );\r\n\t\t\t\t\t\tvB.set( 0, 0, 0 );\r\n\t\t\t\t\t\tvC.set( 0, 0, 0 );\r\n\t\r\n\t\t\t\t\t\tfor ( var t = 0, tl = morphTargets.length; t < tl; t ++ ) {\r\n\t\r\n\t\t\t\t\t\t\tvar influence = morphInfluences[ t ];\r\n\t\r\n\t\t\t\t\t\t\tif ( influence === 0 ) continue;\r\n\t\r\n\t\t\t\t\t\t\tvar targets = morphTargets[ t ].vertices;\r\n\t\r\n\t\t\t\t\t\t\tvA.addScaledVector( tempA.subVectors( targets[ face.a ], a ), influence );\r\n\t\t\t\t\t\t\tvB.addScaledVector( tempB.subVectors( targets[ face.b ], b ), influence );\r\n\t\t\t\t\t\t\tvC.addScaledVector( tempC.subVectors( targets[ face.c ], c ), influence );\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tvA.add( a );\r\n\t\t\t\t\t\tvB.add( b );\r\n\t\t\t\t\t\tvC.add( c );\r\n\t\r\n\t\t\t\t\t\ta = vA;\r\n\t\t\t\t\t\tb = vB;\r\n\t\t\t\t\t\tc = vC;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tif ( faceMaterial.side === THREE.BackSide ) {\r\n\t\r\n\t\t\t\t\t\tif ( ray.intersectTriangle( c, b, a, true, intersectionPoint ) === null ) continue;\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\tif ( ray.intersectTriangle( a, b, c, faceMaterial.side !== THREE.DoubleSide, intersectionPoint ) === null ) continue;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tintersectionPointWorld.copy( intersectionPoint );\r\n\t\t\t\t\tintersectionPointWorld.applyMatrix4( this.matrixWorld );\r\n\t\r\n\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( intersectionPointWorld );\r\n\t\r\n\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\r\n\t\r\n\t\t\t\t\tvar uv;\r\n\t\r\n\t\t\t\t\tif ( geometry.faceVertexUvs[ 0 ].length > 0 ) {\r\n\t\r\n\t\t\t\t\t\tvar uvs = geometry.faceVertexUvs[ 0 ][ f ];\r\n\t\t\t\t\t\tuvA.copy( uvs[ 0 ] );\r\n\t\t\t\t\t\tuvB.copy( uvs[ 1 ] );\r\n\t\t\t\t\t\tuvC.copy( uvs[ 2 ] );\r\n\t\t\t\t\t\tuv = uvIntersection( intersectionPoint, a, b, c, uvA, uvB, uvC );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tintersects.push( {\r\n\t\r\n\t\t\t\t\t\tdistance: distance,\r\n\t\t\t\t\t\tpoint: intersectionPointWorld.clone(),\r\n\t\t\t\t\t\tuv: uv,\r\n\t\t\t\t\t\tface: face,\r\n\t\t\t\t\t\tfaceIndex: f,\r\n\t\t\t\t\t\tobject: this\r\n\t\r\n\t\t\t\t\t} );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t}() );\r\n\t\r\n\tTHREE.Mesh.prototype.clone = function () {\r\n\t\r\n\t\treturn new this.constructor( this.geometry, this.material ).copy( this );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Mesh.prototype.toJSON = function ( meta ) {\r\n\t\r\n\t\tvar data = THREE.Object3D.prototype.toJSON.call( this, meta );\r\n\t\r\n\t\t// only serialize if not in meta geometries cache\r\n\t\tif ( meta.geometries[ this.geometry.uuid ] === undefined ) {\r\n\t\r\n\t\t\tmeta.geometries[ this.geometry.uuid ] = this.geometry.toJSON( meta );\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// only serialize if not in meta materials cache\r\n\t\tif ( meta.materials[ this.material.uuid ] === undefined ) {\r\n\t\r\n\t\t\tmeta.materials[ this.material.uuid ] = this.material.toJSON( meta );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tdata.object.geometry = this.geometry.uuid;\r\n\t\tdata.object.material = this.material.uuid;\r\n\t\r\n\t\treturn data;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/objects/Bone.js\r\n\t\r\n\t/**\r\n\t * @author mikael emtinger / http://gomo.se/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author ikerr / http://verold.com\r\n\t */\r\n\t\r\n\tTHREE.Bone = function ( skin ) {\r\n\t\r\n\t\tTHREE.Object3D.call( this );\r\n\t\r\n\t\tthis.type = 'Bone';\r\n\t\r\n\t\tthis.skin = skin;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Bone.prototype = Object.create( THREE.Object3D.prototype );\r\n\tTHREE.Bone.prototype.constructor = THREE.Bone;\r\n\t\r\n\tTHREE.Bone.prototype.copy = function ( source ) {\r\n\t\t\r\n\t\tTHREE.Object3D.prototype.copy.call( this, source );\r\n\t\t\r\n\t\tthis.skin = source.skin;\r\n\t\t\r\n\t\treturn this;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/objects/Skeleton.js\r\n\t\r\n\t/**\r\n\t * @author mikael emtinger / http://gomo.se/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author michael guerrero / http://realitymeltdown.com\r\n\t * @author ikerr / http://verold.com\r\n\t */\r\n\t\r\n\tTHREE.Skeleton = function ( bones, boneInverses, useVertexTexture ) {\r\n\t\r\n\t\tthis.useVertexTexture = useVertexTexture !== undefined ? useVertexTexture : true;\r\n\t\r\n\t\tthis.identityMatrix = new THREE.Matrix4();\r\n\t\r\n\t\t// copy the bone array\r\n\t\r\n\t\tbones = bones || [];\r\n\t\r\n\t\tthis.bones = bones.slice( 0 );\r\n\t\r\n\t\t// create a bone texture or an array of floats\r\n\t\r\n\t\tif ( this.useVertexTexture ) {\r\n\t\r\n\t\t\t// layout (1 matrix = 4 pixels)\r\n\t\t\t//      RGBA RGBA RGBA RGBA (=> column1, column2, column3, column4)\r\n\t\t\t//  with  8x8  pixel texture max   16 bones * 4 pixels =  (8 * 8)\r\n\t\t\t//       16x16 pixel texture max   64 bones * 4 pixels = (16 * 16)\r\n\t\t\t//       32x32 pixel texture max  256 bones * 4 pixels = (32 * 32)\r\n\t\t\t//       64x64 pixel texture max 1024 bones * 4 pixels = (64 * 64)\r\n\t\r\n\t\t\t\r\n\t\t\tvar size = Math.sqrt( this.bones.length * 4 ); // 4 pixels needed for 1 matrix\r\n\t\t\tsize = THREE.Math.nextPowerOfTwo( Math.ceil( size ) );\r\n\t\t\tsize = Math.max( size, 4 );\r\n\t\r\n\t\t\tthis.boneTextureWidth = size;\r\n\t\t\tthis.boneTextureHeight = size;\r\n\t\r\n\t\t\tthis.boneMatrices = new Float32Array( this.boneTextureWidth * this.boneTextureHeight * 4 ); // 4 floats per RGBA pixel\r\n\t\t\tthis.boneTexture = new THREE.DataTexture( this.boneMatrices, this.boneTextureWidth, this.boneTextureHeight, THREE.RGBAFormat, THREE.FloatType );\r\n\t\r\n\t\t} else {\r\n\t\r\n\t\t\tthis.boneMatrices = new Float32Array( 16 * this.bones.length );\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// use the supplied bone inverses or calculate the inverses\r\n\t\r\n\t\tif ( boneInverses === undefined ) {\r\n\t\r\n\t\t\tthis.calculateInverses();\r\n\t\r\n\t\t} else {\r\n\t\r\n\t\t\tif ( this.bones.length === boneInverses.length ) {\r\n\t\r\n\t\t\t\tthis.boneInverses = boneInverses.slice( 0 );\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tconsole.warn( 'THREE.Skeleton bonInverses is the wrong length.' );\r\n\t\r\n\t\t\t\tthis.boneInverses = [];\r\n\t\r\n\t\t\t\tfor ( var b = 0, bl = this.bones.length; b < bl; b ++ ) {\r\n\t\r\n\t\t\t\t\tthis.boneInverses.push( new THREE.Matrix4() );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Skeleton.prototype.calculateInverses = function () {\r\n\t\r\n\t\tthis.boneInverses = [];\r\n\t\r\n\t\tfor ( var b = 0, bl = this.bones.length; b < bl; b ++ ) {\r\n\t\r\n\t\t\tvar inverse = new THREE.Matrix4();\r\n\t\r\n\t\t\tif ( this.bones[ b ] ) {\r\n\t\r\n\t\t\t\tinverse.getInverse( this.bones[ b ].matrixWorld );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.boneInverses.push( inverse );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Skeleton.prototype.pose = function () {\r\n\t\r\n\t\tvar bone;\r\n\t\r\n\t\t// recover the bind-time world matrices\r\n\t\r\n\t\tfor ( var b = 0, bl = this.bones.length; b < bl; b ++ ) {\r\n\t\r\n\t\t\tbone = this.bones[ b ];\r\n\t\r\n\t\t\tif ( bone ) {\r\n\t\r\n\t\t\t\tbone.matrixWorld.getInverse( this.boneInverses[ b ] );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// compute the local matrices, positions, rotations and scales\r\n\t\r\n\t\tfor ( var b = 0, bl = this.bones.length; b < bl; b ++ ) {\r\n\t\r\n\t\t\tbone = this.bones[ b ];\r\n\t\r\n\t\t\tif ( bone ) {\r\n\t\r\n\t\t\t\tif ( bone.parent ) {\r\n\t\r\n\t\t\t\t\tbone.matrix.getInverse( bone.parent.matrixWorld );\r\n\t\t\t\t\tbone.matrix.multiply( bone.matrixWorld );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tbone.matrix.copy( bone.matrixWorld );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tbone.matrix.decompose( bone.position, bone.quaternion, bone.scale );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Skeleton.prototype.update = ( function () {\r\n\t\r\n\t\tvar offsetMatrix = new THREE.Matrix4();\r\n\t\r\n\t\treturn function update() {\r\n\t\r\n\t\t\t// flatten bone matrices to array\r\n\t\r\n\t\t\tfor ( var b = 0, bl = this.bones.length; b < bl; b ++ ) {\r\n\t\r\n\t\t\t\t// compute the offset between the current and the original transform\r\n\t\r\n\t\t\t\tvar matrix = this.bones[ b ] ? this.bones[ b ].matrixWorld : this.identityMatrix;\r\n\t\r\n\t\t\t\toffsetMatrix.multiplyMatrices( matrix, this.boneInverses[ b ] );\r\n\t\t\t\toffsetMatrix.flattenToArrayOffset( this.boneMatrices, b * 16 );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( this.useVertexTexture ) {\r\n\t\r\n\t\t\t\tthis.boneTexture.needsUpdate = true;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t} )();\r\n\t\r\n\tTHREE.Skeleton.prototype.clone = function () {\r\n\t\r\n\t\treturn new THREE.Skeleton( this.bones, this.boneInverses, this.useVertexTexture );\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/objects/SkinnedMesh.js\r\n\t\r\n\t/**\r\n\t * @author mikael emtinger / http://gomo.se/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author ikerr / http://verold.com\r\n\t */\r\n\t\r\n\tTHREE.SkinnedMesh = function ( geometry, material, useVertexTexture ) {\r\n\t\r\n\t\tTHREE.Mesh.call( this, geometry, material );\r\n\t\r\n\t\tthis.type = 'SkinnedMesh';\r\n\t\r\n\t\tthis.bindMode = \"attached\";\r\n\t\tthis.bindMatrix = new THREE.Matrix4();\r\n\t\tthis.bindMatrixInverse = new THREE.Matrix4();\r\n\t\r\n\t\t// init bones\r\n\t\r\n\t\t// TODO: remove bone creation as there is no reason (other than\r\n\t\t// convenience) for THREE.SkinnedMesh to do this.\r\n\t\r\n\t\tvar bones = [];\r\n\t\r\n\t\tif ( this.geometry && this.geometry.bones !== undefined ) {\r\n\t\r\n\t\t\tvar bone, gbone;\r\n\t\r\n\t\t\tfor ( var b = 0, bl = this.geometry.bones.length; b < bl; ++ b ) {\r\n\t\r\n\t\t\t\tgbone = this.geometry.bones[ b ];\r\n\t\r\n\t\t\t\tbone = new THREE.Bone( this );\r\n\t\t\t\tbones.push( bone );\r\n\t\r\n\t\t\t\tbone.name = gbone.name;\r\n\t\t\t\tbone.position.fromArray( gbone.pos );\r\n\t\t\t\tbone.quaternion.fromArray( gbone.rotq );\r\n\t\t\t\tif ( gbone.scl !== undefined ) bone.scale.fromArray( gbone.scl );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tfor ( var b = 0, bl = this.geometry.bones.length; b < bl; ++ b ) {\r\n\t\r\n\t\t\t\tgbone = this.geometry.bones[ b ];\r\n\t\r\n\t\t\t\tif ( gbone.parent !== - 1 ) {\r\n\t\r\n\t\t\t\t\tbones[ gbone.parent ].add( bones[ b ] );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tthis.add( bones[ b ] );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.normalizeSkinWeights();\r\n\t\r\n\t\tthis.updateMatrixWorld( true );\r\n\t\tthis.bind( new THREE.Skeleton( bones, undefined, useVertexTexture ), this.matrixWorld );\r\n\t\r\n\t};\r\n\t\r\n\t\r\n\tTHREE.SkinnedMesh.prototype = Object.create( THREE.Mesh.prototype );\r\n\tTHREE.SkinnedMesh.prototype.constructor = THREE.SkinnedMesh;\r\n\t\r\n\tTHREE.SkinnedMesh.prototype.bind = function( skeleton, bindMatrix ) {\r\n\t\r\n\t\tthis.skeleton = skeleton;\r\n\t\r\n\t\tif ( bindMatrix === undefined ) {\r\n\t\r\n\t\t\tthis.updateMatrixWorld( true );\r\n\t\t\t\r\n\t\t\tthis.skeleton.calculateInverses();\r\n\t\r\n\t\t\tbindMatrix = this.matrixWorld;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.bindMatrix.copy( bindMatrix );\r\n\t\tthis.bindMatrixInverse.getInverse( bindMatrix );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.SkinnedMesh.prototype.pose = function () {\r\n\t\r\n\t\tthis.skeleton.pose();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.SkinnedMesh.prototype.normalizeSkinWeights = function () {\r\n\t\r\n\t\tif ( this.geometry instanceof THREE.Geometry ) {\r\n\t\r\n\t\t\tfor ( var i = 0; i < this.geometry.skinIndices.length; i ++ ) {\r\n\t\r\n\t\t\t\tvar sw = this.geometry.skinWeights[ i ];\r\n\t\r\n\t\t\t\tvar scale = 1.0 / sw.lengthManhattan();\r\n\t\r\n\t\t\t\tif ( scale !== Infinity ) {\r\n\t\r\n\t\t\t\t\tsw.multiplyScalar( scale );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tsw.set( 1 ); // this will be normalized by the shader anyway\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t} else {\r\n\t\r\n\t\t\t// skinning weights assumed to be normalized for THREE.BufferGeometry\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.SkinnedMesh.prototype.updateMatrixWorld = function( force ) {\r\n\t\r\n\t\tTHREE.Mesh.prototype.updateMatrixWorld.call( this, true );\r\n\t\r\n\t\tif ( this.bindMode === \"attached\" ) {\r\n\t\r\n\t\t\tthis.bindMatrixInverse.getInverse( this.matrixWorld );\r\n\t\r\n\t\t} else if ( this.bindMode === \"detached\" ) {\r\n\t\r\n\t\t\tthis.bindMatrixInverse.getInverse( this.bindMatrix );\r\n\t\r\n\t\t} else {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.SkinnedMesh unrecognized bindMode: ' + this.bindMode );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.SkinnedMesh.prototype.clone = function() {\r\n\t\r\n\t\treturn new this.constructor( this.geometry, this.material, this.useVertexTexture ).copy( this );\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/objects/MorphAnimMesh.js\r\n\t\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\t\r\n\tTHREE.MorphAnimMesh = function ( geometry, material ) {\r\n\t\r\n\t\tTHREE.Mesh.call( this, geometry, material );\r\n\t\r\n\t\tthis.type = 'MorphAnimMesh';\r\n\t\r\n\t\t// API\r\n\t\r\n\t\tthis.duration = 1000; // milliseconds\r\n\t\tthis.mirroredLoop = false;\r\n\t\tthis.time = 0;\r\n\t\r\n\t\t// internals\r\n\t\r\n\t\tthis.lastKeyframe = 0;\r\n\t\tthis.currentKeyframe = 0;\r\n\t\r\n\t\tthis.direction = 1;\r\n\t\tthis.directionBackwards = false;\r\n\t\r\n\t\tthis.setFrameRange( 0, geometry.morphTargets.length - 1 );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.MorphAnimMesh.prototype = Object.create( THREE.Mesh.prototype );\r\n\tTHREE.MorphAnimMesh.prototype.constructor = THREE.MorphAnimMesh;\r\n\t\r\n\tTHREE.MorphAnimMesh.prototype.setFrameRange = function ( start, end ) {\r\n\t\r\n\t\tthis.startKeyframe = start;\r\n\t\tthis.endKeyframe = end;\r\n\t\r\n\t\tthis.length = this.endKeyframe - this.startKeyframe + 1;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.MorphAnimMesh.prototype.setDirectionForward = function () {\r\n\t\r\n\t\tthis.direction = 1;\r\n\t\tthis.directionBackwards = false;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.MorphAnimMesh.prototype.setDirectionBackward = function () {\r\n\t\r\n\t\tthis.direction = - 1;\r\n\t\tthis.directionBackwards = true;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.MorphAnimMesh.prototype.parseAnimations = function () {\r\n\t\r\n\t\tvar geometry = this.geometry;\r\n\t\r\n\t\tif ( ! geometry.animations ) geometry.animations = {};\r\n\t\r\n\t\tvar firstAnimation, animations = geometry.animations;\r\n\t\r\n\t\tvar pattern = /([a-z]+)_?(\\d+)/;\r\n\t\r\n\t\tfor ( var i = 0, il = geometry.morphTargets.length; i < il; i ++ ) {\r\n\t\r\n\t\t\tvar morph = geometry.morphTargets[ i ];\r\n\t\t\tvar parts = morph.name.match( pattern );\r\n\t\r\n\t\t\tif ( parts && parts.length > 1 ) {\r\n\t\r\n\t\t\t\tvar label = parts[ 1 ];\r\n\t\r\n\t\t\t\tif ( ! animations[ label ] ) animations[ label ] = { start: Infinity, end: - Infinity };\r\n\t\r\n\t\t\t\tvar animation = animations[ label ];\r\n\t\r\n\t\t\t\tif ( i < animation.start ) animation.start = i;\r\n\t\t\t\tif ( i > animation.end ) animation.end = i;\r\n\t\r\n\t\t\t\tif ( ! firstAnimation ) firstAnimation = label;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tgeometry.firstAnimation = firstAnimation;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.MorphAnimMesh.prototype.setAnimationLabel = function ( label, start, end ) {\r\n\t\r\n\t\tif ( ! this.geometry.animations ) this.geometry.animations = {};\r\n\t\r\n\t\tthis.geometry.animations[ label ] = { start: start, end: end };\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.MorphAnimMesh.prototype.playAnimation = function ( label, fps ) {\r\n\t\r\n\t\tvar animation = this.geometry.animations[ label ];\r\n\t\r\n\t\tif ( animation ) {\r\n\t\r\n\t\t\tthis.setFrameRange( animation.start, animation.end );\r\n\t\t\tthis.duration = 1000 * ( ( animation.end - animation.start ) / fps );\r\n\t\t\tthis.time = 0;\r\n\t\r\n\t\t} else {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.MorphAnimMesh: animation[' + label + '] undefined in .playAnimation()' );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.MorphAnimMesh.prototype.updateAnimation = function ( delta ) {\r\n\t\r\n\t\tvar frameTime = this.duration / this.length;\r\n\t\r\n\t\tthis.time += this.direction * delta;\r\n\t\r\n\t\tif ( this.mirroredLoop ) {\r\n\t\r\n\t\t\tif ( this.time > this.duration || this.time < 0 ) {\r\n\t\r\n\t\t\t\tthis.direction *= - 1;\r\n\t\r\n\t\t\t\tif ( this.time > this.duration ) {\r\n\t\r\n\t\t\t\t\tthis.time = this.duration;\r\n\t\t\t\t\tthis.directionBackwards = true;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( this.time < 0 ) {\r\n\t\r\n\t\t\t\t\tthis.time = 0;\r\n\t\t\t\t\tthis.directionBackwards = false;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t} else {\r\n\t\r\n\t\t\tthis.time = this.time % this.duration;\r\n\t\r\n\t\t\tif ( this.time < 0 ) this.time += this.duration;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tvar keyframe = this.startKeyframe + THREE.Math.clamp( Math.floor( this.time / frameTime ), 0, this.length - 1 );\r\n\t\r\n\t\tvar influences = this.morphTargetInfluences;\r\n\t\r\n\t\tif ( keyframe !== this.currentKeyframe ) {\r\n\t\r\n\t\t\tinfluences[ this.lastKeyframe ] = 0;\r\n\t\t\tinfluences[ this.currentKeyframe ] = 1;\r\n\t\t\tinfluences[ keyframe ] = 0;\r\n\t\r\n\t\t\tthis.lastKeyframe = this.currentKeyframe;\r\n\t\t\tthis.currentKeyframe = keyframe;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tvar mix = ( this.time % frameTime ) / frameTime;\r\n\t\r\n\t\tif ( this.directionBackwards ) {\r\n\t\r\n\t\t\tmix = 1 - mix;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tinfluences[ this.currentKeyframe ] = mix;\r\n\t\tinfluences[ this.lastKeyframe ] = 1 - mix;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.MorphAnimMesh.prototype.interpolateTargets = function ( a, b, t ) {\r\n\t\r\n\t\tvar influences = this.morphTargetInfluences;\r\n\t\r\n\t\tfor ( var i = 0, l = influences.length; i < l; i ++ ) {\r\n\t\r\n\t\t\tinfluences[ i ] = 0;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tif ( a > - 1 ) influences[ a ] = 1 - t;\r\n\t\tif ( b > - 1 ) influences[ b ] = t;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.MorphAnimMesh.prototype.copy = function ( source ) {\r\n\t\r\n\t\tTHREE.Mesh.prototype.copy.call( this, source );\r\n\t\r\n\t\tthis.duration = source.duration;\r\n\t\tthis.mirroredLoop = source.mirroredLoop;\r\n\t\tthis.time = source.time;\r\n\t\r\n\t\tthis.lastKeyframe = source.lastKeyframe;\r\n\t\tthis.currentKeyframe = source.currentKeyframe;\r\n\t\r\n\t\tthis.direction = source.direction;\r\n\t\tthis.directionBackwards = source.directionBackwards;\r\n\t\r\n\t\treturn this;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/objects/LOD.js\r\n\t\r\n\t/**\r\n\t * @author mikael emtinger / http://gomo.se/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.LOD = function () {\r\n\t\r\n\t\tTHREE.Object3D.call( this );\r\n\t\r\n\t\tthis.type = 'LOD';\r\n\t\r\n\t\tObject.defineProperties( this, {\r\n\t\t\tlevels: {\r\n\t\t\t\tenumerable: true,\r\n\t\t\t\tvalue: []\r\n\t\t\t},\r\n\t\t\tobjects: {\r\n\t\t\t\tget: function () {\r\n\t\r\n\t\t\t\t\tconsole.warn( 'THREE.LOD: .objects has been renamed to .levels.' );\r\n\t\t\t\t\treturn this.levels;\r\n\t\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} );\r\n\t\r\n\t};\r\n\t\r\n\t\r\n\tTHREE.LOD.prototype = Object.create( THREE.Object3D.prototype );\r\n\tTHREE.LOD.prototype.constructor = THREE.LOD;\r\n\t\r\n\tTHREE.LOD.prototype.addLevel = function ( object, distance ) {\r\n\t\r\n\t\tif ( distance === undefined ) distance = 0;\r\n\t\r\n\t\tdistance = Math.abs( distance );\r\n\t\r\n\t\tvar levels = this.levels;\r\n\t\r\n\t\tfor ( var l = 0; l < levels.length; l ++ ) {\r\n\t\r\n\t\t\tif ( distance < levels[ l ].distance ) {\r\n\t\r\n\t\t\t\tbreak;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tlevels.splice( l, 0, { distance: distance, object: object } );\r\n\t\r\n\t\tthis.add( object );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.LOD.prototype.getObjectForDistance = function ( distance ) {\r\n\t\r\n\t\tvar levels = this.levels;\r\n\t\r\n\t\tfor ( var i = 1, l = levels.length; i < l; i ++ ) {\r\n\t\r\n\t\t\tif ( distance < levels[ i ].distance ) {\r\n\t\r\n\t\t\t\tbreak;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\treturn levels[ i - 1 ].object;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.LOD.prototype.raycast = ( function () {\r\n\t\r\n\t\tvar matrixPosition = new THREE.Vector3();\r\n\t\r\n\t\treturn function raycast( raycaster, intersects ) {\r\n\t\r\n\t\t\tmatrixPosition.setFromMatrixPosition( this.matrixWorld );\r\n\t\r\n\t\t\tvar distance = raycaster.ray.origin.distanceTo( matrixPosition );\r\n\t\r\n\t\t\tthis.getObjectForDistance( distance ).raycast( raycaster, intersects );\r\n\t\r\n\t\t};\r\n\t\r\n\t}() );\r\n\t\r\n\tTHREE.LOD.prototype.update = function () {\r\n\t\r\n\t\tvar v1 = new THREE.Vector3();\r\n\t\tvar v2 = new THREE.Vector3();\r\n\t\r\n\t\treturn function update( camera ) {\r\n\t\r\n\t\t\tvar levels = this.levels;\r\n\t\r\n\t\t\tif ( levels.length > 1 ) {\r\n\t\r\n\t\t\t\tv1.setFromMatrixPosition( camera.matrixWorld );\r\n\t\t\t\tv2.setFromMatrixPosition( this.matrixWorld );\r\n\t\r\n\t\t\t\tvar distance = v1.distanceTo( v2 );\r\n\t\r\n\t\t\t\tlevels[ 0 ].object.visible = true;\r\n\t\r\n\t\t\t\tfor ( var i = 1, l = levels.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\t\tif ( distance >= levels[ i ].distance ) {\r\n\t\r\n\t\t\t\t\t\tlevels[ i - 1 ].object.visible = false;\r\n\t\t\t\t\t\tlevels[ i ].object.visible = true;\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tfor ( ; i < l; i ++ ) {\r\n\t\r\n\t\t\t\t\tlevels[ i ].object.visible = false;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t}();\r\n\t\r\n\tTHREE.LOD.prototype.copy = function ( source ) {\r\n\t\r\n\t\tTHREE.Object3D.prototype.copy.call( this, source, false );\r\n\t\r\n\t\tvar levels = source.levels;\r\n\t\r\n\t\tfor ( var i = 0, l = levels.length; i < l; i ++ ) {\r\n\t\r\n\t\t\tvar level = levels[ i ];\r\n\t\r\n\t\t\tthis.addLevel( level.object.clone(), level.distance );\r\n\t\r\n\t\t}\r\n\t\r\n\t\treturn this;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.LOD.prototype.toJSON = function ( meta ) {\r\n\t\r\n\t\tvar data = THREE.Object3D.prototype.toJSON.call( this, meta );\r\n\t\r\n\t\tdata.object.levels = [];\r\n\t\r\n\t\tvar levels = this.levels;\r\n\t\r\n\t\tfor ( var i = 0, l = levels.length; i < l; i ++ ) {\r\n\t\r\n\t\t\tvar level = levels[ i ];\r\n\t\r\n\t\t\tdata.object.levels.push( {\r\n\t\t\t\tobject: level.object.uuid,\r\n\t\t\t\tdistance: level.distance\r\n\t\t\t} );\r\n\t\r\n\t\t}\r\n\t\r\n\t\treturn data;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/objects/Sprite.js\r\n\t\r\n\t/**\r\n\t * @author mikael emtinger / http://gomo.se/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\t\r\n\tTHREE.Sprite = ( function () {\r\n\t\r\n\t\tvar indices = new Uint16Array( [ 0, 1, 2,  0, 2, 3 ] );\r\n\t\tvar vertices = new Float32Array( [ - 0.5, - 0.5, 0,   0.5, - 0.5, 0,   0.5, 0.5, 0,   - 0.5, 0.5, 0 ] );\r\n\t\tvar uvs = new Float32Array( [ 0, 0,   1, 0,   1, 1,   0, 1 ] );\r\n\t\r\n\t\tvar geometry = new THREE.BufferGeometry();\r\n\t\tgeometry.setIndex( new THREE.BufferAttribute( indices, 1 ) );\r\n\t\tgeometry.addAttribute( 'position', new THREE.BufferAttribute( vertices, 3 ) );\r\n\t\tgeometry.addAttribute( 'uv', new THREE.BufferAttribute( uvs, 2 ) );\r\n\t\r\n\t\treturn function Sprite( material ) {\r\n\t\r\n\t\t\tTHREE.Object3D.call( this );\r\n\t\r\n\t\t\tthis.type = 'Sprite';\r\n\t\r\n\t\t\tthis.geometry = geometry;\r\n\t\t\tthis.material = ( material !== undefined ) ? material : new THREE.SpriteMaterial();\r\n\t\r\n\t\t};\r\n\t\r\n\t} )();\r\n\t\r\n\tTHREE.Sprite.prototype = Object.create( THREE.Object3D.prototype );\r\n\tTHREE.Sprite.prototype.constructor = THREE.Sprite;\r\n\t\r\n\tTHREE.Sprite.prototype.raycast = ( function () {\r\n\t\r\n\t\tvar matrixPosition = new THREE.Vector3();\r\n\t\r\n\t\treturn function raycast( raycaster, intersects ) {\r\n\t\r\n\t\t\tmatrixPosition.setFromMatrixPosition( this.matrixWorld );\r\n\t\r\n\t\t\tvar distanceSq = raycaster.ray.distanceSqToPoint( matrixPosition );\r\n\t\t\tvar guessSizeSq = this.scale.x * this.scale.y;\r\n\t\r\n\t\t\tif ( distanceSq > guessSizeSq ) {\r\n\t\r\n\t\t\t\treturn;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tintersects.push( {\r\n\t\r\n\t\t\t\tdistance: Math.sqrt( distanceSq ),\r\n\t\t\t\tpoint: this.position,\r\n\t\t\t\tface: null,\r\n\t\t\t\tobject: this\r\n\t\r\n\t\t\t} );\r\n\t\r\n\t\t};\r\n\t\r\n\t}() );\r\n\t\r\n\tTHREE.Sprite.prototype.clone = function () {\r\n\t\r\n\t\treturn new this.constructor( this.material ).copy( this );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Sprite.prototype.toJSON = function ( meta ) {\r\n\t\r\n\t\tvar data = THREE.Object3D.prototype.toJSON.call( this, meta );\r\n\t\r\n\t\t// only serialize if not in meta materials cache\r\n\t\tif ( meta.materials[ this.material.uuid ] === undefined ) {\r\n\t\r\n\t\t\tmeta.materials[ this.material.uuid ] = this.material.toJSON();\r\n\t\r\n\t\t}\r\n\t\r\n\t\tdata.object.material = this.material.uuid;\r\n\t\r\n\t\treturn data;\r\n\t\r\n\t};\r\n\t\r\n\t// Backwards compatibility\r\n\t\r\n\tTHREE.Particle = THREE.Sprite;\r\n\t\r\n\t// File:src/objects/LensFlare.js\r\n\t\r\n\t/**\r\n\t * @author mikael emtinger / http://gomo.se/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\t\r\n\tTHREE.LensFlare = function ( texture, size, distance, blending, color ) {\r\n\t\r\n\t\tTHREE.Object3D.call( this );\r\n\t\r\n\t\tthis.lensFlares = [];\r\n\t\r\n\t\tthis.positionScreen = new THREE.Vector3();\r\n\t\tthis.customUpdateCallback = undefined;\r\n\t\r\n\t\tif ( texture !== undefined ) {\r\n\t\r\n\t\t\tthis.add( texture, size, distance, blending, color );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.LensFlare.prototype = Object.create( THREE.Object3D.prototype );\r\n\tTHREE.LensFlare.prototype.constructor = THREE.LensFlare;\r\n\t\r\n\t\r\n\t/*\r\n\t * Add: adds another flare\r\n\t */\r\n\t\r\n\tTHREE.LensFlare.prototype.add = function ( texture, size, distance, blending, color, opacity ) {\r\n\t\r\n\t\tif ( size === undefined ) size = - 1;\r\n\t\tif ( distance === undefined ) distance = 0;\r\n\t\tif ( opacity === undefined ) opacity = 1;\r\n\t\tif ( color === undefined ) color = new THREE.Color( 0xffffff );\r\n\t\tif ( blending === undefined ) blending = THREE.NormalBlending;\r\n\t\r\n\t\tdistance = Math.min( distance, Math.max( 0, distance ) );\r\n\t\r\n\t\tthis.lensFlares.push( {\r\n\t\t\ttexture: texture,\t// THREE.Texture\r\n\t\t\tsize: size, \t\t// size in pixels (-1 = use texture.width)\r\n\t\t\tdistance: distance, \t// distance (0-1) from light source (0=at light source)\r\n\t\t\tx: 0, y: 0, z: 0,\t// screen position (-1 => 1) z = 0 is in front z = 1 is back\r\n\t\t\tscale: 1, \t\t// scale\r\n\t\t\trotation: 0, \t\t// rotation\r\n\t\t\topacity: opacity,\t// opacity\r\n\t\t\tcolor: color,\t\t// color\r\n\t\t\tblending: blending\t// blending\r\n\t\t} );\r\n\t\r\n\t};\r\n\t\r\n\t/*\r\n\t * Update lens flares update positions on all flares based on the screen position\r\n\t * Set myLensFlare.customUpdateCallback to alter the flares in your project specific way.\r\n\t */\r\n\t\r\n\tTHREE.LensFlare.prototype.updateLensFlares = function () {\r\n\t\r\n\t\tvar f, fl = this.lensFlares.length;\r\n\t\tvar flare;\r\n\t\tvar vecX = - this.positionScreen.x * 2;\r\n\t\tvar vecY = - this.positionScreen.y * 2;\r\n\t\r\n\t\tfor ( f = 0; f < fl; f ++ ) {\r\n\t\r\n\t\t\tflare = this.lensFlares[ f ];\r\n\t\r\n\t\t\tflare.x = this.positionScreen.x + vecX * flare.distance;\r\n\t\t\tflare.y = this.positionScreen.y + vecY * flare.distance;\r\n\t\r\n\t\t\tflare.wantedRotation = flare.x * Math.PI * 0.25;\r\n\t\t\tflare.rotation += ( flare.wantedRotation - flare.rotation ) * 0.25;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.LensFlare.prototype.copy = function ( source ) {\r\n\t\r\n\t\tTHREE.Object3D.prototype.copy.call( this, source );\r\n\t\r\n\t\tthis.positionScreen.copy( source.positionScreen );\r\n\t\tthis.customUpdateCallback = source.customUpdateCallback;\r\n\t\r\n\t\tfor ( var i = 0, l = source.lensFlares.length; i < l; i ++ ) {\r\n\t\r\n\t\t\tthis.lensFlares.push( source.lensFlares[ i ] );\r\n\t\r\n\t\t}\r\n\t\r\n\t\treturn this;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/scenes/Scene.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.Scene = function () {\r\n\t\r\n\t\tTHREE.Object3D.call( this );\r\n\t\r\n\t\tthis.type = 'Scene';\r\n\t\r\n\t\tthis.fog = null;\r\n\t\tthis.overrideMaterial = null;\r\n\t\r\n\t\tthis.autoUpdate = true; // checked by the renderer\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Scene.prototype = Object.create( THREE.Object3D.prototype );\r\n\tTHREE.Scene.prototype.constructor = THREE.Scene;\r\n\t\r\n\tTHREE.Scene.prototype.copy = function ( source ) {\r\n\t\r\n\t\tTHREE.Object3D.prototype.copy.call( this, source );\r\n\t\r\n\t\tif ( source.fog !== null ) this.fog = source.fog.clone();\r\n\t\tif ( source.overrideMaterial !== null ) this.overrideMaterial = source.overrideMaterial.clone();\r\n\t\r\n\t\tthis.autoUpdate = source.autoUpdate;\r\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\r\n\t\r\n\t\treturn this;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/scenes/Fog.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\t\r\n\tTHREE.Fog = function ( color, near, far ) {\r\n\t\r\n\t\tthis.name = '';\r\n\t\r\n\t\tthis.color = new THREE.Color( color );\r\n\t\r\n\t\tthis.near = ( near !== undefined ) ? near : 1;\r\n\t\tthis.far = ( far !== undefined ) ? far : 1000;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Fog.prototype.clone = function () {\r\n\t\r\n\t\treturn new THREE.Fog( this.color.getHex(), this.near, this.far );\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/scenes/FogExp2.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\t\r\n\tTHREE.FogExp2 = function ( color, density ) {\r\n\t\r\n\t\tthis.name = '';\r\n\t\r\n\t\tthis.color = new THREE.Color( color );\r\n\t\tthis.density = ( density !== undefined ) ? density : 0.00025;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.FogExp2.prototype.clone = function () {\r\n\t\r\n\t\treturn new THREE.FogExp2( this.color.getHex(), this.density );\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk.js\r\n\t\r\n\tTHREE.ShaderChunk = {};\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/alphamap_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'alphamap_fragment'] = \"#ifdef USE_ALPHAMAP\\n\\n\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/alphamap_pars_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'alphamap_pars_fragment'] = \"#ifdef USE_ALPHAMAP\\n\\n\tuniform sampler2D alphaMap;\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/alphatest_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'alphatest_fragment'] = \"#ifdef ALPHATEST\\n\\n\tif ( diffuseColor.a < ALPHATEST ) discard;\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/aomap_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'aomap_fragment'] = \"#ifdef USE_AOMAP\\n\\n\ttotalAmbientLight *= ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/aomap_pars_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'aomap_pars_fragment'] = \"#ifdef USE_AOMAP\\n\\n\tuniform sampler2D aoMap;\\n\tuniform float aoMapIntensity;\\n\\n#endif\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/begin_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'begin_vertex'] = \"\\nvec3 transformed = vec3( position );\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/beginnormal_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'beginnormal_vertex'] = \"\\nvec3 objectNormal = vec3( normal );\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/bumpmap_pars_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'bumpmap_pars_fragment'] = \"#ifdef USE_BUMPMAP\\n\\n\tuniform sampler2D bumpMap;\\n\tuniform float bumpScale;\\n\\n\t// Derivative maps - bump mapping unparametrized surfaces by Morten Mikkelsen\\n\t// http://mmikkelsen3d.blogspot.sk/2011/07/derivative-maps.html\\n\\n\t// Evaluate the derivative of the height w.r.t. screen-space using forward differencing (listing 2)\\n\\n\tvec2 dHdxy_fwd() {\\n\\n\t\tvec2 dSTdx = dFdx( vUv );\\n\t\tvec2 dSTdy = dFdy( vUv );\\n\\n\t\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\\n\t\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\\n\t\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\\n\\n\t\treturn vec2( dBx, dBy );\\n\\n\t}\\n\\n\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\\n\\n\t\tvec3 vSigmaX = dFdx( surf_pos );\\n\t\tvec3 vSigmaY = dFdy( surf_pos );\\n\t\tvec3 vN = surf_norm;\t\t// normalized\\n\\n\t\tvec3 R1 = cross( vSigmaY, vN );\\n\t\tvec3 R2 = cross( vN, vSigmaX );\\n\\n\t\tfloat fDet = dot( vSigmaX, R1 );\\n\\n\t\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\\n\t\treturn normalize( abs( fDet ) * surf_norm - vGrad );\\n\\n\t}\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/color_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'color_fragment'] = \"#ifdef USE_COLOR\\n\\n\tdiffuseColor.rgb *= vColor;\\n\\n#endif\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/color_pars_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'color_pars_fragment'] = \"#ifdef USE_COLOR\\n\\n\tvarying vec3 vColor;\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/color_pars_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'color_pars_vertex'] = \"#ifdef USE_COLOR\\n\\n\tvarying vec3 vColor;\\n\\n#endif\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/color_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'color_vertex'] = \"#ifdef USE_COLOR\\n\\n\tvColor.xyz = color.xyz;\\n\\n#endif\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/common.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'common'] = \"#define PI 3.14159\\n#define PI2 6.28318\\n#define RECIPROCAL_PI2 0.15915494\\n#define LOG2 1.442695\\n#define EPSILON 1e-6\\n\\n#define saturate(a) clamp( a, 0.0, 1.0 )\\n#define whiteCompliment(a) ( 1.0 - saturate( a ) )\\n\\nvec3 transformDirection( in vec3 normal, in mat4 matrix ) {\\n\\n\treturn normalize( ( matrix * vec4( normal, 0.0 ) ).xyz );\\n\\n}\\n\\n// http://en.wikibooks.org/wiki/GLSL_Programming/Applying_Matrix_Transformations\\nvec3 inverseTransformDirection( in vec3 normal, in mat4 matrix ) {\\n\\n\treturn normalize( ( vec4( normal, 0.0 ) * matrix ).xyz );\\n\\n}\\n\\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\n\tfloat distance = dot( planeNormal, point - pointOnPlane );\\n\\n\treturn - distance * planeNormal + point;\\n\\n}\\n\\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\n\treturn sign( dot( point - pointOnPlane, planeNormal ) );\\n\\n}\\n\\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\n\treturn lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;\\n\\n}\\n\\nfloat calcLightAttenuation( float lightDistance, float cutoffDistance, float decayExponent ) {\\n\\n\tif ( decayExponent > 0.0 ) {\\n\\n\t  return pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );\\n\\n\t}\\n\\n\treturn 1.0;\\n\\n}\\n\\nvec3 F_Schlick( in vec3 specularColor, in float dotLH ) {\\n\\n\t// Original approximation by Christophe Schlick '94\\n\t//;float fresnel = pow( 1.0 - dotLH, 5.0 );\\n\\n\t// Optimized variant (presented by Epic at SIGGRAPH '13)\\n\tfloat fresnel = exp2( ( -5.55437 * dotLH - 6.98316 ) * dotLH );\\n\\n\treturn ( 1.0 - specularColor ) * fresnel + specularColor;\\n\\n}\\n\\nfloat G_BlinnPhong_Implicit( /* in float dotNL, in float dotNV */ ) {\\n\\n\t// geometry term is (n⋅l)(n⋅v) / 4(n⋅l)(n⋅v)\\n\\n\treturn 0.25;\\n\\n}\\n\\nfloat D_BlinnPhong( in float shininess, in float dotNH ) {\\n\\n\t// factor of 1/PI in distribution term omitted\\n\\n\treturn ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\\n\\n}\\n\\nvec3 BRDF_BlinnPhong( in vec3 specularColor, in float shininess, in vec3 normal, in vec3 lightDir, in vec3 viewDir ) {\\n\\n\tvec3 halfDir = normalize( lightDir + viewDir );\\n\\n\t//float dotNL = saturate( dot( normal, lightDir ) );\\n\t//float dotNV = saturate( dot( normal, viewDir ) );\\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\tfloat dotLH = saturate( dot( lightDir, halfDir ) );\\n\\n\tvec3 F = F_Schlick( specularColor, dotLH );\\n\\n\tfloat G = G_BlinnPhong_Implicit( /* dotNL, dotNV */ );\\n\\n\tfloat D = D_BlinnPhong( shininess, dotNH );\\n\\n\treturn F * G * D;\\n\\n}\\n\\nvec3 inputToLinear( in vec3 a ) {\\n\\n\t#ifdef GAMMA_INPUT\\n\\n\t\treturn pow( a, vec3( float( GAMMA_FACTOR ) ) );\\n\\n\t#else\\n\\n\t\treturn a;\\n\\n\t#endif\\n\\n}\\n\\nvec3 linearToOutput( in vec3 a ) {\\n\\n\t#ifdef GAMMA_OUTPUT\\n\\n\t\treturn pow( a, vec3( 1.0 / float( GAMMA_FACTOR ) ) );\\n\\n\t#else\\n\\n\t\treturn a;\\n\\n\t#endif\\n\\n}\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/defaultnormal_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'defaultnormal_vertex'] = \"#ifdef FLIP_SIDED\\n\\n\tobjectNormal = -objectNormal;\\n\\n#endif\\n\\nvec3 transformedNormal = normalMatrix * objectNormal;\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/displacementmap_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'displacementmap_vertex'] = \"#ifdef USE_DISPLACEMENTMAP\\n\\n\ttransformed += normal * ( texture2D( displacementMap, uv ).x * displacementScale + displacementBias );\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/displacementmap_pars_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'displacementmap_pars_vertex'] = \"#ifdef USE_DISPLACEMENTMAP\\n\\n\tuniform sampler2D displacementMap;\\n\tuniform float displacementScale;\\n\tuniform float displacementBias;\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/emissivemap_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'emissivemap_fragment'] = \"#ifdef USE_EMISSIVEMAP\\n\\n\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\\n\\n\temissiveColor.rgb = inputToLinear( emissiveColor.rgb );\\n\\n\ttotalEmissiveLight *= emissiveColor.rgb;\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/emissivemap_pars_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'emissivemap_pars_fragment'] = \"#ifdef USE_EMISSIVEMAP\\n\\n\tuniform sampler2D emissiveMap;\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/envmap_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'envmap_fragment'] = \"#ifdef USE_ENVMAP\\n\\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\n\t\tvec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\\n\\n\t\t// Transforming Normal Vectors with the Inverse Transformation\\n\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\n\t\t#ifdef ENVMAP_MODE_REFLECTION\\n\\n\t\t\tvec3 reflectVec = reflect( cameraToVertex, worldNormal );\\n\\n\t\t#else\\n\\n\t\t\tvec3 reflectVec = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\n\t\t#endif\\n\\n\t#else\\n\\n\t\tvec3 reflectVec = vReflect;\\n\\n\t#endif\\n\\n\t#ifdef DOUBLE_SIDED\\n\t\tfloat flipNormal = ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n\t#else\\n\t\tfloat flipNormal = 1.0;\\n\t#endif\\n\\n\t#ifdef ENVMAP_TYPE_CUBE\\n\t\tvec4 envColor = textureCube( envMap, flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\\n\\n\t#elif defined( ENVMAP_TYPE_EQUIREC )\\n\t\tvec2 sampleUV;\\n\t\tsampleUV.y = saturate( flipNormal * reflectVec.y * 0.5 + 0.5 );\\n\t\tsampleUV.x = atan( flipNormal * reflectVec.z, flipNormal * reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\\n\t\tvec4 envColor = texture2D( envMap, sampleUV );\\n\\n\t#elif defined( ENVMAP_TYPE_SPHERE )\\n\t\tvec3 reflectView = flipNormal * normalize((viewMatrix * vec4( reflectVec, 0.0 )).xyz + vec3(0.0,0.0,1.0));\\n\t\tvec4 envColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5 );\\n\t#endif\\n\\n\tenvColor.xyz = inputToLinear( envColor.xyz );\\n\\n\t#ifdef ENVMAP_BLENDING_MULTIPLY\\n\\n\t\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\\n\\n\t#elif defined( ENVMAP_BLENDING_MIX )\\n\\n\t\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\\n\\n\t#elif defined( ENVMAP_BLENDING_ADD )\\n\\n\t\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\\n\\n\t#endif\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/envmap_pars_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'envmap_pars_fragment'] = \"#ifdef USE_ENVMAP\\n\\n\tuniform float reflectivity;\\n\t#ifdef ENVMAP_TYPE_CUBE\\n\t\tuniform samplerCube envMap;\\n\t#else\\n\t\tuniform sampler2D envMap;\\n\t#endif\\n\tuniform float flipEnvMap;\\n\\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\n\t\tuniform float refractionRatio;\\n\\n\t#else\\n\\n\t\tvarying vec3 vReflect;\\n\\n\t#endif\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/envmap_pars_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'envmap_pars_vertex'] = \"#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP ) && ! defined( PHONG )\\n\\n\tvarying vec3 vReflect;\\n\\n\tuniform float refractionRatio;\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/envmap_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'envmap_vertex'] = \"#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP ) && ! defined( PHONG )\\n\\n\tvec3 worldNormal = transformDirection( objectNormal, modelMatrix );\\n\\n\tvec3 cameraToVertex = normalize( worldPosition.xyz - cameraPosition );\\n\\n\t#ifdef ENVMAP_MODE_REFLECTION\\n\\n\t\tvReflect = reflect( cameraToVertex, worldNormal );\\n\\n\t#else\\n\\n\t\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\n\t#endif\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/fog_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'fog_fragment'] = \"#ifdef USE_FOG\\n\\n\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\n\t\tfloat depth = gl_FragDepthEXT / gl_FragCoord.w;\\n\\n\t#else\\n\\n\t\tfloat depth = gl_FragCoord.z / gl_FragCoord.w;\\n\\n\t#endif\\n\\n\t#ifdef FOG_EXP2\\n\\n\t\tfloat fogFactor = whiteCompliment( exp2( - fogDensity * fogDensity * depth * depth * LOG2 ) );\\n\\n\t#else\\n\\n\t\tfloat fogFactor = smoothstep( fogNear, fogFar, depth );\\n\\n\t#endif\\n\t\\n\toutgoingLight = mix( outgoingLight, fogColor, fogFactor );\\n\\n#endif\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/fog_pars_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'fog_pars_fragment'] = \"#ifdef USE_FOG\\n\\n\tuniform vec3 fogColor;\\n\\n\t#ifdef FOG_EXP2\\n\\n\t\tuniform float fogDensity;\\n\\n\t#else\\n\\n\t\tuniform float fogNear;\\n\t\tuniform float fogFar;\\n\t#endif\\n\\n#endif\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/lightmap_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'lightmap_fragment'] = \"#ifdef USE_LIGHTMAP\\n\\n\ttotalAmbientLight += texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/lightmap_pars_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'lightmap_pars_fragment'] = \"#ifdef USE_LIGHTMAP\\n\\n\tuniform sampler2D lightMap;\\n\tuniform float lightMapIntensity;\\n\\n#endif\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/lights_lambert_pars_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'lights_lambert_pars_vertex'] = \"uniform vec3 ambientLightColor;\\n\\n#if MAX_DIR_LIGHTS > 0\\n\\n\tuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\\n\tuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\\n\\n#endif\\n\\n#if MAX_HEMI_LIGHTS > 0\\n\\n\tuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\\n\tuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\\n\tuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\\n\\n#endif\\n\\n#if MAX_POINT_LIGHTS > 0\\n\\n\tuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\\n\tuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\\n\tuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\\n\tuniform float pointLightDecay[ MAX_POINT_LIGHTS ];\\n\\n#endif\\n\\n#if MAX_SPOT_LIGHTS > 0\\n\\n\tuniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\\n\tuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\\n\tuniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\\n\tuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\\n\tuniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];\\n\tuniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\\n\tuniform float spotLightDecay[ MAX_SPOT_LIGHTS ];\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/lights_lambert_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'lights_lambert_vertex'] = \"vLightFront = vec3( 0.0 );\\n\\n#ifdef DOUBLE_SIDED\\n\\n\tvLightBack = vec3( 0.0 );\\n\\n#endif\\n\\nvec3 normal = normalize( transformedNormal );\\n\\n#if MAX_POINT_LIGHTS > 0\\n\\n\tfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\\n\\n\t\tvec3 lightColor = pointLightColor[ i ];\\n\\n\t\tvec3 lVector = pointLightPosition[ i ] - mvPosition.xyz;\\n\t\tvec3 lightDir = normalize( lVector );\\n\\n\t\t// attenuation\\n\\n\t\tfloat attenuation = calcLightAttenuation( length( lVector ), pointLightDistance[ i ], pointLightDecay[ i ] );\\n\\n\t\t// diffuse\\n\\n\t\tfloat dotProduct = dot( normal, lightDir );\\n\\n\t\tvLightFront += lightColor * attenuation * saturate( dotProduct );\\n\\n\t\t#ifdef DOUBLE_SIDED\\n\\n\t\t\tvLightBack += lightColor * attenuation * saturate( - dotProduct );\\n\\n\t\t#endif\\n\\n\t}\\n\\n#endif\\n\\n#if MAX_SPOT_LIGHTS > 0\\n\\n\tfor ( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\\n\\n\t\tvec3 lightColor = spotLightColor[ i ];\\n\\n\t\tvec3 lightPosition = spotLightPosition[ i ];\\n\t\tvec3 lVector = lightPosition - mvPosition.xyz;\\n\t\tvec3 lightDir = normalize( lVector );\\n\\n\t\tfloat spotEffect = dot( spotLightDirection[ i ], lightDir );\\n\\n\t\tif ( spotEffect > spotLightAngleCos[ i ] ) {\\n\\n\t\t\tspotEffect = saturate( pow( saturate( spotEffect ), spotLightExponent[ i ] ) );\\n\\n\t\t\t// attenuation\\n\\n\t\t\tfloat attenuation = calcLightAttenuation( length( lVector ), spotLightDistance[ i ], spotLightDecay[ i ] );\\n\\n\t\t\tattenuation *= spotEffect;\\n\\n\t\t\t// diffuse\\n\\n\t\t\tfloat dotProduct = dot( normal, lightDir );\\n\\n\t\t\tvLightFront += lightColor * attenuation * saturate( dotProduct );\\n\\n\t\t\t#ifdef DOUBLE_SIDED\\n\\n\t\t\t\tvLightBack += lightColor * attenuation * saturate( - dotProduct );\\n\\n\t\t\t#endif\\n\\n\t\t}\\n\\n\t}\\n\\n#endif\\n\\n#if MAX_DIR_LIGHTS > 0\\n\\n\tfor ( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {\\n\\n\t\tvec3 lightColor = directionalLightColor[ i ];\\n\\n\t\tvec3 lightDir = directionalLightDirection[ i ];\\n\\n\t\t// diffuse\\n\\n\t\tfloat dotProduct = dot( normal, lightDir );\\n\\n\t\tvLightFront += lightColor * saturate( dotProduct );\\n\\n\t\t#ifdef DOUBLE_SIDED\\n\\n\t\t\tvLightBack += lightColor * saturate( - dotProduct );\\n\\n\t\t#endif\\n\\n\t}\\n\\n#endif\\n\\n#if MAX_HEMI_LIGHTS > 0\\n\\n\tfor ( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\\n\\n\t\tvec3 lightDir = hemisphereLightDirection[ i ];\\n\\n\t\t// diffuse\\n\\n\t\tfloat dotProduct = dot( normal, lightDir );\\n\\n\t\tfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\\n\\n\t\tvLightFront += mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\\n\\n\t\t#ifdef DOUBLE_SIDED\\n\\n\t\t\tfloat hemiDiffuseWeightBack = - 0.5 * dotProduct + 0.5;\\n\\n\t\t\tvLightBack += mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeightBack );\\n\\n\t\t#endif\\n\\n\t}\\n\\n#endif\\n\\nvLightFront += ambientLightColor;\\n\\n#ifdef DOUBLE_SIDED\\n\\n\tvLightBack += ambientLightColor;\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/lights_phong_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'lights_phong_fragment'] = \"#ifndef FLAT_SHADED\\n\\n\tvec3 normal = normalize( vNormal );\\n\\n\t#ifdef DOUBLE_SIDED\\n\\n\t\tnormal = normal * ( -1.0 + 2.0 * float( gl_FrontFacing ) );\\n\\n\t#endif\\n\\n#else\\n\\n\tvec3 fdx = dFdx( vViewPosition );\\n\tvec3 fdy = dFdy( vViewPosition );\\n\tvec3 normal = normalize( cross( fdx, fdy ) );\\n\\n#endif\\n\\n#ifdef USE_NORMALMAP\\n\\n\tnormal = perturbNormal2Arb( -vViewPosition, normal );\\n\\n#elif defined( USE_BUMPMAP )\\n\\n\tnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\\n\\n#endif\\n\\nvec3 viewDir = normalize( vViewPosition );\\n\\nvec3 totalDiffuseLight = vec3( 0.0 );\\nvec3 totalSpecularLight = vec3( 0.0 );\\n\\n#if MAX_POINT_LIGHTS > 0\\n\\n\tfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\\n\\n\t\tvec3 lightColor = pointLightColor[ i ];\\n\\n\t\tvec3 lightPosition = pointLightPosition[ i ];\\n\t\tvec3 lVector = lightPosition + vViewPosition.xyz;\\n\t\tvec3 lightDir = normalize( lVector );\\n\\n\t\t// attenuation\\n\\n\t\tfloat attenuation = calcLightAttenuation( length( lVector ), pointLightDistance[ i ], pointLightDecay[ i ] );\\n\\n\t\t// diffuse\\n\\n\t\tfloat cosineTerm = saturate( dot( normal, lightDir ) );\\n\\n\t\ttotalDiffuseLight += lightColor * attenuation * cosineTerm;\\n\\n\t\t// specular\\n\\n\t\tvec3 brdf = BRDF_BlinnPhong( specular, shininess, normal, lightDir, viewDir );\\n\\n\t\ttotalSpecularLight += brdf * specularStrength * lightColor * attenuation * cosineTerm;\\n\\n\\n\t}\\n\\n#endif\\n\\n#if MAX_SPOT_LIGHTS > 0\\n\\n\tfor ( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\\n\\n\t\tvec3 lightColor = spotLightColor[ i ];\\n\\n\t\tvec3 lightPosition = spotLightPosition[ i ];\\n\t\tvec3 lVector = lightPosition + vViewPosition.xyz;\\n\t\tvec3 lightDir = normalize( lVector );\\n\\n\t\tfloat spotEffect = dot( spotLightDirection[ i ], lightDir );\\n\\n\t\tif ( spotEffect > spotLightAngleCos[ i ] ) {\\n\\n\t\t\tspotEffect = saturate( pow( saturate( spotEffect ), spotLightExponent[ i ] ) );\\n\\n\t\t\t// attenuation\\n\\n\t\t\tfloat attenuation = calcLightAttenuation( length( lVector ), spotLightDistance[ i ], spotLightDecay[ i ] );\\n\\n\t\t\tattenuation *= spotEffect;\\n\\n\t\t\t// diffuse\\n\\n\t\t\tfloat cosineTerm = saturate( dot( normal, lightDir ) );\\n\\n\t\t\ttotalDiffuseLight += lightColor * attenuation * cosineTerm;\\n\\n\t\t\t// specular\\n\\n\t\t\tvec3 brdf = BRDF_BlinnPhong( specular, shininess, normal, lightDir, viewDir );\\n\\n\t\t\ttotalSpecularLight += brdf * specularStrength * lightColor * attenuation * cosineTerm;\\n\\n\t\t}\\n\\n\t}\\n\\n#endif\\n\\n#if MAX_DIR_LIGHTS > 0\\n\\n\tfor( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {\\n\\n\t\tvec3 lightColor = directionalLightColor[ i ];\\n\\n\t\tvec3 lightDir = directionalLightDirection[ i ];\\n\\n\t\t// diffuse\\n\\n\t\tfloat cosineTerm = saturate( dot( normal, lightDir ) );\\n\\n\t\ttotalDiffuseLight += lightColor * cosineTerm;\\n\\n\t\t// specular\\n\\n\t\tvec3 brdf = BRDF_BlinnPhong( specular, shininess, normal, lightDir, viewDir );\\n\\n\t\ttotalSpecularLight += brdf * specularStrength * lightColor * cosineTerm;\\n\\n\t}\\n\\n#endif\\n\\n#if MAX_HEMI_LIGHTS > 0\\n\\n\tfor( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\\n\\n\t\tvec3 lightDir = hemisphereLightDirection[ i ];\\n\\n\t\t// diffuse\\n\\n\t\tfloat dotProduct = dot( normal, lightDir );\\n\\n\t\tfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\\n\\n\t\tvec3 lightColor = mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\\n\\n\t\ttotalDiffuseLight += lightColor;\\n\\n\t\t// specular (sky term only)\\n\\n\t\tvec3 brdf = BRDF_BlinnPhong( specular, shininess, normal, lightDir, viewDir );\\n\\n\t\ttotalSpecularLight += brdf * specularStrength * lightColor * max( dotProduct, 0.0 );\\n\\n\t}\\n\\n#endif\\n\\n#ifdef METAL\\n\\n\toutgoingLight += diffuseColor.rgb * ( totalDiffuseLight + totalAmbientLight ) * specular + totalSpecularLight + totalEmissiveLight;\\n\\n#else\\n\\n\toutgoingLight += diffuseColor.rgb * ( totalDiffuseLight + totalAmbientLight ) + totalSpecularLight + totalEmissiveLight;\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/lights_phong_pars_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'lights_phong_pars_fragment'] = \"uniform vec3 ambientLightColor;\\n\\n#if MAX_DIR_LIGHTS > 0\\n\\n\tuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\\n\tuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\\n\\n#endif\\n\\n#if MAX_HEMI_LIGHTS > 0\\n\\n\tuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\\n\tuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\\n\tuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\\n\\n#endif\\n\\n#if MAX_POINT_LIGHTS > 0\\n\\n\tuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\\n\\n\tuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\\n\tuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\\n\tuniform float pointLightDecay[ MAX_POINT_LIGHTS ];\\n\\n#endif\\n\\n#if MAX_SPOT_LIGHTS > 0\\n\\n\tuniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\\n\tuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\\n\tuniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\\n\tuniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];\\n\tuniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\\n\tuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\\n\tuniform float spotLightDecay[ MAX_SPOT_LIGHTS ];\\n\\n#endif\\n\\n#if MAX_SPOT_LIGHTS > 0 || defined( USE_ENVMAP )\\n\\n\tvarying vec3 vWorldPosition;\\n\\n#endif\\n\\nvarying vec3 vViewPosition;\\n\\n#ifndef FLAT_SHADED\\n\\n\tvarying vec3 vNormal;\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/lights_phong_pars_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'lights_phong_pars_vertex'] = \"#if MAX_SPOT_LIGHTS > 0 || defined( USE_ENVMAP )\\n\\n\tvarying vec3 vWorldPosition;\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/lights_phong_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'lights_phong_vertex'] = \"#if MAX_SPOT_LIGHTS > 0 || defined( USE_ENVMAP )\\n\\n\tvWorldPosition = worldPosition.xyz;\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/linear_to_gamma_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'linear_to_gamma_fragment'] = \"\\n\toutgoingLight = linearToOutput( outgoingLight );\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/logdepthbuf_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'logdepthbuf_fragment'] = \"#if defined(USE_LOGDEPTHBUF) && defined(USE_LOGDEPTHBUF_EXT)\\n\\n\tgl_FragDepthEXT = log2(vFragDepth) * logDepthBufFC * 0.5;\\n\\n#endif\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/logdepthbuf_pars_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'logdepthbuf_pars_fragment'] = \"#ifdef USE_LOGDEPTHBUF\\n\\n\tuniform float logDepthBufFC;\\n\\n\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\n\t\tvarying float vFragDepth;\\n\\n\t#endif\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/logdepthbuf_pars_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'logdepthbuf_pars_vertex'] = \"#ifdef USE_LOGDEPTHBUF\\n\\n\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\n\t\tvarying float vFragDepth;\\n\\n\t#endif\\n\\n\tuniform float logDepthBufFC;\\n\\n#endif\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/logdepthbuf_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'logdepthbuf_vertex'] = \"#ifdef USE_LOGDEPTHBUF\\n\\n\tgl_Position.z = log2(max( EPSILON, gl_Position.w + 1.0 )) * logDepthBufFC;\\n\\n\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\n\t\tvFragDepth = 1.0 + gl_Position.w;\\n\\n#else\\n\\n\t\tgl_Position.z = (gl_Position.z - 1.0) * gl_Position.w;\\n\\n\t#endif\\n\\n#endif\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/map_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'map_fragment'] = \"#ifdef USE_MAP\\n\\n\tvec4 texelColor = texture2D( map, vUv );\\n\\n\ttexelColor.xyz = inputToLinear( texelColor.xyz );\\n\\n\tdiffuseColor *= texelColor;\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/map_pars_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'map_pars_fragment'] = \"#ifdef USE_MAP\\n\\n\tuniform sampler2D map;\\n\\n#endif\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/map_particle_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'map_particle_fragment'] = \"#ifdef USE_MAP\\n\\n\tdiffuseColor *= texture2D( map, vec2( gl_PointCoord.x, 1.0 - gl_PointCoord.y ) * offsetRepeat.zw + offsetRepeat.xy );\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/map_particle_pars_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'map_particle_pars_fragment'] = \"#ifdef USE_MAP\\n\\n\tuniform vec4 offsetRepeat;\\n\tuniform sampler2D map;\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/morphnormal_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'morphnormal_vertex'] = \"#ifdef USE_MORPHNORMALS\\n\\n\tobjectNormal += ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];\\n\tobjectNormal += ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];\\n\tobjectNormal += ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];\\n\tobjectNormal += ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/morphtarget_pars_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'morphtarget_pars_vertex'] = \"#ifdef USE_MORPHTARGETS\\n\\n\t#ifndef USE_MORPHNORMALS\\n\\n\tuniform float morphTargetInfluences[ 8 ];\\n\\n\t#else\\n\\n\tuniform float morphTargetInfluences[ 4 ];\\n\\n\t#endif\\n\\n#endif\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/morphtarget_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'morphtarget_vertex'] = \"#ifdef USE_MORPHTARGETS\\n\\n\ttransformed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];\\n\ttransformed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];\\n\ttransformed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];\\n\ttransformed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];\\n\\n\t#ifndef USE_MORPHNORMALS\\n\\n\ttransformed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];\\n\ttransformed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];\\n\ttransformed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];\\n\ttransformed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];\\n\\n\t#endif\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/normalmap_pars_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'normalmap_pars_fragment'] = \"#ifdef USE_NORMALMAP\\n\\n\tuniform sampler2D normalMap;\\n\tuniform vec2 normalScale;\\n\\n\t// Per-Pixel Tangent Space Normal Mapping\\n\t// http://hacksoflife.blogspot.ch/2009/11/per-pixel-tangent-space-normal-mapping.html\\n\\n\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm ) {\\n\\n\t\tvec3 q0 = dFdx( eye_pos.xyz );\\n\t\tvec3 q1 = dFdy( eye_pos.xyz );\\n\t\tvec2 st0 = dFdx( vUv.st );\\n\t\tvec2 st1 = dFdy( vUv.st );\\n\\n\t\tvec3 S = normalize( q0 * st1.t - q1 * st0.t );\\n\t\tvec3 T = normalize( -q0 * st1.s + q1 * st0.s );\\n\t\tvec3 N = normalize( surf_norm );\\n\\n\t\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\\n\t\tmapN.xy = normalScale * mapN.xy;\\n\t\tmat3 tsn = mat3( S, T, N );\\n\t\treturn normalize( tsn * mapN );\\n\\n\t}\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/project_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'project_vertex'] = \"#ifdef USE_SKINNING\\n\\n\tvec4 mvPosition = modelViewMatrix * skinned;\\n\\n#else\\n\\n\tvec4 mvPosition = modelViewMatrix * vec4( transformed, 1.0 );\\n\\n#endif\\n\\ngl_Position = projectionMatrix * mvPosition;\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/shadowmap_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'shadowmap_fragment'] = \"#ifdef USE_SHADOWMAP\\n\\n\t#ifdef SHADOWMAP_DEBUG\\n\\n\t\tvec3 frustumColors[3];\\n\t\tfrustumColors[0] = vec3( 1.0, 0.5, 0.0 );\\n\t\tfrustumColors[1] = vec3( 0.0, 1.0, 0.8 );\\n\t\tfrustumColors[2] = vec3( 0.0, 0.5, 1.0 );\\n\\n\t#endif\\n\\n\tfloat fDepth;\\n\tvec3 shadowColor = vec3( 1.0 );\\n\\n\tfor( int i = 0; i < MAX_SHADOWS; i ++ ) {\\n\\n\t\tvec3 shadowCoord = vShadowCoord[ i ].xyz / vShadowCoord[ i ].w;\\n\\n\t\t\t\t// if ( something && something ) breaks ATI OpenGL shader compiler\\n\t\t\t\t// if ( all( something, something ) ) using this instead\\n\\n\t\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\\n\t\tbool inFrustum = all( inFrustumVec );\\n\\n\t\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\\n\\n\t\tbool frustumTest = all( frustumTestVec );\\n\\n\t\tif ( frustumTest ) {\\n\\n\t\t\tshadowCoord.z += shadowBias[ i ];\\n\\n\t\t\t#if defined( SHADOWMAP_TYPE_PCF )\\n\\n\t\t\t\t\t\t// Percentage-close filtering\\n\t\t\t\t\t\t// (9 pixel kernel)\\n\t\t\t\t\t\t// http://fabiensanglard.net/shadowmappingPCF/\\n\\n\t\t\t\tfloat shadow = 0.0;\\n\\n\t\t/*\\n\t\t\t\t\t\t// nested loops breaks shader compiler / validator on some ATI cards when using OpenGL\\n\t\t\t\t\t\t// must enroll loop manually\\n\\n\t\t\t\tfor ( float y = -1.25; y <= 1.25; y += 1.25 )\\n\t\t\t\t\tfor ( float x = -1.25; x <= 1.25; x += 1.25 ) {\\n\\n\t\t\t\t\t\tvec4 rgbaDepth = texture2D( shadowMap[ i ], vec2( x * xPixelOffset, y * yPixelOffset ) + shadowCoord.xy );\\n\\n\t\t\t\t\t\t\t\t// doesn't seem to produce any noticeable visual difference compared to simple texture2D lookup\\n\t\t\t\t\t\t\t\t//vec4 rgbaDepth = texture2DProj( shadowMap[ i ], vec4( vShadowCoord[ i ].w * ( vec2( x * xPixelOffset, y * yPixelOffset ) + shadowCoord.xy ), 0.05, vShadowCoord[ i ].w ) );\\n\\n\t\t\t\t\t\tfloat fDepth = unpackDepth( rgbaDepth );\\n\\n\t\t\t\t\t\tif ( fDepth < shadowCoord.z )\\n\t\t\t\t\t\t\tshadow += 1.0;\\n\\n\t\t\t\t}\\n\\n\t\t\t\tshadow /= 9.0;\\n\\n\t\t*/\\n\\n\t\t\t\tconst float shadowDelta = 1.0 / 9.0;\\n\\n\t\t\t\tfloat xPixelOffset = 1.0 / shadowMapSize[ i ].x;\\n\t\t\t\tfloat yPixelOffset = 1.0 / shadowMapSize[ i ].y;\\n\\n\t\t\t\tfloat dx0 = -1.25 * xPixelOffset;\\n\t\t\t\tfloat dy0 = -1.25 * yPixelOffset;\\n\t\t\t\tfloat dx1 = 1.25 * xPixelOffset;\\n\t\t\t\tfloat dy1 = 1.25 * yPixelOffset;\\n\\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy0 ) ) );\\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\n\\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy0 ) ) );\\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\n\\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy0 ) ) );\\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\n\\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, 0.0 ) ) );\\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\n\\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy ) );\\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\n\\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, 0.0 ) ) );\\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\n\\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy1 ) ) );\\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\n\\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy1 ) ) );\\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\n\\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy1 ) ) );\\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\n\\n\t\t\t\tshadowColor = shadowColor * vec3( ( 1.0 - shadowDarkness[ i ] * shadow ) );\\n\\n\t\t\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\\n\\n\t\t\t\t\t\t// Percentage-close filtering\\n\t\t\t\t\t\t// (9 pixel kernel)\\n\t\t\t\t\t\t// http://fabiensanglard.net/shadowmappingPCF/\\n\\n\t\t\t\tfloat shadow = 0.0;\\n\\n\t\t\t\tfloat xPixelOffset = 1.0 / shadowMapSize[ i ].x;\\n\t\t\t\tfloat yPixelOffset = 1.0 / shadowMapSize[ i ].y;\\n\\n\t\t\t\tfloat dx0 = -1.0 * xPixelOffset;\\n\t\t\t\tfloat dy0 = -1.0 * yPixelOffset;\\n\t\t\t\tfloat dx1 = 1.0 * xPixelOffset;\\n\t\t\t\tfloat dy1 = 1.0 * yPixelOffset;\\n\\n\t\t\t\tmat3 shadowKernel;\\n\t\t\t\tmat3 depthKernel;\\n\\n\t\t\t\tdepthKernel[0][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy0 ) ) );\\n\t\t\t\tdepthKernel[0][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, 0.0 ) ) );\\n\t\t\t\tdepthKernel[0][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy1 ) ) );\\n\t\t\t\tdepthKernel[1][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy0 ) ) );\\n\t\t\t\tdepthKernel[1][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy ) );\\n\t\t\t\tdepthKernel[1][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy1 ) ) );\\n\t\t\t\tdepthKernel[2][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy0 ) ) );\\n\t\t\t\tdepthKernel[2][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, 0.0 ) ) );\\n\t\t\t\tdepthKernel[2][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy1 ) ) );\\n\\n\t\t\t\tvec3 shadowZ = vec3( shadowCoord.z );\\n\t\t\t\tshadowKernel[0] = vec3(lessThan(depthKernel[0], shadowZ ));\\n\t\t\t\tshadowKernel[0] *= vec3(0.25);\\n\\n\t\t\t\tshadowKernel[1] = vec3(lessThan(depthKernel[1], shadowZ ));\\n\t\t\t\tshadowKernel[1] *= vec3(0.25);\\n\\n\t\t\t\tshadowKernel[2] = vec3(lessThan(depthKernel[2], shadowZ ));\\n\t\t\t\tshadowKernel[2] *= vec3(0.25);\\n\\n\t\t\t\tvec2 fractionalCoord = 1.0 - fract( shadowCoord.xy * shadowMapSize[i].xy );\\n\\n\t\t\t\tshadowKernel[0] = mix( shadowKernel[1], shadowKernel[0], fractionalCoord.x );\\n\t\t\t\tshadowKernel[1] = mix( shadowKernel[2], shadowKernel[1], fractionalCoord.x );\\n\\n\t\t\t\tvec4 shadowValues;\\n\t\t\t\tshadowValues.x = mix( shadowKernel[0][1], shadowKernel[0][0], fractionalCoord.y );\\n\t\t\t\tshadowValues.y = mix( shadowKernel[0][2], shadowKernel[0][1], fractionalCoord.y );\\n\t\t\t\tshadowValues.z = mix( shadowKernel[1][1], shadowKernel[1][0], fractionalCoord.y );\\n\t\t\t\tshadowValues.w = mix( shadowKernel[1][2], shadowKernel[1][1], fractionalCoord.y );\\n\\n\t\t\t\tshadow = dot( shadowValues, vec4( 1.0 ) );\\n\\n\t\t\t\tshadowColor = shadowColor * vec3( ( 1.0 - shadowDarkness[ i ] * shadow ) );\\n\\n\t\t\t#else\\n\\n\t\t\t\tvec4 rgbaDepth = texture2D( shadowMap[ i ], shadowCoord.xy );\\n\t\t\t\tfloat fDepth = unpackDepth( rgbaDepth );\\n\\n\t\t\t\tif ( fDepth < shadowCoord.z )\\n\\n\t\t// spot with multiple shadows is darker\\n\\n\t\t\t\t\tshadowColor = shadowColor * vec3( 1.0 - shadowDarkness[ i ] );\\n\\n\t\t// spot with multiple shadows has the same color as single shadow spot\\n\\n\t\t// \t\t\t\t\tshadowColor = min( shadowColor, vec3( shadowDarkness[ i ] ) );\\n\\n\t\t\t#endif\\n\\n\t\t}\\n\\n\\n\t\t#ifdef SHADOWMAP_DEBUG\\n\\n\t\t\tif ( inFrustum ) outgoingLight *= frustumColors[ i ];\\n\\n\t\t#endif\\n\\n\t}\\n\\n\toutgoingLight = outgoingLight * shadowColor;\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/shadowmap_pars_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'shadowmap_pars_fragment'] = \"#ifdef USE_SHADOWMAP\\n\\n\tuniform sampler2D shadowMap[ MAX_SHADOWS ];\\n\tuniform vec2 shadowMapSize[ MAX_SHADOWS ];\\n\\n\tuniform float shadowDarkness[ MAX_SHADOWS ];\\n\tuniform float shadowBias[ MAX_SHADOWS ];\\n\\n\tvarying vec4 vShadowCoord[ MAX_SHADOWS ];\\n\\n\tfloat unpackDepth( const in vec4 rgba_depth ) {\\n\\n\t\tconst vec4 bit_shift = vec4( 1.0 / ( 256.0 * 256.0 * 256.0 ), 1.0 / ( 256.0 * 256.0 ), 1.0 / 256.0, 1.0 );\\n\t\tfloat depth = dot( rgba_depth, bit_shift );\\n\t\treturn depth;\\n\\n\t}\\n\\n#endif\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/shadowmap_pars_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'shadowmap_pars_vertex'] = \"#ifdef USE_SHADOWMAP\\n\\n\tvarying vec4 vShadowCoord[ MAX_SHADOWS ];\\n\tuniform mat4 shadowMatrix[ MAX_SHADOWS ];\\n\\n#endif\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/shadowmap_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'shadowmap_vertex'] = \"#ifdef USE_SHADOWMAP\\n\\n\tfor( int i = 0; i < MAX_SHADOWS; i ++ ) {\\n\\n\t\tvShadowCoord[ i ] = shadowMatrix[ i ] * worldPosition;\\n\\n\t}\\n\\n#endif\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/skinbase_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'skinbase_vertex'] = \"#ifdef USE_SKINNING\\n\\n\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\\n\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\\n\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\\n\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\\n\\n#endif\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/skinning_pars_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'skinning_pars_vertex'] = \"#ifdef USE_SKINNING\\n\\n\tuniform mat4 bindMatrix;\\n\tuniform mat4 bindMatrixInverse;\\n\\n\t#ifdef BONE_TEXTURE\\n\\n\t\tuniform sampler2D boneTexture;\\n\t\tuniform int boneTextureWidth;\\n\t\tuniform int boneTextureHeight;\\n\\n\t\tmat4 getBoneMatrix( const in float i ) {\\n\\n\t\t\tfloat j = i * 4.0;\\n\t\t\tfloat x = mod( j, float( boneTextureWidth ) );\\n\t\t\tfloat y = floor( j / float( boneTextureWidth ) );\\n\\n\t\t\tfloat dx = 1.0 / float( boneTextureWidth );\\n\t\t\tfloat dy = 1.0 / float( boneTextureHeight );\\n\\n\t\t\ty = dy * ( y + 0.5 );\\n\\n\t\t\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\\n\t\t\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\\n\t\t\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\\n\t\t\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\\n\\n\t\t\tmat4 bone = mat4( v1, v2, v3, v4 );\\n\\n\t\t\treturn bone;\\n\\n\t\t}\\n\\n\t#else\\n\\n\t\tuniform mat4 boneGlobalMatrices[ MAX_BONES ];\\n\\n\t\tmat4 getBoneMatrix( const in float i ) {\\n\\n\t\t\tmat4 bone = boneGlobalMatrices[ int(i) ];\\n\t\t\treturn bone;\\n\\n\t\t}\\n\\n\t#endif\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/skinning_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'skinning_vertex'] = \"#ifdef USE_SKINNING\\n\\n\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\\n\\n\tvec4 skinned = vec4( 0.0 );\\n\tskinned += boneMatX * skinVertex * skinWeight.x;\\n\tskinned += boneMatY * skinVertex * skinWeight.y;\\n\tskinned += boneMatZ * skinVertex * skinWeight.z;\\n\tskinned += boneMatW * skinVertex * skinWeight.w;\\n\tskinned  = bindMatrixInverse * skinned;\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/skinnormal_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'skinnormal_vertex'] = \"#ifdef USE_SKINNING\\n\\n\tmat4 skinMatrix = mat4( 0.0 );\\n\tskinMatrix += skinWeight.x * boneMatX;\\n\tskinMatrix += skinWeight.y * boneMatY;\\n\tskinMatrix += skinWeight.z * boneMatZ;\\n\tskinMatrix += skinWeight.w * boneMatW;\\n\tskinMatrix  = bindMatrixInverse * skinMatrix * bindMatrix;\\n\\n\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/specularmap_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'specularmap_fragment'] = \"float specularStrength;\\n\\n#ifdef USE_SPECULARMAP\\n\\n\tvec4 texelSpecular = texture2D( specularMap, vUv );\\n\tspecularStrength = texelSpecular.r;\\n\\n#else\\n\\n\tspecularStrength = 1.0;\\n\\n#endif\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/specularmap_pars_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'specularmap_pars_fragment'] = \"#ifdef USE_SPECULARMAP\\n\\n\tuniform sampler2D specularMap;\\n\\n#endif\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/uv2_pars_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'uv2_pars_fragment'] = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\n\tvarying vec2 vUv2;\\n\\n#endif\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/uv2_pars_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'uv2_pars_vertex'] = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\n\tattribute vec2 uv2;\\n\tvarying vec2 vUv2;\\n\\n#endif\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/uv2_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'uv2_vertex'] = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\n\tvUv2 = uv2;\\n\\n#endif\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/uv_pars_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'uv_pars_fragment'] = \"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP )\\n\\n\tvarying vec2 vUv;\\n\\n#endif\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/uv_pars_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'uv_pars_vertex'] = \"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP )\\n\\n\tvarying vec2 vUv;\\n\tuniform vec4 offsetRepeat;\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/uv_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'uv_vertex'] = \"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP )\\n\\n\tvUv = uv * offsetRepeat.zw + offsetRepeat.xy;\\n\\n#endif\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/worldpos_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'worldpos_vertex'] = \"#if defined( USE_ENVMAP ) || defined( PHONG ) || defined( LAMBERT ) || defined ( USE_SHADOWMAP )\\n\\n\t#ifdef USE_SKINNING\\n\\n\t\tvec4 worldPosition = modelMatrix * skinned;\\n\\n\t#else\\n\\n\t\tvec4 worldPosition = modelMatrix * vec4( transformed, 1.0 );\\n\\n\t#endif\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/UniformsUtils.js\r\n\t\r\n\t/**\r\n\t * Uniform Utilities\r\n\t */\r\n\t\r\n\tTHREE.UniformsUtils = {\r\n\t\r\n\t\tmerge: function ( uniforms ) {\r\n\t\r\n\t\t\tvar merged = {};\r\n\t\r\n\t\t\tfor ( var u = 0; u < uniforms.length; u ++ ) {\r\n\t\r\n\t\t\t\tvar tmp = this.clone( uniforms[ u ] );\r\n\t\r\n\t\t\t\tfor ( var p in tmp ) {\r\n\t\r\n\t\t\t\t\tmerged[ p ] = tmp[ p ];\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn merged;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclone: function ( uniforms_src ) {\r\n\t\r\n\t\t\tvar uniforms_dst = {};\r\n\t\r\n\t\t\tfor ( var u in uniforms_src ) {\r\n\t\r\n\t\t\t\tuniforms_dst[ u ] = {};\r\n\t\r\n\t\t\t\tfor ( var p in uniforms_src[ u ] ) {\r\n\t\r\n\t\t\t\t\tvar parameter_src = uniforms_src[ u ][ p ];\r\n\t\r\n\t\t\t\t\tif ( parameter_src instanceof THREE.Color ||\r\n\t\t\t\t\t\t parameter_src instanceof THREE.Vector2 ||\r\n\t\t\t\t\t\t parameter_src instanceof THREE.Vector3 ||\r\n\t\t\t\t\t\t parameter_src instanceof THREE.Vector4 ||\r\n\t\t\t\t\t\t parameter_src instanceof THREE.Matrix3 ||\r\n\t\t\t\t\t\t parameter_src instanceof THREE.Matrix4 ||\r\n\t\t\t\t\t\t parameter_src instanceof THREE.Texture ) {\r\n\t\r\n\t\t\t\t\t\tuniforms_dst[ u ][ p ] = parameter_src.clone();\r\n\t\r\n\t\t\t\t\t} else if ( Array.isArray( parameter_src ) ) {\r\n\t\r\n\t\t\t\t\t\tuniforms_dst[ u ][ p ] = parameter_src.slice();\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\tuniforms_dst[ u ][ p ] = parameter_src;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn uniforms_dst;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/renderers/shaders/UniformsLib.js\r\n\t\r\n\t/**\r\n\t * Uniforms library for shared webgl shaders\r\n\t */\r\n\t\r\n\tTHREE.UniformsLib = {\r\n\t\r\n\t\tcommon: {\r\n\t\r\n\t\t\t\"diffuse\" : { type: \"c\", value: new THREE.Color( 0xeeeeee ) },\r\n\t\t\t\"opacity\" : { type: \"f\", value: 1.0 },\r\n\t\r\n\t\t\t\"map\" : { type: \"t\", value: null },\r\n\t\t\t\"offsetRepeat\" : { type: \"v4\", value: new THREE.Vector4( 0, 0, 1, 1 ) },\r\n\t\r\n\t\t\t\"specularMap\" : { type: \"t\", value: null },\r\n\t\t\t\"alphaMap\" : { type: \"t\", value: null },\r\n\t\r\n\t\t\t\"envMap\" : { type: \"t\", value: null },\r\n\t\t\t\"flipEnvMap\" : { type: \"f\", value: - 1 },\r\n\t\t\t\"reflectivity\" : { type: \"f\", value: 1.0 },\r\n\t\t\t\"refractionRatio\" : { type: \"f\", value: 0.98 }\r\n\t\r\n\t\t},\r\n\t\r\n\t\taomap: {\r\n\t\r\n\t\t\t\"aoMap\" : { type: \"t\", value: null },\r\n\t\t\t\"aoMapIntensity\" : { type: \"f\", value: 1 },\r\n\t\r\n\t\t},\r\n\t\r\n\t\tlightmap: {\r\n\t\r\n\t\t\t\"lightMap\" : { type: \"t\", value: null },\r\n\t\t\t\"lightMapIntensity\" : { type: \"f\", value: 1 },\r\n\t\r\n\t\t},\r\n\t\r\n\t\temissivemap: {\r\n\t\r\n\t\t\t\"emissiveMap\" : { type: \"t\", value: null },\r\n\t\r\n\t\t},\r\n\t\r\n\t\tbumpmap: {\r\n\t\r\n\t\t\t\"bumpMap\" : { type: \"t\", value: null },\r\n\t\t\t\"bumpScale\" : { type: \"f\", value: 1 }\r\n\t\r\n\t\t},\r\n\t\r\n\t\tnormalmap: {\r\n\t\r\n\t\t\t\"normalMap\" : { type: \"t\", value: null },\r\n\t\t\t\"normalScale\" : { type: \"v2\", value: new THREE.Vector2( 1, 1 ) }\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdisplacementmap: {\r\n\t\r\n\t\t\t\"displacementMap\" : { type: \"t\", value: null },\r\n\t\t\t\"displacementScale\" : { type: \"f\", value: 1 },\r\n\t\t\t\"displacementBias\" : { type: \"f\", value: 0 }\r\n\t\r\n\t\t},\r\n\t\r\n\t\tfog : {\r\n\t\r\n\t\t\t\"fogDensity\" : { type: \"f\", value: 0.00025 },\r\n\t\t\t\"fogNear\" : { type: \"f\", value: 1 },\r\n\t\t\t\"fogFar\" : { type: \"f\", value: 2000 },\r\n\t\t\t\"fogColor\" : { type: \"c\", value: new THREE.Color( 0xffffff ) }\r\n\t\r\n\t\t},\r\n\t\r\n\t\tlights: {\r\n\t\r\n\t\t\t\"ambientLightColor\" : { type: \"fv\", value: [] },\r\n\t\r\n\t\t\t\"directionalLightDirection\" : { type: \"fv\", value: [] },\r\n\t\t\t\"directionalLightColor\" : { type: \"fv\", value: [] },\r\n\t\r\n\t\t\t\"hemisphereLightDirection\" : { type: \"fv\", value: [] },\r\n\t\t\t\"hemisphereLightSkyColor\" : { type: \"fv\", value: [] },\r\n\t\t\t\"hemisphereLightGroundColor\" : { type: \"fv\", value: [] },\r\n\t\r\n\t\t\t\"pointLightColor\" : { type: \"fv\", value: [] },\r\n\t\t\t\"pointLightPosition\" : { type: \"fv\", value: [] },\r\n\t\t\t\"pointLightDistance\" : { type: \"fv1\", value: [] },\r\n\t\t\t\"pointLightDecay\" : { type: \"fv1\", value: [] },\r\n\t\r\n\t\t\t\"spotLightColor\" : { type: \"fv\", value: [] },\r\n\t\t\t\"spotLightPosition\" : { type: \"fv\", value: [] },\r\n\t\t\t\"spotLightDirection\" : { type: \"fv\", value: [] },\r\n\t\t\t\"spotLightDistance\" : { type: \"fv1\", value: [] },\r\n\t\t\t\"spotLightAngleCos\" : { type: \"fv1\", value: [] },\r\n\t\t\t\"spotLightExponent\" : { type: \"fv1\", value: [] },\r\n\t\t\t\"spotLightDecay\" : { type: \"fv1\", value: [] }\r\n\t\r\n\t\t},\r\n\t\r\n\t\tpoints: {\r\n\t\r\n\t\t\t\"psColor\" : { type: \"c\", value: new THREE.Color( 0xeeeeee ) },\r\n\t\t\t\"opacity\" : { type: \"f\", value: 1.0 },\r\n\t\t\t\"size\" : { type: \"f\", value: 1.0 },\r\n\t\t\t\"scale\" : { type: \"f\", value: 1.0 },\r\n\t\t\t\"map\" : { type: \"t\", value: null },\r\n\t\t\t\"offsetRepeat\" : { type: \"v4\", value: new THREE.Vector4( 0, 0, 1, 1 ) },\r\n\t\r\n\t\t\t\"fogDensity\" : { type: \"f\", value: 0.00025 },\r\n\t\t\t\"fogNear\" : { type: \"f\", value: 1 },\r\n\t\t\t\"fogFar\" : { type: \"f\", value: 2000 },\r\n\t\t\t\"fogColor\" : { type: \"c\", value: new THREE.Color( 0xffffff ) }\r\n\t\r\n\t\t},\r\n\t\r\n\t\tshadowmap: {\r\n\t\r\n\t\t\t\"shadowMap\": { type: \"tv\", value: [] },\r\n\t\t\t\"shadowMapSize\": { type: \"v2v\", value: [] },\r\n\t\r\n\t\t\t\"shadowBias\" : { type: \"fv1\", value: [] },\r\n\t\t\t\"shadowDarkness\": { type: \"fv1\", value: [] },\r\n\t\r\n\t\t\t\"shadowMatrix\" : { type: \"m4v\", value: [] }\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/renderers/shaders/ShaderLib.js\r\n\t\r\n\t/**\r\n\t * Webgl Shader Library for three.js\r\n\t *\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author mikael emtinger / http://gomo.se/\r\n\t */\r\n\t\r\n\t\r\n\tTHREE.ShaderLib = {\r\n\t\r\n\t\t'basic': {\r\n\t\r\n\t\t\tuniforms: THREE.UniformsUtils.merge( [\r\n\t\r\n\t\t\t\tTHREE.UniformsLib[ \"common\" ],\r\n\t\t\t\tTHREE.UniformsLib[ \"aomap\" ],\r\n\t\t\t\tTHREE.UniformsLib[ \"fog\" ],\r\n\t\t\t\tTHREE.UniformsLib[ \"shadowmap\" ]\r\n\t\r\n\t\t\t] ),\r\n\t\r\n\t\t\tvertexShader: [\r\n\t\r\n\t\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"uv_pars_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"uv2_pars_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"envmap_pars_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"color_pars_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"morphtarget_pars_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"skinning_pars_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"shadowmap_pars_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_vertex\" ],\r\n\t\r\n\t\t\t\t\"void main() {\",\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"uv_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"uv2_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"color_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"skinbase_vertex\" ],\r\n\t\r\n\t\t\t\t\"\t#ifdef USE_ENVMAP\",\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"beginnormal_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"morphnormal_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"skinnormal_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"defaultnormal_vertex\" ],\r\n\t\r\n\t\t\t\t\"\t#endif\",\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"begin_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"morphtarget_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"skinning_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"project_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_vertex\" ],\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"worldpos_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"envmap_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"shadowmap_vertex\" ],\r\n\t\r\n\t\t\t\t\"}\"\r\n\t\r\n\t\t\t].join( \"\\n\" ),\r\n\t\r\n\t\t\tfragmentShader: [\r\n\t\r\n\t\t\t\t\"uniform vec3 diffuse;\",\r\n\t\t\t\t\"uniform float opacity;\",\r\n\t\r\n\t\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"color_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"uv_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"uv2_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"map_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"alphamap_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"aomap_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"envmap_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"fog_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"shadowmap_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"specularmap_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_fragment\" ],\r\n\t\r\n\t\t\t\t\"void main() {\",\r\n\t\r\n\t\t\t\t\"\tvec3 outgoingLight = vec3( 0.0 );\",\r\n\t\t\t\t\"\tvec4 diffuseColor = vec4( diffuse, opacity );\",\r\n\t\t\t\t\"\tvec3 totalAmbientLight = vec3( 1.0 );\", // hardwired\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_fragment\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"map_fragment\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"color_fragment\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"alphamap_fragment\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"alphatest_fragment\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"specularmap_fragment\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"aomap_fragment\" ],\r\n\t\r\n\t\t\t\t\"\toutgoingLight = diffuseColor.rgb * totalAmbientLight;\", // simple shader\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"envmap_fragment\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"shadowmap_fragment\" ],\t\t// TODO: Shadows on an otherwise unlit surface doesn't make sense.\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"linear_to_gamma_fragment\" ],\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"fog_fragment\" ],\r\n\t\r\n\t\t\t\t\"\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\",\r\n\t\r\n\t\t\t\t\"}\"\r\n\t\r\n\t\t\t].join( \"\\n\" )\r\n\t\r\n\t\t},\r\n\t\r\n\t\t'lambert': {\r\n\t\r\n\t\t\tuniforms: THREE.UniformsUtils.merge( [\r\n\t\r\n\t\t\t\tTHREE.UniformsLib[ \"common\" ],\r\n\t\t\t\tTHREE.UniformsLib[ \"fog\" ],\r\n\t\t\t\tTHREE.UniformsLib[ \"lights\" ],\r\n\t\t\t\tTHREE.UniformsLib[ \"shadowmap\" ],\r\n\t\r\n\t\t\t\t{\r\n\t\t\t\t\t\"emissive\" : { type: \"c\", value: new THREE.Color( 0x000000 ) }\r\n\t\t\t\t}\r\n\t\r\n\t\t\t] ),\r\n\t\r\n\t\t\tvertexShader: [\r\n\t\r\n\t\t\t\t\"#define LAMBERT\",\r\n\t\r\n\t\t\t\t\"varying vec3 vLightFront;\",\r\n\t\r\n\t\t\t\t\"#ifdef DOUBLE_SIDED\",\r\n\t\r\n\t\t\t\t\"\tvarying vec3 vLightBack;\",\r\n\t\r\n\t\t\t\t\"#endif\",\r\n\t\r\n\t\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"uv_pars_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"uv2_pars_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"envmap_pars_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"lights_lambert_pars_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"color_pars_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"morphtarget_pars_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"skinning_pars_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"shadowmap_pars_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_vertex\" ],\r\n\t\r\n\t\t\t\t\"void main() {\",\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"uv_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"uv2_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"color_vertex\" ],\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"beginnormal_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"morphnormal_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"skinbase_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"skinnormal_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"defaultnormal_vertex\" ],\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"begin_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"morphtarget_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"skinning_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"project_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_vertex\" ],\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"worldpos_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"envmap_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"lights_lambert_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"shadowmap_vertex\" ],\r\n\t\r\n\t\t\t\t\"}\"\r\n\t\r\n\t\t\t].join( \"\\n\" ),\r\n\t\r\n\t\t\tfragmentShader: [\r\n\t\r\n\t\t\t\t\"uniform vec3 diffuse;\",\r\n\t\t\t\t\"uniform vec3 emissive;\",\r\n\t\t\t\t\"uniform float opacity;\",\r\n\t\r\n\t\t\t\t\"varying vec3 vLightFront;\",\r\n\t\r\n\t\t\t\t\"#ifdef DOUBLE_SIDED\",\r\n\t\r\n\t\t\t\t\"\tvarying vec3 vLightBack;\",\r\n\t\r\n\t\t\t\t\"#endif\",\r\n\t\r\n\t\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"color_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"uv_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"uv2_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"map_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"alphamap_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"envmap_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"fog_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"shadowmap_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"specularmap_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_fragment\" ],\r\n\t\r\n\t\t\t\t\"void main() {\",\r\n\t\r\n\t\t\t\t\"\tvec3 outgoingLight = vec3( 0.0 );\",\t// outgoing light does not have an alpha, the surface does\r\n\t\t\t\t\"\tvec4 diffuseColor = vec4( diffuse, opacity );\",\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_fragment\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"map_fragment\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"color_fragment\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"alphamap_fragment\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"alphatest_fragment\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"specularmap_fragment\" ],\r\n\t\r\n\t\t\t\t\"\t#ifdef DOUBLE_SIDED\",\r\n\t\r\n\t\t\t\t\"\t\tif ( gl_FrontFacing )\",\r\n\t\t\t\t\"\t\t\toutgoingLight += diffuseColor.rgb * vLightFront + emissive;\",\r\n\t\t\t\t\"\t\telse\",\r\n\t\t\t\t\"\t\t\toutgoingLight += diffuseColor.rgb * vLightBack + emissive;\",\r\n\t\r\n\t\t\t\t\"\t#else\",\r\n\t\r\n\t\t\t\t\"\t\toutgoingLight += diffuseColor.rgb * vLightFront + emissive;\",\r\n\t\r\n\t\t\t\t\"\t#endif\",\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"envmap_fragment\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"shadowmap_fragment\" ],\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"linear_to_gamma_fragment\" ],\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"fog_fragment\" ],\r\n\t\r\n\t\t\t\t\"\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\",\r\n\t\r\n\t\t\t\t\"}\"\r\n\t\r\n\t\t\t].join( \"\\n\" )\r\n\t\r\n\t\t},\r\n\t\r\n\t\t'phong': {\r\n\t\r\n\t\t\tuniforms: THREE.UniformsUtils.merge( [\r\n\t\r\n\t\t\t\tTHREE.UniformsLib[ \"common\" ],\r\n\t\t\t\tTHREE.UniformsLib[ \"aomap\" ],\r\n\t\t\t\tTHREE.UniformsLib[ \"lightmap\" ],\r\n\t\t\t\tTHREE.UniformsLib[ \"emissivemap\" ],\r\n\t\t\t\tTHREE.UniformsLib[ \"bumpmap\" ],\r\n\t\t\t\tTHREE.UniformsLib[ \"normalmap\" ],\r\n\t\t\t\tTHREE.UniformsLib[ \"displacementmap\" ],\r\n\t\t\t\tTHREE.UniformsLib[ \"fog\" ],\r\n\t\t\t\tTHREE.UniformsLib[ \"lights\" ],\r\n\t\t\t\tTHREE.UniformsLib[ \"shadowmap\" ],\r\n\t\r\n\t\t\t\t{\r\n\t\t\t\t\t\"emissive\" : { type: \"c\", value: new THREE.Color( 0x000000 ) },\r\n\t\t\t\t\t\"specular\" : { type: \"c\", value: new THREE.Color( 0x111111 ) },\r\n\t\t\t\t\t\"shininess\": { type: \"f\", value: 30 }\r\n\t\t\t\t}\r\n\t\r\n\t\t\t] ),\r\n\t\r\n\t\t\tvertexShader: [\r\n\t\r\n\t\t\t\t\"#define PHONG\",\r\n\t\r\n\t\t\t\t\"varying vec3 vViewPosition;\",\r\n\t\r\n\t\t\t\t\"#ifndef FLAT_SHADED\",\r\n\t\r\n\t\t\t\t\"\tvarying vec3 vNormal;\",\r\n\t\r\n\t\t\t\t\"#endif\",\r\n\t\r\n\t\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"uv_pars_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"uv2_pars_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"displacementmap_pars_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"envmap_pars_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"lights_phong_pars_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"color_pars_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"morphtarget_pars_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"skinning_pars_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"shadowmap_pars_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_vertex\" ],\r\n\t\r\n\t\t\t\t\"void main() {\",\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"uv_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"uv2_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"color_vertex\" ],\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"beginnormal_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"morphnormal_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"skinbase_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"skinnormal_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"defaultnormal_vertex\" ],\r\n\t\r\n\t\t\t\t\"#ifndef FLAT_SHADED\", // Normal computed with derivatives when FLAT_SHADED\r\n\t\r\n\t\t\t\t\"\tvNormal = normalize( transformedNormal );\",\r\n\t\r\n\t\t\t\t\"#endif\",\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"begin_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"displacementmap_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"morphtarget_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"skinning_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"project_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_vertex\" ],\r\n\t\r\n\t\t\t\t\"\tvViewPosition = - mvPosition.xyz;\",\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"worldpos_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"envmap_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"lights_phong_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"shadowmap_vertex\" ],\r\n\t\r\n\t\t\t\t\"}\"\r\n\t\r\n\t\t\t].join( \"\\n\" ),\r\n\t\r\n\t\t\tfragmentShader: [\r\n\t\r\n\t\t\t\t\"#define PHONG\",\r\n\t\r\n\t\t\t\t\"uniform vec3 diffuse;\",\r\n\t\t\t\t\"uniform vec3 emissive;\",\r\n\t\t\t\t\"uniform vec3 specular;\",\r\n\t\t\t\t\"uniform float shininess;\",\r\n\t\t\t\t\"uniform float opacity;\",\r\n\t\r\n\t\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"color_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"uv_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"uv2_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"map_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"alphamap_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"aomap_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"lightmap_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"emissivemap_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"envmap_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"fog_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"lights_phong_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"shadowmap_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"bumpmap_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"normalmap_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"specularmap_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_fragment\" ],\r\n\t\r\n\t\t\t\t\"void main() {\",\r\n\t\r\n\t\t\t\t\"\tvec3 outgoingLight = vec3( 0.0 );\",\r\n\t\t\t\t\"\tvec4 diffuseColor = vec4( diffuse, opacity );\",\r\n\t\t\t\t\"\tvec3 totalAmbientLight = ambientLightColor;\",\r\n\t\t\t\t\"\tvec3 totalEmissiveLight = emissive;\",\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_fragment\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"map_fragment\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"color_fragment\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"alphamap_fragment\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"alphatest_fragment\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"specularmap_fragment\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"lightmap_fragment\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"aomap_fragment\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"emissivemap_fragment\" ],\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"lights_phong_fragment\" ],\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"envmap_fragment\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"shadowmap_fragment\" ],\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"linear_to_gamma_fragment\" ],\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"fog_fragment\" ],\r\n\t\r\n\t\t\t\t\"\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\",\r\n\t\r\n\t\t\t\t\"}\"\r\n\t\r\n\t\t\t].join( \"\\n\" )\r\n\t\r\n\t\t},\r\n\t\r\n\t\t'points': {\r\n\t\r\n\t\t\tuniforms: THREE.UniformsUtils.merge( [\r\n\t\r\n\t\t\t\tTHREE.UniformsLib[ \"points\" ],\r\n\t\t\t\tTHREE.UniformsLib[ \"shadowmap\" ]\r\n\t\r\n\t\t\t] ),\r\n\t\r\n\t\t\tvertexShader: [\r\n\t\r\n\t\t\t\t\"uniform float size;\",\r\n\t\t\t\t\"uniform float scale;\",\r\n\t\r\n\t\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"color_pars_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"shadowmap_pars_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_vertex\" ],\r\n\t\r\n\t\t\t\t\"void main() {\",\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"color_vertex\" ],\r\n\t\r\n\t\t\t\t\"\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\",\r\n\t\r\n\t\t\t\t\"\t#ifdef USE_SIZEATTENUATION\",\r\n\t\t\t\t\"\t\tgl_PointSize = size * ( scale / length( mvPosition.xyz ) );\",\r\n\t\t\t\t\"\t#else\",\r\n\t\t\t\t\"\t\tgl_PointSize = size;\",\r\n\t\t\t\t\"\t#endif\",\r\n\t\r\n\t\t\t\t\"\tgl_Position = projectionMatrix * mvPosition;\",\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"worldpos_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"shadowmap_vertex\" ],\r\n\t\r\n\t\t\t\t\"}\"\r\n\t\r\n\t\t\t].join( \"\\n\" ),\r\n\t\r\n\t\t\tfragmentShader: [\r\n\t\r\n\t\t\t\t\"uniform vec3 psColor;\",\r\n\t\t\t\t\"uniform float opacity;\",\r\n\t\r\n\t\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"color_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"map_particle_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"fog_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"shadowmap_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_fragment\" ],\r\n\t\r\n\t\t\t\t\"void main() {\",\r\n\t\r\n\t\t\t\t\"\tvec3 outgoingLight = vec3( 0.0 );\",\r\n\t\t\t\t\"\tvec4 diffuseColor = vec4( psColor, opacity );\",\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_fragment\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"map_particle_fragment\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"color_fragment\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"alphatest_fragment\" ],\r\n\t\r\n\t\t\t\t\"\toutgoingLight = diffuseColor.rgb;\", // simple shader\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"shadowmap_fragment\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"fog_fragment\" ],\r\n\t\r\n\t\t\t\t\"\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\",\r\n\t\r\n\t\t\t\t\"}\"\r\n\t\r\n\t\t\t].join( \"\\n\" )\r\n\t\r\n\t\t},\r\n\t\r\n\t\t'dashed': {\r\n\t\r\n\t\t\tuniforms: THREE.UniformsUtils.merge( [\r\n\t\r\n\t\t\t\tTHREE.UniformsLib[ \"common\" ],\r\n\t\t\t\tTHREE.UniformsLib[ \"fog\" ],\r\n\t\r\n\t\t\t\t{\r\n\t\t\t\t\t\"scale\"    : { type: \"f\", value: 1 },\r\n\t\t\t\t\t\"dashSize\" : { type: \"f\", value: 1 },\r\n\t\t\t\t\t\"totalSize\": { type: \"f\", value: 2 }\r\n\t\t\t\t}\r\n\t\r\n\t\t\t] ),\r\n\t\r\n\t\t\tvertexShader: [\r\n\t\r\n\t\t\t\t\"uniform float scale;\",\r\n\t\t\t\t\"attribute float lineDistance;\",\r\n\t\r\n\t\t\t\t\"varying float vLineDistance;\",\r\n\t\r\n\t\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"color_pars_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_vertex\" ],\r\n\t\r\n\t\t\t\t\"void main() {\",\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"color_vertex\" ],\r\n\t\r\n\t\t\t\t\"\tvLineDistance = scale * lineDistance;\",\r\n\t\r\n\t\t\t\t\"\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\",\r\n\t\t\t\t\"\tgl_Position = projectionMatrix * mvPosition;\",\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_vertex\" ],\r\n\t\r\n\t\t\t\t\"}\"\r\n\t\r\n\t\t\t].join( \"\\n\" ),\r\n\t\r\n\t\t\tfragmentShader: [\r\n\t\r\n\t\t\t\t\"uniform vec3 diffuse;\",\r\n\t\t\t\t\"uniform float opacity;\",\r\n\t\r\n\t\t\t\t\"uniform float dashSize;\",\r\n\t\t\t\t\"uniform float totalSize;\",\r\n\t\r\n\t\t\t\t\"varying float vLineDistance;\",\r\n\t\r\n\t\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"color_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"fog_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_fragment\" ],\r\n\t\r\n\t\t\t\t\"void main() {\",\r\n\t\r\n\t\t\t\t\"\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\",\r\n\t\r\n\t\t\t\t\"\t\tdiscard;\",\r\n\t\r\n\t\t\t\t\"\t}\",\r\n\t\r\n\t\t\t\t\"\tvec3 outgoingLight = vec3( 0.0 );\",\r\n\t\t\t\t\"\tvec4 diffuseColor = vec4( diffuse, opacity );\",\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_fragment\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"color_fragment\" ],\r\n\t\r\n\t\t\t\t\"\toutgoingLight = diffuseColor.rgb;\", // simple shader\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"fog_fragment\" ],\r\n\t\r\n\t\t\t\t\"\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\",\r\n\t\r\n\t\t\t\t\"}\"\r\n\t\r\n\t\t\t].join( \"\\n\" )\r\n\t\r\n\t\t},\r\n\t\r\n\t\t'depth': {\r\n\t\r\n\t\t\tuniforms: {\r\n\t\r\n\t\t\t\t\"mNear\": { type: \"f\", value: 1.0 },\r\n\t\t\t\t\"mFar\" : { type: \"f\", value: 2000.0 },\r\n\t\t\t\t\"opacity\" : { type: \"f\", value: 1.0 }\r\n\t\r\n\t\t\t},\r\n\t\r\n\t\t\tvertexShader: [\r\n\t\r\n\t\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"morphtarget_pars_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_vertex\" ],\r\n\t\r\n\t\t\t\t\"void main() {\",\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"begin_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"morphtarget_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"project_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_vertex\" ],\r\n\t\r\n\t\t\t\t\"}\"\r\n\t\r\n\t\t\t].join( \"\\n\" ),\r\n\t\r\n\t\t\tfragmentShader: [\r\n\t\r\n\t\t\t\t\"uniform float mNear;\",\r\n\t\t\t\t\"uniform float mFar;\",\r\n\t\t\t\t\"uniform float opacity;\",\r\n\t\r\n\t\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_fragment\" ],\r\n\t\r\n\t\t\t\t\"void main() {\",\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_fragment\" ],\r\n\t\r\n\t\t\t\t\"\t#ifdef USE_LOGDEPTHBUF_EXT\",\r\n\t\r\n\t\t\t\t\"\t\tfloat depth = gl_FragDepthEXT / gl_FragCoord.w;\",\r\n\t\r\n\t\t\t\t\"\t#else\",\r\n\t\r\n\t\t\t\t\"\t\tfloat depth = gl_FragCoord.z / gl_FragCoord.w;\",\r\n\t\r\n\t\t\t\t\"\t#endif\",\r\n\t\r\n\t\t\t\t\"\tfloat color = 1.0 - smoothstep( mNear, mFar, depth );\",\r\n\t\t\t\t\"\tgl_FragColor = vec4( vec3( color ), opacity );\",\r\n\t\r\n\t\t\t\t\"}\"\r\n\t\r\n\t\t\t].join( \"\\n\" )\r\n\t\r\n\t\t},\r\n\t\r\n\t\t'normal': {\r\n\t\r\n\t\t\tuniforms: {\r\n\t\r\n\t\t\t\t\"opacity\" : { type: \"f\", value: 1.0 }\r\n\t\r\n\t\t\t},\r\n\t\r\n\t\t\tvertexShader: [\r\n\t\r\n\t\t\t\t\"varying vec3 vNormal;\",\r\n\t\r\n\t\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"morphtarget_pars_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_vertex\" ],\r\n\t\r\n\t\t\t\t\"void main() {\",\r\n\t\r\n\t\t\t\t\"\tvNormal = normalize( normalMatrix * normal );\",\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"begin_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"morphtarget_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"project_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_vertex\" ],\r\n\t\r\n\t\t\t\t\"}\"\r\n\t\r\n\t\t\t].join( \"\\n\" ),\r\n\t\r\n\t\t\tfragmentShader: [\r\n\t\r\n\t\t\t\t\"uniform float opacity;\",\r\n\t\t\t\t\"varying vec3 vNormal;\",\r\n\t\r\n\t\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_fragment\" ],\r\n\t\r\n\t\t\t\t\"void main() {\",\r\n\t\r\n\t\t\t\t\"\tgl_FragColor = vec4( 0.5 * normalize( vNormal ) + 0.5, opacity );\",\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_fragment\" ],\r\n\t\r\n\t\t\t\t\"}\"\r\n\t\r\n\t\t\t].join( \"\\n\" )\r\n\t\r\n\t\t},\r\n\t\r\n\t\t/* -------------------------------------------------------------------------\r\n\t\t//\tCube map shader\r\n\t\t ------------------------------------------------------------------------- */\r\n\t\r\n\t\t'cube': {\r\n\t\r\n\t\t\tuniforms: { \"tCube\": { type: \"t\", value: null },\r\n\t\t\t\t\t\t\"tFlip\": { type: \"f\", value: - 1 } },\r\n\t\r\n\t\t\tvertexShader: [\r\n\t\r\n\t\t\t\t\"varying vec3 vWorldPosition;\",\r\n\t\r\n\t\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_vertex\" ],\r\n\t\r\n\t\t\t\t\"void main() {\",\r\n\t\r\n\t\t\t\t\"\tvWorldPosition = transformDirection( position, modelMatrix );\",\r\n\t\r\n\t\t\t\t\"\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_vertex\" ],\r\n\t\r\n\t\t\t\t\"}\"\r\n\t\r\n\t\t\t].join( \"\\n\" ),\r\n\t\r\n\t\t\tfragmentShader: [\r\n\t\r\n\t\t\t\t\"uniform samplerCube tCube;\",\r\n\t\t\t\t\"uniform float tFlip;\",\r\n\t\r\n\t\t\t\t\"varying vec3 vWorldPosition;\",\r\n\t\r\n\t\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_fragment\" ],\r\n\t\r\n\t\t\t\t\"void main() {\",\r\n\t\r\n\t\t\t\t\"\tgl_FragColor = textureCube( tCube, vec3( tFlip * vWorldPosition.x, vWorldPosition.yz ) );\",\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_fragment\" ],\r\n\t\r\n\t\t\t\t\"}\"\r\n\t\r\n\t\t\t].join( \"\\n\" )\r\n\t\r\n\t\t},\r\n\t\r\n\t\t/* -------------------------------------------------------------------------\r\n\t\t//\tCube map shader\r\n\t\t ------------------------------------------------------------------------- */\r\n\t\r\n\t\t'equirect': {\r\n\t\r\n\t\t\tuniforms: { \"tEquirect\": { type: \"t\", value: null },\r\n\t\t\t\t\t\t\"tFlip\": { type: \"f\", value: - 1 } },\r\n\t\r\n\t\t\tvertexShader: [\r\n\t\r\n\t\t\t\t\"varying vec3 vWorldPosition;\",\r\n\t\r\n\t\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_vertex\" ],\r\n\t\r\n\t\t\t\t\"void main() {\",\r\n\t\r\n\t\t\t\t\"\tvWorldPosition = transformDirection( position, modelMatrix );\",\r\n\t\r\n\t\t\t\t\"\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_vertex\" ],\r\n\t\r\n\t\t\t\t\"}\"\r\n\t\r\n\t\t\t].join( \"\\n\" ),\r\n\t\r\n\t\t\tfragmentShader: [\r\n\t\r\n\t\t\t\t\"uniform sampler2D tEquirect;\",\r\n\t\t\t\t\"uniform float tFlip;\",\r\n\t\r\n\t\t\t\t\"varying vec3 vWorldPosition;\",\r\n\t\r\n\t\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_fragment\" ],\r\n\t\r\n\t\t\t\t\"void main() {\",\r\n\t\r\n\t\t\t\t\t// \"\tgl_FragColor = textureCube( tCube, vec3( tFlip * vWorldPosition.x, vWorldPosition.yz ) );\",\r\n\t\t\t\t\t\"vec3 direction = normalize( vWorldPosition );\",\r\n\t\t\t\t\t\"vec2 sampleUV;\",\r\n\t\t\t\t\t\"sampleUV.y = saturate( tFlip * direction.y * -0.5 + 0.5 );\",\r\n\t\t\t\t\t\"sampleUV.x = atan( direction.z, direction.x ) * RECIPROCAL_PI2 + 0.5;\",\r\n\t\t\t\t\t\"gl_FragColor = texture2D( tEquirect, sampleUV );\",\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_fragment\" ],\r\n\t\r\n\t\t\t\t\"}\"\r\n\t\r\n\t\t\t].join( \"\\n\" )\r\n\t\r\n\t\t},\r\n\t\r\n\t\t/* Depth encoding into RGBA texture\r\n\t\t *\r\n\t\t * based on SpiderGL shadow map example\r\n\t\t * http://spidergl.org/example.php?id=6\r\n\t\t *\r\n\t\t * originally from\r\n\t\t * http://www.gamedev.net/topic/442138-packing-a-float-into-a-a8r8g8b8-texture-shader/page__whichpage__1%25EF%25BF%25BD\r\n\t\t *\r\n\t\t * see also\r\n\t\t * http://aras-p.info/blog/2009/07/30/encoding-floats-to-rgba-the-final/\r\n\t\t */\r\n\t\r\n\t\t'depthRGBA': {\r\n\t\r\n\t\t\tuniforms: {},\r\n\t\r\n\t\t\tvertexShader: [\r\n\t\r\n\t\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"morphtarget_pars_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"skinning_pars_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_vertex\" ],\r\n\t\r\n\t\t\t\t\"void main() {\",\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"skinbase_vertex\" ],\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"begin_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"morphtarget_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"skinning_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"project_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_vertex\" ],\r\n\t\r\n\t\t\t\t\"}\"\r\n\t\r\n\t\t\t].join( \"\\n\" ),\r\n\t\r\n\t\t\tfragmentShader: [\r\n\t\r\n\t\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_fragment\" ],\r\n\t\r\n\t\t\t\t\"vec4 pack_depth( const in float depth ) {\",\r\n\t\r\n\t\t\t\t\"\tconst vec4 bit_shift = vec4( 256.0 * 256.0 * 256.0, 256.0 * 256.0, 256.0, 1.0 );\",\r\n\t\t\t\t\"\tconst vec4 bit_mask = vec4( 0.0, 1.0 / 256.0, 1.0 / 256.0, 1.0 / 256.0 );\",\r\n\t\t\t\t\"\tvec4 res = mod( depth * bit_shift * vec4( 255 ), vec4( 256 ) ) / vec4( 255 );\", // \"\tvec4 res = fract( depth * bit_shift );\",\r\n\t\t\t\t\"\tres -= res.xxyz * bit_mask;\",\r\n\t\t\t\t\"\treturn res;\",\r\n\t\r\n\t\t\t\t\"}\",\r\n\t\r\n\t\t\t\t\"void main() {\",\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_fragment\" ],\r\n\t\r\n\t\t\t\t\"\t#ifdef USE_LOGDEPTHBUF_EXT\",\r\n\t\r\n\t\t\t\t\"\t\tgl_FragData[ 0 ] = pack_depth( gl_FragDepthEXT );\",\r\n\t\r\n\t\t\t\t\"\t#else\",\r\n\t\r\n\t\t\t\t\"\t\tgl_FragData[ 0 ] = pack_depth( gl_FragCoord.z );\",\r\n\t\r\n\t\t\t\t\"\t#endif\",\r\n\t\r\n\t\t\t\t\t//\"gl_FragData[ 0 ] = pack_depth( gl_FragCoord.z / gl_FragCoord.w );\",\r\n\t\t\t\t\t//\"float z = ( ( gl_FragCoord.z / gl_FragCoord.w ) - 3.0 ) / ( 4000.0 - 3.0 );\",\r\n\t\t\t\t\t//\"gl_FragData[ 0 ] = pack_depth( z );\",\r\n\t\t\t\t\t//\"gl_FragData[ 0 ] = vec4( z, z, z, 1.0 );\",\r\n\t\r\n\t\t\t\t\"}\"\r\n\t\r\n\t\t\t].join( \"\\n\" )\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/renderers/WebGLRenderer.js\r\n\t\r\n\t/**\r\n\t * @author supereggbert / http://www.paulbrunt.co.uk/\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author szimek / https://github.com/szimek/\r\n\t */\r\n\t\r\n\tTHREE.WebGLRenderer = function ( parameters ) {\r\n\t\r\n\t\tconsole.log( 'THREE.WebGLRenderer', THREE.REVISION );\r\n\t\r\n\t\tparameters = parameters || {};\r\n\t\r\n\t\tvar _canvas = parameters.canvas !== undefined ? parameters.canvas : document.createElement( 'canvas' ),\r\n\t\t_context = parameters.context !== undefined ? parameters.context : null,\r\n\t\r\n\t\t_width = _canvas.width,\r\n\t\t_height = _canvas.height,\r\n\t\r\n\t\tpixelRatio = 1,\r\n\t\r\n\t\t_alpha = parameters.alpha !== undefined ? parameters.alpha : false,\r\n\t\t_depth = parameters.depth !== undefined ? parameters.depth : true,\r\n\t\t_stencil = parameters.stencil !== undefined ? parameters.stencil : true,\r\n\t\t_antialias = parameters.antialias !== undefined ? parameters.antialias : false,\r\n\t\t_premultipliedAlpha = parameters.premultipliedAlpha !== undefined ? parameters.premultipliedAlpha : true,\r\n\t\t_preserveDrawingBuffer = parameters.preserveDrawingBuffer !== undefined ? parameters.preserveDrawingBuffer : false,\r\n\t\r\n\t\t_clearColor = new THREE.Color( 0x000000 ),\r\n\t\t_clearAlpha = 0;\r\n\t\r\n\t\tvar lights = [];\r\n\t\r\n\t\tvar opaqueObjects = [];\r\n\t\tvar opaqueObjectsLastIndex = -1;\r\n\t\tvar transparentObjects = [];\r\n\t\tvar transparentObjectsLastIndex = -1;\r\n\t\r\n\t\tvar opaqueImmediateObjects = [];\r\n\t\tvar opaqueImmediateObjectsLastIndex = -1;\r\n\t\tvar transparentImmediateObjects = [];\r\n\t\tvar transparentImmediateObjectsLastIndex = -1;\r\n\t\r\n\t\tvar morphInfluences = new Float32Array( 8 );\r\n\t\r\n\t\r\n\t\tvar sprites = [];\r\n\t\tvar lensFlares = [];\r\n\t\r\n\t\t// public properties\r\n\t\r\n\t\tthis.domElement = _canvas;\r\n\t\tthis.context = null;\r\n\t\r\n\t\t// clearing\r\n\t\r\n\t\tthis.autoClear = true;\r\n\t\tthis.autoClearColor = true;\r\n\t\tthis.autoClearDepth = true;\r\n\t\tthis.autoClearStencil = true;\r\n\t\r\n\t\t// scene graph\r\n\t\r\n\t\tthis.sortObjects = true;\r\n\t\r\n\t\t// physically based shading\r\n\t\r\n\t\tthis.gammaFactor = 2.0;\t// for backwards compatibility\r\n\t\tthis.gammaInput = false;\r\n\t\tthis.gammaOutput = false;\r\n\t\r\n\t\t// morphs\r\n\t\r\n\t\tthis.maxMorphTargets = 8;\r\n\t\tthis.maxMorphNormals = 4;\r\n\t\r\n\t\t// flags\r\n\t\r\n\t\tthis.autoScaleCubemaps = true;\r\n\t\r\n\t\t// internal properties\r\n\t\r\n\t\tvar _this = this,\r\n\t\r\n\t\t// internal state cache\r\n\t\r\n\t\t_currentProgram = null,\r\n\t\t_currentFramebuffer = null,\r\n\t\t_currentMaterialId = - 1,\r\n\t\t_currentGeometryProgram = '',\r\n\t\t_currentCamera = null,\r\n\t\r\n\t\t_usedTextureUnits = 0,\r\n\t\r\n\t\t_viewportX = 0,\r\n\t\t_viewportY = 0,\r\n\t\t_viewportWidth = _canvas.width,\r\n\t\t_viewportHeight = _canvas.height,\r\n\t\t_currentWidth = 0,\r\n\t\t_currentHeight = 0,\r\n\t\r\n\t\t// frustum\r\n\t\r\n\t\t_frustum = new THREE.Frustum(),\r\n\t\r\n\t\t // camera matrices cache\r\n\t\r\n\t\t_projScreenMatrix = new THREE.Matrix4(),\r\n\t\r\n\t\t_vector3 = new THREE.Vector3(),\r\n\t\r\n\t\t// light arrays cache\r\n\t\r\n\t\t_direction = new THREE.Vector3(),\r\n\t\r\n\t\t_lightsNeedUpdate = true,\r\n\t\r\n\t\t_lights = {\r\n\t\r\n\t\t\tambient: [ 0, 0, 0 ],\r\n\t\t\tdirectional: { length: 0, colors: [], positions: [] },\r\n\t\t\tpoint: { length: 0, colors: [], positions: [], distances: [], decays: [] },\r\n\t\t\tspot: { length: 0, colors: [], positions: [], distances: [], directions: [], anglesCos: [], exponents: [], decays: [] },\r\n\t\t\themi: { length: 0, skyColors: [], groundColors: [], positions: [] }\r\n\t\r\n\t\t},\r\n\t\r\n\t\t// info\r\n\t\r\n\t\t_infoMemory = {\r\n\t\r\n\t\t\tgeometries: 0,\r\n\t\t\ttextures: 0\r\n\t\r\n\t\t},\r\n\t\r\n\t\t_infoRender = {\r\n\t\r\n\t\t\tcalls: 0,\r\n\t\t\tvertices: 0,\r\n\t\t\tfaces: 0,\r\n\t\t\tpoints: 0\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.info = {\r\n\t\r\n\t\t\trender: _infoRender,\r\n\t\t\tmemory: _infoMemory,\r\n\t\t\tprograms: null\r\n\t\r\n\t\t};\r\n\t\r\n\t\r\n\t\t// initialize\r\n\t\r\n\t\tvar _gl;\r\n\t\r\n\t\ttry {\r\n\t\r\n\t\t\tvar attributes = {\r\n\t\t\t\talpha: _alpha,\r\n\t\t\t\tdepth: _depth,\r\n\t\t\t\tstencil: _stencil,\r\n\t\t\t\tantialias: _antialias,\r\n\t\t\t\tpremultipliedAlpha: _premultipliedAlpha,\r\n\t\t\t\tpreserveDrawingBuffer: _preserveDrawingBuffer\r\n\t\t\t};\r\n\t\r\n\t\t\t_gl = _context || _canvas.getContext( 'webgl', attributes ) || _canvas.getContext( 'experimental-webgl', attributes );\r\n\t\r\n\t\t\tif ( _gl === null ) {\r\n\t\r\n\t\t\t\tif ( _canvas.getContext( 'webgl' ) !== null ) {\r\n\t\r\n\t\t\t\t\tthrow 'Error creating WebGL context with your selected attributes.';\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tthrow 'Error creating WebGL context.';\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t_canvas.addEventListener( 'webglcontextlost', onContextLost, false );\r\n\t\r\n\t\t} catch ( error ) {\r\n\t\r\n\t\t\tconsole.error( 'THREE.WebGLRenderer: ' + error );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tvar extensions = new THREE.WebGLExtensions( _gl );\r\n\t\r\n\t\textensions.get( 'OES_texture_float' );\r\n\t\textensions.get( 'OES_texture_float_linear' );\r\n\t\textensions.get( 'OES_texture_half_float' );\r\n\t\textensions.get( 'OES_texture_half_float_linear' );\r\n\t\textensions.get( 'OES_standard_derivatives' );\r\n\t\textensions.get( 'ANGLE_instanced_arrays' );\r\n\t\r\n\t\tif ( extensions.get( 'OES_element_index_uint' ) ) {\r\n\t\r\n\t\t\tTHREE.BufferGeometry.MaxIndex = 4294967296;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tvar capabilities = new THREE.WebGLCapabilities( _gl, extensions, parameters );\r\n\t\r\n\t\tvar state = new THREE.WebGLState( _gl, extensions, paramThreeToGL );\r\n\t\tvar properties = new THREE.WebGLProperties();\r\n\t\tvar objects = new THREE.WebGLObjects( _gl, properties, this.info );\r\n\t\tvar programCache = new THREE.WebGLPrograms( this, capabilities );\r\n\t\r\n\t\tthis.info.programs = programCache.programs;\r\n\t\r\n\t\tvar bufferRenderer = new THREE.WebGLBufferRenderer( _gl, extensions, _infoRender );\r\n\t\tvar indexedBufferRenderer = new THREE.WebGLIndexedBufferRenderer( _gl, extensions, _infoRender );\r\n\t\r\n\t\t//\r\n\t\r\n\t\tfunction glClearColor( r, g, b, a ) {\r\n\t\r\n\t\t\tif ( _premultipliedAlpha === true ) {\r\n\t\r\n\t\t\t\tr *= a; g *= a; b *= a;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t_gl.clearColor( r, g, b, a );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction setDefaultGLState() {\r\n\t\r\n\t\t\tstate.init();\r\n\t\r\n\t\t\t_gl.viewport( _viewportX, _viewportY, _viewportWidth, _viewportHeight );\r\n\t\r\n\t\t\tglClearColor( _clearColor.r, _clearColor.g, _clearColor.b, _clearAlpha );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction resetGLState() {\r\n\t\r\n\t\t\t_currentProgram = null;\r\n\t\t\t_currentCamera = null;\r\n\t\r\n\t\t\t_currentGeometryProgram = '';\r\n\t\t\t_currentMaterialId = - 1;\r\n\t\r\n\t\t\t_lightsNeedUpdate = true;\r\n\t\r\n\t\t\tstate.reset();\r\n\t\r\n\t\t}\r\n\t\r\n\t\tsetDefaultGLState();\r\n\t\r\n\t\tthis.context = _gl;\r\n\t\tthis.capabilities = capabilities;\r\n\t\tthis.extensions = extensions;\r\n\t\tthis.state = state;\r\n\t\r\n\t\t// shadow map\r\n\t\r\n\t\tvar shadowMap = new THREE.WebGLShadowMap( this, lights, objects );\r\n\t\r\n\t\tthis.shadowMap = shadowMap;\r\n\t\r\n\t\r\n\t\t// Plugins\r\n\t\r\n\t\tvar spritePlugin = new THREE.SpritePlugin( this, sprites );\r\n\t\tvar lensFlarePlugin = new THREE.LensFlarePlugin( this, lensFlares );\r\n\t\r\n\t\t// API\r\n\t\r\n\t\tthis.getContext = function () {\r\n\t\r\n\t\t\treturn _gl;\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.getContextAttributes = function () {\r\n\t\r\n\t\t\treturn _gl.getContextAttributes();\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.forceContextLoss = function () {\r\n\t\r\n\t\t\textensions.get( 'WEBGL_lose_context' ).loseContext();\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.getMaxAnisotropy = ( function () {\r\n\t\r\n\t\t\tvar value;\r\n\t\r\n\t\t\treturn function getMaxAnisotropy() {\r\n\t\r\n\t\t\t\tif ( value !== undefined ) return value;\r\n\t\r\n\t\t\t\tvar extension = extensions.get( 'EXT_texture_filter_anisotropic' );\r\n\t\r\n\t\t\t\tif ( extension !== null ) {\r\n\t\r\n\t\t\t\t\tvalue = _gl.getParameter( extension.MAX_TEXTURE_MAX_ANISOTROPY_EXT );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tvalue = 0;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn value;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t} )();\r\n\t\r\n\t\tthis.getPrecision = function () {\r\n\t\r\n\t\t\treturn capabilities.precision;\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.getPixelRatio = function () {\r\n\t\r\n\t\t\treturn pixelRatio;\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.setPixelRatio = function ( value ) {\r\n\t\r\n\t\t\tif ( value !== undefined ) pixelRatio = value;\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.getSize = function () {\r\n\t\r\n\t\t\treturn {\r\n\t\t\t\twidth: _width,\r\n\t\t\t\theight: _height\r\n\t\t\t};\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.setSize = function ( width, height, updateStyle ) {\r\n\t\r\n\t\t\t_width = width;\r\n\t\t\t_height = height;\r\n\t\r\n\t\t\t_canvas.width = width * pixelRatio;\r\n\t\t\t_canvas.height = height * pixelRatio;\r\n\t\r\n\t\t\tif ( updateStyle !== false ) {\r\n\t\r\n\t\t\t\t_canvas.style.width = width + 'px';\r\n\t\t\t\t_canvas.style.height = height + 'px';\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.setViewport( 0, 0, width, height );\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.setViewport = function ( x, y, width, height ) {\r\n\t\r\n\t\t\t_viewportX = x * pixelRatio;\r\n\t\t\t_viewportY = y * pixelRatio;\r\n\t\r\n\t\t\t_viewportWidth = width * pixelRatio;\r\n\t\t\t_viewportHeight = height * pixelRatio;\r\n\t\r\n\t\t\t_gl.viewport( _viewportX, _viewportY, _viewportWidth, _viewportHeight );\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.setScissor = function ( x, y, width, height ) {\r\n\t\r\n\t\t\t_gl.scissor(\r\n\t\t\t\tx * pixelRatio,\r\n\t\t\t\ty * pixelRatio,\r\n\t\t\t\twidth * pixelRatio,\r\n\t\t\t\theight * pixelRatio\r\n\t\t\t);\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.enableScissorTest = function ( boolean ) {\r\n\t\r\n\t\t\tstate.setScissorTest( boolean );\r\n\t\r\n\t\t};\r\n\t\r\n\t\t// Clearing\r\n\t\r\n\t\tthis.getClearColor = function () {\r\n\t\r\n\t\t\treturn _clearColor;\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.setClearColor = function ( color, alpha ) {\r\n\t\r\n\t\t\t_clearColor.set( color );\r\n\t\r\n\t\t\t_clearAlpha = alpha !== undefined ? alpha : 1;\r\n\t\r\n\t\t\tglClearColor( _clearColor.r, _clearColor.g, _clearColor.b, _clearAlpha );\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.getClearAlpha = function () {\r\n\t\r\n\t\t\treturn _clearAlpha;\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.setClearAlpha = function ( alpha ) {\r\n\t\r\n\t\t\t_clearAlpha = alpha;\r\n\t\r\n\t\t\tglClearColor( _clearColor.r, _clearColor.g, _clearColor.b, _clearAlpha );\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.clear = function ( color, depth, stencil ) {\r\n\t\r\n\t\t\tvar bits = 0;\r\n\t\r\n\t\t\tif ( color === undefined || color ) bits |= _gl.COLOR_BUFFER_BIT;\r\n\t\t\tif ( depth === undefined || depth ) bits |= _gl.DEPTH_BUFFER_BIT;\r\n\t\t\tif ( stencil === undefined || stencil ) bits |= _gl.STENCIL_BUFFER_BIT;\r\n\t\r\n\t\t\t_gl.clear( bits );\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.clearColor = function () {\r\n\t\r\n\t\t\t_gl.clear( _gl.COLOR_BUFFER_BIT );\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.clearDepth = function () {\r\n\t\r\n\t\t\t_gl.clear( _gl.DEPTH_BUFFER_BIT );\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.clearStencil = function () {\r\n\t\r\n\t\t\t_gl.clear( _gl.STENCIL_BUFFER_BIT );\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.clearTarget = function ( renderTarget, color, depth, stencil ) {\r\n\t\r\n\t\t\tthis.setRenderTarget( renderTarget );\r\n\t\t\tthis.clear( color, depth, stencil );\r\n\t\r\n\t\t};\r\n\t\r\n\t\t// Reset\r\n\t\r\n\t\tthis.resetGLState = resetGLState;\r\n\t\r\n\t\tthis.dispose = function() {\r\n\t\r\n\t\t\t_canvas.removeEventListener( 'webglcontextlost', onContextLost, false );\r\n\t\r\n\t\t};\r\n\t\r\n\t\t// Events\r\n\t\r\n\t\tfunction onContextLost( event ) {\r\n\t\r\n\t\t\tevent.preventDefault();\r\n\t\r\n\t\t\tresetGLState();\r\n\t\t\tsetDefaultGLState();\r\n\t\r\n\t\t\tproperties.clear();\r\n\t\r\n\t\t};\r\n\t\r\n\t\tfunction onTextureDispose( event ) {\r\n\t\r\n\t\t\tvar texture = event.target;\r\n\t\r\n\t\t\ttexture.removeEventListener( 'dispose', onTextureDispose );\r\n\t\r\n\t\t\tdeallocateTexture( texture );\r\n\t\r\n\t\t\t_infoMemory.textures --;\r\n\t\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction onRenderTargetDispose( event ) {\r\n\t\r\n\t\t\tvar renderTarget = event.target;\r\n\t\r\n\t\t\trenderTarget.removeEventListener( 'dispose', onRenderTargetDispose );\r\n\t\r\n\t\t\tdeallocateRenderTarget( renderTarget );\r\n\t\r\n\t\t\t_infoMemory.textures --;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction onMaterialDispose( event ) {\r\n\t\r\n\t\t\tvar material = event.target;\r\n\t\r\n\t\t\tmaterial.removeEventListener( 'dispose', onMaterialDispose );\r\n\t\r\n\t\t\tdeallocateMaterial( material );\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// Buffer deallocation\r\n\t\r\n\t\tfunction deallocateTexture( texture ) {\r\n\t\r\n\t\t\tvar textureProperties = properties.get( texture );\r\n\t\r\n\t\t\tif ( texture.image && textureProperties.__image__webglTextureCube ) {\r\n\t\r\n\t\t\t\t// cube texture\r\n\t\r\n\t\t\t\t_gl.deleteTexture( textureProperties.__image__webglTextureCube );\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\t// 2D texture\r\n\t\r\n\t\t\t\tif ( textureProperties.__webglInit === undefined ) return;\r\n\t\r\n\t\t\t\t_gl.deleteTexture( textureProperties.__webglTexture );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// remove all webgl properties\r\n\t\t\tproperties.delete( texture );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction deallocateRenderTarget( renderTarget ) {\r\n\t\r\n\t\t\tvar renderTargetProperties = properties.get( renderTarget );\r\n\t\r\n\t\t\tif ( ! renderTarget || renderTargetProperties.__webglTexture === undefined ) return;\r\n\t\r\n\t\t\t_gl.deleteTexture( renderTargetProperties.__webglTexture );\r\n\t\r\n\t\t\tif ( renderTarget instanceof THREE.WebGLRenderTargetCube ) {\r\n\t\r\n\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\r\n\t\r\n\t\t\t\t\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer[ i ] );\r\n\t\t\t\t\t_gl.deleteRenderbuffer( renderTargetProperties.__webglRenderbuffer[ i ] );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer );\r\n\t\t\t\t_gl.deleteRenderbuffer( renderTargetProperties.__webglRenderbuffer );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tproperties.delete( renderTarget );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction deallocateMaterial( material ) {\r\n\t\r\n\t\t\treleaseMaterialProgramReference( material );\r\n\t\r\n\t\t\tproperties.delete( material );\r\n\t\r\n\t\t}\r\n\t\r\n\t\r\n\t\tfunction releaseMaterialProgramReference( material ) {\r\n\t\r\n\t\t\tvar programInfo = properties.get( material ).program;\r\n\t\r\n\t\t\tmaterial.program = undefined;\r\n\t\r\n\t\t\tif ( programInfo !== undefined ) {\r\n\t\r\n\t\t\t\tprogramCache.releaseProgram( programInfo );\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// Buffer rendering\r\n\t\r\n\t\tthis.renderBufferImmediate = function ( object, program, material ) {\r\n\t\r\n\t\t\tstate.initAttributes();\r\n\t\r\n\t\t\tvar buffers = properties.get( object );\r\n\t\r\n\t\t\tif ( object.hasPositions && ! buffers.position ) buffers.position = _gl.createBuffer();\r\n\t\t\tif ( object.hasNormals && ! buffers.normal ) buffers.normal = _gl.createBuffer();\r\n\t\t\tif ( object.hasUvs && ! buffers.uv ) buffers.uv = _gl.createBuffer();\r\n\t\t\tif ( object.hasColors && ! buffers.color ) buffers.color = _gl.createBuffer();\r\n\t\r\n\t\t\tvar attributes = program.getAttributes();\r\n\t\r\n\t\t\tif ( object.hasPositions ) {\r\n\t\r\n\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffers.position );\r\n\t\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, object.positionArray, _gl.DYNAMIC_DRAW );\r\n\t\r\n\t\t\t\tstate.enableAttribute( attributes.position );\r\n\t\t\t\t_gl.vertexAttribPointer( attributes.position, 3, _gl.FLOAT, false, 0, 0 );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( object.hasNormals ) {\r\n\t\r\n\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffers.normal );\r\n\t\r\n\t\t\t\tif ( material.type !== 'MeshPhongMaterial' && material.shading === THREE.FlatShading ) {\r\n\t\r\n\t\t\t\t\tfor ( var i = 0, l = object.count * 3; i < l; i += 9 ) {\r\n\t\r\n\t\t\t\t\t\tvar array = object.normalArray;\r\n\t\r\n\t\t\t\t\t\tvar nx = ( array[ i + 0 ] + array[ i + 3 ] + array[ i + 6 ] ) / 3;\r\n\t\t\t\t\t\tvar ny = ( array[ i + 1 ] + array[ i + 4 ] + array[ i + 7 ] ) / 3;\r\n\t\t\t\t\t\tvar nz = ( array[ i + 2 ] + array[ i + 5 ] + array[ i + 8 ] ) / 3;\r\n\t\r\n\t\t\t\t\t\tarray[ i + 0 ] = nx;\r\n\t\t\t\t\t\tarray[ i + 1 ] = ny;\r\n\t\t\t\t\t\tarray[ i + 2 ] = nz;\r\n\t\r\n\t\t\t\t\t\tarray[ i + 3 ] = nx;\r\n\t\t\t\t\t\tarray[ i + 4 ] = ny;\r\n\t\t\t\t\t\tarray[ i + 5 ] = nz;\r\n\t\r\n\t\t\t\t\t\tarray[ i + 6 ] = nx;\r\n\t\t\t\t\t\tarray[ i + 7 ] = ny;\r\n\t\t\t\t\t\tarray[ i + 8 ] = nz;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, object.normalArray, _gl.DYNAMIC_DRAW );\r\n\t\r\n\t\t\t\tstate.enableAttribute( attributes.normal );\r\n\t\r\n\t\t\t\t_gl.vertexAttribPointer( attributes.normal, 3, _gl.FLOAT, false, 0, 0 );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( object.hasUvs && material.map ) {\r\n\t\r\n\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffers.uv );\r\n\t\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, object.uvArray, _gl.DYNAMIC_DRAW );\r\n\t\r\n\t\t\t\tstate.enableAttribute( attributes.uv );\r\n\t\r\n\t\t\t\t_gl.vertexAttribPointer( attributes.uv, 2, _gl.FLOAT, false, 0, 0 );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( object.hasColors && material.vertexColors !== THREE.NoColors ) {\r\n\t\r\n\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffers.color );\r\n\t\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, object.colorArray, _gl.DYNAMIC_DRAW );\r\n\t\r\n\t\t\t\tstate.enableAttribute( attributes.color );\r\n\t\r\n\t\t\t\t_gl.vertexAttribPointer( attributes.color, 3, _gl.FLOAT, false, 0, 0 );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tstate.disableUnusedAttributes();\r\n\t\r\n\t\t\t_gl.drawArrays( _gl.TRIANGLES, 0, object.count );\r\n\t\r\n\t\t\tobject.count = 0;\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.renderBufferDirect = function ( camera, lights, fog, geometry, material, object, group ) {\r\n\t\r\n\t\t\tsetMaterial( material );\r\n\t\r\n\t\t\tvar program = setProgram( camera, lights, fog, material, object );\r\n\t\r\n\t\t\tvar updateBuffers = false;\r\n\t\t\tvar geometryProgram = geometry.id + '_' + program.id + '_' + material.wireframe;\r\n\t\r\n\t\t\tif ( geometryProgram !== _currentGeometryProgram ) {\r\n\t\r\n\t\t\t\t_currentGeometryProgram = geometryProgram;\r\n\t\t\t\tupdateBuffers = true;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// morph targets\r\n\t\r\n\t\t\tvar morphTargetInfluences = object.morphTargetInfluences;\r\n\t\r\n\t\t\tif ( morphTargetInfluences !== undefined ) {\r\n\t\r\n\t\t\t\tvar activeInfluences = [];\r\n\t\r\n\t\t\t\tfor ( var i = 0, l = morphTargetInfluences.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\t\tvar influence = morphTargetInfluences[ i ];\r\n\t\t\t\t\tactiveInfluences.push( [ influence, i ] );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tactiveInfluences.sort( numericalSort );\r\n\t\r\n\t\t\t\tif ( activeInfluences.length > 8 ) {\r\n\t\r\n\t\t\t\t\tactiveInfluences.length = 8;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar morphAttributes = geometry.morphAttributes;\r\n\t\r\n\t\t\t\tfor ( var i = 0, l = activeInfluences.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\t\tvar influence = activeInfluences[ i ];\r\n\t\t\t\t\tmorphInfluences[ i ] = influence[ 0 ];\r\n\t\r\n\t\t\t\t\tif ( influence[ 0 ] !== 0 ) {\r\n\t\r\n\t\t\t\t\t\tvar index = influence[ 1 ];\r\n\t\r\n\t\t\t\t\t\tif ( material.morphTargets === true && morphAttributes.position ) geometry.addAttribute( 'morphTarget' + i, morphAttributes.position[ index ] );\r\n\t\t\t\t\t\tif ( material.morphNormals === true && morphAttributes.normal ) geometry.addAttribute( 'morphNormal' + i, morphAttributes.normal[ index ] );\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\tif ( material.morphTargets === true ) geometry.removeAttribute( 'morphTarget' + i );\r\n\t\t\t\t\t\tif ( material.morphNormals === true ) geometry.removeAttribute( 'morphNormal' + i );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar uniforms = program.getUniforms();\r\n\t\r\n\t\t\t\tif ( uniforms.morphTargetInfluences !== null ) {\r\n\t\r\n\t\t\t\t\t_gl.uniform1fv( uniforms.morphTargetInfluences, morphInfluences );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tupdateBuffers = true;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t//\r\n\t\r\n\t\t\tvar index = geometry.index;\r\n\t\t\tvar position = geometry.attributes.position;\r\n\t\r\n\t\t\tif ( material.wireframe === true ) {\r\n\t\r\n\t\t\t\tindex = objects.getWireframeAttribute( geometry );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar renderer;\r\n\t\r\n\t\t\tif ( index !== null ) {\r\n\t\r\n\t\t\t\trenderer = indexedBufferRenderer;\r\n\t\t\t\trenderer.setIndex( index );\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\trenderer = bufferRenderer;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( updateBuffers ) {\r\n\t\r\n\t\t\t\tsetupVertexAttributes( material, program, geometry );\r\n\t\r\n\t\t\t\tif ( index !== null ) {\r\n\t\r\n\t\t\t\t\t_gl.bindBuffer( _gl.ELEMENT_ARRAY_BUFFER, objects.getAttributeBuffer( index ) );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( group === undefined ) {\r\n\t\r\n\t\t\t\tvar count;\r\n\t\r\n\t\t\t\tif ( index !== null ) {\r\n\t\r\n\t\t\t\t\tcount = index.count;\r\n\t\r\n\t\t\t\t} else if ( position instanceof THREE.InterleavedBufferAttribute ) {\r\n\t\r\n\t\t\t\t\tcount = position.data.array.length / 3;\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tcount = position.count;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar drawRange = geometry.drawRange;\r\n\t\r\n\t\t\t\tgroup = {\r\n\t\t\t\t\tstart: drawRange.start,\r\n\t\t\t\t\tcount: Math.min( drawRange.count, count )\r\n\t\t\t\t};\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( object instanceof THREE.Mesh ) {\r\n\t\r\n\t\t\t\tif ( material.wireframe === true ) {\r\n\t\r\n\t\t\t\t\tstate.setLineWidth( material.wireframeLinewidth * pixelRatio );\r\n\t\t\t\t\trenderer.setMode( _gl.LINES );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\trenderer.setMode( _gl.TRIANGLES );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( geometry instanceof THREE.InstancedBufferGeometry && geometry.maxInstancedCount > 0 ) {\r\n\t\r\n\t\t\t\t\trenderer.renderInstances( geometry );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\trenderer.render( group.start, group.count );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t} else if ( object instanceof THREE.Line ) {\r\n\t\r\n\t\t\t\tvar lineWidth = material.linewidth;\r\n\t\r\n\t\t\t\tif ( lineWidth === undefined ) lineWidth = 1; // Not using Line*Material\r\n\t\r\n\t\t\t\tstate.setLineWidth( lineWidth * pixelRatio );\r\n\t\r\n\t\t\t\tif ( object instanceof THREE.LineSegments ) {\r\n\t\r\n\t\t\t\t\trenderer.setMode( _gl.LINES );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\trenderer.setMode( _gl.LINE_STRIP );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\trenderer.render( group.start, group.count );\r\n\t\r\n\t\t\t} else if ( object instanceof THREE.Points ) {\r\n\t\r\n\t\t\t\trenderer.setMode( _gl.POINTS );\r\n\t\t\t\trenderer.render( group.start, group.count );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t\tfunction setupVertexAttributes( material, program, geometry, startIndex ) {\r\n\t\r\n\t\t\tvar extension;\r\n\t\r\n\t\t\tif ( geometry instanceof THREE.InstancedBufferGeometry ) {\r\n\t\r\n\t\t\t\textension = extensions.get( 'ANGLE_instanced_arrays' );\r\n\t\r\n\t\t\t\tif ( extension === null ) {\r\n\t\r\n\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.setupVertexAttributes: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\r\n\t\t\t\t\treturn;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( startIndex === undefined ) startIndex = 0;\r\n\t\r\n\t\t\tstate.initAttributes();\r\n\t\r\n\t\t\tvar geometryAttributes = geometry.attributes;\r\n\t\r\n\t\t\tvar programAttributes = program.getAttributes();\r\n\t\r\n\t\t\tvar materialDefaultAttributeValues = material.defaultAttributeValues;\r\n\t\r\n\t\t\tfor ( var name in programAttributes ) {\r\n\t\r\n\t\t\t\tvar programAttribute = programAttributes[ name ];\r\n\t\r\n\t\t\t\tif ( programAttribute >= 0 ) {\r\n\t\r\n\t\t\t\t\tvar geometryAttribute = geometryAttributes[ name ];\r\n\t\r\n\t\t\t\t\tif ( geometryAttribute !== undefined ) {\r\n\t\r\n\t\t\t\t\t\tstate.enableAttribute( programAttribute );\r\n\t\r\n\t\t\t\t\t\tvar size = geometryAttribute.itemSize;\r\n\t\t\t\t\t\tvar buffer = objects.getAttributeBuffer( geometryAttribute );\r\n\t\r\n\t\t\t\t\t\tif ( geometryAttribute instanceof THREE.InterleavedBufferAttribute ) {\r\n\t\r\n\t\t\t\t\t\t\tvar data = geometryAttribute.data;\r\n\t\t\t\t\t\t\tvar stride = data.stride;\r\n\t\t\t\t\t\t\tvar offset = geometryAttribute.offset;\r\n\t\r\n\t\t\t\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffer );\r\n\t\t\t\t\t\t\t_gl.vertexAttribPointer( programAttribute, size, _gl.FLOAT, false, stride * data.array.BYTES_PER_ELEMENT, ( startIndex * stride + offset ) * data.array.BYTES_PER_ELEMENT );\r\n\t\r\n\t\t\t\t\t\t\tif ( data instanceof THREE.InstancedInterleavedBuffer ) {\r\n\t\r\n\t\t\t\t\t\t\t\tif ( extension === null ) {\r\n\t\r\n\t\t\t\t\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.setupVertexAttributes: using THREE.InstancedBufferAttribute but hardware does not support extension ANGLE_instanced_arrays.' );\r\n\t\t\t\t\t\t\t\t\treturn;\r\n\t\r\n\t\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t\t\textension.vertexAttribDivisorANGLE( programAttribute, data.meshPerAttribute );\r\n\t\r\n\t\t\t\t\t\t\t\tif ( geometry.maxInstancedCount === undefined ) {\r\n\t\r\n\t\t\t\t\t\t\t\t\tgeometry.maxInstancedCount = data.meshPerAttribute * data.count;\r\n\t\r\n\t\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffer );\r\n\t\t\t\t\t\t\t_gl.vertexAttribPointer( programAttribute, size, _gl.FLOAT, false, 0, startIndex * size * 4 ); // 4 bytes per Float32\r\n\t\r\n\t\t\t\t\t\t\tif ( geometryAttribute instanceof THREE.InstancedBufferAttribute ) {\r\n\t\r\n\t\t\t\t\t\t\t\tif ( extension === null ) {\r\n\t\r\n\t\t\t\t\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.setupVertexAttributes: using THREE.InstancedBufferAttribute but hardware does not support extension ANGLE_instanced_arrays.' );\r\n\t\t\t\t\t\t\t\t\treturn;\r\n\t\r\n\t\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t\t\textension.vertexAttribDivisorANGLE( programAttribute, geometryAttribute.meshPerAttribute );\r\n\t\r\n\t\t\t\t\t\t\t\tif ( geometry.maxInstancedCount === undefined ) {\r\n\t\r\n\t\t\t\t\t\t\t\t\tgeometry.maxInstancedCount = geometryAttribute.meshPerAttribute * geometryAttribute.count;\r\n\t\r\n\t\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t} else if ( materialDefaultAttributeValues !== undefined ) {\r\n\t\r\n\t\t\t\t\t\tvar value = materialDefaultAttributeValues[ name ];\r\n\t\r\n\t\t\t\t\t\tif ( value !== undefined ) {\r\n\t\r\n\t\t\t\t\t\t\tswitch ( value.length ) {\r\n\t\r\n\t\t\t\t\t\t\t\tcase 2:\r\n\t\t\t\t\t\t\t\t\t_gl.vertexAttrib2fv( programAttribute, value );\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\t\t\tcase 3:\r\n\t\t\t\t\t\t\t\t\t_gl.vertexAttrib3fv( programAttribute, value );\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\t\t\tcase 4:\r\n\t\t\t\t\t\t\t\t\t_gl.vertexAttrib4fv( programAttribute, value );\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\t\t\t_gl.vertexAttrib1fv( programAttribute, value );\r\n\t\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tstate.disableUnusedAttributes();\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// Sorting\r\n\t\r\n\t\tfunction numericalSort ( a, b ) {\r\n\t\r\n\t\t\treturn b[ 0 ] - a[ 0 ];\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction painterSortStable ( a, b ) {\r\n\t\r\n\t\t\tif ( a.object.renderOrder !== b.object.renderOrder ) {\r\n\t\r\n\t\t\t\treturn a.object.renderOrder - b.object.renderOrder;\r\n\t\r\n\t\t\t} else if ( a.material.id !== b.material.id ) {\r\n\t\r\n\t\t\t\treturn a.material.id - b.material.id;\r\n\t\r\n\t\t\t} else if ( a.z !== b.z ) {\r\n\t\r\n\t\t\t\treturn a.z - b.z;\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\treturn a.id - b.id;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction reversePainterSortStable ( a, b ) {\r\n\t\r\n\t\t\tif ( a.object.renderOrder !== b.object.renderOrder ) {\r\n\t\r\n\t\t\t\treturn a.object.renderOrder - b.object.renderOrder;\r\n\t\r\n\t\t\t} if ( a.z !== b.z ) {\r\n\t\r\n\t\t\t\treturn b.z - a.z;\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\treturn a.id - b.id;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// Rendering\r\n\t\r\n\t\tthis.render = function ( scene, camera, renderTarget, forceClear ) {\r\n\t\r\n\t\t\tif ( camera instanceof THREE.Camera === false ) {\r\n\t\r\n\t\t\t\tconsole.error( 'THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.' );\r\n\t\t\t\treturn;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar fog = scene.fog;\r\n\t\r\n\t\t\t// reset caching for this frame\r\n\t\r\n\t\t\t_currentGeometryProgram = '';\r\n\t\t\t_currentMaterialId = - 1;\r\n\t\t\t_currentCamera = null;\r\n\t\t\t_lightsNeedUpdate = true;\r\n\t\r\n\t\t\t// update scene graph\r\n\t\r\n\t\t\tif ( scene.autoUpdate === true ) scene.updateMatrixWorld();\r\n\t\r\n\t\t\t// update camera matrices and frustum\r\n\t\r\n\t\t\tif ( camera.parent === null ) camera.updateMatrixWorld();\r\n\t\r\n\t\t\tcamera.matrixWorldInverse.getInverse( camera.matrixWorld );\r\n\t\r\n\t\t\t_projScreenMatrix.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse );\r\n\t\t\t_frustum.setFromMatrix( _projScreenMatrix );\r\n\t\r\n\t\t\tlights.length = 0;\r\n\t\r\n\t\t\topaqueObjectsLastIndex = -1;\r\n\t\t\ttransparentObjectsLastIndex = -1;\r\n\t\r\n\t\t\topaqueImmediateObjectsLastIndex = -1;\r\n\t\t\ttransparentImmediateObjectsLastIndex = -1;\r\n\t\r\n\t\t\tsprites.length = 0;\r\n\t\t\tlensFlares.length = 0;\r\n\t\r\n\t\t\tprojectObject( scene );\r\n\t\r\n\t\t\topaqueObjects.length = opaqueObjectsLastIndex + 1;\r\n\t\t\ttransparentObjects.length = transparentObjectsLastIndex + 1;\r\n\t\r\n\t\t\topaqueImmediateObjects.length = opaqueImmediateObjectsLastIndex + 1;\r\n\t\t\ttransparentImmediateObjects.length = transparentImmediateObjectsLastIndex + 1;\r\n\t\r\n\t\t\tif ( _this.sortObjects === true ) {\r\n\t\r\n\t\t\t\topaqueObjects.sort( painterSortStable );\r\n\t\t\t\ttransparentObjects.sort( reversePainterSortStable );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t//\r\n\t\r\n\t\t\tshadowMap.render( scene, camera );\r\n\t\r\n\t\t\t//\r\n\t\r\n\t\t\t_infoRender.calls = 0;\r\n\t\t\t_infoRender.vertices = 0;\r\n\t\t\t_infoRender.faces = 0;\r\n\t\t\t_infoRender.points = 0;\r\n\t\r\n\t\t\tthis.setRenderTarget( renderTarget );\r\n\t\r\n\t\t\tif ( this.autoClear || forceClear ) {\r\n\t\r\n\t\t\t\tthis.clear( this.autoClearColor, this.autoClearDepth, this.autoClearStencil );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t//\r\n\t\r\n\t\t\tif ( scene.overrideMaterial ) {\r\n\t\r\n\t\t\t\tvar overrideMaterial = scene.overrideMaterial;\r\n\t\r\n\t\t\t\trenderObjects( opaqueObjects, camera, lights, fog, overrideMaterial );\r\n\t\t\t\trenderObjects( transparentObjects, camera, lights, fog, overrideMaterial );\r\n\t\r\n\t\t\t\trenderObjectsImmediate( opaqueImmediateObjects, camera, lights, fog, overrideMaterial );\r\n\t\t\t\trenderObjectsImmediate( transparentImmediateObjects, camera, lights, fog, overrideMaterial );\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\t// opaque pass (front-to-back order)\r\n\t\r\n\t\t\t\tstate.setBlending( THREE.NoBlending );\r\n\t\r\n\t\t\t\trenderObjects( opaqueObjects, camera, lights, fog );\r\n\t\t\t\trenderObjectsImmediate( opaqueImmediateObjects, camera, lights, fog );\r\n\t\r\n\t\t\t\t// transparent pass (back-to-front order)\r\n\t\r\n\t\t\t\trenderObjects( transparentObjects, camera, lights, fog );\r\n\t\t\t\trenderObjectsImmediate( transparentImmediateObjects, camera, lights, fog );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// custom render plugins (post pass)\r\n\t\r\n\t\t\tspritePlugin.render( scene, camera );\r\n\t\t\tlensFlarePlugin.render( scene, camera, _currentWidth, _currentHeight );\r\n\t\r\n\t\t\t// Generate mipmap if we're using any kind of mipmap filtering\r\n\t\r\n\t\t\tif ( renderTarget && renderTarget.generateMipmaps && renderTarget.minFilter !== THREE.NearestFilter && renderTarget.minFilter !== THREE.LinearFilter ) {\r\n\t\r\n\t\t\t\tupdateRenderTargetMipmap( renderTarget );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// Ensure depth buffer writing is enabled so it can be cleared on next render\r\n\t\r\n\t\t\tstate.setDepthTest( true );\r\n\t\t\tstate.setDepthWrite( true );\r\n\t\t\tstate.setColorWrite( true );\r\n\t\r\n\t\t\t// _gl.finish();\r\n\t\r\n\t\t};\r\n\t\r\n\t\tfunction pushImmediateRenderItem( object ) {\r\n\t\r\n\t\t\tvar array, index;\r\n\t\r\n\t\t\t// allocate the next position in the appropriate array\r\n\t\r\n\t\t\tif ( object.material.transparent ) {\r\n\t\r\n\t\t\t\tarray = transparentImmediateObjects;\r\n\t\t\t\tindex = ++ transparentImmediateObjectsLastIndex;\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tarray = opaqueImmediateObjects;\r\n\t\t\t\tindex = ++ opaqueImmediateObjectsLastIndex;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// recycle existing position or grow the array\r\n\t\r\n\t\t\tif ( index < array.length ) {\r\n\t\r\n\t\t\t\tarray[ index ] = object;\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\t// assert( index === array.length );\r\n\t\t\t\tarray.push( object );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction pushRenderItem( object, geometry, material, z, group ) {\r\n\t\r\n\t\t\tvar array, index;\r\n\t\r\n\t\t\t// allocate the next position in the appropriate array\r\n\t\r\n\t\t\tif ( material.transparent ) {\r\n\t\r\n\t\t\t\tarray = transparentObjects;\r\n\t\t\t\tindex = ++ transparentObjectsLastIndex;\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tarray = opaqueObjects;\r\n\t\t\t\tindex = ++ opaqueObjectsLastIndex;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// recycle existing render item or grow the array\r\n\t\r\n\t\t\tvar renderItem = array[ index ];\r\n\t\r\n\t\t\tif ( renderItem !== undefined ) {\r\n\t\r\n\t\t\t\trenderItem.id = object.id;\r\n\t\t\t\trenderItem.object = object;\r\n\t\t\t\trenderItem.geometry = geometry;\r\n\t\t\t\trenderItem.material = material;\r\n\t\t\t\trenderItem.z = _vector3.z;\r\n\t\t\t\trenderItem.group = group;\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\trenderItem = {\r\n\t\t\t\t\tid: object.id,\r\n\t\t\t\t\tobject: object,\r\n\t\t\t\t\tgeometry: geometry,\r\n\t\t\t\t\tmaterial: material,\r\n\t\t\t\t\tz: _vector3.z,\r\n\t\t\t\t\tgroup: group\r\n\t\t\t\t};\r\n\t\r\n\t\t\t\t// assert( index === array.length );\r\n\t\t\t\tarray.push( renderItem );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction projectObject( object ) {\r\n\t\r\n\t\t\tif ( object.visible === false ) return;\r\n\t\r\n\t\t\tif ( object instanceof THREE.Light ) {\r\n\t\r\n\t\t\t\tlights.push( object );\r\n\t\r\n\t\t\t} else if ( object instanceof THREE.Sprite ) {\r\n\t\r\n\t\t\t\tsprites.push( object );\r\n\t\r\n\t\t\t} else if ( object instanceof THREE.LensFlare ) {\r\n\t\r\n\t\t\t\tlensFlares.push( object );\r\n\t\r\n\t\t\t} else if ( object instanceof THREE.ImmediateRenderObject ) {\r\n\t\r\n\t\t\t\tpushImmediateRenderItem( object );\r\n\t\r\n\t\t\t} else if ( object instanceof THREE.Mesh || object instanceof THREE.Line || object instanceof THREE.Points ) {\r\n\t\r\n\t\t\t\tif ( object instanceof THREE.SkinnedMesh ) {\r\n\t\r\n\t\t\t\t\tobject.skeleton.update();\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( object.frustumCulled === false || _frustum.intersectsObject( object ) === true ) {\r\n\t\r\n\t\t\t\t\tvar material = object.material;\r\n\t\r\n\t\t\t\t\tif ( material.visible === true ) {\r\n\t\r\n\t\t\t\t\t\tif ( _this.sortObjects === true ) {\r\n\t\r\n\t\t\t\t\t\t\t_vector3.setFromMatrixPosition( object.matrixWorld );\r\n\t\t\t\t\t\t\t_vector3.applyProjection( _projScreenMatrix );\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tvar geometry = objects.update( object );\r\n\t\r\n\t\t\t\t\t\tif ( material instanceof THREE.MeshFaceMaterial ) {\r\n\t\r\n\t\t\t\t\t\t\tvar groups = geometry.groups;\r\n\t\t\t\t\t\t\tvar materials = material.materials;\r\n\t\r\n\t\t\t\t\t\t\tfor ( var i = 0, l = groups.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\t\t\t\t\tvar group = groups[ i ];\r\n\t\t\t\t\t\t\t\tvar groupMaterial = materials[ group.materialIndex ];\r\n\t\r\n\t\t\t\t\t\t\t\tif ( groupMaterial.visible === true ) {\r\n\t\r\n\t\t\t\t\t\t\t\t\tpushRenderItem( object, geometry, groupMaterial, _vector3.z, group );\r\n\t\r\n\t\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\t\tpushRenderItem( object, geometry, material, _vector3.z );\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar children = object.children;\r\n\t\r\n\t\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\tprojectObject( children[ i ] );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction renderObjects( renderList, camera, lights, fog, overrideMaterial ) {\r\n\t\r\n\t\t\tfor ( var i = 0, l = renderList.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\tvar renderItem = renderList[ i ];\r\n\t\r\n\t\t\t\tvar object = renderItem.object;\r\n\t\t\t\tvar geometry = renderItem.geometry;\r\n\t\t\t\tvar material = overrideMaterial === undefined ? renderItem.material : overrideMaterial;\r\n\t\t\t\tvar group = renderItem.group;\r\n\t\r\n\t\t\t\tobject.modelViewMatrix.multiplyMatrices( camera.matrixWorldInverse, object.matrixWorld );\r\n\t\t\t\tobject.normalMatrix.getNormalMatrix( object.modelViewMatrix );\r\n\t\r\n\t\t\t\t_this.renderBufferDirect( camera, lights, fog, geometry, material, object, group );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction renderObjectsImmediate( renderList, camera, lights, fog, overrideMaterial ) {\r\n\t\r\n\t\t\tvar material = overrideMaterial;\r\n\t\r\n\t\t\tfor ( var i = 0, l = renderList.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\tvar object = renderList[ i ];\r\n\t\r\n\t\t\t\tobject.modelViewMatrix.multiplyMatrices( camera.matrixWorldInverse, object.matrixWorld );\r\n\t\t\t\tobject.normalMatrix.getNormalMatrix( object.modelViewMatrix );\r\n\t\r\n\t\t\t\tif ( overrideMaterial === undefined ) material = object.material;\r\n\t\r\n\t\t\t\tsetMaterial( material );\r\n\t\r\n\t\t\t\tvar program = setProgram( camera, lights, fog, material, object );\r\n\t\r\n\t\t\t\t_currentGeometryProgram = '';\r\n\t\r\n\t\t\t\tobject.render( function ( object ) {\r\n\t\r\n\t\t\t\t\t_this.renderBufferImmediate( object, program, material );\r\n\t\r\n\t\t\t\t} );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction initMaterial( material, lights, fog, object ) {\r\n\t\r\n\t\t\tvar materialProperties = properties.get( material );\r\n\t\r\n\t\t\tvar parameters = programCache.getParameters( material, lights, fog, object );\r\n\t\t\tvar code = programCache.getProgramCode( material, parameters );\r\n\t\r\n\t\t\tvar program = materialProperties.program;\r\n\t\t\tvar programChange = true;\r\n\t\r\n\t\t\tif ( program === undefined ) {\r\n\t\r\n\t\t\t\t// new material\r\n\t\t\t\tmaterial.addEventListener( 'dispose', onMaterialDispose );\r\n\t\r\n\t\t\t} else if ( program.code !== code ) {\r\n\t\r\n\t\t\t\t// changed glsl or parameters\r\n\t\t\t\treleaseMaterialProgramReference( material );\r\n\t\r\n\t\t\t} else if ( parameters.shaderID !== undefined ) {\r\n\t\r\n\t\t\t\t// same glsl and uniform list\r\n\t\t\t\treturn;\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\t// only rebuild uniform list\r\n\t\t\t\tprogramChange = false;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( programChange ) {\r\n\t\r\n\t\t\t\tif ( parameters.shaderID ) {\r\n\t\r\n\t\t\t\t\tvar shader = THREE.ShaderLib[ parameters.shaderID ];\r\n\t\r\n\t\t\t\t\tmaterialProperties.__webglShader = {\r\n\t\t\t\t\t\tname: material.type,\r\n\t\t\t\t\t\tuniforms: THREE.UniformsUtils.clone( shader.uniforms ),\r\n\t\t\t\t\t\tvertexShader: shader.vertexShader,\r\n\t\t\t\t\t\tfragmentShader: shader.fragmentShader\r\n\t\t\t\t\t};\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tmaterialProperties.__webglShader = {\r\n\t\t\t\t\t\tname: material.type,\r\n\t\t\t\t\t\tuniforms: material.uniforms,\r\n\t\t\t\t\t\tvertexShader: material.vertexShader,\r\n\t\t\t\t\t\tfragmentShader: material.fragmentShader\r\n\t\t\t\t\t};\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tmaterial.__webglShader = materialProperties.__webglShader;\r\n\t\r\n\t\t\t\tprogram = programCache.acquireProgram( material, parameters, code );\r\n\t\r\n\t\t\t\tmaterialProperties.program = program;\r\n\t\t\t\tmaterial.program = program;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar attributes = program.getAttributes();\r\n\t\r\n\t\t\tif ( material.morphTargets ) {\r\n\t\r\n\t\t\t\tmaterial.numSupportedMorphTargets = 0;\r\n\t\r\n\t\t\t\tfor ( var i = 0; i < _this.maxMorphTargets; i ++ ) {\r\n\t\r\n\t\t\t\t\tif ( attributes[ 'morphTarget' + i ] >= 0 ) {\r\n\t\r\n\t\t\t\t\t\tmaterial.numSupportedMorphTargets ++;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( material.morphNormals ) {\r\n\t\r\n\t\t\t\tmaterial.numSupportedMorphNormals = 0;\r\n\t\r\n\t\t\t\tfor ( i = 0; i < _this.maxMorphNormals; i ++ ) {\r\n\t\r\n\t\t\t\t\tif ( attributes[ 'morphNormal' + i ] >= 0 ) {\r\n\t\r\n\t\t\t\t\t\tmaterial.numSupportedMorphNormals ++;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tmaterialProperties.uniformsList = [];\r\n\t\r\n\t\t\tvar uniformLocations = materialProperties.program.getUniforms();\r\n\t\r\n\t\t\tfor ( var u in materialProperties.__webglShader.uniforms ) {\r\n\t\r\n\t\t\t\tvar location = uniformLocations[ u ];\r\n\t\r\n\t\t\t\tif ( location ) {\r\n\t\r\n\t\t\t\t\tmaterialProperties.uniformsList.push( [ materialProperties.__webglShader.uniforms[ u ], location ] );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction setMaterial( material ) {\r\n\t\r\n\t\t\tsetMaterialFaces( material );\r\n\t\r\n\t\t\tif ( material.transparent === true ) {\r\n\t\r\n\t\t\t\tstate.setBlending( material.blending, material.blendEquation, material.blendSrc, material.blendDst, material.blendEquationAlpha, material.blendSrcAlpha, material.blendDstAlpha );\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tstate.setBlending( THREE.NoBlending );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tstate.setDepthFunc( material.depthFunc );\r\n\t\t\tstate.setDepthTest( material.depthTest );\r\n\t\t\tstate.setDepthWrite( material.depthWrite );\r\n\t\t\tstate.setColorWrite( material.colorWrite );\r\n\t\t\tstate.setPolygonOffset( material.polygonOffset, material.polygonOffsetFactor, material.polygonOffsetUnits );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction setMaterialFaces( material ) {\r\n\t\r\n\t\t\tmaterial.side !== THREE.DoubleSide ? state.enable( _gl.CULL_FACE ) : state.disable( _gl.CULL_FACE );\r\n\t\t\tstate.setFlipSided( material.side === THREE.BackSide );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction setProgram( camera, lights, fog, material, object ) {\r\n\t\r\n\t\t\t_usedTextureUnits = 0;\r\n\t\r\n\t\t\tvar materialProperties = properties.get( material );\r\n\t\r\n\t\t\tif ( material.needsUpdate || ! materialProperties.program ) {\r\n\t\r\n\t\t\t\tinitMaterial( material, lights, fog, object );\r\n\t\t\t\tmaterial.needsUpdate = false;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar refreshProgram = false;\r\n\t\t\tvar refreshMaterial = false;\r\n\t\t\tvar refreshLights = false;\r\n\t\r\n\t\t\tvar program = materialProperties.program,\r\n\t\t\t\tp_uniforms = program.getUniforms(),\r\n\t\t\t\tm_uniforms = materialProperties.__webglShader.uniforms;\r\n\t\r\n\t\t\tif ( program.id !== _currentProgram ) {\r\n\t\r\n\t\t\t\t_gl.useProgram( program.program );\r\n\t\t\t\t_currentProgram = program.id;\r\n\t\r\n\t\t\t\trefreshProgram = true;\r\n\t\t\t\trefreshMaterial = true;\r\n\t\t\t\trefreshLights = true;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( material.id !== _currentMaterialId ) {\r\n\t\r\n\t\t\t\tif ( _currentMaterialId === - 1 ) refreshLights = true;\r\n\t\t\t\t_currentMaterialId = material.id;\r\n\t\r\n\t\t\t\trefreshMaterial = true;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( refreshProgram || camera !== _currentCamera ) {\r\n\t\r\n\t\t\t\t_gl.uniformMatrix4fv( p_uniforms.projectionMatrix, false, camera.projectionMatrix.elements );\r\n\t\r\n\t\t\t\tif ( capabilities.logarithmicDepthBuffer ) {\r\n\t\r\n\t\t\t\t\t_gl.uniform1f( p_uniforms.logDepthBufFC, 2.0 / ( Math.log( camera.far + 1.0 ) / Math.LN2 ) );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\r\n\t\t\t\tif ( camera !== _currentCamera ) _currentCamera = camera;\r\n\t\r\n\t\t\t\t// load material specific uniforms\r\n\t\t\t\t// (shader material also gets them for the sake of genericity)\r\n\t\r\n\t\t\t\tif ( material instanceof THREE.ShaderMaterial ||\r\n\t\t\t\t\t material instanceof THREE.MeshPhongMaterial ||\r\n\t\t\t\t\t material.envMap ) {\r\n\t\r\n\t\t\t\t\tif ( p_uniforms.cameraPosition !== undefined ) {\r\n\t\r\n\t\t\t\t\t\t_vector3.setFromMatrixPosition( camera.matrixWorld );\r\n\t\t\t\t\t\t_gl.uniform3f( p_uniforms.cameraPosition, _vector3.x, _vector3.y, _vector3.z );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( material instanceof THREE.MeshPhongMaterial ||\r\n\t\t\t\t\t material instanceof THREE.MeshLambertMaterial ||\r\n\t\t\t\t\t material instanceof THREE.MeshBasicMaterial ||\r\n\t\t\t\t\t material instanceof THREE.ShaderMaterial ||\r\n\t\t\t\t\t material.skinning ) {\r\n\t\r\n\t\t\t\t\tif ( p_uniforms.viewMatrix !== undefined ) {\r\n\t\r\n\t\t\t\t\t\t_gl.uniformMatrix4fv( p_uniforms.viewMatrix, false, camera.matrixWorldInverse.elements );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// skinning uniforms must be set even if material didn't change\r\n\t\t\t// auto-setting of texture unit for bone texture must go before other textures\r\n\t\t\t// not sure why, but otherwise weird things happen\r\n\t\r\n\t\t\tif ( material.skinning ) {\r\n\t\r\n\t\t\t\tif ( object.bindMatrix && p_uniforms.bindMatrix !== undefined ) {\r\n\t\r\n\t\t\t\t\t_gl.uniformMatrix4fv( p_uniforms.bindMatrix, false, object.bindMatrix.elements );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( object.bindMatrixInverse && p_uniforms.bindMatrixInverse !== undefined ) {\r\n\t\r\n\t\t\t\t\t_gl.uniformMatrix4fv( p_uniforms.bindMatrixInverse, false, object.bindMatrixInverse.elements );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( capabilities.floatVertexTextures && object.skeleton && object.skeleton.useVertexTexture ) {\r\n\t\r\n\t\t\t\t\tif ( p_uniforms.boneTexture !== undefined ) {\r\n\t\r\n\t\t\t\t\t\tvar textureUnit = getTextureUnit();\r\n\t\r\n\t\t\t\t\t\t_gl.uniform1i( p_uniforms.boneTexture, textureUnit );\r\n\t\t\t\t\t\t_this.setTexture( object.skeleton.boneTexture, textureUnit );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tif ( p_uniforms.boneTextureWidth !== undefined ) {\r\n\t\r\n\t\t\t\t\t\t_gl.uniform1i( p_uniforms.boneTextureWidth, object.skeleton.boneTextureWidth );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tif ( p_uniforms.boneTextureHeight !== undefined ) {\r\n\t\r\n\t\t\t\t\t\t_gl.uniform1i( p_uniforms.boneTextureHeight, object.skeleton.boneTextureHeight );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t} else if ( object.skeleton && object.skeleton.boneMatrices ) {\r\n\t\r\n\t\t\t\t\tif ( p_uniforms.boneGlobalMatrices !== undefined ) {\r\n\t\r\n\t\t\t\t\t\t_gl.uniformMatrix4fv( p_uniforms.boneGlobalMatrices, false, object.skeleton.boneMatrices );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( refreshMaterial ) {\r\n\t\r\n\t\t\t\t// refresh uniforms common to several materials\r\n\t\r\n\t\t\t\tif ( fog && material.fog ) {\r\n\t\r\n\t\t\t\t\trefreshUniformsFog( m_uniforms, fog );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( material instanceof THREE.MeshPhongMaterial ||\r\n\t\t\t\t\t material instanceof THREE.MeshLambertMaterial ||\r\n\t\t\t\t\t material.lights ) {\r\n\t\r\n\t\t\t\t\tif ( _lightsNeedUpdate ) {\r\n\t\r\n\t\t\t\t\t\trefreshLights = true;\r\n\t\t\t\t\t\tsetupLights( lights, camera );\r\n\t\t\t\t\t\t_lightsNeedUpdate = false;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tif ( refreshLights ) {\r\n\t\r\n\t\t\t\t\t\trefreshUniformsLights( m_uniforms, _lights );\r\n\t\t\t\t\t\tmarkUniformsLightsNeedsUpdate( m_uniforms, true );\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\tmarkUniformsLightsNeedsUpdate( m_uniforms, false );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( material instanceof THREE.MeshBasicMaterial ||\r\n\t\t\t\t\t material instanceof THREE.MeshLambertMaterial ||\r\n\t\t\t\t\t material instanceof THREE.MeshPhongMaterial ) {\r\n\t\r\n\t\t\t\t\trefreshUniformsCommon( m_uniforms, material );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// refresh single material specific uniforms\r\n\t\r\n\t\t\t\tif ( material instanceof THREE.LineBasicMaterial ) {\r\n\t\r\n\t\t\t\t\trefreshUniformsLine( m_uniforms, material );\r\n\t\r\n\t\t\t\t} else if ( material instanceof THREE.LineDashedMaterial ) {\r\n\t\r\n\t\t\t\t\trefreshUniformsLine( m_uniforms, material );\r\n\t\t\t\t\trefreshUniformsDash( m_uniforms, material );\r\n\t\r\n\t\t\t\t} else if ( material instanceof THREE.PointsMaterial ) {\r\n\t\r\n\t\t\t\t\trefreshUniformsParticle( m_uniforms, material );\r\n\t\r\n\t\t\t\t} else if ( material instanceof THREE.MeshPhongMaterial ) {\r\n\t\r\n\t\t\t\t\trefreshUniformsPhong( m_uniforms, material );\r\n\t\r\n\t\t\t\t} else if ( material instanceof THREE.MeshDepthMaterial ) {\r\n\t\r\n\t\t\t\t\tm_uniforms.mNear.value = camera.near;\r\n\t\t\t\t\tm_uniforms.mFar.value = camera.far;\r\n\t\t\t\t\tm_uniforms.opacity.value = material.opacity;\r\n\t\r\n\t\t\t\t} else if ( material instanceof THREE.MeshNormalMaterial ) {\r\n\t\r\n\t\t\t\t\tm_uniforms.opacity.value = material.opacity;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( object.receiveShadow && ! material._shadowPass ) {\r\n\t\r\n\t\t\t\t\trefreshUniformsShadow( m_uniforms, lights );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// load common uniforms\r\n\t\r\n\t\t\t\tloadUniformsGeneric( materialProperties.uniformsList );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tloadUniformsMatrices( p_uniforms, object );\r\n\t\r\n\t\t\tif ( p_uniforms.modelMatrix !== undefined ) {\r\n\t\r\n\t\t\t\t_gl.uniformMatrix4fv( p_uniforms.modelMatrix, false, object.matrixWorld.elements );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn program;\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// Uniforms (refresh uniforms objects)\r\n\t\r\n\t\tfunction refreshUniformsCommon ( uniforms, material ) {\r\n\t\r\n\t\t\tuniforms.opacity.value = material.opacity;\r\n\t\r\n\t\t\tuniforms.diffuse.value = material.color;\r\n\t\r\n\t\t\tif ( material.emissive ) {\r\n\t\r\n\t\t\t\tuniforms.emissive.value = material.emissive;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tuniforms.map.value = material.map;\r\n\t\t\tuniforms.specularMap.value = material.specularMap;\r\n\t\t\tuniforms.alphaMap.value = material.alphaMap;\r\n\t\r\n\t\t\tif ( material.aoMap ) {\r\n\t\r\n\t\t\t\tuniforms.aoMap.value = material.aoMap;\r\n\t\t\t\tuniforms.aoMapIntensity.value = material.aoMapIntensity;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// uv repeat and offset setting priorities\r\n\t\t\t// 1. color map\r\n\t\t\t// 2. specular map\r\n\t\t\t// 3. normal map\r\n\t\t\t// 4. bump map\r\n\t\t\t// 5. alpha map\r\n\t\t\t// 6. emissive map\r\n\t\r\n\t\t\tvar uvScaleMap;\r\n\t\r\n\t\t\tif ( material.map ) {\r\n\t\r\n\t\t\t\tuvScaleMap = material.map;\r\n\t\r\n\t\t\t} else if ( material.specularMap ) {\r\n\t\r\n\t\t\t\tuvScaleMap = material.specularMap;\r\n\t\r\n\t\t\t} else if ( material.displacementMap ) {\r\n\t\r\n\t\t\t\tuvScaleMap = material.displacementMap;\r\n\t\r\n\t\t\t} else if ( material.normalMap ) {\r\n\t\r\n\t\t\t\tuvScaleMap = material.normalMap;\r\n\t\r\n\t\t\t} else if ( material.bumpMap ) {\r\n\t\r\n\t\t\t\tuvScaleMap = material.bumpMap;\r\n\t\r\n\t\t\t} else if ( material.alphaMap ) {\r\n\t\r\n\t\t\t\tuvScaleMap = material.alphaMap;\r\n\t\r\n\t\t\t} else if ( material.emissiveMap ) {\r\n\t\r\n\t\t\t\tuvScaleMap = material.emissiveMap;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( uvScaleMap !== undefined ) {\r\n\t\r\n\t\t\t\tvar offset = uvScaleMap.offset;\r\n\t\t\t\tvar repeat = uvScaleMap.repeat;\r\n\t\r\n\t\t\t\tuniforms.offsetRepeat.value.set( offset.x, offset.y, repeat.x, repeat.y );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tuniforms.envMap.value = material.envMap;\r\n\t\t\tuniforms.flipEnvMap.value = ( material.envMap instanceof THREE.WebGLRenderTargetCube ) ? 1 : - 1;\r\n\t\r\n\t\t\tuniforms.reflectivity.value = material.reflectivity;\r\n\t\t\tuniforms.refractionRatio.value = material.refractionRatio;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction refreshUniformsLine ( uniforms, material ) {\r\n\t\r\n\t\t\tuniforms.diffuse.value = material.color;\r\n\t\t\tuniforms.opacity.value = material.opacity;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction refreshUniformsDash ( uniforms, material ) {\r\n\t\r\n\t\t\tuniforms.dashSize.value = material.dashSize;\r\n\t\t\tuniforms.totalSize.value = material.dashSize + material.gapSize;\r\n\t\t\tuniforms.scale.value = material.scale;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction refreshUniformsParticle ( uniforms, material ) {\r\n\t\r\n\t\t\tuniforms.psColor.value = material.color;\r\n\t\t\tuniforms.opacity.value = material.opacity;\r\n\t\t\tuniforms.size.value = material.size;\r\n\t\t\tuniforms.scale.value = _canvas.height / 2.0; // TODO: Cache this.\r\n\t\r\n\t\t\tuniforms.map.value = material.map;\r\n\t\r\n\t\t\tif ( material.map !== null ) {\r\n\t\r\n\t\t\t\tvar offset = material.map.offset;\r\n\t\t\t\tvar repeat = material.map.repeat;\r\n\t\r\n\t\t\t\tuniforms.offsetRepeat.value.set( offset.x, offset.y, repeat.x, repeat.y );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction refreshUniformsFog ( uniforms, fog ) {\r\n\t\r\n\t\t\tuniforms.fogColor.value = fog.color;\r\n\t\r\n\t\t\tif ( fog instanceof THREE.Fog ) {\r\n\t\r\n\t\t\t\tuniforms.fogNear.value = fog.near;\r\n\t\t\t\tuniforms.fogFar.value = fog.far;\r\n\t\r\n\t\t\t} else if ( fog instanceof THREE.FogExp2 ) {\r\n\t\r\n\t\t\t\tuniforms.fogDensity.value = fog.density;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction refreshUniformsPhong ( uniforms, material ) {\r\n\t\r\n\t\t\tuniforms.specular.value = material.specular;\r\n\t\t\tuniforms.shininess.value = material.shininess;\r\n\t\r\n\t\t\tif ( material.lightMap ) {\r\n\t\r\n\t\t\t\tuniforms.lightMap.value = material.lightMap;\r\n\t\t\t\tuniforms.lightMapIntensity.value = material.lightMapIntensity;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( material.emissiveMap ) {\r\n\t\r\n\t\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( material.bumpMap ) {\r\n\t\r\n\t\t\t\tuniforms.bumpMap.value = material.bumpMap;\r\n\t\t\t\tuniforms.bumpScale.value = material.bumpScale;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( material.normalMap ) {\r\n\t\r\n\t\t\t\tuniforms.normalMap.value = material.normalMap;\r\n\t\t\t\tuniforms.normalScale.value.copy( material.normalScale );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( material.displacementMap ) {\r\n\t\r\n\t\t\t\tuniforms.displacementMap.value = material.displacementMap;\r\n\t\t\t\tuniforms.displacementScale.value = material.displacementScale;\r\n\t\t\t\tuniforms.displacementBias.value = material.displacementBias;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction refreshUniformsLights ( uniforms, lights ) {\r\n\t\r\n\t\t\tuniforms.ambientLightColor.value = lights.ambient;\r\n\t\r\n\t\t\tuniforms.directionalLightColor.value = lights.directional.colors;\r\n\t\t\tuniforms.directionalLightDirection.value = lights.directional.positions;\r\n\t\r\n\t\t\tuniforms.pointLightColor.value = lights.point.colors;\r\n\t\t\tuniforms.pointLightPosition.value = lights.point.positions;\r\n\t\t\tuniforms.pointLightDistance.value = lights.point.distances;\r\n\t\t\tuniforms.pointLightDecay.value = lights.point.decays;\r\n\t\r\n\t\t\tuniforms.spotLightColor.value = lights.spot.colors;\r\n\t\t\tuniforms.spotLightPosition.value = lights.spot.positions;\r\n\t\t\tuniforms.spotLightDistance.value = lights.spot.distances;\r\n\t\t\tuniforms.spotLightDirection.value = lights.spot.directions;\r\n\t\t\tuniforms.spotLightAngleCos.value = lights.spot.anglesCos;\r\n\t\t\tuniforms.spotLightExponent.value = lights.spot.exponents;\r\n\t\t\tuniforms.spotLightDecay.value = lights.spot.decays;\r\n\t\r\n\t\t\tuniforms.hemisphereLightSkyColor.value = lights.hemi.skyColors;\r\n\t\t\tuniforms.hemisphereLightGroundColor.value = lights.hemi.groundColors;\r\n\t\t\tuniforms.hemisphereLightDirection.value = lights.hemi.positions;\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// If uniforms are marked as clean, they don't need to be loaded to the GPU.\r\n\t\r\n\t\tfunction markUniformsLightsNeedsUpdate ( uniforms, value ) {\r\n\t\r\n\t\t\tuniforms.ambientLightColor.needsUpdate = value;\r\n\t\r\n\t\t\tuniforms.directionalLightColor.needsUpdate = value;\r\n\t\t\tuniforms.directionalLightDirection.needsUpdate = value;\r\n\t\r\n\t\t\tuniforms.pointLightColor.needsUpdate = value;\r\n\t\t\tuniforms.pointLightPosition.needsUpdate = value;\r\n\t\t\tuniforms.pointLightDistance.needsUpdate = value;\r\n\t\t\tuniforms.pointLightDecay.needsUpdate = value;\r\n\t\r\n\t\t\tuniforms.spotLightColor.needsUpdate = value;\r\n\t\t\tuniforms.spotLightPosition.needsUpdate = value;\r\n\t\t\tuniforms.spotLightDistance.needsUpdate = value;\r\n\t\t\tuniforms.spotLightDirection.needsUpdate = value;\r\n\t\t\tuniforms.spotLightAngleCos.needsUpdate = value;\r\n\t\t\tuniforms.spotLightExponent.needsUpdate = value;\r\n\t\t\tuniforms.spotLightDecay.needsUpdate = value;\r\n\t\r\n\t\t\tuniforms.hemisphereLightSkyColor.needsUpdate = value;\r\n\t\t\tuniforms.hemisphereLightGroundColor.needsUpdate = value;\r\n\t\t\tuniforms.hemisphereLightDirection.needsUpdate = value;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction refreshUniformsShadow ( uniforms, lights ) {\r\n\t\r\n\t\t\tif ( uniforms.shadowMatrix ) {\r\n\t\r\n\t\t\t\tvar j = 0;\r\n\t\r\n\t\t\t\tfor ( var i = 0, il = lights.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\t\tvar light = lights[ i ];\r\n\t\r\n\t\t\t\t\tif ( ! light.castShadow ) continue;\r\n\t\r\n\t\t\t\t\tif ( light instanceof THREE.SpotLight || ( light instanceof THREE.DirectionalLight ) ) {\r\n\t\r\n\t\t\t\t\t\tuniforms.shadowMap.value[ j ] = light.shadowMap;\r\n\t\t\t\t\t\tuniforms.shadowMapSize.value[ j ] = light.shadowMapSize;\r\n\t\r\n\t\t\t\t\t\tuniforms.shadowMatrix.value[ j ] = light.shadowMatrix;\r\n\t\r\n\t\t\t\t\t\tuniforms.shadowDarkness.value[ j ] = light.shadowDarkness;\r\n\t\t\t\t\t\tuniforms.shadowBias.value[ j ] = light.shadowBias;\r\n\t\r\n\t\t\t\t\t\tj ++;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// Uniforms (load to GPU)\r\n\t\r\n\t\tfunction loadUniformsMatrices ( uniforms, object ) {\r\n\t\r\n\t\t\t_gl.uniformMatrix4fv( uniforms.modelViewMatrix, false, object.modelViewMatrix.elements );\r\n\t\r\n\t\t\tif ( uniforms.normalMatrix ) {\r\n\t\r\n\t\t\t\t_gl.uniformMatrix3fv( uniforms.normalMatrix, false, object.normalMatrix.elements );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction getTextureUnit() {\r\n\t\r\n\t\t\tvar textureUnit = _usedTextureUnits;\r\n\t\r\n\t\t\tif ( textureUnit >= capabilities.maxTextures ) {\r\n\t\r\n\t\t\t\tconsole.warn( 'WebGLRenderer: trying to use ' + textureUnit + ' texture units while this GPU supports only ' + capabilities.maxTextures );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t_usedTextureUnits += 1;\r\n\t\r\n\t\t\treturn textureUnit;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction loadUniformsGeneric ( uniforms ) {\r\n\t\r\n\t\t\tvar texture, textureUnit;\r\n\t\r\n\t\t\tfor ( var j = 0, jl = uniforms.length; j < jl; j ++ ) {\r\n\t\r\n\t\t\t\tvar uniform = uniforms[ j ][ 0 ];\r\n\t\r\n\t\t\t\t// needsUpdate property is not added to all uniforms.\r\n\t\t\t\tif ( uniform.needsUpdate === false ) continue;\r\n\t\r\n\t\t\t\tvar type = uniform.type;\r\n\t\t\t\tvar value = uniform.value;\r\n\t\t\t\tvar location = uniforms[ j ][ 1 ];\r\n\t\r\n\t\t\t\tswitch ( type ) {\r\n\t\r\n\t\t\t\t\tcase '1i':\r\n\t\t\t\t\t\t_gl.uniform1i( location, value );\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase '1f':\r\n\t\t\t\t\t\t_gl.uniform1f( location, value );\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase '2f':\r\n\t\t\t\t\t\t_gl.uniform2f( location, value[ 0 ], value[ 1 ] );\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase '3f':\r\n\t\t\t\t\t\t_gl.uniform3f( location, value[ 0 ], value[ 1 ], value[ 2 ] );\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase '4f':\r\n\t\t\t\t\t\t_gl.uniform4f( location, value[ 0 ], value[ 1 ], value[ 2 ], value[ 3 ] );\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase '1iv':\r\n\t\t\t\t\t\t_gl.uniform1iv( location, value );\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase '3iv':\r\n\t\t\t\t\t\t_gl.uniform3iv( location, value );\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase '1fv':\r\n\t\t\t\t\t\t_gl.uniform1fv( location, value );\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase '2fv':\r\n\t\t\t\t\t\t_gl.uniform2fv( location, value );\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase '3fv':\r\n\t\t\t\t\t\t_gl.uniform3fv( location, value );\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase '4fv':\r\n\t\t\t\t\t\t_gl.uniform4fv( location, value );\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'Matrix3fv':\r\n\t\t\t\t\t\t_gl.uniformMatrix3fv( location, false, value );\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'Matrix4fv':\r\n\t\t\t\t\t\t_gl.uniformMatrix4fv( location, false, value );\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t//\r\n\t\r\n\t\t\t\t\tcase 'i':\r\n\t\r\n\t\t\t\t\t\t// single integer\r\n\t\t\t\t\t\t_gl.uniform1i( location, value );\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'f':\r\n\t\r\n\t\t\t\t\t\t// single float\r\n\t\t\t\t\t\t_gl.uniform1f( location, value );\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'v2':\r\n\t\r\n\t\t\t\t\t\t// single THREE.Vector2\r\n\t\t\t\t\t\t_gl.uniform2f( location, value.x, value.y );\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'v3':\r\n\t\r\n\t\t\t\t\t\t// single THREE.Vector3\r\n\t\t\t\t\t\t_gl.uniform3f( location, value.x, value.y, value.z );\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'v4':\r\n\t\r\n\t\t\t\t\t\t// single THREE.Vector4\r\n\t\t\t\t\t\t_gl.uniform4f( location, value.x, value.y, value.z, value.w );\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'c':\r\n\t\r\n\t\t\t\t\t\t// single THREE.Color\r\n\t\t\t\t\t\t_gl.uniform3f( location, value.r, value.g, value.b );\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'iv1':\r\n\t\r\n\t\t\t\t\t\t// flat array of integers (JS or typed array)\r\n\t\t\t\t\t\t_gl.uniform1iv( location, value );\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'iv':\r\n\t\r\n\t\t\t\t\t\t// flat array of integers with 3 x N size (JS or typed array)\r\n\t\t\t\t\t\t_gl.uniform3iv( location, value );\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'fv1':\r\n\t\r\n\t\t\t\t\t\t// flat array of floats (JS or typed array)\r\n\t\t\t\t\t\t_gl.uniform1fv( location, value );\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'fv':\r\n\t\r\n\t\t\t\t\t\t// flat array of floats with 3 x N size (JS or typed array)\r\n\t\t\t\t\t\t_gl.uniform3fv( location, value );\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'v2v':\r\n\t\r\n\t\t\t\t\t\t// array of THREE.Vector2\r\n\t\r\n\t\t\t\t\t\tif ( uniform._array === undefined ) {\r\n\t\r\n\t\t\t\t\t\t\tuniform._array = new Float32Array( 2 * value.length );\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tfor ( var i = 0, i2 = 0, il = value.length; i < il; i ++, i2 += 2 ) {\r\n\t\r\n\t\t\t\t\t\t\tuniform._array[ i2 + 0 ] = value[ i ].x;\r\n\t\t\t\t\t\t\tuniform._array[ i2 + 1 ] = value[ i ].y;\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t_gl.uniform2fv( location, uniform._array );\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'v3v':\r\n\t\r\n\t\t\t\t\t\t// array of THREE.Vector3\r\n\t\r\n\t\t\t\t\t\tif ( uniform._array === undefined ) {\r\n\t\r\n\t\t\t\t\t\t\tuniform._array = new Float32Array( 3 * value.length );\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tfor ( var i = 0, i3 = 0, il = value.length; i < il; i ++, i3 += 3 ) {\r\n\t\r\n\t\t\t\t\t\t\tuniform._array[ i3 + 0 ] = value[ i ].x;\r\n\t\t\t\t\t\t\tuniform._array[ i3 + 1 ] = value[ i ].y;\r\n\t\t\t\t\t\t\tuniform._array[ i3 + 2 ] = value[ i ].z;\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t_gl.uniform3fv( location, uniform._array );\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'v4v':\r\n\t\r\n\t\t\t\t\t\t// array of THREE.Vector4\r\n\t\r\n\t\t\t\t\t\tif ( uniform._array === undefined ) {\r\n\t\r\n\t\t\t\t\t\t\tuniform._array = new Float32Array( 4 * value.length );\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tfor ( var i = 0, i4 = 0, il = value.length; i < il; i ++, i4 += 4 ) {\r\n\t\r\n\t\t\t\t\t\t\tuniform._array[ i4 + 0 ] = value[ i ].x;\r\n\t\t\t\t\t\t\tuniform._array[ i4 + 1 ] = value[ i ].y;\r\n\t\t\t\t\t\t\tuniform._array[ i4 + 2 ] = value[ i ].z;\r\n\t\t\t\t\t\t\tuniform._array[ i4 + 3 ] = value[ i ].w;\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t_gl.uniform4fv( location, uniform._array );\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'm3':\r\n\t\r\n\t\t\t\t\t\t// single THREE.Matrix3\r\n\t\t\t\t\t\t_gl.uniformMatrix3fv( location, false, value.elements );\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'm3v':\r\n\t\r\n\t\t\t\t\t\t// array of THREE.Matrix3\r\n\t\r\n\t\t\t\t\t\tif ( uniform._array === undefined ) {\r\n\t\r\n\t\t\t\t\t\t\tuniform._array = new Float32Array( 9 * value.length );\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tfor ( var i = 0, il = value.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\t\t\t\tvalue[ i ].flattenToArrayOffset( uniform._array, i * 9 );\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t_gl.uniformMatrix3fv( location, false, uniform._array );\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'm4':\r\n\t\r\n\t\t\t\t\t\t// single THREE.Matrix4\r\n\t\t\t\t\t\t_gl.uniformMatrix4fv( location, false, value.elements );\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'm4v':\r\n\t\r\n\t\t\t\t\t\t// array of THREE.Matrix4\r\n\t\r\n\t\t\t\t\t\tif ( uniform._array === undefined ) {\r\n\t\r\n\t\t\t\t\t\t\tuniform._array = new Float32Array( 16 * value.length );\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tfor ( var i = 0, il = value.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\t\t\t\tvalue[ i ].flattenToArrayOffset( uniform._array, i * 16 );\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t_gl.uniformMatrix4fv( location, false, uniform._array );\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 't':\r\n\t\r\n\t\t\t\t\t\t// single THREE.Texture (2d or cube)\r\n\t\r\n\t\t\t\t\t\ttexture = value;\r\n\t\t\t\t\t\ttextureUnit = getTextureUnit();\r\n\t\r\n\t\t\t\t\t\t_gl.uniform1i( location, textureUnit );\r\n\t\r\n\t\t\t\t\t\tif ( ! texture ) continue;\r\n\t\r\n\t\t\t\t\t\tif ( texture instanceof THREE.CubeTexture ||\r\n\t\t\t\t\t\t\t ( Array.isArray( texture.image ) && texture.image.length === 6 ) ) {\r\n\t\r\n\t\t\t\t\t\t\t// CompressedTexture can have Array in image :/\r\n\t\r\n\t\t\t\t\t\t\tsetCubeTexture( texture, textureUnit );\r\n\t\r\n\t\t\t\t\t\t} else if ( texture instanceof THREE.WebGLRenderTargetCube ) {\r\n\t\r\n\t\t\t\t\t\t\tsetCubeTextureDynamic( texture, textureUnit );\r\n\t\r\n\t\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\t\t_this.setTexture( texture, textureUnit );\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'tv':\r\n\t\r\n\t\t\t\t\t\t// array of THREE.Texture (2d)\r\n\t\r\n\t\t\t\t\t\tif ( uniform._array === undefined ) {\r\n\t\r\n\t\t\t\t\t\t\tuniform._array = [];\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tfor ( var i = 0, il = uniform.value.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\t\t\t\tuniform._array[ i ] = getTextureUnit();\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t_gl.uniform1iv( location, uniform._array );\r\n\t\r\n\t\t\t\t\t\tfor ( var i = 0, il = uniform.value.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\t\t\t\ttexture = uniform.value[ i ];\r\n\t\t\t\t\t\t\ttextureUnit = uniform._array[ i ];\r\n\t\r\n\t\t\t\t\t\t\tif ( ! texture ) continue;\r\n\t\r\n\t\t\t\t\t\t\t_this.setTexture( texture, textureUnit );\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tdefault:\r\n\t\r\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Unknown uniform type: ' + type );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction setColorLinear( array, offset, color, intensity ) {\r\n\t\r\n\t\t\tarray[ offset + 0 ] = color.r * intensity;\r\n\t\t\tarray[ offset + 1 ] = color.g * intensity;\r\n\t\t\tarray[ offset + 2 ] = color.b * intensity;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction setupLights ( lights, camera ) {\r\n\t\r\n\t\t\tvar l, ll, light,\r\n\t\t\tr = 0, g = 0, b = 0,\r\n\t\t\tcolor, skyColor, groundColor,\r\n\t\t\tintensity,\r\n\t\t\tdistance,\r\n\t\r\n\t\t\tzlights = _lights,\r\n\t\r\n\t\t\tviewMatrix = camera.matrixWorldInverse,\r\n\t\r\n\t\t\tdirColors = zlights.directional.colors,\r\n\t\t\tdirPositions = zlights.directional.positions,\r\n\t\r\n\t\t\tpointColors = zlights.point.colors,\r\n\t\t\tpointPositions = zlights.point.positions,\r\n\t\t\tpointDistances = zlights.point.distances,\r\n\t\t\tpointDecays = zlights.point.decays,\r\n\t\r\n\t\t\tspotColors = zlights.spot.colors,\r\n\t\t\tspotPositions = zlights.spot.positions,\r\n\t\t\tspotDistances = zlights.spot.distances,\r\n\t\t\tspotDirections = zlights.spot.directions,\r\n\t\t\tspotAnglesCos = zlights.spot.anglesCos,\r\n\t\t\tspotExponents = zlights.spot.exponents,\r\n\t\t\tspotDecays = zlights.spot.decays,\r\n\t\r\n\t\t\themiSkyColors = zlights.hemi.skyColors,\r\n\t\t\themiGroundColors = zlights.hemi.groundColors,\r\n\t\t\themiPositions = zlights.hemi.positions,\r\n\t\r\n\t\t\tdirLength = 0,\r\n\t\t\tpointLength = 0,\r\n\t\t\tspotLength = 0,\r\n\t\t\themiLength = 0,\r\n\t\r\n\t\t\tdirCount = 0,\r\n\t\t\tpointCount = 0,\r\n\t\t\tspotCount = 0,\r\n\t\t\themiCount = 0,\r\n\t\r\n\t\t\tdirOffset = 0,\r\n\t\t\tpointOffset = 0,\r\n\t\t\tspotOffset = 0,\r\n\t\t\themiOffset = 0;\r\n\t\r\n\t\t\tfor ( l = 0, ll = lights.length; l < ll; l ++ ) {\r\n\t\r\n\t\t\t\tlight = lights[ l ];\r\n\t\r\n\t\t\t\tif ( light.onlyShadow ) continue;\r\n\t\r\n\t\t\t\tcolor = light.color;\r\n\t\t\t\tintensity = light.intensity;\r\n\t\t\t\tdistance = light.distance;\r\n\t\r\n\t\t\t\tif ( light instanceof THREE.AmbientLight ) {\r\n\t\r\n\t\t\t\t\tif ( ! light.visible ) continue;\r\n\t\r\n\t\t\t\t\tr += color.r;\r\n\t\t\t\t\tg += color.g;\r\n\t\t\t\t\tb += color.b;\r\n\t\r\n\t\t\t\t} else if ( light instanceof THREE.DirectionalLight ) {\r\n\t\r\n\t\t\t\t\tdirCount += 1;\r\n\t\r\n\t\t\t\t\tif ( ! light.visible ) continue;\r\n\t\r\n\t\t\t\t\t_direction.setFromMatrixPosition( light.matrixWorld );\r\n\t\t\t\t\t_vector3.setFromMatrixPosition( light.target.matrixWorld );\r\n\t\t\t\t\t_direction.sub( _vector3 );\r\n\t\t\t\t\t_direction.transformDirection( viewMatrix );\r\n\t\r\n\t\t\t\t\tdirOffset = dirLength * 3;\r\n\t\r\n\t\t\t\t\tdirPositions[ dirOffset + 0 ] = _direction.x;\r\n\t\t\t\t\tdirPositions[ dirOffset + 1 ] = _direction.y;\r\n\t\t\t\t\tdirPositions[ dirOffset + 2 ] = _direction.z;\r\n\t\r\n\t\t\t\t\tsetColorLinear( dirColors, dirOffset, color, intensity );\r\n\t\r\n\t\t\t\t\tdirLength += 1;\r\n\t\r\n\t\t\t\t} else if ( light instanceof THREE.PointLight ) {\r\n\t\r\n\t\t\t\t\tpointCount += 1;\r\n\t\r\n\t\t\t\t\tif ( ! light.visible ) continue;\r\n\t\r\n\t\t\t\t\tpointOffset = pointLength * 3;\r\n\t\r\n\t\t\t\t\tsetColorLinear( pointColors, pointOffset, color, intensity );\r\n\t\r\n\t\t\t\t\t_vector3.setFromMatrixPosition( light.matrixWorld );\r\n\t\t\t\t\t_vector3.applyMatrix4( viewMatrix );\r\n\t\r\n\t\t\t\t\tpointPositions[ pointOffset + 0 ] = _vector3.x;\r\n\t\t\t\t\tpointPositions[ pointOffset + 1 ] = _vector3.y;\r\n\t\t\t\t\tpointPositions[ pointOffset + 2 ] = _vector3.z;\r\n\t\r\n\t\t\t\t\t// distance is 0 if decay is 0, because there is no attenuation at all.\r\n\t\t\t\t\tpointDistances[ pointLength ] = distance;\r\n\t\t\t\t\tpointDecays[ pointLength ] = ( light.distance === 0 ) ? 0.0 : light.decay;\r\n\t\r\n\t\t\t\t\tpointLength += 1;\r\n\t\r\n\t\t\t\t} else if ( light instanceof THREE.SpotLight ) {\r\n\t\r\n\t\t\t\t\tspotCount += 1;\r\n\t\r\n\t\t\t\t\tif ( ! light.visible ) continue;\r\n\t\r\n\t\t\t\t\tspotOffset = spotLength * 3;\r\n\t\r\n\t\t\t\t\tsetColorLinear( spotColors, spotOffset, color, intensity );\r\n\t\r\n\t\t\t\t\t_direction.setFromMatrixPosition( light.matrixWorld );\r\n\t\t\t\t\t_vector3.copy( _direction ).applyMatrix4( viewMatrix );\r\n\t\r\n\t\t\t\t\tspotPositions[ spotOffset + 0 ] = _vector3.x;\r\n\t\t\t\t\tspotPositions[ spotOffset + 1 ] = _vector3.y;\r\n\t\t\t\t\tspotPositions[ spotOffset + 2 ] = _vector3.z;\r\n\t\r\n\t\t\t\t\tspotDistances[ spotLength ] = distance;\r\n\t\r\n\t\t\t\t\t_vector3.setFromMatrixPosition( light.target.matrixWorld );\r\n\t\t\t\t\t_direction.sub( _vector3 );\r\n\t\t\t\t\t_direction.transformDirection( viewMatrix );\r\n\t\r\n\t\t\t\t\tspotDirections[ spotOffset + 0 ] = _direction.x;\r\n\t\t\t\t\tspotDirections[ spotOffset + 1 ] = _direction.y;\r\n\t\t\t\t\tspotDirections[ spotOffset + 2 ] = _direction.z;\r\n\t\r\n\t\t\t\t\tspotAnglesCos[ spotLength ] = Math.cos( light.angle );\r\n\t\t\t\t\tspotExponents[ spotLength ] = light.exponent;\r\n\t\t\t\t\tspotDecays[ spotLength ] = ( light.distance === 0 ) ? 0.0 : light.decay;\r\n\t\r\n\t\t\t\t\tspotLength += 1;\r\n\t\r\n\t\t\t\t} else if ( light instanceof THREE.HemisphereLight ) {\r\n\t\r\n\t\t\t\t\themiCount += 1;\r\n\t\r\n\t\t\t\t\tif ( ! light.visible ) continue;\r\n\t\r\n\t\t\t\t\t_direction.setFromMatrixPosition( light.matrixWorld );\r\n\t\t\t\t\t_direction.transformDirection( viewMatrix );\r\n\t\r\n\t\t\t\t\themiOffset = hemiLength * 3;\r\n\t\r\n\t\t\t\t\themiPositions[ hemiOffset + 0 ] = _direction.x;\r\n\t\t\t\t\themiPositions[ hemiOffset + 1 ] = _direction.y;\r\n\t\t\t\t\themiPositions[ hemiOffset + 2 ] = _direction.z;\r\n\t\r\n\t\t\t\t\tskyColor = light.color;\r\n\t\t\t\t\tgroundColor = light.groundColor;\r\n\t\r\n\t\t\t\t\tsetColorLinear( hemiSkyColors, hemiOffset, skyColor, intensity );\r\n\t\t\t\t\tsetColorLinear( hemiGroundColors, hemiOffset, groundColor, intensity );\r\n\t\r\n\t\t\t\t\themiLength += 1;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// null eventual remains from removed lights\r\n\t\t\t// (this is to avoid if in shader)\r\n\t\r\n\t\t\tfor ( l = dirLength * 3, ll = Math.max( dirColors.length, dirCount * 3 ); l < ll; l ++ ) dirColors[ l ] = 0.0;\r\n\t\t\tfor ( l = pointLength * 3, ll = Math.max( pointColors.length, pointCount * 3 ); l < ll; l ++ ) pointColors[ l ] = 0.0;\r\n\t\t\tfor ( l = spotLength * 3, ll = Math.max( spotColors.length, spotCount * 3 ); l < ll; l ++ ) spotColors[ l ] = 0.0;\r\n\t\t\tfor ( l = hemiLength * 3, ll = Math.max( hemiSkyColors.length, hemiCount * 3 ); l < ll; l ++ ) hemiSkyColors[ l ] = 0.0;\r\n\t\t\tfor ( l = hemiLength * 3, ll = Math.max( hemiGroundColors.length, hemiCount * 3 ); l < ll; l ++ ) hemiGroundColors[ l ] = 0.0;\r\n\t\r\n\t\t\tzlights.directional.length = dirLength;\r\n\t\t\tzlights.point.length = pointLength;\r\n\t\t\tzlights.spot.length = spotLength;\r\n\t\t\tzlights.hemi.length = hemiLength;\r\n\t\r\n\t\t\tzlights.ambient[ 0 ] = r;\r\n\t\t\tzlights.ambient[ 1 ] = g;\r\n\t\t\tzlights.ambient[ 2 ] = b;\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// GL state setting\r\n\t\r\n\t\tthis.setFaceCulling = function ( cullFace, frontFaceDirection ) {\r\n\t\r\n\t\t\tif ( cullFace === THREE.CullFaceNone ) {\r\n\t\r\n\t\t\t\tstate.disable( _gl.CULL_FACE );\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tif ( frontFaceDirection === THREE.FrontFaceDirectionCW ) {\r\n\t\r\n\t\t\t\t\t_gl.frontFace( _gl.CW );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t_gl.frontFace( _gl.CCW );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( cullFace === THREE.CullFaceBack ) {\r\n\t\r\n\t\t\t\t\t_gl.cullFace( _gl.BACK );\r\n\t\r\n\t\t\t\t} else if ( cullFace === THREE.CullFaceFront ) {\r\n\t\r\n\t\t\t\t\t_gl.cullFace( _gl.FRONT );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t_gl.cullFace( _gl.FRONT_AND_BACK );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tstate.enable( _gl.CULL_FACE );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t\t// Textures\r\n\t\r\n\t\tfunction setTextureParameters ( textureType, texture, isImagePowerOfTwo ) {\r\n\t\r\n\t\t\tvar extension;\r\n\t\r\n\t\t\tif ( isImagePowerOfTwo ) {\r\n\t\r\n\t\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_S, paramThreeToGL( texture.wrapS ) );\r\n\t\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_T, paramThreeToGL( texture.wrapT ) );\r\n\t\r\n\t\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MAG_FILTER, paramThreeToGL( texture.magFilter ) );\r\n\t\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MIN_FILTER, paramThreeToGL( texture.minFilter ) );\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_S, _gl.CLAMP_TO_EDGE );\r\n\t\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_T, _gl.CLAMP_TO_EDGE );\r\n\t\r\n\t\t\t\tif ( texture.wrapS !== THREE.ClampToEdgeWrapping || texture.wrapT !== THREE.ClampToEdgeWrapping ) {\r\n\t\r\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping. ( ' + texture.sourceFile + ' )' );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MAG_FILTER, filterFallback( texture.magFilter ) );\r\n\t\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MIN_FILTER, filterFallback( texture.minFilter ) );\r\n\t\r\n\t\t\t\tif ( texture.minFilter !== THREE.NearestFilter && texture.minFilter !== THREE.LinearFilter ) {\r\n\t\r\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter. ( ' + texture.sourceFile + ' )' );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\textension = extensions.get( 'EXT_texture_filter_anisotropic' );\r\n\t\r\n\t\t\tif ( extension ) {\r\n\t\r\n\t\t\t\tif ( texture.type === THREE.FloatType && extensions.get( 'OES_texture_float_linear' ) === null ) return;\r\n\t\t\t\tif ( texture.type === THREE.HalfFloatType && extensions.get( 'OES_texture_half_float_linear' ) === null ) return;\r\n\t\r\n\t\t\t\tif ( texture.anisotropy > 1 || properties.get( texture ).__currentAnisotropy ) {\r\n\t\r\n\t\t\t\t\t_gl.texParameterf( textureType, extension.TEXTURE_MAX_ANISOTROPY_EXT, Math.min( texture.anisotropy, _this.getMaxAnisotropy() ) );\r\n\t\t\t\t\tproperties.get( texture ).__currentAnisotropy = texture.anisotropy;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction uploadTexture( textureProperties, texture, slot ) {\r\n\t\r\n\t\t\tif ( textureProperties.__webglInit === undefined ) {\r\n\t\r\n\t\t\t\ttextureProperties.__webglInit = true;\r\n\t\r\n\t\t\t\ttexture.__webglInit = true;\r\n\t\r\n\t\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\r\n\t\r\n\t\t\t\ttextureProperties.__webglTexture = _gl.createTexture();\r\n\t\r\n\t\t\t\t_infoMemory.textures ++;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\r\n\t\t\tstate.bindTexture( _gl.TEXTURE_2D, textureProperties.__webglTexture );\r\n\t\r\n\t\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, texture.flipY );\r\n\t\t\t_gl.pixelStorei( _gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, texture.premultiplyAlpha );\r\n\t\t\t_gl.pixelStorei( _gl.UNPACK_ALIGNMENT, texture.unpackAlignment );\r\n\t\r\n\t\t\ttexture.image = clampToMaxSize( texture.image, capabilities.maxTextureSize );\r\n\t\r\n\t\t\tvar image = texture.image,\r\n\t\t\tisImagePowerOfTwo = THREE.Math.isPowerOfTwo( image.width ) && THREE.Math.isPowerOfTwo( image.height ),\r\n\t\t\tglFormat = paramThreeToGL( texture.format ),\r\n\t\t\tglType = paramThreeToGL( texture.type );\r\n\t\r\n\t\t\tsetTextureParameters( _gl.TEXTURE_2D, texture, isImagePowerOfTwo );\r\n\t\r\n\t\t\tvar mipmap, mipmaps = texture.mipmaps;\r\n\t\r\n\t\t\tif ( texture instanceof THREE.DataTexture ) {\r\n\t\r\n\t\t\t\t// use manually created mipmaps if available\r\n\t\t\t\t// if there are no manual mipmaps\r\n\t\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\r\n\t\r\n\t\t\t\tif ( mipmaps.length > 0 && isImagePowerOfTwo ) {\r\n\t\r\n\t\t\t\t\tfor ( var i = 0, il = mipmaps.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\t\t\tmipmap = mipmaps[ i ];\r\n\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\ttexture.generateMipmaps = false;\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, glFormat, image.width, image.height, 0, glFormat, glType, image.data );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t} else if ( texture instanceof THREE.CompressedTexture ) {\r\n\t\r\n\t\t\t\tfor ( var i = 0, il = mipmaps.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\t\tmipmap = mipmaps[ i ];\r\n\t\r\n\t\t\t\t\tif ( texture.format !== THREE.RGBAFormat && texture.format !== THREE.RGBFormat ) {\r\n\t\r\n\t\t\t\t\t\tif ( state.getCompressedTextureFormats().indexOf( glFormat ) > - 1 ) {\r\n\t\r\n\t\t\t\t\t\t\tstate.compressedTexImage2D( _gl.TEXTURE_2D, i, glFormat, mipmap.width, mipmap.height, 0, mipmap.data );\r\n\t\r\n\t\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\t\tconsole.warn( \"THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()\" );\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\t// regular Texture (image, video, canvas)\r\n\t\r\n\t\t\t\t// use manually created mipmaps if available\r\n\t\t\t\t// if there are no manual mipmaps\r\n\t\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\r\n\t\r\n\t\t\t\tif ( mipmaps.length > 0 && isImagePowerOfTwo ) {\r\n\t\r\n\t\t\t\t\tfor ( var i = 0, il = mipmaps.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\t\t\tmipmap = mipmaps[ i ];\r\n\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glFormat, glFormat, glType, mipmap );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\ttexture.generateMipmaps = false;\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, glFormat, glFormat, glType, texture.image );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( texture.generateMipmaps && isImagePowerOfTwo ) _gl.generateMipmap( _gl.TEXTURE_2D );\r\n\t\r\n\t\t\ttextureProperties.__version = texture.version;\r\n\t\r\n\t\t\tif ( texture.onUpdate ) texture.onUpdate( texture );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.setTexture = function ( texture, slot ) {\r\n\t\r\n\t\t\tvar textureProperties = properties.get( texture );\r\n\t\r\n\t\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\r\n\t\r\n\t\t\t\tvar image = texture.image;\r\n\t\r\n\t\t\t\tif ( image === undefined ) {\r\n\t\r\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but image is undefined', texture );\r\n\t\t\t\t\treturn;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( image.complete === false ) {\r\n\t\r\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but image is incomplete', texture );\r\n\t\t\t\t\treturn;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tuploadTexture( textureProperties, texture, slot );\r\n\t\t\t\treturn;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\r\n\t\t\tstate.bindTexture( _gl.TEXTURE_2D, textureProperties.__webglTexture );\r\n\t\r\n\t\t};\r\n\t\r\n\t\tfunction clampToMaxSize ( image, maxSize ) {\r\n\t\r\n\t\t\tif ( image.width > maxSize || image.height > maxSize ) {\r\n\t\r\n\t\t\t\t// Warning: Scaling through the canvas will only work with images that use\r\n\t\t\t\t// premultiplied alpha.\r\n\t\r\n\t\t\t\tvar scale = maxSize / Math.max( image.width, image.height );\r\n\t\r\n\t\t\t\tvar canvas = document.createElement( 'canvas' );\r\n\t\t\t\tcanvas.width = Math.floor( image.width * scale );\r\n\t\t\t\tcanvas.height = Math.floor( image.height * scale );\r\n\t\r\n\t\t\t\tvar context = canvas.getContext( '2d' );\r\n\t\t\t\tcontext.drawImage( image, 0, 0, image.width, image.height, 0, 0, canvas.width, canvas.height );\r\n\t\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: image is too big (' + image.width + 'x' + image.height + '). Resized to ' + canvas.width + 'x' + canvas.height, image );\r\n\t\r\n\t\t\t\treturn canvas;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn image;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction setCubeTexture ( texture, slot ) {\r\n\t\r\n\t\t\tvar textureProperties = properties.get( texture );\r\n\t\r\n\t\t\tif ( texture.image.length === 6 ) {\r\n\t\r\n\t\t\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\r\n\t\r\n\t\t\t\t\tif ( ! textureProperties.__image__webglTextureCube ) {\r\n\t\r\n\t\t\t\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\r\n\t\r\n\t\t\t\t\t\ttextureProperties.__image__webglTextureCube = _gl.createTexture();\r\n\t\r\n\t\t\t\t\t\t_infoMemory.textures ++;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\r\n\t\t\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__image__webglTextureCube );\r\n\t\r\n\t\t\t\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, texture.flipY );\r\n\t\r\n\t\t\t\t\tvar isCompressed = texture instanceof THREE.CompressedTexture;\r\n\t\t\t\t\tvar isDataTexture = texture.image[ 0 ] instanceof THREE.DataTexture;\r\n\t\r\n\t\t\t\t\tvar cubeImage = [];\r\n\t\r\n\t\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\r\n\t\r\n\t\t\t\t\t\tif ( _this.autoScaleCubemaps && ! isCompressed && ! isDataTexture ) {\r\n\t\r\n\t\t\t\t\t\t\tcubeImage[ i ] = clampToMaxSize( texture.image[ i ], capabilities.maxCubemapSize );\r\n\t\r\n\t\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\t\tcubeImage[ i ] = isDataTexture ? texture.image[ i ].image : texture.image[ i ];\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tvar image = cubeImage[ 0 ],\r\n\t\t\t\t\tisImagePowerOfTwo = THREE.Math.isPowerOfTwo( image.width ) && THREE.Math.isPowerOfTwo( image.height ),\r\n\t\t\t\t\tglFormat = paramThreeToGL( texture.format ),\r\n\t\t\t\t\tglType = paramThreeToGL( texture.type );\r\n\t\r\n\t\t\t\t\tsetTextureParameters( _gl.TEXTURE_CUBE_MAP, texture, isImagePowerOfTwo );\r\n\t\r\n\t\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\r\n\t\r\n\t\t\t\t\t\tif ( ! isCompressed ) {\r\n\t\r\n\t\t\t\t\t\t\tif ( isDataTexture ) {\r\n\t\r\n\t\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glFormat, cubeImage[ i ].width, cubeImage[ i ].height, 0, glFormat, glType, cubeImage[ i ].data );\r\n\t\r\n\t\t\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glFormat, glFormat, glType, cubeImage[ i ] );\r\n\t\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\t\tvar mipmap, mipmaps = cubeImage[ i ].mipmaps;\r\n\t\r\n\t\t\t\t\t\t\tfor ( var j = 0, jl = mipmaps.length; j < jl; j ++ ) {\r\n\t\r\n\t\t\t\t\t\t\t\tmipmap = mipmaps[ j ];\r\n\t\r\n\t\t\t\t\t\t\t\tif ( texture.format !== THREE.RGBAFormat && texture.format !== THREE.RGBFormat ) {\r\n\t\r\n\t\t\t\t\t\t\t\t\tif ( state.getCompressedTextureFormats().indexOf( glFormat ) > - 1 ) {\r\n\t\r\n\t\t\t\t\t\t\t\t\t\tstate.compressedTexImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, glFormat, mipmap.width, mipmap.height, 0, mipmap.data );\r\n\t\r\n\t\t\t\t\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\t\t\t\t\tconsole.warn( \"THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setCubeTexture()\" );\r\n\t\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, glFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\r\n\t\r\n\t\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tif ( texture.generateMipmaps && isImagePowerOfTwo ) {\r\n\t\r\n\t\t\t\t\t\t_gl.generateMipmap( _gl.TEXTURE_CUBE_MAP );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\ttextureProperties.__version = texture.version;\r\n\t\r\n\t\t\t\t\tif ( texture.onUpdate ) texture.onUpdate( texture );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\r\n\t\t\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__image__webglTextureCube );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction setCubeTextureDynamic ( texture, slot ) {\r\n\t\r\n\t\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\r\n\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, properties.get( texture ).__webglTexture );\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// Render targets\r\n\t\r\n\t\tfunction setupFrameBuffer ( framebuffer, renderTarget, textureTarget ) {\r\n\t\r\n\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\r\n\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, textureTarget, properties.get( renderTarget ).__webglTexture, 0 );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction setupRenderBuffer ( renderbuffer, renderTarget ) {\r\n\t\r\n\t\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, renderbuffer );\r\n\t\r\n\t\t\tif ( renderTarget.depthBuffer && ! renderTarget.stencilBuffer ) {\r\n\t\r\n\t\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, _gl.DEPTH_COMPONENT16, renderTarget.width, renderTarget.height );\r\n\t\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.RENDERBUFFER, renderbuffer );\r\n\t\r\n\t\t\t/* For some reason this is not working. Defaulting to RGBA4.\r\n\t\t\t} else if ( ! renderTarget.depthBuffer && renderTarget.stencilBuffer ) {\r\n\t\r\n\t\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, _gl.STENCIL_INDEX8, renderTarget.width, renderTarget.height );\r\n\t\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.STENCIL_ATTACHMENT, _gl.RENDERBUFFER, renderbuffer );\r\n\t\t\t*/\r\n\t\r\n\t\t\t} else if ( renderTarget.depthBuffer && renderTarget.stencilBuffer ) {\r\n\t\r\n\t\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, _gl.DEPTH_STENCIL, renderTarget.width, renderTarget.height );\r\n\t\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.RENDERBUFFER, renderbuffer );\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, _gl.RGBA4, renderTarget.width, renderTarget.height );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.setRenderTarget = function ( renderTarget ) {\r\n\t\r\n\t\t\tvar isCube = ( renderTarget instanceof THREE.WebGLRenderTargetCube );\r\n\t\r\n\t\t\tif ( renderTarget && properties.get( renderTarget ).__webglFramebuffer === undefined ) {\r\n\t\r\n\t\t\t\tvar renderTargetProperties = properties.get( renderTarget );\r\n\t\r\n\t\t\t\tif ( renderTarget.depthBuffer === undefined ) renderTarget.depthBuffer = true;\r\n\t\t\t\tif ( renderTarget.stencilBuffer === undefined ) renderTarget.stencilBuffer = true;\r\n\t\r\n\t\t\t\trenderTarget.addEventListener( 'dispose', onRenderTargetDispose );\r\n\t\r\n\t\t\t\trenderTargetProperties.__webglTexture = _gl.createTexture();\r\n\t\r\n\t\t\t\t_infoMemory.textures ++;\r\n\t\r\n\t\t\t\t// Setup texture, create render and frame buffers\r\n\t\r\n\t\t\t\tvar isTargetPowerOfTwo = THREE.Math.isPowerOfTwo( renderTarget.width ) && THREE.Math.isPowerOfTwo( renderTarget.height ),\r\n\t\t\t\t\tglFormat = paramThreeToGL( renderTarget.format ),\r\n\t\t\t\t\tglType = paramThreeToGL( renderTarget.type );\r\n\t\r\n\t\t\t\tif ( isCube ) {\r\n\t\r\n\t\t\t\t\trenderTargetProperties.__webglFramebuffer = [];\r\n\t\t\t\t\trenderTargetProperties.__webglRenderbuffer = [];\r\n\t\r\n\t\t\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, renderTargetProperties.__webglTexture );\r\n\t\r\n\t\t\t\t\tsetTextureParameters( _gl.TEXTURE_CUBE_MAP, renderTarget, isTargetPowerOfTwo );\r\n\t\r\n\t\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\r\n\t\r\n\t\t\t\t\t\trenderTargetProperties.__webglFramebuffer[ i ] = _gl.createFramebuffer();\r\n\t\t\t\t\t\trenderTargetProperties.__webglRenderbuffer[ i ] = _gl.createRenderbuffer();\r\n\t\r\n\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glFormat, renderTarget.width, renderTarget.height, 0, glFormat, glType, null );\r\n\t\r\n\t\t\t\t\t\tsetupFrameBuffer( renderTargetProperties.__webglFramebuffer[ i ], renderTarget, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i );\r\n\t\t\t\t\t\tsetupRenderBuffer( renderTargetProperties.__webglRenderbuffer[ i ], renderTarget );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tif ( renderTarget.generateMipmaps && isTargetPowerOfTwo ) _gl.generateMipmap( _gl.TEXTURE_CUBE_MAP );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\trenderTargetProperties.__webglFramebuffer = _gl.createFramebuffer();\r\n\t\r\n\t\t\t\t\tif ( renderTarget.shareDepthFrom ) {\r\n\t\r\n\t\t\t\t\t\trenderTargetProperties.__webglRenderbuffer = renderTarget.shareDepthFrom.__webglRenderbuffer;\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\trenderTargetProperties.__webglRenderbuffer = _gl.createRenderbuffer();\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tstate.bindTexture( _gl.TEXTURE_2D, renderTargetProperties.__webglTexture );\r\n\t\t\t\t\tsetTextureParameters( _gl.TEXTURE_2D, renderTarget, isTargetPowerOfTwo );\r\n\t\r\n\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, glFormat, renderTarget.width, renderTarget.height, 0, glFormat, glType, null );\r\n\t\r\n\t\t\t\t\tsetupFrameBuffer( renderTargetProperties.__webglFramebuffer, renderTarget, _gl.TEXTURE_2D );\r\n\t\r\n\t\t\t\t\tif ( renderTarget.shareDepthFrom ) {\r\n\t\r\n\t\t\t\t\t\tif ( renderTarget.depthBuffer && ! renderTarget.stencilBuffer ) {\r\n\t\r\n\t\t\t\t\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.RENDERBUFFER, renderTargetProperties.__webglRenderbuffer );\r\n\t\r\n\t\t\t\t\t\t} else if ( renderTarget.depthBuffer && renderTarget.stencilBuffer ) {\r\n\t\r\n\t\t\t\t\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.RENDERBUFFER, renderTargetProperties.__webglRenderbuffer );\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\tsetupRenderBuffer( renderTargetProperties.__webglRenderbuffer, renderTarget );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tif ( renderTarget.generateMipmaps && isTargetPowerOfTwo ) _gl.generateMipmap( _gl.TEXTURE_2D );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// Release everything\r\n\t\r\n\t\t\t\tif ( isCube ) {\r\n\t\r\n\t\t\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, null );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tstate.bindTexture( _gl.TEXTURE_2D, null );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, null );\r\n\t\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, null );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar framebuffer, width, height, vx, vy;\r\n\t\r\n\t\t\tif ( renderTarget ) {\r\n\t\r\n\t\t\t\tvar renderTargetProperties = properties.get( renderTarget );\r\n\t\r\n\t\t\t\tif ( isCube ) {\r\n\t\r\n\t\t\t\t\tframebuffer = renderTargetProperties.__webglFramebuffer[ renderTarget.activeCubeFace ];\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tframebuffer = renderTargetProperties.__webglFramebuffer;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\twidth = renderTarget.width;\r\n\t\t\t\theight = renderTarget.height;\r\n\t\r\n\t\t\t\tvx = 0;\r\n\t\t\t\tvy = 0;\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tframebuffer = null;\r\n\t\r\n\t\t\t\twidth = _viewportWidth;\r\n\t\t\t\theight = _viewportHeight;\r\n\t\r\n\t\t\t\tvx = _viewportX;\r\n\t\t\t\tvy = _viewportY;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( framebuffer !== _currentFramebuffer ) {\r\n\t\r\n\t\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\r\n\t\t\t\t_gl.viewport( vx, vy, width, height );\r\n\t\r\n\t\t\t\t_currentFramebuffer = framebuffer;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t_currentWidth = width;\r\n\t\t\t_currentHeight = height;\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.readRenderTargetPixels = function( renderTarget, x, y, width, height, buffer ) {\r\n\t\r\n\t\t\tif ( ! ( renderTarget instanceof THREE.WebGLRenderTarget ) ) {\r\n\t\r\n\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.' );\r\n\t\t\t\treturn;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( properties.get( renderTarget ).__webglFramebuffer ) {\r\n\t\r\n\t\t\t\tif ( renderTarget.format !== THREE.RGBAFormat ) {\r\n\t\r\n\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA format. readPixels can read only RGBA format.' );\r\n\t\t\t\t\treturn;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar restore = false;\r\n\t\r\n\t\t\t\tif ( properties.get( renderTarget ).__webglFramebuffer !== _currentFramebuffer ) {\r\n\t\r\n\t\t\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, properties.get( renderTarget ).__webglFramebuffer );\r\n\t\r\n\t\t\t\t\trestore = true;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( _gl.checkFramebufferStatus( _gl.FRAMEBUFFER ) === _gl.FRAMEBUFFER_COMPLETE ) {\r\n\t\r\n\t\t\t\t\t_gl.readPixels( x, y, width, height, _gl.RGBA, _gl.UNSIGNED_BYTE, buffer );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.' );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( restore ) {\r\n\t\r\n\t\t\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, _currentFramebuffer );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t\tfunction updateRenderTargetMipmap ( renderTarget ) {\r\n\t\r\n\t\t\tif ( renderTarget instanceof THREE.WebGLRenderTargetCube ) {\r\n\t\r\n\t\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, properties.get( renderTarget ).__webglTexture );\r\n\t\t\t\t_gl.generateMipmap( _gl.TEXTURE_CUBE_MAP );\r\n\t\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, null );\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tstate.bindTexture( _gl.TEXTURE_2D, properties.get( renderTarget ).__webglTexture );\r\n\t\t\t\t_gl.generateMipmap( _gl.TEXTURE_2D );\r\n\t\t\t\tstate.bindTexture( _gl.TEXTURE_2D, null );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// Fallback filters for non-power-of-2 textures\r\n\t\r\n\t\tfunction filterFallback ( f ) {\r\n\t\r\n\t\t\tif ( f === THREE.NearestFilter || f === THREE.NearestMipMapNearestFilter || f === THREE.NearestMipMapLinearFilter ) {\r\n\t\r\n\t\t\t\treturn _gl.NEAREST;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn _gl.LINEAR;\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// Map three.js constants to WebGL constants\r\n\t\r\n\t\tfunction paramThreeToGL ( p ) {\r\n\t\r\n\t\t\tvar extension;\r\n\t\r\n\t\t\tif ( p === THREE.RepeatWrapping ) return _gl.REPEAT;\r\n\t\t\tif ( p === THREE.ClampToEdgeWrapping ) return _gl.CLAMP_TO_EDGE;\r\n\t\t\tif ( p === THREE.MirroredRepeatWrapping ) return _gl.MIRRORED_REPEAT;\r\n\t\r\n\t\t\tif ( p === THREE.NearestFilter ) return _gl.NEAREST;\r\n\t\t\tif ( p === THREE.NearestMipMapNearestFilter ) return _gl.NEAREST_MIPMAP_NEAREST;\r\n\t\t\tif ( p === THREE.NearestMipMapLinearFilter ) return _gl.NEAREST_MIPMAP_LINEAR;\r\n\t\r\n\t\t\tif ( p === THREE.LinearFilter ) return _gl.LINEAR;\r\n\t\t\tif ( p === THREE.LinearMipMapNearestFilter ) return _gl.LINEAR_MIPMAP_NEAREST;\r\n\t\t\tif ( p === THREE.LinearMipMapLinearFilter ) return _gl.LINEAR_MIPMAP_LINEAR;\r\n\t\r\n\t\t\tif ( p === THREE.UnsignedByteType ) return _gl.UNSIGNED_BYTE;\r\n\t\t\tif ( p === THREE.UnsignedShort4444Type ) return _gl.UNSIGNED_SHORT_4_4_4_4;\r\n\t\t\tif ( p === THREE.UnsignedShort5551Type ) return _gl.UNSIGNED_SHORT_5_5_5_1;\r\n\t\t\tif ( p === THREE.UnsignedShort565Type ) return _gl.UNSIGNED_SHORT_5_6_5;\r\n\t\r\n\t\t\tif ( p === THREE.ByteType ) return _gl.BYTE;\r\n\t\t\tif ( p === THREE.ShortType ) return _gl.SHORT;\r\n\t\t\tif ( p === THREE.UnsignedShortType ) return _gl.UNSIGNED_SHORT;\r\n\t\t\tif ( p === THREE.IntType ) return _gl.INT;\r\n\t\t\tif ( p === THREE.UnsignedIntType ) return _gl.UNSIGNED_INT;\r\n\t\t\tif ( p === THREE.FloatType ) return _gl.FLOAT;\r\n\t\r\n\t\t\textension = extensions.get( 'OES_texture_half_float' );\r\n\t\r\n\t\t\tif ( extension !== null ) {\r\n\t\r\n\t\t\t\tif ( p === THREE.HalfFloatType ) return extension.HALF_FLOAT_OES;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( p === THREE.AlphaFormat ) return _gl.ALPHA;\r\n\t\t\tif ( p === THREE.RGBFormat ) return _gl.RGB;\r\n\t\t\tif ( p === THREE.RGBAFormat ) return _gl.RGBA;\r\n\t\t\tif ( p === THREE.LuminanceFormat ) return _gl.LUMINANCE;\r\n\t\t\tif ( p === THREE.LuminanceAlphaFormat ) return _gl.LUMINANCE_ALPHA;\r\n\t\r\n\t\t\tif ( p === THREE.AddEquation ) return _gl.FUNC_ADD;\r\n\t\t\tif ( p === THREE.SubtractEquation ) return _gl.FUNC_SUBTRACT;\r\n\t\t\tif ( p === THREE.ReverseSubtractEquation ) return _gl.FUNC_REVERSE_SUBTRACT;\r\n\t\r\n\t\t\tif ( p === THREE.ZeroFactor ) return _gl.ZERO;\r\n\t\t\tif ( p === THREE.OneFactor ) return _gl.ONE;\r\n\t\t\tif ( p === THREE.SrcColorFactor ) return _gl.SRC_COLOR;\r\n\t\t\tif ( p === THREE.OneMinusSrcColorFactor ) return _gl.ONE_MINUS_SRC_COLOR;\r\n\t\t\tif ( p === THREE.SrcAlphaFactor ) return _gl.SRC_ALPHA;\r\n\t\t\tif ( p === THREE.OneMinusSrcAlphaFactor ) return _gl.ONE_MINUS_SRC_ALPHA;\r\n\t\t\tif ( p === THREE.DstAlphaFactor ) return _gl.DST_ALPHA;\r\n\t\t\tif ( p === THREE.OneMinusDstAlphaFactor ) return _gl.ONE_MINUS_DST_ALPHA;\r\n\t\r\n\t\t\tif ( p === THREE.DstColorFactor ) return _gl.DST_COLOR;\r\n\t\t\tif ( p === THREE.OneMinusDstColorFactor ) return _gl.ONE_MINUS_DST_COLOR;\r\n\t\t\tif ( p === THREE.SrcAlphaSaturateFactor ) return _gl.SRC_ALPHA_SATURATE;\r\n\t\r\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_s3tc' );\r\n\t\r\n\t\t\tif ( extension !== null ) {\r\n\t\r\n\t\t\t\tif ( p === THREE.RGB_S3TC_DXT1_Format ) return extension.COMPRESSED_RGB_S3TC_DXT1_EXT;\r\n\t\t\t\tif ( p === THREE.RGBA_S3TC_DXT1_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT1_EXT;\r\n\t\t\t\tif ( p === THREE.RGBA_S3TC_DXT3_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT3_EXT;\r\n\t\t\t\tif ( p === THREE.RGBA_S3TC_DXT5_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT5_EXT;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_pvrtc' );\r\n\t\r\n\t\t\tif ( extension !== null ) {\r\n\t\r\n\t\t\t\tif ( p === THREE.RGB_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;\r\n\t\t\t\tif ( p === THREE.RGB_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;\r\n\t\t\t\tif ( p === THREE.RGBA_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;\r\n\t\t\t\tif ( p === THREE.RGBA_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\textension = extensions.get( 'EXT_blend_minmax' );\r\n\t\r\n\t\t\tif ( extension !== null ) {\r\n\t\r\n\t\t\t\tif ( p === THREE.MinEquation ) return extension.MIN_EXT;\r\n\t\t\t\tif ( p === THREE.MaxEquation ) return extension.MAX_EXT;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn 0;\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// DEPRECATED\r\n\t\r\n\t\tthis.supportsFloatTextures = function () {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( \\'OES_texture_float\\' ).' );\r\n\t\t\treturn extensions.get( 'OES_texture_float' );\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.supportsHalfFloatTextures = function () {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( \\'OES_texture_half_float\\' ).' );\r\n\t\t\treturn extensions.get( 'OES_texture_half_float' );\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.supportsStandardDerivatives = function () {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( \\'OES_standard_derivatives\\' ).' );\r\n\t\t\treturn extensions.get( 'OES_standard_derivatives' );\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.supportsCompressedTextureS3TC = function () {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( \\'WEBGL_compressed_texture_s3tc\\' ).' );\r\n\t\t\treturn extensions.get( 'WEBGL_compressed_texture_s3tc' );\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.supportsCompressedTexturePVRTC = function () {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( \\'WEBGL_compressed_texture_pvrtc\\' ).' );\r\n\t\t\treturn extensions.get( 'WEBGL_compressed_texture_pvrtc' );\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.supportsBlendMinMax = function () {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( \\'EXT_blend_minmax\\' ).' );\r\n\t\t\treturn extensions.get( 'EXT_blend_minmax' );\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.supportsVertexTextures = function () {\r\n\t\r\n\t\t\treturn capabilities.vertexTextures;\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.supportsInstancedArrays = function () {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( \\'ANGLE_instanced_arrays\\' ).' );\r\n\t\t\treturn extensions.get( 'ANGLE_instanced_arrays' );\r\n\t\r\n\t\t};\r\n\t\r\n\t\t//\r\n\t\r\n\t\tthis.initMaterial = function () {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .initMaterial() has been removed.' );\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.addPrePlugin = function () {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .addPrePlugin() has been removed.' );\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.addPostPlugin = function () {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .addPostPlugin() has been removed.' );\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.updateShadowMap = function () {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .updateShadowMap() has been removed.' );\r\n\t\r\n\t\t};\r\n\t\r\n\t\tObject.defineProperties( this, {\r\n\t\t\tshadowMapEnabled: {\r\n\t\t\t\tget: function () {\r\n\t\r\n\t\t\t\t\treturn shadowMap.enabled;\r\n\t\r\n\t\t\t\t},\r\n\t\t\t\tset: function ( value ) {\r\n\t\r\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled.' );\r\n\t\t\t\t\tshadowMap.enabled = value;\r\n\t\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tshadowMapType: {\r\n\t\t\t\tget: function () {\r\n\t\r\n\t\t\t\t\treturn shadowMap.type;\r\n\t\r\n\t\t\t\t},\r\n\t\t\t\tset: function ( value ) {\r\n\t\r\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type.' );\r\n\t\t\t\t\tshadowMap.type = value;\r\n\t\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tshadowMapCullFace: {\r\n\t\t\t\tget: function () {\r\n\t\r\n\t\t\t\t\treturn shadowMap.cullFace;\r\n\t\r\n\t\t\t\t},\r\n\t\t\t\tset: function ( value ) {\r\n\t\r\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapCullFace is now .shadowMap.cullFace.' );\r\n\t\t\t\t\tshadowMap.cullFace = value;\r\n\t\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tshadowMapDebug: {\r\n\t\t\t\tget: function () {\r\n\t\r\n\t\t\t\t\treturn shadowMap.debug;\r\n\t\r\n\t\t\t\t},\r\n\t\t\t\tset: function ( value ) {\r\n\t\r\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapDebug is now .shadowMap.debug.' );\r\n\t\t\t\t\tshadowMap.debug = value;\r\n\t\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} );\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/renderers/WebGLRenderTarget.js\r\n\t\r\n\t/**\r\n\t * @author szimek / https://github.com/szimek/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\t\r\n\tTHREE.WebGLRenderTarget = function ( width, height, options ) {\r\n\t\r\n\t\tthis.uuid = THREE.Math.generateUUID();\r\n\t\r\n\t\tthis.width = width;\r\n\t\tthis.height = height;\r\n\t\r\n\t\toptions = options || {};\r\n\t\r\n\t\tthis.wrapS = options.wrapS !== undefined ? options.wrapS : THREE.ClampToEdgeWrapping;\r\n\t\tthis.wrapT = options.wrapT !== undefined ? options.wrapT : THREE.ClampToEdgeWrapping;\r\n\t\r\n\t\tthis.magFilter = options.magFilter !== undefined ? options.magFilter : THREE.LinearFilter;\r\n\t\tthis.minFilter = options.minFilter !== undefined ? options.minFilter : THREE.LinearMipMapLinearFilter;\r\n\t\r\n\t\tthis.anisotropy = options.anisotropy !== undefined ? options.anisotropy : 1;\r\n\t\r\n\t\tthis.offset = new THREE.Vector2( 0, 0 );\r\n\t\tthis.repeat = new THREE.Vector2( 1, 1 );\r\n\t\r\n\t\tthis.format = options.format !== undefined ? options.format : THREE.RGBAFormat;\r\n\t\tthis.type = options.type !== undefined ? options.type : THREE.UnsignedByteType;\r\n\t\r\n\t\tthis.depthBuffer = options.depthBuffer !== undefined ? options.depthBuffer : true;\r\n\t\tthis.stencilBuffer = options.stencilBuffer !== undefined ? options.stencilBuffer : true;\r\n\t\r\n\t\tthis.generateMipmaps = true;\r\n\t\r\n\t\tthis.shareDepthFrom = options.shareDepthFrom !== undefined ? options.shareDepthFrom : null;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.WebGLRenderTarget.prototype = {\r\n\t\r\n\t\tconstructor: THREE.WebGLRenderTarget,\r\n\t\r\n\t\tsetSize: function ( width, height ) {\r\n\t\r\n\t\t\tif ( this.width !== width || this.height !== height ) {\r\n\t\r\n\t\t\t\tthis.width = width;\r\n\t\t\t\tthis.height = height;\r\n\t\r\n\t\t\t\tthis.dispose();\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclone: function () {\r\n\t\r\n\t\t\treturn new this.constructor().copy( this );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopy: function ( source ) {\r\n\t\r\n\t\t\tthis.width = source.width;\r\n\t\t\tthis.height = source.height;\r\n\t\r\n\t\t\tthis.wrapS = source.wrapS;\r\n\t\t\tthis.wrapT = source.wrapT;\r\n\t\r\n\t\t\tthis.magFilter = source.magFilter;\r\n\t\t\tthis.minFilter = source.minFilter;\r\n\t\r\n\t\t\tthis.anisotropy = source.anisotropy;\r\n\t\r\n\t\t\tthis.offset.copy( source.offset );\r\n\t\t\tthis.repeat.copy( source.repeat );\r\n\t\r\n\t\t\tthis.format = source.format;\r\n\t\t\tthis.type = source.type;\r\n\t\r\n\t\t\tthis.depthBuffer = source.depthBuffer;\r\n\t\t\tthis.stencilBuffer = source.stencilBuffer;\r\n\t\r\n\t\t\tthis.generateMipmaps = source.generateMipmaps;\r\n\t\r\n\t\t\tthis.shareDepthFrom = source.shareDepthFrom;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdispose: function () {\r\n\t\r\n\t\t\tthis.dispatchEvent( { type: 'dispose' } );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.EventDispatcher.prototype.apply( THREE.WebGLRenderTarget.prototype );\r\n\t\r\n\t// File:src/renderers/WebGLRenderTargetCube.js\r\n\t\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com\r\n\t */\r\n\t\r\n\tTHREE.WebGLRenderTargetCube = function ( width, height, options ) {\r\n\t\r\n\t\tTHREE.WebGLRenderTarget.call( this, width, height, options );\r\n\t\r\n\t\tthis.activeCubeFace = 0; // PX 0, NX 1, PY 2, NY 3, PZ 4, NZ 5\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.WebGLRenderTargetCube.prototype = Object.create( THREE.WebGLRenderTarget.prototype );\r\n\tTHREE.WebGLRenderTargetCube.prototype.constructor = THREE.WebGLRenderTargetCube;\r\n\t\r\n\t// File:src/renderers/webgl/WebGLBufferRenderer.js\r\n\t\r\n\t/**\r\n\t* @author mrdoob / http://mrdoob.com/\r\n\t*/\r\n\t\r\n\tTHREE.WebGLBufferRenderer = function ( _gl, extensions, _infoRender ) {\r\n\t\r\n\t\tvar mode;\r\n\t\r\n\t\tfunction setMode( value ) {\r\n\t\r\n\t\t\tmode = value;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction render( start, count ) {\r\n\t\r\n\t\t\t_gl.drawArrays( mode, start, count );\r\n\t\r\n\t\t\t_infoRender.calls ++;\r\n\t\t\t_infoRender.vertices += count;\r\n\t\t\tif ( mode === _gl.TRIANGLES ) _infoRender.faces += count / 3;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction renderInstances( geometry ) {\r\n\t\r\n\t\t\tvar extension = extensions.get( 'ANGLE_instanced_arrays' );\r\n\t\r\n\t\t\tif ( extension === null ) {\r\n\t\r\n\t\t\t\tconsole.error( 'THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\r\n\t\t\t\treturn;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar position = geometry.attributes.position;\r\n\t\r\n\t\t\tif ( position instanceof THREE.InterleavedBufferAttribute ) {\r\n\t\r\n\t\t\t\textension.drawArraysInstancedANGLE( mode, 0, position.data.count, geometry.maxInstancedCount );\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\textension.drawArraysInstancedANGLE( mode, 0, position.count, geometry.maxInstancedCount );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.setMode = setMode;\r\n\t\tthis.render = render;\r\n\t\tthis.renderInstances = renderInstances;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/renderers/webgl/WebGLIndexedBufferRenderer.js\r\n\t\r\n\t/**\r\n\t* @author mrdoob / http://mrdoob.com/\r\n\t*/\r\n\t\r\n\tTHREE.WebGLIndexedBufferRenderer = function ( _gl, extensions, _infoRender ) {\r\n\t\r\n\t\tvar mode;\r\n\t\r\n\t\tfunction setMode( value ) {\r\n\t\r\n\t\t\tmode = value;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tvar type, size;\r\n\t\r\n\t\tfunction setIndex( index ) {\r\n\t\r\n\t\t\tif ( index.array instanceof Uint32Array && extensions.get( 'OES_element_index_uint' ) ) {\r\n\t\r\n\t\t\t\ttype = _gl.UNSIGNED_INT;\r\n\t\t\t\tsize = 4;\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\ttype = _gl.UNSIGNED_SHORT;\r\n\t\t\t\tsize = 2;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction render( start, count ) {\r\n\t\r\n\t\t\t_gl.drawElements( mode, count, type, start * size );\r\n\t\r\n\t\t\t_infoRender.calls ++;\r\n\t\t\t_infoRender.vertices += count;\r\n\t\t\tif ( mode === _gl.TRIANGLES ) _infoRender.faces += count / 3;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction renderInstances( geometry ) {\r\n\t\r\n\t\t\tvar extension = extensions.get( 'ANGLE_instanced_arrays' );\r\n\t\r\n\t\t\tif ( extension === null ) {\r\n\t\r\n\t\t\t\tconsole.error( 'THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\r\n\t\t\t\treturn;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar index = geometry.index;\r\n\t\r\n\t\t\textension.drawElementsInstancedANGLE( mode, index.array.length, type, 0, geometry.maxInstancedCount );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.setMode = setMode;\r\n\t\tthis.setIndex = setIndex;\r\n\t\tthis.render = render;\r\n\t\tthis.renderInstances = renderInstances;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/renderers/webgl/WebGLExtensions.js\r\n\t\r\n\t/**\r\n\t* @author mrdoob / http://mrdoob.com/\r\n\t*/\r\n\t\r\n\tTHREE.WebGLExtensions = function ( gl ) {\r\n\t\r\n\t\tvar extensions = {};\r\n\t\r\n\t\tthis.get = function ( name ) {\r\n\t\r\n\t\t\tif ( extensions[ name ] !== undefined ) {\r\n\t\r\n\t\t\t\treturn extensions[ name ];\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar extension;\r\n\t\r\n\t\t\tswitch ( name ) {\r\n\t\r\n\t\t\t\tcase 'EXT_texture_filter_anisotropic':\r\n\t\t\t\t\textension = gl.getExtension( 'EXT_texture_filter_anisotropic' ) || gl.getExtension( 'MOZ_EXT_texture_filter_anisotropic' ) || gl.getExtension( 'WEBKIT_EXT_texture_filter_anisotropic' );\r\n\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\tcase 'WEBGL_compressed_texture_s3tc':\r\n\t\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'MOZ_WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_s3tc' );\r\n\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\tcase 'WEBGL_compressed_texture_pvrtc':\r\n\t\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_pvrtc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_pvrtc' );\r\n\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\tdefault:\r\n\t\t\t\t\textension = gl.getExtension( name );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( extension === null ) {\r\n\t\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: ' + name + ' extension not supported.' );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\textensions[ name ] = extension;\r\n\t\r\n\t\t\treturn extension;\r\n\t\r\n\t\t};\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/renderers/webgl/WebGLCapabilities.js\r\n\t\r\n\tTHREE.WebGLCapabilities = function ( gl, extensions, parameters ) {\r\n\t\r\n\t\tfunction getMaxPrecision( precision ) {\r\n\t\r\n\t\t\tif ( precision === 'highp' ) {\r\n\t\r\n\t\t\t\tif ( gl.getShaderPrecisionFormat( gl.VERTEX_SHADER, gl.HIGH_FLOAT ).precision > 0 &&\r\n\t\t\t\t     gl.getShaderPrecisionFormat( gl.FRAGMENT_SHADER, gl.HIGH_FLOAT ).precision > 0 ) {\r\n\t\r\n\t\t\t\t\treturn 'highp';\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tprecision = 'mediump';\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( precision === 'mediump' ) {\r\n\t\r\n\t\t\t\tif ( gl.getShaderPrecisionFormat( gl.VERTEX_SHADER, gl.MEDIUM_FLOAT ).precision > 0 &&\r\n\t\t\t\t     gl.getShaderPrecisionFormat( gl.FRAGMENT_SHADER, gl.MEDIUM_FLOAT ).precision > 0 ) {\r\n\t\r\n\t\t\t\t\treturn 'mediump';\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn 'lowp';\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.getMaxPrecision = getMaxPrecision;\r\n\t\r\n\t\tthis.precision = parameters.precision !== undefined ? parameters.precision : 'highp',\r\n\t\tthis.logarithmicDepthBuffer = parameters.logarithmicDepthBuffer !== undefined ? parameters.logarithmicDepthBuffer : false;\r\n\t\r\n\t\tthis.maxTextures = gl.getParameter( gl.MAX_TEXTURE_IMAGE_UNITS );\r\n\t\tthis.maxVertexTextures = gl.getParameter( gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS );\r\n\t\tthis.maxTextureSize = gl.getParameter( gl.MAX_TEXTURE_SIZE );\r\n\t\tthis.maxCubemapSize = gl.getParameter( gl.MAX_CUBE_MAP_TEXTURE_SIZE );\r\n\t\r\n\t\tthis.maxAttributes = gl.getParameter( gl.MAX_VERTEX_ATTRIBS );\r\n\t\tthis.maxVertexUniforms = gl.getParameter( gl.MAX_VERTEX_UNIFORM_VECTORS );\r\n\t\tthis.maxVaryings = gl.getParameter( gl.MAX_VARYING_VECTORS );\r\n\t\tthis.maxFragmentUniforms = gl.getParameter( gl.MAX_FRAGMENT_UNIFORM_VECTORS );\r\n\t\r\n\t\tthis.vertexTextures = this.maxVertexTextures > 0;\r\n\t\tthis.floatFragmentTextures = !! extensions.get( 'OES_texture_float' );\r\n\t\tthis.floatVertexTextures = this.vertexTextures && this.floatFragmentTextures;\r\n\t\r\n\t\tvar _maxPrecision = getMaxPrecision( this.precision );\r\n\t\r\n\t\tif ( _maxPrecision !== this.precision ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderer:', this.precision, 'not supported, using', _maxPrecision, 'instead.' );\r\n\t\t\tthis.precision = _maxPrecision;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tif ( this.logarithmicDepthBuffer ) {\r\n\t\r\n\t\t\tthis.logarithmicDepthBuffer = !! extensions.get( 'EXT_frag_depth' );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/renderers/webgl/WebGLGeometries.js\r\n\t\r\n\t/**\r\n\t* @author mrdoob / http://mrdoob.com/\r\n\t*/\r\n\t\r\n\tTHREE.WebGLGeometries = function ( gl, properties, info ) {\r\n\t\r\n\t\tvar geometries = {};\r\n\t\r\n\t\tfunction get( object ) {\r\n\t\r\n\t\t\tvar geometry = object.geometry;\r\n\t\r\n\t\t\tif ( geometries[ geometry.id ] !== undefined ) {\r\n\t\r\n\t\t\t\treturn geometries[ geometry.id ];\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tgeometry.addEventListener( 'dispose', onGeometryDispose );\r\n\t\r\n\t\t\tvar buffergeometry;\r\n\t\r\n\t\t\tif ( geometry instanceof THREE.BufferGeometry ) {\r\n\t\r\n\t\t\t\tbuffergeometry = geometry;\r\n\t\r\n\t\t\t} else if ( geometry instanceof THREE.Geometry ) {\r\n\t\r\n\t\t\t\tif ( geometry._bufferGeometry === undefined ) {\r\n\t\r\n\t\t\t\t\tgeometry._bufferGeometry = new THREE.BufferGeometry().setFromObject( object );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tbuffergeometry = geometry._bufferGeometry;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tgeometries[ geometry.id ] = buffergeometry;\r\n\t\r\n\t\t\tinfo.memory.geometries ++;\r\n\t\r\n\t\t\treturn buffergeometry;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction onGeometryDispose( event ) {\r\n\t\r\n\t\t\tvar geometry = event.target;\r\n\t\t\tvar buffergeometry = geometries[ geometry.id ];\r\n\t\r\n\t\t\tdeleteAttributes( buffergeometry.attributes );\r\n\t\r\n\t\t\tgeometry.removeEventListener( 'dispose', onGeometryDispose );\r\n\t\r\n\t\t\tdelete geometries[ geometry.id ];\r\n\t\r\n\t\t\tvar property = properties.get( geometry );\r\n\t\t\tif ( property.wireframe ) deleteAttribute( property.wireframe );\r\n\t\r\n\t\t\tinfo.memory.geometries --;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction getAttributeBuffer( attribute ) {\r\n\t\r\n\t\t\tif ( attribute instanceof THREE.InterleavedBufferAttribute ) {\r\n\t\r\n\t\t\t\treturn properties.get( attribute.data ).__webglBuffer;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn properties.get( attribute ).__webglBuffer;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction deleteAttribute( attribute ) {\r\n\t\r\n\t\t\tvar buffer = getAttributeBuffer( attribute );\r\n\t\r\n\t\t\tif ( buffer !== undefined ) {\r\n\t\r\n\t\t\t\tgl.deleteBuffer( buffer );\r\n\t\t\t\tremoveAttributeBuffer( attribute );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction deleteAttributes( attributes ) {\r\n\t\r\n\t\t\tfor ( var name in attributes ) {\r\n\t\r\n\t\t\t\tdeleteAttribute( attributes[ name ] );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction removeAttributeBuffer( attribute ) {\r\n\t\r\n\t\t\tif ( attribute instanceof THREE.InterleavedBufferAttribute ) {\r\n\t\r\n\t\t\t\tproperties.delete( attribute.data );\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tproperties.delete( attribute );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.get = get;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/renderers/webgl/WebGLObjects.js\r\n\t\r\n\t/**\r\n\t* @author mrdoob / http://mrdoob.com/\r\n\t*/\r\n\t\r\n\tTHREE.WebGLObjects = function ( gl, properties, info ) {\r\n\t\r\n\t\tvar geometries = new THREE.WebGLGeometries( gl, properties, info );\r\n\t\r\n\t\t//\r\n\t\r\n\t\tfunction update( object ) {\r\n\t\r\n\t\t\t// TODO: Avoid updating twice (when using shadowMap). Maybe add frame counter.\r\n\t\r\n\t\t\tvar geometry = geometries.get( object );\r\n\t\r\n\t\t\tif ( object.geometry instanceof THREE.Geometry ) {\r\n\t\r\n\t\t\t\tgeometry.updateFromObject( object );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar index = geometry.index;\r\n\t\t\tvar attributes = geometry.attributes;\r\n\t\r\n\t\t\tif ( index !== null ) {\r\n\t\r\n\t\t\t\tupdateAttribute( index, gl.ELEMENT_ARRAY_BUFFER );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tfor ( var name in attributes ) {\r\n\t\r\n\t\t\t\tupdateAttribute( attributes[ name ], gl.ARRAY_BUFFER );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// morph targets\r\n\t\r\n\t\t\tvar morphAttributes = geometry.morphAttributes;\r\n\t\r\n\t\t\tfor ( var name in morphAttributes ) {\r\n\t\r\n\t\t\t\tvar array = morphAttributes[ name ];\r\n\t\r\n\t\t\t\tfor ( var i = 0, l = array.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\t\tupdateAttribute( array[ i ], gl.ARRAY_BUFFER );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn geometry;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction updateAttribute( attribute, bufferType ) {\r\n\t\r\n\t\t\tvar data = ( attribute instanceof THREE.InterleavedBufferAttribute ) ? attribute.data : attribute;\r\n\t\r\n\t\t\tvar attributeProperties = properties.get( data );\r\n\t\r\n\t\t\tif ( attributeProperties.__webglBuffer === undefined ) {\r\n\t\r\n\t\t\t\tcreateBuffer( attributeProperties, data, bufferType );\r\n\t\r\n\t\t\t} else if ( attributeProperties.version !== data.version ) {\r\n\t\r\n\t\t\t\tupdateBuffer( attributeProperties, data, bufferType );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction createBuffer( attributeProperties, data, bufferType ) {\r\n\t\r\n\t\t\tattributeProperties.__webglBuffer = gl.createBuffer();\r\n\t\t\tgl.bindBuffer( bufferType, attributeProperties.__webglBuffer );\r\n\t\r\n\t\t\tvar usage = data.dynamic ? gl.DYNAMIC_DRAW : gl.STATIC_DRAW;\r\n\t\r\n\t\t\tgl.bufferData( bufferType, data.array, usage );\r\n\t\r\n\t\t\tattributeProperties.version = data.version;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction updateBuffer( attributeProperties, data, bufferType ) {\r\n\t\r\n\t\t\tgl.bindBuffer( bufferType, attributeProperties.__webglBuffer );\r\n\t\r\n\t\t\tif ( data.dynamic === false || data.updateRange.count === - 1 ) {\r\n\t\r\n\t\t\t\t// Not using update ranges\r\n\t\r\n\t\t\t\tgl.bufferSubData( bufferType, 0, data.array );\r\n\t\r\n\t\t\t} else if ( data.updateRange.count === 0 ) {\r\n\t\r\n\t\t\t\tconsole.error( 'THREE.WebGLObjects.updateBuffer: dynamic THREE.BufferAttribute marked as needsUpdate but updateRange.count is 0, ensure you are using set methods or updating manually.' );\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tgl.bufferSubData( bufferType, data.updateRange.offset * data.array.BYTES_PER_ELEMENT,\r\n\t\t\t\t\t\t\t\t  data.array.subarray( data.updateRange.offset, data.updateRange.offset + data.updateRange.count ) );\r\n\t\r\n\t\t\t\tdata.updateRange.count = 0; // reset range\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tattributeProperties.version = data.version;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction getAttributeBuffer( attribute ) {\r\n\t\r\n\t\t\tif ( attribute instanceof THREE.InterleavedBufferAttribute ) {\r\n\t\r\n\t\t\t\treturn properties.get( attribute.data ).__webglBuffer;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn properties.get( attribute ).__webglBuffer;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction getWireframeAttribute( geometry ) {\r\n\t\r\n\t\t\tvar property = properties.get( geometry );\r\n\t\r\n\t\t\tif ( property.wireframe !== undefined ) {\r\n\t\r\n\t\t\t\treturn property.wireframe;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar indices = [];\r\n\t\r\n\t\t\tvar index = geometry.index;\r\n\t\t\tvar attributes = geometry.attributes;\r\n\t\t\tvar position = attributes.position;\r\n\t\r\n\t\t\t// console.time( 'wireframe' );\r\n\t\r\n\t\t\tif ( index !== null ) {\r\n\t\r\n\t\t\t\tvar edges = {};\r\n\t\t\t\tvar array = index.array;\r\n\t\r\n\t\t\t\tfor ( var i = 0, l = array.length; i < l; i += 3 ) {\r\n\t\r\n\t\t\t\t\tvar a = array[ i + 0 ];\r\n\t\t\t\t\tvar b = array[ i + 1 ];\r\n\t\t\t\t\tvar c = array[ i + 2 ];\r\n\t\r\n\t\t\t\t\tif ( checkEdge( edges, a, b ) ) indices.push( a, b );\r\n\t\t\t\t\tif ( checkEdge( edges, b, c ) ) indices.push( b, c );\r\n\t\t\t\t\tif ( checkEdge( edges, c, a ) ) indices.push( c, a );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tvar array = attributes.position.array;\r\n\t\r\n\t\t\t\tfor ( var i = 0, l = ( array.length / 3 ) - 1; i < l; i += 3 ) {\r\n\t\r\n\t\t\t\t\tvar a = i + 0;\r\n\t\t\t\t\tvar b = i + 1;\r\n\t\t\t\t\tvar c = i + 2;\r\n\t\r\n\t\t\t\t\tindices.push( a, b, b, c, c, a );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// console.timeEnd( 'wireframe' );\r\n\t\r\n\t\t\tvar TypeArray = position.count > 65535 ? Uint32Array : Uint16Array;\r\n\t\t\tvar attribute = new THREE.BufferAttribute( new TypeArray( indices ), 1 );\r\n\t\r\n\t\t\tupdateAttribute( attribute, gl.ELEMENT_ARRAY_BUFFER );\r\n\t\r\n\t\t\tproperty.wireframe = attribute;\r\n\t\r\n\t\t\treturn attribute;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction checkEdge( edges, a, b ) {\r\n\t\r\n\t\t\tif ( a > b ) {\r\n\t\r\n\t\t\t\tvar tmp = a;\r\n\t\t\t\ta = b;\r\n\t\t\t\tb = tmp;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar list = edges[ a ];\r\n\t\r\n\t\t\tif ( list === undefined ) {\r\n\t\r\n\t\t\t\tedges[ a ] = [ b ];\r\n\t\t\t\treturn true;\r\n\t\r\n\t\t\t} else if ( list.indexOf( b ) === -1 ) {\r\n\t\r\n\t\t\t\tlist.push( b );\r\n\t\t\t\treturn true;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn false;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.getAttributeBuffer = getAttributeBuffer;\r\n\t\tthis.getWireframeAttribute = getWireframeAttribute;\r\n\t\r\n\t\tthis.update = update;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/renderers/webgl/WebGLProgram.js\r\n\t\r\n\tTHREE.WebGLProgram = ( function () {\r\n\t\r\n\t\tvar programIdCount = 0;\r\n\t\r\n\t\tfunction generateDefines( defines ) {\r\n\t\r\n\t\t\tvar chunks = [];\r\n\t\r\n\t\t\tfor ( var name in defines ) {\r\n\t\r\n\t\t\t\tvar value = defines[ name ];\r\n\t\r\n\t\t\t\tif ( value === false ) continue;\r\n\t\r\n\t\t\t\tchunks.push( '#define ' + name + ' ' + value );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn chunks.join( '\\n' );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction fetchUniformLocations( gl, program, identifiers ) {\r\n\t\r\n\t\t\tvar uniforms = {};\r\n\t\r\n\t\t\tvar n = gl.getProgramParameter( program, gl.ACTIVE_UNIFORMS );\r\n\t\r\n\t\t\tfor ( var i = 0; i < n; i ++ ) {\r\n\t\r\n\t\t\t\tvar info = gl.getActiveUniform( program, i );\r\n\t\t\t\tvar name = info.name;\r\n\t\t\t\tvar location = gl.getUniformLocation( program, name );\r\n\t\r\n\t\t\t\t// console.log(\"THREE.WebGLProgram: ACTIVE UNIFORM:\", name);\r\n\t\r\n\t\t\t\tvar suffixPos = name.lastIndexOf( '[0]' );\r\n\t\t\t\tif ( suffixPos !== - 1 && suffixPos === name.length - 3 ) {\r\n\t\r\n\t\t\t\t\tuniforms[ name.substr( 0, suffixPos ) ] = location;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tuniforms[ name ] = location;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn uniforms;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction fetchAttributeLocations( gl, program, identifiers ) {\r\n\t\r\n\t\t\tvar attributes = {};\r\n\t\r\n\t\t\tvar n = gl.getProgramParameter( program, gl.ACTIVE_ATTRIBUTES );\r\n\t\r\n\t\t\tfor ( var i = 0; i < n; i ++ ) {\r\n\t\r\n\t\t\t\tvar info = gl.getActiveAttrib( program, i );\r\n\t\t\t\tvar name = info.name;\r\n\t\r\n\t\t\t\t// console.log(\"THREE.WebGLProgram: ACTIVE VERTEX ATTRIBUTE:\", name, i );\r\n\t\r\n\t\t\t\tattributes[ name ] = gl.getAttribLocation( program, name );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn attributes;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction filterEmptyLine( string ) {\r\n\t\r\n\t\t\treturn string !== '';\r\n\t\r\n\t\t}\r\n\t\r\n\t\treturn function WebGLProgram( renderer, code, material, parameters ) {\r\n\t\r\n\t\t\tvar gl = renderer.context;\r\n\t\r\n\t\t\tvar defines = material.defines;\r\n\t\r\n\t\t\tvar vertexShader = material.__webglShader.vertexShader;\r\n\t\t\tvar fragmentShader = material.__webglShader.fragmentShader;\r\n\t\r\n\t\t\tvar shadowMapTypeDefine = 'SHADOWMAP_TYPE_BASIC';\r\n\t\r\n\t\t\tif ( parameters.shadowMapType === THREE.PCFShadowMap ) {\r\n\t\r\n\t\t\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF';\r\n\t\r\n\t\t\t} else if ( parameters.shadowMapType === THREE.PCFSoftShadowMap ) {\r\n\t\r\n\t\t\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF_SOFT';\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar envMapTypeDefine = 'ENVMAP_TYPE_CUBE';\r\n\t\t\tvar envMapModeDefine = 'ENVMAP_MODE_REFLECTION';\r\n\t\t\tvar envMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\r\n\t\r\n\t\t\tif ( parameters.envMap ) {\r\n\t\r\n\t\t\t\tswitch ( material.envMap.mapping ) {\r\n\t\r\n\t\t\t\t\tcase THREE.CubeReflectionMapping:\r\n\t\t\t\t\tcase THREE.CubeRefractionMapping:\r\n\t\t\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE';\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase THREE.EquirectangularReflectionMapping:\r\n\t\t\t\t\tcase THREE.EquirectangularRefractionMapping:\r\n\t\t\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_EQUIREC';\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase THREE.SphericalReflectionMapping:\r\n\t\t\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_SPHERE';\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tswitch ( material.envMap.mapping ) {\r\n\t\r\n\t\t\t\t\tcase THREE.CubeRefractionMapping:\r\n\t\t\t\t\tcase THREE.EquirectangularRefractionMapping:\r\n\t\t\t\t\t\tenvMapModeDefine = 'ENVMAP_MODE_REFRACTION';\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tswitch ( material.combine ) {\r\n\t\r\n\t\t\t\t\tcase THREE.MultiplyOperation:\r\n\t\t\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase THREE.MixOperation:\r\n\t\t\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MIX';\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase THREE.AddOperation:\r\n\t\t\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_ADD';\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar gammaFactorDefine = ( renderer.gammaFactor > 0 ) ? renderer.gammaFactor : 1.0;\r\n\t\r\n\t\t\t// console.log( 'building new program ' );\r\n\t\r\n\t\t\t//\r\n\t\r\n\t\t\tvar customDefines = generateDefines( defines );\r\n\t\r\n\t\t\t//\r\n\t\r\n\t\t\tvar program = gl.createProgram();\r\n\t\r\n\t\t\tvar prefixVertex, prefixFragment;\r\n\t\r\n\t\t\tif ( material instanceof THREE.RawShaderMaterial ) {\r\n\t\r\n\t\t\t\tprefixVertex = '';\r\n\t\t\t\tprefixFragment = '';\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tprefixVertex = [\r\n\t\r\n\t\t\t\t\t'precision ' + parameters.precision + ' float;',\r\n\t\t\t\t\t'precision ' + parameters.precision + ' int;',\r\n\t\r\n\t\t\t\t\t'#define SHADER_NAME ' + material.__webglShader.name,\r\n\t\r\n\t\t\t\t\tcustomDefines,\r\n\t\r\n\t\t\t\t\tparameters.supportsVertexTextures ? '#define VERTEX_TEXTURES' : '',\r\n\t\r\n\t\t\t\t\trenderer.gammaInput ? '#define GAMMA_INPUT' : '',\r\n\t\t\t\t\trenderer.gammaOutput ? '#define GAMMA_OUTPUT' : '',\r\n\t\t\t\t\t'#define GAMMA_FACTOR ' + gammaFactorDefine,\r\n\t\r\n\t\t\t\t\t'#define MAX_DIR_LIGHTS ' + parameters.maxDirLights,\r\n\t\t\t\t\t'#define MAX_POINT_LIGHTS ' + parameters.maxPointLights,\r\n\t\t\t\t\t'#define MAX_SPOT_LIGHTS ' + parameters.maxSpotLights,\r\n\t\t\t\t\t'#define MAX_HEMI_LIGHTS ' + parameters.maxHemiLights,\r\n\t\r\n\t\t\t\t\t'#define MAX_SHADOWS ' + parameters.maxShadows,\r\n\t\r\n\t\t\t\t\t'#define MAX_BONES ' + parameters.maxBones,\r\n\t\r\n\t\t\t\t\tparameters.map ? '#define USE_MAP' : '',\r\n\t\t\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\r\n\t\t\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\r\n\t\t\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\r\n\t\t\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\r\n\t\t\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\r\n\t\t\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\r\n\t\t\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\r\n\t\t\t\t\tparameters.displacementMap && parameters.supportsVertexTextures ? '#define USE_DISPLACEMENTMAP' : '',\r\n\t\t\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\r\n\t\t\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\r\n\t\t\t\t\tparameters.vertexColors ? '#define USE_COLOR' : '',\r\n\t\r\n\t\t\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\r\n\t\r\n\t\t\t\t\tparameters.skinning ? '#define USE_SKINNING' : '',\r\n\t\t\t\t\tparameters.useVertexTexture ? '#define BONE_TEXTURE' : '',\r\n\t\r\n\t\t\t\t\tparameters.morphTargets ? '#define USE_MORPHTARGETS' : '',\r\n\t\t\t\t\tparameters.morphNormals && parameters.flatShading === false ? '#define USE_MORPHNORMALS' : '',\r\n\t\t\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\r\n\t\t\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\r\n\t\r\n\t\t\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\r\n\t\t\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\r\n\t\t\t\t\tparameters.shadowMapDebug ? '#define SHADOWMAP_DEBUG' : '',\r\n\t\r\n\t\t\t\t\tparameters.sizeAttenuation ? '#define USE_SIZEATTENUATION' : '',\r\n\t\r\n\t\t\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\r\n\t\t\t\t\tparameters.logarithmicDepthBuffer && renderer.extensions.get( 'EXT_frag_depth' ) ? '#define USE_LOGDEPTHBUF_EXT' : '',\r\n\t\r\n\t\r\n\t\t\t\t\t'uniform mat4 modelMatrix;',\r\n\t\t\t\t\t'uniform mat4 modelViewMatrix;',\r\n\t\t\t\t\t'uniform mat4 projectionMatrix;',\r\n\t\t\t\t\t'uniform mat4 viewMatrix;',\r\n\t\t\t\t\t'uniform mat3 normalMatrix;',\r\n\t\t\t\t\t'uniform vec3 cameraPosition;',\r\n\t\r\n\t\t\t\t\t'attribute vec3 position;',\r\n\t\t\t\t\t'attribute vec3 normal;',\r\n\t\t\t\t\t'attribute vec2 uv;',\r\n\t\r\n\t\t\t\t\t'#ifdef USE_COLOR',\r\n\t\r\n\t\t\t\t\t'\tattribute vec3 color;',\r\n\t\r\n\t\t\t\t\t'#endif',\r\n\t\r\n\t\t\t\t\t'#ifdef USE_MORPHTARGETS',\r\n\t\r\n\t\t\t\t\t'\tattribute vec3 morphTarget0;',\r\n\t\t\t\t\t'\tattribute vec3 morphTarget1;',\r\n\t\t\t\t\t'\tattribute vec3 morphTarget2;',\r\n\t\t\t\t\t'\tattribute vec3 morphTarget3;',\r\n\t\r\n\t\t\t\t\t'\t#ifdef USE_MORPHNORMALS',\r\n\t\r\n\t\t\t\t\t'\t\tattribute vec3 morphNormal0;',\r\n\t\t\t\t\t'\t\tattribute vec3 morphNormal1;',\r\n\t\t\t\t\t'\t\tattribute vec3 morphNormal2;',\r\n\t\t\t\t\t'\t\tattribute vec3 morphNormal3;',\r\n\t\r\n\t\t\t\t\t'\t#else',\r\n\t\r\n\t\t\t\t\t'\t\tattribute vec3 morphTarget4;',\r\n\t\t\t\t\t'\t\tattribute vec3 morphTarget5;',\r\n\t\t\t\t\t'\t\tattribute vec3 morphTarget6;',\r\n\t\t\t\t\t'\t\tattribute vec3 morphTarget7;',\r\n\t\r\n\t\t\t\t\t'\t#endif',\r\n\t\r\n\t\t\t\t\t'#endif',\r\n\t\r\n\t\t\t\t\t'#ifdef USE_SKINNING',\r\n\t\r\n\t\t\t\t\t'\tattribute vec4 skinIndex;',\r\n\t\t\t\t\t'\tattribute vec4 skinWeight;',\r\n\t\r\n\t\t\t\t\t'#endif',\r\n\t\r\n\t\t\t\t\t'\\n'\r\n\t\r\n\t\t\t\t].filter( filterEmptyLine ).join( '\\n' );\r\n\t\r\n\t\t\t\tprefixFragment = [\r\n\t\r\n\t\t\t\t\tparameters.bumpMap || parameters.normalMap || parameters.flatShading || material.derivatives ? '#extension GL_OES_standard_derivatives : enable' : '',\r\n\t\t\t\t\tparameters.logarithmicDepthBuffer && renderer.extensions.get( 'EXT_frag_depth' ) ? '#extension GL_EXT_frag_depth : enable' : '',\r\n\t\r\n\t\t\t\t\t'precision ' + parameters.precision + ' float;',\r\n\t\t\t\t\t'precision ' + parameters.precision + ' int;',\r\n\t\r\n\t\t\t\t\t'#define SHADER_NAME ' + material.__webglShader.name,\r\n\t\r\n\t\t\t\t\tcustomDefines,\r\n\t\r\n\t\t\t\t\t'#define MAX_DIR_LIGHTS ' + parameters.maxDirLights,\r\n\t\t\t\t\t'#define MAX_POINT_LIGHTS ' + parameters.maxPointLights,\r\n\t\t\t\t\t'#define MAX_SPOT_LIGHTS ' + parameters.maxSpotLights,\r\n\t\t\t\t\t'#define MAX_HEMI_LIGHTS ' + parameters.maxHemiLights,\r\n\t\r\n\t\t\t\t\t'#define MAX_SHADOWS ' + parameters.maxShadows,\r\n\t\r\n\t\t\t\t\tparameters.alphaTest ? '#define ALPHATEST ' + parameters.alphaTest : '',\r\n\t\r\n\t\t\t\t\trenderer.gammaInput ? '#define GAMMA_INPUT' : '',\r\n\t\t\t\t\trenderer.gammaOutput ? '#define GAMMA_OUTPUT' : '',\r\n\t\t\t\t\t'#define GAMMA_FACTOR ' + gammaFactorDefine,\r\n\t\r\n\t\t\t\t\t( parameters.useFog && parameters.fog ) ? '#define USE_FOG' : '',\r\n\t\t\t\t\t( parameters.useFog && parameters.fogExp ) ? '#define FOG_EXP2' : '',\r\n\t\r\n\t\t\t\t\tparameters.map ? '#define USE_MAP' : '',\r\n\t\t\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\r\n\t\t\t\t\tparameters.envMap ? '#define ' + envMapTypeDefine : '',\r\n\t\t\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\r\n\t\t\t\t\tparameters.envMap ? '#define ' + envMapBlendingDefine : '',\r\n\t\t\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\r\n\t\t\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\r\n\t\t\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\r\n\t\t\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\r\n\t\t\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\r\n\t\t\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\r\n\t\t\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\r\n\t\t\t\t\tparameters.vertexColors ? '#define USE_COLOR' : '',\r\n\t\r\n\t\t\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\r\n\t\r\n\t\t\t\t\tparameters.metal ? '#define METAL' : '',\r\n\t\t\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\r\n\t\t\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\r\n\t\r\n\t\t\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\r\n\t\t\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\r\n\t\t\t\t\tparameters.shadowMapDebug ? '#define SHADOWMAP_DEBUG' : '',\r\n\t\r\n\t\t\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\r\n\t\t\t\t\tparameters.logarithmicDepthBuffer && renderer.extensions.get( 'EXT_frag_depth' ) ? '#define USE_LOGDEPTHBUF_EXT' : '',\r\n\t\r\n\t\t\t\t\t'uniform mat4 viewMatrix;',\r\n\t\t\t\t\t'uniform vec3 cameraPosition;',\r\n\t\r\n\t\t\t\t\t'\\n'\r\n\t\r\n\t\t\t\t].filter( filterEmptyLine ).join( '\\n' );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar vertexGlsl = prefixVertex + vertexShader;\r\n\t\t\tvar fragmentGlsl = prefixFragment + fragmentShader;\r\n\t\r\n\t\t\tvar glVertexShader = THREE.WebGLShader( gl, gl.VERTEX_SHADER, vertexGlsl );\r\n\t\t\tvar glFragmentShader = THREE.WebGLShader( gl, gl.FRAGMENT_SHADER, fragmentGlsl );\r\n\t\r\n\t\t\tgl.attachShader( program, glVertexShader );\r\n\t\t\tgl.attachShader( program, glFragmentShader );\r\n\t\r\n\t\t\t// Force a particular attribute to index 0.\r\n\t\r\n\t\t\tif ( material.index0AttributeName !== undefined ) {\r\n\t\r\n\t\t\t\tgl.bindAttribLocation( program, 0, material.index0AttributeName );\r\n\t\r\n\t\t\t} else if ( parameters.morphTargets === true ) {\r\n\t\r\n\t\t\t\t// programs with morphTargets displace position out of attribute 0\r\n\t\t\t\tgl.bindAttribLocation( program, 0, 'position' );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tgl.linkProgram( program );\r\n\t\r\n\t\t\tvar programLog = gl.getProgramInfoLog( program );\r\n\t\t\tvar vertexLog = gl.getShaderInfoLog( glVertexShader );\r\n\t\t\tvar fragmentLog = gl.getShaderInfoLog( glFragmentShader );\r\n\t\r\n\t\t\tvar runnable = true;\r\n\t\t\tvar haveDiagnostics = true;\r\n\t\r\n\t\t\tif ( gl.getProgramParameter( program, gl.LINK_STATUS ) === false ) {\r\n\t\r\n\t\t\t\trunnable = false;\r\n\t\r\n\t\t\t\tconsole.error( 'THREE.WebGLProgram: shader error: ', gl.getError(), 'gl.VALIDATE_STATUS', gl.getProgramParameter( program, gl.VALIDATE_STATUS ), 'gl.getProgramInfoLog', programLog, vertexLog, fragmentLog );\r\n\t\r\n\t\t\t} else if ( programLog !== '' ) {\r\n\t\r\n\t\t\t\tconsole.warn( 'THREE.WebGLProgram: gl.getProgramInfoLog()', programLog );\r\n\t\r\n\t\t\t} else if ( vertexLog === '' || fragmentLog === '' ) {\r\n\t\r\n\t\t\t\thaveDiagnostics = false;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( haveDiagnostics ) {\r\n\t\r\n\t\t\t\tthis.diagnostics = {\r\n\t\r\n\t\t\t\t\trunnable: runnable,\r\n\t\t\t\t\tmaterial: material,\r\n\t\r\n\t\t\t\t\tprogramLog: programLog,\r\n\t\r\n\t\t\t\t\tvertexShader: {\r\n\t\r\n\t\t\t\t\t\tlog: vertexLog,\r\n\t\t\t\t\t\tprefix: prefixVertex\r\n\t\r\n\t\t\t\t\t},\r\n\t\r\n\t\t\t\t\tfragmentShader: {\r\n\t\r\n\t\t\t\t\t\tlog: fragmentLog,\r\n\t\t\t\t\t\tprefix: prefixFragment\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t};\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// clean up\r\n\t\r\n\t\t\tgl.deleteShader( glVertexShader );\r\n\t\t\tgl.deleteShader( glFragmentShader );\r\n\t\r\n\t\t\t// set up caching for uniform locations\r\n\t\r\n\t\t\tvar cachedUniforms;\r\n\t\r\n\t\t\tthis.getUniforms = function() {\r\n\t\r\n\t\t\t\tif ( cachedUniforms === undefined ) {\r\n\t\r\n\t\t\t\t\tcachedUniforms = fetchUniformLocations( gl, program );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn cachedUniforms;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t\t// set up caching for attribute locations\r\n\t\r\n\t\t\tvar cachedAttributes;\r\n\t\r\n\t\t\tthis.getAttributes = function() {\r\n\t\r\n\t\t\t\tif ( cachedAttributes === undefined ) {\r\n\t\r\n\t\t\t\t\tcachedAttributes = fetchAttributeLocations( gl, program );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn cachedAttributes;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t\t// free resource\r\n\t\r\n\t\t\tthis.destroy = function() {\r\n\t\r\n\t\t\t\tgl.deleteProgram( program );\r\n\t\t\t\tthis.program = undefined;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t\t// DEPRECATED\r\n\t\r\n\t\t\tObject.defineProperties( this, {\r\n\t\r\n\t\t\t\tuniforms: {\r\n\t\t\t\t\tget: function() {\r\n\t\r\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLProgram: .uniforms is now .getUniforms().' );\r\n\t\t\t\t\t\treturn this.getUniforms();\r\n\t\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\r\n\t\t\t\tattributes: {\r\n\t\t\t\t\tget: function() {\r\n\t\r\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLProgram: .attributes is now .getAttributes().' );\r\n\t\t\t\t\t\treturn this.getAttributes();\r\n\t\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\r\n\t\t\t} );\r\n\t\r\n\t\r\n\t\t\t//\r\n\t\r\n\t\t\tthis.id = programIdCount ++;\r\n\t\t\tthis.code = code;\r\n\t\t\tthis.usedTimes = 1;\r\n\t\t\tthis.program = program;\r\n\t\t\tthis.vertexShader = glVertexShader;\r\n\t\t\tthis.fragmentShader = glFragmentShader;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t};\r\n\t\r\n\t} )();\r\n\t\r\n\t// File:src/renderers/webgl/WebGLPrograms.js\r\n\t\r\n\tTHREE.WebGLPrograms = function ( renderer, capabilities ) {\r\n\t\r\n\t\tvar programs = [];\r\n\t\r\n\t\tvar shaderIDs = {\r\n\t\t\tMeshDepthMaterial: 'depth',\r\n\t\t\tMeshNormalMaterial: 'normal',\r\n\t\t\tMeshBasicMaterial: 'basic',\r\n\t\t\tMeshLambertMaterial: 'lambert',\r\n\t\t\tMeshPhongMaterial: 'phong',\r\n\t\t\tLineBasicMaterial: 'basic',\r\n\t\t\tLineDashedMaterial: 'dashed',\r\n\t\t\tPointsMaterial: 'points'\r\n\t\t};\r\n\t\r\n\t\tvar parameterNames = [\r\n\t\t\t\"precision\", \"supportsVertexTextures\", \"map\", \"envMap\", \"envMapMode\",\r\n\t\t\t\"lightMap\", \"aoMap\", \"emissiveMap\", \"bumpMap\", \"normalMap\", \"specularMap\",\r\n\t\t\t\"alphaMap\", \"combine\", \"vertexColors\", \"fog\", \"useFog\", \"fogExp\",\r\n\t\t\t\"flatShading\", \"sizeAttenuation\", \"logarithmicDepthBuffer\", \"skinning\",\r\n\t\t\t\"maxBones\", \"useVertexTexture\", \"morphTargets\", \"morphNormals\",\r\n\t\t\t\"maxMorphTargets\", \"maxMorphNormals\", \"maxDirLights\", \"maxPointLights\",\r\n\t\t\t\"maxSpotLights\", \"maxHemiLights\", \"maxShadows\", \"shadowMapEnabled\",\r\n\t\t\t\"shadowMapType\", \"shadowMapDebug\", \"alphaTest\", \"metal\", \"doubleSided\",\r\n\t\t\t\"flipSided\"\r\n\t\t];\r\n\t\r\n\t\r\n\t\tfunction allocateBones ( object ) {\r\n\t\r\n\t\t\tif ( capabilities.floatVertexTextures && object && object.skeleton && object.skeleton.useVertexTexture ) {\r\n\t\r\n\t\t\t\treturn 1024;\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\t// default for when object is not specified\r\n\t\t\t\t// ( for example when prebuilding shader to be used with multiple objects )\r\n\t\t\t\t//\r\n\t\t\t\t//  - leave some extra space for other uniforms\r\n\t\t\t\t//  - limit here is ANGLE's 254 max uniform vectors\r\n\t\t\t\t//    (up to 54 should be safe)\r\n\t\r\n\t\t\t\tvar nVertexUniforms = capabilities.maxVertexUniforms;\r\n\t\t\t\tvar nVertexMatrices = Math.floor( ( nVertexUniforms - 20 ) / 4 );\r\n\t\r\n\t\t\t\tvar maxBones = nVertexMatrices;\r\n\t\r\n\t\t\t\tif ( object !== undefined && object instanceof THREE.SkinnedMesh ) {\r\n\t\r\n\t\t\t\t\tmaxBones = Math.min( object.skeleton.bones.length, maxBones );\r\n\t\r\n\t\t\t\t\tif ( maxBones < object.skeleton.bones.length ) {\r\n\t\r\n\t\t\t\t\t\tconsole.warn( 'WebGLRenderer: too many bones - ' + object.skeleton.bones.length + ', this GPU supports just ' + maxBones + ' (try OpenGL instead of ANGLE)' );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn maxBones;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction allocateLights( lights ) {\r\n\t\r\n\t\t\tvar dirLights = 0;\r\n\t\t\tvar pointLights = 0;\r\n\t\t\tvar spotLights = 0;\r\n\t\t\tvar hemiLights = 0;\r\n\t\r\n\t\t\tfor ( var l = 0, ll = lights.length; l < ll; l ++ ) {\r\n\t\r\n\t\t\t\tvar light = lights[ l ];\r\n\t\r\n\t\t\t\tif ( light.onlyShadow || light.visible === false ) continue;\r\n\t\r\n\t\t\t\tif ( light instanceof THREE.DirectionalLight ) dirLights ++;\r\n\t\t\t\tif ( light instanceof THREE.PointLight ) pointLights ++;\r\n\t\t\t\tif ( light instanceof THREE.SpotLight ) spotLights ++;\r\n\t\t\t\tif ( light instanceof THREE.HemisphereLight ) hemiLights ++;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn { 'directional': dirLights, 'point': pointLights, 'spot': spotLights, 'hemi': hemiLights };\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction allocateShadows( lights ) {\r\n\t\r\n\t\t\tvar maxShadows = 0;\r\n\t\r\n\t\t\tfor ( var l = 0, ll = lights.length; l < ll; l ++ ) {\r\n\t\r\n\t\t\t\tvar light = lights[ l ];\r\n\t\r\n\t\t\t\tif ( ! light.castShadow ) continue;\r\n\t\r\n\t\t\t\tif ( light instanceof THREE.SpotLight ) maxShadows ++;\r\n\t\t\t\tif ( light instanceof THREE.DirectionalLight ) maxShadows ++;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn maxShadows;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.getParameters = function ( material, lights, fog, object ) {\r\n\t\r\n\t\t\tvar shaderID = shaderIDs[ material.type ];\r\n\t\t\t// heuristics to create shader parameters according to lights in the scene\r\n\t\t\t// (not to blow over maxLights budget)\r\n\t\r\n\t\t\tvar maxLightCount = allocateLights( lights );\r\n\t\t\tvar maxShadows = allocateShadows( lights );\r\n\t\t\tvar maxBones = allocateBones( object );\r\n\t\t\tvar precision = renderer.getPrecision();\r\n\t\r\n\t\t\tif ( material.precision !== null ) {\r\n\t\r\n\t\t\t\tprecision = capabilities.getMaxPrecision( material.precision );\r\n\t\r\n\t\t\t\tif ( precision !== material.precision ) {\r\n\t\r\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer.initMaterial:', material.precision, 'not supported, using', precision, 'instead.' );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar parameters = {\r\n\t\r\n\t\t\t\tshaderID: shaderID,\r\n\t\r\n\t\t\t\tprecision: precision,\r\n\t\t\t\tsupportsVertexTextures: capabilities.vertexTextures,\r\n\t\r\n\t\t\t\tmap: !! material.map,\r\n\t\t\t\tenvMap: !! material.envMap,\r\n\t\t\t\tenvMapMode: material.envMap && material.envMap.mapping,\r\n\t\t\t\tlightMap: !! material.lightMap,\r\n\t\t\t\taoMap: !! material.aoMap,\r\n\t\t\t\temissiveMap: !! material.emissiveMap,\r\n\t\t\t\tbumpMap: !! material.bumpMap,\r\n\t\t\t\tnormalMap: !! material.normalMap,\r\n\t\t\t\tdisplacementMap: !! material.displacementMap,\r\n\t\t\t\tspecularMap: !! material.specularMap,\r\n\t\t\t\talphaMap: !! material.alphaMap,\r\n\t\r\n\t\t\t\tcombine: material.combine,\r\n\t\r\n\t\t\t\tvertexColors: material.vertexColors,\r\n\t\r\n\t\t\t\tfog: fog,\r\n\t\t\t\tuseFog: material.fog,\r\n\t\t\t\tfogExp: fog instanceof THREE.FogExp2,\r\n\t\r\n\t\t\t\tflatShading: material.shading === THREE.FlatShading,\r\n\t\r\n\t\t\t\tsizeAttenuation: material.sizeAttenuation,\r\n\t\t\t\tlogarithmicDepthBuffer: capabilities.logarithmicDepthBuffer,\r\n\t\r\n\t\t\t\tskinning: material.skinning,\r\n\t\t\t\tmaxBones: maxBones,\r\n\t\t\t\tuseVertexTexture: capabilities.floatVertexTextures && object && object.skeleton && object.skeleton.useVertexTexture,\r\n\t\r\n\t\t\t\tmorphTargets: material.morphTargets,\r\n\t\t\t\tmorphNormals: material.morphNormals,\r\n\t\t\t\tmaxMorphTargets: renderer.maxMorphTargets,\r\n\t\t\t\tmaxMorphNormals: renderer.maxMorphNormals,\r\n\t\r\n\t\t\t\tmaxDirLights: maxLightCount.directional,\r\n\t\t\t\tmaxPointLights: maxLightCount.point,\r\n\t\t\t\tmaxSpotLights: maxLightCount.spot,\r\n\t\t\t\tmaxHemiLights: maxLightCount.hemi,\r\n\t\r\n\t\t\t\tmaxShadows: maxShadows,\r\n\t\t\t\tshadowMapEnabled: renderer.shadowMap.enabled && object.receiveShadow && maxShadows > 0,\r\n\t\t\t\tshadowMapType: renderer.shadowMap.type,\r\n\t\t\t\tshadowMapDebug: renderer.shadowMap.debug,\r\n\t\r\n\t\t\t\talphaTest: material.alphaTest,\r\n\t\t\t\tmetal: material.metal,\r\n\t\t\t\tdoubleSided: material.side === THREE.DoubleSide,\r\n\t\t\t\tflipSided: material.side === THREE.BackSide\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t\treturn parameters;\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.getProgramCode = function ( material, parameters ) {\r\n\t\r\n\t\t\tvar chunks = [];\r\n\t\r\n\t\t\tif ( parameters.shaderID ) {\r\n\t\r\n\t\t\t\tchunks.push( parameters.shaderID );\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tchunks.push( material.fragmentShader );\r\n\t\t\t\tchunks.push( material.vertexShader );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( material.defines !== undefined ) {\r\n\t\r\n\t\t\t\tfor ( var name in material.defines ) {\r\n\t\r\n\t\t\t\t\tchunks.push( name );\r\n\t\t\t\t\tchunks.push( material.defines[ name ] );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tfor ( var i = 0; i < parameterNames.length; i ++ ) {\r\n\t\r\n\t\t\t\tvar parameterName = parameterNames[ i ];\r\n\t\t\t\tchunks.push( parameterName );\r\n\t\t\t\tchunks.push( parameters[ parameterName ] );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn chunks.join();\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.acquireProgram = function ( material, parameters, code ) {\r\n\t\r\n\t\t\tvar program;\r\n\t\r\n\t\t\t// Check if code has been already compiled\r\n\t\t\tfor ( var p = 0, pl = programs.length; p < pl; p ++ ) {\r\n\t\r\n\t\t\t\tvar programInfo = programs[ p ];\r\n\t\r\n\t\t\t\tif ( programInfo.code === code ) {\r\n\t\r\n\t\t\t\t\tprogram = programInfo;\r\n\t\t\t\t\t++ program.usedTimes;\r\n\t\r\n\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( program === undefined ) {\r\n\t\r\n\t\t\t\tprogram = new THREE.WebGLProgram( renderer, code, material, parameters );\r\n\t\t\t\tprograms.push( program );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn program;\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.releaseProgram = function( program ) {\r\n\t\r\n\t\t\tif ( -- program.usedTimes === 0 ) {\r\n\t\r\n\t\t\t\t// Remove from unordered set\r\n\t\t\t\tvar i = programs.indexOf( program );\r\n\t\t\t\tprograms[ i ] = programs[ programs.length - 1 ];\r\n\t\t\t\tprograms.pop();\r\n\t\r\n\t\t\t\t// Free WebGL resources\r\n\t\t\t\tprogram.destroy();\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t\t// Exposed for resource monitoring & error feedback via renderer.info:\r\n\t\tthis.programs = programs;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/renderers/webgl/WebGLProperties.js\r\n\t\r\n\t/**\r\n\t* @author fordacious / fordacious.github.io\r\n\t*/\r\n\t\r\n\tTHREE.WebGLProperties = function () {\r\n\t\r\n\t\tvar properties = {};\r\n\t\r\n\t\tthis.get = function ( object ) {\r\n\t\r\n\t\t\tvar uuid = object.uuid;\r\n\t\t\tvar map = properties[ uuid ];\r\n\t\r\n\t\t\tif ( map === undefined ) {\r\n\t\r\n\t\t\t\tmap = {};\r\n\t\t\t\tproperties[ uuid ] = map;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn map;\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.delete = function ( object ) {\r\n\t\r\n\t\t\tdelete properties[ object.uuid ];\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.clear = function () {\r\n\t\r\n\t\t\tproperties = {};\r\n\t\r\n\t\t};\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/renderers/webgl/WebGLShader.js\r\n\t\r\n\tTHREE.WebGLShader = ( function () {\r\n\t\r\n\t\tvar addLineNumbers = function ( string ) {\r\n\t\r\n\t\t\tvar lines = string.split( '\\n' );\r\n\t\r\n\t\t\tfor ( var i = 0; i < lines.length; i ++ ) {\r\n\t\r\n\t\t\t\tlines[ i ] = ( i + 1 ) + ': ' + lines[ i ];\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn lines.join( '\\n' );\r\n\t\r\n\t\t};\r\n\t\r\n\t\treturn function WebGLShader( gl, type, string ) {\r\n\t\r\n\t\t\tvar shader = gl.createShader( type );\r\n\t\r\n\t\t\tgl.shaderSource( shader, string );\r\n\t\t\tgl.compileShader( shader );\r\n\t\r\n\t\t\tif ( gl.getShaderParameter( shader, gl.COMPILE_STATUS ) === false ) {\r\n\t\r\n\t\t\t\tconsole.error( 'THREE.WebGLShader: Shader couldn\\'t compile.' );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( gl.getShaderInfoLog( shader ) !== '' ) {\r\n\t\r\n\t\t\t\tconsole.warn( 'THREE.WebGLShader: gl.getShaderInfoLog()', type === gl.VERTEX_SHADER ? 'vertex' : 'fragment', gl.getShaderInfoLog( shader ), addLineNumbers( string ) );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// --enable-privileged-webgl-extension\r\n\t\t\t// console.log( type, gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( shader ) );\r\n\t\r\n\t\t\treturn shader;\r\n\t\r\n\t\t};\r\n\t\r\n\t} )();\r\n\t\r\n\t// File:src/renderers/webgl/WebGLShadowMap.js\r\n\t\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.WebGLShadowMap = function ( _renderer, _lights, _objects ) {\r\n\t\r\n\t\tvar _gl = _renderer.context,\r\n\t\t_state = _renderer.state,\r\n\t\t_frustum = new THREE.Frustum(),\r\n\t\t_projScreenMatrix = new THREE.Matrix4(),\r\n\t\r\n\t\t_min = new THREE.Vector3(),\r\n\t\t_max = new THREE.Vector3(),\r\n\t\r\n\t\t_matrixPosition = new THREE.Vector3(),\r\n\t\r\n\t\t_renderList = [];\r\n\t\r\n\t\t// init\r\n\t\r\n\t\tvar depthShader = THREE.ShaderLib[ \"depthRGBA\" ];\r\n\t\tvar depthUniforms = THREE.UniformsUtils.clone( depthShader.uniforms );\r\n\t\r\n\t\tvar _depthMaterial = new THREE.ShaderMaterial( {\r\n\t\t\tuniforms: depthUniforms,\r\n\t\t\tvertexShader: depthShader.vertexShader,\r\n\t\t\tfragmentShader: depthShader.fragmentShader\r\n\t\t } );\r\n\t\r\n\t\tvar _depthMaterialMorph = new THREE.ShaderMaterial( {\r\n\t\t\tuniforms: depthUniforms,\r\n\t\t\tvertexShader: depthShader.vertexShader,\r\n\t\t\tfragmentShader: depthShader.fragmentShader,\r\n\t\t\tmorphTargets: true\r\n\t\t} );\r\n\t\r\n\t\tvar _depthMaterialSkin = new THREE.ShaderMaterial( {\r\n\t\t\tuniforms: depthUniforms,\r\n\t\t\tvertexShader: depthShader.vertexShader,\r\n\t\t\tfragmentShader: depthShader.fragmentShader,\r\n\t\t\tskinning: true\r\n\t\t} );\r\n\t\r\n\t\tvar _depthMaterialMorphSkin = new THREE.ShaderMaterial( {\r\n\t\t\tuniforms: depthUniforms,\r\n\t\t\tvertexShader: depthShader.vertexShader,\r\n\t\t\tfragmentShader: depthShader.fragmentShader,\r\n\t\t\tmorphTargets: true,\r\n\t\t\tskinning: true\r\n\t\t} );\r\n\t\r\n\t\t_depthMaterial._shadowPass = true;\r\n\t\t_depthMaterialMorph._shadowPass = true;\r\n\t\t_depthMaterialSkin._shadowPass = true;\r\n\t\t_depthMaterialMorphSkin._shadowPass = true;\r\n\t\r\n\t\t//\r\n\t\r\n\t\tvar scope = this;\r\n\t\r\n\t\tthis.enabled = false;\r\n\t\r\n\t\tthis.autoUpdate = true;\r\n\t\tthis.needsUpdate = false;\r\n\t\r\n\t\tthis.type = THREE.PCFShadowMap;\r\n\t\tthis.cullFace = THREE.CullFaceFront;\r\n\t\r\n\t\tthis.render = function ( scene, camera ) {\r\n\t\r\n\t\t\tif ( scope.enabled === false ) return;\r\n\t\t\tif ( scope.autoUpdate === false && scope.needsUpdate === false ) return;\r\n\t\r\n\t\t\t// set GL state for depth map\r\n\t\r\n\t\t\t_gl.clearColor( 1, 1, 1, 1 );\r\n\t\t\t_state.disable( _gl.BLEND );\r\n\t\r\n\t\t\t_state.enable( _gl.CULL_FACE );\r\n\t\t\t_gl.frontFace( _gl.CCW );\r\n\t\r\n\t\t\tif ( scope.cullFace === THREE.CullFaceFront ) {\r\n\t\r\n\t\t\t\t_gl.cullFace( _gl.FRONT );\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\t_gl.cullFace( _gl.BACK );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t_state.setDepthTest( true );\r\n\t\r\n\t\t\t// render depth map\r\n\t\r\n\t\t\tfor ( var i = 0, il = _lights.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\tvar light = _lights[ i ];\r\n\t\r\n\t\t\t\tif ( ! light.castShadow ) continue;\r\n\t\r\n\t\t\t\tif ( ! light.shadowMap ) {\r\n\t\r\n\t\t\t\t\tvar shadowFilter = THREE.LinearFilter;\r\n\t\r\n\t\t\t\t\tif ( scope.type === THREE.PCFSoftShadowMap ) {\r\n\t\r\n\t\t\t\t\t\tshadowFilter = THREE.NearestFilter;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tvar pars = { minFilter: shadowFilter, magFilter: shadowFilter, format: THREE.RGBAFormat };\r\n\t\r\n\t\t\t\t\tlight.shadowMap = new THREE.WebGLRenderTarget( light.shadowMapWidth, light.shadowMapHeight, pars );\r\n\t\t\t\t\tlight.shadowMapSize = new THREE.Vector2( light.shadowMapWidth, light.shadowMapHeight );\r\n\t\r\n\t\t\t\t\tlight.shadowMatrix = new THREE.Matrix4();\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( ! light.shadowCamera ) {\r\n\t\r\n\t\t\t\t\tif ( light instanceof THREE.SpotLight ) {\r\n\t\r\n\t\t\t\t\t\tlight.shadowCamera = new THREE.PerspectiveCamera( light.shadowCameraFov, light.shadowMapWidth / light.shadowMapHeight, light.shadowCameraNear, light.shadowCameraFar );\r\n\t\r\n\t\t\t\t\t} else if ( light instanceof THREE.DirectionalLight ) {\r\n\t\r\n\t\t\t\t\t\tlight.shadowCamera = new THREE.OrthographicCamera( light.shadowCameraLeft, light.shadowCameraRight, light.shadowCameraTop, light.shadowCameraBottom, light.shadowCameraNear, light.shadowCameraFar );\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\tconsole.error( \"THREE.ShadowMapPlugin: Unsupported light type for shadow\", light );\r\n\t\t\t\t\t\tcontinue;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tscene.add( light.shadowCamera );\r\n\t\r\n\t\t\t\t\tif ( scene.autoUpdate === true ) scene.updateMatrixWorld();\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( light.shadowCameraVisible && ! light.cameraHelper ) {\r\n\t\r\n\t\t\t\t\tlight.cameraHelper = new THREE.CameraHelper( light.shadowCamera );\r\n\t\t\t\t\tscene.add( light.cameraHelper );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar shadowMap = light.shadowMap;\r\n\t\t\t\tvar shadowMatrix = light.shadowMatrix;\r\n\t\t\t\tvar shadowCamera = light.shadowCamera;\r\n\t\r\n\t\t\t\t//\r\n\t\r\n\t\t\t\tshadowCamera.position.setFromMatrixPosition( light.matrixWorld );\r\n\t\t\t\t_matrixPosition.setFromMatrixPosition( light.target.matrixWorld );\r\n\t\t\t\tshadowCamera.lookAt( _matrixPosition );\r\n\t\t\t\tshadowCamera.updateMatrixWorld();\r\n\t\r\n\t\t\t\tshadowCamera.matrixWorldInverse.getInverse( shadowCamera.matrixWorld );\r\n\t\r\n\t\t\t\t//\r\n\t\r\n\t\t\t\tif ( light.cameraHelper ) light.cameraHelper.visible = light.shadowCameraVisible;\r\n\t\t\t\tif ( light.shadowCameraVisible ) light.cameraHelper.update();\r\n\t\r\n\t\t\t\t// compute shadow matrix\r\n\t\r\n\t\t\t\tshadowMatrix.set(\r\n\t\t\t\t\t0.5, 0.0, 0.0, 0.5,\r\n\t\t\t\t\t0.0, 0.5, 0.0, 0.5,\r\n\t\t\t\t\t0.0, 0.0, 0.5, 0.5,\r\n\t\t\t\t\t0.0, 0.0, 0.0, 1.0\r\n\t\t\t\t);\r\n\t\r\n\t\t\t\tshadowMatrix.multiply( shadowCamera.projectionMatrix );\r\n\t\t\t\tshadowMatrix.multiply( shadowCamera.matrixWorldInverse );\r\n\t\r\n\t\t\t\t// update camera matrices and frustum\r\n\t\r\n\t\t\t\t_projScreenMatrix.multiplyMatrices( shadowCamera.projectionMatrix, shadowCamera.matrixWorldInverse );\r\n\t\t\t\t_frustum.setFromMatrix( _projScreenMatrix );\r\n\t\r\n\t\t\t\t// render shadow map\r\n\t\r\n\t\t\t\t_renderer.setRenderTarget( shadowMap );\r\n\t\t\t\t_renderer.clear();\r\n\t\r\n\t\t\t\t// set object matrices & frustum culling\r\n\t\r\n\t\t\t\t_renderList.length = 0;\r\n\t\r\n\t\t\t\tprojectObject( scene, shadowCamera );\r\n\t\r\n\t\r\n\t\t\t\t// render regular objects\r\n\t\r\n\t\t\t\tfor ( var j = 0, jl = _renderList.length; j < jl; j ++ ) {\r\n\t\r\n\t\t\t\t\tvar object = _renderList[ j ];\r\n\t\t\t\t\tvar geometry = _objects.update( object );\r\n\t\t\t\t\tvar material = object.material;\r\n\t\r\n\t\t\t\t\tif ( material instanceof THREE.MeshFaceMaterial ) {\r\n\t\r\n\t\t\t\t\t\tvar groups = geometry.groups;\r\n\t\t\t\t\t\tvar materials = material.materials;\r\n\t\r\n\t\t\t\t\t\tfor ( var k = 0, kl = groups.length; k < kl; k ++ ) {\r\n\t\r\n\t\t\t\t\t\t\tvar group = groups[ k ];\r\n\t\t\t\t\t\t\tvar groupMaterial = materials[ group.materialIndex ];\r\n\t\r\n\t\t\t\t\t\t\tif ( groupMaterial.visible === true ) {\r\n\t\r\n\t\t\t\t\t\t\t\t_renderer.renderBufferDirect( shadowCamera, _lights, null, geometry, getDepthMaterial( object, groupMaterial ), object, group );\r\n\t\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\t_renderer.renderBufferDirect( shadowCamera, _lights, null, geometry, getDepthMaterial( object, material ), object );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// restore GL state\r\n\t\r\n\t\t\tvar clearColor = _renderer.getClearColor(),\r\n\t\t\tclearAlpha = _renderer.getClearAlpha();\r\n\t\r\n\t\t\t_renderer.setClearColor( clearColor, clearAlpha );\r\n\t\t\t_state.enable( _gl.BLEND );\r\n\t\r\n\t\t\tif ( scope.cullFace === THREE.CullFaceFront ) {\r\n\t\r\n\t\t\t\t_gl.cullFace( _gl.BACK );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t_renderer.resetGLState();\r\n\t\r\n\t\t\tscope.needsUpdate = false;\r\n\t\r\n\t\t};\r\n\t\r\n\t\tfunction getDepthMaterial( object, material ) {\r\n\t\r\n\t\t\tvar geometry = object.geometry;\r\n\t\r\n\t\t\tvar useMorphing = geometry.morphTargets !== undefined && geometry.morphTargets.length > 0 && material.morphTargets;\r\n\t\t\tvar useSkinning = object instanceof THREE.SkinnedMesh && material.skinning;\r\n\t\r\n\t\t\tvar depthMaterial;\r\n\t\r\n\t\t\tif ( object.customDepthMaterial ) {\r\n\t\r\n\t\t\t\tdepthMaterial = object.customDepthMaterial;\r\n\t\r\n\t\t\t} else if ( useSkinning ) {\r\n\t\r\n\t\t\t\tdepthMaterial = useMorphing ? _depthMaterialMorphSkin : _depthMaterialSkin;\r\n\t\r\n\t\t\t} else if ( useMorphing ) {\r\n\t\r\n\t\t\t\tdepthMaterial = _depthMaterialMorph;\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tdepthMaterial = _depthMaterial;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tdepthMaterial.visible = material.visible;\r\n\t\t\tdepthMaterial.wireframe = material.wireframe;\r\n\t\t\tdepthMaterial.wireframeLinewidth = material.wireframeLinewidth;\r\n\t\r\n\t\t\treturn depthMaterial;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction projectObject( object, camera ) {\r\n\t\r\n\t\t\tif ( object.visible === false ) return;\r\n\t\r\n\t\t\tif ( object instanceof THREE.Mesh || object instanceof THREE.Line || object instanceof THREE.Points ) {\r\n\t\r\n\t\t\t\tif ( object.castShadow && ( object.frustumCulled === false || _frustum.intersectsObject( object ) === true ) ) {\r\n\t\r\n\t\t\t\t\tvar material = object.material;\r\n\t\r\n\t\t\t\t\tif ( material.visible === true ) {\r\n\t\r\n\t\t\t\t\t\tobject.modelViewMatrix.multiplyMatrices( camera.matrixWorldInverse, object.matrixWorld );\r\n\t\t\t\t\t\t_renderList.push( object );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar children = object.children;\r\n\t\r\n\t\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\tprojectObject( children[ i ], camera );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/renderers/webgl/WebGLState.js\r\n\t\r\n\t/**\r\n\t* @author mrdoob / http://mrdoob.com/\r\n\t*/\r\n\t\r\n\tTHREE.WebGLState = function ( gl, extensions, paramThreeToGL ) {\r\n\t\r\n\t\tvar _this = this;\r\n\t\r\n\t\tvar newAttributes = new Uint8Array( 16 );\r\n\t\tvar enabledAttributes = new Uint8Array( 16 );\r\n\t\r\n\t\tvar capabilities = {};\r\n\t\r\n\t\tvar compressedTextureFormats = null;\r\n\t\r\n\t\tvar currentBlending = null;\r\n\t\tvar currentBlendEquation = null;\r\n\t\tvar currentBlendSrc = null;\r\n\t\tvar currentBlendDst = null;\r\n\t\tvar currentBlendEquationAlpha = null;\r\n\t\tvar currentBlendSrcAlpha = null;\r\n\t\tvar currentBlendDstAlpha = null;\r\n\t\r\n\t\tvar currentDepthFunc = null;\r\n\t\tvar currentDepthWrite = null;\r\n\t\r\n\t\tvar currentColorWrite = null;\r\n\t\r\n\t\tvar currentFlipSided = null;\r\n\t\r\n\t\tvar currentLineWidth = null;\r\n\t\r\n\t\tvar currentPolygonOffsetFactor = null;\r\n\t\tvar currentPolygonOffsetUnits = null;\r\n\t\r\n\t\tvar maxTextures = gl.getParameter( gl.MAX_TEXTURE_IMAGE_UNITS );\r\n\t\r\n\t\tvar currentTextureSlot = undefined;\r\n\t\tvar currentBoundTextures = {};\r\n\t\r\n\t\tthis.init = function () {\r\n\t\r\n\t\t\tgl.clearColor( 0, 0, 0, 1 );\r\n\t\t\tgl.clearDepth( 1 );\r\n\t\t\tgl.clearStencil( 0 );\r\n\t\r\n\t\t\tthis.enable( gl.DEPTH_TEST );\r\n\t\t\tgl.depthFunc( gl.LEQUAL );\r\n\t\r\n\t\t\tgl.frontFace( gl.CCW );\r\n\t\t\tgl.cullFace( gl.BACK );\r\n\t\t\tthis.enable( gl.CULL_FACE );\r\n\t\r\n\t\t\tthis.enable( gl.BLEND );\r\n\t\t\tgl.blendEquation( gl.FUNC_ADD );\r\n\t\t\tgl.blendFunc( gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA );\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.initAttributes = function () {\r\n\t\r\n\t\t\tfor ( var i = 0, l = newAttributes.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\tnewAttributes[ i ] = 0;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.enableAttribute = function ( attribute ) {\r\n\t\r\n\t\t\tnewAttributes[ attribute ] = 1;\r\n\t\r\n\t\t\tif ( enabledAttributes[ attribute ] === 0 ) {\r\n\t\r\n\t\t\t\tgl.enableVertexAttribArray( attribute );\r\n\t\t\t\tenabledAttributes[ attribute ] = 1;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.disableUnusedAttributes = function () {\r\n\t\r\n\t\t\tfor ( var i = 0, l = enabledAttributes.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\tif ( enabledAttributes[ i ] !== newAttributes[ i ] ) {\r\n\t\r\n\t\t\t\t\tgl.disableVertexAttribArray( i );\r\n\t\t\t\t\tenabledAttributes[ i ] = 0;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.enable = function ( id ) {\r\n\t\r\n\t\t\tif ( capabilities[ id ] !== true ) {\r\n\t\r\n\t\t\t\tgl.enable( id );\r\n\t\t\t\tcapabilities[ id ] = true;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.disable = function ( id ) {\r\n\t\r\n\t\t\tif ( capabilities[ id ] !== false ) {\r\n\t\r\n\t\t\t\tgl.disable( id );\r\n\t\t\t\tcapabilities[ id ] = false;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.getCompressedTextureFormats = function () {\r\n\t\r\n\t\t\tif ( compressedTextureFormats === null ) {\r\n\t\r\n\t\t\t\tcompressedTextureFormats = [];\r\n\t\r\n\t\t\t\tif ( extensions.get( 'WEBGL_compressed_texture_pvrtc' ) ||\r\n\t\t\t\t     extensions.get( 'WEBGL_compressed_texture_s3tc' ) ) {\r\n\t\r\n\t\t\t\t\tvar formats = gl.getParameter( gl.COMPRESSED_TEXTURE_FORMATS );\r\n\t\r\n\t\t\t\t\tfor ( var i = 0; i < formats.length; i ++ ) {\r\n\t\r\n\t\t\t\t\t\tcompressedTextureFormats.push( formats[ i ] );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn compressedTextureFormats;\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.setBlending = function ( blending, blendEquation, blendSrc, blendDst, blendEquationAlpha, blendSrcAlpha, blendDstAlpha ) {\r\n\t\r\n\t\t\tif ( blending !== currentBlending ) {\r\n\t\r\n\t\t\t\tif ( blending === THREE.NoBlending ) {\r\n\t\r\n\t\t\t\t\tthis.disable( gl.BLEND );\r\n\t\r\n\t\t\t\t} else if ( blending === THREE.AdditiveBlending ) {\r\n\t\r\n\t\t\t\t\tthis.enable( gl.BLEND );\r\n\t\t\t\t\tgl.blendEquation( gl.FUNC_ADD );\r\n\t\t\t\t\tgl.blendFunc( gl.SRC_ALPHA, gl.ONE );\r\n\t\r\n\t\t\t\t} else if ( blending === THREE.SubtractiveBlending ) {\r\n\t\r\n\t\t\t\t\t// TODO: Find blendFuncSeparate() combination\r\n\t\r\n\t\t\t\t\tthis.enable( gl.BLEND );\r\n\t\t\t\t\tgl.blendEquation( gl.FUNC_ADD );\r\n\t\t\t\t\tgl.blendFunc( gl.ZERO, gl.ONE_MINUS_SRC_COLOR );\r\n\t\r\n\t\t\t\t} else if ( blending === THREE.MultiplyBlending ) {\r\n\t\r\n\t\t\t\t\t// TODO: Find blendFuncSeparate() combination\r\n\t\r\n\t\t\t\t\tthis.enable( gl.BLEND );\r\n\t\t\t\t\tgl.blendEquation( gl.FUNC_ADD );\r\n\t\t\t\t\tgl.blendFunc( gl.ZERO, gl.SRC_COLOR );\r\n\t\r\n\t\t\t\t} else if ( blending === THREE.CustomBlending ) {\r\n\t\r\n\t\t\t\t\tthis.enable( gl.BLEND );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tthis.enable( gl.BLEND );\r\n\t\t\t\t\tgl.blendEquationSeparate( gl.FUNC_ADD, gl.FUNC_ADD );\r\n\t\t\t\t\tgl.blendFuncSeparate( gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tcurrentBlending = blending;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( blending === THREE.CustomBlending ) {\r\n\t\r\n\t\t\t\tblendEquationAlpha = blendEquationAlpha || blendEquation;\r\n\t\t\t\tblendSrcAlpha = blendSrcAlpha || blendSrc;\r\n\t\t\t\tblendDstAlpha = blendDstAlpha || blendDst;\r\n\t\r\n\t\t\t\tif ( blendEquation !== currentBlendEquation || blendEquationAlpha !== currentBlendEquationAlpha ) {\r\n\t\r\n\t\t\t\t\tgl.blendEquationSeparate( paramThreeToGL( blendEquation ), paramThreeToGL( blendEquationAlpha ) );\r\n\t\r\n\t\t\t\t\tcurrentBlendEquation = blendEquation;\r\n\t\t\t\t\tcurrentBlendEquationAlpha = blendEquationAlpha;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( blendSrc !== currentBlendSrc || blendDst !== currentBlendDst || blendSrcAlpha !== currentBlendSrcAlpha || blendDstAlpha !== currentBlendDstAlpha ) {\r\n\t\r\n\t\t\t\t\tgl.blendFuncSeparate( paramThreeToGL( blendSrc ), paramThreeToGL( blendDst ), paramThreeToGL( blendSrcAlpha ), paramThreeToGL( blendDstAlpha ) );\r\n\t\r\n\t\t\t\t\tcurrentBlendSrc = blendSrc;\r\n\t\t\t\t\tcurrentBlendDst = blendDst;\r\n\t\t\t\t\tcurrentBlendSrcAlpha = blendSrcAlpha;\r\n\t\t\t\t\tcurrentBlendDstAlpha = blendDstAlpha;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tcurrentBlendEquation = null;\r\n\t\t\t\tcurrentBlendSrc = null;\r\n\t\t\t\tcurrentBlendDst = null;\r\n\t\t\t\tcurrentBlendEquationAlpha = null;\r\n\t\t\t\tcurrentBlendSrcAlpha = null;\r\n\t\t\t\tcurrentBlendDstAlpha = null;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.setDepthFunc = function ( depthFunc ) {\r\n\t\r\n\t\t\tif ( currentDepthFunc !== depthFunc ) {\r\n\t\r\n\t\t\t\tif ( depthFunc ) {\r\n\t\r\n\t\t\t\t\tswitch ( depthFunc ) {\r\n\t\r\n\t\t\t\t\t\tcase THREE.NeverDepth:\r\n\t\r\n\t\t\t\t\t\t\tgl.depthFunc( gl.NEVER );\r\n\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\tcase THREE.AlwaysDepth:\r\n\t\r\n\t\t\t\t\t\t\tgl.depthFunc( gl.ALWAYS );\r\n\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\tcase THREE.LessDepth:\r\n\t\r\n\t\t\t\t\t\t\tgl.depthFunc( gl.LESS );\r\n\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\tcase THREE.LessEqualDepth:\r\n\t\r\n\t\t\t\t\t\t\tgl.depthFunc( gl.LEQUAL );\r\n\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\tcase THREE.EqualDepth:\r\n\t\r\n\t\t\t\t\t\t\tgl.depthFunc( gl.EQUAL );\r\n\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\tcase THREE.GreaterEqualDepth:\r\n\t\r\n\t\t\t\t\t\t\tgl.depthFunc( gl.GEQUAL );\r\n\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\tcase THREE.GreaterDepth:\r\n\t\r\n\t\t\t\t\t\t\tgl.depthFunc( gl.GREATER );\r\n\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\tcase THREE.NotEqualDepth:\r\n\t\r\n\t\t\t\t\t\t\tgl.depthFunc( gl.NOTEQUAL );\r\n\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\tdefault:\r\n\t\r\n\t\t\t\t\t\t\tgl.depthFunc( gl.LEQUAL );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tgl.depthFunc( gl.LEQUAL );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tcurrentDepthFunc = depthFunc;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.setDepthTest = function ( depthTest ) {\r\n\t\r\n\t\t\tif ( depthTest ) {\r\n\t\r\n\t\t\t\tthis.enable( gl.DEPTH_TEST );\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tthis.disable( gl.DEPTH_TEST );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.setDepthWrite = function ( depthWrite ) {\r\n\t\r\n\t\t\tif ( currentDepthWrite !== depthWrite ) {\r\n\t\r\n\t\t\t\tgl.depthMask( depthWrite );\r\n\t\t\t\tcurrentDepthWrite = depthWrite;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.setColorWrite = function ( colorWrite ) {\r\n\t\r\n\t\t\tif ( currentColorWrite !== colorWrite ) {\r\n\t\r\n\t\t\t\tgl.colorMask( colorWrite, colorWrite, colorWrite, colorWrite );\r\n\t\t\t\tcurrentColorWrite = colorWrite;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.setFlipSided = function ( flipSided ) {\r\n\t\r\n\t\t\tif ( currentFlipSided !== flipSided ) {\r\n\t\r\n\t\t\t\tif ( flipSided ) {\r\n\t\r\n\t\t\t\t\tgl.frontFace( gl.CW );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tgl.frontFace( gl.CCW );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tcurrentFlipSided = flipSided;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.setLineWidth = function ( width ) {\r\n\t\r\n\t\t\tif ( width !== currentLineWidth ) {\r\n\t\r\n\t\t\t\tgl.lineWidth( width );\r\n\t\r\n\t\t\t\tcurrentLineWidth = width;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.setPolygonOffset = function ( polygonOffset, factor, units ) {\r\n\t\r\n\t\t\tif ( polygonOffset ) {\r\n\t\r\n\t\t\t\tthis.enable( gl.POLYGON_OFFSET_FILL );\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tthis.disable( gl.POLYGON_OFFSET_FILL );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( polygonOffset && ( currentPolygonOffsetFactor !== factor || currentPolygonOffsetUnits !== units ) ) {\r\n\t\r\n\t\t\t\tgl.polygonOffset( factor, units );\r\n\t\r\n\t\t\t\tcurrentPolygonOffsetFactor = factor;\r\n\t\t\t\tcurrentPolygonOffsetUnits = units;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.setScissorTest = function ( scissorTest ) {\r\n\t\r\n\t\t\tif ( scissorTest ) {\r\n\t\r\n\t\t\t\tthis.enable( gl.SCISSOR_TEST );\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tthis.disable( gl.SCISSOR_TEST );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t\t// texture\r\n\t\r\n\t\tthis.activeTexture = function ( webglSlot ) {\r\n\t\r\n\t\t\tif ( webglSlot === undefined ) webglSlot = gl.TEXTURE0 + maxTextures - 1;\r\n\t\r\n\t\t\tif ( currentTextureSlot !== webglSlot ) {\r\n\t\r\n\t\t\t\tgl.activeTexture( webglSlot );\r\n\t\t\t\tcurrentTextureSlot = webglSlot;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.bindTexture = function ( webglType, webglTexture ) {\r\n\t\r\n\t\t\tif ( currentTextureSlot === undefined ) {\r\n\t\r\n\t\t\t\t_this.activeTexture();\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar boundTexture = currentBoundTextures[ currentTextureSlot ];\r\n\t\r\n\t\t\tif ( boundTexture === undefined ) {\r\n\t\r\n\t\t\t\tboundTexture = { type: undefined, texture: undefined };\r\n\t\t\t\tcurrentBoundTextures[ currentTextureSlot ] = boundTexture;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( boundTexture.type !== webglType || boundTexture.texture !== webglTexture ) {\r\n\t\r\n\t\t\t\tgl.bindTexture( webglType, webglTexture );\r\n\t\r\n\t\t\t\tboundTexture.type = webglType;\r\n\t\t\t\tboundTexture.texture = webglTexture;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.compressedTexImage2D = function () {\r\n\t\r\n\t\t\ttry {\r\n\t\r\n\t\t\t\tgl.compressedTexImage2D.apply( gl, arguments );\r\n\t\r\n\t\t\t} catch ( error ) {\r\n\t\r\n\t\t\t\tconsole.error( error );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.texImage2D = function () {\r\n\t\r\n\t\t\ttry {\r\n\t\r\n\t\t\t\tgl.texImage2D.apply( gl, arguments );\r\n\t\r\n\t\t\t} catch ( error ) {\r\n\t\r\n\t\t\t\tconsole.error( error );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t\t//\r\n\t\r\n\t\tthis.reset = function () {\r\n\t\r\n\t\t\tfor ( var i = 0; i < enabledAttributes.length; i ++ ) {\r\n\t\r\n\t\t\t\tif ( enabledAttributes[ i ] === 1 ) {\r\n\t\r\n\t\t\t\t\tgl.disableVertexAttribArray( i );\r\n\t\t\t\t\tenabledAttributes[ i ] = 0;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tcapabilities = {};\r\n\t\r\n\t\t\tcompressedTextureFormats = null;\r\n\t\r\n\t\t\tcurrentBlending = null;\r\n\t\r\n\t\t\tcurrentDepthWrite = null;\r\n\t\t\tcurrentColorWrite = null;\r\n\t\r\n\t\t\tcurrentFlipSided = null;\r\n\t\r\n\t\t};\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/renderers/webgl/plugins/LensFlarePlugin.js\r\n\t\r\n\t/**\r\n\t * @author mikael emtinger / http://gomo.se/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\t\r\n\tTHREE.LensFlarePlugin = function ( renderer, flares ) {\r\n\t\r\n\t\tvar gl = renderer.context;\r\n\t\tvar state = renderer.state;\r\n\t\r\n\t\tvar vertexBuffer, elementBuffer;\r\n\t\tvar program, attributes, uniforms;\r\n\t\tvar hasVertexTexture;\r\n\t\r\n\t\tvar tempTexture, occlusionTexture;\r\n\t\r\n\t\tvar init = function () {\r\n\t\r\n\t\t\tvar vertices = new Float32Array( [\r\n\t\t\t\t- 1, - 1,  0, 0,\r\n\t\t\t\t 1, - 1,  1, 0,\r\n\t\t\t\t 1,  1,  1, 1,\r\n\t\t\t\t- 1,  1,  0, 1\r\n\t\t\t] );\r\n\t\r\n\t\t\tvar faces = new Uint16Array( [\r\n\t\t\t\t0, 1, 2,\r\n\t\t\t\t0, 2, 3\r\n\t\t\t] );\r\n\t\r\n\t\t\t// buffers\r\n\t\r\n\t\t\tvertexBuffer     = gl.createBuffer();\r\n\t\t\telementBuffer    = gl.createBuffer();\r\n\t\r\n\t\t\tgl.bindBuffer( gl.ARRAY_BUFFER, vertexBuffer );\r\n\t\t\tgl.bufferData( gl.ARRAY_BUFFER, vertices, gl.STATIC_DRAW );\r\n\t\r\n\t\t\tgl.bindBuffer( gl.ELEMENT_ARRAY_BUFFER, elementBuffer );\r\n\t\t\tgl.bufferData( gl.ELEMENT_ARRAY_BUFFER, faces, gl.STATIC_DRAW );\r\n\t\r\n\t\t\t// textures\r\n\t\r\n\t\t\ttempTexture      = gl.createTexture();\r\n\t\t\tocclusionTexture = gl.createTexture();\r\n\t\r\n\t\t\tstate.bindTexture( gl.TEXTURE_2D, tempTexture );\r\n\t\t\tgl.texImage2D( gl.TEXTURE_2D, 0, gl.RGB, 16, 16, 0, gl.RGB, gl.UNSIGNED_BYTE, null );\r\n\t\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE );\r\n\t\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE );\r\n\t\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST );\r\n\t\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST );\r\n\t\r\n\t\t\tstate.bindTexture( gl.TEXTURE_2D, occlusionTexture );\r\n\t\t\tgl.texImage2D( gl.TEXTURE_2D, 0, gl.RGBA, 16, 16, 0, gl.RGBA, gl.UNSIGNED_BYTE, null );\r\n\t\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE );\r\n\t\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE );\r\n\t\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST );\r\n\t\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST );\r\n\t\r\n\t\t\thasVertexTexture = gl.getParameter( gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS ) > 0;\r\n\t\r\n\t\t\tvar shader;\r\n\t\r\n\t\t\tif ( hasVertexTexture ) {\r\n\t\r\n\t\t\t\tshader = {\r\n\t\r\n\t\t\t\t\tvertexShader: [\r\n\t\r\n\t\t\t\t\t\t\"uniform lowp int renderType;\",\r\n\t\r\n\t\t\t\t\t\t\"uniform vec3 screenPosition;\",\r\n\t\t\t\t\t\t\"uniform vec2 scale;\",\r\n\t\t\t\t\t\t\"uniform float rotation;\",\r\n\t\r\n\t\t\t\t\t\t\"uniform sampler2D occlusionMap;\",\r\n\t\r\n\t\t\t\t\t\t\"attribute vec2 position;\",\r\n\t\t\t\t\t\t\"attribute vec2 uv;\",\r\n\t\r\n\t\t\t\t\t\t\"varying vec2 vUV;\",\r\n\t\t\t\t\t\t\"varying float vVisibility;\",\r\n\t\r\n\t\t\t\t\t\t\"void main() {\",\r\n\t\r\n\t\t\t\t\t\t\t\"vUV = uv;\",\r\n\t\r\n\t\t\t\t\t\t\t\"vec2 pos = position;\",\r\n\t\r\n\t\t\t\t\t\t\t\"if( renderType == 2 ) {\",\r\n\t\r\n\t\t\t\t\t\t\t\t\"vec4 visibility = texture2D( occlusionMap, vec2( 0.1, 0.1 ) );\",\r\n\t\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.5, 0.1 ) );\",\r\n\t\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.9, 0.1 ) );\",\r\n\t\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) );\",\r\n\t\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.9, 0.9 ) );\",\r\n\t\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) );\",\r\n\t\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.1, 0.9 ) );\",\r\n\t\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) );\",\r\n\t\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.5, 0.5 ) );\",\r\n\t\r\n\t\t\t\t\t\t\t\t\"vVisibility =        visibility.r / 9.0;\",\r\n\t\t\t\t\t\t\t\t\"vVisibility *= 1.0 - visibility.g / 9.0;\",\r\n\t\t\t\t\t\t\t\t\"vVisibility *=       visibility.b / 9.0;\",\r\n\t\t\t\t\t\t\t\t\"vVisibility *= 1.0 - visibility.a / 9.0;\",\r\n\t\r\n\t\t\t\t\t\t\t\t\"pos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;\",\r\n\t\t\t\t\t\t\t\t\"pos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;\",\r\n\t\r\n\t\t\t\t\t\t\t\"}\",\r\n\t\r\n\t\t\t\t\t\t\t\"gl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );\",\r\n\t\r\n\t\t\t\t\t\t\"}\"\r\n\t\r\n\t\t\t\t\t].join( \"\\n\" ),\r\n\t\r\n\t\t\t\t\tfragmentShader: [\r\n\t\r\n\t\t\t\t\t\t\"uniform lowp int renderType;\",\r\n\t\r\n\t\t\t\t\t\t\"uniform sampler2D map;\",\r\n\t\t\t\t\t\t\"uniform float opacity;\",\r\n\t\t\t\t\t\t\"uniform vec3 color;\",\r\n\t\r\n\t\t\t\t\t\t\"varying vec2 vUV;\",\r\n\t\t\t\t\t\t\"varying float vVisibility;\",\r\n\t\r\n\t\t\t\t\t\t\"void main() {\",\r\n\t\r\n\t\t\t\t\t\t\t// pink square\r\n\t\r\n\t\t\t\t\t\t\t\"if( renderType == 0 ) {\",\r\n\t\r\n\t\t\t\t\t\t\t\t\"gl_FragColor = vec4( 1.0, 0.0, 1.0, 0.0 );\",\r\n\t\r\n\t\t\t\t\t\t\t// restore\r\n\t\r\n\t\t\t\t\t\t\t\"} else if( renderType == 1 ) {\",\r\n\t\r\n\t\t\t\t\t\t\t\t\"gl_FragColor = texture2D( map, vUV );\",\r\n\t\r\n\t\t\t\t\t\t\t// flare\r\n\t\r\n\t\t\t\t\t\t\t\"} else {\",\r\n\t\r\n\t\t\t\t\t\t\t\t\"vec4 texture = texture2D( map, vUV );\",\r\n\t\t\t\t\t\t\t\t\"texture.a *= opacity * vVisibility;\",\r\n\t\t\t\t\t\t\t\t\"gl_FragColor = texture;\",\r\n\t\t\t\t\t\t\t\t\"gl_FragColor.rgb *= color;\",\r\n\t\r\n\t\t\t\t\t\t\t\"}\",\r\n\t\r\n\t\t\t\t\t\t\"}\"\r\n\t\r\n\t\t\t\t\t].join( \"\\n\" )\r\n\t\r\n\t\t\t\t};\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tshader = {\r\n\t\r\n\t\t\t\t\tvertexShader: [\r\n\t\r\n\t\t\t\t\t\t\"uniform lowp int renderType;\",\r\n\t\r\n\t\t\t\t\t\t\"uniform vec3 screenPosition;\",\r\n\t\t\t\t\t\t\"uniform vec2 scale;\",\r\n\t\t\t\t\t\t\"uniform float rotation;\",\r\n\t\r\n\t\t\t\t\t\t\"attribute vec2 position;\",\r\n\t\t\t\t\t\t\"attribute vec2 uv;\",\r\n\t\r\n\t\t\t\t\t\t\"varying vec2 vUV;\",\r\n\t\r\n\t\t\t\t\t\t\"void main() {\",\r\n\t\r\n\t\t\t\t\t\t\t\"vUV = uv;\",\r\n\t\r\n\t\t\t\t\t\t\t\"vec2 pos = position;\",\r\n\t\r\n\t\t\t\t\t\t\t\"if( renderType == 2 ) {\",\r\n\t\r\n\t\t\t\t\t\t\t\t\"pos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;\",\r\n\t\t\t\t\t\t\t\t\"pos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;\",\r\n\t\r\n\t\t\t\t\t\t\t\"}\",\r\n\t\r\n\t\t\t\t\t\t\t\"gl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );\",\r\n\t\r\n\t\t\t\t\t\t\"}\"\r\n\t\r\n\t\t\t\t\t].join( \"\\n\" ),\r\n\t\r\n\t\t\t\t\tfragmentShader: [\r\n\t\r\n\t\t\t\t\t\t\"precision mediump float;\",\r\n\t\r\n\t\t\t\t\t\t\"uniform lowp int renderType;\",\r\n\t\r\n\t\t\t\t\t\t\"uniform sampler2D map;\",\r\n\t\t\t\t\t\t\"uniform sampler2D occlusionMap;\",\r\n\t\t\t\t\t\t\"uniform float opacity;\",\r\n\t\t\t\t\t\t\"uniform vec3 color;\",\r\n\t\r\n\t\t\t\t\t\t\"varying vec2 vUV;\",\r\n\t\r\n\t\t\t\t\t\t\"void main() {\",\r\n\t\r\n\t\t\t\t\t\t\t// pink square\r\n\t\r\n\t\t\t\t\t\t\t\"if( renderType == 0 ) {\",\r\n\t\r\n\t\t\t\t\t\t\t\t\"gl_FragColor = vec4( texture2D( map, vUV ).rgb, 0.0 );\",\r\n\t\r\n\t\t\t\t\t\t\t// restore\r\n\t\r\n\t\t\t\t\t\t\t\"} else if( renderType == 1 ) {\",\r\n\t\r\n\t\t\t\t\t\t\t\t\"gl_FragColor = texture2D( map, vUV );\",\r\n\t\r\n\t\t\t\t\t\t\t// flare\r\n\t\r\n\t\t\t\t\t\t\t\"} else {\",\r\n\t\r\n\t\t\t\t\t\t\t\t\"float visibility = texture2D( occlusionMap, vec2( 0.5, 0.1 ) ).a;\",\r\n\t\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) ).a;\",\r\n\t\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) ).a;\",\r\n\t\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) ).a;\",\r\n\t\t\t\t\t\t\t\t\"visibility = ( 1.0 - visibility / 4.0 );\",\r\n\t\r\n\t\t\t\t\t\t\t\t\"vec4 texture = texture2D( map, vUV );\",\r\n\t\t\t\t\t\t\t\t\"texture.a *= opacity * visibility;\",\r\n\t\t\t\t\t\t\t\t\"gl_FragColor = texture;\",\r\n\t\t\t\t\t\t\t\t\"gl_FragColor.rgb *= color;\",\r\n\t\r\n\t\t\t\t\t\t\t\"}\",\r\n\t\r\n\t\t\t\t\t\t\"}\"\r\n\t\r\n\t\t\t\t\t].join( \"\\n\" )\r\n\t\r\n\t\t\t\t};\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tprogram = createProgram( shader );\r\n\t\r\n\t\t\tattributes = {\r\n\t\t\t\tvertex: gl.getAttribLocation ( program, \"position\" ),\r\n\t\t\t\tuv:     gl.getAttribLocation ( program, \"uv\" )\r\n\t\t\t};\r\n\t\r\n\t\t\tuniforms = {\r\n\t\t\t\trenderType:     gl.getUniformLocation( program, \"renderType\" ),\r\n\t\t\t\tmap:            gl.getUniformLocation( program, \"map\" ),\r\n\t\t\t\tocclusionMap:   gl.getUniformLocation( program, \"occlusionMap\" ),\r\n\t\t\t\topacity:        gl.getUniformLocation( program, \"opacity\" ),\r\n\t\t\t\tcolor:          gl.getUniformLocation( program, \"color\" ),\r\n\t\t\t\tscale:          gl.getUniformLocation( program, \"scale\" ),\r\n\t\t\t\trotation:       gl.getUniformLocation( program, \"rotation\" ),\r\n\t\t\t\tscreenPosition: gl.getUniformLocation( program, \"screenPosition\" )\r\n\t\t\t};\r\n\t\r\n\t\t};\r\n\t\r\n\t\t/*\r\n\t\t * Render lens flares\r\n\t\t * Method: renders 16x16 0xff00ff-colored points scattered over the light source area,\r\n\t\t *         reads these back and calculates occlusion.\r\n\t\t */\r\n\t\r\n\t\tthis.render = function ( scene, camera, viewportWidth, viewportHeight ) {\r\n\t\r\n\t\t\tif ( flares.length === 0 ) return;\r\n\t\r\n\t\t\tvar tempPosition = new THREE.Vector3();\r\n\t\r\n\t\t\tvar invAspect = viewportHeight / viewportWidth,\r\n\t\t\t\thalfViewportWidth = viewportWidth * 0.5,\r\n\t\t\t\thalfViewportHeight = viewportHeight * 0.5;\r\n\t\r\n\t\t\tvar size = 16 / viewportHeight,\r\n\t\t\t\tscale = new THREE.Vector2( size * invAspect, size );\r\n\t\r\n\t\t\tvar screenPosition = new THREE.Vector3( 1, 1, 0 ),\r\n\t\t\t\tscreenPositionPixels = new THREE.Vector2( 1, 1 );\r\n\t\r\n\t\t\tif ( program === undefined ) {\r\n\t\r\n\t\t\t\tinit();\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tgl.useProgram( program );\r\n\t\r\n\t\t\tstate.initAttributes();\r\n\t\t\tstate.enableAttribute( attributes.vertex );\r\n\t\t\tstate.enableAttribute( attributes.uv );\r\n\t\t\tstate.disableUnusedAttributes();\r\n\t\r\n\t\t\t// loop through all lens flares to update their occlusion and positions\r\n\t\t\t// setup gl and common used attribs/uniforms\r\n\t\r\n\t\t\tgl.uniform1i( uniforms.occlusionMap, 0 );\r\n\t\t\tgl.uniform1i( uniforms.map, 1 );\r\n\t\r\n\t\t\tgl.bindBuffer( gl.ARRAY_BUFFER, vertexBuffer );\r\n\t\t\tgl.vertexAttribPointer( attributes.vertex, 2, gl.FLOAT, false, 2 * 8, 0 );\r\n\t\t\tgl.vertexAttribPointer( attributes.uv, 2, gl.FLOAT, false, 2 * 8, 8 );\r\n\t\r\n\t\t\tgl.bindBuffer( gl.ELEMENT_ARRAY_BUFFER, elementBuffer );\r\n\t\r\n\t\t\tstate.disable( gl.CULL_FACE );\r\n\t\t\tgl.depthMask( false );\r\n\t\r\n\t\t\tfor ( var i = 0, l = flares.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\tsize = 16 / viewportHeight;\r\n\t\t\t\tscale.set( size * invAspect, size );\r\n\t\r\n\t\t\t\t// calc object screen position\r\n\t\r\n\t\t\t\tvar flare = flares[ i ];\r\n\t\r\n\t\t\t\ttempPosition.set( flare.matrixWorld.elements[ 12 ], flare.matrixWorld.elements[ 13 ], flare.matrixWorld.elements[ 14 ] );\r\n\t\r\n\t\t\t\ttempPosition.applyMatrix4( camera.matrixWorldInverse );\r\n\t\t\t\ttempPosition.applyProjection( camera.projectionMatrix );\r\n\t\r\n\t\t\t\t// setup arrays for gl programs\r\n\t\r\n\t\t\t\tscreenPosition.copy( tempPosition );\r\n\t\r\n\t\t\t\tscreenPositionPixels.x = screenPosition.x * halfViewportWidth + halfViewportWidth;\r\n\t\t\t\tscreenPositionPixels.y = screenPosition.y * halfViewportHeight + halfViewportHeight;\r\n\t\r\n\t\t\t\t// screen cull\r\n\t\r\n\t\t\t\tif ( hasVertexTexture || (\r\n\t\t\t\t\tscreenPositionPixels.x > 0 &&\r\n\t\t\t\t\tscreenPositionPixels.x < viewportWidth &&\r\n\t\t\t\t\tscreenPositionPixels.y > 0 &&\r\n\t\t\t\t\tscreenPositionPixels.y < viewportHeight ) ) {\r\n\t\r\n\t\t\t\t\t// save current RGB to temp texture\r\n\t\r\n\t\t\t\t\tstate.activeTexture( gl.TEXTURE0 );\r\n\t\t\t\t\tstate.bindTexture( gl.TEXTURE_2D, null );\r\n\t\t\t\t\tstate.activeTexture( gl.TEXTURE1 );\r\n\t\t\t\t\tstate.bindTexture( gl.TEXTURE_2D, tempTexture );\r\n\t\t\t\t\tgl.copyTexImage2D( gl.TEXTURE_2D, 0, gl.RGB, screenPositionPixels.x - 8, screenPositionPixels.y - 8, 16, 16, 0 );\r\n\t\r\n\t\r\n\t\t\t\t\t// render pink quad\r\n\t\r\n\t\t\t\t\tgl.uniform1i( uniforms.renderType, 0 );\r\n\t\t\t\t\tgl.uniform2f( uniforms.scale, scale.x, scale.y );\r\n\t\t\t\t\tgl.uniform3f( uniforms.screenPosition, screenPosition.x, screenPosition.y, screenPosition.z );\r\n\t\r\n\t\t\t\t\tstate.disable( gl.BLEND );\r\n\t\t\t\t\tstate.enable( gl.DEPTH_TEST );\r\n\t\r\n\t\t\t\t\tgl.drawElements( gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0 );\r\n\t\r\n\t\r\n\t\t\t\t\t// copy result to occlusionMap\r\n\t\r\n\t\t\t\t\tstate.activeTexture( gl.TEXTURE0 );\r\n\t\t\t\t\tstate.bindTexture( gl.TEXTURE_2D, occlusionTexture );\r\n\t\t\t\t\tgl.copyTexImage2D( gl.TEXTURE_2D, 0, gl.RGBA, screenPositionPixels.x - 8, screenPositionPixels.y - 8, 16, 16, 0 );\r\n\t\r\n\t\r\n\t\t\t\t\t// restore graphics\r\n\t\r\n\t\t\t\t\tgl.uniform1i( uniforms.renderType, 1 );\r\n\t\t\t\t\tstate.disable( gl.DEPTH_TEST );\r\n\t\r\n\t\t\t\t\tstate.activeTexture( gl.TEXTURE1 );\r\n\t\t\t\t\tstate.bindTexture( gl.TEXTURE_2D, tempTexture );\r\n\t\t\t\t\tgl.drawElements( gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0 );\r\n\t\r\n\t\r\n\t\t\t\t\t// update object positions\r\n\t\r\n\t\t\t\t\tflare.positionScreen.copy( screenPosition );\r\n\t\r\n\t\t\t\t\tif ( flare.customUpdateCallback ) {\r\n\t\r\n\t\t\t\t\t\tflare.customUpdateCallback( flare );\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\tflare.updateLensFlares();\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t// render flares\r\n\t\r\n\t\t\t\t\tgl.uniform1i( uniforms.renderType, 2 );\r\n\t\t\t\t\tstate.enable( gl.BLEND );\r\n\t\r\n\t\t\t\t\tfor ( var j = 0, jl = flare.lensFlares.length; j < jl; j ++ ) {\r\n\t\r\n\t\t\t\t\t\tvar sprite = flare.lensFlares[ j ];\r\n\t\r\n\t\t\t\t\t\tif ( sprite.opacity > 0.001 && sprite.scale > 0.001 ) {\r\n\t\r\n\t\t\t\t\t\t\tscreenPosition.x = sprite.x;\r\n\t\t\t\t\t\t\tscreenPosition.y = sprite.y;\r\n\t\t\t\t\t\t\tscreenPosition.z = sprite.z;\r\n\t\r\n\t\t\t\t\t\t\tsize = sprite.size * sprite.scale / viewportHeight;\r\n\t\r\n\t\t\t\t\t\t\tscale.x = size * invAspect;\r\n\t\t\t\t\t\t\tscale.y = size;\r\n\t\r\n\t\t\t\t\t\t\tgl.uniform3f( uniforms.screenPosition, screenPosition.x, screenPosition.y, screenPosition.z );\r\n\t\t\t\t\t\t\tgl.uniform2f( uniforms.scale, scale.x, scale.y );\r\n\t\t\t\t\t\t\tgl.uniform1f( uniforms.rotation, sprite.rotation );\r\n\t\r\n\t\t\t\t\t\t\tgl.uniform1f( uniforms.opacity, sprite.opacity );\r\n\t\t\t\t\t\t\tgl.uniform3f( uniforms.color, sprite.color.r, sprite.color.g, sprite.color.b );\r\n\t\r\n\t\t\t\t\t\t\tstate.setBlending( sprite.blending, sprite.blendEquation, sprite.blendSrc, sprite.blendDst );\r\n\t\t\t\t\t\t\trenderer.setTexture( sprite.texture, 1 );\r\n\t\r\n\t\t\t\t\t\t\tgl.drawElements( gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0 );\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// restore gl\r\n\t\r\n\t\t\tstate.enable( gl.CULL_FACE );\r\n\t\t\tstate.enable( gl.DEPTH_TEST );\r\n\t\t\tgl.depthMask( true );\r\n\t\r\n\t\t\trenderer.resetGLState();\r\n\t\r\n\t\t};\r\n\t\r\n\t\tfunction createProgram ( shader ) {\r\n\t\r\n\t\t\tvar program = gl.createProgram();\r\n\t\r\n\t\t\tvar fragmentShader = gl.createShader( gl.FRAGMENT_SHADER );\r\n\t\t\tvar vertexShader = gl.createShader( gl.VERTEX_SHADER );\r\n\t\r\n\t\t\tvar prefix = \"precision \" + renderer.getPrecision() + \" float;\\n\";\r\n\t\r\n\t\t\tgl.shaderSource( fragmentShader, prefix + shader.fragmentShader );\r\n\t\t\tgl.shaderSource( vertexShader, prefix + shader.vertexShader );\r\n\t\r\n\t\t\tgl.compileShader( fragmentShader );\r\n\t\t\tgl.compileShader( vertexShader );\r\n\t\r\n\t\t\tgl.attachShader( program, fragmentShader );\r\n\t\t\tgl.attachShader( program, vertexShader );\r\n\t\r\n\t\t\tgl.linkProgram( program );\r\n\t\r\n\t\t\treturn program;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/renderers/webgl/plugins/SpritePlugin.js\r\n\t\r\n\t/**\r\n\t * @author mikael emtinger / http://gomo.se/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\t\r\n\tTHREE.SpritePlugin = function ( renderer, sprites ) {\r\n\t\r\n\t\tvar gl = renderer.context;\r\n\t\tvar state = renderer.state;\r\n\t\r\n\t\tvar vertexBuffer, elementBuffer;\r\n\t\tvar program, attributes, uniforms;\r\n\t\r\n\t\tvar texture;\r\n\t\r\n\t\t// decompose matrixWorld\r\n\t\r\n\t\tvar spritePosition = new THREE.Vector3();\r\n\t\tvar spriteRotation = new THREE.Quaternion();\r\n\t\tvar spriteScale = new THREE.Vector3();\r\n\t\r\n\t\tvar init = function () {\r\n\t\r\n\t\t\tvar vertices = new Float32Array( [\r\n\t\t\t\t- 0.5, - 0.5,  0, 0,\r\n\t\t\t\t  0.5, - 0.5,  1, 0,\r\n\t\t\t\t  0.5,   0.5,  1, 1,\r\n\t\t\t\t- 0.5,   0.5,  0, 1\r\n\t\t\t] );\r\n\t\r\n\t\t\tvar faces = new Uint16Array( [\r\n\t\t\t\t0, 1, 2,\r\n\t\t\t\t0, 2, 3\r\n\t\t\t] );\r\n\t\r\n\t\t\tvertexBuffer  = gl.createBuffer();\r\n\t\t\telementBuffer = gl.createBuffer();\r\n\t\r\n\t\t\tgl.bindBuffer( gl.ARRAY_BUFFER, vertexBuffer );\r\n\t\t\tgl.bufferData( gl.ARRAY_BUFFER, vertices, gl.STATIC_DRAW );\r\n\t\r\n\t\t\tgl.bindBuffer( gl.ELEMENT_ARRAY_BUFFER, elementBuffer );\r\n\t\t\tgl.bufferData( gl.ELEMENT_ARRAY_BUFFER, faces, gl.STATIC_DRAW );\r\n\t\r\n\t\t\tprogram = createProgram();\r\n\t\r\n\t\t\tattributes = {\r\n\t\t\t\tposition:\t\t\tgl.getAttribLocation ( program, 'position' ),\r\n\t\t\t\tuv:\t\t\t\t\tgl.getAttribLocation ( program, 'uv' )\r\n\t\t\t};\r\n\t\r\n\t\t\tuniforms = {\r\n\t\t\t\tuvOffset:\t\t\tgl.getUniformLocation( program, 'uvOffset' ),\r\n\t\t\t\tuvScale:\t\t\tgl.getUniformLocation( program, 'uvScale' ),\r\n\t\r\n\t\t\t\trotation:\t\t\tgl.getUniformLocation( program, 'rotation' ),\r\n\t\t\t\tscale:\t\t\t\tgl.getUniformLocation( program, 'scale' ),\r\n\t\r\n\t\t\t\tcolor:\t\t\t\tgl.getUniformLocation( program, 'color' ),\r\n\t\t\t\tmap:\t\t\t\tgl.getUniformLocation( program, 'map' ),\r\n\t\t\t\topacity:\t\t\tgl.getUniformLocation( program, 'opacity' ),\r\n\t\r\n\t\t\t\tmodelViewMatrix: \tgl.getUniformLocation( program, 'modelViewMatrix' ),\r\n\t\t\t\tprojectionMatrix:\tgl.getUniformLocation( program, 'projectionMatrix' ),\r\n\t\r\n\t\t\t\tfogType:\t\t\tgl.getUniformLocation( program, 'fogType' ),\r\n\t\t\t\tfogDensity:\t\t\tgl.getUniformLocation( program, 'fogDensity' ),\r\n\t\t\t\tfogNear:\t\t\tgl.getUniformLocation( program, 'fogNear' ),\r\n\t\t\t\tfogFar:\t\t\t\tgl.getUniformLocation( program, 'fogFar' ),\r\n\t\t\t\tfogColor:\t\t\tgl.getUniformLocation( program, 'fogColor' ),\r\n\t\r\n\t\t\t\talphaTest:\t\t\tgl.getUniformLocation( program, 'alphaTest' )\r\n\t\t\t};\r\n\t\r\n\t\t\tvar canvas = document.createElement( 'canvas' );\r\n\t\t\tcanvas.width = 8;\r\n\t\t\tcanvas.height = 8;\r\n\t\r\n\t\t\tvar context = canvas.getContext( '2d' );\r\n\t\t\tcontext.fillStyle = 'white';\r\n\t\t\tcontext.fillRect( 0, 0, 8, 8 );\r\n\t\r\n\t\t\ttexture = new THREE.Texture( canvas );\r\n\t\t\ttexture.needsUpdate = true;\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.render = function ( scene, camera ) {\r\n\t\r\n\t\t\tif ( sprites.length === 0 ) return;\r\n\t\r\n\t\t\t// setup gl\r\n\t\r\n\t\t\tif ( program === undefined ) {\r\n\t\r\n\t\t\t\tinit();\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tgl.useProgram( program );\r\n\t\r\n\t\t\tstate.initAttributes();\r\n\t\t\tstate.enableAttribute( attributes.position );\r\n\t\t\tstate.enableAttribute( attributes.uv );\r\n\t\t\tstate.disableUnusedAttributes();\r\n\t\r\n\t\t\tstate.disable( gl.CULL_FACE );\r\n\t\t\tstate.enable( gl.BLEND );\r\n\t\r\n\t\t\tgl.bindBuffer( gl.ARRAY_BUFFER, vertexBuffer );\r\n\t\t\tgl.vertexAttribPointer( attributes.position, 2, gl.FLOAT, false, 2 * 8, 0 );\r\n\t\t\tgl.vertexAttribPointer( attributes.uv, 2, gl.FLOAT, false, 2 * 8, 8 );\r\n\t\r\n\t\t\tgl.bindBuffer( gl.ELEMENT_ARRAY_BUFFER, elementBuffer );\r\n\t\r\n\t\t\tgl.uniformMatrix4fv( uniforms.projectionMatrix, false, camera.projectionMatrix.elements );\r\n\t\r\n\t\t\tstate.activeTexture( gl.TEXTURE0 );\r\n\t\t\tgl.uniform1i( uniforms.map, 0 );\r\n\t\r\n\t\t\tvar oldFogType = 0;\r\n\t\t\tvar sceneFogType = 0;\r\n\t\t\tvar fog = scene.fog;\r\n\t\r\n\t\t\tif ( fog ) {\r\n\t\r\n\t\t\t\tgl.uniform3f( uniforms.fogColor, fog.color.r, fog.color.g, fog.color.b );\r\n\t\r\n\t\t\t\tif ( fog instanceof THREE.Fog ) {\r\n\t\r\n\t\t\t\t\tgl.uniform1f( uniforms.fogNear, fog.near );\r\n\t\t\t\t\tgl.uniform1f( uniforms.fogFar, fog.far );\r\n\t\r\n\t\t\t\t\tgl.uniform1i( uniforms.fogType, 1 );\r\n\t\t\t\t\toldFogType = 1;\r\n\t\t\t\t\tsceneFogType = 1;\r\n\t\r\n\t\t\t\t} else if ( fog instanceof THREE.FogExp2 ) {\r\n\t\r\n\t\t\t\t\tgl.uniform1f( uniforms.fogDensity, fog.density );\r\n\t\r\n\t\t\t\t\tgl.uniform1i( uniforms.fogType, 2 );\r\n\t\t\t\t\toldFogType = 2;\r\n\t\t\t\t\tsceneFogType = 2;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tgl.uniform1i( uniforms.fogType, 0 );\r\n\t\t\t\toldFogType = 0;\r\n\t\t\t\tsceneFogType = 0;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\r\n\t\t\t// update positions and sort\r\n\t\r\n\t\t\tfor ( var i = 0, l = sprites.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\tvar sprite = sprites[ i ];\r\n\t\r\n\t\t\t\tsprite.modelViewMatrix.multiplyMatrices( camera.matrixWorldInverse, sprite.matrixWorld );\r\n\t\t\t\tsprite.z = - sprite.modelViewMatrix.elements[ 14 ];\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tsprites.sort( painterSortStable );\r\n\t\r\n\t\t\t// render all sprites\r\n\t\r\n\t\t\tvar scale = [];\r\n\t\r\n\t\t\tfor ( var i = 0, l = sprites.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\tvar sprite = sprites[ i ];\r\n\t\t\t\tvar material = sprite.material;\r\n\t\r\n\t\t\t\tgl.uniform1f( uniforms.alphaTest, material.alphaTest );\r\n\t\t\t\tgl.uniformMatrix4fv( uniforms.modelViewMatrix, false, sprite.modelViewMatrix.elements );\r\n\t\r\n\t\t\t\tsprite.matrixWorld.decompose( spritePosition, spriteRotation, spriteScale );\r\n\t\r\n\t\t\t\tscale[ 0 ] = spriteScale.x;\r\n\t\t\t\tscale[ 1 ] = spriteScale.y;\r\n\t\r\n\t\t\t\tvar fogType = 0;\r\n\t\r\n\t\t\t\tif ( scene.fog && material.fog ) {\r\n\t\r\n\t\t\t\t\tfogType = sceneFogType;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( oldFogType !== fogType ) {\r\n\t\r\n\t\t\t\t\tgl.uniform1i( uniforms.fogType, fogType );\r\n\t\t\t\t\toldFogType = fogType;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( material.map !== null ) {\r\n\t\r\n\t\t\t\t\tgl.uniform2f( uniforms.uvOffset, material.map.offset.x, material.map.offset.y );\r\n\t\t\t\t\tgl.uniform2f( uniforms.uvScale, material.map.repeat.x, material.map.repeat.y );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tgl.uniform2f( uniforms.uvOffset, 0, 0 );\r\n\t\t\t\t\tgl.uniform2f( uniforms.uvScale, 1, 1 );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tgl.uniform1f( uniforms.opacity, material.opacity );\r\n\t\t\t\tgl.uniform3f( uniforms.color, material.color.r, material.color.g, material.color.b );\r\n\t\r\n\t\t\t\tgl.uniform1f( uniforms.rotation, material.rotation );\r\n\t\t\t\tgl.uniform2fv( uniforms.scale, scale );\r\n\t\r\n\t\t\t\tstate.setBlending( material.blending, material.blendEquation, material.blendSrc, material.blendDst );\r\n\t\t\t\tstate.setDepthTest( material.depthTest );\r\n\t\t\t\tstate.setDepthWrite( material.depthWrite );\r\n\t\r\n\t\t\t\tif ( material.map && material.map.image && material.map.image.width ) {\r\n\t\r\n\t\t\t\t\trenderer.setTexture( material.map, 0 );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\trenderer.setTexture( texture, 0 );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tgl.drawElements( gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0 );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// restore gl\r\n\t\r\n\t\t\tstate.enable( gl.CULL_FACE );\r\n\t\r\n\t\t\trenderer.resetGLState();\r\n\t\r\n\t\t};\r\n\t\r\n\t\tfunction createProgram () {\r\n\t\r\n\t\t\tvar program = gl.createProgram();\r\n\t\r\n\t\t\tvar vertexShader = gl.createShader( gl.VERTEX_SHADER );\r\n\t\t\tvar fragmentShader = gl.createShader( gl.FRAGMENT_SHADER );\r\n\t\r\n\t\t\tgl.shaderSource( vertexShader, [\r\n\t\r\n\t\t\t\t'precision ' + renderer.getPrecision() + ' float;',\r\n\t\r\n\t\t\t\t'uniform mat4 modelViewMatrix;',\r\n\t\t\t\t'uniform mat4 projectionMatrix;',\r\n\t\t\t\t'uniform float rotation;',\r\n\t\t\t\t'uniform vec2 scale;',\r\n\t\t\t\t'uniform vec2 uvOffset;',\r\n\t\t\t\t'uniform vec2 uvScale;',\r\n\t\r\n\t\t\t\t'attribute vec2 position;',\r\n\t\t\t\t'attribute vec2 uv;',\r\n\t\r\n\t\t\t\t'varying vec2 vUV;',\r\n\t\r\n\t\t\t\t'void main() {',\r\n\t\r\n\t\t\t\t\t'vUV = uvOffset + uv * uvScale;',\r\n\t\r\n\t\t\t\t\t'vec2 alignedPosition = position * scale;',\r\n\t\r\n\t\t\t\t\t'vec2 rotatedPosition;',\r\n\t\t\t\t\t'rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;',\r\n\t\t\t\t\t'rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;',\r\n\t\r\n\t\t\t\t\t'vec4 finalPosition;',\r\n\t\r\n\t\t\t\t\t'finalPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );',\r\n\t\t\t\t\t'finalPosition.xy += rotatedPosition;',\r\n\t\t\t\t\t'finalPosition = projectionMatrix * finalPosition;',\r\n\t\r\n\t\t\t\t\t'gl_Position = finalPosition;',\r\n\t\r\n\t\t\t\t'}'\r\n\t\r\n\t\t\t].join( '\\n' ) );\r\n\t\r\n\t\t\tgl.shaderSource( fragmentShader, [\r\n\t\r\n\t\t\t\t'precision ' + renderer.getPrecision() + ' float;',\r\n\t\r\n\t\t\t\t'uniform vec3 color;',\r\n\t\t\t\t'uniform sampler2D map;',\r\n\t\t\t\t'uniform float opacity;',\r\n\t\r\n\t\t\t\t'uniform int fogType;',\r\n\t\t\t\t'uniform vec3 fogColor;',\r\n\t\t\t\t'uniform float fogDensity;',\r\n\t\t\t\t'uniform float fogNear;',\r\n\t\t\t\t'uniform float fogFar;',\r\n\t\t\t\t'uniform float alphaTest;',\r\n\t\r\n\t\t\t\t'varying vec2 vUV;',\r\n\t\r\n\t\t\t\t'void main() {',\r\n\t\r\n\t\t\t\t\t'vec4 texture = texture2D( map, vUV );',\r\n\t\r\n\t\t\t\t\t'if ( texture.a < alphaTest ) discard;',\r\n\t\r\n\t\t\t\t\t'gl_FragColor = vec4( color * texture.xyz, texture.a * opacity );',\r\n\t\r\n\t\t\t\t\t'if ( fogType > 0 ) {',\r\n\t\r\n\t\t\t\t\t\t'float depth = gl_FragCoord.z / gl_FragCoord.w;',\r\n\t\t\t\t\t\t'float fogFactor = 0.0;',\r\n\t\r\n\t\t\t\t\t\t'if ( fogType == 1 ) {',\r\n\t\r\n\t\t\t\t\t\t\t'fogFactor = smoothstep( fogNear, fogFar, depth );',\r\n\t\r\n\t\t\t\t\t\t'} else {',\r\n\t\r\n\t\t\t\t\t\t\t'const float LOG2 = 1.442695;',\r\n\t\t\t\t\t\t\t'fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );',\r\n\t\t\t\t\t\t\t'fogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );',\r\n\t\r\n\t\t\t\t\t\t'}',\r\n\t\r\n\t\t\t\t\t\t'gl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );',\r\n\t\r\n\t\t\t\t\t'}',\r\n\t\r\n\t\t\t\t'}'\r\n\t\r\n\t\t\t].join( '\\n' ) );\r\n\t\r\n\t\t\tgl.compileShader( vertexShader );\r\n\t\t\tgl.compileShader( fragmentShader );\r\n\t\r\n\t\t\tgl.attachShader( program, vertexShader );\r\n\t\t\tgl.attachShader( program, fragmentShader );\r\n\t\r\n\t\t\tgl.linkProgram( program );\r\n\t\r\n\t\t\treturn program;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction painterSortStable ( a, b ) {\r\n\t\r\n\t\t\tif ( a.z !== b.z ) {\r\n\t\r\n\t\t\t\treturn b.z - a.z;\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\treturn b.id - a.id;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/GeometryUtils.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.GeometryUtils = {\r\n\t\r\n\t\tmerge: function ( geometry1, geometry2, materialIndexOffset ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.GeometryUtils: .merge() has been moved to Geometry. Use geometry.merge( geometry2, matrix, materialIndexOffset ) instead.' );\r\n\t\r\n\t\t\tvar matrix;\r\n\t\r\n\t\t\tif ( geometry2 instanceof THREE.Mesh ) {\r\n\t\r\n\t\t\t\tgeometry2.matrixAutoUpdate && geometry2.updateMatrix();\r\n\t\r\n\t\t\t\tmatrix = geometry2.matrix;\r\n\t\t\t\tgeometry2 = geometry2.geometry;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tgeometry1.merge( geometry2, matrix, materialIndexOffset );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcenter: function ( geometry ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.GeometryUtils: .center() has been moved to Geometry. Use geometry.center() instead.' );\r\n\t\t\treturn geometry.center();\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/ImageUtils.js\r\n\t\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author Daosheng Mu / https://github.com/DaoshengMu/\r\n\t */\r\n\t\r\n\tTHREE.ImageUtils = {\r\n\t\r\n\t\tcrossOrigin: undefined,\r\n\t\r\n\t\tloadTexture: function ( url, mapping, onLoad, onError ) {\r\n\t\r\n\t\t\tvar loader = new THREE.ImageLoader();\r\n\t\t\tloader.crossOrigin = this.crossOrigin;\r\n\t\r\n\t\t\tvar texture = new THREE.Texture( undefined, mapping );\r\n\t\r\n\t\t\tloader.load( url, function ( image ) {\r\n\t\r\n\t\t\t\ttexture.image = image;\r\n\t\t\t\ttexture.needsUpdate = true;\r\n\t\r\n\t\t\t\tif ( onLoad ) onLoad( texture );\r\n\t\r\n\t\t\t}, undefined, function ( event ) {\r\n\t\r\n\t\t\t\tif ( onError ) onError( event );\r\n\t\r\n\t\t\t} );\r\n\t\r\n\t\t\ttexture.sourceFile = url;\r\n\t\r\n\t\t\treturn texture;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tloadTextureCube: function ( array, mapping, onLoad, onError ) {\r\n\t\r\n\t\t\tvar images = [];\r\n\t\r\n\t\t\tvar loader = new THREE.ImageLoader();\r\n\t\t\tloader.crossOrigin = this.crossOrigin;\r\n\t\r\n\t\t\tvar texture = new THREE.CubeTexture( images, mapping );\r\n\t\r\n\t\t\tvar loaded = 0;\r\n\t\r\n\t\t\tvar loadTexture = function ( i ) {\r\n\t\r\n\t\t\t\tloader.load( array[ i ], function ( image ) {\r\n\t\r\n\t\t\t\t\ttexture.images[ i ] = image;\r\n\t\r\n\t\t\t\t\tloaded += 1;\r\n\t\r\n\t\t\t\t\tif ( loaded === 6 ) {\r\n\t\r\n\t\t\t\t\t\ttexture.needsUpdate = true;\r\n\t\r\n\t\t\t\t\t\tif ( onLoad ) onLoad( texture );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}, undefined, onError );\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t\tfor ( var i = 0, il = array.length; i < il; ++ i ) {\r\n\t\r\n\t\t\t\tloadTexture( i );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn texture;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tloadCompressedTexture: function () {\r\n\t\r\n\t\t\tconsole.error( 'THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.' )\r\n\t\r\n\t\t},\r\n\t\r\n\t\tloadCompressedTextureCube: function () {\r\n\t\r\n\t\t\tconsole.error( 'THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.' )\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetNormalMap: function ( image, depth ) {\r\n\t\r\n\t\t\t// Adapted from http://www.paulbrunt.co.uk/lab/heightnormal/\r\n\t\r\n\t\t\tvar cross = function ( a, b ) {\r\n\t\r\n\t\t\t\treturn [ a[ 1 ] * b[ 2 ] - a[ 2 ] * b[ 1 ], a[ 2 ] * b[ 0 ] - a[ 0 ] * b[ 2 ], a[ 0 ] * b[ 1 ] - a[ 1 ] * b[ 0 ] ];\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t\tvar subtract = function ( a, b ) {\r\n\t\r\n\t\t\t\treturn [ a[ 0 ] - b[ 0 ], a[ 1 ] - b[ 1 ], a[ 2 ] - b[ 2 ] ];\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t\tvar normalize = function ( a ) {\r\n\t\r\n\t\t\t\tvar l = Math.sqrt( a[ 0 ] * a[ 0 ] + a[ 1 ] * a[ 1 ] + a[ 2 ] * a[ 2 ] );\r\n\t\t\t\treturn [ a[ 0 ] / l, a[ 1 ] / l, a[ 2 ] / l ];\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t\tdepth = depth | 1;\r\n\t\r\n\t\t\tvar width = image.width;\r\n\t\t\tvar height = image.height;\r\n\t\r\n\t\t\tvar canvas = document.createElement( 'canvas' );\r\n\t\t\tcanvas.width = width;\r\n\t\t\tcanvas.height = height;\r\n\t\r\n\t\t\tvar context = canvas.getContext( '2d' );\r\n\t\t\tcontext.drawImage( image, 0, 0 );\r\n\t\r\n\t\t\tvar data = context.getImageData( 0, 0, width, height ).data;\r\n\t\t\tvar imageData = context.createImageData( width, height );\r\n\t\t\tvar output = imageData.data;\r\n\t\r\n\t\t\tfor ( var x = 0; x < width; x ++ ) {\r\n\t\r\n\t\t\t\tfor ( var y = 0; y < height; y ++ ) {\r\n\t\r\n\t\t\t\t\tvar ly = y - 1 < 0 ? 0 : y - 1;\r\n\t\t\t\t\tvar uy = y + 1 > height - 1 ? height - 1 : y + 1;\r\n\t\t\t\t\tvar lx = x - 1 < 0 ? 0 : x - 1;\r\n\t\t\t\t\tvar ux = x + 1 > width - 1 ? width - 1 : x + 1;\r\n\t\r\n\t\t\t\t\tvar points = [];\r\n\t\t\t\t\tvar origin = [ 0, 0, data[ ( y * width + x ) * 4 ] / 255 * depth ];\r\n\t\t\t\t\tpoints.push( [ - 1, 0, data[ ( y * width + lx ) * 4 ] / 255 * depth ] );\r\n\t\t\t\t\tpoints.push( [ - 1, - 1, data[ ( ly * width + lx ) * 4 ] / 255 * depth ] );\r\n\t\t\t\t\tpoints.push( [ 0, - 1, data[ ( ly * width + x ) * 4 ] / 255 * depth ] );\r\n\t\t\t\t\tpoints.push( [ 1, - 1, data[ ( ly * width + ux ) * 4 ] / 255 * depth ] );\r\n\t\t\t\t\tpoints.push( [ 1, 0, data[ ( y * width + ux ) * 4 ] / 255 * depth ] );\r\n\t\t\t\t\tpoints.push( [ 1, 1, data[ ( uy * width + ux ) * 4 ] / 255 * depth ] );\r\n\t\t\t\t\tpoints.push( [ 0, 1, data[ ( uy * width + x ) * 4 ] / 255 * depth ] );\r\n\t\t\t\t\tpoints.push( [ - 1, 1, data[ ( uy * width + lx ) * 4 ] / 255 * depth ] );\r\n\t\r\n\t\t\t\t\tvar normals = [];\r\n\t\t\t\t\tvar num_points = points.length;\r\n\t\r\n\t\t\t\t\tfor ( var i = 0; i < num_points; i ++ ) {\r\n\t\r\n\t\t\t\t\t\tvar v1 = points[ i ];\r\n\t\t\t\t\t\tvar v2 = points[ ( i + 1 ) % num_points ];\r\n\t\t\t\t\t\tv1 = subtract( v1, origin );\r\n\t\t\t\t\t\tv2 = subtract( v2, origin );\r\n\t\t\t\t\t\tnormals.push( normalize( cross( v1, v2 ) ) );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tvar normal = [ 0, 0, 0 ];\r\n\t\r\n\t\t\t\t\tfor ( var i = 0; i < normals.length; i ++ ) {\r\n\t\r\n\t\t\t\t\t\tnormal[ 0 ] += normals[ i ][ 0 ];\r\n\t\t\t\t\t\tnormal[ 1 ] += normals[ i ][ 1 ];\r\n\t\t\t\t\t\tnormal[ 2 ] += normals[ i ][ 2 ];\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tnormal[ 0 ] /= normals.length;\r\n\t\t\t\t\tnormal[ 1 ] /= normals.length;\r\n\t\t\t\t\tnormal[ 2 ] /= normals.length;\r\n\t\r\n\t\t\t\t\tvar idx = ( y * width + x ) * 4;\r\n\t\r\n\t\t\t\t\toutput[ idx ] = ( ( normal[ 0 ] + 1.0 ) / 2.0 * 255 ) | 0;\r\n\t\t\t\t\toutput[ idx + 1 ] = ( ( normal[ 1 ] + 1.0 ) / 2.0 * 255 ) | 0;\r\n\t\t\t\t\toutput[ idx + 2 ] = ( normal[ 2 ] * 255 ) | 0;\r\n\t\t\t\t\toutput[ idx + 3 ] = 255;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tcontext.putImageData( imageData, 0, 0 );\r\n\t\r\n\t\t\treturn canvas;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgenerateDataTexture: function ( width, height, color ) {\r\n\t\r\n\t\t\tvar size = width * height;\r\n\t\t\tvar data = new Uint8Array( 3 * size );\r\n\t\r\n\t\t\tvar r = Math.floor( color.r * 255 );\r\n\t\t\tvar g = Math.floor( color.g * 255 );\r\n\t\t\tvar b = Math.floor( color.b * 255 );\r\n\t\r\n\t\t\tfor ( var i = 0; i < size; i ++ ) {\r\n\t\r\n\t\t\t\tdata[ i * 3 ] \t   = r;\r\n\t\t\t\tdata[ i * 3 + 1 ] = g;\r\n\t\t\t\tdata[ i * 3 + 2 ] = b;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar texture = new THREE.DataTexture( data, width, height, THREE.RGBFormat );\r\n\t\t\ttexture.needsUpdate = true;\r\n\t\r\n\t\t\treturn texture;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/SceneUtils.js\r\n\t\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\t\r\n\tTHREE.SceneUtils = {\r\n\t\r\n\t\tcreateMultiMaterialObject: function ( geometry, materials ) {\r\n\t\r\n\t\t\tvar group = new THREE.Group();\r\n\t\r\n\t\t\tfor ( var i = 0, l = materials.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\tgroup.add( new THREE.Mesh( geometry, materials[ i ] ) );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn group;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdetach: function ( child, parent, scene ) {\r\n\t\r\n\t\t\tchild.applyMatrix( parent.matrixWorld );\r\n\t\t\tparent.remove( child );\r\n\t\t\tscene.add( child );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tattach: function ( child, scene, parent ) {\r\n\t\r\n\t\t\tvar matrixWorldInverse = new THREE.Matrix4();\r\n\t\t\tmatrixWorldInverse.getInverse( parent.matrixWorld );\r\n\t\t\tchild.applyMatrix( matrixWorldInverse );\r\n\t\r\n\t\t\tscene.remove( child );\r\n\t\t\tparent.add( child );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/FontUtils.js\r\n\t\r\n\t/**\r\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t *\r\n\t * For Text operations in three.js (See TextGeometry)\r\n\t *\r\n\t * It uses techniques used in:\r\n\t *\r\n\t *\tTriangulation ported from AS3\r\n\t *\t\tSimple Polygon Triangulation\r\n\t *\t\thttp://actionsnippet.com/?p=1462\r\n\t *\r\n\t * \tA Method to triangulate shapes with holes\r\n\t *\t\thttp://www.sakri.net/blog/2009/06/12/an-approach-to-triangulating-polygons-with-holes/\r\n\t *\r\n\t */\r\n\t\r\n\tTHREE.FontUtils = {\r\n\t\r\n\t\tfaces: {},\r\n\t\r\n\t\t// Just for now. face[weight][style]\r\n\t\r\n\t\tface: 'helvetiker',\r\n\t\tweight: 'normal',\r\n\t\tstyle: 'normal',\r\n\t\tsize: 150,\r\n\t\tdivisions: 10,\r\n\t\r\n\t\tgetFace: function () {\r\n\t\r\n\t\t\ttry {\r\n\t\r\n\t\t\t\treturn this.faces[ this.face.toLowerCase() ][ this.weight ][ this.style ];\r\n\t\r\n\t\t\t} catch ( e ) {\r\n\t\r\n\t\t\t\tthrow \"The font \" + this.face + \" with \" + this.weight + \" weight and \" + this.style + \" style is missing.\"\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\tloadFace: function ( data ) {\r\n\t\r\n\t\t\tvar family = data.familyName.toLowerCase();\r\n\t\r\n\t\t\tvar ThreeFont = this;\r\n\t\r\n\t\t\tThreeFont.faces[ family ] = ThreeFont.faces[ family ] || {};\r\n\t\r\n\t\t\tThreeFont.faces[ family ][ data.cssFontWeight ] = ThreeFont.faces[ family ][ data.cssFontWeight ] || {};\r\n\t\t\tThreeFont.faces[ family ][ data.cssFontWeight ][ data.cssFontStyle ] = data;\r\n\t\r\n\t\t\tThreeFont.faces[ family ][ data.cssFontWeight ][ data.cssFontStyle ] = data;\r\n\t\r\n\t\t\treturn data;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdrawText: function ( text ) {\r\n\t\r\n\t\t\t// RenderText\r\n\t\r\n\t\t\tvar i,\r\n\t\t\t\tface = this.getFace(),\r\n\t\t\t\tscale = this.size / face.resolution,\r\n\t\t\t\toffset = 0,\r\n\t\t\t\tchars = String( text ).split( '' ),\r\n\t\t\t\tlength = chars.length;\r\n\t\r\n\t\t\tvar fontPaths = [];\r\n\t\r\n\t\t\tfor ( i = 0; i < length; i ++ ) {\r\n\t\r\n\t\t\t\tvar path = new THREE.Path();\r\n\t\r\n\t\t\t\tvar ret = this.extractGlyphPoints( chars[ i ], face, scale, offset, path );\r\n\t\t\t\toffset += ret.offset;\r\n\t\r\n\t\t\t\tfontPaths.push( ret.path );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// get the width\r\n\t\r\n\t\t\tvar width = offset / 2;\r\n\t\t\t//\r\n\t\t\t// for ( p = 0; p < allPts.length; p++ ) {\r\n\t\t\t//\r\n\t\t\t// \tallPts[ p ].x -= width;\r\n\t\t\t//\r\n\t\t\t// }\r\n\t\r\n\t\t\t//var extract = this.extractPoints( allPts, characterPts );\r\n\t\t\t//extract.contour = allPts;\r\n\t\r\n\t\t\t//extract.paths = fontPaths;\r\n\t\t\t//extract.offset = width;\r\n\t\r\n\t\t\treturn { paths: fontPaths, offset: width };\r\n\t\r\n\t\t},\r\n\t\r\n\t\r\n\t\r\n\t\r\n\t\textractGlyphPoints: function ( c, face, scale, offset, path ) {\r\n\t\r\n\t\t\tvar pts = [];\r\n\t\r\n\t\t\tvar i, i2, divisions,\r\n\t\t\t\toutline, action, length,\r\n\t\t\t\tscaleX, scaleY,\r\n\t\t\t\tx, y, cpx, cpy, cpx0, cpy0, cpx1, cpy1, cpx2, cpy2,\r\n\t\t\t\tlaste,\r\n\t\t\t\tglyph = face.glyphs[ c ] || face.glyphs[ '?' ];\r\n\t\r\n\t\t\tif ( ! glyph ) return;\r\n\t\r\n\t\t\tif ( glyph.o ) {\r\n\t\r\n\t\t\t\toutline = glyph._cachedOutline || ( glyph._cachedOutline = glyph.o.split( ' ' ) );\r\n\t\t\t\tlength = outline.length;\r\n\t\r\n\t\t\t\tscaleX = scale;\r\n\t\t\t\tscaleY = scale;\r\n\t\r\n\t\t\t\tfor ( i = 0; i < length; ) {\r\n\t\r\n\t\t\t\t\taction = outline[ i ++ ];\r\n\t\r\n\t\t\t\t\t//console.log( action );\r\n\t\r\n\t\t\t\t\tswitch ( action ) {\r\n\t\r\n\t\t\t\t\tcase 'm':\r\n\t\r\n\t\t\t\t\t\t// Move To\r\n\t\r\n\t\t\t\t\t\tx = outline[ i ++ ] * scaleX + offset;\r\n\t\t\t\t\t\ty = outline[ i ++ ] * scaleY;\r\n\t\r\n\t\t\t\t\t\tpath.moveTo( x, y );\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'l':\r\n\t\r\n\t\t\t\t\t\t// Line To\r\n\t\r\n\t\t\t\t\t\tx = outline[ i ++ ] * scaleX + offset;\r\n\t\t\t\t\t\ty = outline[ i ++ ] * scaleY;\r\n\t\t\t\t\t\tpath.lineTo( x, y );\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'q':\r\n\t\r\n\t\t\t\t\t\t// QuadraticCurveTo\r\n\t\r\n\t\t\t\t\t\tcpx  = outline[ i ++ ] * scaleX + offset;\r\n\t\t\t\t\t\tcpy  = outline[ i ++ ] * scaleY;\r\n\t\t\t\t\t\tcpx1 = outline[ i ++ ] * scaleX + offset;\r\n\t\t\t\t\t\tcpy1 = outline[ i ++ ] * scaleY;\r\n\t\r\n\t\t\t\t\t\tpath.quadraticCurveTo( cpx1, cpy1, cpx, cpy );\r\n\t\r\n\t\t\t\t\t\tlaste = pts[ pts.length - 1 ];\r\n\t\r\n\t\t\t\t\t\tif ( laste ) {\r\n\t\r\n\t\t\t\t\t\t\tcpx0 = laste.x;\r\n\t\t\t\t\t\t\tcpy0 = laste.y;\r\n\t\r\n\t\t\t\t\t\t\tfor ( i2 = 1, divisions = this.divisions; i2 <= divisions; i2 ++ ) {\r\n\t\r\n\t\t\t\t\t\t\t\tvar t = i2 / divisions;\r\n\t\t\t\t\t\t\t\tTHREE.Shape.Utils.b2( t, cpx0, cpx1, cpx );\r\n\t\t\t\t\t\t\t\tTHREE.Shape.Utils.b2( t, cpy0, cpy1, cpy );\r\n\t\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'b':\r\n\t\r\n\t\t\t\t\t\t// Cubic Bezier Curve\r\n\t\r\n\t\t\t\t\t\tcpx  = outline[ i ++ ] *  scaleX + offset;\r\n\t\t\t\t\t\tcpy  = outline[ i ++ ] *  scaleY;\r\n\t\t\t\t\t\tcpx1 = outline[ i ++ ] *  scaleX + offset;\r\n\t\t\t\t\t\tcpy1 = outline[ i ++ ] *  scaleY;\r\n\t\t\t\t\t\tcpx2 = outline[ i ++ ] *  scaleX + offset;\r\n\t\t\t\t\t\tcpy2 = outline[ i ++ ] *  scaleY;\r\n\t\r\n\t\t\t\t\t\tpath.bezierCurveTo( cpx1, cpy1, cpx2, cpy2, cpx, cpy );\r\n\t\r\n\t\t\t\t\t\tlaste = pts[ pts.length - 1 ];\r\n\t\r\n\t\t\t\t\t\tif ( laste ) {\r\n\t\r\n\t\t\t\t\t\t\tcpx0 = laste.x;\r\n\t\t\t\t\t\t\tcpy0 = laste.y;\r\n\t\r\n\t\t\t\t\t\t\tfor ( i2 = 1, divisions = this.divisions; i2 <= divisions; i2 ++ ) {\r\n\t\r\n\t\t\t\t\t\t\t\tvar t = i2 / divisions;\r\n\t\t\t\t\t\t\t\tTHREE.Shape.Utils.b3( t, cpx0, cpx1, cpx2, cpx );\r\n\t\t\t\t\t\t\t\tTHREE.Shape.Utils.b3( t, cpy0, cpy1, cpy2, cpy );\r\n\t\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\r\n\t\r\n\t\t\treturn { offset: glyph.ha * scale, path: path };\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t\r\n\tTHREE.FontUtils.generateShapes = function ( text, parameters ) {\r\n\t\r\n\t\t// Parameters\r\n\t\r\n\t\tparameters = parameters || {};\r\n\t\r\n\t\tvar size = parameters.size !== undefined ? parameters.size : 100;\r\n\t\tvar curveSegments = parameters.curveSegments !== undefined ? parameters.curveSegments : 4;\r\n\t\r\n\t\tvar font = parameters.font !== undefined ? parameters.font : 'helvetiker';\r\n\t\tvar weight = parameters.weight !== undefined ? parameters.weight : 'normal';\r\n\t\tvar style = parameters.style !== undefined ? parameters.style : 'normal';\r\n\t\r\n\t\tTHREE.FontUtils.size = size;\r\n\t\tTHREE.FontUtils.divisions = curveSegments;\r\n\t\r\n\t\tTHREE.FontUtils.face = font;\r\n\t\tTHREE.FontUtils.weight = weight;\r\n\t\tTHREE.FontUtils.style = style;\r\n\t\r\n\t\t// Get a Font data json object\r\n\t\r\n\t\tvar data = THREE.FontUtils.drawText( text );\r\n\t\r\n\t\tvar paths = data.paths;\r\n\t\tvar shapes = [];\r\n\t\r\n\t\tfor ( var p = 0, pl = paths.length; p < pl; p ++ ) {\r\n\t\r\n\t\t\tArray.prototype.push.apply( shapes, paths[ p ].toShapes() );\r\n\t\r\n\t\t}\r\n\t\r\n\t\treturn shapes;\r\n\t\r\n\t};\r\n\t\r\n\t\r\n\t/**\r\n\t * This code is a quick port of code written in C++ which was submitted to\r\n\t * flipcode.com by John W. Ratcliff  // July 22, 2000\r\n\t * See original code and more information here:\r\n\t * http://www.flipcode.com/archives/Efficient_Polygon_Triangulation.shtml\r\n\t *\r\n\t * ported to actionscript by Zevan Rosser\r\n\t * www.actionsnippet.com\r\n\t *\r\n\t * ported to javascript by Joshua Koo\r\n\t * http://www.lab4games.net/zz85/blog\r\n\t *\r\n\t */\r\n\t\r\n\t\r\n\t( function ( namespace ) {\r\n\t\r\n\t\tvar EPSILON = 0.0000000001;\r\n\t\r\n\t\t// takes in an contour array and returns\r\n\t\r\n\t\tvar process = function ( contour, indices ) {\r\n\t\r\n\t\t\tvar n = contour.length;\r\n\t\r\n\t\t\tif ( n < 3 ) return null;\r\n\t\r\n\t\t\tvar result = [],\r\n\t\t\t\tverts = [],\r\n\t\t\t\tvertIndices = [];\r\n\t\r\n\t\t\t/* we want a counter-clockwise polygon in verts */\r\n\t\r\n\t\t\tvar u, v, w;\r\n\t\r\n\t\t\tif ( area( contour ) > 0.0 ) {\r\n\t\r\n\t\t\t\tfor ( v = 0; v < n; v ++ ) verts[ v ] = v;\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tfor ( v = 0; v < n; v ++ ) verts[ v ] = ( n - 1 ) - v;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar nv = n;\r\n\t\r\n\t\t\t/*  remove nv - 2 vertices, creating 1 triangle every time */\r\n\t\r\n\t\t\tvar count = 2 * nv;   /* error detection */\r\n\t\r\n\t\t\tfor ( v = nv - 1; nv > 2; ) {\r\n\t\r\n\t\t\t\t/* if we loop, it is probably a non-simple polygon */\r\n\t\r\n\t\t\t\tif ( ( count -- ) <= 0 ) {\r\n\t\r\n\t\t\t\t\t//** Triangulate: ERROR - probable bad polygon!\r\n\t\r\n\t\t\t\t\t//throw ( \"Warning, unable to triangulate polygon!\" );\r\n\t\t\t\t\t//return null;\r\n\t\t\t\t\t// Sometimes warning is fine, especially polygons are triangulated in reverse.\r\n\t\t\t\t\tconsole.warn( 'THREE.FontUtils: Warning, unable to triangulate polygon! in Triangulate.process()' );\r\n\t\r\n\t\t\t\t\tif ( indices ) return vertIndices;\r\n\t\t\t\t\treturn result;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t/* three consecutive vertices in current polygon, <u,v,w> */\r\n\t\r\n\t\t\t\tu = v; \t \tif ( nv <= u ) u = 0;     /* previous */\r\n\t\t\t\tv = u + 1;  if ( nv <= v ) v = 0;     /* new v    */\r\n\t\t\t\tw = v + 1;  if ( nv <= w ) w = 0;     /* next     */\r\n\t\r\n\t\t\t\tif ( snip( contour, u, v, w, nv, verts ) ) {\r\n\t\r\n\t\t\t\t\tvar a, b, c, s, t;\r\n\t\r\n\t\t\t\t\t/* true names of the vertices */\r\n\t\r\n\t\t\t\t\ta = verts[ u ];\r\n\t\t\t\t\tb = verts[ v ];\r\n\t\t\t\t\tc = verts[ w ];\r\n\t\r\n\t\t\t\t\t/* output Triangle */\r\n\t\r\n\t\t\t\t\tresult.push( [ contour[ a ],\r\n\t\t\t\t\t\tcontour[ b ],\r\n\t\t\t\t\t\tcontour[ c ] ] );\r\n\t\r\n\t\r\n\t\t\t\t\tvertIndices.push( [ verts[ u ], verts[ v ], verts[ w ] ] );\r\n\t\r\n\t\t\t\t\t/* remove v from the remaining polygon */\r\n\t\r\n\t\t\t\t\tfor ( s = v, t = v + 1; t < nv; s ++, t ++ ) {\r\n\t\r\n\t\t\t\t\t\tverts[ s ] = verts[ t ];\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tnv --;\r\n\t\r\n\t\t\t\t\t/* reset error detection counter */\r\n\t\r\n\t\t\t\t\tcount = 2 * nv;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( indices ) return vertIndices;\r\n\t\t\treturn result;\r\n\t\r\n\t\t};\r\n\t\r\n\t\t// calculate area of the contour polygon\r\n\t\r\n\t\tvar area = function ( contour ) {\r\n\t\r\n\t\t\tvar n = contour.length;\r\n\t\t\tvar a = 0.0;\r\n\t\r\n\t\t\tfor ( var p = n - 1, q = 0; q < n; p = q ++ ) {\r\n\t\r\n\t\t\t\ta += contour[ p ].x * contour[ q ].y - contour[ q ].x * contour[ p ].y;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn a * 0.5;\r\n\t\r\n\t\t};\r\n\t\r\n\t\tvar snip = function ( contour, u, v, w, n, verts ) {\r\n\t\r\n\t\t\tvar p;\r\n\t\t\tvar ax, ay, bx, by;\r\n\t\t\tvar cx, cy, px, py;\r\n\t\r\n\t\t\tax = contour[ verts[ u ] ].x;\r\n\t\t\tay = contour[ verts[ u ] ].y;\r\n\t\r\n\t\t\tbx = contour[ verts[ v ] ].x;\r\n\t\t\tby = contour[ verts[ v ] ].y;\r\n\t\r\n\t\t\tcx = contour[ verts[ w ] ].x;\r\n\t\t\tcy = contour[ verts[ w ] ].y;\r\n\t\r\n\t\t\tif ( EPSILON > ( ( ( bx - ax ) * ( cy - ay ) ) - ( ( by - ay ) * ( cx - ax ) ) ) ) return false;\r\n\t\r\n\t\t\tvar aX, aY, bX, bY, cX, cY;\r\n\t\t\tvar apx, apy, bpx, bpy, cpx, cpy;\r\n\t\t\tvar cCROSSap, bCROSScp, aCROSSbp;\r\n\t\r\n\t\t\taX = cx - bx;  aY = cy - by;\r\n\t\t\tbX = ax - cx;  bY = ay - cy;\r\n\t\t\tcX = bx - ax;  cY = by - ay;\r\n\t\r\n\t\t\tfor ( p = 0; p < n; p ++ ) {\r\n\t\r\n\t\t\t\tpx = contour[ verts[ p ] ].x;\r\n\t\t\t\tpy = contour[ verts[ p ] ].y;\r\n\t\r\n\t\t\t\tif ( ( ( px === ax ) && ( py === ay ) ) ||\r\n\t\t\t\t\t ( ( px === bx ) && ( py === by ) ) ||\r\n\t\t\t\t\t ( ( px === cx ) && ( py === cy ) ) )\tcontinue;\r\n\t\r\n\t\t\t\tapx = px - ax;  apy = py - ay;\r\n\t\t\t\tbpx = px - bx;  bpy = py - by;\r\n\t\t\t\tcpx = px - cx;  cpy = py - cy;\r\n\t\r\n\t\t\t\t// see if p is inside triangle abc\r\n\t\r\n\t\t\t\taCROSSbp = aX * bpy - aY * bpx;\r\n\t\t\t\tcCROSSap = cX * apy - cY * apx;\r\n\t\t\t\tbCROSScp = bX * cpy - bY * cpx;\r\n\t\r\n\t\t\t\tif ( ( aCROSSbp >= - EPSILON ) && ( bCROSScp >= - EPSILON ) && ( cCROSSap >= - EPSILON ) ) return false;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn true;\r\n\t\r\n\t\t};\r\n\t\r\n\t\r\n\t\tnamespace.Triangulate = process;\r\n\t\tnamespace.Triangulate.area = area;\r\n\t\r\n\t\treturn namespace;\r\n\t\r\n\t} )( THREE.FontUtils );\r\n\t\r\n\t// To use the typeface.js face files, hook up the API\r\n\t\r\n\tTHREE.typeface_js = { faces: THREE.FontUtils.faces, loadFace: THREE.FontUtils.loadFace };\r\n\tif ( typeof self !== 'undefined' ) self._typeface_js = THREE.typeface_js;\r\n\t\r\n\t// File:src/extras/audio/Audio.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.Audio = function ( listener ) {\r\n\t\r\n\t\tTHREE.Object3D.call( this );\r\n\t\r\n\t\tthis.type = 'Audio';\r\n\t\r\n\t\tthis.context = listener.context;\r\n\t\tthis.source = this.context.createBufferSource();\r\n\t\tthis.source.onended = this.onEnded.bind( this );\r\n\t\r\n\t\tthis.gain = this.context.createGain();\r\n\t\tthis.gain.connect( this.context.destination );\r\n\t\r\n\t\tthis.panner = this.context.createPanner();\r\n\t\tthis.panner.connect( this.gain );\r\n\t\r\n\t\tthis.autoplay = false;\r\n\t\r\n\t\tthis.startTime = 0;\r\n\t\tthis.playbackRate = 1;\r\n\t\tthis.isPlaying = false;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Audio.prototype = Object.create( THREE.Object3D.prototype );\r\n\tTHREE.Audio.prototype.constructor = THREE.Audio;\r\n\t\r\n\tTHREE.Audio.prototype.load = function ( file ) {\r\n\t\r\n\t\tvar scope = this;\r\n\t\r\n\t\tvar request = new XMLHttpRequest();\r\n\t\trequest.open( 'GET', file, true );\r\n\t\trequest.responseType = 'arraybuffer';\r\n\t\trequest.onload = function ( e ) {\r\n\t\r\n\t\t\tscope.context.decodeAudioData( this.response, function ( buffer ) {\r\n\t\r\n\t\t\t\tscope.source.buffer = buffer;\r\n\t\r\n\t\t\t\tif ( scope.autoplay ) scope.play();\r\n\t\r\n\t\t\t} );\r\n\t\r\n\t\t};\r\n\t\trequest.send();\r\n\t\r\n\t\treturn this;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Audio.prototype.play = function () {\r\n\t\r\n\t\tif ( this.isPlaying === true ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.Audio: Audio is already playing.' );\r\n\t\t\treturn;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tvar source = this.context.createBufferSource();\r\n\t\r\n\t\tsource.buffer = this.source.buffer;\r\n\t\tsource.loop = this.source.loop;\r\n\t\tsource.onended = this.source.onended;\r\n\t\tsource.start( 0, this.startTime );\r\n\t\tsource.playbackRate.value = this.playbackRate;\r\n\t\r\n\t\tthis.isPlaying = true;\r\n\t\r\n\t\tthis.source = source;\r\n\t\r\n\t\tthis.connect();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Audio.prototype.pause = function () {\r\n\t\r\n\t\tthis.source.stop();\r\n\t\tthis.startTime = this.context.currentTime;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Audio.prototype.stop = function () {\r\n\t\r\n\t\tthis.source.stop();\r\n\t\tthis.startTime = 0;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Audio.prototype.connect = function () {\r\n\t\r\n\t\tif ( this.filter !== undefined ) {\r\n\t\r\n\t\t\tthis.source.connect( this.filter );\r\n\t\t\tthis.filter.connect( this.panner );\r\n\t\r\n\t\t} else {\r\n\t\r\n\t\t\tthis.source.connect( this.panner );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Audio.prototype.disconnect = function () {\r\n\t\r\n\t\tif ( this.filter !== undefined ) {\r\n\t\r\n\t\t\tthis.source.disconnect( this.filter );\r\n\t\t\tthis.filter.disconnect( this.panner );\r\n\t\r\n\t\t} else {\r\n\t\r\n\t\t\tthis.source.disconnect( this.panner );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Audio.prototype.setFilter = function ( value ) {\r\n\t\r\n\t\tif ( this.isPlaying === true ) {\r\n\t\r\n\t\t\tthis.disconnect();\r\n\t\t\tthis.filter = value;\r\n\t\t\tthis.connect();\r\n\t\r\n\t\t} else {\r\n\t\r\n\t\t\tthis.filter = value;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Audio.prototype.getFilter = function () {\r\n\t\r\n\t\treturn this.filter;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Audio.prototype.setPlaybackRate = function ( value ) {\r\n\t\r\n\t\tthis.playbackRate = value;\r\n\t\r\n\t\tif ( this.isPlaying === true ) {\r\n\t\r\n\t\t\tthis.source.playbackRate.value = this.playbackRate;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Audio.prototype.getPlaybackRate = function () {\r\n\t\r\n\t\treturn this.playbackRate;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Audio.prototype.onEnded = function() {\r\n\t\r\n\t\tthis.isPlaying = false;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Audio.prototype.setLoop = function ( value ) {\r\n\t\r\n\t\tthis.source.loop = value;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Audio.prototype.getLoop = function () {\r\n\t\r\n\t\treturn this.source.loop;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Audio.prototype.setRefDistance = function ( value ) {\r\n\t\r\n\t\tthis.panner.refDistance = value;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Audio.prototype.getRefDistance = function () {\r\n\t\r\n\t\treturn this.panner.refDistance;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Audio.prototype.setRolloffFactor = function ( value ) {\r\n\t\r\n\t\tthis.panner.rolloffFactor = value;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Audio.prototype.getRolloffFactor = function () {\r\n\t\r\n\t\treturn this.panner.rolloffFactor;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Audio.prototype.setVolume = function ( value ) {\r\n\t\r\n\t\tthis.gain.gain.value = value;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Audio.prototype.getVolume = function () {\r\n\t\r\n\t\treturn this.gain.gain.value;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Audio.prototype.updateMatrixWorld = ( function () {\r\n\t\r\n\t\tvar position = new THREE.Vector3();\r\n\t\r\n\t\treturn function updateMatrixWorld( force ) {\r\n\t\r\n\t\t\tTHREE.Object3D.prototype.updateMatrixWorld.call( this, force );\r\n\t\r\n\t\t\tposition.setFromMatrixPosition( this.matrixWorld );\r\n\t\r\n\t\t\tthis.panner.setPosition( position.x, position.y, position.z );\r\n\t\r\n\t\t};\r\n\t\r\n\t} )();\r\n\t\r\n\t// File:src/extras/audio/AudioListener.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.AudioListener = function () {\r\n\t\r\n\t\tTHREE.Object3D.call( this );\r\n\t\r\n\t\tthis.type = 'AudioListener';\r\n\t\r\n\t\tthis.context = new ( window.AudioContext || window.webkitAudioContext )();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.AudioListener.prototype = Object.create( THREE.Object3D.prototype );\r\n\tTHREE.AudioListener.prototype.constructor = THREE.AudioListener;\r\n\t\r\n\tTHREE.AudioListener.prototype.updateMatrixWorld = ( function () {\r\n\t\r\n\t\tvar position = new THREE.Vector3();\r\n\t\tvar quaternion = new THREE.Quaternion();\r\n\t\tvar scale = new THREE.Vector3();\r\n\t\r\n\t\tvar orientation = new THREE.Vector3();\r\n\t\r\n\t\treturn function updateMatrixWorld( force ) {\r\n\t\r\n\t\t\tTHREE.Object3D.prototype.updateMatrixWorld.call( this, force );\r\n\t\r\n\t\t\tvar listener = this.context.listener;\r\n\t\t\tvar up = this.up;\r\n\t\r\n\t\t\tthis.matrixWorld.decompose( position, quaternion, scale );\r\n\t\r\n\t\t\torientation.set( 0, 0, - 1 ).applyQuaternion( quaternion );\r\n\t\r\n\t\t\tlistener.setPosition( position.x, position.y, position.z );\r\n\t\t\tlistener.setOrientation( orientation.x, orientation.y, orientation.z, up.x, up.y, up.z );\r\n\t\r\n\t\t};\r\n\t\r\n\t} )();\r\n\t\r\n\t// File:src/extras/core/Curve.js\r\n\t\r\n\t/**\r\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\r\n\t * Extensible curve object\r\n\t *\r\n\t * Some common of Curve methods\r\n\t * .getPoint(t), getTangent(t)\r\n\t * .getPointAt(u), getTagentAt(u)\r\n\t * .getPoints(), .getSpacedPoints()\r\n\t * .getLength()\r\n\t * .updateArcLengths()\r\n\t *\r\n\t * This following classes subclasses THREE.Curve:\r\n\t *\r\n\t * -- 2d classes --\r\n\t * THREE.LineCurve\r\n\t * THREE.QuadraticBezierCurve\r\n\t * THREE.CubicBezierCurve\r\n\t * THREE.SplineCurve\r\n\t * THREE.ArcCurve\r\n\t * THREE.EllipseCurve\r\n\t *\r\n\t * -- 3d classes --\r\n\t * THREE.LineCurve3\r\n\t * THREE.QuadraticBezierCurve3\r\n\t * THREE.CubicBezierCurve3\r\n\t * THREE.SplineCurve3\r\n\t * THREE.ClosedSplineCurve3\r\n\t *\r\n\t * A series of curves can be represented as a THREE.CurvePath\r\n\t *\r\n\t **/\r\n\t\r\n\t/**************************************************************\r\n\t *\tAbstract Curve base class\r\n\t **************************************************************/\r\n\t\r\n\tTHREE.Curve = function () {\r\n\t\r\n\t};\r\n\t\r\n\t// Virtual base class method to overwrite and implement in subclasses\r\n\t//\t- t [0 .. 1]\r\n\t\r\n\tTHREE.Curve.prototype.getPoint = function ( t ) {\r\n\t\r\n\t\tconsole.warn( \"THREE.Curve: Warning, getPoint() not implemented!\" );\r\n\t\treturn null;\r\n\t\r\n\t};\r\n\t\r\n\t// Get point at relative position in curve according to arc length\r\n\t// - u [0 .. 1]\r\n\t\r\n\tTHREE.Curve.prototype.getPointAt = function ( u ) {\r\n\t\r\n\t\tvar t = this.getUtoTmapping( u );\r\n\t\treturn this.getPoint( t );\r\n\t\r\n\t};\r\n\t\r\n\t// Get sequence of points using getPoint( t )\r\n\t\r\n\tTHREE.Curve.prototype.getPoints = function ( divisions ) {\r\n\t\r\n\t\tif ( ! divisions ) divisions = 5;\r\n\t\r\n\t\tvar d, pts = [];\r\n\t\r\n\t\tfor ( d = 0; d <= divisions; d ++ ) {\r\n\t\r\n\t\t\tpts.push( this.getPoint( d / divisions ) );\r\n\t\r\n\t\t}\r\n\t\r\n\t\treturn pts;\r\n\t\r\n\t};\r\n\t\r\n\t// Get sequence of points using getPointAt( u )\r\n\t\r\n\tTHREE.Curve.prototype.getSpacedPoints = function ( divisions ) {\r\n\t\r\n\t\tif ( ! divisions ) divisions = 5;\r\n\t\r\n\t\tvar d, pts = [];\r\n\t\r\n\t\tfor ( d = 0; d <= divisions; d ++ ) {\r\n\t\r\n\t\t\tpts.push( this.getPointAt( d / divisions ) );\r\n\t\r\n\t\t}\r\n\t\r\n\t\treturn pts;\r\n\t\r\n\t};\r\n\t\r\n\t// Get total curve arc length\r\n\t\r\n\tTHREE.Curve.prototype.getLength = function () {\r\n\t\r\n\t\tvar lengths = this.getLengths();\r\n\t\treturn lengths[ lengths.length - 1 ];\r\n\t\r\n\t};\r\n\t\r\n\t// Get list of cumulative segment lengths\r\n\t\r\n\tTHREE.Curve.prototype.getLengths = function ( divisions ) {\r\n\t\r\n\t\tif ( ! divisions ) divisions = ( this.__arcLengthDivisions ) ? ( this.__arcLengthDivisions ) : 200;\r\n\t\r\n\t\tif ( this.cacheArcLengths\r\n\t\t\t&& ( this.cacheArcLengths.length === divisions + 1 )\r\n\t\t\t&& ! this.needsUpdate ) {\r\n\t\r\n\t\t\t//console.log( \"cached\", this.cacheArcLengths );\r\n\t\t\treturn this.cacheArcLengths;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.needsUpdate = false;\r\n\t\r\n\t\tvar cache = [];\r\n\t\tvar current, last = this.getPoint( 0 );\r\n\t\tvar p, sum = 0;\r\n\t\r\n\t\tcache.push( 0 );\r\n\t\r\n\t\tfor ( p = 1; p <= divisions; p ++ ) {\r\n\t\r\n\t\t\tcurrent = this.getPoint ( p / divisions );\r\n\t\t\tsum += current.distanceTo( last );\r\n\t\t\tcache.push( sum );\r\n\t\t\tlast = current;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.cacheArcLengths = cache;\r\n\t\r\n\t\treturn cache; // { sums: cache, sum:sum }; Sum is in the last element.\r\n\t\r\n\t};\r\n\t\r\n\t\r\n\tTHREE.Curve.prototype.updateArcLengths = function() {\r\n\t\r\n\t\tthis.needsUpdate = true;\r\n\t\tthis.getLengths();\r\n\t\r\n\t};\r\n\t\r\n\t// Given u ( 0 .. 1 ), get a t to find p. This gives you points which are equidistant\r\n\t\r\n\tTHREE.Curve.prototype.getUtoTmapping = function ( u, distance ) {\r\n\t\r\n\t\tvar arcLengths = this.getLengths();\r\n\t\r\n\t\tvar i = 0, il = arcLengths.length;\r\n\t\r\n\t\tvar targetArcLength; // The targeted u distance value to get\r\n\t\r\n\t\tif ( distance ) {\r\n\t\r\n\t\t\ttargetArcLength = distance;\r\n\t\r\n\t\t} else {\r\n\t\r\n\t\t\ttargetArcLength = u * arcLengths[ il - 1 ];\r\n\t\r\n\t\t}\r\n\t\r\n\t\t//var time = Date.now();\r\n\t\r\n\t\t// binary search for the index with largest value smaller than target u distance\r\n\t\r\n\t\tvar low = 0, high = il - 1, comparison;\r\n\t\r\n\t\twhile ( low <= high ) {\r\n\t\r\n\t\t\ti = Math.floor( low + ( high - low ) / 2 ); // less likely to overflow, though probably not issue here, JS doesn't really have integers, all numbers are floats\r\n\t\r\n\t\t\tcomparison = arcLengths[ i ] - targetArcLength;\r\n\t\r\n\t\t\tif ( comparison < 0 ) {\r\n\t\r\n\t\t\t\tlow = i + 1;\r\n\t\r\n\t\t\t} else if ( comparison > 0 ) {\r\n\t\r\n\t\t\t\thigh = i - 1;\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\thigh = i;\r\n\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t// DONE\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\ti = high;\r\n\t\r\n\t\t//console.log('b' , i, low, high, Date.now()- time);\r\n\t\r\n\t\tif ( arcLengths[ i ] === targetArcLength ) {\r\n\t\r\n\t\t\tvar t = i / ( il - 1 );\r\n\t\t\treturn t;\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// we could get finer grain at lengths, or use simple interpolation between two points\r\n\t\r\n\t\tvar lengthBefore = arcLengths[ i ];\r\n\t\tvar lengthAfter = arcLengths[ i + 1 ];\r\n\t\r\n\t\tvar segmentLength = lengthAfter - lengthBefore;\r\n\t\r\n\t\t// determine where we are between the 'before' and 'after' points\r\n\t\r\n\t\tvar segmentFraction = ( targetArcLength - lengthBefore ) / segmentLength;\r\n\t\r\n\t\t// add that fractional amount to t\r\n\t\r\n\t\tvar t = ( i + segmentFraction ) / ( il - 1 );\r\n\t\r\n\t\treturn t;\r\n\t\r\n\t};\r\n\t\r\n\t// Returns a unit vector tangent at t\r\n\t// In case any sub curve does not implement its tangent derivation,\r\n\t// 2 points a small delta apart will be used to find its gradient\r\n\t// which seems to give a reasonable approximation\r\n\t\r\n\tTHREE.Curve.prototype.getTangent = function( t ) {\r\n\t\r\n\t\tvar delta = 0.0001;\r\n\t\tvar t1 = t - delta;\r\n\t\tvar t2 = t + delta;\r\n\t\r\n\t\t// Capping in case of danger\r\n\t\r\n\t\tif ( t1 < 0 ) t1 = 0;\r\n\t\tif ( t2 > 1 ) t2 = 1;\r\n\t\r\n\t\tvar pt1 = this.getPoint( t1 );\r\n\t\tvar pt2 = this.getPoint( t2 );\r\n\t\r\n\t\tvar vec = pt2.clone().sub( pt1 );\r\n\t\treturn vec.normalize();\r\n\t\r\n\t};\r\n\t\r\n\t\r\n\tTHREE.Curve.prototype.getTangentAt = function ( u ) {\r\n\t\r\n\t\tvar t = this.getUtoTmapping( u );\r\n\t\treturn this.getTangent( t );\r\n\t\r\n\t};\r\n\t\r\n\t\r\n\t\r\n\t\r\n\t\r\n\t/**************************************************************\r\n\t *\tUtils\r\n\t **************************************************************/\r\n\t\r\n\tTHREE.Curve.Utils = {\r\n\t\r\n\t\ttangentQuadraticBezier: function ( t, p0, p1, p2 ) {\r\n\t\r\n\t\t\treturn 2 * ( 1 - t ) * ( p1 - p0 ) + 2 * t * ( p2 - p1 );\r\n\t\r\n\t\t},\r\n\t\r\n\t\t// Puay Bing, thanks for helping with this derivative!\r\n\t\r\n\t\ttangentCubicBezier: function ( t, p0, p1, p2, p3 ) {\r\n\t\r\n\t\t\treturn - 3 * p0 * ( 1 - t ) * ( 1 - t )  +\r\n\t\t\t\t3 * p1 * ( 1 - t ) * ( 1 - t ) - 6 * t * p1 * ( 1 - t ) +\r\n\t\t\t\t6 * t *  p2 * ( 1 - t ) - 3 * t * t * p2 +\r\n\t\t\t\t3 * t * t * p3;\r\n\t\r\n\t\t},\r\n\t\r\n\t\ttangentSpline: function ( t, p0, p1, p2, p3 ) {\r\n\t\r\n\t\t\t// To check if my formulas are correct\r\n\t\r\n\t\t\tvar h00 = 6 * t * t - 6 * t; \t// derived from 2t^3 − 3t^2 + 1\r\n\t\t\tvar h10 = 3 * t * t - 4 * t + 1; // t^3 − 2t^2 + t\r\n\t\t\tvar h01 = - 6 * t * t + 6 * t; \t// − 2t3 + 3t2\r\n\t\t\tvar h11 = 3 * t * t - 2 * t;\t// t3 − t2\r\n\t\r\n\t\t\treturn h00 + h10 + h01 + h11;\r\n\t\r\n\t\t},\r\n\t\r\n\t\t// Catmull-Rom\r\n\t\r\n\t\tinterpolate: function( p0, p1, p2, p3, t ) {\r\n\t\r\n\t\t\tvar v0 = ( p2 - p0 ) * 0.5;\r\n\t\t\tvar v1 = ( p3 - p1 ) * 0.5;\r\n\t\t\tvar t2 = t * t;\r\n\t\t\tvar t3 = t * t2;\r\n\t\t\treturn ( 2 * p1 - 2 * p2 + v0 + v1 ) * t3 + ( - 3 * p1 + 3 * p2 - 2 * v0 - v1 ) * t2 + v0 * t + p1;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t\r\n\t// TODO: Transformation for Curves?\r\n\t\r\n\t/**************************************************************\r\n\t *\t3D Curves\r\n\t **************************************************************/\r\n\t\r\n\t// A Factory method for creating new curve subclasses\r\n\t\r\n\tTHREE.Curve.create = function ( constructor, getPointFunc ) {\r\n\t\r\n\t\tconstructor.prototype = Object.create( THREE.Curve.prototype );\r\n\t\tconstructor.prototype.constructor = constructor;\r\n\t\tconstructor.prototype.getPoint = getPointFunc;\r\n\t\r\n\t\treturn constructor;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/core/CurvePath.js\r\n\t\r\n\t/**\r\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\r\n\t *\r\n\t **/\r\n\t\r\n\t/**************************************************************\r\n\t *\tCurved Path - a curve path is simply a array of connected\r\n\t *  curves, but retains the api of a curve\r\n\t **************************************************************/\r\n\t\r\n\tTHREE.CurvePath = function () {\r\n\t\r\n\t\tthis.curves = [];\r\n\t\tthis.bends = [];\r\n\t\r\n\t\tthis.autoClose = false; // Automatically closes the path\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.CurvePath.prototype = Object.create( THREE.Curve.prototype );\r\n\tTHREE.CurvePath.prototype.constructor = THREE.CurvePath;\r\n\t\r\n\tTHREE.CurvePath.prototype.add = function ( curve ) {\r\n\t\r\n\t\tthis.curves.push( curve );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.CurvePath.prototype.checkConnection = function() {\r\n\t\t// TODO\r\n\t\t// If the ending of curve is not connected to the starting\r\n\t\t// or the next curve, then, this is not a real path\r\n\t};\r\n\t\r\n\tTHREE.CurvePath.prototype.closePath = function() {\r\n\t\r\n\t\t// TODO Test\r\n\t\t// and verify for vector3 (needs to implement equals)\r\n\t\t// Add a line curve if start and end of lines are not connected\r\n\t\tvar startPoint = this.curves[ 0 ].getPoint( 0 );\r\n\t\tvar endPoint = this.curves[ this.curves.length - 1 ].getPoint( 1 );\r\n\t\r\n\t\tif ( ! startPoint.equals( endPoint ) ) {\r\n\t\r\n\t\t\tthis.curves.push( new THREE.LineCurve( endPoint, startPoint ) );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// To get accurate point with reference to\r\n\t// entire path distance at time t,\r\n\t// following has to be done:\r\n\t\r\n\t// 1. Length of each sub path have to be known\r\n\t// 2. Locate and identify type of curve\r\n\t// 3. Get t for the curve\r\n\t// 4. Return curve.getPointAt(t')\r\n\t\r\n\tTHREE.CurvePath.prototype.getPoint = function( t ) {\r\n\t\r\n\t\tvar d = t * this.getLength();\r\n\t\tvar curveLengths = this.getCurveLengths();\r\n\t\tvar i = 0, diff, curve;\r\n\t\r\n\t\t// To think about boundaries points.\r\n\t\r\n\t\twhile ( i < curveLengths.length ) {\r\n\t\r\n\t\t\tif ( curveLengths[ i ] >= d ) {\r\n\t\r\n\t\t\t\tdiff = curveLengths[ i ] - d;\r\n\t\t\t\tcurve = this.curves[ i ];\r\n\t\r\n\t\t\t\tvar u = 1 - diff / curve.getLength();\r\n\t\r\n\t\t\t\treturn curve.getPointAt( u );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\ti ++;\r\n\t\r\n\t\t}\r\n\t\r\n\t\treturn null;\r\n\t\r\n\t\t// loop where sum != 0, sum > d , sum+1 <d\r\n\t\r\n\t};\r\n\t\r\n\t/*\r\n\tTHREE.CurvePath.prototype.getTangent = function( t ) {\r\n\t};*/\r\n\t\r\n\t\r\n\t// We cannot use the default THREE.Curve getPoint() with getLength() because in\r\n\t// THREE.Curve, getLength() depends on getPoint() but in THREE.CurvePath\r\n\t// getPoint() depends on getLength\r\n\t\r\n\tTHREE.CurvePath.prototype.getLength = function() {\r\n\t\r\n\t\tvar lens = this.getCurveLengths();\r\n\t\treturn lens[ lens.length - 1 ];\r\n\t\r\n\t};\r\n\t\r\n\t// Compute lengths and cache them\r\n\t// We cannot overwrite getLengths() because UtoT mapping uses it.\r\n\t\r\n\tTHREE.CurvePath.prototype.getCurveLengths = function() {\r\n\t\r\n\t\t// We use cache values if curves and cache array are same length\r\n\t\r\n\t\tif ( this.cacheLengths && this.cacheLengths.length === this.curves.length ) {\r\n\t\r\n\t\t\treturn this.cacheLengths;\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// Get length of sub-curve\r\n\t\t// Push sums into cached array\r\n\t\r\n\t\tvar lengths = [], sums = 0;\r\n\t\tvar i, il = this.curves.length;\r\n\t\r\n\t\tfor ( i = 0; i < il; i ++ ) {\r\n\t\r\n\t\t\tsums += this.curves[ i ].getLength();\r\n\t\t\tlengths.push( sums );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.cacheLengths = lengths;\r\n\t\r\n\t\treturn lengths;\r\n\t\r\n\t};\r\n\t\r\n\t\r\n\t\r\n\t// Returns min and max coordinates\r\n\t\r\n\tTHREE.CurvePath.prototype.getBoundingBox = function () {\r\n\t\r\n\t\tvar points = this.getPoints();\r\n\t\r\n\t\tvar maxX, maxY, maxZ;\r\n\t\tvar minX, minY, minZ;\r\n\t\r\n\t\tmaxX = maxY = Number.NEGATIVE_INFINITY;\r\n\t\tminX = minY = Number.POSITIVE_INFINITY;\r\n\t\r\n\t\tvar p, i, il, sum;\r\n\t\r\n\t\tvar v3 = points[ 0 ] instanceof THREE.Vector3;\r\n\t\r\n\t\tsum = v3 ? new THREE.Vector3() : new THREE.Vector2();\r\n\t\r\n\t\tfor ( i = 0, il = points.length; i < il; i ++ ) {\r\n\t\r\n\t\t\tp = points[ i ];\r\n\t\r\n\t\t\tif ( p.x > maxX ) maxX = p.x;\r\n\t\t\telse if ( p.x < minX ) minX = p.x;\r\n\t\r\n\t\t\tif ( p.y > maxY ) maxY = p.y;\r\n\t\t\telse if ( p.y < minY ) minY = p.y;\r\n\t\r\n\t\t\tif ( v3 ) {\r\n\t\r\n\t\t\t\tif ( p.z > maxZ ) maxZ = p.z;\r\n\t\t\t\telse if ( p.z < minZ ) minZ = p.z;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tsum.add( p );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tvar ret = {\r\n\t\r\n\t\t\tminX: minX,\r\n\t\t\tminY: minY,\r\n\t\t\tmaxX: maxX,\r\n\t\t\tmaxY: maxY\r\n\t\r\n\t\t};\r\n\t\r\n\t\tif ( v3 ) {\r\n\t\r\n\t\t\tret.maxZ = maxZ;\r\n\t\t\tret.minZ = minZ;\r\n\t\r\n\t\t}\r\n\t\r\n\t\treturn ret;\r\n\t\r\n\t};\r\n\t\r\n\t/**************************************************************\r\n\t *\tCreate Geometries Helpers\r\n\t **************************************************************/\r\n\t\r\n\t/// Generate geometry from path points (for Line or Points objects)\r\n\t\r\n\tTHREE.CurvePath.prototype.createPointsGeometry = function( divisions ) {\r\n\t\r\n\t\tvar pts = this.getPoints( divisions, true );\r\n\t\treturn this.createGeometry( pts );\r\n\t\r\n\t};\r\n\t\r\n\t// Generate geometry from equidistant sampling along the path\r\n\t\r\n\tTHREE.CurvePath.prototype.createSpacedPointsGeometry = function( divisions ) {\r\n\t\r\n\t\tvar pts = this.getSpacedPoints( divisions, true );\r\n\t\treturn this.createGeometry( pts );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.CurvePath.prototype.createGeometry = function( points ) {\r\n\t\r\n\t\tvar geometry = new THREE.Geometry();\r\n\t\r\n\t\tfor ( var i = 0; i < points.length; i ++ ) {\r\n\t\r\n\t\t\tgeometry.vertices.push( new THREE.Vector3( points[ i ].x, points[ i ].y, points[ i ].z || 0 ) );\r\n\t\r\n\t\t}\r\n\t\r\n\t\treturn geometry;\r\n\t\r\n\t};\r\n\t\r\n\t\r\n\t/**************************************************************\r\n\t *\tBend / Wrap Helper Methods\r\n\t **************************************************************/\r\n\t\r\n\t// Wrap path / Bend modifiers?\r\n\t\r\n\tTHREE.CurvePath.prototype.addWrapPath = function ( bendpath ) {\r\n\t\r\n\t\tthis.bends.push( bendpath );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.CurvePath.prototype.getTransformedPoints = function( segments, bends ) {\r\n\t\r\n\t\tvar oldPts = this.getPoints( segments ); // getPoints getSpacedPoints\r\n\t\tvar i, il;\r\n\t\r\n\t\tif ( ! bends ) {\r\n\t\r\n\t\t\tbends = this.bends;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfor ( i = 0, il = bends.length; i < il; i ++ ) {\r\n\t\r\n\t\t\toldPts = this.getWrapPoints( oldPts, bends[ i ] );\r\n\t\r\n\t\t}\r\n\t\r\n\t\treturn oldPts;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.CurvePath.prototype.getTransformedSpacedPoints = function( segments, bends ) {\r\n\t\r\n\t\tvar oldPts = this.getSpacedPoints( segments );\r\n\t\r\n\t\tvar i, il;\r\n\t\r\n\t\tif ( ! bends ) {\r\n\t\r\n\t\t\tbends = this.bends;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfor ( i = 0, il = bends.length; i < il; i ++ ) {\r\n\t\r\n\t\t\toldPts = this.getWrapPoints( oldPts, bends[ i ] );\r\n\t\r\n\t\t}\r\n\t\r\n\t\treturn oldPts;\r\n\t\r\n\t};\r\n\t\r\n\t// This returns getPoints() bend/wrapped around the contour of a path.\r\n\t// Read http://www.planetclegg.com/projects/WarpingTextToSplines.html\r\n\t\r\n\tTHREE.CurvePath.prototype.getWrapPoints = function ( oldPts, path ) {\r\n\t\r\n\t\tvar bounds = this.getBoundingBox();\r\n\t\r\n\t\tvar i, il, p, oldX, oldY, xNorm;\r\n\t\r\n\t\tfor ( i = 0, il = oldPts.length; i < il; i ++ ) {\r\n\t\r\n\t\t\tp = oldPts[ i ];\r\n\t\r\n\t\t\toldX = p.x;\r\n\t\t\toldY = p.y;\r\n\t\r\n\t\t\txNorm = oldX / bounds.maxX;\r\n\t\r\n\t\t\t// If using actual distance, for length > path, requires line extrusions\r\n\t\t\t//xNorm = path.getUtoTmapping(xNorm, oldX); // 3 styles. 1) wrap stretched. 2) wrap stretch by arc length 3) warp by actual distance\r\n\t\r\n\t\t\txNorm = path.getUtoTmapping( xNorm, oldX );\r\n\t\r\n\t\t\t// check for out of bounds?\r\n\t\r\n\t\t\tvar pathPt = path.getPoint( xNorm );\r\n\t\t\tvar normal = path.getTangent( xNorm );\r\n\t\t\tnormal.set( - normal.y, normal.x ).multiplyScalar( oldY );\r\n\t\r\n\t\t\tp.x = pathPt.x + normal.x;\r\n\t\t\tp.y = pathPt.y + normal.y;\r\n\t\r\n\t\t}\r\n\t\r\n\t\treturn oldPts;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/core/Path.js\r\n\t\r\n\t/**\r\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\r\n\t * Creates free form 2d path using series of points, lines or curves.\r\n\t *\r\n\t **/\r\n\t\r\n\tTHREE.Path = function ( points ) {\r\n\t\r\n\t\tTHREE.CurvePath.call( this );\r\n\t\r\n\t\tthis.actions = [];\r\n\t\r\n\t\tif ( points ) {\r\n\t\r\n\t\t\tthis.fromPoints( points );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Path.prototype = Object.create( THREE.CurvePath.prototype );\r\n\tTHREE.Path.prototype.constructor = THREE.Path;\r\n\t\r\n\tTHREE.PathActions = {\r\n\t\r\n\t\tMOVE_TO: 'moveTo',\r\n\t\tLINE_TO: 'lineTo',\r\n\t\tQUADRATIC_CURVE_TO: 'quadraticCurveTo', // Bezier quadratic curve\r\n\t\tBEZIER_CURVE_TO: 'bezierCurveTo', \t\t// Bezier cubic curve\r\n\t\tCSPLINE_THRU: 'splineThru',\t\t\t\t// Catmull-Rom spline\r\n\t\tARC: 'arc',\t\t\t\t\t\t\t\t// Circle\r\n\t\tELLIPSE: 'ellipse'\r\n\t};\r\n\t\r\n\t// TODO Clean up PATH API\r\n\t\r\n\t// Create path using straight lines to connect all points\r\n\t// - vectors: array of Vector2\r\n\t\r\n\tTHREE.Path.prototype.fromPoints = function ( vectors ) {\r\n\t\r\n\t\tthis.moveTo( vectors[ 0 ].x, vectors[ 0 ].y );\r\n\t\r\n\t\tfor ( var v = 1, vlen = vectors.length; v < vlen; v ++ ) {\r\n\t\r\n\t\t\tthis.lineTo( vectors[ v ].x, vectors[ v ].y );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// startPath() endPath()?\r\n\t\r\n\tTHREE.Path.prototype.moveTo = function ( x, y ) {\r\n\t\r\n\t\tvar args = Array.prototype.slice.call( arguments );\r\n\t\tthis.actions.push( { action: THREE.PathActions.MOVE_TO, args: args } );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Path.prototype.lineTo = function ( x, y ) {\r\n\t\r\n\t\tvar args = Array.prototype.slice.call( arguments );\r\n\t\r\n\t\tvar lastargs = this.actions[ this.actions.length - 1 ].args;\r\n\t\r\n\t\tvar x0 = lastargs[ lastargs.length - 2 ];\r\n\t\tvar y0 = lastargs[ lastargs.length - 1 ];\r\n\t\r\n\t\tvar curve = new THREE.LineCurve( new THREE.Vector2( x0, y0 ), new THREE.Vector2( x, y ) );\r\n\t\tthis.curves.push( curve );\r\n\t\r\n\t\tthis.actions.push( { action: THREE.PathActions.LINE_TO, args: args } );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Path.prototype.quadraticCurveTo = function( aCPx, aCPy, aX, aY ) {\r\n\t\r\n\t\tvar args = Array.prototype.slice.call( arguments );\r\n\t\r\n\t\tvar lastargs = this.actions[ this.actions.length - 1 ].args;\r\n\t\r\n\t\tvar x0 = lastargs[ lastargs.length - 2 ];\r\n\t\tvar y0 = lastargs[ lastargs.length - 1 ];\r\n\t\r\n\t\tvar curve = new THREE.QuadraticBezierCurve( new THREE.Vector2( x0, y0 ),\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tnew THREE.Vector2( aCPx, aCPy ),\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tnew THREE.Vector2( aX, aY ) );\r\n\t\tthis.curves.push( curve );\r\n\t\r\n\t\tthis.actions.push( { action: THREE.PathActions.QUADRATIC_CURVE_TO, args: args } );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Path.prototype.bezierCurveTo = function( aCP1x, aCP1y,\r\n\t\t\t\t\t\t\t\t\t\t\t\t   aCP2x, aCP2y,\r\n\t\t\t\t\t\t\t\t\t\t\t\t   aX, aY ) {\r\n\t\r\n\t\tvar args = Array.prototype.slice.call( arguments );\r\n\t\r\n\t\tvar lastargs = this.actions[ this.actions.length - 1 ].args;\r\n\t\r\n\t\tvar x0 = lastargs[ lastargs.length - 2 ];\r\n\t\tvar y0 = lastargs[ lastargs.length - 1 ];\r\n\t\r\n\t\tvar curve = new THREE.CubicBezierCurve( new THREE.Vector2( x0, y0 ),\r\n\t\t\t\t\t\t\t\t\t\t\t\tnew THREE.Vector2( aCP1x, aCP1y ),\r\n\t\t\t\t\t\t\t\t\t\t\t\tnew THREE.Vector2( aCP2x, aCP2y ),\r\n\t\t\t\t\t\t\t\t\t\t\t\tnew THREE.Vector2( aX, aY ) );\r\n\t\tthis.curves.push( curve );\r\n\t\r\n\t\tthis.actions.push( { action: THREE.PathActions.BEZIER_CURVE_TO, args: args } );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Path.prototype.splineThru = function( pts /*Array of Vector*/ ) {\r\n\t\r\n\t\tvar args = Array.prototype.slice.call( arguments );\r\n\t\tvar lastargs = this.actions[ this.actions.length - 1 ].args;\r\n\t\r\n\t\tvar x0 = lastargs[ lastargs.length - 2 ];\r\n\t\tvar y0 = lastargs[ lastargs.length - 1 ];\r\n\t\t//---\r\n\t\tvar npts = [ new THREE.Vector2( x0, y0 ) ];\r\n\t\tArray.prototype.push.apply( npts, pts );\r\n\t\r\n\t\tvar curve = new THREE.SplineCurve( npts );\r\n\t\tthis.curves.push( curve );\r\n\t\r\n\t\tthis.actions.push( { action: THREE.PathActions.CSPLINE_THRU, args: args } );\r\n\t\r\n\t};\r\n\t\r\n\t// FUTURE: Change the API or follow canvas API?\r\n\t\r\n\tTHREE.Path.prototype.arc = function ( aX, aY, aRadius,\r\n\t\t\t\t\t\t\t\t\t\t  aStartAngle, aEndAngle, aClockwise ) {\r\n\t\r\n\t\tvar lastargs = this.actions[ this.actions.length - 1 ].args;\r\n\t\tvar x0 = lastargs[ lastargs.length - 2 ];\r\n\t\tvar y0 = lastargs[ lastargs.length - 1 ];\r\n\t\r\n\t\tthis.absarc( aX + x0, aY + y0, aRadius,\r\n\t\t\taStartAngle, aEndAngle, aClockwise );\r\n\t\r\n\t };\r\n\t\r\n\t THREE.Path.prototype.absarc = function ( aX, aY, aRadius,\r\n\t\t\t\t\t\t\t\t\t\t  aStartAngle, aEndAngle, aClockwise ) {\r\n\t\r\n\t\tthis.absellipse( aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\r\n\t\r\n\t };\r\n\t\r\n\tTHREE.Path.prototype.ellipse = function ( aX, aY, xRadius, yRadius,\r\n\t\t\t\t\t\t\t\t\t\t  aStartAngle, aEndAngle, aClockwise, aRotation ) {\r\n\t\r\n\t\tvar lastargs = this.actions[ this.actions.length - 1 ].args;\r\n\t\tvar x0 = lastargs[ lastargs.length - 2 ];\r\n\t\tvar y0 = lastargs[ lastargs.length - 1 ];\r\n\t\r\n\t\tthis.absellipse( aX + x0, aY + y0, xRadius, yRadius,\r\n\t\t\taStartAngle, aEndAngle, aClockwise, aRotation );\r\n\t\r\n\t };\r\n\t\r\n\t\r\n\tTHREE.Path.prototype.absellipse = function ( aX, aY, xRadius, yRadius,\r\n\t\t\t\t\t\t\t\t\t\t  aStartAngle, aEndAngle, aClockwise, aRotation ) {\r\n\t\r\n\t\tvar args = [\r\n\t\t\taX, aY,\r\n\t\t\txRadius, yRadius,\r\n\t\t\taStartAngle, aEndAngle,\r\n\t\t\taClockwise,\r\n\t\t\taRotation || 0 // aRotation is optional.\r\n\t\t];\r\n\t\tvar curve = new THREE.EllipseCurve( aX, aY, xRadius, yRadius,\r\n\t\t\t\t\t\t\t\t\t\taStartAngle, aEndAngle, aClockwise, aRotation );\r\n\t\tthis.curves.push( curve );\r\n\t\r\n\t\tvar lastPoint = curve.getPoint( 1 );\r\n\t\targs.push( lastPoint.x );\r\n\t\targs.push( lastPoint.y );\r\n\t\r\n\t\tthis.actions.push( { action: THREE.PathActions.ELLIPSE, args: args } );\r\n\t\r\n\t };\r\n\t\r\n\tTHREE.Path.prototype.getSpacedPoints = function ( divisions, closedPath ) {\r\n\t\r\n\t\tif ( ! divisions ) divisions = 40;\r\n\t\r\n\t\tvar points = [];\r\n\t\r\n\t\tfor ( var i = 0; i < divisions; i ++ ) {\r\n\t\r\n\t\t\tpoints.push( this.getPoint( i / divisions ) );\r\n\t\r\n\t\t\t//if( !this.getPoint( i / divisions ) ) throw \"DIE\";\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// if ( closedPath ) {\r\n\t\t//\r\n\t\t// \tpoints.push( points[ 0 ] );\r\n\t\t//\r\n\t\t// }\r\n\t\r\n\t\treturn points;\r\n\t\r\n\t};\r\n\t\r\n\t/* Return an array of vectors based on contour of the path */\r\n\t\r\n\tTHREE.Path.prototype.getPoints = function( divisions, closedPath ) {\r\n\t\r\n\t\tif ( this.useSpacedPoints ) {\r\n\t\r\n\t\t\treturn this.getSpacedPoints( divisions, closedPath );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tdivisions = divisions || 12;\r\n\t\r\n\t\tvar points = [];\r\n\t\r\n\t\tvar i, il, item, action, args;\r\n\t\tvar cpx, cpy, cpx2, cpy2, cpx1, cpy1, cpx0, cpy0,\r\n\t\t\tlaste, j,\r\n\t\t\tt, tx, ty;\r\n\t\r\n\t\tfor ( i = 0, il = this.actions.length; i < il; i ++ ) {\r\n\t\r\n\t\t\titem = this.actions[ i ];\r\n\t\r\n\t\t\taction = item.action;\r\n\t\t\targs = item.args;\r\n\t\r\n\t\t\tswitch ( action ) {\r\n\t\r\n\t\t\tcase THREE.PathActions.MOVE_TO:\r\n\t\r\n\t\t\t\tpoints.push( new THREE.Vector2( args[ 0 ], args[ 1 ] ) );\r\n\t\r\n\t\t\t\tbreak;\r\n\t\r\n\t\t\tcase THREE.PathActions.LINE_TO:\r\n\t\r\n\t\t\t\tpoints.push( new THREE.Vector2( args[ 0 ], args[ 1 ] ) );\r\n\t\r\n\t\t\t\tbreak;\r\n\t\r\n\t\t\tcase THREE.PathActions.QUADRATIC_CURVE_TO:\r\n\t\r\n\t\t\t\tcpx  = args[ 2 ];\r\n\t\t\t\tcpy  = args[ 3 ];\r\n\t\r\n\t\t\t\tcpx1 = args[ 0 ];\r\n\t\t\t\tcpy1 = args[ 1 ];\r\n\t\r\n\t\t\t\tif ( points.length > 0 ) {\r\n\t\r\n\t\t\t\t\tlaste = points[ points.length - 1 ];\r\n\t\r\n\t\t\t\t\tcpx0 = laste.x;\r\n\t\t\t\t\tcpy0 = laste.y;\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tlaste = this.actions[ i - 1 ].args;\r\n\t\r\n\t\t\t\t\tcpx0 = laste[ laste.length - 2 ];\r\n\t\t\t\t\tcpy0 = laste[ laste.length - 1 ];\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tfor ( j = 1; j <= divisions; j ++ ) {\r\n\t\r\n\t\t\t\t\tt = j / divisions;\r\n\t\r\n\t\t\t\t\ttx = THREE.Shape.Utils.b2( t, cpx0, cpx1, cpx );\r\n\t\t\t\t\tty = THREE.Shape.Utils.b2( t, cpy0, cpy1, cpy );\r\n\t\r\n\t\t\t\t\tpoints.push( new THREE.Vector2( tx, ty ) );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tbreak;\r\n\t\r\n\t\t\tcase THREE.PathActions.BEZIER_CURVE_TO:\r\n\t\r\n\t\t\t\tcpx  = args[ 4 ];\r\n\t\t\t\tcpy  = args[ 5 ];\r\n\t\r\n\t\t\t\tcpx1 = args[ 0 ];\r\n\t\t\t\tcpy1 = args[ 1 ];\r\n\t\r\n\t\t\t\tcpx2 = args[ 2 ];\r\n\t\t\t\tcpy2 = args[ 3 ];\r\n\t\r\n\t\t\t\tif ( points.length > 0 ) {\r\n\t\r\n\t\t\t\t\tlaste = points[ points.length - 1 ];\r\n\t\r\n\t\t\t\t\tcpx0 = laste.x;\r\n\t\t\t\t\tcpy0 = laste.y;\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tlaste = this.actions[ i - 1 ].args;\r\n\t\r\n\t\t\t\t\tcpx0 = laste[ laste.length - 2 ];\r\n\t\t\t\t\tcpy0 = laste[ laste.length - 1 ];\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\r\n\t\t\t\tfor ( j = 1; j <= divisions; j ++ ) {\r\n\t\r\n\t\t\t\t\tt = j / divisions;\r\n\t\r\n\t\t\t\t\ttx = THREE.Shape.Utils.b3( t, cpx0, cpx1, cpx2, cpx );\r\n\t\t\t\t\tty = THREE.Shape.Utils.b3( t, cpy0, cpy1, cpy2, cpy );\r\n\t\r\n\t\t\t\t\tpoints.push( new THREE.Vector2( tx, ty ) );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tbreak;\r\n\t\r\n\t\t\tcase THREE.PathActions.CSPLINE_THRU:\r\n\t\r\n\t\t\t\tlaste = this.actions[ i - 1 ].args;\r\n\t\r\n\t\t\t\tvar last = new THREE.Vector2( laste[ laste.length - 2 ], laste[ laste.length - 1 ] );\r\n\t\t\t\tvar spts = [ last ];\r\n\t\r\n\t\t\t\tvar n = divisions * args[ 0 ].length;\r\n\t\r\n\t\t\t\tspts = spts.concat( args[ 0 ] );\r\n\t\r\n\t\t\t\tvar spline = new THREE.SplineCurve( spts );\r\n\t\r\n\t\t\t\tfor ( j = 1; j <= n; j ++ ) {\r\n\t\r\n\t\t\t\t\tpoints.push( spline.getPointAt( j / n ) );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tbreak;\r\n\t\r\n\t\t\tcase THREE.PathActions.ARC:\r\n\t\r\n\t\t\t\tvar aX = args[ 0 ], aY = args[ 1 ],\r\n\t\t\t\t\taRadius = args[ 2 ],\r\n\t\t\t\t\taStartAngle = args[ 3 ], aEndAngle = args[ 4 ],\r\n\t\t\t\t\taClockwise = !! args[ 5 ];\r\n\t\r\n\t\t\t\tvar deltaAngle = aEndAngle - aStartAngle;\r\n\t\t\t\tvar angle;\r\n\t\t\t\tvar tdivisions = divisions * 2;\r\n\t\r\n\t\t\t\tfor ( j = 1; j <= tdivisions; j ++ ) {\r\n\t\r\n\t\t\t\t\tt = j / tdivisions;\r\n\t\r\n\t\t\t\t\tif ( ! aClockwise ) {\r\n\t\r\n\t\t\t\t\t\tt = 1 - t;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tangle = aStartAngle + t * deltaAngle;\r\n\t\r\n\t\t\t\t\ttx = aX + aRadius * Math.cos( angle );\r\n\t\t\t\t\tty = aY + aRadius * Math.sin( angle );\r\n\t\r\n\t\t\t\t\t//console.log('t', t, 'angle', angle, 'tx', tx, 'ty', ty);\r\n\t\r\n\t\t\t\t\tpoints.push( new THREE.Vector2( tx, ty ) );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t//console.log(points);\r\n\t\r\n\t\t\t\tbreak;\r\n\t\r\n\t\t\tcase THREE.PathActions.ELLIPSE:\r\n\t\r\n\t\t\t\tvar aX = args[ 0 ], aY = args[ 1 ],\r\n\t\t\t\t\txRadius = args[ 2 ],\r\n\t\t\t\t\tyRadius = args[ 3 ],\r\n\t\t\t\t\taStartAngle = args[ 4 ], aEndAngle = args[ 5 ],\r\n\t\t\t\t\taClockwise = !! args[ 6 ],\r\n\t\t\t\t\taRotation = args[ 7 ];\r\n\t\r\n\t\r\n\t\t\t\tvar deltaAngle = aEndAngle - aStartAngle;\r\n\t\t\t\tvar angle;\r\n\t\t\t\tvar tdivisions = divisions * 2;\r\n\t\r\n\t\t\t\tvar cos, sin;\r\n\t\t\t\tif ( aRotation !== 0 ) {\r\n\t\t\t\r\n\t\t\t\t\tcos = Math.cos( aRotation );\r\n\t\t\t\t\tsin = Math.sin( aRotation );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tfor ( j = 1; j <= tdivisions; j ++ ) {\r\n\t\r\n\t\t\t\t\tt = j / tdivisions;\r\n\t\r\n\t\t\t\t\tif ( ! aClockwise ) {\r\n\t\r\n\t\t\t\t\t\tt = 1 - t;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tangle = aStartAngle + t * deltaAngle;\r\n\t\r\n\t\t\t\t\ttx = aX + xRadius * Math.cos( angle );\r\n\t\t\t\t\tty = aY + yRadius * Math.sin( angle );\r\n\t\r\n\t\t\t\t\tif ( aRotation !== 0 ) {\r\n\t\r\n\t\t\t\t\t\tvar x = tx, y = ty;\r\n\t\r\n\t\t\t\t\t\t// Rotate the point about the center of the ellipse.\r\n\t\t\t\t\t\ttx = ( x - aX ) * cos - ( y - aY ) * sin + aX;\r\n\t\t\t\t\t\tty = ( x - aX ) * sin + ( y - aY ) * cos + aY;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t//console.log('t', t, 'angle', angle, 'tx', tx, 'ty', ty);\r\n\t\r\n\t\t\t\t\tpoints.push( new THREE.Vector2( tx, ty ) );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t//console.log(points);\r\n\t\r\n\t\t\t\tbreak;\r\n\t\r\n\t\t\t} // end switch\r\n\t\r\n\t\t}\r\n\t\r\n\t\r\n\t\r\n\t\t// Normalize to remove the closing point by default.\r\n\t\tvar lastPoint = points[ points.length - 1 ];\r\n\t\tvar EPSILON = 0.0000000001;\r\n\t\tif ( Math.abs( lastPoint.x - points[ 0 ].x ) < EPSILON &&\r\n\t\t\t\t Math.abs( lastPoint.y - points[ 0 ].y ) < EPSILON )\r\n\t\t\tpoints.splice( points.length - 1, 1 );\r\n\t\tif ( closedPath ) {\r\n\t\r\n\t\t\tpoints.push( points[ 0 ] );\r\n\t\r\n\t\t}\r\n\t\r\n\t\treturn points;\r\n\t\r\n\t};\r\n\t\r\n\t//\r\n\t// Breaks path into shapes\r\n\t//\r\n\t//\tAssumptions (if parameter isCCW==true the opposite holds):\r\n\t//\t- solid shapes are defined clockwise (CW)\r\n\t//\t- holes are defined counterclockwise (CCW)\r\n\t//\r\n\t//\tIf parameter noHoles==true:\r\n\t//  - all subPaths are regarded as solid shapes\r\n\t//  - definition order CW/CCW has no relevance\r\n\t//\r\n\t\r\n\tTHREE.Path.prototype.toShapes = function( isCCW, noHoles ) {\r\n\t\r\n\t\tfunction extractSubpaths( inActions ) {\r\n\t\r\n\t\t\tvar i, il, item, action, args;\r\n\t\r\n\t\t\tvar subPaths = [], lastPath = new THREE.Path();\r\n\t\r\n\t\t\tfor ( i = 0, il = inActions.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\titem = inActions[ i ];\r\n\t\r\n\t\t\t\targs = item.args;\r\n\t\t\t\taction = item.action;\r\n\t\r\n\t\t\t\tif ( action === THREE.PathActions.MOVE_TO ) {\r\n\t\r\n\t\t\t\t\tif ( lastPath.actions.length !== 0 ) {\r\n\t\r\n\t\t\t\t\t\tsubPaths.push( lastPath );\r\n\t\t\t\t\t\tlastPath = new THREE.Path();\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tlastPath[ action ].apply( lastPath, args );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( lastPath.actions.length !== 0 ) {\r\n\t\r\n\t\t\t\tsubPaths.push( lastPath );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// console.log(subPaths);\r\n\t\r\n\t\t\treturn\tsubPaths;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction toShapesNoHoles( inSubpaths ) {\r\n\t\r\n\t\t\tvar shapes = [];\r\n\t\r\n\t\t\tfor ( var i = 0, il = inSubpaths.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\tvar tmpPath = inSubpaths[ i ];\r\n\t\r\n\t\t\t\tvar tmpShape = new THREE.Shape();\r\n\t\t\t\ttmpShape.actions = tmpPath.actions;\r\n\t\t\t\ttmpShape.curves = tmpPath.curves;\r\n\t\r\n\t\t\t\tshapes.push( tmpShape );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t//console.log(\"shape\", shapes);\r\n\t\r\n\t\t\treturn shapes;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction isPointInsidePolygon( inPt, inPolygon ) {\r\n\t\r\n\t\t\tvar EPSILON = 0.0000000001;\r\n\t\r\n\t\t\tvar polyLen = inPolygon.length;\r\n\t\r\n\t\t\t// inPt on polygon contour => immediate success    or\r\n\t\t\t// toggling of inside/outside at every single! intersection point of an edge\r\n\t\t\t//  with the horizontal line through inPt, left of inPt\r\n\t\t\t//  not counting lowerY endpoints of edges and whole edges on that line\r\n\t\t\tvar inside = false;\r\n\t\t\tfor ( var p = polyLen - 1, q = 0; q < polyLen; p = q ++ ) {\r\n\t\r\n\t\t\t\tvar edgeLowPt  = inPolygon[ p ];\r\n\t\t\t\tvar edgeHighPt = inPolygon[ q ];\r\n\t\r\n\t\t\t\tvar edgeDx = edgeHighPt.x - edgeLowPt.x;\r\n\t\t\t\tvar edgeDy = edgeHighPt.y - edgeLowPt.y;\r\n\t\r\n\t\t\t\tif ( Math.abs( edgeDy ) > EPSILON ) {\r\n\t\r\n\t\t\t\t\t// not parallel\r\n\t\t\t\t\tif ( edgeDy < 0 ) {\r\n\t\r\n\t\t\t\t\t\tedgeLowPt  = inPolygon[ q ]; edgeDx = - edgeDx;\r\n\t\t\t\t\t\tedgeHighPt = inPolygon[ p ]; edgeDy = - edgeDy;\r\n\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif ( ( inPt.y < edgeLowPt.y ) || ( inPt.y > edgeHighPt.y ) ) \t\tcontinue;\r\n\t\r\n\t\t\t\t\tif ( inPt.y === edgeLowPt.y ) {\r\n\t\r\n\t\t\t\t\t\tif ( inPt.x === edgeLowPt.x )\t\treturn\ttrue;\t\t// inPt is on contour ?\r\n\t\t\t\t\t\t// continue;\t\t\t\t// no intersection or edgeLowPt => doesn't count !!!\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\tvar perpEdge = edgeDy * ( inPt.x - edgeLowPt.x ) - edgeDx * ( inPt.y - edgeLowPt.y );\r\n\t\t\t\t\t\tif ( perpEdge === 0 )\t\t\t\treturn\ttrue;\t\t// inPt is on contour ?\r\n\t\t\t\t\t\tif ( perpEdge < 0 ) \t\t\t\tcontinue;\r\n\t\t\t\t\t\tinside = ! inside;\t\t// true intersection left of inPt\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t// parallel or collinear\r\n\t\t\t\t\tif ( inPt.y !== edgeLowPt.y ) \t\tcontinue;\t\t\t// parallel\r\n\t\t\t\t\t// edge lies on the same horizontal line as inPt\r\n\t\t\t\t\tif ( ( ( edgeHighPt.x <= inPt.x ) && ( inPt.x <= edgeLowPt.x ) ) ||\r\n\t\t\t\t\t\t ( ( edgeLowPt.x <= inPt.x ) && ( inPt.x <= edgeHighPt.x ) ) )\t\treturn\ttrue;\t// inPt: Point on contour !\r\n\t\t\t\t\t// continue;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn\tinside;\r\n\t\r\n\t\t}\r\n\t\r\n\t\r\n\t\tvar subPaths = extractSubpaths( this.actions );\r\n\t\tif ( subPaths.length === 0 ) return [];\r\n\t\r\n\t\tif ( noHoles === true )\treturn\ttoShapesNoHoles( subPaths );\r\n\t\r\n\t\r\n\t\tvar solid, tmpPath, tmpShape, shapes = [];\r\n\t\r\n\t\tif ( subPaths.length === 1 ) {\r\n\t\r\n\t\t\ttmpPath = subPaths[ 0 ];\r\n\t\t\ttmpShape = new THREE.Shape();\r\n\t\t\ttmpShape.actions = tmpPath.actions;\r\n\t\t\ttmpShape.curves = tmpPath.curves;\r\n\t\t\tshapes.push( tmpShape );\r\n\t\t\treturn shapes;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tvar holesFirst = ! THREE.Shape.Utils.isClockWise( subPaths[ 0 ].getPoints() );\r\n\t\tholesFirst = isCCW ? ! holesFirst : holesFirst;\r\n\t\r\n\t\t// console.log(\"Holes first\", holesFirst);\r\n\t\r\n\t\tvar betterShapeHoles = [];\r\n\t\tvar newShapes = [];\r\n\t\tvar newShapeHoles = [];\r\n\t\tvar mainIdx = 0;\r\n\t\tvar tmpPoints;\r\n\t\r\n\t\tnewShapes[ mainIdx ] = undefined;\r\n\t\tnewShapeHoles[ mainIdx ] = [];\r\n\t\r\n\t\tvar i, il;\r\n\t\r\n\t\tfor ( i = 0, il = subPaths.length; i < il; i ++ ) {\r\n\t\r\n\t\t\ttmpPath = subPaths[ i ];\r\n\t\t\ttmpPoints = tmpPath.getPoints();\r\n\t\t\tsolid = THREE.Shape.Utils.isClockWise( tmpPoints );\r\n\t\t\tsolid = isCCW ? ! solid : solid;\r\n\t\r\n\t\t\tif ( solid ) {\r\n\t\r\n\t\t\t\tif ( ( ! holesFirst ) && ( newShapes[ mainIdx ] ) )\tmainIdx ++;\r\n\t\r\n\t\t\t\tnewShapes[ mainIdx ] = { s: new THREE.Shape(), p: tmpPoints };\r\n\t\t\t\tnewShapes[ mainIdx ].s.actions = tmpPath.actions;\r\n\t\t\t\tnewShapes[ mainIdx ].s.curves = tmpPath.curves;\r\n\t\r\n\t\t\t\tif ( holesFirst )\tmainIdx ++;\r\n\t\t\t\tnewShapeHoles[ mainIdx ] = [];\r\n\t\r\n\t\t\t\t//console.log('cw', i);\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tnewShapeHoles[ mainIdx ].push( { h: tmpPath, p: tmpPoints[ 0 ] } );\r\n\t\r\n\t\t\t\t//console.log('ccw', i);\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// only Holes? -> probably all Shapes with wrong orientation\r\n\t\tif ( ! newShapes[ 0 ] )\treturn\ttoShapesNoHoles( subPaths );\r\n\t\r\n\t\r\n\t\tif ( newShapes.length > 1 ) {\r\n\t\r\n\t\t\tvar ambiguous = false;\r\n\t\t\tvar toChange = [];\r\n\t\r\n\t\t\tfor ( var sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\r\n\t\r\n\t\t\t\tbetterShapeHoles[ sIdx ] = [];\r\n\t\r\n\t\t\t}\r\n\t\t\tfor ( var sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\r\n\t\r\n\t\t\t\tvar sho = newShapeHoles[ sIdx ];\r\n\t\t\t\tfor ( var hIdx = 0; hIdx < sho.length; hIdx ++ ) {\r\n\t\r\n\t\t\t\t\tvar ho = sho[ hIdx ];\r\n\t\t\t\t\tvar hole_unassigned = true;\r\n\t\t\t\t\tfor ( var s2Idx = 0; s2Idx < newShapes.length; s2Idx ++ ) {\r\n\t\r\n\t\t\t\t\t\tif ( isPointInsidePolygon( ho.p, newShapes[ s2Idx ].p ) ) {\r\n\t\r\n\t\t\t\t\t\t\tif ( sIdx !== s2Idx )\ttoChange.push( { froms: sIdx, tos: s2Idx, hole: hIdx } );\r\n\t\t\t\t\t\t\tif ( hole_unassigned ) {\r\n\t\r\n\t\t\t\t\t\t\t\thole_unassigned = false;\r\n\t\t\t\t\t\t\t\tbetterShapeHoles[ s2Idx ].push( ho );\r\n\t\r\n\t\t\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\t\t\tambiguous = true;\r\n\t\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif ( hole_unassigned ) {\r\n\t\r\n\t\t\t\t\t\tbetterShapeHoles[ sIdx ].push( ho );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\t\t// console.log(\"ambiguous: \", ambiguous);\r\n\t\t\tif ( toChange.length > 0 ) {\r\n\t\r\n\t\t\t\t// console.log(\"to change: \", toChange);\r\n\t\t\t\tif ( ! ambiguous )\tnewShapeHoles = betterShapeHoles;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tvar tmpHoles, j, jl;\r\n\t\tfor ( i = 0, il = newShapes.length; i < il; i ++ ) {\r\n\t\r\n\t\t\ttmpShape = newShapes[ i ].s;\r\n\t\t\tshapes.push( tmpShape );\r\n\t\t\ttmpHoles = newShapeHoles[ i ];\r\n\t\t\tfor ( j = 0, jl = tmpHoles.length; j < jl; j ++ ) {\r\n\t\r\n\t\t\t\ttmpShape.holes.push( tmpHoles[ j ].h );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\t//console.log(\"shape\", shapes);\r\n\t\r\n\t\treturn shapes;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/core/Shape.js\r\n\t\r\n\t/**\r\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\r\n\t * Defines a 2d shape plane using paths.\r\n\t **/\r\n\t\r\n\t// STEP 1 Create a path.\r\n\t// STEP 2 Turn path into shape.\r\n\t// STEP 3 ExtrudeGeometry takes in Shape/Shapes\r\n\t// STEP 3a - Extract points from each shape, turn to vertices\r\n\t// STEP 3b - Triangulate each shape, add faces.\r\n\t\r\n\tTHREE.Shape = function () {\r\n\t\r\n\t\tTHREE.Path.apply( this, arguments );\r\n\t\tthis.holes = [];\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Shape.prototype = Object.create( THREE.Path.prototype );\r\n\tTHREE.Shape.prototype.constructor = THREE.Shape;\r\n\t\r\n\t// Convenience method to return ExtrudeGeometry\r\n\t\r\n\tTHREE.Shape.prototype.extrude = function ( options ) {\r\n\t\r\n\t\tvar extruded = new THREE.ExtrudeGeometry( this, options );\r\n\t\treturn extruded;\r\n\t\r\n\t};\r\n\t\r\n\t// Convenience method to return ShapeGeometry\r\n\t\r\n\tTHREE.Shape.prototype.makeGeometry = function ( options ) {\r\n\t\r\n\t\tvar geometry = new THREE.ShapeGeometry( this, options );\r\n\t\treturn geometry;\r\n\t\r\n\t};\r\n\t\r\n\t// Get points of holes\r\n\t\r\n\tTHREE.Shape.prototype.getPointsHoles = function ( divisions ) {\r\n\t\r\n\t\tvar i, il = this.holes.length, holesPts = [];\r\n\t\r\n\t\tfor ( i = 0; i < il; i ++ ) {\r\n\t\r\n\t\t\tholesPts[ i ] = this.holes[ i ].getTransformedPoints( divisions, this.bends );\r\n\t\r\n\t\t}\r\n\t\r\n\t\treturn holesPts;\r\n\t\r\n\t};\r\n\t\r\n\t// Get points of holes (spaced by regular distance)\r\n\t\r\n\tTHREE.Shape.prototype.getSpacedPointsHoles = function ( divisions ) {\r\n\t\r\n\t\tvar i, il = this.holes.length, holesPts = [];\r\n\t\r\n\t\tfor ( i = 0; i < il; i ++ ) {\r\n\t\r\n\t\t\tholesPts[ i ] = this.holes[ i ].getTransformedSpacedPoints( divisions, this.bends );\r\n\t\r\n\t\t}\r\n\t\r\n\t\treturn holesPts;\r\n\t\r\n\t};\r\n\t\r\n\t\r\n\t// Get points of shape and holes (keypoints based on segments parameter)\r\n\t\r\n\tTHREE.Shape.prototype.extractAllPoints = function ( divisions ) {\r\n\t\r\n\t\treturn {\r\n\t\r\n\t\t\tshape: this.getTransformedPoints( divisions ),\r\n\t\t\tholes: this.getPointsHoles( divisions )\r\n\t\r\n\t\t};\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Shape.prototype.extractPoints = function ( divisions ) {\r\n\t\r\n\t\tif ( this.useSpacedPoints ) {\r\n\t\r\n\t\t\treturn this.extractAllSpacedPoints( divisions );\r\n\t\r\n\t\t}\r\n\t\r\n\t\treturn this.extractAllPoints( divisions );\r\n\t\r\n\t};\r\n\t\r\n\t//\r\n\t// THREE.Shape.prototype.extractAllPointsWithBend = function ( divisions, bend ) {\r\n\t//\r\n\t// \treturn {\r\n\t//\r\n\t// \t\tshape: this.transform( bend, divisions ),\r\n\t// \t\tholes: this.getPointsHoles( divisions, bend )\r\n\t//\r\n\t// \t};\r\n\t//\r\n\t// };\r\n\t\r\n\t// Get points of shape and holes (spaced by regular distance)\r\n\t\r\n\tTHREE.Shape.prototype.extractAllSpacedPoints = function ( divisions ) {\r\n\t\r\n\t\treturn {\r\n\t\r\n\t\t\tshape: this.getTransformedSpacedPoints( divisions ),\r\n\t\t\tholes: this.getSpacedPointsHoles( divisions )\r\n\t\r\n\t\t};\r\n\t\r\n\t};\r\n\t\r\n\t/**************************************************************\r\n\t *\tUtils\r\n\t **************************************************************/\r\n\t\r\n\tTHREE.Shape.Utils = {\r\n\t\r\n\t\ttriangulateShape: function ( contour, holes ) {\r\n\t\r\n\t\t\tfunction point_in_segment_2D_colin( inSegPt1, inSegPt2, inOtherPt ) {\r\n\t\r\n\t\t\t\t// inOtherPt needs to be collinear to the inSegment\r\n\t\t\t\tif ( inSegPt1.x !== inSegPt2.x ) {\r\n\t\r\n\t\t\t\t\tif ( inSegPt1.x < inSegPt2.x ) {\r\n\t\r\n\t\t\t\t\t\treturn\t( ( inSegPt1.x <= inOtherPt.x ) && ( inOtherPt.x <= inSegPt2.x ) );\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\treturn\t( ( inSegPt2.x <= inOtherPt.x ) && ( inOtherPt.x <= inSegPt1.x ) );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tif ( inSegPt1.y < inSegPt2.y ) {\r\n\t\r\n\t\t\t\t\t\treturn\t( ( inSegPt1.y <= inOtherPt.y ) && ( inOtherPt.y <= inSegPt2.y ) );\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\treturn\t( ( inSegPt2.y <= inOtherPt.y ) && ( inOtherPt.y <= inSegPt1.y ) );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tfunction intersect_segments_2D( inSeg1Pt1, inSeg1Pt2, inSeg2Pt1, inSeg2Pt2, inExcludeAdjacentSegs ) {\r\n\t\r\n\t\t\t\tvar EPSILON = 0.0000000001;\r\n\t\r\n\t\t\t\tvar seg1dx = inSeg1Pt2.x - inSeg1Pt1.x,   seg1dy = inSeg1Pt2.y - inSeg1Pt1.y;\r\n\t\t\t\tvar seg2dx = inSeg2Pt2.x - inSeg2Pt1.x,   seg2dy = inSeg2Pt2.y - inSeg2Pt1.y;\r\n\t\r\n\t\t\t\tvar seg1seg2dx = inSeg1Pt1.x - inSeg2Pt1.x;\r\n\t\t\t\tvar seg1seg2dy = inSeg1Pt1.y - inSeg2Pt1.y;\r\n\t\r\n\t\t\t\tvar limit\t\t= seg1dy * seg2dx - seg1dx * seg2dy;\r\n\t\t\t\tvar perpSeg1\t= seg1dy * seg1seg2dx - seg1dx * seg1seg2dy;\r\n\t\r\n\t\t\t\tif ( Math.abs( limit ) > EPSILON ) {\r\n\t\r\n\t\t\t\t\t// not parallel\r\n\t\r\n\t\t\t\t\tvar perpSeg2;\r\n\t\t\t\t\tif ( limit > 0 ) {\r\n\t\r\n\t\t\t\t\t\tif ( ( perpSeg1 < 0 ) || ( perpSeg1 > limit ) ) \t\treturn [];\r\n\t\t\t\t\t\tperpSeg2 = seg2dy * seg1seg2dx - seg2dx * seg1seg2dy;\r\n\t\t\t\t\t\tif ( ( perpSeg2 < 0 ) || ( perpSeg2 > limit ) ) \t\treturn [];\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\tif ( ( perpSeg1 > 0 ) || ( perpSeg1 < limit ) ) \t\treturn [];\r\n\t\t\t\t\t\tperpSeg2 = seg2dy * seg1seg2dx - seg2dx * seg1seg2dy;\r\n\t\t\t\t\t\tif ( ( perpSeg2 > 0 ) || ( perpSeg2 < limit ) ) \t\treturn [];\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t// i.e. to reduce rounding errors\r\n\t\t\t\t\t// intersection at endpoint of segment#1?\r\n\t\t\t\t\tif ( perpSeg2 === 0 ) {\r\n\t\r\n\t\t\t\t\t\tif ( ( inExcludeAdjacentSegs ) &&\r\n\t\t\t\t\t\t\t ( ( perpSeg1 === 0 ) || ( perpSeg1 === limit ) ) )\t\treturn [];\r\n\t\t\t\t\t\treturn [ inSeg1Pt1 ];\r\n\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif ( perpSeg2 === limit ) {\r\n\t\r\n\t\t\t\t\t\tif ( ( inExcludeAdjacentSegs ) &&\r\n\t\t\t\t\t\t\t ( ( perpSeg1 === 0 ) || ( perpSeg1 === limit ) ) )\t\treturn [];\r\n\t\t\t\t\t\treturn [ inSeg1Pt2 ];\r\n\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// intersection at endpoint of segment#2?\r\n\t\t\t\t\tif ( perpSeg1 === 0 )\t\treturn [ inSeg2Pt1 ];\r\n\t\t\t\t\tif ( perpSeg1 === limit )\treturn [ inSeg2Pt2 ];\r\n\t\r\n\t\t\t\t\t// return real intersection point\r\n\t\t\t\t\tvar factorSeg1 = perpSeg2 / limit;\r\n\t\t\t\t\treturn\t[ { x: inSeg1Pt1.x + factorSeg1 * seg1dx,\r\n\t\t\t\t\t\t\t\ty: inSeg1Pt1.y + factorSeg1 * seg1dy } ];\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t// parallel or collinear\r\n\t\t\t\t\tif ( ( perpSeg1 !== 0 ) ||\r\n\t\t\t\t\t\t ( seg2dy * seg1seg2dx !== seg2dx * seg1seg2dy ) ) \t\t\treturn [];\r\n\t\r\n\t\t\t\t\t// they are collinear or degenerate\r\n\t\t\t\t\tvar seg1Pt = ( ( seg1dx === 0 ) && ( seg1dy === 0 ) );\t// segment1 is just a point?\r\n\t\t\t\t\tvar seg2Pt = ( ( seg2dx === 0 ) && ( seg2dy === 0 ) );\t// segment2 is just a point?\r\n\t\t\t\t\t// both segments are points\r\n\t\t\t\t\tif ( seg1Pt && seg2Pt ) {\r\n\t\r\n\t\t\t\t\t\tif ( ( inSeg1Pt1.x !== inSeg2Pt1.x ) ||\r\n\t\t\t\t\t\t\t ( inSeg1Pt1.y !== inSeg2Pt1.y ) )\t\treturn [];\t// they are distinct  points\r\n\t\t\t\t\t\treturn [ inSeg1Pt1 ];                 \t\t\t\t\t\t// they are the same point\r\n\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// segment#1  is a single point\r\n\t\t\t\t\tif ( seg1Pt ) {\r\n\t\r\n\t\t\t\t\t\tif ( ! point_in_segment_2D_colin( inSeg2Pt1, inSeg2Pt2, inSeg1Pt1 ) )\t\treturn [];\t\t// but not in segment#2\r\n\t\t\t\t\t\treturn [ inSeg1Pt1 ];\r\n\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// segment#2  is a single point\r\n\t\t\t\t\tif ( seg2Pt ) {\r\n\t\r\n\t\t\t\t\t\tif ( ! point_in_segment_2D_colin( inSeg1Pt1, inSeg1Pt2, inSeg2Pt1 ) )\t\treturn [];\t\t// but not in segment#1\r\n\t\t\t\t\t\treturn [ inSeg2Pt1 ];\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t// they are collinear segments, which might overlap\r\n\t\t\t\t\tvar seg1min, seg1max, seg1minVal, seg1maxVal;\r\n\t\t\t\t\tvar seg2min, seg2max, seg2minVal, seg2maxVal;\r\n\t\t\t\t\tif ( seg1dx !== 0 ) {\r\n\t\r\n\t\t\t\t\t\t// the segments are NOT on a vertical line\r\n\t\t\t\t\t\tif ( inSeg1Pt1.x < inSeg1Pt2.x ) {\r\n\t\r\n\t\t\t\t\t\t\tseg1min = inSeg1Pt1; seg1minVal = inSeg1Pt1.x;\r\n\t\t\t\t\t\t\tseg1max = inSeg1Pt2; seg1maxVal = inSeg1Pt2.x;\r\n\t\r\n\t\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\t\tseg1min = inSeg1Pt2; seg1minVal = inSeg1Pt2.x;\r\n\t\t\t\t\t\t\tseg1max = inSeg1Pt1; seg1maxVal = inSeg1Pt1.x;\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif ( inSeg2Pt1.x < inSeg2Pt2.x ) {\r\n\t\r\n\t\t\t\t\t\t\tseg2min = inSeg2Pt1; seg2minVal = inSeg2Pt1.x;\r\n\t\t\t\t\t\t\tseg2max = inSeg2Pt2; seg2maxVal = inSeg2Pt2.x;\r\n\t\r\n\t\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\t\tseg2min = inSeg2Pt2; seg2minVal = inSeg2Pt2.x;\r\n\t\t\t\t\t\t\tseg2max = inSeg2Pt1; seg2maxVal = inSeg2Pt1.x;\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\t// the segments are on a vertical line\r\n\t\t\t\t\t\tif ( inSeg1Pt1.y < inSeg1Pt2.y ) {\r\n\t\r\n\t\t\t\t\t\t\tseg1min = inSeg1Pt1; seg1minVal = inSeg1Pt1.y;\r\n\t\t\t\t\t\t\tseg1max = inSeg1Pt2; seg1maxVal = inSeg1Pt2.y;\r\n\t\r\n\t\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\t\tseg1min = inSeg1Pt2; seg1minVal = inSeg1Pt2.y;\r\n\t\t\t\t\t\t\tseg1max = inSeg1Pt1; seg1maxVal = inSeg1Pt1.y;\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif ( inSeg2Pt1.y < inSeg2Pt2.y ) {\r\n\t\r\n\t\t\t\t\t\t\tseg2min = inSeg2Pt1; seg2minVal = inSeg2Pt1.y;\r\n\t\t\t\t\t\t\tseg2max = inSeg2Pt2; seg2maxVal = inSeg2Pt2.y;\r\n\t\r\n\t\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\t\tseg2min = inSeg2Pt2; seg2minVal = inSeg2Pt2.y;\r\n\t\t\t\t\t\t\tseg2max = inSeg2Pt1; seg2maxVal = inSeg2Pt1.y;\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif ( seg1minVal <= seg2minVal ) {\r\n\t\r\n\t\t\t\t\t\tif ( seg1maxVal <  seg2minVal )\treturn [];\r\n\t\t\t\t\t\tif ( seg1maxVal === seg2minVal )\t{\r\n\t\r\n\t\t\t\t\t\t\tif ( inExcludeAdjacentSegs )\t\treturn [];\r\n\t\t\t\t\t\t\treturn [ seg2min ];\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif ( seg1maxVal <= seg2maxVal )\treturn [ seg2min, seg1max ];\r\n\t\t\t\t\t\treturn\t[ seg2min, seg2max ];\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\tif ( seg1minVal >  seg2maxVal )\treturn [];\r\n\t\t\t\t\t\tif ( seg1minVal === seg2maxVal )\t{\r\n\t\r\n\t\t\t\t\t\t\tif ( inExcludeAdjacentSegs )\t\treturn [];\r\n\t\t\t\t\t\t\treturn [ seg1min ];\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif ( seg1maxVal <= seg2maxVal )\treturn [ seg1min, seg1max ];\r\n\t\t\t\t\t\treturn\t[ seg1min, seg2max ];\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tfunction isPointInsideAngle( inVertex, inLegFromPt, inLegToPt, inOtherPt ) {\r\n\t\r\n\t\t\t\t// The order of legs is important\r\n\t\r\n\t\t\t\tvar EPSILON = 0.0000000001;\r\n\t\r\n\t\t\t\t// translation of all points, so that Vertex is at (0,0)\r\n\t\t\t\tvar legFromPtX\t= inLegFromPt.x - inVertex.x,  legFromPtY\t= inLegFromPt.y - inVertex.y;\r\n\t\t\t\tvar legToPtX\t= inLegToPt.x\t- inVertex.x,  legToPtY\t\t= inLegToPt.y\t- inVertex.y;\r\n\t\t\t\tvar otherPtX\t= inOtherPt.x\t- inVertex.x,  otherPtY\t\t= inOtherPt.y\t- inVertex.y;\r\n\t\r\n\t\t\t\t// main angle >0: < 180 deg.; 0: 180 deg.; <0: > 180 deg.\r\n\t\t\t\tvar from2toAngle\t= legFromPtX * legToPtY - legFromPtY * legToPtX;\r\n\t\t\t\tvar from2otherAngle\t= legFromPtX * otherPtY - legFromPtY * otherPtX;\r\n\t\r\n\t\t\t\tif ( Math.abs( from2toAngle ) > EPSILON ) {\r\n\t\r\n\t\t\t\t\t// angle != 180 deg.\r\n\t\r\n\t\t\t\t\tvar other2toAngle\t\t= otherPtX * legToPtY - otherPtY * legToPtX;\r\n\t\t\t\t\t// console.log( \"from2to: \" + from2toAngle + \", from2other: \" + from2otherAngle + \", other2to: \" + other2toAngle );\r\n\t\r\n\t\t\t\t\tif ( from2toAngle > 0 ) {\r\n\t\r\n\t\t\t\t\t\t// main angle < 180 deg.\r\n\t\t\t\t\t\treturn\t( ( from2otherAngle >= 0 ) && ( other2toAngle >= 0 ) );\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\t// main angle > 180 deg.\r\n\t\t\t\t\t\treturn\t( ( from2otherAngle >= 0 ) || ( other2toAngle >= 0 ) );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t// angle == 180 deg.\r\n\t\t\t\t\t// console.log( \"from2to: 180 deg., from2other: \" + from2otherAngle  );\r\n\t\t\t\t\treturn\t( from2otherAngle > 0 );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\r\n\t\t\tfunction removeHoles( contour, holes ) {\r\n\t\r\n\t\t\t\tvar shape = contour.concat(); // work on this shape\r\n\t\t\t\tvar hole;\r\n\t\r\n\t\t\t\tfunction isCutLineInsideAngles( inShapeIdx, inHoleIdx ) {\r\n\t\r\n\t\t\t\t\t// Check if hole point lies within angle around shape point\r\n\t\t\t\t\tvar lastShapeIdx = shape.length - 1;\r\n\t\r\n\t\t\t\t\tvar prevShapeIdx = inShapeIdx - 1;\r\n\t\t\t\t\tif ( prevShapeIdx < 0 )\t\t\tprevShapeIdx = lastShapeIdx;\r\n\t\r\n\t\t\t\t\tvar nextShapeIdx = inShapeIdx + 1;\r\n\t\t\t\t\tif ( nextShapeIdx > lastShapeIdx )\tnextShapeIdx = 0;\r\n\t\r\n\t\t\t\t\tvar insideAngle = isPointInsideAngle( shape[ inShapeIdx ], shape[ prevShapeIdx ], shape[ nextShapeIdx ], hole[ inHoleIdx ] );\r\n\t\t\t\t\tif ( ! insideAngle ) {\r\n\t\r\n\t\t\t\t\t\t// console.log( \"Vertex (Shape): \" + inShapeIdx + \", Point: \" + hole[inHoleIdx].x + \"/\" + hole[inHoleIdx].y );\r\n\t\t\t\t\t\treturn\tfalse;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t// Check if shape point lies within angle around hole point\r\n\t\t\t\t\tvar lastHoleIdx = hole.length - 1;\r\n\t\r\n\t\t\t\t\tvar prevHoleIdx = inHoleIdx - 1;\r\n\t\t\t\t\tif ( prevHoleIdx < 0 )\t\t\tprevHoleIdx = lastHoleIdx;\r\n\t\r\n\t\t\t\t\tvar nextHoleIdx = inHoleIdx + 1;\r\n\t\t\t\t\tif ( nextHoleIdx > lastHoleIdx )\tnextHoleIdx = 0;\r\n\t\r\n\t\t\t\t\tinsideAngle = isPointInsideAngle( hole[ inHoleIdx ], hole[ prevHoleIdx ], hole[ nextHoleIdx ], shape[ inShapeIdx ] );\r\n\t\t\t\t\tif ( ! insideAngle ) {\r\n\t\r\n\t\t\t\t\t\t// console.log( \"Vertex (Hole): \" + inHoleIdx + \", Point: \" + shape[inShapeIdx].x + \"/\" + shape[inShapeIdx].y );\r\n\t\t\t\t\t\treturn\tfalse;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\treturn\ttrue;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tfunction intersectsShapeEdge( inShapePt, inHolePt ) {\r\n\t\r\n\t\t\t\t\t// checks for intersections with shape edges\r\n\t\t\t\t\tvar sIdx, nextIdx, intersection;\r\n\t\t\t\t\tfor ( sIdx = 0; sIdx < shape.length; sIdx ++ ) {\r\n\t\r\n\t\t\t\t\t\tnextIdx = sIdx + 1; nextIdx %= shape.length;\r\n\t\t\t\t\t\tintersection = intersect_segments_2D( inShapePt, inHolePt, shape[ sIdx ], shape[ nextIdx ], true );\r\n\t\t\t\t\t\tif ( intersection.length > 0 )\t\treturn\ttrue;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\treturn\tfalse;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar indepHoles = [];\r\n\t\r\n\t\t\t\tfunction intersectsHoleEdge( inShapePt, inHolePt ) {\r\n\t\r\n\t\t\t\t\t// checks for intersections with hole edges\r\n\t\t\t\t\tvar ihIdx, chkHole,\r\n\t\t\t\t\t\thIdx, nextIdx, intersection;\r\n\t\t\t\t\tfor ( ihIdx = 0; ihIdx < indepHoles.length; ihIdx ++ ) {\r\n\t\r\n\t\t\t\t\t\tchkHole = holes[ indepHoles[ ihIdx ]];\r\n\t\t\t\t\t\tfor ( hIdx = 0; hIdx < chkHole.length; hIdx ++ ) {\r\n\t\r\n\t\t\t\t\t\t\tnextIdx = hIdx + 1; nextIdx %= chkHole.length;\r\n\t\t\t\t\t\t\tintersection = intersect_segments_2D( inShapePt, inHolePt, chkHole[ hIdx ], chkHole[ nextIdx ], true );\r\n\t\t\t\t\t\t\tif ( intersection.length > 0 )\t\treturn\ttrue;\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn\tfalse;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar holeIndex, shapeIndex,\r\n\t\t\t\t\tshapePt, holePt,\r\n\t\t\t\t\tholeIdx, cutKey, failedCuts = [],\r\n\t\t\t\t\ttmpShape1, tmpShape2,\r\n\t\t\t\t\ttmpHole1, tmpHole2;\r\n\t\r\n\t\t\t\tfor ( var h = 0, hl = holes.length; h < hl; h ++ ) {\r\n\t\r\n\t\t\t\t\tindepHoles.push( h );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar minShapeIndex = 0;\r\n\t\t\t\tvar counter = indepHoles.length * 2;\r\n\t\t\t\twhile ( indepHoles.length > 0 ) {\r\n\t\r\n\t\t\t\t\tcounter --;\r\n\t\t\t\t\tif ( counter < 0 ) {\r\n\t\r\n\t\t\t\t\t\tconsole.log( \"Infinite Loop! Holes left:\" + indepHoles.length + \", Probably Hole outside Shape!\" );\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t// search for shape-vertex and hole-vertex,\r\n\t\t\t\t\t// which can be connected without intersections\r\n\t\t\t\t\tfor ( shapeIndex = minShapeIndex; shapeIndex < shape.length; shapeIndex ++ ) {\r\n\t\r\n\t\t\t\t\t\tshapePt = shape[ shapeIndex ];\r\n\t\t\t\t\t\tholeIndex\t= - 1;\r\n\t\r\n\t\t\t\t\t\t// search for hole which can be reached without intersections\r\n\t\t\t\t\t\tfor ( var h = 0; h < indepHoles.length; h ++ ) {\r\n\t\r\n\t\t\t\t\t\t\tholeIdx = indepHoles[ h ];\r\n\t\r\n\t\t\t\t\t\t\t// prevent multiple checks\r\n\t\t\t\t\t\t\tcutKey = shapePt.x + \":\" + shapePt.y + \":\" + holeIdx;\r\n\t\t\t\t\t\t\tif ( failedCuts[ cutKey ] !== undefined )\t\t\tcontinue;\r\n\t\r\n\t\t\t\t\t\t\thole = holes[ holeIdx ];\r\n\t\t\t\t\t\t\tfor ( var h2 = 0; h2 < hole.length; h2 ++ ) {\r\n\t\r\n\t\t\t\t\t\t\t\tholePt = hole[ h2 ];\r\n\t\t\t\t\t\t\t\tif ( ! isCutLineInsideAngles( shapeIndex, h2 ) )\t\tcontinue;\r\n\t\t\t\t\t\t\t\tif ( intersectsShapeEdge( shapePt, holePt ) )\t\tcontinue;\r\n\t\t\t\t\t\t\t\tif ( intersectsHoleEdge( shapePt, holePt ) )\t\tcontinue;\r\n\t\r\n\t\t\t\t\t\t\t\tholeIndex = h2;\r\n\t\t\t\t\t\t\t\tindepHoles.splice( h, 1 );\r\n\t\r\n\t\t\t\t\t\t\t\ttmpShape1 = shape.slice( 0, shapeIndex + 1 );\r\n\t\t\t\t\t\t\t\ttmpShape2 = shape.slice( shapeIndex );\r\n\t\t\t\t\t\t\t\ttmpHole1 = hole.slice( holeIndex );\r\n\t\t\t\t\t\t\t\ttmpHole2 = hole.slice( 0, holeIndex + 1 );\r\n\t\r\n\t\t\t\t\t\t\t\tshape = tmpShape1.concat( tmpHole1 ).concat( tmpHole2 ).concat( tmpShape2 );\r\n\t\r\n\t\t\t\t\t\t\t\tminShapeIndex = shapeIndex;\r\n\t\r\n\t\t\t\t\t\t\t\t// Debug only, to show the selected cuts\r\n\t\t\t\t\t\t\t\t// glob_CutLines.push( [ shapePt, holePt ] );\r\n\t\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif ( holeIndex >= 0 )\tbreak;\t\t// hole-vertex found\r\n\t\r\n\t\t\t\t\t\t\tfailedCuts[ cutKey ] = true;\t\t\t// remember failure\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif ( holeIndex >= 0 )\tbreak;\t\t// hole-vertex found\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn shape; \t\t\t/* shape with no holes */\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\r\n\t\t\tvar i, il, f, face,\r\n\t\t\t\tkey, index,\r\n\t\t\t\tallPointsMap = {};\r\n\t\r\n\t\t\t// To maintain reference to old shape, one must match coordinates, or offset the indices from original arrays. It's probably easier to do the first.\r\n\t\r\n\t\t\tvar allpoints = contour.concat();\r\n\t\r\n\t\t\tfor ( var h = 0, hl = holes.length; h < hl; h ++ ) {\r\n\t\r\n\t\t\t\tArray.prototype.push.apply( allpoints, holes[ h ] );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t//console.log( \"allpoints\",allpoints, allpoints.length );\r\n\t\r\n\t\t\t// prepare all points map\r\n\t\r\n\t\t\tfor ( i = 0, il = allpoints.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\tkey = allpoints[ i ].x + \":\" + allpoints[ i ].y;\r\n\t\r\n\t\t\t\tif ( allPointsMap[ key ] !== undefined ) {\r\n\t\r\n\t\t\t\t\tconsole.warn( \"THREE.Shape: Duplicate point\", key );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tallPointsMap[ key ] = i;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// remove holes by cutting paths to holes and adding them to the shape\r\n\t\t\tvar shapeWithoutHoles = removeHoles( contour, holes );\r\n\t\r\n\t\t\tvar triangles = THREE.FontUtils.Triangulate( shapeWithoutHoles, false ); // True returns indices for points of spooled shape\r\n\t\t\t//console.log( \"triangles\",triangles, triangles.length );\r\n\t\r\n\t\t\t// check all face vertices against all points map\r\n\t\r\n\t\t\tfor ( i = 0, il = triangles.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\tface = triangles[ i ];\r\n\t\r\n\t\t\t\tfor ( f = 0; f < 3; f ++ ) {\r\n\t\r\n\t\t\t\t\tkey = face[ f ].x + \":\" + face[ f ].y;\r\n\t\r\n\t\t\t\t\tindex = allPointsMap[ key ];\r\n\t\r\n\t\t\t\t\tif ( index !== undefined ) {\r\n\t\r\n\t\t\t\t\t\tface[ f ] = index;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn triangles.concat();\r\n\t\r\n\t\t},\r\n\t\r\n\t\tisClockWise: function ( pts ) {\r\n\t\r\n\t\t\treturn THREE.FontUtils.Triangulate.area( pts ) < 0;\r\n\t\r\n\t\t},\r\n\t\r\n\t\t// Bezier Curves formulas obtained from\r\n\t\t// http://en.wikipedia.org/wiki/B%C3%A9zier_curve\r\n\t\r\n\t\t// Quad Bezier Functions\r\n\t\r\n\t\tb2p0: function ( t, p ) {\r\n\t\r\n\t\t\tvar k = 1 - t;\r\n\t\t\treturn k * k * p;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tb2p1: function ( t, p ) {\r\n\t\r\n\t\t\treturn 2 * ( 1 - t ) * t * p;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tb2p2: function ( t, p ) {\r\n\t\r\n\t\t\treturn t * t * p;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tb2: function ( t, p0, p1, p2 ) {\r\n\t\r\n\t\t\treturn this.b2p0( t, p0 ) + this.b2p1( t, p1 ) + this.b2p2( t, p2 );\r\n\t\r\n\t\t},\r\n\t\r\n\t\t// Cubic Bezier Functions\r\n\t\r\n\t\tb3p0: function ( t, p ) {\r\n\t\r\n\t\t\tvar k = 1 - t;\r\n\t\t\treturn k * k * k * p;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tb3p1: function ( t, p ) {\r\n\t\r\n\t\t\tvar k = 1 - t;\r\n\t\t\treturn 3 * k * k * t * p;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tb3p2: function ( t, p ) {\r\n\t\r\n\t\t\tvar k = 1 - t;\r\n\t\t\treturn 3 * k * t * t * p;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tb3p3: function ( t, p ) {\r\n\t\r\n\t\t\treturn t * t * t * p;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tb3: function ( t, p0, p1, p2, p3 ) {\r\n\t\r\n\t\t\treturn this.b3p0( t, p0 ) + this.b3p1( t, p1 ) + this.b3p2( t, p2 ) +  this.b3p3( t, p3 );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/curves/LineCurve.js\r\n\t\r\n\t/**************************************************************\r\n\t *\tLine\r\n\t **************************************************************/\r\n\t\r\n\tTHREE.LineCurve = function ( v1, v2 ) {\r\n\t\r\n\t\tthis.v1 = v1;\r\n\t\tthis.v2 = v2;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.LineCurve.prototype = Object.create( THREE.Curve.prototype );\r\n\tTHREE.LineCurve.prototype.constructor = THREE.LineCurve;\r\n\t\r\n\tTHREE.LineCurve.prototype.getPoint = function ( t ) {\r\n\t\r\n\t\tvar point = this.v2.clone().sub( this.v1 );\r\n\t\tpoint.multiplyScalar( t ).add( this.v1 );\r\n\t\r\n\t\treturn point;\r\n\t\r\n\t};\r\n\t\r\n\t// Line curve is linear, so we can overwrite default getPointAt\r\n\t\r\n\tTHREE.LineCurve.prototype.getPointAt = function ( u ) {\r\n\t\r\n\t\treturn this.getPoint( u );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.LineCurve.prototype.getTangent = function( t ) {\r\n\t\r\n\t\tvar tangent = this.v2.clone().sub( this.v1 );\r\n\t\r\n\t\treturn tangent.normalize();\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/curves/QuadraticBezierCurve.js\r\n\t\r\n\t/**************************************************************\r\n\t *\tQuadratic Bezier curve\r\n\t **************************************************************/\r\n\t\r\n\t\r\n\tTHREE.QuadraticBezierCurve = function ( v0, v1, v2 ) {\r\n\t\r\n\t\tthis.v0 = v0;\r\n\t\tthis.v1 = v1;\r\n\t\tthis.v2 = v2;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.QuadraticBezierCurve.prototype = Object.create( THREE.Curve.prototype );\r\n\tTHREE.QuadraticBezierCurve.prototype.constructor = THREE.QuadraticBezierCurve;\r\n\t\r\n\t\r\n\tTHREE.QuadraticBezierCurve.prototype.getPoint = function ( t ) {\r\n\t\r\n\t\tvar vector = new THREE.Vector2();\r\n\t\r\n\t\tvector.x = THREE.Shape.Utils.b2( t, this.v0.x, this.v1.x, this.v2.x );\r\n\t\tvector.y = THREE.Shape.Utils.b2( t, this.v0.y, this.v1.y, this.v2.y );\r\n\t\r\n\t\treturn vector;\r\n\t\r\n\t};\r\n\t\r\n\t\r\n\tTHREE.QuadraticBezierCurve.prototype.getTangent = function( t ) {\r\n\t\r\n\t\tvar vector = new THREE.Vector2();\r\n\t\r\n\t\tvector.x = THREE.Curve.Utils.tangentQuadraticBezier( t, this.v0.x, this.v1.x, this.v2.x );\r\n\t\tvector.y = THREE.Curve.Utils.tangentQuadraticBezier( t, this.v0.y, this.v1.y, this.v2.y );\r\n\t\r\n\t\t// returns unit vector\r\n\t\r\n\t\treturn vector.normalize();\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/curves/CubicBezierCurve.js\r\n\t\r\n\t/**************************************************************\r\n\t *\tCubic Bezier curve\r\n\t **************************************************************/\r\n\t\r\n\tTHREE.CubicBezierCurve = function ( v0, v1, v2, v3 ) {\r\n\t\r\n\t\tthis.v0 = v0;\r\n\t\tthis.v1 = v1;\r\n\t\tthis.v2 = v2;\r\n\t\tthis.v3 = v3;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.CubicBezierCurve.prototype = Object.create( THREE.Curve.prototype );\r\n\tTHREE.CubicBezierCurve.prototype.constructor = THREE.CubicBezierCurve;\r\n\t\r\n\tTHREE.CubicBezierCurve.prototype.getPoint = function ( t ) {\r\n\t\r\n\t\tvar tx, ty;\r\n\t\r\n\t\ttx = THREE.Shape.Utils.b3( t, this.v0.x, this.v1.x, this.v2.x, this.v3.x );\r\n\t\tty = THREE.Shape.Utils.b3( t, this.v0.y, this.v1.y, this.v2.y, this.v3.y );\r\n\t\r\n\t\treturn new THREE.Vector2( tx, ty );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.CubicBezierCurve.prototype.getTangent = function( t ) {\r\n\t\r\n\t\tvar tx, ty;\r\n\t\r\n\t\ttx = THREE.Curve.Utils.tangentCubicBezier( t, this.v0.x, this.v1.x, this.v2.x, this.v3.x );\r\n\t\tty = THREE.Curve.Utils.tangentCubicBezier( t, this.v0.y, this.v1.y, this.v2.y, this.v3.y );\r\n\t\r\n\t\tvar tangent = new THREE.Vector2( tx, ty );\r\n\t\ttangent.normalize();\r\n\t\r\n\t\treturn tangent;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/curves/SplineCurve.js\r\n\t\r\n\t/**************************************************************\r\n\t *\tSpline curve\r\n\t **************************************************************/\r\n\t\r\n\tTHREE.SplineCurve = function ( points /* array of Vector2 */ ) {\r\n\t\r\n\t\tthis.points = ( points == undefined ) ? [] : points;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.SplineCurve.prototype = Object.create( THREE.Curve.prototype );\r\n\tTHREE.SplineCurve.prototype.constructor = THREE.SplineCurve;\r\n\t\r\n\tTHREE.SplineCurve.prototype.getPoint = function ( t ) {\r\n\t\r\n\t\tvar points = this.points;\r\n\t\tvar point = ( points.length - 1 ) * t;\r\n\t\r\n\t\tvar intPoint = Math.floor( point );\r\n\t\tvar weight = point - intPoint;\r\n\t\r\n\t\tvar point0 = points[ intPoint === 0 ? intPoint : intPoint - 1 ];\r\n\t\tvar point1 = points[ intPoint ];\r\n\t\tvar point2 = points[ intPoint > points.length - 2 ? points.length - 1 : intPoint + 1 ];\r\n\t\tvar point3 = points[ intPoint > points.length - 3 ? points.length - 1 : intPoint + 2 ];\r\n\t\r\n\t\tvar vector = new THREE.Vector2();\r\n\t\r\n\t\tvector.x = THREE.Curve.Utils.interpolate( point0.x, point1.x, point2.x, point3.x, weight );\r\n\t\tvector.y = THREE.Curve.Utils.interpolate( point0.y, point1.y, point2.y, point3.y, weight );\r\n\t\r\n\t\treturn vector;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/curves/EllipseCurve.js\r\n\t\r\n\t/**************************************************************\r\n\t *\tEllipse curve\r\n\t **************************************************************/\r\n\t\r\n\tTHREE.EllipseCurve = function ( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\r\n\t\r\n\t\tthis.aX = aX;\r\n\t\tthis.aY = aY;\r\n\t\r\n\t\tthis.xRadius = xRadius;\r\n\t\tthis.yRadius = yRadius;\r\n\t\r\n\t\tthis.aStartAngle = aStartAngle;\r\n\t\tthis.aEndAngle = aEndAngle;\r\n\t\r\n\t\tthis.aClockwise = aClockwise;\r\n\t\t\r\n\t\tthis.aRotation = aRotation || 0;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.EllipseCurve.prototype = Object.create( THREE.Curve.prototype );\r\n\tTHREE.EllipseCurve.prototype.constructor = THREE.EllipseCurve;\r\n\t\r\n\tTHREE.EllipseCurve.prototype.getPoint = function ( t ) {\r\n\t\r\n\t\tvar deltaAngle = this.aEndAngle - this.aStartAngle;\r\n\t\r\n\t\tif ( deltaAngle < 0 ) deltaAngle += Math.PI * 2;\r\n\t\tif ( deltaAngle > Math.PI * 2 ) deltaAngle -= Math.PI * 2;\r\n\t\r\n\t\tvar angle;\r\n\t\r\n\t\tif ( this.aClockwise === true ) {\r\n\t\r\n\t\t\tangle = this.aEndAngle + ( 1 - t ) * ( Math.PI * 2 - deltaAngle );\r\n\t\r\n\t\t} else {\r\n\t\r\n\t\t\tangle = this.aStartAngle + t * deltaAngle;\r\n\t\r\n\t\t}\r\n\t\t\r\n\t\tvar x = this.aX + this.xRadius * Math.cos( angle );\r\n\t\tvar y = this.aY + this.yRadius * Math.sin( angle );\r\n\t\r\n\t\tif ( this.aRotation !== 0 ) {\r\n\t\r\n\t\t\tvar cos = Math.cos( this.aRotation );\r\n\t\t\tvar sin = Math.sin( this.aRotation );\r\n\t\r\n\t\t\tvar tx = x, ty = y;\r\n\t\r\n\t\t\t// Rotate the point about the center of the ellipse.\r\n\t\t\tx = ( tx - this.aX ) * cos - ( ty - this.aY ) * sin + this.aX;\r\n\t\t\ty = ( tx - this.aX ) * sin + ( ty - this.aY ) * cos + this.aY;\r\n\t\r\n\t\t}\r\n\t\r\n\t\treturn new THREE.Vector2( x, y );\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/curves/ArcCurve.js\r\n\t\r\n\t/**************************************************************\r\n\t *\tArc curve\r\n\t **************************************************************/\r\n\t\r\n\tTHREE.ArcCurve = function ( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\r\n\t\r\n\t\tTHREE.EllipseCurve.call( this, aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.ArcCurve.prototype = Object.create( THREE.EllipseCurve.prototype );\r\n\tTHREE.ArcCurve.prototype.constructor = THREE.ArcCurve;\r\n\t\r\n\t// File:src/extras/curves/LineCurve3.js\r\n\t\r\n\t/**************************************************************\r\n\t *\tLine3D\r\n\t **************************************************************/\r\n\t\r\n\tTHREE.LineCurve3 = THREE.Curve.create(\r\n\t\r\n\t\tfunction ( v1, v2 ) {\r\n\t\r\n\t\t\tthis.v1 = v1;\r\n\t\t\tthis.v2 = v2;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tfunction ( t ) {\r\n\t\r\n\t\t\tvar vector = new THREE.Vector3();\r\n\t\r\n\t\t\tvector.subVectors( this.v2, this.v1 ); // diff\r\n\t\t\tvector.multiplyScalar( t );\r\n\t\t\tvector.add( this.v1 );\r\n\t\r\n\t\t\treturn vector;\r\n\t\r\n\t\t}\r\n\t\r\n\t);\r\n\t\r\n\t// File:src/extras/curves/QuadraticBezierCurve3.js\r\n\t\r\n\t/**************************************************************\r\n\t *\tQuadratic Bezier 3D curve\r\n\t **************************************************************/\r\n\t\r\n\tTHREE.QuadraticBezierCurve3 = THREE.Curve.create(\r\n\t\r\n\t\tfunction ( v0, v1, v2 ) {\r\n\t\r\n\t\t\tthis.v0 = v0;\r\n\t\t\tthis.v1 = v1;\r\n\t\t\tthis.v2 = v2;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tfunction ( t ) {\r\n\t\r\n\t\t\tvar vector = new THREE.Vector3();\r\n\t\r\n\t\t\tvector.x = THREE.Shape.Utils.b2( t, this.v0.x, this.v1.x, this.v2.x );\r\n\t\t\tvector.y = THREE.Shape.Utils.b2( t, this.v0.y, this.v1.y, this.v2.y );\r\n\t\t\tvector.z = THREE.Shape.Utils.b2( t, this.v0.z, this.v1.z, this.v2.z );\r\n\t\r\n\t\t\treturn vector;\r\n\t\r\n\t\t}\r\n\t\r\n\t);\r\n\t\r\n\t// File:src/extras/curves/CubicBezierCurve3.js\r\n\t\r\n\t/**************************************************************\r\n\t *\tCubic Bezier 3D curve\r\n\t **************************************************************/\r\n\t\r\n\tTHREE.CubicBezierCurve3 = THREE.Curve.create(\r\n\t\r\n\t\tfunction ( v0, v1, v2, v3 ) {\r\n\t\r\n\t\t\tthis.v0 = v0;\r\n\t\t\tthis.v1 = v1;\r\n\t\t\tthis.v2 = v2;\r\n\t\t\tthis.v3 = v3;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tfunction ( t ) {\r\n\t\r\n\t\t\tvar vector = new THREE.Vector3();\r\n\t\r\n\t\t\tvector.x = THREE.Shape.Utils.b3( t, this.v0.x, this.v1.x, this.v2.x, this.v3.x );\r\n\t\t\tvector.y = THREE.Shape.Utils.b3( t, this.v0.y, this.v1.y, this.v2.y, this.v3.y );\r\n\t\t\tvector.z = THREE.Shape.Utils.b3( t, this.v0.z, this.v1.z, this.v2.z, this.v3.z );\r\n\t\r\n\t\t\treturn vector;\r\n\t\r\n\t\t}\r\n\t\r\n\t);\r\n\t\r\n\t// File:src/extras/curves/SplineCurve3.js\r\n\t\r\n\t/**************************************************************\r\n\t *\tSpline 3D curve\r\n\t **************************************************************/\r\n\t\r\n\t\r\n\tTHREE.SplineCurve3 = THREE.Curve.create(\r\n\t\r\n\t\tfunction ( points /* array of Vector3 */ ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.SplineCurve3 will be deprecated. Please use THREE.CatmullRomCurve3' );\r\n\t\t\tthis.points = ( points == undefined ) ? [] : points;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tfunction ( t ) {\r\n\t\r\n\t\t\tvar points = this.points;\r\n\t\t\tvar point = ( points.length - 1 ) * t;\r\n\t\r\n\t\t\tvar intPoint = Math.floor( point );\r\n\t\t\tvar weight = point - intPoint;\r\n\t\r\n\t\t\tvar point0 = points[ intPoint == 0 ? intPoint : intPoint - 1 ];\r\n\t\t\tvar point1 = points[ intPoint ];\r\n\t\t\tvar point2 = points[ intPoint > points.length - 2 ? points.length - 1 : intPoint + 1 ];\r\n\t\t\tvar point3 = points[ intPoint > points.length - 3 ? points.length - 1 : intPoint + 2 ];\r\n\t\r\n\t\t\tvar vector = new THREE.Vector3();\r\n\t\r\n\t\t\tvector.x = THREE.Curve.Utils.interpolate( point0.x, point1.x, point2.x, point3.x, weight );\r\n\t\t\tvector.y = THREE.Curve.Utils.interpolate( point0.y, point1.y, point2.y, point3.y, weight );\r\n\t\t\tvector.z = THREE.Curve.Utils.interpolate( point0.z, point1.z, point2.z, point3.z, weight );\r\n\t\r\n\t\t\treturn vector;\r\n\t\r\n\t\t}\r\n\t\r\n\t);\r\n\t\r\n\t// File:src/extras/curves/CatmullRomCurve3.js\r\n\t\r\n\t/**\r\n\t * @author zz85 https://github.com/zz85\r\n\t *\r\n\t * Centripetal CatmullRom Curve - which is useful for avoiding\r\n\t * cusps and self-intersections in non-uniform catmull rom curves.\r\n\t * http://www.cemyuksel.com/research/catmullrom_param/catmullrom.pdf\r\n\t *\r\n\t * curve.type accepts centripetal(default), chordal and catmullrom\r\n\t * curve.tension is used for catmullrom which defaults to 0.5\r\n\t */\r\n\t\r\n\tTHREE.CatmullRomCurve3 = ( function() {\r\n\t\r\n\t\tvar\r\n\t\t\ttmp = new THREE.Vector3(),\r\n\t\t\tpx = new CubicPoly(),\r\n\t\t\tpy = new CubicPoly(),\r\n\t\t\tpz = new CubicPoly();\r\n\t\r\n\t\t/*\r\n\t\tBased on an optimized c++ solution in\r\n\t\t - http://stackoverflow.com/questions/9489736/catmull-rom-curve-with-no-cusps-and-no-self-intersections/\r\n\t\t - http://ideone.com/NoEbVM\r\n\t\r\n\t\tThis CubicPoly class could be used for reusing some variables and calculations,\r\n\t\tbut for three.js curve use, it could be possible inlined and flatten into a single function call\r\n\t\twhich can be placed in CurveUtils.\r\n\t\t*/\r\n\t\r\n\t\tfunction CubicPoly() {\r\n\t\r\n\t\t}\r\n\t\r\n\t\t/*\r\n\t\t * Compute coefficients for a cubic polynomial\r\n\t\t *   p(s) = c0 + c1*s + c2*s^2 + c3*s^3\r\n\t\t * such that\r\n\t\t *   p(0) = x0, p(1) = x1\r\n\t\t *  and\r\n\t\t *   p'(0) = t0, p'(1) = t1.\r\n\t\t */\r\n\t\tCubicPoly.prototype.init = function( x0, x1, t0, t1 ) {\r\n\t\r\n\t\t\tthis.c0 = x0;\r\n\t\t\tthis.c1 = t0;\r\n\t\t\tthis.c2 = - 3 * x0 + 3 * x1 - 2 * t0 - t1;\r\n\t\t\tthis.c3 = 2 * x0 - 2 * x1 + t0 + t1;\r\n\t\r\n\t\t};\r\n\t\r\n\t\tCubicPoly.prototype.initNonuniformCatmullRom = function( x0, x1, x2, x3, dt0, dt1, dt2 ) {\r\n\t\r\n\t\t\t// compute tangents when parameterized in [t1,t2]\r\n\t\t\tvar t1 = ( x1 - x0 ) / dt0 - ( x2 - x0 ) / ( dt0 + dt1 ) + ( x2 - x1 ) / dt1;\r\n\t\t\tvar t2 = ( x2 - x1 ) / dt1 - ( x3 - x1 ) / ( dt1 + dt2 ) + ( x3 - x2 ) / dt2;\r\n\t\r\n\t\t\t// rescale tangents for parametrization in [0,1]\r\n\t\t\tt1 *= dt1;\r\n\t\t\tt2 *= dt1;\r\n\t\r\n\t\t\t// initCubicPoly\r\n\t\t\tthis.init( x1, x2, t1, t2 );\r\n\t\r\n\t\t};\r\n\t\r\n\t\t// standard Catmull-Rom spline: interpolate between x1 and x2 with previous/following points x1/x4\r\n\t\tCubicPoly.prototype.initCatmullRom = function( x0, x1, x2, x3, tension ) {\r\n\t\r\n\t\t\tthis.init( x1, x2, tension * ( x2 - x0 ), tension * ( x3 - x1 ) );\r\n\t\r\n\t\t};\r\n\t\r\n\t\tCubicPoly.prototype.calc = function( t ) {\r\n\t\r\n\t\t\tvar t2 = t * t;\r\n\t\t\tvar t3 = t2 * t;\r\n\t\t\treturn this.c0 + this.c1 * t + this.c2 * t2 + this.c3 * t3;\r\n\t\r\n\t\t};\r\n\t\r\n\t\t// Subclass Three.js curve\r\n\t\treturn THREE.Curve.create(\r\n\t\r\n\t\t\tfunction ( p /* array of Vector3 */ ) {\r\n\t\r\n\t\t\t\tthis.points = p || [];\r\n\t\r\n\t\t\t},\r\n\t\r\n\t\t\tfunction ( t ) {\r\n\t\r\n\t\t\t\tvar points = this.points,\r\n\t\t\t\t\tpoint, intPoint, weight, l;\r\n\t\r\n\t\t\t\tl = points.length;\r\n\t\r\n\t\t\t\tif ( l < 2 ) console.log( 'duh, you need at least 2 points' );\r\n\t\r\n\t\t\t\tpoint = ( l - 1 ) * t;\r\n\t\t\t\tintPoint = Math.floor( point );\r\n\t\t\t\tweight = point - intPoint;\r\n\t\r\n\t\t\t\tif ( weight === 0 && intPoint === l - 1 ) {\r\n\t\r\n\t\t\t\t\tintPoint = l - 2;\r\n\t\t\t\t\tweight = 1;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar p0, p1, p2, p3;\r\n\t\r\n\t\t\t\tif ( intPoint === 0 ) {\r\n\t\r\n\t\t\t\t\t// extrapolate first point\r\n\t\t\t\t\ttmp.subVectors( points[ 0 ], points[ 1 ] ).add( points[ 0 ] );\r\n\t\t\t\t\tp0 = tmp;\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tp0 = points[ intPoint - 1 ];\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tp1 = points[ intPoint ];\r\n\t\t\t\tp2 = points[ intPoint + 1 ];\r\n\t\r\n\t\t\t\tif ( intPoint + 2 < l ) {\r\n\t\r\n\t\t\t\t\tp3 = points[ intPoint + 2 ]\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t// extrapolate last point\r\n\t\t\t\t\ttmp.subVectors( points[ l - 1 ], points[ l - 2 ] ).add( points[ l - 2 ] );\r\n\t\t\t\t\tp3 = tmp;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( this.type === undefined || this.type === 'centripetal' || this.type === 'chordal' ) {\r\n\t\r\n\t\t\t\t\t// init Centripetal / Chordal Catmull-Rom\r\n\t\t\t\t\tvar pow = this.type === 'chordal' ? 0.5 : 0.25;\r\n\t\t\t\t\tvar dt0 = Math.pow( p0.distanceToSquared( p1 ), pow );\r\n\t\t\t\t\tvar dt1 = Math.pow( p1.distanceToSquared( p2 ), pow );\r\n\t\t\t\t\tvar dt2 = Math.pow( p2.distanceToSquared( p3 ), pow );\r\n\t\r\n\t\t\t\t\t// safety check for repeated points\r\n\t\t\t\t\tif ( dt1 < 1e-4 ) dt1 = 1.0;\r\n\t\t\t\t\tif ( dt0 < 1e-4 ) dt0 = dt1;\r\n\t\t\t\t\tif ( dt2 < 1e-4 ) dt2 = dt1;\r\n\t\r\n\t\t\t\t\tpx.initNonuniformCatmullRom( p0.x, p1.x, p2.x, p3.x, dt0, dt1, dt2 );\r\n\t\t\t\t\tpy.initNonuniformCatmullRom( p0.y, p1.y, p2.y, p3.y, dt0, dt1, dt2 );\r\n\t\t\t\t\tpz.initNonuniformCatmullRom( p0.z, p1.z, p2.z, p3.z, dt0, dt1, dt2 );\r\n\t\r\n\t\t\t\t} else if ( this.type === 'catmullrom' ) {\r\n\t\r\n\t\t\t\t\tvar tension = this.tension !== undefined ? this.tension : 0.5;\r\n\t\t\t\t\tpx.initCatmullRom( p0.x, p1.x, p2.x, p3.x, tension );\r\n\t\t\t\t\tpy.initCatmullRom( p0.y, p1.y, p2.y, p3.y, tension );\r\n\t\t\t\t\tpz.initCatmullRom( p0.z, p1.z, p2.z, p3.z, tension );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar v = new THREE.Vector3(\r\n\t\t\t\t\tpx.calc( weight ),\r\n\t\t\t\t\tpy.calc( weight ),\r\n\t\t\t\t\tpz.calc( weight )\r\n\t\t\t\t);\r\n\t\r\n\t\t\t\treturn v;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t);\r\n\t\r\n\t} )();\r\n\t\r\n\t// File:src/extras/curves/ClosedSplineCurve3.js\r\n\t\r\n\t/**************************************************************\r\n\t *\tClosed Spline 3D curve\r\n\t **************************************************************/\r\n\t\r\n\t\r\n\tTHREE.ClosedSplineCurve3 = THREE.Curve.create(\r\n\t\r\n\t\tfunction ( points /* array of Vector3 */ ) {\r\n\t\r\n\t\t\tthis.points = ( points == undefined ) ? [] : points;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tfunction ( t ) {\r\n\t\r\n\t\t\tvar points = this.points;\r\n\t\t\tvar point = ( points.length - 0 ) * t; // This needs to be from 0-length +1\r\n\t\r\n\t\t\tvar intPoint = Math.floor( point );\r\n\t\t\tvar weight = point - intPoint;\r\n\t\r\n\t\t\tintPoint += intPoint > 0 ? 0 : ( Math.floor( Math.abs( intPoint ) / points.length ) + 1 ) * points.length;\r\n\t\r\n\t\t\tvar point0 = points[ ( intPoint - 1 ) % points.length ];\r\n\t\t\tvar point1 = points[ ( intPoint     ) % points.length ];\r\n\t\t\tvar point2 = points[ ( intPoint + 1 ) % points.length ];\r\n\t\t\tvar point3 = points[ ( intPoint + 2 ) % points.length ];\r\n\t\r\n\t\t\tvar vector = new THREE.Vector3();\r\n\t\r\n\t\t\tvector.x = THREE.Curve.Utils.interpolate( point0.x, point1.x, point2.x, point3.x, weight );\r\n\t\t\tvector.y = THREE.Curve.Utils.interpolate( point0.y, point1.y, point2.y, point3.y, weight );\r\n\t\t\tvector.z = THREE.Curve.Utils.interpolate( point0.z, point1.z, point2.z, point3.z, weight );\r\n\t\r\n\t\t\treturn vector;\r\n\t\r\n\t\t}\r\n\t\r\n\t);\r\n\t\r\n\t// File:src/extras/animation/AnimationHandler.js\r\n\t\r\n\t/**\r\n\t * @author mikael emtinger / http://gomo.se/\r\n\t */\r\n\t\r\n\tTHREE.AnimationHandler = {\r\n\t\r\n\t\tLINEAR: 0,\r\n\t\tCATMULLROM: 1,\r\n\t\tCATMULLROM_FORWARD: 2,\r\n\t\r\n\t\t//\r\n\t\r\n\t\tadd: function () {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.AnimationHandler.add() has been deprecated.' );\r\n\t\r\n\t\t},\r\n\t\tget: function () {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.AnimationHandler.get() has been deprecated.' );\r\n\t\r\n\t\t},\r\n\t\tremove: function () {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.AnimationHandler.remove() has been deprecated.' );\r\n\t\r\n\t\t},\r\n\t\r\n\t\t//\r\n\t\r\n\t\tanimations: [],\r\n\t\r\n\t\tinit: function ( data ) {\r\n\t\r\n\t\t\tif ( data.initialized === true ) return data;\r\n\t\r\n\t\t\t// loop through all keys\r\n\t\r\n\t\t\tfor ( var h = 0; h < data.hierarchy.length; h ++ ) {\r\n\t\r\n\t\t\t\tfor ( var k = 0; k < data.hierarchy[ h ].keys.length; k ++ ) {\r\n\t\r\n\t\t\t\t\t// remove minus times\r\n\t\r\n\t\t\t\t\tif ( data.hierarchy[ h ].keys[ k ].time < 0 ) {\r\n\t\r\n\t\t\t\t\t\t data.hierarchy[ h ].keys[ k ].time = 0;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t// create quaternions\r\n\t\r\n\t\t\t\t\tif ( data.hierarchy[ h ].keys[ k ].rot !== undefined &&\r\n\t\t\t\t\t  ! ( data.hierarchy[ h ].keys[ k ].rot instanceof THREE.Quaternion ) ) {\r\n\t\r\n\t\t\t\t\t\tvar quat = data.hierarchy[ h ].keys[ k ].rot;\r\n\t\t\t\t\t\tdata.hierarchy[ h ].keys[ k ].rot = new THREE.Quaternion().fromArray( quat );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// prepare morph target keys\r\n\t\r\n\t\t\t\tif ( data.hierarchy[ h ].keys.length && data.hierarchy[ h ].keys[ 0 ].morphTargets !== undefined ) {\r\n\t\r\n\t\t\t\t\t// get all used\r\n\t\r\n\t\t\t\t\tvar usedMorphTargets = {};\r\n\t\r\n\t\t\t\t\tfor ( var k = 0; k < data.hierarchy[ h ].keys.length; k ++ ) {\r\n\t\r\n\t\t\t\t\t\tfor ( var m = 0; m < data.hierarchy[ h ].keys[ k ].morphTargets.length; m ++ ) {\r\n\t\r\n\t\t\t\t\t\t\tvar morphTargetName = data.hierarchy[ h ].keys[ k ].morphTargets[ m ];\r\n\t\t\t\t\t\t\tusedMorphTargets[ morphTargetName ] = - 1;\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tdata.hierarchy[ h ].usedMorphTargets = usedMorphTargets;\r\n\t\r\n\t\r\n\t\t\t\t\t// set all used on all frames\r\n\t\r\n\t\t\t\t\tfor ( var k = 0; k < data.hierarchy[ h ].keys.length; k ++ ) {\r\n\t\r\n\t\t\t\t\t\tvar influences = {};\r\n\t\r\n\t\t\t\t\t\tfor ( var morphTargetName in usedMorphTargets ) {\r\n\t\r\n\t\t\t\t\t\t\tfor ( var m = 0; m < data.hierarchy[ h ].keys[ k ].morphTargets.length; m ++ ) {\r\n\t\r\n\t\t\t\t\t\t\t\tif ( data.hierarchy[ h ].keys[ k ].morphTargets[ m ] === morphTargetName ) {\r\n\t\r\n\t\t\t\t\t\t\t\t\tinfluences[ morphTargetName ] = data.hierarchy[ h ].keys[ k ].morphTargetsInfluences[ m ];\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t\tif ( m === data.hierarchy[ h ].keys[ k ].morphTargets.length ) {\r\n\t\r\n\t\t\t\t\t\t\t\tinfluences[ morphTargetName ] = 0;\r\n\t\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tdata.hierarchy[ h ].keys[ k ].morphTargetsInfluences = influences;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\r\n\t\t\t\t// remove all keys that are on the same time\r\n\t\r\n\t\t\t\tfor ( var k = 1; k < data.hierarchy[ h ].keys.length; k ++ ) {\r\n\t\r\n\t\t\t\t\tif ( data.hierarchy[ h ].keys[ k ].time === data.hierarchy[ h ].keys[ k - 1 ].time ) {\r\n\t\r\n\t\t\t\t\t\tdata.hierarchy[ h ].keys.splice( k, 1 );\r\n\t\t\t\t\t\tk --;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\r\n\t\t\t\t// set index\r\n\t\r\n\t\t\t\tfor ( var k = 0; k < data.hierarchy[ h ].keys.length; k ++ ) {\r\n\t\r\n\t\t\t\t\tdata.hierarchy[ h ].keys[ k ].index = k;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tdata.initialized = true;\r\n\t\r\n\t\t\treturn data;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tparse: function ( root ) {\r\n\t\r\n\t\t\tvar parseRecurseHierarchy = function ( root, hierarchy ) {\r\n\t\r\n\t\t\t\thierarchy.push( root );\r\n\t\r\n\t\t\t\tfor ( var c = 0; c < root.children.length; c ++ )\r\n\t\t\t\t\tparseRecurseHierarchy( root.children[ c ], hierarchy );\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t\t// setup hierarchy\r\n\t\r\n\t\t\tvar hierarchy = [];\r\n\t\r\n\t\t\tif ( root instanceof THREE.SkinnedMesh ) {\r\n\t\r\n\t\t\t\tfor ( var b = 0; b < root.skeleton.bones.length; b ++ ) {\r\n\t\r\n\t\t\t\t\thierarchy.push( root.skeleton.bones[ b ] );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tparseRecurseHierarchy( root, hierarchy );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn hierarchy;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tplay: function ( animation ) {\r\n\t\r\n\t\t\tif ( this.animations.indexOf( animation ) === - 1 ) {\r\n\t\r\n\t\t\t\tthis.animations.push( animation );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\tstop: function ( animation ) {\r\n\t\r\n\t\t\tvar index = this.animations.indexOf( animation );\r\n\t\r\n\t\t\tif ( index !== - 1 ) {\r\n\t\r\n\t\t\t\tthis.animations.splice( index, 1 );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\tupdate: function ( deltaTimeMS ) {\r\n\t\r\n\t\t\tfor ( var i = 0; i < this.animations.length; i ++ ) {\r\n\t\r\n\t\t\t\tthis.animations[ i ].resetBlendWeights();\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tfor ( var i = 0; i < this.animations.length; i ++ ) {\r\n\t\r\n\t\t\t\tthis.animations[ i ].update( deltaTimeMS );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/animation/Animation.js\r\n\t\r\n\t/**\r\n\t * @author mikael emtinger / http://gomo.se/\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\t\r\n\tTHREE.Animation = function ( root, data ) {\r\n\t\r\n\t\tthis.root = root;\r\n\t\tthis.data = THREE.AnimationHandler.init( data );\r\n\t\tthis.hierarchy = THREE.AnimationHandler.parse( root );\r\n\t\r\n\t\tthis.currentTime = 0;\r\n\t\tthis.timeScale = 1;\r\n\t\r\n\t\tthis.isPlaying = false;\r\n\t\tthis.loop = true;\r\n\t\tthis.weight = 0;\r\n\t\r\n\t\tthis.interpolationType = THREE.AnimationHandler.LINEAR;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Animation.prototype = {\r\n\t\r\n\t\tconstructor: THREE.Animation,\r\n\t\r\n\t\tkeyTypes:  [ \"pos\", \"rot\", \"scl\" ],\r\n\t\r\n\t\tplay: function ( startTime, weight ) {\r\n\t\r\n\t\t\tthis.currentTime = startTime !== undefined ? startTime : 0;\r\n\t\t\tthis.weight = weight !== undefined ? weight : 1;\r\n\t\r\n\t\t\tthis.isPlaying = true;\r\n\t\r\n\t\t\tthis.reset();\r\n\t\r\n\t\t\tTHREE.AnimationHandler.play( this );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tstop: function() {\r\n\t\r\n\t\t\tthis.isPlaying = false;\r\n\t\r\n\t\t\tTHREE.AnimationHandler.stop( this );\r\n\t\r\n\t\t},\r\n\t\r\n\t\treset: function () {\r\n\t\r\n\t\t\tfor ( var h = 0, hl = this.hierarchy.length; h < hl; h ++ ) {\r\n\t\r\n\t\t\t\tvar object = this.hierarchy[ h ];\r\n\t\r\n\t\t\t\tif ( object.animationCache === undefined ) {\r\n\t\r\n\t\t\t\t\tobject.animationCache = {\r\n\t\t\t\t\t\tanimations: {},\r\n\t\t\t\t\t\tblending: {\r\n\t\t\t\t\t\t\tpositionWeight: 0.0,\r\n\t\t\t\t\t\t\tquaternionWeight: 0.0,\r\n\t\t\t\t\t\t\tscaleWeight: 0.0\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t};\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar name = this.data.name;\r\n\t\t\t\tvar animations = object.animationCache.animations;\r\n\t\t\t\tvar animationCache = animations[ name ];\r\n\t\r\n\t\t\t\tif ( animationCache === undefined ) {\r\n\t\r\n\t\t\t\t\tanimationCache = {\r\n\t\t\t\t\t\tprevKey: { pos: 0, rot: 0, scl: 0 },\r\n\t\t\t\t\t\tnextKey: { pos: 0, rot: 0, scl: 0 },\r\n\t\t\t\t\t\toriginalMatrix: object.matrix\r\n\t\t\t\t\t};\r\n\t\r\n\t\t\t\t\tanimations[ name ] = animationCache;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// Get keys to match our current time\r\n\t\r\n\t\t\t\tfor ( var t = 0; t < 3; t ++ ) {\r\n\t\r\n\t\t\t\t\tvar type = this.keyTypes[ t ];\r\n\t\r\n\t\t\t\t\tvar prevKey = this.data.hierarchy[ h ].keys[ 0 ];\r\n\t\t\t\t\tvar nextKey = this.getNextKeyWith( type, h, 1 );\r\n\t\r\n\t\t\t\t\twhile ( nextKey.time < this.currentTime && nextKey.index > prevKey.index ) {\r\n\t\r\n\t\t\t\t\t\tprevKey = nextKey;\r\n\t\t\t\t\t\tnextKey = this.getNextKeyWith( type, h, nextKey.index + 1 );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tanimationCache.prevKey[ type ] = prevKey;\r\n\t\t\t\t\tanimationCache.nextKey[ type ] = nextKey;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\tresetBlendWeights: function () {\r\n\t\r\n\t\t\tfor ( var h = 0, hl = this.hierarchy.length; h < hl; h ++ ) {\r\n\t\r\n\t\t\t\tvar object = this.hierarchy[ h ];\r\n\t\t\t\tvar animationCache = object.animationCache;\r\n\t\r\n\t\t\t\tif ( animationCache !== undefined ) {\r\n\t\r\n\t\t\t\t\tvar blending = animationCache.blending;\r\n\t\r\n\t\t\t\t\tblending.positionWeight = 0.0;\r\n\t\t\t\t\tblending.quaternionWeight = 0.0;\r\n\t\t\t\t\tblending.scaleWeight = 0.0;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\tupdate: ( function() {\r\n\t\r\n\t\t\tvar points = [];\r\n\t\t\tvar target = new THREE.Vector3();\r\n\t\t\tvar newVector = new THREE.Vector3();\r\n\t\t\tvar newQuat = new THREE.Quaternion();\r\n\t\r\n\t\t\t// Catmull-Rom spline\r\n\t\r\n\t\t\tvar interpolateCatmullRom = function ( points, scale ) {\r\n\t\r\n\t\t\t\tvar c = [], v3 = [],\r\n\t\t\t\tpoint, intPoint, weight, w2, w3,\r\n\t\t\t\tpa, pb, pc, pd;\r\n\t\r\n\t\t\t\tpoint = ( points.length - 1 ) * scale;\r\n\t\t\t\tintPoint = Math.floor( point );\r\n\t\t\t\tweight = point - intPoint;\r\n\t\r\n\t\t\t\tc[ 0 ] = intPoint === 0 ? intPoint : intPoint - 1;\r\n\t\t\t\tc[ 1 ] = intPoint;\r\n\t\t\t\tc[ 2 ] = intPoint > points.length - 2 ? intPoint : intPoint + 1;\r\n\t\t\t\tc[ 3 ] = intPoint > points.length - 3 ? intPoint : intPoint + 2;\r\n\t\r\n\t\t\t\tpa = points[ c[ 0 ] ];\r\n\t\t\t\tpb = points[ c[ 1 ] ];\r\n\t\t\t\tpc = points[ c[ 2 ] ];\r\n\t\t\t\tpd = points[ c[ 3 ] ];\r\n\t\r\n\t\t\t\tw2 = weight * weight;\r\n\t\t\t\tw3 = weight * w2;\r\n\t\r\n\t\t\t\tv3[ 0 ] = interpolate( pa[ 0 ], pb[ 0 ], pc[ 0 ], pd[ 0 ], weight, w2, w3 );\r\n\t\t\t\tv3[ 1 ] = interpolate( pa[ 1 ], pb[ 1 ], pc[ 1 ], pd[ 1 ], weight, w2, w3 );\r\n\t\t\t\tv3[ 2 ] = interpolate( pa[ 2 ], pb[ 2 ], pc[ 2 ], pd[ 2 ], weight, w2, w3 );\r\n\t\r\n\t\t\t\treturn v3;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t\tvar interpolate = function ( p0, p1, p2, p3, t, t2, t3 ) {\r\n\t\r\n\t\t\t\tvar v0 = ( p2 - p0 ) * 0.5,\r\n\t\t\t\t\tv1 = ( p3 - p1 ) * 0.5;\r\n\t\r\n\t\t\t\treturn ( 2 * ( p1 - p2 ) + v0 + v1 ) * t3 + ( - 3 * ( p1 - p2 ) - 2 * v0 - v1 ) * t2 + v0 * t + p1;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t\treturn function ( delta ) {\r\n\t\r\n\t\t\t\tif ( this.isPlaying === false ) return;\r\n\t\r\n\t\t\t\tthis.currentTime += delta * this.timeScale;\r\n\t\r\n\t\t\t\tif ( this.weight === 0 )\r\n\t\t\t\t\treturn;\r\n\t\r\n\t\t\t\t//\r\n\t\r\n\t\t\t\tvar duration = this.data.length;\r\n\t\r\n\t\t\t\tif ( this.currentTime > duration || this.currentTime < 0 ) {\r\n\t\r\n\t\t\t\t\tif ( this.loop ) {\r\n\t\r\n\t\t\t\t\t\tthis.currentTime %= duration;\r\n\t\r\n\t\t\t\t\t\tif ( this.currentTime < 0 )\r\n\t\t\t\t\t\t\tthis.currentTime += duration;\r\n\t\r\n\t\t\t\t\t\tthis.reset();\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\tthis.stop();\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tfor ( var h = 0, hl = this.hierarchy.length; h < hl; h ++ ) {\r\n\t\r\n\t\t\t\t\tvar object = this.hierarchy[ h ];\r\n\t\t\t\t\tvar animationCache = object.animationCache.animations[ this.data.name ];\r\n\t\t\t\t\tvar blending = object.animationCache.blending;\r\n\t\r\n\t\t\t\t\t// loop through pos/rot/scl\r\n\t\r\n\t\t\t\t\tfor ( var t = 0; t < 3; t ++ ) {\r\n\t\r\n\t\t\t\t\t\t// get keys\r\n\t\r\n\t\t\t\t\t\tvar type    = this.keyTypes[ t ];\r\n\t\t\t\t\t\tvar prevKey = animationCache.prevKey[ type ];\r\n\t\t\t\t\t\tvar nextKey = animationCache.nextKey[ type ];\r\n\t\r\n\t\t\t\t\t\tif ( ( this.timeScale > 0 && nextKey.time <= this.currentTime ) ||\r\n\t\t\t\t\t\t\t( this.timeScale < 0 && prevKey.time >= this.currentTime ) ) {\r\n\t\r\n\t\t\t\t\t\t\tprevKey = this.data.hierarchy[ h ].keys[ 0 ];\r\n\t\t\t\t\t\t\tnextKey = this.getNextKeyWith( type, h, 1 );\r\n\t\r\n\t\t\t\t\t\t\twhile ( nextKey.time < this.currentTime && nextKey.index > prevKey.index ) {\r\n\t\r\n\t\t\t\t\t\t\t\tprevKey = nextKey;\r\n\t\t\t\t\t\t\t\tnextKey = this.getNextKeyWith( type, h, nextKey.index + 1 );\r\n\t\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t\tanimationCache.prevKey[ type ] = prevKey;\r\n\t\t\t\t\t\t\tanimationCache.nextKey[ type ] = nextKey;\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tvar scale = ( this.currentTime - prevKey.time ) / ( nextKey.time - prevKey.time );\r\n\t\r\n\t\t\t\t\t\tvar prevXYZ = prevKey[ type ];\r\n\t\t\t\t\t\tvar nextXYZ = nextKey[ type ];\r\n\t\r\n\t\t\t\t\t\tif ( scale < 0 ) scale = 0;\r\n\t\t\t\t\t\tif ( scale > 1 ) scale = 1;\r\n\t\r\n\t\t\t\t\t\t// interpolate\r\n\t\r\n\t\t\t\t\t\tif ( type === \"pos\" ) {\r\n\t\r\n\t\t\t\t\t\t\tif ( this.interpolationType === THREE.AnimationHandler.LINEAR ) {\r\n\t\r\n\t\t\t\t\t\t\t\tnewVector.x = prevXYZ[ 0 ] + ( nextXYZ[ 0 ] - prevXYZ[ 0 ] ) * scale;\r\n\t\t\t\t\t\t\t\tnewVector.y = prevXYZ[ 1 ] + ( nextXYZ[ 1 ] - prevXYZ[ 1 ] ) * scale;\r\n\t\t\t\t\t\t\t\tnewVector.z = prevXYZ[ 2 ] + ( nextXYZ[ 2 ] - prevXYZ[ 2 ] ) * scale;\r\n\t\r\n\t\t\t\t\t\t\t\t// blend\r\n\t\t\t\t\t\t\t\tvar proportionalWeight = this.weight / ( this.weight + blending.positionWeight );\r\n\t\t\t\t\t\t\t\tobject.position.lerp( newVector, proportionalWeight );\r\n\t\t\t\t\t\t\t\tblending.positionWeight += this.weight;\r\n\t\r\n\t\t\t\t\t\t\t} else if ( this.interpolationType === THREE.AnimationHandler.CATMULLROM ||\r\n\t\t\t\t\t\t\t\t\t\tthis.interpolationType === THREE.AnimationHandler.CATMULLROM_FORWARD ) {\r\n\t\r\n\t\t\t\t\t\t\t\tpoints[ 0 ] = this.getPrevKeyWith( \"pos\", h, prevKey.index - 1 )[ \"pos\" ];\r\n\t\t\t\t\t\t\t\tpoints[ 1 ] = prevXYZ;\r\n\t\t\t\t\t\t\t\tpoints[ 2 ] = nextXYZ;\r\n\t\t\t\t\t\t\t\tpoints[ 3 ] = this.getNextKeyWith( \"pos\", h, nextKey.index + 1 )[ \"pos\" ];\r\n\t\r\n\t\t\t\t\t\t\t\tscale = scale * 0.33 + 0.33;\r\n\t\r\n\t\t\t\t\t\t\t\tvar currentPoint = interpolateCatmullRom( points, scale );\r\n\t\t\t\t\t\t\t\tvar proportionalWeight = this.weight / ( this.weight + blending.positionWeight );\r\n\t\t\t\t\t\t\t\tblending.positionWeight += this.weight;\r\n\t\r\n\t\t\t\t\t\t\t\t// blend\r\n\t\r\n\t\t\t\t\t\t\t\tvar vector = object.position;\r\n\t\r\n\t\t\t\t\t\t\t\tvector.x = vector.x + ( currentPoint[ 0 ] - vector.x ) * proportionalWeight;\r\n\t\t\t\t\t\t\t\tvector.y = vector.y + ( currentPoint[ 1 ] - vector.y ) * proportionalWeight;\r\n\t\t\t\t\t\t\t\tvector.z = vector.z + ( currentPoint[ 2 ] - vector.z ) * proportionalWeight;\r\n\t\r\n\t\t\t\t\t\t\t\tif ( this.interpolationType === THREE.AnimationHandler.CATMULLROM_FORWARD ) {\r\n\t\r\n\t\t\t\t\t\t\t\t\tvar forwardPoint = interpolateCatmullRom( points, scale * 1.01 );\r\n\t\r\n\t\t\t\t\t\t\t\t\ttarget.set( forwardPoint[ 0 ], forwardPoint[ 1 ], forwardPoint[ 2 ] );\r\n\t\t\t\t\t\t\t\t\ttarget.sub( vector );\r\n\t\t\t\t\t\t\t\t\ttarget.y = 0;\r\n\t\t\t\t\t\t\t\t\ttarget.normalize();\r\n\t\r\n\t\t\t\t\t\t\t\t\tvar angle = Math.atan2( target.x, target.z );\r\n\t\t\t\t\t\t\t\t\tobject.rotation.set( 0, angle, 0 );\r\n\t\r\n\t\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t} else if ( type === \"rot\" ) {\r\n\t\r\n\t\t\t\t\t\t\tTHREE.Quaternion.slerp( prevXYZ, nextXYZ, newQuat, scale );\r\n\t\r\n\t\t\t\t\t\t\t// Avoid paying the cost of an additional slerp if we don't have to\r\n\t\t\t\t\t\t\tif ( blending.quaternionWeight === 0 ) {\r\n\t\r\n\t\t\t\t\t\t\t\tobject.quaternion.copy( newQuat );\r\n\t\t\t\t\t\t\t\tblending.quaternionWeight = this.weight;\r\n\t\r\n\t\t\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\t\t\tvar proportionalWeight = this.weight / ( this.weight + blending.quaternionWeight );\r\n\t\t\t\t\t\t\t\tTHREE.Quaternion.slerp( object.quaternion, newQuat, object.quaternion, proportionalWeight );\r\n\t\t\t\t\t\t\t\tblending.quaternionWeight += this.weight;\r\n\t\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t} else if ( type === \"scl\" ) {\r\n\t\r\n\t\t\t\t\t\t\tnewVector.x = prevXYZ[ 0 ] + ( nextXYZ[ 0 ] - prevXYZ[ 0 ] ) * scale;\r\n\t\t\t\t\t\t\tnewVector.y = prevXYZ[ 1 ] + ( nextXYZ[ 1 ] - prevXYZ[ 1 ] ) * scale;\r\n\t\t\t\t\t\t\tnewVector.z = prevXYZ[ 2 ] + ( nextXYZ[ 2 ] - prevXYZ[ 2 ] ) * scale;\r\n\t\r\n\t\t\t\t\t\t\tvar proportionalWeight = this.weight / ( this.weight + blending.scaleWeight );\r\n\t\t\t\t\t\t\tobject.scale.lerp( newVector, proportionalWeight );\r\n\t\t\t\t\t\t\tblending.scaleWeight += this.weight;\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn true;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t} )(),\r\n\t\r\n\t\tgetNextKeyWith: function ( type, h, key ) {\r\n\t\r\n\t\t\tvar keys = this.data.hierarchy[ h ].keys;\r\n\t\r\n\t\t\tif ( this.interpolationType === THREE.AnimationHandler.CATMULLROM ||\r\n\t\t\t\t this.interpolationType === THREE.AnimationHandler.CATMULLROM_FORWARD ) {\r\n\t\r\n\t\t\t\tkey = key < keys.length - 1 ? key : keys.length - 1;\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tkey = key % keys.length;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tfor ( ; key < keys.length; key ++ ) {\r\n\t\r\n\t\t\t\tif ( keys[ key ][ type ] !== undefined ) {\r\n\t\r\n\t\t\t\t\treturn keys[ key ];\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this.data.hierarchy[ h ].keys[ 0 ];\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetPrevKeyWith: function ( type, h, key ) {\r\n\t\r\n\t\t\tvar keys = this.data.hierarchy[ h ].keys;\r\n\t\r\n\t\t\tif ( this.interpolationType === THREE.AnimationHandler.CATMULLROM ||\r\n\t\t\t\tthis.interpolationType === THREE.AnimationHandler.CATMULLROM_FORWARD ) {\r\n\t\r\n\t\t\t\tkey = key > 0 ? key : 0;\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tkey = key >= 0 ? key : key + keys.length;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\r\n\t\t\tfor ( ; key >= 0; key -- ) {\r\n\t\r\n\t\t\t\tif ( keys[ key ][ type ] !== undefined ) {\r\n\t\r\n\t\t\t\t\treturn keys[ key ];\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this.data.hierarchy[ h ].keys[ keys.length - 1 ];\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/animation/KeyFrameAnimation.js\r\n\t\r\n\t/**\r\n\t * @author mikael emtinger / http://gomo.se/\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author khang duong\r\n\t * @author erik kitson\r\n\t */\r\n\t\r\n\tTHREE.KeyFrameAnimation = function ( data ) {\r\n\t\r\n\t\tthis.root = data.node;\r\n\t\tthis.data = THREE.AnimationHandler.init( data );\r\n\t\tthis.hierarchy = THREE.AnimationHandler.parse( this.root );\r\n\t\tthis.currentTime = 0;\r\n\t\tthis.timeScale = 0.001;\r\n\t\tthis.isPlaying = false;\r\n\t\tthis.isPaused = true;\r\n\t\tthis.loop = true;\r\n\t\r\n\t\t// initialize to first keyframes\r\n\t\r\n\t\tfor ( var h = 0, hl = this.hierarchy.length; h < hl; h ++ ) {\r\n\t\r\n\t\t\tvar keys = this.data.hierarchy[ h ].keys,\r\n\t\t\t\tsids = this.data.hierarchy[ h ].sids,\r\n\t\t\t\tobj = this.hierarchy[ h ];\r\n\t\r\n\t\t\tif ( keys.length && sids ) {\r\n\t\r\n\t\t\t\tfor ( var s = 0; s < sids.length; s ++ ) {\r\n\t\r\n\t\t\t\t\tvar sid = sids[ s ],\r\n\t\t\t\t\t\tnext = this.getNextKeyWith( sid, h, 0 );\r\n\t\r\n\t\t\t\t\tif ( next ) {\r\n\t\r\n\t\t\t\t\t\tnext.apply( sid );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tobj.matrixAutoUpdate = false;\r\n\t\t\t\tthis.data.hierarchy[ h ].node.updateMatrix();\r\n\t\t\t\tobj.matrixWorldNeedsUpdate = true;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.KeyFrameAnimation.prototype = {\r\n\t\r\n\t\tconstructor: THREE.KeyFrameAnimation,\r\n\t\r\n\t\tplay: function ( startTime ) {\r\n\t\r\n\t\t\tthis.currentTime = startTime !== undefined ? startTime : 0;\r\n\t\r\n\t\t\tif ( this.isPlaying === false ) {\r\n\t\r\n\t\t\t\tthis.isPlaying = true;\r\n\t\r\n\t\t\t\t// reset key cache\r\n\t\r\n\t\t\t\tvar h, hl = this.hierarchy.length,\r\n\t\t\t\t\tobject,\r\n\t\t\t\t\tnode;\r\n\t\r\n\t\t\t\tfor ( h = 0; h < hl; h ++ ) {\r\n\t\r\n\t\t\t\t\tobject = this.hierarchy[ h ];\r\n\t\t\t\t\tnode = this.data.hierarchy[ h ];\r\n\t\r\n\t\t\t\t\tif ( node.animationCache === undefined ) {\r\n\t\r\n\t\t\t\t\t\tnode.animationCache = {};\r\n\t\t\t\t\t\tnode.animationCache.prevKey = null;\r\n\t\t\t\t\t\tnode.animationCache.nextKey = null;\r\n\t\t\t\t\t\tnode.animationCache.originalMatrix = object.matrix;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tvar keys = this.data.hierarchy[ h ].keys;\r\n\t\r\n\t\t\t\t\tif ( keys.length ) {\r\n\t\r\n\t\t\t\t\t\tnode.animationCache.prevKey = keys[ 0 ];\r\n\t\t\t\t\t\tnode.animationCache.nextKey = keys[ 1 ];\r\n\t\r\n\t\t\t\t\t\tthis.startTime = Math.min( keys[ 0 ].time, this.startTime );\r\n\t\t\t\t\t\tthis.endTime = Math.max( keys[ keys.length - 1 ].time, this.endTime );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tthis.update( 0 );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.isPaused = false;\r\n\t\r\n\t\t\tTHREE.AnimationHandler.play( this );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tstop: function () {\r\n\t\r\n\t\t\tthis.isPlaying = false;\r\n\t\t\tthis.isPaused  = false;\r\n\t\r\n\t\t\tTHREE.AnimationHandler.stop( this );\r\n\t\r\n\t\t\t// reset JIT matrix and remove cache\r\n\t\r\n\t\t\tfor ( var h = 0; h < this.data.hierarchy.length; h ++ ) {\r\n\t\r\n\t\t\t\tvar obj = this.hierarchy[ h ];\r\n\t\t\t\tvar node = this.data.hierarchy[ h ];\r\n\t\r\n\t\t\t\tif ( node.animationCache !== undefined ) {\r\n\t\r\n\t\t\t\t\tvar original = node.animationCache.originalMatrix;\r\n\t\r\n\t\t\t\t\toriginal.copy( obj.matrix );\r\n\t\t\t\t\tobj.matrix = original;\r\n\t\r\n\t\t\t\t\tdelete node.animationCache;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\tupdate: function ( delta ) {\r\n\t\r\n\t\t\tif ( this.isPlaying === false ) return;\r\n\t\r\n\t\t\tthis.currentTime += delta * this.timeScale;\r\n\t\r\n\t\t\t//\r\n\t\r\n\t\t\tvar duration = this.data.length;\r\n\t\r\n\t\t\tif ( this.loop === true && this.currentTime > duration ) {\r\n\t\r\n\t\t\t\tthis.currentTime %= duration;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.currentTime = Math.min( this.currentTime, duration );\r\n\t\r\n\t\t\tfor ( var h = 0, hl = this.hierarchy.length; h < hl; h ++ ) {\r\n\t\r\n\t\t\t\tvar object = this.hierarchy[ h ];\r\n\t\t\t\tvar node = this.data.hierarchy[ h ];\r\n\t\r\n\t\t\t\tvar keys = node.keys,\r\n\t\t\t\t\tanimationCache = node.animationCache;\r\n\t\r\n\t\r\n\t\t\t\tif ( keys.length ) {\r\n\t\r\n\t\t\t\t\tvar prevKey = animationCache.prevKey;\r\n\t\t\t\t\tvar nextKey = animationCache.nextKey;\r\n\t\r\n\t\t\t\t\tif ( nextKey.time <= this.currentTime ) {\r\n\t\r\n\t\t\t\t\t\twhile ( nextKey.time < this.currentTime && nextKey.index > prevKey.index ) {\r\n\t\r\n\t\t\t\t\t\t\tprevKey = nextKey;\r\n\t\t\t\t\t\t\tnextKey = keys[ prevKey.index + 1 ];\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tanimationCache.prevKey = prevKey;\r\n\t\t\t\t\t\tanimationCache.nextKey = nextKey;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tif ( nextKey.time >= this.currentTime ) {\r\n\t\r\n\t\t\t\t\t\tprevKey.interpolate( nextKey, this.currentTime );\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\tprevKey.interpolate( nextKey, nextKey.time );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tthis.data.hierarchy[ h ].node.updateMatrix();\r\n\t\t\t\t\tobject.matrixWorldNeedsUpdate = true;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetNextKeyWith: function ( sid, h, key ) {\r\n\t\r\n\t\t\tvar keys = this.data.hierarchy[ h ].keys;\r\n\t\t\tkey = key % keys.length;\r\n\t\r\n\t\t\tfor ( ; key < keys.length; key ++ ) {\r\n\t\r\n\t\t\t\tif ( keys[ key ].hasTarget( sid ) ) {\r\n\t\r\n\t\t\t\t\treturn keys[ key ];\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn keys[ 0 ];\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetPrevKeyWith: function ( sid, h, key ) {\r\n\t\r\n\t\t\tvar keys = this.data.hierarchy[ h ].keys;\r\n\t\t\tkey = key >= 0 ? key : key + keys.length;\r\n\t\r\n\t\t\tfor ( ; key >= 0; key -- ) {\r\n\t\r\n\t\t\t\tif ( keys[ key ].hasTarget( sid ) ) {\r\n\t\r\n\t\t\t\t\treturn keys[ key ];\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn keys[ keys.length - 1 ];\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/animation/MorphAnimation.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com\r\n\t * @author willy-vvu / http://willy-vvu.github.io\r\n\t */\r\n\t\r\n\tTHREE.MorphAnimation = function ( mesh ) {\r\n\t\r\n\t\tthis.mesh = mesh;\r\n\t\tthis.frames = mesh.morphTargetInfluences.length;\r\n\t\tthis.currentTime = 0;\r\n\t\tthis.duration = 1000;\r\n\t\tthis.loop = true;\r\n\t\tthis.lastFrame = 0;\r\n\t\tthis.currentFrame = 0;\r\n\t\r\n\t\tthis.isPlaying = false;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.MorphAnimation.prototype = {\r\n\t\r\n\t\tconstructor: THREE.MorphAnimation,\r\n\t\r\n\t\tplay: function () {\r\n\t\r\n\t\t\tthis.isPlaying = true;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tpause: function () {\r\n\t\r\n\t\t\tthis.isPlaying = false;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tupdate: function ( delta ) {\r\n\t\r\n\t\t\tif ( this.isPlaying === false ) return;\r\n\t\r\n\t\t\tthis.currentTime += delta;\r\n\t\r\n\t\t\tif ( this.loop === true && this.currentTime > this.duration ) {\r\n\t\r\n\t\t\t\tthis.currentTime %= this.duration;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.currentTime = Math.min( this.currentTime, this.duration );\r\n\t\r\n\t\t\tvar frameTime = this.duration / this.frames;\r\n\t\t\tvar frame = Math.floor( this.currentTime / frameTime );\r\n\t\r\n\t\t\tvar influences = this.mesh.morphTargetInfluences;\r\n\t\r\n\t\t\tif ( frame !== this.currentFrame ) {\r\n\t\r\n\t\t\t\tinfluences[ this.lastFrame ] = 0;\r\n\t\t\t\tinfluences[ this.currentFrame ] = 1;\r\n\t\t\t\tinfluences[ frame ] = 0;\r\n\t\r\n\t\t\t\tthis.lastFrame = this.currentFrame;\r\n\t\t\t\tthis.currentFrame = frame;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar mix = ( this.currentTime % frameTime ) / frameTime;\r\n\t\r\n\t\t\tinfluences[ frame ] = mix;\r\n\t\t\tinfluences[ this.lastFrame ] = 1 - mix;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/geometries/BoxGeometry.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * based on http://papervision3d.googlecode.com/svn/trunk/as3/trunk/src/org/papervision3d/objects/primitives/Cube.as\r\n\t */\r\n\t\r\n\tTHREE.BoxGeometry = function ( width, height, depth, widthSegments, heightSegments, depthSegments ) {\r\n\t\r\n\t\tTHREE.Geometry.call( this );\r\n\t\r\n\t\tthis.type = 'BoxGeometry';\r\n\t\r\n\t\tthis.parameters = {\r\n\t\t\twidth: width,\r\n\t\t\theight: height,\r\n\t\t\tdepth: depth,\r\n\t\t\twidthSegments: widthSegments,\r\n\t\t\theightSegments: heightSegments,\r\n\t\t\tdepthSegments: depthSegments\r\n\t\t};\r\n\t\r\n\t\tthis.widthSegments = widthSegments || 1;\r\n\t\tthis.heightSegments = heightSegments || 1;\r\n\t\tthis.depthSegments = depthSegments || 1;\r\n\t\r\n\t\tvar scope = this;\r\n\t\r\n\t\tvar width_half = width / 2;\r\n\t\tvar height_half = height / 2;\r\n\t\tvar depth_half = depth / 2;\r\n\t\r\n\t\tbuildPlane( 'z', 'y', - 1, - 1, depth, height, width_half, 0 ); // px\r\n\t\tbuildPlane( 'z', 'y',   1, - 1, depth, height, - width_half, 1 ); // nx\r\n\t\tbuildPlane( 'x', 'z',   1,   1, width, depth, height_half, 2 ); // py\r\n\t\tbuildPlane( 'x', 'z',   1, - 1, width, depth, - height_half, 3 ); // ny\r\n\t\tbuildPlane( 'x', 'y',   1, - 1, width, height, depth_half, 4 ); // pz\r\n\t\tbuildPlane( 'x', 'y', - 1, - 1, width, height, - depth_half, 5 ); // nz\r\n\t\r\n\t\tfunction buildPlane( u, v, udir, vdir, width, height, depth, materialIndex ) {\r\n\t\r\n\t\t\tvar w, ix, iy,\r\n\t\t\tgridX = scope.widthSegments,\r\n\t\t\tgridY = scope.heightSegments,\r\n\t\t\twidth_half = width / 2,\r\n\t\t\theight_half = height / 2,\r\n\t\t\toffset = scope.vertices.length;\r\n\t\r\n\t\t\tif ( ( u === 'x' && v === 'y' ) || ( u === 'y' && v === 'x' ) ) {\r\n\t\r\n\t\t\t\tw = 'z';\r\n\t\r\n\t\t\t} else if ( ( u === 'x' && v === 'z' ) || ( u === 'z' && v === 'x' ) ) {\r\n\t\r\n\t\t\t\tw = 'y';\r\n\t\t\t\tgridY = scope.depthSegments;\r\n\t\r\n\t\t\t} else if ( ( u === 'z' && v === 'y' ) || ( u === 'y' && v === 'z' ) ) {\r\n\t\r\n\t\t\t\tw = 'x';\r\n\t\t\t\tgridX = scope.depthSegments;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar gridX1 = gridX + 1,\r\n\t\t\tgridY1 = gridY + 1,\r\n\t\t\tsegment_width = width / gridX,\r\n\t\t\tsegment_height = height / gridY,\r\n\t\t\tnormal = new THREE.Vector3();\r\n\t\r\n\t\t\tnormal[ w ] = depth > 0 ? 1 : - 1;\r\n\t\r\n\t\t\tfor ( iy = 0; iy < gridY1; iy ++ ) {\r\n\t\r\n\t\t\t\tfor ( ix = 0; ix < gridX1; ix ++ ) {\r\n\t\r\n\t\t\t\t\tvar vector = new THREE.Vector3();\r\n\t\t\t\t\tvector[ u ] = ( ix * segment_width - width_half ) * udir;\r\n\t\t\t\t\tvector[ v ] = ( iy * segment_height - height_half ) * vdir;\r\n\t\t\t\t\tvector[ w ] = depth;\r\n\t\r\n\t\t\t\t\tscope.vertices.push( vector );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tfor ( iy = 0; iy < gridY; iy ++ ) {\r\n\t\r\n\t\t\t\tfor ( ix = 0; ix < gridX; ix ++ ) {\r\n\t\r\n\t\t\t\t\tvar a = ix + gridX1 * iy;\r\n\t\t\t\t\tvar b = ix + gridX1 * ( iy + 1 );\r\n\t\t\t\t\tvar c = ( ix + 1 ) + gridX1 * ( iy + 1 );\r\n\t\t\t\t\tvar d = ( ix + 1 ) + gridX1 * iy;\r\n\t\r\n\t\t\t\t\tvar uva = new THREE.Vector2( ix / gridX, 1 - iy / gridY );\r\n\t\t\t\t\tvar uvb = new THREE.Vector2( ix / gridX, 1 - ( iy + 1 ) / gridY );\r\n\t\t\t\t\tvar uvc = new THREE.Vector2( ( ix + 1 ) / gridX, 1 - ( iy + 1 ) / gridY );\r\n\t\t\t\t\tvar uvd = new THREE.Vector2( ( ix + 1 ) / gridX, 1 - iy / gridY );\r\n\t\r\n\t\t\t\t\tvar face = new THREE.Face3( a + offset, b + offset, d + offset );\r\n\t\t\t\t\tface.normal.copy( normal );\r\n\t\t\t\t\tface.vertexNormals.push( normal.clone(), normal.clone(), normal.clone() );\r\n\t\t\t\t\tface.materialIndex = materialIndex;\r\n\t\r\n\t\t\t\t\tscope.faces.push( face );\r\n\t\t\t\t\tscope.faceVertexUvs[ 0 ].push( [ uva, uvb, uvd ] );\r\n\t\r\n\t\t\t\t\tface = new THREE.Face3( b + offset, c + offset, d + offset );\r\n\t\t\t\t\tface.normal.copy( normal );\r\n\t\t\t\t\tface.vertexNormals.push( normal.clone(), normal.clone(), normal.clone() );\r\n\t\t\t\t\tface.materialIndex = materialIndex;\r\n\t\r\n\t\t\t\t\tscope.faces.push( face );\r\n\t\t\t\t\tscope.faceVertexUvs[ 0 ].push( [ uvb.clone(), uvc, uvd.clone() ] );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.mergeVertices();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.BoxGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\n\tTHREE.BoxGeometry.prototype.constructor = THREE.BoxGeometry;\r\n\t\r\n\tTHREE.BoxGeometry.prototype.clone = function () {\r\n\t\r\n\t\tvar geometry = new THREE.BoxGeometry(\r\n\t\t\tthis.parameters.width,\r\n\t\t\tthis.parameters.height,\r\n\t\t\tthis.parameters.depth,\r\n\t\t\tthis.parameters.widthSegments,\r\n\t\t\tthis.parameters.heightSegments,\r\n\t\t\tthis.parameters.depthSegments\r\n\t\t);\r\n\t\r\n\t\treturn geometry;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.CubeGeometry = THREE.BoxGeometry; // backwards compatibility\r\n\t\r\n\t// File:src/extras/geometries/CircleGeometry.js\r\n\t\r\n\t/**\r\n\t * @author hughes\r\n\t */\r\n\t\r\n\tTHREE.CircleGeometry = function ( radius, segments, thetaStart, thetaLength ) {\r\n\t\r\n\t\tTHREE.Geometry.call( this );\r\n\t\r\n\t\tthis.type = 'CircleGeometry';\r\n\t\r\n\t\tthis.parameters = {\r\n\t\t\tradius: radius,\r\n\t\t\tsegments: segments,\r\n\t\t\tthetaStart: thetaStart,\r\n\t\t\tthetaLength: thetaLength\r\n\t\t};\r\n\t\r\n\t\tradius = radius || 50;\r\n\t\tsegments = segments !== undefined ? Math.max( 3, segments ) : 8;\r\n\t\r\n\t\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\r\n\t\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2;\r\n\t\r\n\t\tvar i, uvs = [],\r\n\t\tcenter = new THREE.Vector3(), centerUV = new THREE.Vector2( 0.5, 0.5 );\r\n\t\r\n\t\tthis.vertices.push( center );\r\n\t\tuvs.push( centerUV );\r\n\t\r\n\t\tfor ( i = 0; i <= segments; i ++ ) {\r\n\t\r\n\t\t\tvar vertex = new THREE.Vector3();\r\n\t\t\tvar segment = thetaStart + i / segments * thetaLength;\r\n\t\r\n\t\t\tvertex.x = radius * Math.cos( segment );\r\n\t\t\tvertex.y = radius * Math.sin( segment );\r\n\t\r\n\t\t\tthis.vertices.push( vertex );\r\n\t\t\tuvs.push( new THREE.Vector2( ( vertex.x / radius + 1 ) / 2, ( vertex.y / radius + 1 ) / 2 ) );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tvar n = new THREE.Vector3( 0, 0, 1 );\r\n\t\r\n\t\tfor ( i = 1; i <= segments; i ++ ) {\r\n\t\r\n\t\t\tthis.faces.push( new THREE.Face3( i, i + 1, 0, [ n.clone(), n.clone(), n.clone() ] ) );\r\n\t\t\tthis.faceVertexUvs[ 0 ].push( [ uvs[ i ].clone(), uvs[ i + 1 ].clone(), centerUV.clone() ] );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.computeFaceNormals();\r\n\t\r\n\t\tthis.boundingSphere = new THREE.Sphere( new THREE.Vector3(), radius );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.CircleGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\n\tTHREE.CircleGeometry.prototype.constructor = THREE.CircleGeometry;\r\n\t\r\n\tTHREE.CircleGeometry.prototype.clone = function () {\r\n\t\r\n\t\tvar geometry = new THREE.CircleGeometry(\r\n\t\t\tthis.parameters.radius,\r\n\t\t\tthis.parameters.segments,\r\n\t\t\tthis.parameters.thetaStart,\r\n\t\t\tthis.parameters.thetaLength\r\n\t\t);\r\n\t\r\n\t\treturn geometry;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/geometries/CircleBufferGeometry.js\r\n\t\r\n\t/**\r\n\t * @author benaadams / https://twitter.com/ben_a_adams\r\n\t */\r\n\t\r\n\tTHREE.CircleBufferGeometry = function ( radius, segments, thetaStart, thetaLength ) {\r\n\t\r\n\t\tTHREE.BufferGeometry.call( this );\r\n\t\r\n\t\tthis.type = 'CircleBufferGeometry';\r\n\t\r\n\t\tthis.parameters = {\r\n\t\t\tradius: radius,\r\n\t\t\tsegments: segments,\r\n\t\t\tthetaStart: thetaStart,\r\n\t\t\tthetaLength: thetaLength\r\n\t\t};\r\n\t\r\n\t\tradius = radius || 50;\r\n\t\tsegments = segments !== undefined ? Math.max( 3, segments ) : 8;\r\n\t\r\n\t\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\r\n\t\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2;\r\n\t\r\n\t\tvar vertices = segments + 2;\r\n\t\r\n\t\tvar positions = new Float32Array( vertices * 3 );\r\n\t\tvar normals = new Float32Array( vertices * 3 );\r\n\t\tvar uvs = new Float32Array( vertices * 2 );\r\n\t\r\n\t\t// center data is already zero, but need to set a few extras\r\n\t\tnormals[ 3 ] = 1.0;\r\n\t\tuvs[ 0 ] = 0.5;\r\n\t\tuvs[ 1 ] = 0.5;\r\n\t\r\n\t\tfor ( var s = 0, i = 3, ii = 2 ; s <= segments; s ++, i += 3, ii += 2 ) {\r\n\t\r\n\t\t\tvar segment = thetaStart + s / segments * thetaLength;\r\n\t\r\n\t\t\tpositions[ i ] = radius * Math.cos( segment );\r\n\t\t\tpositions[ i + 1 ] = radius * Math.sin( segment );\r\n\t\r\n\t\t\tnormals[ i + 2 ] = 1; // normal z\r\n\t\r\n\t\t\tuvs[ ii ] = ( positions[ i ] / radius + 1 ) / 2;\r\n\t\t\tuvs[ ii + 1 ] = ( positions[ i + 1 ] / radius + 1 ) / 2;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tvar indices = [];\r\n\t\r\n\t\tfor ( var i = 1; i <= segments; i ++ ) {\r\n\t\r\n\t\t\tindices.push( i );\r\n\t\t\tindices.push( i + 1 );\r\n\t\t\tindices.push( 0 );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.setIndex( new THREE.BufferAttribute( new Uint16Array( indices ), 1 ) );\r\n\t\tthis.addAttribute( 'position', new THREE.BufferAttribute( positions, 3 ) );\r\n\t\tthis.addAttribute( 'normal', new THREE.BufferAttribute( normals, 3 ) );\r\n\t\tthis.addAttribute( 'uv', new THREE.BufferAttribute( uvs, 2 ) );\r\n\t\r\n\t\tthis.boundingSphere = new THREE.Sphere( new THREE.Vector3(), radius );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.CircleBufferGeometry.prototype = Object.create( THREE.BufferGeometry.prototype );\r\n\tTHREE.CircleBufferGeometry.prototype.constructor = THREE.CircleBufferGeometry;\r\n\t\r\n\tTHREE.CircleBufferGeometry.prototype.clone = function () {\r\n\t\r\n\t\tvar geometry = new THREE.CircleBufferGeometry(\r\n\t\t\tthis.parameters.radius,\r\n\t\t\tthis.parameters.segments,\r\n\t\t\tthis.parameters.thetaStart,\r\n\t\t\tthis.parameters.thetaLength\r\n\t\t);\r\n\t\r\n\t\tgeometry.copy( this );\r\n\t\r\n\t\treturn geometry;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/geometries/CylinderGeometry.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.CylinderGeometry = function ( radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) {\r\n\t\r\n\t\tTHREE.Geometry.call( this );\r\n\t\r\n\t\tthis.type = 'CylinderGeometry';\r\n\t\r\n\t\tthis.parameters = {\r\n\t\t\tradiusTop: radiusTop,\r\n\t\t\tradiusBottom: radiusBottom,\r\n\t\t\theight: height,\r\n\t\t\tradialSegments: radialSegments,\r\n\t\t\theightSegments: heightSegments,\r\n\t\t\topenEnded: openEnded,\r\n\t\t\tthetaStart: thetaStart,\r\n\t\t\tthetaLength: thetaLength\r\n\t\t};\r\n\t\r\n\t\tradiusTop = radiusTop !== undefined ? radiusTop : 20;\r\n\t\tradiusBottom = radiusBottom !== undefined ? radiusBottom : 20;\r\n\t\theight = height !== undefined ? height : 100;\r\n\t\r\n\t\tradialSegments = radialSegments || 8;\r\n\t\theightSegments = heightSegments || 1;\r\n\t\r\n\t\topenEnded = openEnded !== undefined ? openEnded : false;\r\n\t\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\r\n\t\tthetaLength = thetaLength !== undefined ? thetaLength : 2 * Math.PI;\r\n\t\r\n\t\tvar heightHalf = height / 2;\r\n\t\r\n\t\tvar x, y, vertices = [], uvs = [];\r\n\t\r\n\t\tfor ( y = 0; y <= heightSegments; y ++ ) {\r\n\t\r\n\t\t\tvar verticesRow = [];\r\n\t\t\tvar uvsRow = [];\r\n\t\r\n\t\t\tvar v = y / heightSegments;\r\n\t\t\tvar radius = v * ( radiusBottom - radiusTop ) + radiusTop;\r\n\t\r\n\t\t\tfor ( x = 0; x <= radialSegments; x ++ ) {\r\n\t\r\n\t\t\t\tvar u = x / radialSegments;\r\n\t\r\n\t\t\t\tvar vertex = new THREE.Vector3();\r\n\t\t\t\tvertex.x = radius * Math.sin( u * thetaLength + thetaStart );\r\n\t\t\t\tvertex.y = - v * height + heightHalf;\r\n\t\t\t\tvertex.z = radius * Math.cos( u * thetaLength + thetaStart );\r\n\t\r\n\t\t\t\tthis.vertices.push( vertex );\r\n\t\r\n\t\t\t\tverticesRow.push( this.vertices.length - 1 );\r\n\t\t\t\tuvsRow.push( new THREE.Vector2( u, 1 - v ) );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvertices.push( verticesRow );\r\n\t\t\tuvs.push( uvsRow );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tvar tanTheta = ( radiusBottom - radiusTop ) / height;\r\n\t\tvar na, nb;\r\n\t\r\n\t\tfor ( x = 0; x < radialSegments; x ++ ) {\r\n\t\r\n\t\t\tif ( radiusTop !== 0 ) {\r\n\t\r\n\t\t\t\tna = this.vertices[ vertices[ 0 ][ x ] ].clone();\r\n\t\t\t\tnb = this.vertices[ vertices[ 0 ][ x + 1 ] ].clone();\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tna = this.vertices[ vertices[ 1 ][ x ] ].clone();\r\n\t\t\t\tnb = this.vertices[ vertices[ 1 ][ x + 1 ] ].clone();\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tna.setY( Math.sqrt( na.x * na.x + na.z * na.z ) * tanTheta ).normalize();\r\n\t\t\tnb.setY( Math.sqrt( nb.x * nb.x + nb.z * nb.z ) * tanTheta ).normalize();\r\n\t\r\n\t\t\tfor ( y = 0; y < heightSegments; y ++ ) {\r\n\t\r\n\t\t\t\tvar v1 = vertices[ y ][ x ];\r\n\t\t\t\tvar v2 = vertices[ y + 1 ][ x ];\r\n\t\t\t\tvar v3 = vertices[ y + 1 ][ x + 1 ];\r\n\t\t\t\tvar v4 = vertices[ y ][ x + 1 ];\r\n\t\r\n\t\t\t\tvar n1 = na.clone();\r\n\t\t\t\tvar n2 = na.clone();\r\n\t\t\t\tvar n3 = nb.clone();\r\n\t\t\t\tvar n4 = nb.clone();\r\n\t\r\n\t\t\t\tvar uv1 = uvs[ y ][ x ].clone();\r\n\t\t\t\tvar uv2 = uvs[ y + 1 ][ x ].clone();\r\n\t\t\t\tvar uv3 = uvs[ y + 1 ][ x + 1 ].clone();\r\n\t\t\t\tvar uv4 = uvs[ y ][ x + 1 ].clone();\r\n\t\r\n\t\t\t\tthis.faces.push( new THREE.Face3( v1, v2, v4, [ n1, n2, n4 ] ) );\r\n\t\t\t\tthis.faceVertexUvs[ 0 ].push( [ uv1, uv2, uv4 ] );\r\n\t\r\n\t\t\t\tthis.faces.push( new THREE.Face3( v2, v3, v4, [ n2.clone(), n3, n4.clone() ] ) );\r\n\t\t\t\tthis.faceVertexUvs[ 0 ].push( [ uv2.clone(), uv3, uv4.clone() ] );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// top cap\r\n\t\r\n\t\tif ( openEnded === false && radiusTop > 0 ) {\r\n\t\r\n\t\t\tthis.vertices.push( new THREE.Vector3( 0, heightHalf, 0 ) );\r\n\t\r\n\t\t\tfor ( x = 0; x < radialSegments; x ++ ) {\r\n\t\r\n\t\t\t\tvar v1 = vertices[ 0 ][ x ];\r\n\t\t\t\tvar v2 = vertices[ 0 ][ x + 1 ];\r\n\t\t\t\tvar v3 = this.vertices.length - 1;\r\n\t\r\n\t\t\t\tvar n1 = new THREE.Vector3( 0, 1, 0 );\r\n\t\t\t\tvar n2 = new THREE.Vector3( 0, 1, 0 );\r\n\t\t\t\tvar n3 = new THREE.Vector3( 0, 1, 0 );\r\n\t\r\n\t\t\t\tvar uv1 = uvs[ 0 ][ x ].clone();\r\n\t\t\t\tvar uv2 = uvs[ 0 ][ x + 1 ].clone();\r\n\t\t\t\tvar uv3 = new THREE.Vector2( uv2.x, 0 );\r\n\t\r\n\t\t\t\tthis.faces.push( new THREE.Face3( v1, v2, v3, [ n1, n2, n3 ], undefined, 1 ) );\r\n\t\t\t\tthis.faceVertexUvs[ 0 ].push( [ uv1, uv2, uv3 ] );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// bottom cap\r\n\t\r\n\t\tif ( openEnded === false && radiusBottom > 0 ) {\r\n\t\r\n\t\t\tthis.vertices.push( new THREE.Vector3( 0, - heightHalf, 0 ) );\r\n\t\r\n\t\t\tfor ( x = 0; x < radialSegments; x ++ ) {\r\n\t\r\n\t\t\t\tvar v1 = vertices[ heightSegments ][ x + 1 ];\r\n\t\t\t\tvar v2 = vertices[ heightSegments ][ x ];\r\n\t\t\t\tvar v3 = this.vertices.length - 1;\r\n\t\r\n\t\t\t\tvar n1 = new THREE.Vector3( 0, - 1, 0 );\r\n\t\t\t\tvar n2 = new THREE.Vector3( 0, - 1, 0 );\r\n\t\t\t\tvar n3 = new THREE.Vector3( 0, - 1, 0 );\r\n\t\r\n\t\t\t\tvar uv1 = uvs[ heightSegments ][ x + 1 ].clone();\r\n\t\t\t\tvar uv2 = uvs[ heightSegments ][ x ].clone();\r\n\t\t\t\tvar uv3 = new THREE.Vector2( uv2.x, 1 );\r\n\t\r\n\t\t\t\tthis.faces.push( new THREE.Face3( v1, v2, v3, [ n1, n2, n3 ], undefined, 2 ) );\r\n\t\t\t\tthis.faceVertexUvs[ 0 ].push( [ uv1, uv2, uv3 ] );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.computeFaceNormals();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.CylinderGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\n\tTHREE.CylinderGeometry.prototype.constructor = THREE.CylinderGeometry;\r\n\t\r\n\tTHREE.CylinderGeometry.prototype.clone = function () {\r\n\t\r\n\t\tvar geometry = new THREE.CylinderGeometry(\r\n\t\t\tthis.parameters.radiusTop,\r\n\t\t\tthis.parameters.radiusBottom,\r\n\t\t\tthis.parameters.height,\r\n\t\t\tthis.parameters.radialSegments,\r\n\t\t\tthis.parameters.heightSegments,\r\n\t\t\tthis.parameters.openEnded,\r\n\t\t\tthis.parameters.thetaStart,\r\n\t\t\tthis.parameters.thetaLength\r\n\t\t);\r\n\t\r\n\t\treturn geometry;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/geometries/EdgesGeometry.js\r\n\t\r\n\t/**\r\n\t * @author WestLangley / http://github.com/WestLangley\r\n\t */\r\n\t\r\n\tTHREE.EdgesGeometry = function ( geometry, thresholdAngle ) {\r\n\t\r\n\t\tTHREE.BufferGeometry.call( this );\r\n\t\r\n\t\tthresholdAngle = ( thresholdAngle !== undefined ) ? thresholdAngle : 1;\r\n\t\r\n\t\tvar thresholdDot = Math.cos( THREE.Math.degToRad( thresholdAngle ) );\r\n\t\r\n\t\tvar edge = [ 0, 0 ], hash = {};\r\n\t\tvar sortFunction = function ( a, b ) {\r\n\t\r\n\t\t\treturn a - b;\r\n\t\r\n\t\t};\r\n\t\r\n\t\tvar keys = [ 'a', 'b', 'c' ];\r\n\t\r\n\t\tvar geometry2;\r\n\t\r\n\t\tif ( geometry instanceof THREE.BufferGeometry ) {\r\n\t\r\n\t\t\tgeometry2 = new THREE.Geometry();\r\n\t\t\tgeometry2.fromBufferGeometry( geometry );\r\n\t\r\n\t\t} else {\r\n\t\r\n\t\t\tgeometry2 = geometry.clone();\r\n\t\r\n\t\t}\r\n\t\r\n\t\tgeometry2.mergeVertices();\r\n\t\tgeometry2.computeFaceNormals();\r\n\t\r\n\t\tvar vertices = geometry2.vertices;\r\n\t\tvar faces = geometry2.faces;\r\n\t\r\n\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\r\n\t\r\n\t\t\tvar face = faces[ i ];\r\n\t\r\n\t\t\tfor ( var j = 0; j < 3; j ++ ) {\r\n\t\r\n\t\t\t\tedge[ 0 ] = face[ keys[ j ] ];\r\n\t\t\t\tedge[ 1 ] = face[ keys[ ( j + 1 ) % 3 ] ];\r\n\t\t\t\tedge.sort( sortFunction );\r\n\t\r\n\t\t\t\tvar key = edge.toString();\r\n\t\r\n\t\t\t\tif ( hash[ key ] === undefined ) {\r\n\t\r\n\t\t\t\t\thash[ key ] = { vert1: edge[ 0 ], vert2: edge[ 1 ], face1: i, face2: undefined };\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\thash[ key ].face2 = i;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tvar coords = [];\r\n\t\r\n\t\tfor ( var key in hash ) {\r\n\t\r\n\t\t\tvar h = hash[ key ];\r\n\t\r\n\t\t\tif ( h.face2 === undefined || faces[ h.face1 ].normal.dot( faces[ h.face2 ].normal ) <= thresholdDot ) {\r\n\t\r\n\t\t\t\tvar vertex = vertices[ h.vert1 ];\r\n\t\t\t\tcoords.push( vertex.x );\r\n\t\t\t\tcoords.push( vertex.y );\r\n\t\t\t\tcoords.push( vertex.z );\r\n\t\r\n\t\t\t\tvertex = vertices[ h.vert2 ];\r\n\t\t\t\tcoords.push( vertex.x );\r\n\t\t\t\tcoords.push( vertex.y );\r\n\t\t\t\tcoords.push( vertex.z );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.addAttribute( 'position', new THREE.BufferAttribute( new Float32Array( coords ), 3 ) );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.EdgesGeometry.prototype = Object.create( THREE.BufferGeometry.prototype );\r\n\tTHREE.EdgesGeometry.prototype.constructor = THREE.EdgesGeometry;\r\n\t\r\n\t// File:src/extras/geometries/ExtrudeGeometry.js\r\n\t\r\n\t/**\r\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\r\n\t *\r\n\t * Creates extruded geometry from a path shape.\r\n\t *\r\n\t * parameters = {\r\n\t *\r\n\t *  curveSegments: <int>, // number of points on the curves\r\n\t *  steps: <int>, // number of points for z-side extrusions / used for subdividing segments of extrude spline too\r\n\t *  amount: <int>, // Depth to extrude the shape\r\n\t *\r\n\t *  bevelEnabled: <bool>, // turn on bevel\r\n\t *  bevelThickness: <float>, // how deep into the original shape bevel goes\r\n\t *  bevelSize: <float>, // how far from shape outline is bevel\r\n\t *  bevelSegments: <int>, // number of bevel layers\r\n\t *\r\n\t *  extrudePath: <THREE.CurvePath> // 3d spline path to extrude shape along. (creates Frames if .frames aren't defined)\r\n\t *  frames: <THREE.TubeGeometry.FrenetFrames> // containing arrays of tangents, normals, binormals\r\n\t *\r\n\t *  uvGenerator: <Object> // object that provides UV generator functions\r\n\t *\r\n\t * }\r\n\t **/\r\n\t\r\n\tTHREE.ExtrudeGeometry = function ( shapes, options ) {\r\n\t\r\n\t\tif ( typeof( shapes ) === \"undefined\" ) {\r\n\t\r\n\t\t\tshapes = [];\r\n\t\t\treturn;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tTHREE.Geometry.call( this );\r\n\t\r\n\t\tthis.type = 'ExtrudeGeometry';\r\n\t\r\n\t\tshapes = Array.isArray( shapes ) ? shapes : [ shapes ];\r\n\t\r\n\t\tthis.addShapeList( shapes, options );\r\n\t\r\n\t\tthis.computeFaceNormals();\r\n\t\r\n\t\t// can't really use automatic vertex normals\r\n\t\t// as then front and back sides get smoothed too\r\n\t\t// should do separate smoothing just for sides\r\n\t\r\n\t\t//this.computeVertexNormals();\r\n\t\r\n\t\t//console.log( \"took\", ( Date.now() - startTime ) );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.ExtrudeGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\n\tTHREE.ExtrudeGeometry.prototype.constructor = THREE.ExtrudeGeometry;\r\n\t\r\n\tTHREE.ExtrudeGeometry.prototype.addShapeList = function ( shapes, options ) {\r\n\t\r\n\t\tvar sl = shapes.length;\r\n\t\r\n\t\tfor ( var s = 0; s < sl; s ++ ) {\r\n\t\r\n\t\t\tvar shape = shapes[ s ];\r\n\t\t\tthis.addShape( shape, options );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.ExtrudeGeometry.prototype.addShape = function ( shape, options ) {\r\n\t\r\n\t\tvar amount = options.amount !== undefined ? options.amount : 100;\r\n\t\r\n\t\tvar bevelThickness = options.bevelThickness !== undefined ? options.bevelThickness : 6; // 10\r\n\t\tvar bevelSize = options.bevelSize !== undefined ? options.bevelSize : bevelThickness - 2; // 8\r\n\t\tvar bevelSegments = options.bevelSegments !== undefined ? options.bevelSegments : 3;\r\n\t\r\n\t\tvar bevelEnabled = options.bevelEnabled !== undefined ? options.bevelEnabled : true; // false\r\n\t\r\n\t\tvar curveSegments = options.curveSegments !== undefined ? options.curveSegments : 12;\r\n\t\r\n\t\tvar steps = options.steps !== undefined ? options.steps : 1;\r\n\t\r\n\t\tvar extrudePath = options.extrudePath;\r\n\t\tvar extrudePts, extrudeByPath = false;\r\n\t\r\n\t\t// Use default WorldUVGenerator if no UV generators are specified.\r\n\t\tvar uvgen = options.UVGenerator !== undefined ? options.UVGenerator : THREE.ExtrudeGeometry.WorldUVGenerator;\r\n\t\r\n\t\tvar splineTube, binormal, normal, position2;\r\n\t\tif ( extrudePath ) {\r\n\t\r\n\t\t\textrudePts = extrudePath.getSpacedPoints( steps );\r\n\t\r\n\t\t\textrudeByPath = true;\r\n\t\t\tbevelEnabled = false; // bevels not supported for path extrusion\r\n\t\r\n\t\t\t// SETUP TNB variables\r\n\t\r\n\t\t\t// Reuse TNB from TubeGeomtry for now.\r\n\t\t\t// TODO1 - have a .isClosed in spline?\r\n\t\r\n\t\t\tsplineTube = options.frames !== undefined ? options.frames : new THREE.TubeGeometry.FrenetFrames( extrudePath, steps, false );\r\n\t\r\n\t\t\t// console.log(splineTube, 'splineTube', splineTube.normals.length, 'steps', steps, 'extrudePts', extrudePts.length);\r\n\t\r\n\t\t\tbinormal = new THREE.Vector3();\r\n\t\t\tnormal = new THREE.Vector3();\r\n\t\t\tposition2 = new THREE.Vector3();\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// Safeguards if bevels are not enabled\r\n\t\r\n\t\tif ( ! bevelEnabled ) {\r\n\t\r\n\t\t\tbevelSegments = 0;\r\n\t\t\tbevelThickness = 0;\r\n\t\t\tbevelSize = 0;\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// Variables initialization\r\n\t\r\n\t\tvar ahole, h, hl; // looping of holes\r\n\t\tvar scope = this;\r\n\t\r\n\t\tvar shapesOffset = this.vertices.length;\r\n\t\r\n\t\tvar shapePoints = shape.extractPoints( curveSegments );\r\n\t\r\n\t\tvar vertices = shapePoints.shape;\r\n\t\tvar holes = shapePoints.holes;\r\n\t\r\n\t\tvar reverse = ! THREE.Shape.Utils.isClockWise( vertices );\r\n\t\r\n\t\tif ( reverse ) {\r\n\t\r\n\t\t\tvertices = vertices.reverse();\r\n\t\r\n\t\t\t// Maybe we should also check if holes are in the opposite direction, just to be safe ...\r\n\t\r\n\t\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\r\n\t\r\n\t\t\t\tahole = holes[ h ];\r\n\t\r\n\t\t\t\tif ( THREE.Shape.Utils.isClockWise( ahole ) ) {\r\n\t\r\n\t\t\t\t\tholes[ h ] = ahole.reverse();\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treverse = false; // If vertices are in order now, we shouldn't need to worry about them again (hopefully)!\r\n\t\r\n\t\t}\r\n\t\r\n\t\r\n\t\tvar faces = THREE.Shape.Utils.triangulateShape ( vertices, holes );\r\n\t\r\n\t\t/* Vertices */\r\n\t\r\n\t\tvar contour = vertices; // vertices has all points but contour has only points of circumference\r\n\t\r\n\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\r\n\t\r\n\t\t\tahole = holes[ h ];\r\n\t\r\n\t\t\tvertices = vertices.concat( ahole );\r\n\t\r\n\t\t}\r\n\t\r\n\t\r\n\t\tfunction scalePt2 ( pt, vec, size ) {\r\n\t\r\n\t\t\tif ( ! vec ) console.error( \"THREE.ExtrudeGeometry: vec does not exist\" );\r\n\t\r\n\t\t\treturn vec.clone().multiplyScalar( size ).add( pt );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tvar b, bs, t, z,\r\n\t\t\tvert, vlen = vertices.length,\r\n\t\t\tface, flen = faces.length;\r\n\t\r\n\t\r\n\t\t// Find directions for point movement\r\n\t\r\n\t\r\n\t\tfunction getBevelVec( inPt, inPrev, inNext ) {\r\n\t\r\n\t\t\tvar EPSILON = 0.0000000001;\r\n\t\r\n\t\t\t// computes for inPt the corresponding point inPt' on a new contour\r\n\t\t\t//   shifted by 1 unit (length of normalized vector) to the left\r\n\t\t\t// if we walk along contour clockwise, this new contour is outside the old one\r\n\t\t\t//\r\n\t\t\t// inPt' is the intersection of the two lines parallel to the two\r\n\t\t\t//  adjacent edges of inPt at a distance of 1 unit on the left side.\r\n\t\r\n\t\t\tvar v_trans_x, v_trans_y, shrink_by = 1;\t\t// resulting translation vector for inPt\r\n\t\r\n\t\t\t// good reading for geometry algorithms (here: line-line intersection)\r\n\t\t\t// http://geomalgorithms.com/a05-_intersect-1.html\r\n\t\r\n\t\t\tvar v_prev_x = inPt.x - inPrev.x, v_prev_y = inPt.y - inPrev.y;\r\n\t\t\tvar v_next_x = inNext.x - inPt.x, v_next_y = inNext.y - inPt.y;\r\n\t\r\n\t\t\tvar v_prev_lensq = ( v_prev_x * v_prev_x + v_prev_y * v_prev_y );\r\n\t\r\n\t\t\t// check for collinear edges\r\n\t\t\tvar collinear0 = ( v_prev_x * v_next_y - v_prev_y * v_next_x );\r\n\t\r\n\t\t\tif ( Math.abs( collinear0 ) > EPSILON ) {\r\n\t\r\n\t\t\t\t// not collinear\r\n\t\r\n\t\t\t\t// length of vectors for normalizing\r\n\t\r\n\t\t\t\tvar v_prev_len = Math.sqrt( v_prev_lensq );\r\n\t\t\t\tvar v_next_len = Math.sqrt( v_next_x * v_next_x + v_next_y * v_next_y );\r\n\t\r\n\t\t\t\t// shift adjacent points by unit vectors to the left\r\n\t\r\n\t\t\t\tvar ptPrevShift_x = ( inPrev.x - v_prev_y / v_prev_len );\r\n\t\t\t\tvar ptPrevShift_y = ( inPrev.y + v_prev_x / v_prev_len );\r\n\t\r\n\t\t\t\tvar ptNextShift_x = ( inNext.x - v_next_y / v_next_len );\r\n\t\t\t\tvar ptNextShift_y = ( inNext.y + v_next_x / v_next_len );\r\n\t\r\n\t\t\t\t// scaling factor for v_prev to intersection point\r\n\t\r\n\t\t\t\tvar sf = (  ( ptNextShift_x - ptPrevShift_x ) * v_next_y -\r\n\t\t\t\t\t\t\t( ptNextShift_y - ptPrevShift_y ) * v_next_x    ) /\r\n\t\t\t\t\t\t  ( v_prev_x * v_next_y - v_prev_y * v_next_x );\r\n\t\r\n\t\t\t\t// vector from inPt to intersection point\r\n\t\r\n\t\t\t\tv_trans_x = ( ptPrevShift_x + v_prev_x * sf - inPt.x );\r\n\t\t\t\tv_trans_y = ( ptPrevShift_y + v_prev_y * sf - inPt.y );\r\n\t\r\n\t\t\t\t// Don't normalize!, otherwise sharp corners become ugly\r\n\t\t\t\t//  but prevent crazy spikes\r\n\t\t\t\tvar v_trans_lensq = ( v_trans_x * v_trans_x + v_trans_y * v_trans_y );\r\n\t\t\t\tif ( v_trans_lensq <= 2 ) {\r\n\t\r\n\t\t\t\t\treturn\tnew THREE.Vector2( v_trans_x, v_trans_y );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tshrink_by = Math.sqrt( v_trans_lensq / 2 );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\t// handle special case of collinear edges\r\n\t\r\n\t\t\t\tvar direction_eq = false;\t\t// assumes: opposite\r\n\t\t\t\tif ( v_prev_x > EPSILON ) {\r\n\t\r\n\t\t\t\t\tif ( v_next_x > EPSILON ) {\r\n\t\r\n\t\t\t\t\t\tdirection_eq = true;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tif ( v_prev_x < - EPSILON ) {\r\n\t\r\n\t\t\t\t\t\tif ( v_next_x < - EPSILON ) {\r\n\t\r\n\t\t\t\t\t\t\tdirection_eq = true;\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\tif ( Math.sign( v_prev_y ) === Math.sign( v_next_y ) ) {\r\n\t\r\n\t\t\t\t\t\t\tdirection_eq = true;\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( direction_eq ) {\r\n\t\r\n\t\t\t\t\t// console.log(\"Warning: lines are a straight sequence\");\r\n\t\t\t\t\tv_trans_x = - v_prev_y;\r\n\t\t\t\t\tv_trans_y =  v_prev_x;\r\n\t\t\t\t\tshrink_by = Math.sqrt( v_prev_lensq );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t// console.log(\"Warning: lines are a straight spike\");\r\n\t\t\t\t\tv_trans_x = v_prev_x;\r\n\t\t\t\t\tv_trans_y = v_prev_y;\r\n\t\t\t\t\tshrink_by = Math.sqrt( v_prev_lensq / 2 );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn\tnew THREE.Vector2( v_trans_x / shrink_by, v_trans_y / shrink_by );\r\n\t\r\n\t\t}\r\n\t\r\n\t\r\n\t\tvar contourMovements = [];\r\n\t\r\n\t\tfor ( var i = 0, il = contour.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\r\n\t\r\n\t\t\tif ( j === il ) j = 0;\r\n\t\t\tif ( k === il ) k = 0;\r\n\t\r\n\t\t\t//  (j)---(i)---(k)\r\n\t\t\t// console.log('i,j,k', i, j , k)\r\n\t\r\n\t\t\tcontourMovements[ i ] = getBevelVec( contour[ i ], contour[ j ], contour[ k ] );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tvar holesMovements = [], oneHoleMovements, verticesMovements = contourMovements.concat();\r\n\t\r\n\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\r\n\t\r\n\t\t\tahole = holes[ h ];\r\n\t\r\n\t\t\toneHoleMovements = [];\r\n\t\r\n\t\t\tfor ( i = 0, il = ahole.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\r\n\t\r\n\t\t\t\tif ( j === il ) j = 0;\r\n\t\t\t\tif ( k === il ) k = 0;\r\n\t\r\n\t\t\t\t//  (j)---(i)---(k)\r\n\t\t\t\toneHoleMovements[ i ] = getBevelVec( ahole[ i ], ahole[ j ], ahole[ k ] );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tholesMovements.push( oneHoleMovements );\r\n\t\t\tverticesMovements = verticesMovements.concat( oneHoleMovements );\r\n\t\r\n\t\t}\r\n\t\r\n\t\r\n\t\t// Loop bevelSegments, 1 for the front, 1 for the back\r\n\t\r\n\t\tfor ( b = 0; b < bevelSegments; b ++ ) {\r\n\t\r\n\t\t\t//for ( b = bevelSegments; b > 0; b -- ) {\r\n\t\r\n\t\t\tt = b / bevelSegments;\r\n\t\t\tz = bevelThickness * ( 1 - t );\r\n\t\r\n\t\t\t//z = bevelThickness * t;\r\n\t\t\tbs = bevelSize * ( Math.sin ( t * Math.PI / 2 ) ); // curved\r\n\t\t\t//bs = bevelSize * t; // linear\r\n\t\r\n\t\t\t// contract shape\r\n\t\r\n\t\t\tfor ( i = 0, il = contour.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\tvert = scalePt2( contour[ i ], contourMovements[ i ], bs );\r\n\t\r\n\t\t\t\tv( vert.x, vert.y,  - z );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// expand holes\r\n\t\r\n\t\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\r\n\t\r\n\t\t\t\tahole = holes[ h ];\r\n\t\t\t\toneHoleMovements = holesMovements[ h ];\r\n\t\r\n\t\t\t\tfor ( i = 0, il = ahole.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\t\tvert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\r\n\t\r\n\t\t\t\t\tv( vert.x, vert.y,  - z );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tbs = bevelSize;\r\n\t\r\n\t\t// Back facing vertices\r\n\t\r\n\t\tfor ( i = 0; i < vlen; i ++ ) {\r\n\t\r\n\t\t\tvert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\r\n\t\r\n\t\t\tif ( ! extrudeByPath ) {\r\n\t\r\n\t\t\t\tv( vert.x, vert.y, 0 );\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\t// v( vert.x, vert.y + extrudePts[ 0 ].y, extrudePts[ 0 ].x );\r\n\t\r\n\t\t\t\tnormal.copy( splineTube.normals[ 0 ] ).multiplyScalar( vert.x );\r\n\t\t\t\tbinormal.copy( splineTube.binormals[ 0 ] ).multiplyScalar( vert.y );\r\n\t\r\n\t\t\t\tposition2.copy( extrudePts[ 0 ] ).add( normal ).add( binormal );\r\n\t\r\n\t\t\t\tv( position2.x, position2.y, position2.z );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// Add stepped vertices...\r\n\t\t// Including front facing vertices\r\n\t\r\n\t\tvar s;\r\n\t\r\n\t\tfor ( s = 1; s <= steps; s ++ ) {\r\n\t\r\n\t\t\tfor ( i = 0; i < vlen; i ++ ) {\r\n\t\r\n\t\t\t\tvert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\r\n\t\r\n\t\t\t\tif ( ! extrudeByPath ) {\r\n\t\r\n\t\t\t\t\tv( vert.x, vert.y, amount / steps * s );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t// v( vert.x, vert.y + extrudePts[ s - 1 ].y, extrudePts[ s - 1 ].x );\r\n\t\r\n\t\t\t\t\tnormal.copy( splineTube.normals[ s ] ).multiplyScalar( vert.x );\r\n\t\t\t\t\tbinormal.copy( splineTube.binormals[ s ] ).multiplyScalar( vert.y );\r\n\t\r\n\t\t\t\t\tposition2.copy( extrudePts[ s ] ).add( normal ).add( binormal );\r\n\t\r\n\t\t\t\t\tv( position2.x, position2.y, position2.z );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\r\n\t\t// Add bevel segments planes\r\n\t\r\n\t\t//for ( b = 1; b <= bevelSegments; b ++ ) {\r\n\t\tfor ( b = bevelSegments - 1; b >= 0; b -- ) {\r\n\t\r\n\t\t\tt = b / bevelSegments;\r\n\t\t\tz = bevelThickness * ( 1 - t );\r\n\t\t\t//bs = bevelSize * ( 1-Math.sin ( ( 1 - t ) * Math.PI/2 ) );\r\n\t\t\tbs = bevelSize * Math.sin ( t * Math.PI / 2 );\r\n\t\r\n\t\t\t// contract shape\r\n\t\r\n\t\t\tfor ( i = 0, il = contour.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\tvert = scalePt2( contour[ i ], contourMovements[ i ], bs );\r\n\t\t\t\tv( vert.x, vert.y,  amount + z );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// expand holes\r\n\t\r\n\t\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\r\n\t\r\n\t\t\t\tahole = holes[ h ];\r\n\t\t\t\toneHoleMovements = holesMovements[ h ];\r\n\t\r\n\t\t\t\tfor ( i = 0, il = ahole.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\t\tvert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\r\n\t\r\n\t\t\t\t\tif ( ! extrudeByPath ) {\r\n\t\r\n\t\t\t\t\t\tv( vert.x, vert.y,  amount + z );\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\tv( vert.x, vert.y + extrudePts[ steps - 1 ].y, extrudePts[ steps - 1 ].x + z );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\t/* Faces */\r\n\t\r\n\t\t// Top and bottom faces\r\n\t\r\n\t\tbuildLidFaces();\r\n\t\r\n\t\t// Sides faces\r\n\t\r\n\t\tbuildSideFaces();\r\n\t\r\n\t\r\n\t\t/////  Internal functions\r\n\t\r\n\t\tfunction buildLidFaces() {\r\n\t\r\n\t\t\tif ( bevelEnabled ) {\r\n\t\r\n\t\t\t\tvar layer = 0; // steps + 1\r\n\t\t\t\tvar offset = vlen * layer;\r\n\t\r\n\t\t\t\t// Bottom faces\r\n\t\r\n\t\t\t\tfor ( i = 0; i < flen; i ++ ) {\r\n\t\r\n\t\t\t\t\tface = faces[ i ];\r\n\t\t\t\t\tf3( face[ 2 ] + offset, face[ 1 ] + offset, face[ 0 ] + offset );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tlayer = steps + bevelSegments * 2;\r\n\t\t\t\toffset = vlen * layer;\r\n\t\r\n\t\t\t\t// Top faces\r\n\t\r\n\t\t\t\tfor ( i = 0; i < flen; i ++ ) {\r\n\t\r\n\t\t\t\t\tface = faces[ i ];\r\n\t\t\t\t\tf3( face[ 0 ] + offset, face[ 1 ] + offset, face[ 2 ] + offset );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\t// Bottom faces\r\n\t\r\n\t\t\t\tfor ( i = 0; i < flen; i ++ ) {\r\n\t\r\n\t\t\t\t\tface = faces[ i ];\r\n\t\t\t\t\tf3( face[ 2 ], face[ 1 ], face[ 0 ] );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// Top faces\r\n\t\r\n\t\t\t\tfor ( i = 0; i < flen; i ++ ) {\r\n\t\r\n\t\t\t\t\tface = faces[ i ];\r\n\t\t\t\t\tf3( face[ 0 ] + vlen * steps, face[ 1 ] + vlen * steps, face[ 2 ] + vlen * steps );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// Create faces for the z-sides of the shape\r\n\t\r\n\t\tfunction buildSideFaces() {\r\n\t\r\n\t\t\tvar layeroffset = 0;\r\n\t\t\tsidewalls( contour, layeroffset );\r\n\t\t\tlayeroffset += contour.length;\r\n\t\r\n\t\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\r\n\t\r\n\t\t\t\tahole = holes[ h ];\r\n\t\t\t\tsidewalls( ahole, layeroffset );\r\n\t\r\n\t\t\t\t//, true\r\n\t\t\t\tlayeroffset += ahole.length;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction sidewalls( contour, layeroffset ) {\r\n\t\r\n\t\t\tvar j, k;\r\n\t\t\ti = contour.length;\r\n\t\r\n\t\t\twhile ( -- i >= 0 ) {\r\n\t\r\n\t\t\t\tj = i;\r\n\t\t\t\tk = i - 1;\r\n\t\t\t\tif ( k < 0 ) k = contour.length - 1;\r\n\t\r\n\t\t\t\t//console.log('b', i,j, i-1, k,vertices.length);\r\n\t\r\n\t\t\t\tvar s = 0, sl = steps  + bevelSegments * 2;\r\n\t\r\n\t\t\t\tfor ( s = 0; s < sl; s ++ ) {\r\n\t\r\n\t\t\t\t\tvar slen1 = vlen * s;\r\n\t\t\t\t\tvar slen2 = vlen * ( s + 1 );\r\n\t\r\n\t\t\t\t\tvar a = layeroffset + j + slen1,\r\n\t\t\t\t\t\tb = layeroffset + k + slen1,\r\n\t\t\t\t\t\tc = layeroffset + k + slen2,\r\n\t\t\t\t\t\td = layeroffset + j + slen2;\r\n\t\r\n\t\t\t\t\tf4( a, b, c, d, contour, s, sl, j, k );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\r\n\t\tfunction v( x, y, z ) {\r\n\t\r\n\t\t\tscope.vertices.push( new THREE.Vector3( x, y, z ) );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction f3( a, b, c ) {\r\n\t\r\n\t\t\ta += shapesOffset;\r\n\t\t\tb += shapesOffset;\r\n\t\t\tc += shapesOffset;\r\n\t\r\n\t\t\tscope.faces.push( new THREE.Face3( a, b, c ) );\r\n\t\r\n\t\t\tvar uvs = uvgen.generateTopUV( scope, a, b, c );\r\n\t\r\n\t\t\tscope.faceVertexUvs[ 0 ].push( uvs );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction f4( a, b, c, d, wallContour, stepIndex, stepsLength, contourIndex1, contourIndex2 ) {\r\n\t\r\n\t\t\ta += shapesOffset;\r\n\t\t\tb += shapesOffset;\r\n\t\t\tc += shapesOffset;\r\n\t\t\td += shapesOffset;\r\n\t\r\n\t\t\tscope.faces.push( new THREE.Face3( a, b, d ) );\r\n\t\t\tscope.faces.push( new THREE.Face3( b, c, d ) );\r\n\t\r\n\t\t\tvar uvs = uvgen.generateSideWallUV( scope, a, b, c, d );\r\n\t\r\n\t\t\tscope.faceVertexUvs[ 0 ].push( [ uvs[ 0 ], uvs[ 1 ], uvs[ 3 ] ] );\r\n\t\t\tscope.faceVertexUvs[ 0 ].push( [ uvs[ 1 ], uvs[ 2 ], uvs[ 3 ] ] );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.ExtrudeGeometry.WorldUVGenerator = {\r\n\t\r\n\t\tgenerateTopUV: function ( geometry, indexA, indexB, indexC ) {\r\n\t\r\n\t\t\tvar vertices = geometry.vertices;\r\n\t\r\n\t\t\tvar a = vertices[ indexA ];\r\n\t\t\tvar b = vertices[ indexB ];\r\n\t\t\tvar c = vertices[ indexC ];\r\n\t\r\n\t\t\treturn [\r\n\t\t\t\tnew THREE.Vector2( a.x, a.y ),\r\n\t\t\t\tnew THREE.Vector2( b.x, b.y ),\r\n\t\t\t\tnew THREE.Vector2( c.x, c.y )\r\n\t\t\t];\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgenerateSideWallUV: function ( geometry, indexA, indexB, indexC, indexD ) {\r\n\t\r\n\t\t\tvar vertices = geometry.vertices;\r\n\t\r\n\t\t\tvar a = vertices[ indexA ];\r\n\t\t\tvar b = vertices[ indexB ];\r\n\t\t\tvar c = vertices[ indexC ];\r\n\t\t\tvar d = vertices[ indexD ];\r\n\t\r\n\t\t\tif ( Math.abs( a.y - b.y ) < 0.01 ) {\r\n\t\r\n\t\t\t\treturn [\r\n\t\t\t\t\tnew THREE.Vector2( a.x, 1 - a.z ),\r\n\t\t\t\t\tnew THREE.Vector2( b.x, 1 - b.z ),\r\n\t\t\t\t\tnew THREE.Vector2( c.x, 1 - c.z ),\r\n\t\t\t\t\tnew THREE.Vector2( d.x, 1 - d.z )\r\n\t\t\t\t];\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\treturn [\r\n\t\t\t\t\tnew THREE.Vector2( a.y, 1 - a.z ),\r\n\t\t\t\t\tnew THREE.Vector2( b.y, 1 - b.z ),\r\n\t\t\t\t\tnew THREE.Vector2( c.y, 1 - c.z ),\r\n\t\t\t\t\tnew THREE.Vector2( d.y, 1 - d.z )\r\n\t\t\t\t];\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t};\r\n\t\r\n\t// File:src/extras/geometries/ShapeGeometry.js\r\n\t\r\n\t/**\r\n\t * @author jonobr1 / http://jonobr1.com\r\n\t *\r\n\t * Creates a one-sided polygonal geometry from a path shape. Similar to\r\n\t * ExtrudeGeometry.\r\n\t *\r\n\t * parameters = {\r\n\t *\r\n\t *\tcurveSegments: <int>, // number of points on the curves. NOT USED AT THE MOMENT.\r\n\t *\r\n\t *\tmaterial: <int> // material index for front and back faces\r\n\t *\tuvGenerator: <Object> // object that provides UV generator functions\r\n\t *\r\n\t * }\r\n\t **/\r\n\t\r\n\tTHREE.ShapeGeometry = function ( shapes, options ) {\r\n\t\r\n\t\tTHREE.Geometry.call( this );\r\n\t\r\n\t\tthis.type = 'ShapeGeometry';\r\n\t\r\n\t\tif ( Array.isArray( shapes ) === false ) shapes = [ shapes ];\r\n\t\r\n\t\tthis.addShapeList( shapes, options );\r\n\t\r\n\t\tthis.computeFaceNormals();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.ShapeGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\n\tTHREE.ShapeGeometry.prototype.constructor = THREE.ShapeGeometry;\r\n\t\r\n\t/**\r\n\t * Add an array of shapes to THREE.ShapeGeometry.\r\n\t */\r\n\tTHREE.ShapeGeometry.prototype.addShapeList = function ( shapes, options ) {\r\n\t\r\n\t\tfor ( var i = 0, l = shapes.length; i < l; i ++ ) {\r\n\t\r\n\t\t\tthis.addShape( shapes[ i ], options );\r\n\t\r\n\t\t}\r\n\t\r\n\t\treturn this;\r\n\t\r\n\t};\r\n\t\r\n\t/**\r\n\t * Adds a shape to THREE.ShapeGeometry, based on THREE.ExtrudeGeometry.\r\n\t */\r\n\tTHREE.ShapeGeometry.prototype.addShape = function ( shape, options ) {\r\n\t\r\n\t\tif ( options === undefined ) options = {};\r\n\t\tvar curveSegments = options.curveSegments !== undefined ? options.curveSegments : 12;\r\n\t\r\n\t\tvar material = options.material;\r\n\t\tvar uvgen = options.UVGenerator === undefined ? THREE.ExtrudeGeometry.WorldUVGenerator : options.UVGenerator;\r\n\t\r\n\t\t//\r\n\t\r\n\t\tvar i, l, hole;\r\n\t\r\n\t\tvar shapesOffset = this.vertices.length;\r\n\t\tvar shapePoints = shape.extractPoints( curveSegments );\r\n\t\r\n\t\tvar vertices = shapePoints.shape;\r\n\t\tvar holes = shapePoints.holes;\r\n\t\r\n\t\tvar reverse = ! THREE.Shape.Utils.isClockWise( vertices );\r\n\t\r\n\t\tif ( reverse ) {\r\n\t\r\n\t\t\tvertices = vertices.reverse();\r\n\t\r\n\t\t\t// Maybe we should also check if holes are in the opposite direction, just to be safe...\r\n\t\r\n\t\t\tfor ( i = 0, l = holes.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\thole = holes[ i ];\r\n\t\r\n\t\t\t\tif ( THREE.Shape.Utils.isClockWise( hole ) ) {\r\n\t\r\n\t\t\t\t\tholes[ i ] = hole.reverse();\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treverse = false;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tvar faces = THREE.Shape.Utils.triangulateShape( vertices, holes );\r\n\t\r\n\t\t// Vertices\r\n\t\r\n\t\tfor ( i = 0, l = holes.length; i < l; i ++ ) {\r\n\t\r\n\t\t\thole = holes[ i ];\r\n\t\t\tvertices = vertices.concat( hole );\r\n\t\r\n\t\t}\r\n\t\r\n\t\t//\r\n\t\r\n\t\tvar vert, vlen = vertices.length;\r\n\t\tvar face, flen = faces.length;\r\n\t\r\n\t\tfor ( i = 0; i < vlen; i ++ ) {\r\n\t\r\n\t\t\tvert = vertices[ i ];\r\n\t\r\n\t\t\tthis.vertices.push( new THREE.Vector3( vert.x, vert.y, 0 ) );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfor ( i = 0; i < flen; i ++ ) {\r\n\t\r\n\t\t\tface = faces[ i ];\r\n\t\r\n\t\t\tvar a = face[ 0 ] + shapesOffset;\r\n\t\t\tvar b = face[ 1 ] + shapesOffset;\r\n\t\t\tvar c = face[ 2 ] + shapesOffset;\r\n\t\r\n\t\t\tthis.faces.push( new THREE.Face3( a, b, c, null, null, material ) );\r\n\t\t\tthis.faceVertexUvs[ 0 ].push( uvgen.generateTopUV( this, a, b, c ) );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/geometries/LatheGeometry.js\r\n\t\r\n\t/**\r\n\t * @author astrodud / http://astrodud.isgreat.org/\r\n\t * @author zz85 / https://github.com/zz85\r\n\t * @author bhouston / http://exocortex.com\r\n\t */\r\n\t\r\n\t// points - to create a closed torus, one must use a set of points \r\n\t//    like so: [ a, b, c, d, a ], see first is the same as last.\r\n\t// segments - the number of circumference segments to create\r\n\t// phiStart - the starting radian\r\n\t// phiLength - the radian (0 to 2*PI) range of the lathed section\r\n\t//    2*pi is a closed lathe, less than 2PI is a portion.\r\n\t\r\n\tTHREE.LatheGeometry = function ( points, segments, phiStart, phiLength ) {\r\n\t\r\n\t\tTHREE.Geometry.call( this );\r\n\t\r\n\t\tthis.type = 'LatheGeometry';\r\n\t\r\n\t\tthis.parameters = {\r\n\t\t\tpoints: points,\r\n\t\t\tsegments: segments,\r\n\t\t\tphiStart: phiStart,\r\n\t\t\tphiLength: phiLength\r\n\t\t};\r\n\t\r\n\t\tsegments = segments || 12;\r\n\t\tphiStart = phiStart || 0;\r\n\t\tphiLength = phiLength || 2 * Math.PI;\r\n\t\r\n\t\tvar inversePointLength = 1.0 / ( points.length - 1 );\r\n\t\tvar inverseSegments = 1.0 / segments;\r\n\t\r\n\t\tfor ( var i = 0, il = segments; i <= il; i ++ ) {\r\n\t\r\n\t\t\tvar phi = phiStart + i * inverseSegments * phiLength;\r\n\t\r\n\t\t\tvar c = Math.cos( phi ),\r\n\t\t\t\ts = Math.sin( phi );\r\n\t\r\n\t\t\tfor ( var j = 0, jl = points.length; j < jl; j ++ ) {\r\n\t\r\n\t\t\t\tvar pt = points[ j ];\r\n\t\r\n\t\t\t\tvar vertex = new THREE.Vector3();\r\n\t\r\n\t\t\t\tvertex.x = c * pt.x - s * pt.y;\r\n\t\t\t\tvertex.y = s * pt.x + c * pt.y;\r\n\t\t\t\tvertex.z = pt.z;\r\n\t\r\n\t\t\t\tthis.vertices.push( vertex );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tvar np = points.length;\r\n\t\r\n\t\tfor ( var i = 0, il = segments; i < il; i ++ ) {\r\n\t\r\n\t\t\tfor ( var j = 0, jl = points.length - 1; j < jl; j ++ ) {\r\n\t\r\n\t\t\t\tvar base = j + np * i;\r\n\t\t\t\tvar a = base;\r\n\t\t\t\tvar b = base + np;\r\n\t\t\t\tvar c = base + 1 + np;\r\n\t\t\t\tvar d = base + 1;\r\n\t\r\n\t\t\t\tvar u0 = i * inverseSegments;\r\n\t\t\t\tvar v0 = j * inversePointLength;\r\n\t\t\t\tvar u1 = u0 + inverseSegments;\r\n\t\t\t\tvar v1 = v0 + inversePointLength;\r\n\t\r\n\t\t\t\tthis.faces.push( new THREE.Face3( a, b, d ) );\r\n\t\r\n\t\t\t\tthis.faceVertexUvs[ 0 ].push( [\r\n\t\r\n\t\t\t\t\tnew THREE.Vector2( u0, v0 ),\r\n\t\t\t\t\tnew THREE.Vector2( u1, v0 ),\r\n\t\t\t\t\tnew THREE.Vector2( u0, v1 )\r\n\t\r\n\t\t\t\t] );\r\n\t\r\n\t\t\t\tthis.faces.push( new THREE.Face3( b, c, d ) );\r\n\t\r\n\t\t\t\tthis.faceVertexUvs[ 0 ].push( [\r\n\t\r\n\t\t\t\t\tnew THREE.Vector2( u1, v0 ),\r\n\t\t\t\t\tnew THREE.Vector2( u1, v1 ),\r\n\t\t\t\t\tnew THREE.Vector2( u0, v1 )\r\n\t\r\n\t\t\t\t] );\r\n\t\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.mergeVertices();\r\n\t\tthis.computeFaceNormals();\r\n\t\tthis.computeVertexNormals();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.LatheGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\n\tTHREE.LatheGeometry.prototype.constructor = THREE.LatheGeometry;\r\n\t\r\n\t// File:src/extras/geometries/PlaneGeometry.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * based on http://papervision3d.googlecode.com/svn/trunk/as3/trunk/src/org/papervision3d/objects/primitives/Plane.as\r\n\t */\r\n\t\r\n\tTHREE.PlaneGeometry = function ( width, height, widthSegments, heightSegments ) {\r\n\t\r\n\t\tTHREE.Geometry.call( this );\r\n\t\r\n\t\tthis.type = 'PlaneGeometry';\r\n\t\r\n\t\tthis.parameters = {\r\n\t\t\twidth: width,\r\n\t\t\theight: height,\r\n\t\t\twidthSegments: widthSegments,\r\n\t\t\theightSegments: heightSegments\r\n\t\t};\r\n\t\r\n\t\tthis.fromBufferGeometry( new THREE.PlaneBufferGeometry( width, height, widthSegments, heightSegments ) );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.PlaneGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\n\tTHREE.PlaneGeometry.prototype.constructor = THREE.PlaneGeometry;\r\n\t\r\n\tTHREE.PlaneGeometry.prototype.clone = function () {\r\n\t\r\n\t\tvar geometry = new THREE.PlaneGeometry(\r\n\t\t\tthis.parameters.width,\r\n\t\t\tthis.parameters.height,\r\n\t\t\tthis.parameters.widthSegments,\r\n\t\t\tthis.parameters.heightSegments\r\n\t\t);\r\n\t\r\n\t\treturn geometry;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/geometries/PlaneBufferGeometry.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * based on http://papervision3d.googlecode.com/svn/trunk/as3/trunk/src/org/papervision3d/objects/primitives/Plane.as\r\n\t */\r\n\t\r\n\tTHREE.PlaneBufferGeometry = function ( width, height, widthSegments, heightSegments ) {\r\n\t\r\n\t\tTHREE.BufferGeometry.call( this );\r\n\t\r\n\t\tthis.type = 'PlaneBufferGeometry';\r\n\t\r\n\t\tthis.parameters = {\r\n\t\t\twidth: width,\r\n\t\t\theight: height,\r\n\t\t\twidthSegments: widthSegments,\r\n\t\t\theightSegments: heightSegments\r\n\t\t};\r\n\t\r\n\t\tvar width_half = width / 2;\r\n\t\tvar height_half = height / 2;\r\n\t\r\n\t\tvar gridX = Math.floor( widthSegments ) || 1;\r\n\t\tvar gridY = Math.floor( heightSegments ) || 1;\r\n\t\r\n\t\tvar gridX1 = gridX + 1;\r\n\t\tvar gridY1 = gridY + 1;\r\n\t\r\n\t\tvar segment_width = width / gridX;\r\n\t\tvar segment_height = height / gridY;\r\n\t\r\n\t\tvar vertices = new Float32Array( gridX1 * gridY1 * 3 );\r\n\t\tvar normals = new Float32Array( gridX1 * gridY1 * 3 );\r\n\t\tvar uvs = new Float32Array( gridX1 * gridY1 * 2 );\r\n\t\r\n\t\tvar offset = 0;\r\n\t\tvar offset2 = 0;\r\n\t\r\n\t\tfor ( var iy = 0; iy < gridY1; iy ++ ) {\r\n\t\r\n\t\t\tvar y = iy * segment_height - height_half;\r\n\t\r\n\t\t\tfor ( var ix = 0; ix < gridX1; ix ++ ) {\r\n\t\r\n\t\t\t\tvar x = ix * segment_width - width_half;\r\n\t\r\n\t\t\t\tvertices[ offset ] = x;\r\n\t\t\t\tvertices[ offset + 1 ] = - y;\r\n\t\r\n\t\t\t\tnormals[ offset + 2 ] = 1;\r\n\t\r\n\t\t\t\tuvs[ offset2 ] = ix / gridX;\r\n\t\t\t\tuvs[ offset2 + 1 ] = 1 - ( iy / gridY );\r\n\t\r\n\t\t\t\toffset += 3;\r\n\t\t\t\toffset2 += 2;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\toffset = 0;\r\n\t\r\n\t\tvar indices = new ( ( vertices.length / 3 ) > 65535 ? Uint32Array : Uint16Array )( gridX * gridY * 6 );\r\n\t\r\n\t\tfor ( var iy = 0; iy < gridY; iy ++ ) {\r\n\t\r\n\t\t\tfor ( var ix = 0; ix < gridX; ix ++ ) {\r\n\t\r\n\t\t\t\tvar a = ix + gridX1 * iy;\r\n\t\t\t\tvar b = ix + gridX1 * ( iy + 1 );\r\n\t\t\t\tvar c = ( ix + 1 ) + gridX1 * ( iy + 1 );\r\n\t\t\t\tvar d = ( ix + 1 ) + gridX1 * iy;\r\n\t\r\n\t\t\t\tindices[ offset ] = a;\r\n\t\t\t\tindices[ offset + 1 ] = b;\r\n\t\t\t\tindices[ offset + 2 ] = d;\r\n\t\r\n\t\t\t\tindices[ offset + 3 ] = b;\r\n\t\t\t\tindices[ offset + 4 ] = c;\r\n\t\t\t\tindices[ offset + 5 ] = d;\r\n\t\r\n\t\t\t\toffset += 6;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.setIndex( new THREE.BufferAttribute( indices, 1 ) );\r\n\t\tthis.addAttribute( 'position', new THREE.BufferAttribute( vertices, 3 ) );\r\n\t\tthis.addAttribute( 'normal', new THREE.BufferAttribute( normals, 3 ) );\r\n\t\tthis.addAttribute( 'uv', new THREE.BufferAttribute( uvs, 2 ) );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.PlaneBufferGeometry.prototype = Object.create( THREE.BufferGeometry.prototype );\r\n\tTHREE.PlaneBufferGeometry.prototype.constructor = THREE.PlaneBufferGeometry;\r\n\t\r\n\tTHREE.PlaneBufferGeometry.prototype.clone = function () {\r\n\t\r\n\t\tvar geometry = new THREE.PlaneBufferGeometry(\r\n\t\t\tthis.parameters.width,\r\n\t\t\tthis.parameters.height,\r\n\t\t\tthis.parameters.widthSegments,\r\n\t\t\tthis.parameters.heightSegments\r\n\t\t);\r\n\t\r\n\t\tgeometry.copy( this );\r\n\t\r\n\t\treturn geometry;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/geometries/RingGeometry.js\r\n\t\r\n\t/**\r\n\t * @author Kaleb Murphy\r\n\t */\r\n\t\r\n\tTHREE.RingGeometry = function ( innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength ) {\r\n\t\r\n\t\tTHREE.Geometry.call( this );\r\n\t\r\n\t\tthis.type = 'RingGeometry';\r\n\t\r\n\t\tthis.parameters = {\r\n\t\t\tinnerRadius: innerRadius,\r\n\t\t\touterRadius: outerRadius,\r\n\t\t\tthetaSegments: thetaSegments,\r\n\t\t\tphiSegments: phiSegments,\r\n\t\t\tthetaStart: thetaStart,\r\n\t\t\tthetaLength: thetaLength\r\n\t\t};\r\n\t\r\n\t\tinnerRadius = innerRadius || 0;\r\n\t\touterRadius = outerRadius || 50;\r\n\t\r\n\t\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\r\n\t\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2;\r\n\t\r\n\t\tthetaSegments = thetaSegments !== undefined ? Math.max( 3, thetaSegments ) : 8;\r\n\t\tphiSegments = phiSegments !== undefined ? Math.max( 1, phiSegments ) : 8;\r\n\t\r\n\t\tvar i, o, uvs = [], radius = innerRadius, radiusStep = ( ( outerRadius - innerRadius ) / phiSegments );\r\n\t\r\n\t\tfor ( i = 0; i < phiSegments + 1; i ++ ) {\r\n\t\r\n\t\t\t// concentric circles inside ring\r\n\t\r\n\t\t\tfor ( o = 0; o < thetaSegments + 1; o ++ ) {\r\n\t\r\n\t\t\t\t// number of segments per circle\r\n\t\r\n\t\t\t\tvar vertex = new THREE.Vector3();\r\n\t\t\t\tvar segment = thetaStart + o / thetaSegments * thetaLength;\r\n\t\t\t\tvertex.x = radius * Math.cos( segment );\r\n\t\t\t\tvertex.y = radius * Math.sin( segment );\r\n\t\r\n\t\t\t\tthis.vertices.push( vertex );\r\n\t\t\t\tuvs.push( new THREE.Vector2( ( vertex.x / outerRadius + 1 ) / 2, ( vertex.y / outerRadius + 1 ) / 2 ) );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tradius += radiusStep;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tvar n = new THREE.Vector3( 0, 0, 1 );\r\n\t\r\n\t\tfor ( i = 0; i < phiSegments; i ++ ) {\r\n\t\r\n\t\t\t// concentric circles inside ring\r\n\t\r\n\t\t\tvar thetaSegment = i * ( thetaSegments + 1 );\r\n\t\r\n\t\t\tfor ( o = 0; o < thetaSegments ; o ++ ) {\r\n\t\r\n\t\t\t\t// number of segments per circle\r\n\t\r\n\t\t\t\tvar segment = o + thetaSegment;\r\n\t\r\n\t\t\t\tvar v1 = segment;\r\n\t\t\t\tvar v2 = segment + thetaSegments + 1;\r\n\t\t\t\tvar v3 = segment + thetaSegments + 2;\r\n\t\r\n\t\t\t\tthis.faces.push( new THREE.Face3( v1, v2, v3, [ n.clone(), n.clone(), n.clone() ] ) );\r\n\t\t\t\tthis.faceVertexUvs[ 0 ].push( [ uvs[ v1 ].clone(), uvs[ v2 ].clone(), uvs[ v3 ].clone() ] );\r\n\t\r\n\t\t\t\tv1 = segment;\r\n\t\t\t\tv2 = segment + thetaSegments + 2;\r\n\t\t\t\tv3 = segment + 1;\r\n\t\r\n\t\t\t\tthis.faces.push( new THREE.Face3( v1, v2, v3, [ n.clone(), n.clone(), n.clone() ] ) );\r\n\t\t\t\tthis.faceVertexUvs[ 0 ].push( [ uvs[ v1 ].clone(), uvs[ v2 ].clone(), uvs[ v3 ].clone() ] );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.computeFaceNormals();\r\n\t\r\n\t\tthis.boundingSphere = new THREE.Sphere( new THREE.Vector3(), radius );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.RingGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\n\tTHREE.RingGeometry.prototype.constructor = THREE.RingGeometry;\r\n\t\r\n\tTHREE.RingGeometry.prototype.clone = function () {\r\n\t\r\n\t\tvar geometry = new THREE.RingGeometry(\r\n\t\t\tthis.parameters.innerRadius,\r\n\t\t\tthis.parameters.outerRadius,\r\n\t\t\tthis.parameters.thetaSegments,\r\n\t\t\tthis.parameters.phiSegments,\r\n\t\t\tthis.parameters.thetaStart,\r\n\t\t\tthis.parameters.thetaLength\r\n\t\t);\r\n\t\r\n\t\treturn geometry;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/geometries/SphereGeometry.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.SphereGeometry = function ( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength ) {\r\n\t\r\n\t\tTHREE.Geometry.call( this );\r\n\t\r\n\t\tthis.type = 'SphereGeometry';\r\n\t\r\n\t\tthis.parameters = {\r\n\t\t\tradius: radius,\r\n\t\t\twidthSegments: widthSegments,\r\n\t\t\theightSegments: heightSegments,\r\n\t\t\tphiStart: phiStart,\r\n\t\t\tphiLength: phiLength,\r\n\t\t\tthetaStart: thetaStart,\r\n\t\t\tthetaLength: thetaLength\r\n\t\t};\r\n\t\r\n\t\tthis.fromBufferGeometry( new THREE.SphereBufferGeometry( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength ) );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.SphereGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\n\tTHREE.SphereGeometry.prototype.constructor = THREE.SphereGeometry;\r\n\t\r\n\tTHREE.SphereGeometry.prototype.clone = function () {\r\n\t\r\n\t\tvar geometry = new THREE.SphereGeometry(\r\n\t\t\tthis.parameters.radius,\r\n\t\t\tthis.parameters.widthSegments,\r\n\t\t\tthis.parameters.heightSegments,\r\n\t\t\tthis.parameters.phiStart,\r\n\t\t\tthis.parameters.phiLength,\r\n\t\t\tthis.parameters.thetaStart,\r\n\t\t\tthis.parameters.thetaLength\r\n\t\t);\r\n\t\r\n\t\treturn geometry;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/geometries/SphereBufferGeometry.js\r\n\t\r\n\t/**\r\n\t * @author benaadams / https://twitter.com/ben_a_adams\r\n\t * based on THREE.SphereGeometry\r\n\t */\r\n\t\r\n\tTHREE.SphereBufferGeometry = function ( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength ) {\r\n\t\r\n\t\tTHREE.BufferGeometry.call( this );\r\n\t\r\n\t\tthis.type = 'SphereBufferGeometry';\r\n\t\r\n\t\tthis.parameters = {\r\n\t\t\tradius: radius,\r\n\t\t\twidthSegments: widthSegments,\r\n\t\t\theightSegments: heightSegments,\r\n\t\t\tphiStart: phiStart,\r\n\t\t\tphiLength: phiLength,\r\n\t\t\tthetaStart: thetaStart,\r\n\t\t\tthetaLength: thetaLength\r\n\t\t};\r\n\t\r\n\t\tradius = radius || 50;\r\n\t\r\n\t\twidthSegments = Math.max( 3, Math.floor( widthSegments ) || 8 );\r\n\t\theightSegments = Math.max( 2, Math.floor( heightSegments ) || 6 );\r\n\t\r\n\t\tphiStart = phiStart !== undefined ? phiStart : 0;\r\n\t\tphiLength = phiLength !== undefined ? phiLength : Math.PI * 2;\r\n\t\r\n\t\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\r\n\t\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI;\r\n\t\r\n\t\tvar thetaEnd = thetaStart + thetaLength;\r\n\t\r\n\t\tvar vertexCount = ( ( widthSegments + 1 ) * ( heightSegments + 1 ) );\r\n\t\r\n\t\tvar positions = new THREE.BufferAttribute( new Float32Array( vertexCount * 3 ), 3 );\r\n\t\tvar normals = new THREE.BufferAttribute( new Float32Array( vertexCount * 3 ), 3 );\r\n\t\tvar uvs = new THREE.BufferAttribute( new Float32Array( vertexCount * 2 ), 2 );\r\n\t\r\n\t\tvar index = 0, vertices = [], normal = new THREE.Vector3();\r\n\t\r\n\t\tfor ( var y = 0; y <= heightSegments; y ++ ) {\r\n\t\r\n\t\t\tvar verticesRow = [];\r\n\t\r\n\t\t\tvar v = y / heightSegments;\r\n\t\r\n\t\t\tfor ( var x = 0; x <= widthSegments; x ++ ) {\r\n\t\r\n\t\t\t\tvar u = x / widthSegments;\r\n\t\r\n\t\t\t\tvar px = - radius * Math.cos( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\r\n\t\t\t\tvar py = radius * Math.cos( thetaStart + v * thetaLength );\r\n\t\t\t\tvar pz = radius * Math.sin( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\r\n\t\r\n\t\t\t\tnormal.set( px, py, pz ).normalize();\r\n\t\r\n\t\t\t\tpositions.setXYZ( index, px, py, pz );\r\n\t\t\t\tnormals.setXYZ( index, normal.x, normal.y, normal.z );\r\n\t\t\t\tuvs.setXY( index, u, 1 - v );\r\n\t\r\n\t\t\t\tverticesRow.push( index );\r\n\t\r\n\t\t\t\tindex ++;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvertices.push( verticesRow );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tvar indices = [];\r\n\t\r\n\t\tfor ( var y = 0; y < heightSegments; y ++ ) {\r\n\t\r\n\t\t\tfor ( var x = 0; x < widthSegments; x ++ ) {\r\n\t\r\n\t\t\t\tvar v1 = vertices[ y ][ x + 1 ];\r\n\t\t\t\tvar v2 = vertices[ y ][ x ];\r\n\t\t\t\tvar v3 = vertices[ y + 1 ][ x ];\r\n\t\t\t\tvar v4 = vertices[ y + 1 ][ x + 1 ];\r\n\t\r\n\t\t\t\tif ( y !== 0 || thetaStart > 0 ) indices.push( v1, v2, v4 );\r\n\t\t\t\tif ( y !== heightSegments - 1 || thetaEnd < Math.PI ) indices.push( v2, v3, v4 );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.setIndex( new THREE.BufferAttribute( new Uint16Array( indices ), 1 ) );\r\n\t\tthis.addAttribute( 'position', positions );\r\n\t\tthis.addAttribute( 'normal', normals );\r\n\t\tthis.addAttribute( 'uv', uvs );\r\n\t\r\n\t\tthis.boundingSphere = new THREE.Sphere( new THREE.Vector3(), radius );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.SphereBufferGeometry.prototype = Object.create( THREE.BufferGeometry.prototype );\r\n\tTHREE.SphereBufferGeometry.prototype.constructor = THREE.SphereBufferGeometry;\r\n\t\r\n\tTHREE.SphereBufferGeometry.prototype.clone = function () {\r\n\t\r\n\t\tvar geometry = new THREE.SphereBufferGeometry(\r\n\t\t\tthis.parameters.radius,\r\n\t\t\tthis.parameters.widthSegments,\r\n\t\t\tthis.parameters.heightSegments,\r\n\t\t\tthis.parameters.phiStart,\r\n\t\t\tthis.parameters.phiLength,\r\n\t\t\tthis.parameters.thetaStart,\r\n\t\t\tthis.parameters.thetaLength\r\n\t\t);\r\n\t\r\n\t\tgeometry.copy( this );\r\n\t\r\n\t\treturn geometry;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/geometries/TextGeometry.js\r\n\t\r\n\t/**\r\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t *\r\n\t * For creating 3D text geometry in three.js\r\n\t *\r\n\t * Text = 3D Text\r\n\t *\r\n\t * parameters = {\r\n\t *  size: \t\t\t<float>, \t// size of the text\r\n\t *  height: \t\t<float>, \t// thickness to extrude text\r\n\t *  curveSegments: \t<int>,\t\t// number of points on the curves\r\n\t *\r\n\t *  font: \t\t\t<string>,\t\t// font name\r\n\t *  weight: \t\t<string>,\t\t// font weight (normal, bold)\r\n\t *  style: \t\t\t<string>,\t\t// font style  (normal, italics)\r\n\t *\r\n\t *  bevelEnabled:\t<bool>,\t\t\t// turn on bevel\r\n\t *  bevelThickness: <float>, \t\t// how deep into text bevel goes\r\n\t *  bevelSize:\t\t<float>, \t\t// how far from text outline is bevel\r\n\t *  }\r\n\t *\r\n\t */\r\n\t\r\n\t/*\tUsage Examples\r\n\t\r\n\t\t// TextGeometry wrapper\r\n\t\r\n\t\tvar text3d = new TextGeometry( text, options );\r\n\t\r\n\t\t// Complete manner\r\n\t\r\n\t\tvar textShapes = THREE.FontUtils.generateShapes( text, options );\r\n\t\tvar text3d = new ExtrudeGeometry( textShapes, options );\r\n\t\r\n\t*/\r\n\t\r\n\t\r\n\tTHREE.TextGeometry = function ( text, parameters ) {\r\n\t\r\n\t\tparameters = parameters || {};\r\n\t\r\n\t\tvar textShapes = THREE.FontUtils.generateShapes( text, parameters );\r\n\t\r\n\t\t// translate parameters to ExtrudeGeometry API\r\n\t\r\n\t\tparameters.amount = parameters.height !== undefined ? parameters.height : 50;\r\n\t\r\n\t\t// defaults\r\n\t\r\n\t\tif ( parameters.bevelThickness === undefined ) parameters.bevelThickness = 10;\r\n\t\tif ( parameters.bevelSize === undefined ) parameters.bevelSize = 8;\r\n\t\tif ( parameters.bevelEnabled === undefined ) parameters.bevelEnabled = false;\r\n\t\r\n\t\tTHREE.ExtrudeGeometry.call( this, textShapes, parameters );\r\n\t\r\n\t\tthis.type = 'TextGeometry';\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.TextGeometry.prototype = Object.create( THREE.ExtrudeGeometry.prototype );\r\n\tTHREE.TextGeometry.prototype.constructor = THREE.TextGeometry;\r\n\t\r\n\t// File:src/extras/geometries/TorusGeometry.js\r\n\t\r\n\t/**\r\n\t * @author oosmoxiecode\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * based on http://code.google.com/p/away3d/source/browse/trunk/fp10/Away3DLite/src/away3dlite/primitives/Torus.as?r=2888\r\n\t */\r\n\t\r\n\tTHREE.TorusGeometry = function ( radius, tube, radialSegments, tubularSegments, arc ) {\r\n\t\r\n\t\tTHREE.Geometry.call( this );\r\n\t\r\n\t\tthis.type = 'TorusGeometry';\r\n\t\r\n\t\tthis.parameters = {\r\n\t\t\tradius: radius,\r\n\t\t\ttube: tube,\r\n\t\t\tradialSegments: radialSegments,\r\n\t\t\ttubularSegments: tubularSegments,\r\n\t\t\tarc: arc\r\n\t\t};\r\n\t\r\n\t\tradius = radius || 100;\r\n\t\ttube = tube || 40;\r\n\t\tradialSegments = radialSegments || 8;\r\n\t\ttubularSegments = tubularSegments || 6;\r\n\t\tarc = arc || Math.PI * 2;\r\n\t\r\n\t\tvar center = new THREE.Vector3(), uvs = [], normals = [];\r\n\t\r\n\t\tfor ( var j = 0; j <= radialSegments; j ++ ) {\r\n\t\r\n\t\t\tfor ( var i = 0; i <= tubularSegments; i ++ ) {\r\n\t\r\n\t\t\t\tvar u = i / tubularSegments * arc;\r\n\t\t\t\tvar v = j / radialSegments * Math.PI * 2;\r\n\t\r\n\t\t\t\tcenter.x = radius * Math.cos( u );\r\n\t\t\t\tcenter.y = radius * Math.sin( u );\r\n\t\r\n\t\t\t\tvar vertex = new THREE.Vector3();\r\n\t\t\t\tvertex.x = ( radius + tube * Math.cos( v ) ) * Math.cos( u );\r\n\t\t\t\tvertex.y = ( radius + tube * Math.cos( v ) ) * Math.sin( u );\r\n\t\t\t\tvertex.z = tube * Math.sin( v );\r\n\t\r\n\t\t\t\tthis.vertices.push( vertex );\r\n\t\r\n\t\t\t\tuvs.push( new THREE.Vector2( i / tubularSegments, j / radialSegments ) );\r\n\t\t\t\tnormals.push( vertex.clone().sub( center ).normalize() );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfor ( var j = 1; j <= radialSegments; j ++ ) {\r\n\t\r\n\t\t\tfor ( var i = 1; i <= tubularSegments; i ++ ) {\r\n\t\r\n\t\t\t\tvar a = ( tubularSegments + 1 ) * j + i - 1;\r\n\t\t\t\tvar b = ( tubularSegments + 1 ) * ( j - 1 ) + i - 1;\r\n\t\t\t\tvar c = ( tubularSegments + 1 ) * ( j - 1 ) + i;\r\n\t\t\t\tvar d = ( tubularSegments + 1 ) * j + i;\r\n\t\r\n\t\t\t\tvar face = new THREE.Face3( a, b, d, [ normals[ a ].clone(), normals[ b ].clone(), normals[ d ].clone() ] );\r\n\t\t\t\tthis.faces.push( face );\r\n\t\t\t\tthis.faceVertexUvs[ 0 ].push( [ uvs[ a ].clone(), uvs[ b ].clone(), uvs[ d ].clone() ] );\r\n\t\r\n\t\t\t\tface = new THREE.Face3( b, c, d, [ normals[ b ].clone(), normals[ c ].clone(), normals[ d ].clone() ] );\r\n\t\t\t\tthis.faces.push( face );\r\n\t\t\t\tthis.faceVertexUvs[ 0 ].push( [ uvs[ b ].clone(), uvs[ c ].clone(), uvs[ d ].clone() ] );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.computeFaceNormals();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.TorusGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\n\tTHREE.TorusGeometry.prototype.constructor = THREE.TorusGeometry;\r\n\t\r\n\tTHREE.TorusGeometry.prototype.clone = function () {\r\n\t\r\n\t\tvar geometry = new THREE.TorusGeometry(\r\n\t\t\tthis.parameters.radius,\r\n\t\t\tthis.parameters.tube,\r\n\t\t\tthis.parameters.radialSegments,\r\n\t\t\tthis.parameters.tubularSegments,\r\n\t\t\tthis.parameters.arc\r\n\t\t);\r\n\t\r\n\t\treturn geometry;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/geometries/TorusKnotGeometry.js\r\n\t\r\n\t/**\r\n\t * @author oosmoxiecode\r\n\t * based on http://code.google.com/p/away3d/source/browse/trunk/fp10/Away3D/src/away3d/primitives/TorusKnot.as?spec=svn2473&r=2473\r\n\t */\r\n\t\r\n\tTHREE.TorusKnotGeometry = function ( radius, tube, radialSegments, tubularSegments, p, q, heightScale ) {\r\n\t\r\n\t\tTHREE.Geometry.call( this );\r\n\t\r\n\t\tthis.type = 'TorusKnotGeometry';\r\n\t\r\n\t\tthis.parameters = {\r\n\t\t\tradius: radius,\r\n\t\t\ttube: tube,\r\n\t\t\tradialSegments: radialSegments,\r\n\t\t\ttubularSegments: tubularSegments,\r\n\t\t\tp: p,\r\n\t\t\tq: q,\r\n\t\t\theightScale: heightScale\r\n\t\t};\r\n\t\r\n\t\tradius = radius || 100;\r\n\t\ttube = tube || 40;\r\n\t\tradialSegments = radialSegments || 64;\r\n\t\ttubularSegments = tubularSegments || 8;\r\n\t\tp = p || 2;\r\n\t\tq = q || 3;\r\n\t\theightScale = heightScale || 1;\r\n\t\r\n\t\tvar grid = new Array( radialSegments );\r\n\t\tvar tang = new THREE.Vector3();\r\n\t\tvar n = new THREE.Vector3();\r\n\t\tvar bitan = new THREE.Vector3();\r\n\t\r\n\t\tfor ( var i = 0; i < radialSegments; ++ i ) {\r\n\t\r\n\t\t\tgrid[ i ] = new Array( tubularSegments );\r\n\t\t\tvar u = i / radialSegments * 2 * p * Math.PI;\r\n\t\t\tvar p1 = getPos( u, q, p, radius, heightScale );\r\n\t\t\tvar p2 = getPos( u + 0.01, q, p, radius, heightScale );\r\n\t\t\ttang.subVectors( p2, p1 );\r\n\t\t\tn.addVectors( p2, p1 );\r\n\t\r\n\t\t\tbitan.crossVectors( tang, n );\r\n\t\t\tn.crossVectors( bitan, tang );\r\n\t\t\tbitan.normalize();\r\n\t\t\tn.normalize();\r\n\t\r\n\t\t\tfor ( var j = 0; j < tubularSegments; ++ j ) {\r\n\t\r\n\t\t\t\tvar v = j / tubularSegments * 2 * Math.PI;\r\n\t\t\t\tvar cx = - tube * Math.cos( v ); // TODO: Hack: Negating it so it faces outside.\r\n\t\t\t\tvar cy = tube * Math.sin( v );\r\n\t\r\n\t\t\t\tvar pos = new THREE.Vector3();\r\n\t\t\t\tpos.x = p1.x + cx * n.x + cy * bitan.x;\r\n\t\t\t\tpos.y = p1.y + cx * n.y + cy * bitan.y;\r\n\t\t\t\tpos.z = p1.z + cx * n.z + cy * bitan.z;\r\n\t\r\n\t\t\t\tgrid[ i ][ j ] = this.vertices.push( pos ) - 1;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfor ( var i = 0; i < radialSegments; ++ i ) {\r\n\t\r\n\t\t\tfor ( var j = 0; j < tubularSegments; ++ j ) {\r\n\t\r\n\t\t\t\tvar ip = ( i + 1 ) % radialSegments;\r\n\t\t\t\tvar jp = ( j + 1 ) % tubularSegments;\r\n\t\r\n\t\t\t\tvar a = grid[ i ][ j ];\r\n\t\t\t\tvar b = grid[ ip ][ j ];\r\n\t\t\t\tvar c = grid[ ip ][ jp ];\r\n\t\t\t\tvar d = grid[ i ][ jp ];\r\n\t\r\n\t\t\t\tvar uva = new THREE.Vector2( i / radialSegments, j / tubularSegments );\r\n\t\t\t\tvar uvb = new THREE.Vector2( ( i + 1 ) / radialSegments, j / tubularSegments );\r\n\t\t\t\tvar uvc = new THREE.Vector2( ( i + 1 ) / radialSegments, ( j + 1 ) / tubularSegments );\r\n\t\t\t\tvar uvd = new THREE.Vector2( i / radialSegments, ( j + 1 ) / tubularSegments );\r\n\t\r\n\t\t\t\tthis.faces.push( new THREE.Face3( a, b, d ) );\r\n\t\t\t\tthis.faceVertexUvs[ 0 ].push( [ uva, uvb, uvd ] );\r\n\t\r\n\t\t\t\tthis.faces.push( new THREE.Face3( b, c, d ) );\r\n\t\t\t\tthis.faceVertexUvs[ 0 ].push( [ uvb.clone(), uvc, uvd.clone() ] );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.computeFaceNormals();\r\n\t\tthis.computeVertexNormals();\r\n\t\r\n\t\tfunction getPos( u, in_q, in_p, radius, heightScale ) {\r\n\t\r\n\t\t\tvar cu = Math.cos( u );\r\n\t\t\tvar su = Math.sin( u );\r\n\t\t\tvar quOverP = in_q / in_p * u;\r\n\t\t\tvar cs = Math.cos( quOverP );\r\n\t\r\n\t\t\tvar tx = radius * ( 2 + cs ) * 0.5 * cu;\r\n\t\t\tvar ty = radius * ( 2 + cs ) * su * 0.5;\r\n\t\t\tvar tz = heightScale * radius * Math.sin( quOverP ) * 0.5;\r\n\t\r\n\t\t\treturn new THREE.Vector3( tx, ty, tz );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.TorusKnotGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\n\tTHREE.TorusKnotGeometry.prototype.constructor = THREE.TorusKnotGeometry;\r\n\t\r\n\tTHREE.TorusKnotGeometry.prototype.clone = function () {\r\n\t\r\n\t\tvar geometry = new THREE.TorusKnotGeometry(\r\n\t\t\tthis.parameters.radius,\r\n\t\t\tthis.parameters.tube,\r\n\t\t\tthis.parameters.radialSegments,\r\n\t\t\tthis.parameters.tubularSegments,\r\n\t\t\tthis.parameters.p,\r\n\t\t\tthis.parameters.q,\r\n\t\t\tthis.parameters.heightScale\r\n\t\t);\r\n\t\r\n\t\treturn geometry;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/geometries/TubeGeometry.js\r\n\t\r\n\t/**\r\n\t * @author WestLangley / https://github.com/WestLangley\r\n\t * @author zz85 / https://github.com/zz85\r\n\t * @author miningold / https://github.com/miningold\r\n\t * @author jonobr1 / https://github.com/jonobr1\r\n\t *\r\n\t * Modified from the TorusKnotGeometry by @oosmoxiecode\r\n\t *\r\n\t * Creates a tube which extrudes along a 3d spline\r\n\t *\r\n\t * Uses parallel transport frames as described in\r\n\t * http://www.cs.indiana.edu/pub/techreports/TR425.pdf\r\n\t */\r\n\t\r\n\tTHREE.TubeGeometry = function ( path, segments, radius, radialSegments, closed, taper ) {\r\n\t\r\n\t\tTHREE.Geometry.call( this );\r\n\t\r\n\t\tthis.type = 'TubeGeometry';\r\n\t\r\n\t\tthis.parameters = {\r\n\t\t\tpath: path,\r\n\t\t\tsegments: segments,\r\n\t\t\tradius: radius,\r\n\t\t\tradialSegments: radialSegments,\r\n\t\t\tclosed: closed\r\n\t\t};\r\n\t\r\n\t\tsegments = segments || 64;\r\n\t\tradius = radius || 1;\r\n\t\tradialSegments = radialSegments || 8;\r\n\t\tclosed = closed || false;\r\n\t\ttaper = taper || THREE.TubeGeometry.NoTaper;\r\n\t\r\n\t\tvar grid = [];\r\n\t\r\n\t\tvar scope = this,\r\n\t\r\n\t\t\ttangent,\r\n\t\t\tnormal,\r\n\t\t\tbinormal,\r\n\t\r\n\t\t\tnumpoints = segments + 1,\r\n\t\r\n\t\t\tu, v, r,\r\n\t\r\n\t\t\tcx, cy,\r\n\t\t\tpos, pos2 = new THREE.Vector3(),\r\n\t\t\ti, j,\r\n\t\t\tip, jp,\r\n\t\t\ta, b, c, d,\r\n\t\t\tuva, uvb, uvc, uvd;\r\n\t\r\n\t\tvar frames = new THREE.TubeGeometry.FrenetFrames( path, segments, closed ),\r\n\t\t\ttangents = frames.tangents,\r\n\t\t\tnormals = frames.normals,\r\n\t\t\tbinormals = frames.binormals;\r\n\t\r\n\t\t// proxy internals\r\n\t\tthis.tangents = tangents;\r\n\t\tthis.normals = normals;\r\n\t\tthis.binormals = binormals;\r\n\t\r\n\t\tfunction vert( x, y, z ) {\r\n\t\r\n\t\t\treturn scope.vertices.push( new THREE.Vector3( x, y, z ) ) - 1;\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// construct the grid\r\n\t\r\n\t\tfor ( i = 0; i < numpoints; i ++ ) {\r\n\t\r\n\t\t\tgrid[ i ] = [];\r\n\t\r\n\t\t\tu = i / ( numpoints - 1 );\r\n\t\r\n\t\t\tpos = path.getPointAt( u );\r\n\t\r\n\t\t\ttangent = tangents[ i ];\r\n\t\t\tnormal = normals[ i ];\r\n\t\t\tbinormal = binormals[ i ];\r\n\t\r\n\t\t\tr = radius * taper( u );\r\n\t\r\n\t\t\tfor ( j = 0; j < radialSegments; j ++ ) {\r\n\t\r\n\t\t\t\tv = j / radialSegments * 2 * Math.PI;\r\n\t\r\n\t\t\t\tcx = - r * Math.cos( v ); // TODO: Hack: Negating it so it faces outside.\r\n\t\t\t\tcy = r * Math.sin( v );\r\n\t\r\n\t\t\t\tpos2.copy( pos );\r\n\t\t\t\tpos2.x += cx * normal.x + cy * binormal.x;\r\n\t\t\t\tpos2.y += cx * normal.y + cy * binormal.y;\r\n\t\t\t\tpos2.z += cx * normal.z + cy * binormal.z;\r\n\t\r\n\t\t\t\tgrid[ i ][ j ] = vert( pos2.x, pos2.y, pos2.z );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\r\n\t\t// construct the mesh\r\n\t\r\n\t\tfor ( i = 0; i < segments; i ++ ) {\r\n\t\r\n\t\t\tfor ( j = 0; j < radialSegments; j ++ ) {\r\n\t\r\n\t\t\t\tip = ( closed ) ? ( i + 1 ) % segments : i + 1;\r\n\t\t\t\tjp = ( j + 1 ) % radialSegments;\r\n\t\r\n\t\t\t\ta = grid[ i ][ j ];\t\t// *** NOT NECESSARILY PLANAR ! ***\r\n\t\t\t\tb = grid[ ip ][ j ];\r\n\t\t\t\tc = grid[ ip ][ jp ];\r\n\t\t\t\td = grid[ i ][ jp ];\r\n\t\r\n\t\t\t\tuva = new THREE.Vector2( i / segments, j / radialSegments );\r\n\t\t\t\tuvb = new THREE.Vector2( ( i + 1 ) / segments, j / radialSegments );\r\n\t\t\t\tuvc = new THREE.Vector2( ( i + 1 ) / segments, ( j + 1 ) / radialSegments );\r\n\t\t\t\tuvd = new THREE.Vector2( i / segments, ( j + 1 ) / radialSegments );\r\n\t\r\n\t\t\t\tthis.faces.push( new THREE.Face3( a, b, d ) );\r\n\t\t\t\tthis.faceVertexUvs[ 0 ].push( [ uva, uvb, uvd ] );\r\n\t\r\n\t\t\t\tthis.faces.push( new THREE.Face3( b, c, d ) );\r\n\t\t\t\tthis.faceVertexUvs[ 0 ].push( [ uvb.clone(), uvc, uvd.clone() ] );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.computeFaceNormals();\r\n\t\tthis.computeVertexNormals();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.TubeGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\n\tTHREE.TubeGeometry.prototype.constructor = THREE.TubeGeometry;\r\n\t\r\n\tTHREE.TubeGeometry.NoTaper = function ( u ) {\r\n\t\r\n\t\treturn 1;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.TubeGeometry.SinusoidalTaper = function ( u ) {\r\n\t\r\n\t\treturn Math.sin( Math.PI * u );\r\n\t\r\n\t};\r\n\t\r\n\t// For computing of Frenet frames, exposing the tangents, normals and binormals the spline\r\n\tTHREE.TubeGeometry.FrenetFrames = function ( path, segments, closed ) {\r\n\t\r\n\t\tvar\tnormal = new THREE.Vector3(),\r\n\t\r\n\t\t\ttangents = [],\r\n\t\t\tnormals = [],\r\n\t\t\tbinormals = [],\r\n\t\r\n\t\t\tvec = new THREE.Vector3(),\r\n\t\t\tmat = new THREE.Matrix4(),\r\n\t\r\n\t\t\tnumpoints = segments + 1,\r\n\t\t\ttheta,\r\n\t\t\tepsilon = 0.0001,\r\n\t\t\tsmallest,\r\n\t\r\n\t\t\ttx, ty, tz,\r\n\t\t\ti, u;\r\n\t\r\n\t\r\n\t\t// expose internals\r\n\t\tthis.tangents = tangents;\r\n\t\tthis.normals = normals;\r\n\t\tthis.binormals = binormals;\r\n\t\r\n\t\t// compute the tangent vectors for each segment on the path\r\n\t\r\n\t\tfor ( i = 0; i < numpoints; i ++ ) {\r\n\t\r\n\t\t\tu = i / ( numpoints - 1 );\r\n\t\r\n\t\t\ttangents[ i ] = path.getTangentAt( u );\r\n\t\t\ttangents[ i ].normalize();\r\n\t\r\n\t\t}\r\n\t\r\n\t\tinitialNormal3();\r\n\t\r\n\t\t/*\r\n\t\tfunction initialNormal1(lastBinormal) {\r\n\t\t\t// fixed start binormal. Has dangers of 0 vectors\r\n\t\t\tnormals[ 0 ] = new THREE.Vector3();\r\n\t\t\tbinormals[ 0 ] = new THREE.Vector3();\r\n\t\t\tif (lastBinormal===undefined) lastBinormal = new THREE.Vector3( 0, 0, 1 );\r\n\t\t\tnormals[ 0 ].crossVectors( lastBinormal, tangents[ 0 ] ).normalize();\r\n\t\t\tbinormals[ 0 ].crossVectors( tangents[ 0 ], normals[ 0 ] ).normalize();\r\n\t\t}\r\n\t\r\n\t\tfunction initialNormal2() {\r\n\t\r\n\t\t\t// This uses the Frenet-Serret formula for deriving binormal\r\n\t\t\tvar t2 = path.getTangentAt( epsilon );\r\n\t\r\n\t\t\tnormals[ 0 ] = new THREE.Vector3().subVectors( t2, tangents[ 0 ] ).normalize();\r\n\t\t\tbinormals[ 0 ] = new THREE.Vector3().crossVectors( tangents[ 0 ], normals[ 0 ] );\r\n\t\r\n\t\t\tnormals[ 0 ].crossVectors( binormals[ 0 ], tangents[ 0 ] ).normalize(); // last binormal x tangent\r\n\t\t\tbinormals[ 0 ].crossVectors( tangents[ 0 ], normals[ 0 ] ).normalize();\r\n\t\r\n\t\t}\r\n\t\t*/\r\n\t\r\n\t\tfunction initialNormal3() {\r\n\t\r\n\t\t\t// select an initial normal vector perpendicular to the first tangent vector,\r\n\t\t\t// and in the direction of the smallest tangent xyz component\r\n\t\r\n\t\t\tnormals[ 0 ] = new THREE.Vector3();\r\n\t\t\tbinormals[ 0 ] = new THREE.Vector3();\r\n\t\t\tsmallest = Number.MAX_VALUE;\r\n\t\t\ttx = Math.abs( tangents[ 0 ].x );\r\n\t\t\tty = Math.abs( tangents[ 0 ].y );\r\n\t\t\ttz = Math.abs( tangents[ 0 ].z );\r\n\t\r\n\t\t\tif ( tx <= smallest ) {\r\n\t\r\n\t\t\t\tsmallest = tx;\r\n\t\t\t\tnormal.set( 1, 0, 0 );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( ty <= smallest ) {\r\n\t\r\n\t\t\t\tsmallest = ty;\r\n\t\t\t\tnormal.set( 0, 1, 0 );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( tz <= smallest ) {\r\n\t\r\n\t\t\t\tnormal.set( 0, 0, 1 );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvec.crossVectors( tangents[ 0 ], normal ).normalize();\r\n\t\r\n\t\t\tnormals[ 0 ].crossVectors( tangents[ 0 ], vec );\r\n\t\t\tbinormals[ 0 ].crossVectors( tangents[ 0 ], normals[ 0 ] );\r\n\t\r\n\t\t}\r\n\t\r\n\t\r\n\t\t// compute the slowly-varying normal and binormal vectors for each segment on the path\r\n\t\r\n\t\tfor ( i = 1; i < numpoints; i ++ ) {\r\n\t\r\n\t\t\tnormals[ i ] = normals[ i - 1 ].clone();\r\n\t\r\n\t\t\tbinormals[ i ] = binormals[ i - 1 ].clone();\r\n\t\r\n\t\t\tvec.crossVectors( tangents[ i - 1 ], tangents[ i ] );\r\n\t\r\n\t\t\tif ( vec.length() > epsilon ) {\r\n\t\r\n\t\t\t\tvec.normalize();\r\n\t\r\n\t\t\t\ttheta = Math.acos( THREE.Math.clamp( tangents[ i - 1 ].dot( tangents[ i ] ), - 1, 1 ) ); // clamp for floating pt errors\r\n\t\r\n\t\t\t\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( vec, theta ) );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\r\n\t\r\n\t\t}\r\n\t\r\n\t\r\n\t\t// if the curve is closed, postprocess the vectors so the first and last normal vectors are the same\r\n\t\r\n\t\tif ( closed ) {\r\n\t\r\n\t\t\ttheta = Math.acos( THREE.Math.clamp( normals[ 0 ].dot( normals[ numpoints - 1 ] ), - 1, 1 ) );\r\n\t\t\ttheta /= ( numpoints - 1 );\r\n\t\r\n\t\t\tif ( tangents[ 0 ].dot( vec.crossVectors( normals[ 0 ], normals[ numpoints - 1 ] ) ) > 0 ) {\r\n\t\r\n\t\t\t\ttheta = - theta;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tfor ( i = 1; i < numpoints; i ++ ) {\r\n\t\r\n\t\t\t\t// twist a little...\r\n\t\t\t\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( tangents[ i ], theta * i ) );\r\n\t\t\t\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/geometries/PolyhedronGeometry.js\r\n\t\r\n\t/**\r\n\t * @author clockworkgeek / https://github.com/clockworkgeek\r\n\t * @author timothypratley / https://github.com/timothypratley\r\n\t * @author WestLangley / http://github.com/WestLangley\r\n\t*/\r\n\t\r\n\tTHREE.PolyhedronGeometry = function ( vertices, indices, radius, detail ) {\r\n\t\r\n\t\tTHREE.Geometry.call( this );\r\n\t\r\n\t\tthis.type = 'PolyhedronGeometry';\r\n\t\r\n\t\tthis.parameters = {\r\n\t\t\tvertices: vertices,\r\n\t\t\tindices: indices,\r\n\t\t\tradius: radius,\r\n\t\t\tdetail: detail\r\n\t\t};\r\n\t\r\n\t\tradius = radius || 1;\r\n\t\tdetail = detail || 0;\r\n\t\r\n\t\tvar that = this;\r\n\t\r\n\t\tfor ( var i = 0, l = vertices.length; i < l; i += 3 ) {\r\n\t\r\n\t\t\tprepare( new THREE.Vector3( vertices[ i ], vertices[ i + 1 ], vertices[ i + 2 ] ) );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tvar p = this.vertices;\r\n\t\r\n\t\tvar faces = [];\r\n\t\r\n\t\tfor ( var i = 0, j = 0, l = indices.length; i < l; i += 3, j ++ ) {\r\n\t\r\n\t\t\tvar v1 = p[ indices[ i ] ];\r\n\t\t\tvar v2 = p[ indices[ i + 1 ] ];\r\n\t\t\tvar v3 = p[ indices[ i + 2 ] ];\r\n\t\r\n\t\t\tfaces[ j ] = new THREE.Face3( v1.index, v2.index, v3.index, [ v1.clone(), v2.clone(), v3.clone() ], undefined, j );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tvar centroid = new THREE.Vector3();\r\n\t\r\n\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\r\n\t\r\n\t\t\tsubdivide( faces[ i ], detail );\r\n\t\r\n\t\t}\r\n\t\r\n\t\r\n\t\t// Handle case when face straddles the seam\r\n\t\r\n\t\tfor ( var i = 0, l = this.faceVertexUvs[ 0 ].length; i < l; i ++ ) {\r\n\t\r\n\t\t\tvar uvs = this.faceVertexUvs[ 0 ][ i ];\r\n\t\r\n\t\t\tvar x0 = uvs[ 0 ].x;\r\n\t\t\tvar x1 = uvs[ 1 ].x;\r\n\t\t\tvar x2 = uvs[ 2 ].x;\r\n\t\r\n\t\t\tvar max = Math.max( x0, Math.max( x1, x2 ) );\r\n\t\t\tvar min = Math.min( x0, Math.min( x1, x2 ) );\r\n\t\r\n\t\t\tif ( max > 0.9 && min < 0.1 ) {\r\n\t\r\n\t\t\t\t// 0.9 is somewhat arbitrary\r\n\t\r\n\t\t\t\tif ( x0 < 0.2 ) uvs[ 0 ].x += 1;\r\n\t\t\t\tif ( x1 < 0.2 ) uvs[ 1 ].x += 1;\r\n\t\t\t\tif ( x2 < 0.2 ) uvs[ 2 ].x += 1;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\r\n\t\t// Apply radius\r\n\t\r\n\t\tfor ( var i = 0, l = this.vertices.length; i < l; i ++ ) {\r\n\t\r\n\t\t\tthis.vertices[ i ].multiplyScalar( radius );\r\n\t\r\n\t\t}\r\n\t\r\n\t\r\n\t\t// Merge vertices\r\n\t\r\n\t\tthis.mergeVertices();\r\n\t\r\n\t\tthis.computeFaceNormals();\r\n\t\r\n\t\tthis.boundingSphere = new THREE.Sphere( new THREE.Vector3(), radius );\r\n\t\r\n\t\r\n\t\t// Project vector onto sphere's surface\r\n\t\r\n\t\tfunction prepare( vector ) {\r\n\t\r\n\t\t\tvar vertex = vector.normalize().clone();\r\n\t\t\tvertex.index = that.vertices.push( vertex ) - 1;\r\n\t\r\n\t\t\t// Texture coords are equivalent to map coords, calculate angle and convert to fraction of a circle.\r\n\t\r\n\t\t\tvar u = azimuth( vector ) / 2 / Math.PI + 0.5;\r\n\t\t\tvar v = inclination( vector ) / Math.PI + 0.5;\r\n\t\t\tvertex.uv = new THREE.Vector2( u, 1 - v );\r\n\t\r\n\t\t\treturn vertex;\r\n\t\r\n\t\t}\r\n\t\r\n\t\r\n\t\t// Approximate a curved face with recursively sub-divided triangles.\r\n\t\r\n\t\tfunction make( v1, v2, v3, materialIndex ) {\r\n\t\r\n\t\t\tvar face = new THREE.Face3( v1.index, v2.index, v3.index, [ v1.clone(), v2.clone(), v3.clone() ], undefined, materialIndex );\r\n\t\t\tthat.faces.push( face );\r\n\t\r\n\t\t\tcentroid.copy( v1 ).add( v2 ).add( v3 ).divideScalar( 3 );\r\n\t\r\n\t\t\tvar azi = azimuth( centroid );\r\n\t\r\n\t\t\tthat.faceVertexUvs[ 0 ].push( [\r\n\t\t\t\tcorrectUV( v1.uv, v1, azi ),\r\n\t\t\t\tcorrectUV( v2.uv, v2, azi ),\r\n\t\t\t\tcorrectUV( v3.uv, v3, azi )\r\n\t\t\t] );\r\n\t\r\n\t\t}\r\n\t\r\n\t\r\n\t\t// Analytically subdivide a face to the required detail level.\r\n\t\r\n\t\tfunction subdivide( face, detail ) {\r\n\t\r\n\t\t\tvar cols = Math.pow( 2, detail );\r\n\t\t\tvar a = prepare( that.vertices[ face.a ] );\r\n\t\t\tvar b = prepare( that.vertices[ face.b ] );\r\n\t\t\tvar c = prepare( that.vertices[ face.c ] );\r\n\t\t\tvar v = [];\r\n\t\r\n\t\t\tvar materialIndex = face.materialIndex;\r\n\t\r\n\t\t\t// Construct all of the vertices for this subdivision.\r\n\t\r\n\t\t\tfor ( var i = 0 ; i <= cols; i ++ ) {\r\n\t\r\n\t\t\t\tv[ i ] = [];\r\n\t\r\n\t\t\t\tvar aj = prepare( a.clone().lerp( c, i / cols ) );\r\n\t\t\t\tvar bj = prepare( b.clone().lerp( c, i / cols ) );\r\n\t\t\t\tvar rows = cols - i;\r\n\t\r\n\t\t\t\tfor ( var j = 0; j <= rows; j ++ ) {\r\n\t\r\n\t\t\t\t\tif ( j === 0 && i === cols ) {\r\n\t\r\n\t\t\t\t\t\tv[ i ][ j ] = aj;\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\tv[ i ][ j ] = prepare( aj.clone().lerp( bj, j / rows ) );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// Construct all of the faces.\r\n\t\r\n\t\t\tfor ( var i = 0; i < cols ; i ++ ) {\r\n\t\r\n\t\t\t\tfor ( var j = 0; j < 2 * ( cols - i ) - 1; j ++ ) {\r\n\t\r\n\t\t\t\t\tvar k = Math.floor( j / 2 );\r\n\t\r\n\t\t\t\t\tif ( j % 2 === 0 ) {\r\n\t\r\n\t\t\t\t\t\tmake(\r\n\t\t\t\t\t\t\tv[ i ][ k + 1 ],\r\n\t\t\t\t\t\t\tv[ i + 1 ][ k ],\r\n\t\t\t\t\t\t\tv[ i ][ k ],\r\n\t\t\t\t\t\t\tmaterialIndex\r\n\t\t\t\t\t\t);\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\tmake(\r\n\t\t\t\t\t\t\tv[ i ][ k + 1 ],\r\n\t\t\t\t\t\t\tv[ i + 1 ][ k + 1 ],\r\n\t\t\t\t\t\t\tv[ i + 1 ][ k ],\r\n\t\t\t\t\t\t\tmaterialIndex\r\n\t\t\t\t\t\t);\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\r\n\t\t// Angle around the Y axis, counter-clockwise when looking from above.\r\n\t\r\n\t\tfunction azimuth( vector ) {\r\n\t\r\n\t\t\treturn Math.atan2( vector.z, - vector.x );\r\n\t\r\n\t\t}\r\n\t\r\n\t\r\n\t\t// Angle above the XZ plane.\r\n\t\r\n\t\tfunction inclination( vector ) {\r\n\t\r\n\t\t\treturn Math.atan2( - vector.y, Math.sqrt( ( vector.x * vector.x ) + ( vector.z * vector.z ) ) );\r\n\t\r\n\t\t}\r\n\t\r\n\t\r\n\t\t// Texture fixing helper. Spheres have some odd behaviours.\r\n\t\r\n\t\tfunction correctUV( uv, vector, azimuth ) {\r\n\t\r\n\t\t\tif ( ( azimuth < 0 ) && ( uv.x === 1 ) ) uv = new THREE.Vector2( uv.x - 1, uv.y );\r\n\t\t\tif ( ( vector.x === 0 ) && ( vector.z === 0 ) ) uv = new THREE.Vector2( azimuth / 2 / Math.PI + 0.5, uv.y );\r\n\t\t\treturn uv.clone();\r\n\t\r\n\t\t}\r\n\t\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.PolyhedronGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\n\tTHREE.PolyhedronGeometry.prototype.constructor = THREE.PolyhedronGeometry;\r\n\t\r\n\tTHREE.PolyhedronGeometry.prototype.clone = function () {\r\n\t\r\n\t\tvar geometry = new THREE.PolyhedronGeometry(\r\n\t\t\tthis.parameters.vertices,\r\n\t\t\tthis.parameters.indices,\r\n\t\t\tthis.parameters.radius,\r\n\t\t\tthis.parameters.detail\r\n\t\t);\r\n\t\r\n\t\treturn geometry.copy( this );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.PolyhedronGeometry.prototype.copy = function ( source ) {\r\n\t\r\n\t\tTHREE.Geometry.prototype.copy.call( this, source );\r\n\t\treturn this;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/geometries/DodecahedronGeometry.js\r\n\t\r\n\t/**\r\n\t * @author Abe Pazos / https://hamoid.com\r\n\t */\r\n\t\r\n\tTHREE.DodecahedronGeometry = function ( radius, detail ) {\r\n\t\r\n\t\tvar t = ( 1 + Math.sqrt( 5 ) ) / 2;\r\n\t\tvar r = 1 / t;\r\n\t\r\n\t\tvar vertices = [\r\n\t\r\n\t\t\t// (±1, ±1, ±1)\r\n\t\t\t- 1, - 1, - 1,    - 1, - 1,  1,\r\n\t\t\t- 1,  1, - 1,    - 1,  1,  1,\r\n\t\t\t 1, - 1, - 1,     1, - 1,  1,\r\n\t\t\t 1,  1, - 1,     1,  1,  1,\r\n\t\r\n\t\t\t// (0, ±1/φ, ±φ)\r\n\t\t\t 0, - r, - t,     0, - r,  t,\r\n\t\t\t 0,  r, - t,     0,  r,  t,\r\n\t\r\n\t\t\t// (±1/φ, ±φ, 0)\r\n\t\t\t- r, - t,  0,    - r,  t,  0,\r\n\t\t\t r, - t,  0,     r,  t,  0,\r\n\t\r\n\t\t\t// (±φ, 0, ±1/φ)\r\n\t\t\t- t,  0, - r,     t,  0, - r,\r\n\t\t\t- t,  0,  r,     t,  0,  r\r\n\t\t];\r\n\t\r\n\t\tvar indices = [\r\n\t\t\t 3, 11,  7,      3,  7, 15,      3, 15, 13,\r\n\t\t\t 7, 19, 17,      7, 17,  6,      7,  6, 15,\r\n\t\t\t17,  4,  8,     17,  8, 10,     17, 10,  6,\r\n\t\t\t 8,  0, 16,      8, 16,  2,      8,  2, 10,\r\n\t\t\t 0, 12,  1,      0,  1, 18,      0, 18, 16,\r\n\t\t\t 6, 10,  2,      6,  2, 13,      6, 13, 15,\r\n\t\t\t 2, 16, 18,      2, 18,  3,      2,  3, 13,\r\n\t\t\t18,  1,  9,     18,  9, 11,     18, 11,  3,\r\n\t\t\t 4, 14, 12,      4, 12,  0,      4,  0,  8,\r\n\t\t\t11,  9,  5,     11,  5, 19,     11, 19,  7,\r\n\t\t\t19,  5, 14,     19, 14,  4,     19,  4, 17,\r\n\t\t\t 1, 12, 14,      1, 14,  5,      1,  5,  9\r\n\t\t];\r\n\t\r\n\t\tTHREE.PolyhedronGeometry.call( this, vertices, indices, radius, detail );\r\n\t\r\n\t\tthis.type = 'DodecahedronGeometry';\r\n\t\r\n\t\tthis.parameters = {\r\n\t\t\tradius: radius,\r\n\t\t\tdetail: detail\r\n\t\t};\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.DodecahedronGeometry.prototype = Object.create( THREE.PolyhedronGeometry.prototype );\r\n\tTHREE.DodecahedronGeometry.prototype.constructor = THREE.DodecahedronGeometry;\r\n\t\r\n\tTHREE.DodecahedronGeometry.prototype.clone = function () {\r\n\t\r\n\t\tvar geometry = new THREE.DodecahedronGeometry(\r\n\t\t\tthis.parameters.radius,\r\n\t\t\tthis.parameters.detail\r\n\t\t);\r\n\t\r\n\t\tgeometry.copy( this );\r\n\t\r\n\t\treturn geometry;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/geometries/IcosahedronGeometry.js\r\n\t\r\n\t/**\r\n\t * @author timothypratley / https://github.com/timothypratley\r\n\t */\r\n\t\r\n\tTHREE.IcosahedronGeometry = function ( radius, detail ) {\r\n\t\r\n\t\tvar t = ( 1 + Math.sqrt( 5 ) ) / 2;\r\n\t\r\n\t\tvar vertices = [\r\n\t\t\t- 1,  t,  0,    1,  t,  0,   - 1, - t,  0,    1, - t,  0,\r\n\t\t\t 0, - 1,  t,    0,  1,  t,    0, - 1, - t,    0,  1, - t,\r\n\t\t\t t,  0, - 1,    t,  0,  1,   - t,  0, - 1,   - t,  0,  1\r\n\t\t];\r\n\t\r\n\t\tvar indices = [\r\n\t\t\t 0, 11,  5,    0,  5,  1,    0,  1,  7,    0,  7, 10,    0, 10, 11,\r\n\t\t\t 1,  5,  9,    5, 11,  4,   11, 10,  2,   10,  7,  6,    7,  1,  8,\r\n\t\t\t 3,  9,  4,    3,  4,  2,    3,  2,  6,    3,  6,  8,    3,  8,  9,\r\n\t\t\t 4,  9,  5,    2,  4, 11,    6,  2, 10,    8,  6,  7,    9,  8,  1\r\n\t\t];\r\n\t\r\n\t\tTHREE.PolyhedronGeometry.call( this, vertices, indices, radius, detail );\r\n\t\r\n\t\tthis.type = 'IcosahedronGeometry';\r\n\t\r\n\t\tthis.parameters = {\r\n\t\t\tradius: radius,\r\n\t\t\tdetail: detail\r\n\t\t};\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.IcosahedronGeometry.prototype = Object.create( THREE.PolyhedronGeometry.prototype );\r\n\tTHREE.IcosahedronGeometry.prototype.constructor = THREE.IcosahedronGeometry;\r\n\t\r\n\tTHREE.IcosahedronGeometry.prototype.clone = function () {\r\n\t\r\n\t\tvar geometry = new THREE.IcosahedronGeometry(\r\n\t\t\tthis.parameters.radius,\r\n\t\t\tthis.parameters.detail\r\n\t\t);\r\n\t\r\n\t\tgeometry.copy( this );\r\n\t\r\n\t\treturn geometry;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/geometries/OctahedronGeometry.js\r\n\t\r\n\t/**\r\n\t * @author timothypratley / https://github.com/timothypratley\r\n\t */\r\n\t\r\n\tTHREE.OctahedronGeometry = function ( radius, detail ) {\r\n\t\r\n\t\tvar vertices = [\r\n\t\t\t1, 0, 0,   - 1, 0, 0,    0, 1, 0,    0, - 1, 0,    0, 0, 1,    0, 0, - 1\r\n\t\t];\r\n\t\r\n\t\tvar indices = [\r\n\t\t\t0, 2, 4,    0, 4, 3,    0, 3, 5,    0, 5, 2,    1, 2, 5,    1, 5, 3,    1, 3, 4,    1, 4, 2\r\n\t\t];\r\n\t\r\n\t\tTHREE.PolyhedronGeometry.call( this, vertices, indices, radius, detail );\r\n\t\r\n\t\tthis.type = 'OctahedronGeometry';\r\n\t\r\n\t\tthis.parameters = {\r\n\t\t\tradius: radius,\r\n\t\t\tdetail: detail\r\n\t\t};\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.OctahedronGeometry.prototype = Object.create( THREE.PolyhedronGeometry.prototype );\r\n\tTHREE.OctahedronGeometry.prototype.constructor = THREE.OctahedronGeometry;\r\n\t\r\n\tTHREE.OctahedronGeometry.prototype.clone = function () {\r\n\t\r\n\t\tvar geometry = new THREE.OctahedronGeometry(\r\n\t\t\tthis.parameters.radius,\r\n\t\t\tthis.parameters.detail\r\n\t\t);\r\n\t\r\n\t\tgeometry.copy( this );\r\n\t\r\n\t\treturn geometry;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/geometries/TetrahedronGeometry.js\r\n\t\r\n\t/**\r\n\t * @author timothypratley / https://github.com/timothypratley\r\n\t */\r\n\t\r\n\tTHREE.TetrahedronGeometry = function ( radius, detail ) {\r\n\t\r\n\t\tvar vertices = [\r\n\t\t\t 1,  1,  1,   - 1, - 1,  1,   - 1,  1, - 1,    1, - 1, - 1\r\n\t\t];\r\n\t\r\n\t\tvar indices = [\r\n\t\t\t 2,  1,  0,    0,  3,  2,    1,  3,  0,    2,  3,  1\r\n\t\t];\r\n\t\r\n\t\tTHREE.PolyhedronGeometry.call( this, vertices, indices, radius, detail );\r\n\t\r\n\t\tthis.type = 'TetrahedronGeometry';\r\n\t\r\n\t\tthis.parameters = {\r\n\t\t\tradius: radius,\r\n\t\t\tdetail: detail\r\n\t\t};\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.TetrahedronGeometry.prototype = Object.create( THREE.PolyhedronGeometry.prototype );\r\n\tTHREE.TetrahedronGeometry.prototype.constructor = THREE.TetrahedronGeometry;\r\n\t\r\n\tTHREE.TetrahedronGeometry.prototype.clone = function () {\r\n\t\r\n\t\tvar geometry = new THREE.TetrahedronGeometry(\r\n\t\t\tthis.parameters.radius,\r\n\t\t\tthis.parameters.detail\r\n\t\t);\r\n\t\r\n\t\tgeometry.copy( this );\r\n\t\r\n\t\treturn geometry;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/geometries/ParametricGeometry.js\r\n\t\r\n\t/**\r\n\t * @author zz85 / https://github.com/zz85\r\n\t * Parametric Surfaces Geometry\r\n\t * based on the brilliant article by @prideout http://prideout.net/blog/?p=44\r\n\t *\r\n\t * new THREE.ParametricGeometry( parametricFunction, uSegments, ySegements );\r\n\t *\r\n\t */\r\n\t\r\n\tTHREE.ParametricGeometry = function ( func, slices, stacks ) {\r\n\t\r\n\t\tTHREE.Geometry.call( this );\r\n\t\r\n\t\tthis.type = 'ParametricGeometry';\r\n\t\r\n\t\tthis.parameters = {\r\n\t\t\tfunc: func,\r\n\t\t\tslices: slices,\r\n\t\t\tstacks: stacks\r\n\t\t};\r\n\t\r\n\t\tvar verts = this.vertices;\r\n\t\tvar faces = this.faces;\r\n\t\tvar uvs = this.faceVertexUvs[ 0 ];\r\n\t\r\n\t\tvar i, j, p;\r\n\t\tvar u, v;\r\n\t\r\n\t\tvar sliceCount = slices + 1;\r\n\t\r\n\t\tfor ( i = 0; i <= stacks; i ++ ) {\r\n\t\r\n\t\t\tv = i / stacks;\r\n\t\r\n\t\t\tfor ( j = 0; j <= slices; j ++ ) {\r\n\t\r\n\t\t\t\tu = j / slices;\r\n\t\r\n\t\t\t\tp = func( u, v );\r\n\t\t\t\tverts.push( p );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tvar a, b, c, d;\r\n\t\tvar uva, uvb, uvc, uvd;\r\n\t\r\n\t\tfor ( i = 0; i < stacks; i ++ ) {\r\n\t\r\n\t\t\tfor ( j = 0; j < slices; j ++ ) {\r\n\t\r\n\t\t\t\ta = i * sliceCount + j;\r\n\t\t\t\tb = i * sliceCount + j + 1;\r\n\t\t\t\tc = ( i + 1 ) * sliceCount + j + 1;\r\n\t\t\t\td = ( i + 1 ) * sliceCount + j;\r\n\t\r\n\t\t\t\tuva = new THREE.Vector2( j / slices, i / stacks );\r\n\t\t\t\tuvb = new THREE.Vector2( ( j + 1 ) / slices, i / stacks );\r\n\t\t\t\tuvc = new THREE.Vector2( ( j + 1 ) / slices, ( i + 1 ) / stacks );\r\n\t\t\t\tuvd = new THREE.Vector2( j / slices, ( i + 1 ) / stacks );\r\n\t\r\n\t\t\t\tfaces.push( new THREE.Face3( a, b, d ) );\r\n\t\t\t\tuvs.push( [ uva, uvb, uvd ] );\r\n\t\r\n\t\t\t\tfaces.push( new THREE.Face3( b, c, d ) );\r\n\t\t\t\tuvs.push( [ uvb.clone(), uvc, uvd.clone() ] );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// console.log(this);\r\n\t\r\n\t\t// magic bullet\r\n\t\t// var diff = this.mergeVertices();\r\n\t\t// console.log('removed ', diff, ' vertices by merging');\r\n\t\r\n\t\tthis.computeFaceNormals();\r\n\t\tthis.computeVertexNormals();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.ParametricGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\n\tTHREE.ParametricGeometry.prototype.constructor = THREE.ParametricGeometry;\r\n\t\r\n\t// File:src/extras/geometries/WireframeGeometry.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.WireframeGeometry = function ( geometry ) {\r\n\t\r\n\t\tTHREE.BufferGeometry.call( this );\r\n\t\r\n\t\tvar edge = [ 0, 0 ], hash = {};\r\n\t\tvar sortFunction = function ( a, b ) {\r\n\t\r\n\t\t\treturn a - b;\r\n\t\r\n\t\t};\r\n\t\r\n\t\tvar keys = [ 'a', 'b', 'c' ];\r\n\t\r\n\t\tif ( geometry instanceof THREE.Geometry ) {\r\n\t\r\n\t\t\tvar vertices = geometry.vertices;\r\n\t\t\tvar faces = geometry.faces;\r\n\t\t\tvar numEdges = 0;\r\n\t\r\n\t\t\t// allocate maximal size\r\n\t\t\tvar edges = new Uint32Array( 6 * faces.length );\r\n\t\r\n\t\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\tvar face = faces[ i ];\r\n\t\r\n\t\t\t\tfor ( var j = 0; j < 3; j ++ ) {\r\n\t\r\n\t\t\t\t\tedge[ 0 ] = face[ keys[ j ] ];\r\n\t\t\t\t\tedge[ 1 ] = face[ keys[ ( j + 1 ) % 3 ] ];\r\n\t\t\t\t\tedge.sort( sortFunction );\r\n\t\r\n\t\t\t\t\tvar key = edge.toString();\r\n\t\r\n\t\t\t\t\tif ( hash[ key ] === undefined ) {\r\n\t\r\n\t\t\t\t\t\tedges[ 2 * numEdges ] = edge[ 0 ];\r\n\t\t\t\t\t\tedges[ 2 * numEdges + 1 ] = edge[ 1 ];\r\n\t\t\t\t\t\thash[ key ] = true;\r\n\t\t\t\t\t\tnumEdges ++;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar coords = new Float32Array( numEdges * 2 * 3 );\r\n\t\r\n\t\t\tfor ( var i = 0, l = numEdges; i < l; i ++ ) {\r\n\t\r\n\t\t\t\tfor ( var j = 0; j < 2; j ++ ) {\r\n\t\r\n\t\t\t\t\tvar vertex = vertices[ edges [ 2 * i + j ] ];\r\n\t\r\n\t\t\t\t\tvar index = 6 * i + 3 * j;\r\n\t\t\t\t\tcoords[ index + 0 ] = vertex.x;\r\n\t\t\t\t\tcoords[ index + 1 ] = vertex.y;\r\n\t\t\t\t\tcoords[ index + 2 ] = vertex.z;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.addAttribute( 'position', new THREE.BufferAttribute( coords, 3 ) );\r\n\t\r\n\t\t} else if ( geometry instanceof THREE.BufferGeometry ) {\r\n\t\r\n\t\t\tif ( geometry.index !== null ) {\r\n\t\r\n\t\t\t\t// Indexed BufferGeometry\r\n\t\r\n\t\t\t\tvar indices = geometry.index.array;\r\n\t\t\t\tvar vertices = geometry.attributes.position;\r\n\t\t\t\tvar drawcalls = geometry.drawcalls;\r\n\t\t\t\tvar numEdges = 0;\r\n\t\r\n\t\t\t\tif ( drawcalls.length === 0 ) {\r\n\t\r\n\t\t\t\t\tgeometry.addDrawCall( 0, indices.length );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// allocate maximal size\r\n\t\t\t\tvar edges = new Uint32Array( 2 * indices.length );\r\n\t\r\n\t\t\t\tfor ( var o = 0, ol = drawcalls.length; o < ol; ++ o ) {\r\n\t\r\n\t\t\t\t\tvar drawcall = drawcalls[ o ];\r\n\t\r\n\t\t\t\t\tvar start = drawcall.start;\r\n\t\t\t\t\tvar count = drawcall.count;\r\n\t\r\n\t\t\t\t\tfor ( var i = start, il = start + count; i < il; i += 3 ) {\r\n\t\r\n\t\t\t\t\t\tfor ( var j = 0; j < 3; j ++ ) {\r\n\t\r\n\t\t\t\t\t\t\tedge[ 0 ] = indices[ i + j ];\r\n\t\t\t\t\t\t\tedge[ 1 ] = indices[ i + ( j + 1 ) % 3 ];\r\n\t\t\t\t\t\t\tedge.sort( sortFunction );\r\n\t\r\n\t\t\t\t\t\t\tvar key = edge.toString();\r\n\t\r\n\t\t\t\t\t\t\tif ( hash[ key ] === undefined ) {\r\n\t\r\n\t\t\t\t\t\t\t\tedges[ 2 * numEdges ] = edge[ 0 ];\r\n\t\t\t\t\t\t\t\tedges[ 2 * numEdges + 1 ] = edge[ 1 ];\r\n\t\t\t\t\t\t\t\thash[ key ] = true;\r\n\t\t\t\t\t\t\t\tnumEdges ++;\r\n\t\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar coords = new Float32Array( numEdges * 2 * 3 );\r\n\t\r\n\t\t\t\tfor ( var i = 0, l = numEdges; i < l; i ++ ) {\r\n\t\r\n\t\t\t\t\tfor ( var j = 0; j < 2; j ++ ) {\r\n\t\r\n\t\t\t\t\t\tvar index = 6 * i + 3 * j;\r\n\t\t\t\t\t\tvar index2 = edges[ 2 * i + j ];\r\n\t\r\n\t\t\t\t\t\tcoords[ index + 0 ] = vertices.getX( index2 );\r\n\t\t\t\t\t\tcoords[ index + 1 ] = vertices.getY( index2 );\r\n\t\t\t\t\t\tcoords[ index + 2 ] = vertices.getZ( index2 );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tthis.addAttribute( 'position', new THREE.BufferAttribute( coords, 3 ) );\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\t// non-indexed BufferGeometry\r\n\t\r\n\t\t\t\tvar vertices = geometry.attributes.position.array;\r\n\t\t\t\tvar numEdges = vertices.length / 3;\r\n\t\t\t\tvar numTris = numEdges / 3;\r\n\t\r\n\t\t\t\tvar coords = new Float32Array( numEdges * 2 * 3 );\r\n\t\r\n\t\t\t\tfor ( var i = 0, l = numTris; i < l; i ++ ) {\r\n\t\r\n\t\t\t\t\tfor ( var j = 0; j < 3; j ++ ) {\r\n\t\r\n\t\t\t\t\t\tvar index = 18 * i + 6 * j;\r\n\t\r\n\t\t\t\t\t\tvar index1 = 9 * i + 3 * j;\r\n\t\t\t\t\t\tcoords[ index + 0 ] = vertices[ index1 ];\r\n\t\t\t\t\t\tcoords[ index + 1 ] = vertices[ index1 + 1 ];\r\n\t\t\t\t\t\tcoords[ index + 2 ] = vertices[ index1 + 2 ];\r\n\t\r\n\t\t\t\t\t\tvar index2 = 9 * i + 3 * ( ( j + 1 ) % 3 );\r\n\t\t\t\t\t\tcoords[ index + 3 ] = vertices[ index2 ];\r\n\t\t\t\t\t\tcoords[ index + 4 ] = vertices[ index2 + 1 ];\r\n\t\t\t\t\t\tcoords[ index + 5 ] = vertices[ index2 + 2 ];\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tthis.addAttribute( 'position', new THREE.BufferAttribute( coords, 3 ) );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.WireframeGeometry.prototype = Object.create( THREE.BufferGeometry.prototype );\r\n\tTHREE.WireframeGeometry.prototype.constructor = THREE.WireframeGeometry;\r\n\t\r\n\t// File:src/extras/helpers/AxisHelper.js\r\n\t\r\n\t/**\r\n\t * @author sroucheray / http://sroucheray.org/\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.AxisHelper = function ( size ) {\r\n\t\r\n\t\tsize = size || 1;\r\n\t\r\n\t\tvar vertices = new Float32Array( [\r\n\t\t\t0, 0, 0,  size, 0, 0,\r\n\t\t\t0, 0, 0,  0, size, 0,\r\n\t\t\t0, 0, 0,  0, 0, size\r\n\t\t] );\r\n\t\r\n\t\tvar colors = new Float32Array( [\r\n\t\t\t1, 0, 0,  1, 0.6, 0,\r\n\t\t\t0, 1, 0,  0.6, 1, 0,\r\n\t\t\t0, 0, 1,  0, 0.6, 1\r\n\t\t] );\r\n\t\r\n\t\tvar geometry = new THREE.BufferGeometry();\r\n\t\tgeometry.addAttribute( 'position', new THREE.BufferAttribute( vertices, 3 ) );\r\n\t\tgeometry.addAttribute( 'color', new THREE.BufferAttribute( colors, 3 ) );\r\n\t\r\n\t\tvar material = new THREE.LineBasicMaterial( { vertexColors: THREE.VertexColors } );\r\n\t\r\n\t\tTHREE.LineSegments.call( this, geometry, material );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.AxisHelper.prototype = Object.create( THREE.LineSegments.prototype );\r\n\tTHREE.AxisHelper.prototype.constructor = THREE.AxisHelper;\r\n\t\r\n\t// File:src/extras/helpers/ArrowHelper.js\r\n\t\r\n\t/**\r\n\t * @author WestLangley / http://github.com/WestLangley\r\n\t * @author zz85 / http://github.com/zz85\r\n\t * @author bhouston / http://exocortex.com\r\n\t *\r\n\t * Creates an arrow for visualizing directions\r\n\t *\r\n\t * Parameters:\r\n\t *  dir - Vector3\r\n\t *  origin - Vector3\r\n\t *  length - Number\r\n\t *  color - color in hex value\r\n\t *  headLength - Number\r\n\t *  headWidth - Number\r\n\t */\r\n\t\r\n\tTHREE.ArrowHelper = ( function () {\r\n\t\r\n\t\tvar lineGeometry = new THREE.Geometry();\r\n\t\tlineGeometry.vertices.push( new THREE.Vector3( 0, 0, 0 ), new THREE.Vector3( 0, 1, 0 ) );\r\n\t\r\n\t\tvar coneGeometry = new THREE.CylinderGeometry( 0, 0.5, 1, 5, 1 );\r\n\t\tconeGeometry.translate( 0, - 0.5, 0 );\r\n\t\r\n\t\treturn function ArrowHelper( dir, origin, length, color, headLength, headWidth ) {\r\n\t\r\n\t\t\t// dir is assumed to be normalized\r\n\t\r\n\t\t\tTHREE.Object3D.call( this );\r\n\t\r\n\t\t\tif ( color === undefined ) color = 0xffff00;\r\n\t\t\tif ( length === undefined ) length = 1;\r\n\t\t\tif ( headLength === undefined ) headLength = 0.2 * length;\r\n\t\t\tif ( headWidth === undefined ) headWidth = 0.2 * headLength;\r\n\t\r\n\t\t\tthis.position.copy( origin );\r\n\t\t\t\r\n\t\t\tif ( headLength < length ) {\r\n\t\t\t\tthis.line = new THREE.Line( lineGeometry, new THREE.LineBasicMaterial( { color: color } ) );\r\n\t\t\t\tthis.line.matrixAutoUpdate = false;\r\n\t\t\t\tthis.add( this.line );\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.cone = new THREE.Mesh( coneGeometry, new THREE.MeshBasicMaterial( { color: color } ) );\r\n\t\t\tthis.cone.matrixAutoUpdate = false;\r\n\t\t\tthis.add( this.cone );\r\n\t\r\n\t\t\tthis.setDirection( dir );\r\n\t\t\tthis.setLength( length, headLength, headWidth );\r\n\t\r\n\t\t}\r\n\t\r\n\t}() );\r\n\t\r\n\tTHREE.ArrowHelper.prototype = Object.create( THREE.Object3D.prototype );\r\n\tTHREE.ArrowHelper.prototype.constructor = THREE.ArrowHelper;\r\n\t\r\n\tTHREE.ArrowHelper.prototype.setDirection = ( function () {\r\n\t\r\n\t\tvar axis = new THREE.Vector3();\r\n\t\tvar radians;\r\n\t\r\n\t\treturn function setDirection( dir ) {\r\n\t\r\n\t\t\t// dir is assumed to be normalized\r\n\t\r\n\t\t\tif ( dir.y > 0.99999 ) {\r\n\t\r\n\t\t\t\tthis.quaternion.set( 0, 0, 0, 1 );\r\n\t\r\n\t\t\t} else if ( dir.y < - 0.99999 ) {\r\n\t\r\n\t\t\t\tthis.quaternion.set( 1, 0, 0, 0 );\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\taxis.set( dir.z, 0, - dir.x ).normalize();\r\n\t\r\n\t\t\t\tradians = Math.acos( dir.y );\r\n\t\r\n\t\t\t\tthis.quaternion.setFromAxisAngle( axis, radians );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t}() );\r\n\t\r\n\tTHREE.ArrowHelper.prototype.setLength = function ( length, headLength, headWidth ) {\r\n\t\r\n\t\tif ( headLength === undefined ) headLength = 0.2 * length;\r\n\t\tif ( headWidth === undefined ) headWidth = 0.2 * headLength;\r\n\t\r\n\t\tif ( headLength < length ){\r\n\t\t\tthis.line.scale.set( 1, length - headLength, 1 );\r\n\t\t\tthis.line.updateMatrix();\r\n\t\t}\r\n\t\r\n\t\tthis.cone.scale.set( headWidth, headLength, headWidth );\r\n\t\tthis.cone.position.y = length;\r\n\t\tthis.cone.updateMatrix();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.ArrowHelper.prototype.setColor = function ( color ) {\r\n\t\r\n\t\tif ( this.line !== undefined ) this.line.material.color.set( color );\r\n\t\tthis.cone.material.color.set( color );\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/helpers/BoxHelper.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.BoxHelper = function ( object ) {\r\n\t\r\n\t\tvar indices = new Uint16Array( [ 0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7 ] );\r\n\t\tvar positions = new Float32Array( 8 * 3 );\r\n\t\r\n\t\tvar geometry = new THREE.BufferGeometry();\r\n\t\tgeometry.setIndex( new THREE.BufferAttribute( indices, 1 ) );\r\n\t\tgeometry.addAttribute( 'position', new THREE.BufferAttribute( positions, 3 ) );\r\n\t\r\n\t\tTHREE.LineSegments.call( this, geometry, new THREE.LineBasicMaterial( { color: 0xffff00 } ) );\r\n\t\r\n\t\tif ( object !== undefined ) {\r\n\t\r\n\t\t\tthis.update( object );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.BoxHelper.prototype = Object.create( THREE.LineSegments.prototype );\r\n\tTHREE.BoxHelper.prototype.constructor = THREE.BoxHelper;\r\n\t\r\n\tTHREE.BoxHelper.prototype.update = ( function () {\r\n\t\r\n\t\tvar box = new THREE.Box3();\r\n\t\r\n\t\treturn function ( object ) {\r\n\t\r\n\t\t\tbox.setFromObject( object );\r\n\t\r\n\t\t\tif ( box.empty() ) return;\r\n\t\r\n\t\t\tvar min = box.min;\r\n\t\t\tvar max = box.max;\r\n\t\r\n\t\t\t/*\r\n\t\t\t  5____4\r\n\t\t\t1/___0/|\r\n\t\t\t| 6__|_7\r\n\t\t\t2/___3/\r\n\t\r\n\t\t\t0: max.x, max.y, max.z\r\n\t\t\t1: min.x, max.y, max.z\r\n\t\t\t2: min.x, min.y, max.z\r\n\t\t\t3: max.x, min.y, max.z\r\n\t\t\t4: max.x, max.y, min.z\r\n\t\t\t5: min.x, max.y, min.z\r\n\t\t\t6: min.x, min.y, min.z\r\n\t\t\t7: max.x, min.y, min.z\r\n\t\t\t*/\r\n\t\r\n\t\t\tvar position = this.geometry.attributes.position;\r\n\t\t\tvar array = position.array;\r\n\t\r\n\t\t\tarray[  0 ] = max.x; array[  1 ] = max.y; array[  2 ] = max.z;\r\n\t\t\tarray[  3 ] = min.x; array[  4 ] = max.y; array[  5 ] = max.z;\r\n\t\t\tarray[  6 ] = min.x; array[  7 ] = min.y; array[  8 ] = max.z;\r\n\t\t\tarray[  9 ] = max.x; array[ 10 ] = min.y; array[ 11 ] = max.z;\r\n\t\t\tarray[ 12 ] = max.x; array[ 13 ] = max.y; array[ 14 ] = min.z;\r\n\t\t\tarray[ 15 ] = min.x; array[ 16 ] = max.y; array[ 17 ] = min.z;\r\n\t\t\tarray[ 18 ] = min.x; array[ 19 ] = min.y; array[ 20 ] = min.z;\r\n\t\t\tarray[ 21 ] = max.x; array[ 22 ] = min.y; array[ 23 ] = min.z;\r\n\t\r\n\t\t\tposition.needsUpdate = true;\r\n\t\r\n\t\t\tthis.geometry.computeBoundingSphere();\r\n\t\r\n\t\t}\r\n\t\r\n\t} )();\r\n\t\r\n\t// File:src/extras/helpers/BoundingBoxHelper.js\r\n\t\r\n\t/**\r\n\t * @author WestLangley / http://github.com/WestLangley\r\n\t */\r\n\t\r\n\t// a helper to show the world-axis-aligned bounding box for an object\r\n\t\r\n\tTHREE.BoundingBoxHelper = function ( object, hex ) {\r\n\t\r\n\t\tvar color = ( hex !== undefined ) ? hex : 0x888888;\r\n\t\r\n\t\tthis.object = object;\r\n\t\r\n\t\tthis.box = new THREE.Box3();\r\n\t\r\n\t\tTHREE.Mesh.call( this, new THREE.BoxGeometry( 1, 1, 1 ), new THREE.MeshBasicMaterial( { color: color, wireframe: true } ) );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.BoundingBoxHelper.prototype = Object.create( THREE.Mesh.prototype );\r\n\tTHREE.BoundingBoxHelper.prototype.constructor = THREE.BoundingBoxHelper;\r\n\t\r\n\tTHREE.BoundingBoxHelper.prototype.update = function () {\r\n\t\r\n\t\tthis.box.setFromObject( this.object );\r\n\t\r\n\t\tthis.box.size( this.scale );\r\n\t\r\n\t\tthis.box.center( this.position );\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/helpers/CameraHelper.js\r\n\t\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t *\r\n\t *\t- shows frustum, line of sight and up of the camera\r\n\t *\t- suitable for fast updates\r\n\t * \t- based on frustum visualization in lightgl.js shadowmap example\r\n\t *\t\thttp://evanw.github.com/lightgl.js/tests/shadowmap.html\r\n\t */\r\n\t\r\n\tTHREE.CameraHelper = function ( camera ) {\r\n\t\r\n\t\tvar geometry = new THREE.Geometry();\r\n\t\tvar material = new THREE.LineBasicMaterial( { color: 0xffffff, vertexColors: THREE.FaceColors } );\r\n\t\r\n\t\tvar pointMap = {};\r\n\t\r\n\t\t// colors\r\n\t\r\n\t\tvar hexFrustum = 0xffaa00;\r\n\t\tvar hexCone = 0xff0000;\r\n\t\tvar hexUp = 0x00aaff;\r\n\t\tvar hexTarget = 0xffffff;\r\n\t\tvar hexCross = 0x333333;\r\n\t\r\n\t\t// near\r\n\t\r\n\t\taddLine( \"n1\", \"n2\", hexFrustum );\r\n\t\taddLine( \"n2\", \"n4\", hexFrustum );\r\n\t\taddLine( \"n4\", \"n3\", hexFrustum );\r\n\t\taddLine( \"n3\", \"n1\", hexFrustum );\r\n\t\r\n\t\t// far\r\n\t\r\n\t\taddLine( \"f1\", \"f2\", hexFrustum );\r\n\t\taddLine( \"f2\", \"f4\", hexFrustum );\r\n\t\taddLine( \"f4\", \"f3\", hexFrustum );\r\n\t\taddLine( \"f3\", \"f1\", hexFrustum );\r\n\t\r\n\t\t// sides\r\n\t\r\n\t\taddLine( \"n1\", \"f1\", hexFrustum );\r\n\t\taddLine( \"n2\", \"f2\", hexFrustum );\r\n\t\taddLine( \"n3\", \"f3\", hexFrustum );\r\n\t\taddLine( \"n4\", \"f4\", hexFrustum );\r\n\t\r\n\t\t// cone\r\n\t\r\n\t\taddLine( \"p\", \"n1\", hexCone );\r\n\t\taddLine( \"p\", \"n2\", hexCone );\r\n\t\taddLine( \"p\", \"n3\", hexCone );\r\n\t\taddLine( \"p\", \"n4\", hexCone );\r\n\t\r\n\t\t// up\r\n\t\r\n\t\taddLine( \"u1\", \"u2\", hexUp );\r\n\t\taddLine( \"u2\", \"u3\", hexUp );\r\n\t\taddLine( \"u3\", \"u1\", hexUp );\r\n\t\r\n\t\t// target\r\n\t\r\n\t\taddLine( \"c\", \"t\", hexTarget );\r\n\t\taddLine( \"p\", \"c\", hexCross );\r\n\t\r\n\t\t// cross\r\n\t\r\n\t\taddLine( \"cn1\", \"cn2\", hexCross );\r\n\t\taddLine( \"cn3\", \"cn4\", hexCross );\r\n\t\r\n\t\taddLine( \"cf1\", \"cf2\", hexCross );\r\n\t\taddLine( \"cf3\", \"cf4\", hexCross );\r\n\t\r\n\t\tfunction addLine( a, b, hex ) {\r\n\t\r\n\t\t\taddPoint( a, hex );\r\n\t\t\taddPoint( b, hex );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction addPoint( id, hex ) {\r\n\t\r\n\t\t\tgeometry.vertices.push( new THREE.Vector3() );\r\n\t\t\tgeometry.colors.push( new THREE.Color( hex ) );\r\n\t\r\n\t\t\tif ( pointMap[ id ] === undefined ) {\r\n\t\r\n\t\t\t\tpointMap[ id ] = [];\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tpointMap[ id ].push( geometry.vertices.length - 1 );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tTHREE.LineSegments.call( this, geometry, material );\r\n\t\r\n\t\tthis.camera = camera;\r\n\t\tthis.matrix = camera.matrixWorld;\r\n\t\tthis.matrixAutoUpdate = false;\r\n\t\r\n\t\tthis.pointMap = pointMap;\r\n\t\r\n\t\tthis.update();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.CameraHelper.prototype = Object.create( THREE.LineSegments.prototype );\r\n\tTHREE.CameraHelper.prototype.constructor = THREE.CameraHelper;\r\n\t\r\n\tTHREE.CameraHelper.prototype.update = function () {\r\n\t\r\n\t\tvar geometry, pointMap;\r\n\t\r\n\t\tvar vector = new THREE.Vector3();\r\n\t\tvar camera = new THREE.Camera();\r\n\t\r\n\t\tvar setPoint = function ( point, x, y, z ) {\r\n\t\r\n\t\t\tvector.set( x, y, z ).unproject( camera );\r\n\t\r\n\t\t\tvar points = pointMap[ point ];\r\n\t\r\n\t\t\tif ( points !== undefined ) {\r\n\t\r\n\t\t\t\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\t\tgeometry.vertices[ points[ i ] ].copy( vector );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t\treturn function () {\r\n\t\r\n\t\t\tgeometry = this.geometry;\r\n\t\t\tpointMap = this.pointMap;\r\n\t\r\n\t\t\tvar w = 1, h = 1;\r\n\t\r\n\t\t\t// we need just camera projection matrix\r\n\t\t\t// world matrix must be identity\r\n\t\r\n\t\t\tcamera.projectionMatrix.copy( this.camera.projectionMatrix );\r\n\t\r\n\t\t\t// center / target\r\n\t\r\n\t\t\tsetPoint( \"c\", 0, 0, - 1 );\r\n\t\t\tsetPoint( \"t\", 0, 0,  1 );\r\n\t\r\n\t\t\t// near\r\n\t\r\n\t\t\tsetPoint( \"n1\", - w, - h, - 1 );\r\n\t\t\tsetPoint( \"n2\",   w, - h, - 1 );\r\n\t\t\tsetPoint( \"n3\", - w,   h, - 1 );\r\n\t\t\tsetPoint( \"n4\",   w,   h, - 1 );\r\n\t\r\n\t\t\t// far\r\n\t\r\n\t\t\tsetPoint( \"f1\", - w, - h, 1 );\r\n\t\t\tsetPoint( \"f2\",   w, - h, 1 );\r\n\t\t\tsetPoint( \"f3\", - w,   h, 1 );\r\n\t\t\tsetPoint( \"f4\",   w,   h, 1 );\r\n\t\r\n\t\t\t// up\r\n\t\r\n\t\t\tsetPoint( \"u1\",   w * 0.7, h * 1.1, - 1 );\r\n\t\t\tsetPoint( \"u2\", - w * 0.7, h * 1.1, - 1 );\r\n\t\t\tsetPoint( \"u3\",         0, h * 2,   - 1 );\r\n\t\r\n\t\t\t// cross\r\n\t\r\n\t\t\tsetPoint( \"cf1\", - w,   0, 1 );\r\n\t\t\tsetPoint( \"cf2\",   w,   0, 1 );\r\n\t\t\tsetPoint( \"cf3\",   0, - h, 1 );\r\n\t\t\tsetPoint( \"cf4\",   0,   h, 1 );\r\n\t\r\n\t\t\tsetPoint( \"cn1\", - w,   0, - 1 );\r\n\t\t\tsetPoint( \"cn2\",   w,   0, - 1 );\r\n\t\t\tsetPoint( \"cn3\",   0, - h, - 1 );\r\n\t\t\tsetPoint( \"cn4\",   0,   h, - 1 );\r\n\t\r\n\t\t\tgeometry.verticesNeedUpdate = true;\r\n\t\r\n\t\t};\r\n\t\r\n\t}();\r\n\t\r\n\t// File:src/extras/helpers/DirectionalLightHelper.js\r\n\t\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author WestLangley / http://github.com/WestLangley\r\n\t */\r\n\t\r\n\tTHREE.DirectionalLightHelper = function ( light, size ) {\r\n\t\r\n\t\tTHREE.Object3D.call( this );\r\n\t\r\n\t\tthis.light = light;\r\n\t\tthis.light.updateMatrixWorld();\r\n\t\r\n\t\tthis.matrix = light.matrixWorld;\r\n\t\tthis.matrixAutoUpdate = false;\r\n\t\r\n\t\tsize = size || 1;\r\n\t\r\n\t\tvar geometry = new THREE.Geometry();\r\n\t\tgeometry.vertices.push(\r\n\t\t\tnew THREE.Vector3( - size,   size, 0 ),\r\n\t\t\tnew THREE.Vector3(   size,   size, 0 ),\r\n\t\t\tnew THREE.Vector3(   size, - size, 0 ),\r\n\t\t\tnew THREE.Vector3( - size, - size, 0 ),\r\n\t\t\tnew THREE.Vector3( - size,   size, 0 )\r\n\t\t);\r\n\t\r\n\t\tvar material = new THREE.LineBasicMaterial( { fog: false } );\r\n\t\tmaterial.color.copy( this.light.color ).multiplyScalar( this.light.intensity );\r\n\t\r\n\t\tthis.lightPlane = new THREE.Line( geometry, material );\r\n\t\tthis.add( this.lightPlane );\r\n\t\r\n\t\tgeometry = new THREE.Geometry();\r\n\t\tgeometry.vertices.push(\r\n\t\t\tnew THREE.Vector3(),\r\n\t\t\tnew THREE.Vector3()\r\n\t\t);\r\n\t\r\n\t\tmaterial = new THREE.LineBasicMaterial( { fog: false } );\r\n\t\tmaterial.color.copy( this.light.color ).multiplyScalar( this.light.intensity );\r\n\t\r\n\t\tthis.targetLine = new THREE.Line( geometry, material );\r\n\t\tthis.add( this.targetLine );\r\n\t\r\n\t\tthis.update();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.DirectionalLightHelper.prototype = Object.create( THREE.Object3D.prototype );\r\n\tTHREE.DirectionalLightHelper.prototype.constructor = THREE.DirectionalLightHelper;\r\n\t\r\n\tTHREE.DirectionalLightHelper.prototype.dispose = function () {\r\n\t\r\n\t\tthis.lightPlane.geometry.dispose();\r\n\t\tthis.lightPlane.material.dispose();\r\n\t\tthis.targetLine.geometry.dispose();\r\n\t\tthis.targetLine.material.dispose();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.DirectionalLightHelper.prototype.update = function () {\r\n\t\r\n\t\tvar v1 = new THREE.Vector3();\r\n\t\tvar v2 = new THREE.Vector3();\r\n\t\tvar v3 = new THREE.Vector3();\r\n\t\r\n\t\treturn function () {\r\n\t\r\n\t\t\tv1.setFromMatrixPosition( this.light.matrixWorld );\r\n\t\t\tv2.setFromMatrixPosition( this.light.target.matrixWorld );\r\n\t\t\tv3.subVectors( v2, v1 );\r\n\t\r\n\t\t\tthis.lightPlane.lookAt( v3 );\r\n\t\t\tthis.lightPlane.material.color.copy( this.light.color ).multiplyScalar( this.light.intensity );\r\n\t\r\n\t\t\tthis.targetLine.geometry.vertices[ 1 ].copy( v3 );\r\n\t\t\tthis.targetLine.geometry.verticesNeedUpdate = true;\r\n\t\t\tthis.targetLine.material.color.copy( this.lightPlane.material.color );\r\n\t\r\n\t\t};\r\n\t\r\n\t}();\r\n\t\r\n\t// File:src/extras/helpers/EdgesHelper.js\r\n\t\r\n\t/**\r\n\t * @author WestLangley / http://github.com/WestLangley\r\n\t * @param object THREE.Mesh whose geometry will be used\r\n\t * @param hex line color\r\n\t * @param thresholdAngle the minimum angle (in degrees),\r\n\t * between the face normals of adjacent faces,\r\n\t * that is required to render an edge. A value of 10 means\r\n\t * an edge is only rendered if the angle is at least 10 degrees.\r\n\t */\r\n\t\r\n\tTHREE.EdgesHelper = function ( object, hex, thresholdAngle ) {\r\n\t\r\n\t\tvar color = ( hex !== undefined ) ? hex : 0xffffff;\r\n\t\r\n\t\tTHREE.LineSegments.call( this, new THREE.EdgesGeometry( object.geometry, thresholdAngle ), new THREE.LineBasicMaterial( { color: color } ) );\r\n\t\r\n\t\tthis.matrix = object.matrixWorld;\r\n\t\tthis.matrixAutoUpdate = false;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.EdgesHelper.prototype = Object.create( THREE.LineSegments.prototype );\r\n\tTHREE.EdgesHelper.prototype.constructor = THREE.EdgesHelper;\r\n\t\r\n\t// File:src/extras/helpers/FaceNormalsHelper.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author WestLangley / http://github.com/WestLangley\r\n\t*/\r\n\t\r\n\tTHREE.FaceNormalsHelper = function ( object, size, hex, linewidth ) {\r\n\t\r\n\t\t// FaceNormalsHelper only supports THREE.Geometry\r\n\t\r\n\t\tthis.object = object;\r\n\t\r\n\t\tthis.size = ( size !== undefined ) ? size : 1;\r\n\t\r\n\t\tvar color = ( hex !== undefined ) ? hex : 0xffff00;\r\n\t\r\n\t\tvar width = ( linewidth !== undefined ) ? linewidth : 1;\r\n\t\r\n\t\t//\r\n\t\r\n\t\tvar nNormals = 0;\r\n\t\r\n\t\tvar objGeometry = this.object.geometry;\r\n\t\r\n\t\tif ( objGeometry instanceof THREE.Geometry ) {\r\n\t\r\n\t\t\tnNormals = objGeometry.faces.length;\r\n\t\r\n\t\t} else {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.FaceNormalsHelper: only THREE.Geometry is supported. Use THREE.VertexNormalsHelper, instead.' );\r\n\t\r\n\t\t}\r\n\t\r\n\t\t//\r\n\t\r\n\t\tvar geometry = new THREE.BufferGeometry();\r\n\t\r\n\t\tvar positions = new THREE.Float32Attribute( nNormals * 2 * 3, 3 );\r\n\t\r\n\t\tgeometry.addAttribute( 'position', positions );\r\n\t\r\n\t\tTHREE.LineSegments.call( this, geometry, new THREE.LineBasicMaterial( { color: color, linewidth: width } ) );\r\n\t\r\n\t\t//\r\n\t\r\n\t\tthis.matrixAutoUpdate = false;\r\n\t\tthis.update();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.FaceNormalsHelper.prototype = Object.create( THREE.LineSegments.prototype );\r\n\tTHREE.FaceNormalsHelper.prototype.constructor = THREE.FaceNormalsHelper;\r\n\t\r\n\tTHREE.FaceNormalsHelper.prototype.update = ( function () {\r\n\t\r\n\t\tvar v1 = new THREE.Vector3();\r\n\t\tvar v2 = new THREE.Vector3();\r\n\t\tvar normalMatrix = new THREE.Matrix3();\r\n\t\r\n\t\treturn function update() {\r\n\t\r\n\t\t\tthis.object.updateMatrixWorld( true );\r\n\t\r\n\t\t\tnormalMatrix.getNormalMatrix( this.object.matrixWorld );\r\n\t\r\n\t\t\tvar matrixWorld = this.object.matrixWorld;\r\n\t\r\n\t\t\tvar position = this.geometry.attributes.position;\r\n\t\r\n\t\t\t//\r\n\t\r\n\t\t\tvar objGeometry = this.object.geometry;\r\n\t\r\n\t\t\tvar vertices = objGeometry.vertices;\r\n\t\r\n\t\t\tvar faces = objGeometry.faces;\r\n\t\r\n\t\t\tvar idx = 0;\r\n\t\r\n\t\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\tvar face = faces[ i ];\r\n\t\r\n\t\t\t\tvar normal = face.normal;\r\n\t\r\n\t\t\t\tv1.copy( vertices[ face.a ] )\r\n\t\t\t\t\t.add( vertices[ face.b ] )\r\n\t\t\t\t\t.add( vertices[ face.c ] )\r\n\t\t\t\t\t.divideScalar( 3 )\r\n\t\t\t\t\t.applyMatrix4( matrixWorld );\r\n\t\r\n\t\t\t\tv2.copy( normal ).applyMatrix3( normalMatrix ).normalize().multiplyScalar( this.size ).add( v1 );\r\n\t\r\n\t\t\t\tposition.setXYZ( idx, v1.x, v1.y, v1.z );\r\n\t\r\n\t\t\t\tidx = idx + 1;\r\n\t\r\n\t\t\t\tposition.setXYZ( idx, v2.x, v2.y, v2.z );\r\n\t\r\n\t\t\t\tidx = idx + 1;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tposition.needsUpdate = true;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t}\r\n\t\r\n\t}() );\r\n\t\r\n\t// File:src/extras/helpers/GridHelper.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.GridHelper = function ( size, step ) {\r\n\t\r\n\t\tvar geometry = new THREE.Geometry();\r\n\t\tvar material = new THREE.LineBasicMaterial( { vertexColors: THREE.VertexColors } );\r\n\t\r\n\t\tthis.color1 = new THREE.Color( 0x444444 );\r\n\t\tthis.color2 = new THREE.Color( 0x888888 );\r\n\t\r\n\t\tfor ( var i = - size; i <= size; i += step ) {\r\n\t\r\n\t\t\tgeometry.vertices.push(\r\n\t\t\t\tnew THREE.Vector3( - size, 0, i ), new THREE.Vector3( size, 0, i ),\r\n\t\t\t\tnew THREE.Vector3( i, 0, - size ), new THREE.Vector3( i, 0, size )\r\n\t\t\t);\r\n\t\r\n\t\t\tvar color = i === 0 ? this.color1 : this.color2;\r\n\t\r\n\t\t\tgeometry.colors.push( color, color, color, color );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tTHREE.LineSegments.call( this, geometry, material );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.GridHelper.prototype = Object.create( THREE.LineSegments.prototype );\r\n\tTHREE.GridHelper.prototype.constructor = THREE.GridHelper;\r\n\t\r\n\tTHREE.GridHelper.prototype.setColors = function( colorCenterLine, colorGrid ) {\r\n\t\r\n\t\tthis.color1.set( colorCenterLine );\r\n\t\tthis.color2.set( colorGrid );\r\n\t\r\n\t\tthis.geometry.colorsNeedUpdate = true;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/helpers/HemisphereLightHelper.js\r\n\t\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.HemisphereLightHelper = function ( light, sphereSize ) {\r\n\t\r\n\t\tTHREE.Object3D.call( this );\r\n\t\r\n\t\tthis.light = light;\r\n\t\tthis.light.updateMatrixWorld();\r\n\t\r\n\t\tthis.matrix = light.matrixWorld;\r\n\t\tthis.matrixAutoUpdate = false;\r\n\t\r\n\t\tthis.colors = [ new THREE.Color(), new THREE.Color() ];\r\n\t\r\n\t\tvar geometry = new THREE.SphereGeometry( sphereSize, 4, 2 );\r\n\t\tgeometry.rotateX( - Math.PI / 2 );\r\n\t\r\n\t\tfor ( var i = 0, il = 8; i < il; i ++ ) {\r\n\t\r\n\t\t\tgeometry.faces[ i ].color = this.colors[ i < 4 ? 0 : 1 ];\r\n\t\r\n\t\t}\r\n\t\r\n\t\tvar material = new THREE.MeshBasicMaterial( { vertexColors: THREE.FaceColors, wireframe: true } );\r\n\t\r\n\t\tthis.lightSphere = new THREE.Mesh( geometry, material );\r\n\t\tthis.add( this.lightSphere );\r\n\t\r\n\t\tthis.update();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.HemisphereLightHelper.prototype = Object.create( THREE.Object3D.prototype );\r\n\tTHREE.HemisphereLightHelper.prototype.constructor = THREE.HemisphereLightHelper;\r\n\t\r\n\tTHREE.HemisphereLightHelper.prototype.dispose = function () {\r\n\t\r\n\t\tthis.lightSphere.geometry.dispose();\r\n\t\tthis.lightSphere.material.dispose();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.HemisphereLightHelper.prototype.update = function () {\r\n\t\r\n\t\tvar vector = new THREE.Vector3();\r\n\t\r\n\t\treturn function () {\r\n\t\r\n\t\t\tthis.colors[ 0 ].copy( this.light.color ).multiplyScalar( this.light.intensity );\r\n\t\t\tthis.colors[ 1 ].copy( this.light.groundColor ).multiplyScalar( this.light.intensity );\r\n\t\r\n\t\t\tthis.lightSphere.lookAt( vector.setFromMatrixPosition( this.light.matrixWorld ).negate() );\r\n\t\t\tthis.lightSphere.geometry.colorsNeedUpdate = true;\r\n\t\r\n\t\t}\r\n\t\r\n\t}();\r\n\t\r\n\t// File:src/extras/helpers/PointLightHelper.js\r\n\t\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.PointLightHelper = function ( light, sphereSize ) {\r\n\t\r\n\t\tthis.light = light;\r\n\t\tthis.light.updateMatrixWorld();\r\n\t\r\n\t\tvar geometry = new THREE.SphereGeometry( sphereSize, 4, 2 );\r\n\t\tvar material = new THREE.MeshBasicMaterial( { wireframe: true, fog: false } );\r\n\t\tmaterial.color.copy( this.light.color ).multiplyScalar( this.light.intensity );\r\n\t\r\n\t\tTHREE.Mesh.call( this, geometry, material );\r\n\t\r\n\t\tthis.matrix = this.light.matrixWorld;\r\n\t\tthis.matrixAutoUpdate = false;\r\n\t\r\n\t\t/*\r\n\t\tvar distanceGeometry = new THREE.IcosahedronGeometry( 1, 2 );\r\n\t\tvar distanceMaterial = new THREE.MeshBasicMaterial( { color: hexColor, fog: false, wireframe: true, opacity: 0.1, transparent: true } );\r\n\t\r\n\t\tthis.lightSphere = new THREE.Mesh( bulbGeometry, bulbMaterial );\r\n\t\tthis.lightDistance = new THREE.Mesh( distanceGeometry, distanceMaterial );\r\n\t\r\n\t\tvar d = light.distance;\r\n\t\r\n\t\tif ( d === 0.0 ) {\r\n\t\r\n\t\t\tthis.lightDistance.visible = false;\r\n\t\r\n\t\t} else {\r\n\t\r\n\t\t\tthis.lightDistance.scale.set( d, d, d );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.add( this.lightDistance );\r\n\t\t*/\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.PointLightHelper.prototype = Object.create( THREE.Mesh.prototype );\r\n\tTHREE.PointLightHelper.prototype.constructor = THREE.PointLightHelper;\r\n\t\r\n\tTHREE.PointLightHelper.prototype.dispose = function () {\r\n\t\r\n\t\tthis.geometry.dispose();\r\n\t\tthis.material.dispose();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.PointLightHelper.prototype.update = function () {\r\n\t\r\n\t\tthis.material.color.copy( this.light.color ).multiplyScalar( this.light.intensity );\r\n\t\r\n\t\t/*\r\n\t\tvar d = this.light.distance;\r\n\t\r\n\t\tif ( d === 0.0 ) {\r\n\t\r\n\t\t\tthis.lightDistance.visible = false;\r\n\t\r\n\t\t} else {\r\n\t\r\n\t\t\tthis.lightDistance.visible = true;\r\n\t\t\tthis.lightDistance.scale.set( d, d, d );\r\n\t\r\n\t\t}\r\n\t\t*/\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/helpers/SkeletonHelper.js\r\n\t\r\n\t/**\r\n\t * @author Sean Griffin / http://twitter.com/sgrif\r\n\t * @author Michael Guerrero / http://realitymeltdown.com\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author ikerr / http://verold.com\r\n\t */\r\n\t\r\n\tTHREE.SkeletonHelper = function ( object ) {\r\n\t\r\n\t\tthis.bones = this.getBoneList( object );\r\n\t\r\n\t\tvar geometry = new THREE.Geometry();\r\n\t\r\n\t\tfor ( var i = 0; i < this.bones.length; i ++ ) {\r\n\t\r\n\t\t\tvar bone = this.bones[ i ];\r\n\t\r\n\t\t\tif ( bone.parent instanceof THREE.Bone ) {\r\n\t\r\n\t\t\t\tgeometry.vertices.push( new THREE.Vector3() );\r\n\t\t\t\tgeometry.vertices.push( new THREE.Vector3() );\r\n\t\t\t\tgeometry.colors.push( new THREE.Color( 0, 0, 1 ) );\r\n\t\t\t\tgeometry.colors.push( new THREE.Color( 0, 1, 0 ) );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tgeometry.dynamic = true;\r\n\t\r\n\t\tvar material = new THREE.LineBasicMaterial( { vertexColors: THREE.VertexColors, depthTest: false, depthWrite: false, transparent: true } );\r\n\t\r\n\t\tTHREE.LineSegments.call( this, geometry, material );\r\n\t\r\n\t\tthis.root = object;\r\n\t\r\n\t\tthis.matrix = object.matrixWorld;\r\n\t\tthis.matrixAutoUpdate = false;\r\n\t\r\n\t\tthis.update();\r\n\t\r\n\t};\r\n\t\r\n\t\r\n\tTHREE.SkeletonHelper.prototype = Object.create( THREE.LineSegments.prototype );\r\n\tTHREE.SkeletonHelper.prototype.constructor = THREE.SkeletonHelper;\r\n\t\r\n\tTHREE.SkeletonHelper.prototype.getBoneList = function( object ) {\r\n\t\r\n\t\tvar boneList = [];\r\n\t\r\n\t\tif ( object instanceof THREE.Bone ) {\r\n\t\r\n\t\t\tboneList.push( object );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfor ( var i = 0; i < object.children.length; i ++ ) {\r\n\t\r\n\t\t\tboneList.push.apply( boneList, this.getBoneList( object.children[ i ] ) );\r\n\t\r\n\t\t}\r\n\t\r\n\t\treturn boneList;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.SkeletonHelper.prototype.update = function () {\r\n\t\r\n\t\tvar geometry = this.geometry;\r\n\t\r\n\t\tvar matrixWorldInv = new THREE.Matrix4().getInverse( this.root.matrixWorld );\r\n\t\r\n\t\tvar boneMatrix = new THREE.Matrix4();\r\n\t\r\n\t\tvar j = 0;\r\n\t\r\n\t\tfor ( var i = 0; i < this.bones.length; i ++ ) {\r\n\t\r\n\t\t\tvar bone = this.bones[ i ];\r\n\t\r\n\t\t\tif ( bone.parent instanceof THREE.Bone ) {\r\n\t\r\n\t\t\t\tboneMatrix.multiplyMatrices( matrixWorldInv, bone.matrixWorld );\r\n\t\t\t\tgeometry.vertices[ j ].setFromMatrixPosition( boneMatrix );\r\n\t\r\n\t\t\t\tboneMatrix.multiplyMatrices( matrixWorldInv, bone.parent.matrixWorld );\r\n\t\t\t\tgeometry.vertices[ j + 1 ].setFromMatrixPosition( boneMatrix );\r\n\t\r\n\t\t\t\tj += 2;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tgeometry.verticesNeedUpdate = true;\r\n\t\r\n\t\tgeometry.computeBoundingSphere();\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/helpers/SpotLightHelper.js\r\n\t\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author WestLangley / http://github.com/WestLangley\r\n\t*/\r\n\t\r\n\tTHREE.SpotLightHelper = function ( light ) {\r\n\t\r\n\t\tTHREE.Object3D.call( this );\r\n\t\r\n\t\tthis.light = light;\r\n\t\tthis.light.updateMatrixWorld();\r\n\t\r\n\t\tthis.matrix = light.matrixWorld;\r\n\t\tthis.matrixAutoUpdate = false;\r\n\t\r\n\t\tvar geometry = new THREE.CylinderGeometry( 0, 1, 1, 8, 1, true );\r\n\t\r\n\t\tgeometry.translate( 0, - 0.5, 0 );\r\n\t\tgeometry.rotateX( - Math.PI / 2 );\r\n\t\r\n\t\tvar material = new THREE.MeshBasicMaterial( { wireframe: true, fog: false } );\r\n\t\r\n\t\tthis.cone = new THREE.Mesh( geometry, material );\r\n\t\tthis.add( this.cone );\r\n\t\r\n\t\tthis.update();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.SpotLightHelper.prototype = Object.create( THREE.Object3D.prototype );\r\n\tTHREE.SpotLightHelper.prototype.constructor = THREE.SpotLightHelper;\r\n\t\r\n\tTHREE.SpotLightHelper.prototype.dispose = function () {\r\n\t\r\n\t\tthis.cone.geometry.dispose();\r\n\t\tthis.cone.material.dispose();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.SpotLightHelper.prototype.update = function () {\r\n\t\r\n\t\tvar vector = new THREE.Vector3();\r\n\t\tvar vector2 = new THREE.Vector3();\r\n\t\r\n\t\treturn function () {\r\n\t\r\n\t\t\tvar coneLength = this.light.distance ? this.light.distance : 10000;\r\n\t\t\tvar coneWidth = coneLength * Math.tan( this.light.angle );\r\n\t\r\n\t\t\tthis.cone.scale.set( coneWidth, coneWidth, coneLength );\r\n\t\r\n\t\t\tvector.setFromMatrixPosition( this.light.matrixWorld );\r\n\t\t\tvector2.setFromMatrixPosition( this.light.target.matrixWorld );\r\n\t\r\n\t\t\tthis.cone.lookAt( vector2.sub( vector ) );\r\n\t\r\n\t\t\tthis.cone.material.color.copy( this.light.color ).multiplyScalar( this.light.intensity );\r\n\t\r\n\t\t};\r\n\t\r\n\t}();\r\n\t\r\n\t// File:src/extras/helpers/VertexNormalsHelper.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author WestLangley / http://github.com/WestLangley\r\n\t*/\r\n\t\r\n\tTHREE.VertexNormalsHelper = function ( object, size, hex, linewidth ) {\r\n\t\r\n\t\tthis.object = object;\r\n\t\r\n\t\tthis.size = ( size !== undefined ) ? size : 1;\r\n\t\r\n\t\tvar color = ( hex !== undefined ) ? hex : 0xff0000;\r\n\t\r\n\t\tvar width = ( linewidth !== undefined ) ? linewidth : 1;\r\n\t\r\n\t\t//\r\n\t\r\n\t\tvar nNormals = 0;\r\n\t\r\n\t\tvar objGeometry = this.object.geometry;\r\n\t\r\n\t\tif ( objGeometry instanceof THREE.Geometry ) {\r\n\t\r\n\t\t\tnNormals = objGeometry.faces.length * 3;\r\n\t\r\n\t\t} else if ( objGeometry instanceof THREE.BufferGeometry ) {\r\n\t\r\n\t\t\tnNormals = objGeometry.attributes.normal.count\r\n\t\r\n\t\t}\r\n\t\r\n\t\t//\r\n\t\r\n\t\tvar geometry = new THREE.BufferGeometry();\r\n\t\r\n\t\tvar positions = new THREE.Float32Attribute( nNormals * 2 * 3, 3 );\r\n\t\r\n\t\tgeometry.addAttribute( 'position', positions );\r\n\t\r\n\t\tTHREE.LineSegments.call( this, geometry, new THREE.LineBasicMaterial( { color: color, linewidth: width } ) );\r\n\t\r\n\t\t//\r\n\t\r\n\t\tthis.matrixAutoUpdate = false;\r\n\t\r\n\t\tthis.update();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.VertexNormalsHelper.prototype = Object.create( THREE.LineSegments.prototype );\r\n\tTHREE.VertexNormalsHelper.prototype.constructor = THREE.VertexNormalsHelper;\r\n\t\r\n\tTHREE.VertexNormalsHelper.prototype.update = ( function () {\r\n\t\r\n\t\tvar v1 = new THREE.Vector3();\r\n\t\tvar v2 = new THREE.Vector3();\r\n\t\tvar normalMatrix = new THREE.Matrix3();\r\n\t\r\n\t\treturn function update() {\r\n\t\r\n\t\t\tvar keys = [ 'a', 'b', 'c' ];\r\n\t\r\n\t\t\tthis.object.updateMatrixWorld( true );\r\n\t\r\n\t\t\tnormalMatrix.getNormalMatrix( this.object.matrixWorld );\r\n\t\r\n\t\t\tvar matrixWorld = this.object.matrixWorld;\r\n\t\r\n\t\t\tvar position = this.geometry.attributes.position;\r\n\t\r\n\t\t\t//\r\n\t\r\n\t\t\tvar objGeometry = this.object.geometry;\r\n\t\r\n\t\t\tif ( objGeometry instanceof THREE.Geometry ) {\r\n\t\r\n\t\t\t\tvar vertices = objGeometry.vertices;\r\n\t\r\n\t\t\t\tvar faces = objGeometry.faces;\r\n\t\r\n\t\t\t\tvar idx = 0;\r\n\t\r\n\t\t\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\t\tvar face = faces[ i ];\r\n\t\r\n\t\t\t\t\tfor ( var j = 0, jl = face.vertexNormals.length; j < jl; j ++ ) {\r\n\t\r\n\t\t\t\t\t\tvar vertex = vertices[ face[ keys[ j ] ] ];\r\n\t\r\n\t\t\t\t\t\tvar normal = face.vertexNormals[ j ];\r\n\t\r\n\t\t\t\t\t\tv1.copy( vertex ).applyMatrix4( matrixWorld );\r\n\t\r\n\t\t\t\t\t\tv2.copy( normal ).applyMatrix3( normalMatrix ).normalize().multiplyScalar( this.size ).add( v1 );\r\n\t\r\n\t\t\t\t\t\tposition.setXYZ( idx, v1.x, v1.y, v1.z );\r\n\t\r\n\t\t\t\t\t\tidx = idx + 1;\r\n\t\r\n\t\t\t\t\t\tposition.setXYZ( idx, v2.x, v2.y, v2.z );\r\n\t\r\n\t\t\t\t\t\tidx = idx + 1;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t} else if ( objGeometry instanceof THREE.BufferGeometry ) {\r\n\t\r\n\t\t\t\tvar objPos = objGeometry.attributes.position;\r\n\t\r\n\t\t\t\tvar objNorm = objGeometry.attributes.normal;\r\n\t\r\n\t\t\t\tvar idx = 0;\r\n\t\r\n\t\t\t\t// for simplicity, ignore index and drawcalls, and render every normal\r\n\t\r\n\t\t\t\tfor ( var j = 0, jl = objPos.count; j < jl; j ++ ) {\r\n\t\r\n\t\t\t\t\tv1.set( objPos.getX( j ), objPos.getY( j ), objPos.getZ( j ) ).applyMatrix4( matrixWorld );\r\n\t\r\n\t\t\t\t\tv2.set( objNorm.getX( j ), objNorm.getY( j ), objNorm.getZ( j ) );\r\n\t\r\n\t\t\t\t\tv2.applyMatrix3( normalMatrix ).normalize().multiplyScalar( this.size ).add( v1 );\r\n\t\r\n\t\t\t\t\tposition.setXYZ( idx, v1.x, v1.y, v1.z );\r\n\t\r\n\t\t\t\t\tidx = idx + 1;\r\n\t\r\n\t\t\t\t\tposition.setXYZ( idx, v2.x, v2.y, v2.z );\r\n\t\r\n\t\t\t\t\tidx = idx + 1;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tposition.needsUpdate = true;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t}\r\n\t\r\n\t}() );\r\n\t\r\n\t// File:src/extras/helpers/WireframeHelper.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.WireframeHelper = function ( object, hex ) {\r\n\t\r\n\t\tvar color = ( hex !== undefined ) ? hex : 0xffffff;\r\n\t\r\n\t\tTHREE.LineSegments.call( this, new THREE.WireframeGeometry( object.geometry ), new THREE.LineBasicMaterial( { color: color } ) );\r\n\t\r\n\t\tthis.matrix = object.matrixWorld;\r\n\t\tthis.matrixAutoUpdate = false;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.WireframeHelper.prototype = Object.create( THREE.LineSegments.prototype );\r\n\tTHREE.WireframeHelper.prototype.constructor = THREE.WireframeHelper;\r\n\t\r\n\t// File:src/extras/objects/ImmediateRenderObject.js\r\n\t\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\t\r\n\tTHREE.ImmediateRenderObject = function () {\r\n\t\r\n\t\tTHREE.Object3D.call( this );\r\n\t\r\n\t\tthis.render = function ( renderCallback ) {};\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.ImmediateRenderObject.prototype = Object.create( THREE.Object3D.prototype );\r\n\tTHREE.ImmediateRenderObject.prototype.constructor = THREE.ImmediateRenderObject;\r\n\t\r\n\t// File:src/extras/objects/MorphBlendMesh.js\r\n\t\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\t\r\n\tTHREE.MorphBlendMesh = function( geometry, material ) {\r\n\t\r\n\t\tTHREE.Mesh.call( this, geometry, material );\r\n\t\r\n\t\tthis.animationsMap = {};\r\n\t\tthis.animationsList = [];\r\n\t\r\n\t\t// prepare default animation\r\n\t\t// (all frames played together in 1 second)\r\n\t\r\n\t\tvar numFrames = this.geometry.morphTargets.length;\r\n\t\r\n\t\tvar name = \"__default\";\r\n\t\r\n\t\tvar startFrame = 0;\r\n\t\tvar endFrame = numFrames - 1;\r\n\t\r\n\t\tvar fps = numFrames / 1;\r\n\t\r\n\t\tthis.createAnimation( name, startFrame, endFrame, fps );\r\n\t\tthis.setAnimationWeight( name, 1 );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.MorphBlendMesh.prototype = Object.create( THREE.Mesh.prototype );\r\n\tTHREE.MorphBlendMesh.prototype.constructor = THREE.MorphBlendMesh;\r\n\t\r\n\tTHREE.MorphBlendMesh.prototype.createAnimation = function ( name, start, end, fps ) {\r\n\t\r\n\t\tvar animation = {\r\n\t\r\n\t\t\tstart: start,\r\n\t\t\tend: end,\r\n\t\r\n\t\t\tlength: end - start + 1,\r\n\t\r\n\t\t\tfps: fps,\r\n\t\t\tduration: ( end - start ) / fps,\r\n\t\r\n\t\t\tlastFrame: 0,\r\n\t\t\tcurrentFrame: 0,\r\n\t\r\n\t\t\tactive: false,\r\n\t\r\n\t\t\ttime: 0,\r\n\t\t\tdirection: 1,\r\n\t\t\tweight: 1,\r\n\t\r\n\t\t\tdirectionBackwards: false,\r\n\t\t\tmirroredLoop: false\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.animationsMap[ name ] = animation;\r\n\t\tthis.animationsList.push( animation );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.MorphBlendMesh.prototype.autoCreateAnimations = function ( fps ) {\r\n\t\r\n\t\tvar pattern = /([a-z]+)_?(\\d+)/;\r\n\t\r\n\t\tvar firstAnimation, frameRanges = {};\r\n\t\r\n\t\tvar geometry = this.geometry;\r\n\t\r\n\t\tfor ( var i = 0, il = geometry.morphTargets.length; i < il; i ++ ) {\r\n\t\r\n\t\t\tvar morph = geometry.morphTargets[ i ];\r\n\t\t\tvar chunks = morph.name.match( pattern );\r\n\t\r\n\t\t\tif ( chunks && chunks.length > 1 ) {\r\n\t\r\n\t\t\t\tvar name = chunks[ 1 ];\r\n\t\r\n\t\t\t\tif ( ! frameRanges[ name ] ) frameRanges[ name ] = { start: Infinity, end: - Infinity };\r\n\t\r\n\t\t\t\tvar range = frameRanges[ name ];\r\n\t\r\n\t\t\t\tif ( i < range.start ) range.start = i;\r\n\t\t\t\tif ( i > range.end ) range.end = i;\r\n\t\r\n\t\t\t\tif ( ! firstAnimation ) firstAnimation = name;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfor ( var name in frameRanges ) {\r\n\t\r\n\t\t\tvar range = frameRanges[ name ];\r\n\t\t\tthis.createAnimation( name, range.start, range.end, fps );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.firstAnimation = firstAnimation;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.MorphBlendMesh.prototype.setAnimationDirectionForward = function ( name ) {\r\n\t\r\n\t\tvar animation = this.animationsMap[ name ];\r\n\t\r\n\t\tif ( animation ) {\r\n\t\r\n\t\t\tanimation.direction = 1;\r\n\t\t\tanimation.directionBackwards = false;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.MorphBlendMesh.prototype.setAnimationDirectionBackward = function ( name ) {\r\n\t\r\n\t\tvar animation = this.animationsMap[ name ];\r\n\t\r\n\t\tif ( animation ) {\r\n\t\r\n\t\t\tanimation.direction = - 1;\r\n\t\t\tanimation.directionBackwards = true;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.MorphBlendMesh.prototype.setAnimationFPS = function ( name, fps ) {\r\n\t\r\n\t\tvar animation = this.animationsMap[ name ];\r\n\t\r\n\t\tif ( animation ) {\r\n\t\r\n\t\t\tanimation.fps = fps;\r\n\t\t\tanimation.duration = ( animation.end - animation.start ) / animation.fps;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.MorphBlendMesh.prototype.setAnimationDuration = function ( name, duration ) {\r\n\t\r\n\t\tvar animation = this.animationsMap[ name ];\r\n\t\r\n\t\tif ( animation ) {\r\n\t\r\n\t\t\tanimation.duration = duration;\r\n\t\t\tanimation.fps = ( animation.end - animation.start ) / animation.duration;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.MorphBlendMesh.prototype.setAnimationWeight = function ( name, weight ) {\r\n\t\r\n\t\tvar animation = this.animationsMap[ name ];\r\n\t\r\n\t\tif ( animation ) {\r\n\t\r\n\t\t\tanimation.weight = weight;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.MorphBlendMesh.prototype.setAnimationTime = function ( name, time ) {\r\n\t\r\n\t\tvar animation = this.animationsMap[ name ];\r\n\t\r\n\t\tif ( animation ) {\r\n\t\r\n\t\t\tanimation.time = time;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.MorphBlendMesh.prototype.getAnimationTime = function ( name ) {\r\n\t\r\n\t\tvar time = 0;\r\n\t\r\n\t\tvar animation = this.animationsMap[ name ];\r\n\t\r\n\t\tif ( animation ) {\r\n\t\r\n\t\t\ttime = animation.time;\r\n\t\r\n\t\t}\r\n\t\r\n\t\treturn time;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.MorphBlendMesh.prototype.getAnimationDuration = function ( name ) {\r\n\t\r\n\t\tvar duration = - 1;\r\n\t\r\n\t\tvar animation = this.animationsMap[ name ];\r\n\t\r\n\t\tif ( animation ) {\r\n\t\r\n\t\t\tduration = animation.duration;\r\n\t\r\n\t\t}\r\n\t\r\n\t\treturn duration;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.MorphBlendMesh.prototype.playAnimation = function ( name ) {\r\n\t\r\n\t\tvar animation = this.animationsMap[ name ];\r\n\t\r\n\t\tif ( animation ) {\r\n\t\r\n\t\t\tanimation.time = 0;\r\n\t\t\tanimation.active = true;\r\n\t\r\n\t\t} else {\r\n\t\r\n\t\t\tconsole.warn( \"THREE.MorphBlendMesh: animation[\" + name + \"] undefined in .playAnimation()\" );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.MorphBlendMesh.prototype.stopAnimation = function ( name ) {\r\n\t\r\n\t\tvar animation = this.animationsMap[ name ];\r\n\t\r\n\t\tif ( animation ) {\r\n\t\r\n\t\t\tanimation.active = false;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.MorphBlendMesh.prototype.update = function ( delta ) {\r\n\t\r\n\t\tfor ( var i = 0, il = this.animationsList.length; i < il; i ++ ) {\r\n\t\r\n\t\t\tvar animation = this.animationsList[ i ];\r\n\t\r\n\t\t\tif ( ! animation.active ) continue;\r\n\t\r\n\t\t\tvar frameTime = animation.duration / animation.length;\r\n\t\r\n\t\t\tanimation.time += animation.direction * delta;\r\n\t\r\n\t\t\tif ( animation.mirroredLoop ) {\r\n\t\r\n\t\t\t\tif ( animation.time > animation.duration || animation.time < 0 ) {\r\n\t\r\n\t\t\t\t\tanimation.direction *= - 1;\r\n\t\r\n\t\t\t\t\tif ( animation.time > animation.duration ) {\r\n\t\r\n\t\t\t\t\t\tanimation.time = animation.duration;\r\n\t\t\t\t\t\tanimation.directionBackwards = true;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tif ( animation.time < 0 ) {\r\n\t\r\n\t\t\t\t\t\tanimation.time = 0;\r\n\t\t\t\t\t\tanimation.directionBackwards = false;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tanimation.time = animation.time % animation.duration;\r\n\t\r\n\t\t\t\tif ( animation.time < 0 ) animation.time += animation.duration;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar keyframe = animation.start + THREE.Math.clamp( Math.floor( animation.time / frameTime ), 0, animation.length - 1 );\r\n\t\t\tvar weight = animation.weight;\r\n\t\r\n\t\t\tif ( keyframe !== animation.currentFrame ) {\r\n\t\r\n\t\t\t\tthis.morphTargetInfluences[ animation.lastFrame ] = 0;\r\n\t\t\t\tthis.morphTargetInfluences[ animation.currentFrame ] = 1 * weight;\r\n\t\r\n\t\t\t\tthis.morphTargetInfluences[ keyframe ] = 0;\r\n\t\r\n\t\t\t\tanimation.lastFrame = animation.currentFrame;\r\n\t\t\t\tanimation.currentFrame = keyframe;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar mix = ( animation.time % frameTime ) / frameTime;\r\n\t\r\n\t\t\tif ( animation.directionBackwards ) mix = 1 - mix;\r\n\t\r\n\t\t\tif ( animation.currentFrame !== animation.lastFrame ) {\r\n\t\r\n\t\t\t\tthis.morphTargetInfluences[ animation.currentFrame ] = mix * weight;\r\n\t\t\t\tthis.morphTargetInfluences[ animation.lastFrame ] = ( 1 - mix ) * weight;\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tthis.morphTargetInfluences[ animation.currentFrame ] = weight;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t\r\n\t// Export the THREE object for **Node.js**, with\r\n\t// backwards-compatibility for the old `require()` API. If we're in\r\n\t// the browser, add `_` as a global object via a string identifier,\r\n\t// for Closure Compiler \"advanced\" mode.\r\n\tif (true) {\r\n\t  if (typeof module !== 'undefined' && module.exports) {\r\n\t    exports = module.exports = THREE;\r\n\t  }\r\n\t  exports.THREE = THREE;\r\n\t} else {\r\n\t  this['THREE'] = THREE;\r\n\t}\r\n\n\n/***/ })\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// react-bundle.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap e7cd86ba4db68e3cbcd7","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './containers/App';\n\nReactDOM.render(\n  <App />\n, document.getElementById('react-app'));\n\n\n\n// WEBPACK FOOTER //\n// ./react/app.js","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react.production.min.js');\n} else {\n  module.exports = require('./cjs/react.development.js');\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react/index.js\n// module id = 1\n// module chunks = 0","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var REACT_ELEMENT_TYPE = (typeof Symbol === 'function' &&\n    Symbol.for &&\n    Symbol.for('react.element')) ||\n    0xeac7;\n\n  var isValidElement = function(object) {\n    return typeof object === 'object' &&\n      object !== null &&\n      object.$$typeof === REACT_ELEMENT_TYPE;\n  };\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(isValidElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/prop-types/index.js\n// module id = 2\n// module chunks = 0","'use strict';\n\nvar getVendorPropertyName = require('./getVendorPropertyName');\n\nmodule.exports = function(target, sources) {\n  var to = Object(target);\n  var hasOwnProperty = Object.prototype.hasOwnProperty;\n\n  for (var nextIndex = 1; nextIndex < arguments.length; nextIndex++) {\n    var nextSource = arguments[nextIndex];\n    if (nextSource == null) {\n      continue;\n    }\n\n    var from = Object(nextSource);\n\n    for (var key in from) {\n      if (hasOwnProperty.call(from, key)) {\n        to[key] = from[key];\n      }\n    }\n  }\n\n  var prefixed = {};\n  for (var key in to) {\n    prefixed[getVendorPropertyName(key)] = to[key]\n  }\n\n  return prefixed\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/domkit/appendVendorPrefix.js\n// module id = 3\n// module chunks = 0","'use strict';\n\nvar insertRule = require('./insertRule');\nvar vendorPrefix = require('./getVendorPrefix')();\nvar index = 0;\n\nmodule.exports = function(keyframes) {\n  // random name\n  var name = 'anim_' + (++index) + (+new Date);\n  var css = \"@\" + vendorPrefix + \"keyframes \" + name + \" {\";\n\n  for (var key in keyframes) {\n    css += key + \" {\";\n\n    for (var property in keyframes[key]) {\n      var part = \":\" + keyframes[key][property] + \";\";\n      // We do vendor prefix for every property\n      css += vendorPrefix + property + part;\n      css += property + part;\n    }\n\n    css += \"}\";\n  }\n\n  css += \"}\";\n\n  insertRule(css);\n\n  return name\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/domkit/insertKeyframesRule.js\n// module id = 4\n// module chunks = 0","/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n\n'use strict';\n/* eslint-disable no-unused-vars */\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (err) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (getOwnPropertySymbols) {\n\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/object-assign/index.js\n// module id = 5\n// module chunks = 0","'use strict';\n\nfunction checkDCE() {\n  /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\n  if (\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined' ||\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== 'function'\n  ) {\n    return;\n  }\n  if (process.env.NODE_ENV !== 'production') {\n    // This branch is unreachable because this function is only called\n    // in production, but the condition is true only in development.\n    // Therefore if the branch is still here, dead code elimination wasn't\n    // properly applied.\n    // Don't change the message. React DevTools relies on it. Also make sure\n    // this message doesn't occur elsewhere in this function, or it will cause\n    // a false positive.\n    throw new Error('^_^');\n  }\n  try {\n    // Verify that the code above has been dead code eliminated (DCE'd).\n    __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);\n  } catch (err) {\n    // DevTools shouldn't crash React, no matter what.\n    // We should still report in case we break this code.\n    console.error(err);\n  }\n}\n\nif (process.env.NODE_ENV === 'production') {\n  // DCE check should happen before ReactDOM bundle executes so that\n  // DevTools can report bad minification during injection.\n  checkDCE();\n  module.exports = require('./cjs/react-dom.production.min.js');\n} else {\n  module.exports = require('./cjs/react-dom.development.js');\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/index.js\n// module id = 6\n// module chunks = 0","import React, { Component } from 'react';\nimport STLViewer from '../../src/STLViewer';\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      color: '#FF0000'\n    }\n\n    this.clickBlue = this.clickBlue.bind(this)\n    this.clickRed = this.clickRed.bind(this)\n  }\n\n  clickBlue(e) {\n    e.preventDefault()\n    this.setState({ color: '#0000FF' })\n  }\n\n  clickRed(e) {\n    e.preventDefault()\n    this.setState({ color: '#FF0000' })\n  }\n\n  render() {\n    return (\n      <div>\n        <STLViewer url=\"dist/static/crazy-thing.stl\" modelColor={this.state.color}/>\n        <button onClick={this.clickRed}>red</button>\n        <button onClick={this.clickBlue}>blue</button>\n      </div>\n      );\n}\n};\nexport default App;\n\n\n\n// WEBPACK FOOTER //\n// ./react/containers/App.js","import THREE from './Three';\nimport ReactDOM from 'react-dom';\nlet OrbitControls = require('three-orbit-controls')(THREE);\n\nconst DIRECTIONAL_LIGHT = 'directionalLight';\n\nclass Paint {\n  constructor() {\n    this.loader = new THREE.STLLoader();\n    this.scene = new THREE.Scene();\n    this.renderer = new THREE.WebGLRenderer({\n      antialias: true\n    });\n  }\n\n  init(context) {\n    this.component = context;\n    this.url = context.props.url;\n    this.width = context.props.width;\n    this.height = context.props.height;\n    this.modelColor = context.props.modelColor;\n    this.backgroundColor = context.props.backgroundColor;\n    this.orbitControls = context.props.orbitControls;\n    this.rotate = context.props.rotate;\n    this.cameraX = context.props.cameraX;\n    this.cameraY = context.props.cameraY;\n    this.cameraZ = context.props.cameraZ;\n    this.rotationSpeeds = context.props.rotationSpeeds;\n    this.lightX = context.props.lightX;\n    this.lightY = context.props.lightY;\n    this.lightZ = context.props.lightZ;\n    this.lightColor = context.props.lightColor;\n\n    if (this.mesh !== undefined) {\n      this.mesh.geometry.dispose();\n      this.mesh.material.dispose();\n      this.scene.remove(this.mesh);\n      delete this.mesh;\n    }\n    const directionalLightObj = this.scene.getObjectByName(DIRECTIONAL_LIGHT);\n    if (directionalLightObj) {\n      this.scene.remove(directionalLightObj);\n    }\n\n    if (this.animationRequestId) {\n      cancelAnimationFrame(this.animationRequestId);\n    }\n\n    //Detector.addGetWebGLMessage();\n    this.distance = 10000;\n    let directionalLight = new THREE.DirectionalLight(this.lightColor);\n    directionalLight.position.x = this.lightX;\n    directionalLight.position.y = this.lightY;\n    directionalLight.position.z = this.lightZ;\n    directionalLight.position.normalize();\n    directionalLight.name = DIRECTIONAL_LIGHT;\n    this.scene.add(directionalLight);\n\n    this.addSTLToScene();\n  }\n\n  addSTLToScene() {\n    this.loader.crossOrigin = '';\n    this.loader.load(this.url, geometry => {\n      // Calculate mesh noramls for MeshLambertMaterial.\n      geometry.computeFaceNormals();\n      geometry.computeVertexNormals();\n\n      // Center the object\n      geometry.center();\n\n      this.mesh = new THREE.Mesh(\n        geometry,\n        new THREE.MeshLambertMaterial({\n          overdraw: true,\n          color: this.modelColor\n        })\n      );\n      // Set the object's dimensions\n      geometry.computeBoundingBox();\n      this.xDims = geometry.boundingBox.max.x - geometry.boundingBox.min.x;\n      this.yDims = geometry.boundingBox.max.y - geometry.boundingBox.min.y;\n      this.zDims = geometry.boundingBox.max.z - geometry.boundingBox.min.z;\n\n      if (this.rotate) {\n        this.mesh.rotation.x = this.rotationSpeeds[0];\n        this.mesh.rotation.y = this.rotationSpeeds[1];\n        this.mesh.rotation.z = this.rotationSpeeds[2];\n      }\n\n      this.scene.add(this.mesh);\n\n      this.addCamera();\n      this.addInteractionControls();\n      this.addToReactComponent();\n\n      // Start the animation\n      this.animate();\n    });\n  }\n\n  addCamera() {\n    // Add the camera\n    this.camera = new THREE.PerspectiveCamera(\n      30,\n      this.width / this.height,\n      1,\n      this.distance\n    );\n\n    if (this.cameraZ === null) {\n      this.cameraZ = Math.max(this.xDims * 3, this.yDims * 3, this.zDims * 3);\n    }\n\n    this.camera.position.set(this.cameraX, this.cameraY, this.cameraZ);\n\n    this.scene.add(this.camera);\n\n    this.camera.lookAt(this.mesh);\n\n    this.renderer.set;\n    this.renderer.setSize(this.width, this.height);\n    this.renderer.setClearColor(this.backgroundColor, 1);\n  }\n\n  addInteractionControls() {\n    // Add controls for mouse interaction\n    if (this.orbitControls) {\n      this.controls = new OrbitControls(\n        this.camera,\n        ReactDOM.findDOMNode(this.component)\n      );\n      this.controls.enableKeys = false;\n      this.controls.addEventListener('change', this.orbitRender.bind(this));\n    }\n  }\n\n  addToReactComponent() {\n    // Add to the React Component\n    ReactDOM.findDOMNode(this.component).replaceChild(\n      this.renderer.domElement,\n      ReactDOM.findDOMNode(this.component).firstChild\n    );\n  }\n\n  /**\n   * Animate the scene\n   * @returns {void}\n   */\n  animate() {\n    // note: three.js includes requestAnimationFrame shim\n    if (this.rotate) {\n      this.animationRequestId = requestAnimationFrame(this.animate.bind(this));\n    }\n\n    if (this.orbitControls) {\n      this.controls.update();\n    }\n    this.render();\n  }\n\n  /**\n   * Render the scene after turning off the rotation\n   * @returns {void}\n   */\n  orbitRender() {\n    if (this.rotate) {\n      this.rotate = false;\n    }\n\n    this.render();\n  }\n\n  /**\n   * Deallocate Mesh, renderer context.\n   * @returns {void}\n   */\n  clean() {\n    if (this.mesh !== undefined) {\n      this.mesh.geometry.dispose();\n      this.mesh.material.dispose();\n      this.scene.remove(this.mesh);\n      delete this.mesh;\n    }\n    const directionalLightObj = this.scene.getObjectByName(DIRECTIONAL_LIGHT);\n    if (directionalLightObj) {\n      this.scene.remove(directionalLightObj);\n    }\n\n    if (this.animationRequestId) {\n      cancelAnimationFrame(this.animationRequestId);\n    }\n    this.renderer.dispose();\n    this.renderer.forceContextLoss();\n  }\n\n  /**\n   * Render the scene\n   * @returns {void}\n   */\n  render() {\n    if (this.mesh && this.rotate) {\n      this.mesh.rotation.x += this.rotationSpeeds[0];\n      this.mesh.rotation.y += this.rotationSpeeds[1];\n      this.mesh.rotation.z += this.rotationSpeeds[2];\n    }\n\n    this.renderer.render(this.scene, this.camera);\n  }\n}\n\nexport default Paint;\n\n\n\n// WEBPACK FOOTER //\n// ./src/Paint.js","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { ScaleLoader } from 'halogenium';\nimport Paint from './Paint';\n\nclass STLViewer extends Component {\n  static propTypes = {\n    className: PropTypes.string,\n    url: PropTypes.string,\n    width: PropTypes.number,\n    height: PropTypes.number,\n    backgroundColor: PropTypes.string,\n    modelColor: PropTypes.string,\n    rotate: PropTypes.bool,\n    orbitControls: PropTypes.bool,\n    cameraX: PropTypes.number,\n    cameraY: PropTypes.number,\n    cameraZ: PropTypes.number,\n    lightX: PropTypes.number,\n    lightY: PropTypes.number,\n    lightZ: PropTypes.number,\n    lightColor: PropTypes.string,\n    rotationSpeeds: PropTypes.arrayOf(PropTypes.number)\n  };\n\n  static defaultProps = {\n    backgroundColor: '#EAEAEA',\n    modelColor: '#B92C2C',\n    height: 400,\n    width: 400,\n    rotate: true,\n    orbitControls: true,\n    cameraX: 0,\n    cameraY: 0,\n    cameraZ: null,\n    lightX: 0,\n    lightY: 0,\n    lightZ: 1,\n    lightColor: '#ffffff',\n    rotationSpeeds: [0, 0, 0.02]\n  };\n\n  componentDidMount() {\n    this.paint = new Paint();\n    this.paint.init(this);\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    return JSON.stringify(nextProps) !== JSON.stringify(this.props);\n  }\n\n  componentWillUpdate(nextProps, nextState) {\n    this.props = nextProps;\n    this.paint.init(this);\n  }\n\n  componentWillUnmount() {\n    this.paint.clean();\n    delete this.paint;\n  }\n\n  render() {\n    const { width, height, modelColor } = this.props;\n    return (\n      <div\n        className={this.props.className}\n        style={{\n          width: width,\n          height: height,\n          overflow: 'hidden'\n        }}\n      >\n        <div\n          style={{\n            height: '100%',\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center'\n          }}\n        >\n          <ScaleLoader color={modelColor} size=\"16px\" />\n        </div>\n      </div>\n    );\n  }\n}\n\nmodule.exports = STLViewer;\n\n\n\n// WEBPACK FOOTER //\n// ./src/STLViewer.js","var THREE = require('three');\n\n\n//\n// STL Loader added\n//\n/**\n * @author aleeper / http://adamleeper.com/\n * @author mrdoob / http://mrdoob.com/\n * @author gero3 / https://github.com/gero3\n *\n * Description: A THREE loader for STL ASCII files, as created by Solidworks and other CAD programs.\n *\n * Supports both binary and ASCII encoded files, with automatic detection of type.\n *\n * Limitations:\n *  Binary decoding supports \"Magics\" color format (http://en.wikipedia.org/wiki/STL_(file_format)#Color_in_binary_STL).\n *  There is perhaps some question as to how valid it is to always assume little-endian-ness.\n *  ASCII decoding assumes file is UTF-8. Seems to work for the examples...\n *\n * Usage:\n *  var loader = new THREE.STLLoader();\n *  loader.load( './models/stl/slotted_disk.stl', function ( geometry ) {\n *    scene.add( new THREE.Mesh( geometry ) );\n *  });\n *\n * For binary STLs geometry might contain colors for vertices. To use it:\n *  // use the same code to load STL as above\n *  if (geometry.hasColors) {\n *    material = new THREE.MeshPhongMaterial({ opacity: geometry.alpha, vertexColors: THREE.VertexColors });\n *  } else { .... }\n *  var mesh = new THREE.Mesh( geometry, material );\n */\n\n\nTHREE.STLLoader = function ( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\n\n};\n\nTHREE.STLLoader.prototype = {\n\n\tconstructor: THREE.STLLoader,\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tvar scope = this;\n\n\t\tvar loader = new THREE.XHRLoader( scope.manager );\n\t\tloader.setCrossOrigin( this.crossOrigin );\n\t\tloader.setResponseType('arraybuffer');\n\t\tloader.load( url, function ( text ) {\n\n\t\t\tonLoad( scope.parse( text ) );\n\n\t\t}, onProgress, onError );\n\n\t},\n\t\n\tparse: function ( data ) {\n\n\t\tvar isBinary = function () {\n\n\t\t\tvar expect, face_size, n_faces, reader;\n\t\t\treader = new DataView( binData );\n\t\t\tface_size = (32 / 8 * 3) + ((32 / 8 * 3) * 3) + (16 / 8);\n\t\t\tn_faces = reader.getUint32(80, true);\n\t\t\texpect = 80 + (32 / 8) + (n_faces * face_size);\n\t\t\t\n\t\t\tif ( expect === reader.byteLength ) {\n\t\t\t\t\n\t\t\t\treturn true;\n\t\t\t\t\n\t\t\t}\n\n\t\t\t// some binary files will have different size from expected,\n\t\t\t// checking characters higher than ASCII to confirm is binary\n\t\t\tvar fileLength = reader.byteLength;\n\t\t\tfor ( var index = 0; index < fileLength; index ++ ) {\n\n\t\t\t\tif ( reader.getUint8(index, false) > 127 ) {\n\t\t\t\t\t\n\t\t\t\t\treturn true;\n\t\t\t\t\t\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn false;\n\n\t\t};\n\n\t\tvar binData = this.ensureBinary( data );\n\n\t\treturn isBinary()\n\t\t\t? this.parseBinary( binData )\n\t\t\t: this.parseASCII( this.ensureString( data ) );\n\n\t},\n\n\tparseBinary: function ( data ) {\n\n\t\tvar reader = new DataView( data );\n\t\tvar faces = reader.getUint32( 80, true );\n\n\t\tvar r, g, b, hasColors = false, colors;\n\t\tvar defaultR, defaultG, defaultB, alpha;\n\n\t\t// process STL header\n\t\t// check for default color in header (\"COLOR=rgba\" sequence).\n\n\t\tfor ( var index = 0; index < 80 - 10; index ++ ) {\n\n\t\t\tif ((reader.getUint32(index, false) == 0x434F4C4F /*COLO*/) &&\n\t\t\t\t(reader.getUint8(index + 4) == 0x52 /*'R'*/) &&\n\t\t\t\t(reader.getUint8(index + 5) == 0x3D /*'='*/)) {\n\n\t\t\t\thasColors = true;\n\t\t\t\tcolors = new Float32Array( faces * 3 * 3);\n\n\t\t\t\tdefaultR = reader.getUint8(index + 6) / 255;\n\t\t\t\tdefaultG = reader.getUint8(index + 7) / 255;\n\t\t\t\tdefaultB = reader.getUint8(index + 8) / 255;\n\t\t\t\talpha = reader.getUint8(index + 9) / 255;\n\t\t\t}\n\t\t}\n\n\t\tvar dataOffset = 84;\n\t\tvar faceLength = 12 * 4 + 2;\n\n\t\tvar offset = 0;\n\n\t\tvar geometry = new THREE.BufferGeometry();\n\n\t\tvar vertices = new Float32Array( faces * 3 * 3 );\n\t\tvar normals = new Float32Array( faces * 3 * 3 );\n\n\t\tfor ( var face = 0; face < faces; face ++ ) {\n\n\t\t\tvar start = dataOffset + face * faceLength;\n\t\t\tvar normalX = reader.getFloat32(start, true);\n\t\t\tvar normalY = reader.getFloat32(start + 4, true);\n\t\t\tvar normalZ = reader.getFloat32(start + 8, true);\n\n\t\t\tif (hasColors) {\n\n\t\t\t\tvar packedColor = reader.getUint16(start + 48, true);\n\n\t\t\t\tif ((packedColor & 0x8000) === 0) { // facet has its own unique color\n\n\t\t\t\t\tr = (packedColor & 0x1F) / 31;\n\t\t\t\t\tg = ((packedColor >> 5) & 0x1F) / 31;\n\t\t\t\t\tb = ((packedColor >> 10) & 0x1F) / 31;\n\t\t\t\t} else {\n\n\t\t\t\t\tr = defaultR;\n\t\t\t\t\tg = defaultG;\n\t\t\t\t\tb = defaultB;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor ( var i = 1; i <= 3; i ++ ) {\n\n\t\t\t\tvar vertexstart = start + i * 12;\n\n\t\t\t\tvertices[ offset     ] = reader.getFloat32( vertexstart, true );\n\t\t\t\tvertices[ offset + 1 ] = reader.getFloat32( vertexstart + 4, true );\n\t\t\t\tvertices[ offset + 2 ] = reader.getFloat32( vertexstart + 8, true );\n\n\t\t\t\tnormals[ offset     ] = normalX;\n\t\t\t\tnormals[ offset + 1 ] = normalY;\n\t\t\t\tnormals[ offset + 2 ] = normalZ;\n\n\t\t\t\tif (hasColors) {\n\t\t\t\t\tcolors[ offset     ] = r;\n\t\t\t\t\tcolors[ offset + 1 ] = g;\n\t\t\t\t\tcolors[ offset + 2 ] = b;\n\t\t\t\t}\n\n\t\t\t\toffset += 3;\n\n\t\t\t}\n\n\t\t}\n\n\t\tgeometry.addAttribute( 'position', new THREE.BufferAttribute( vertices, 3 ) );\n\t\tgeometry.addAttribute( 'normal', new THREE.BufferAttribute( normals, 3 ) );\n\n\t\tif (hasColors) {\n\t\t\tgeometry.addAttribute( 'color', new THREE.BufferAttribute( colors, 3 ) );\n\t\t\tgeometry.hasColors = true;\n\t\t\tgeometry.alpha = alpha;\n\t\t}\n\n\t\treturn geometry;\n\n\t},\n\n\tparseASCII: function ( data ) {\n\n\t\tvar geometry, length, normal, patternFace, patternNormal, patternVertex, result, text;\n\t\tgeometry = new THREE.Geometry();\n\t\tpatternFace = /facet([\\s\\S]*?)endfacet/g;\n\n\t\twhile ( ( result = patternFace.exec( data ) ) !== null ) {\n\n\t\t\ttext = result[0];\n\t\t\tpatternNormal = /normal[\\s]+([\\-+]?[0-9]+\\.?[0-9]*([eE][\\-+]?[0-9]+)?)+[\\s]+([\\-+]?[0-9]*\\.?[0-9]+([eE][\\-+]?[0-9]+)?)+[\\s]+([\\-+]?[0-9]*\\.?[0-9]+([eE][\\-+]?[0-9]+)?)+/g;\n\n\t\t\twhile ( ( result = patternNormal.exec( text ) ) !== null ) {\n\n\t\t\t\tnormal = new THREE.Vector3( parseFloat( result[ 1 ] ), parseFloat( result[ 3 ] ), parseFloat( result[ 5 ] ) );\n\n\t\t\t}\n\n\t\t\tpatternVertex = /vertex[\\s]+([\\-+]?[0-9]+\\.?[0-9]*([eE][\\-+]?[0-9]+)?)+[\\s]+([\\-+]?[0-9]*\\.?[0-9]+([eE][\\-+]?[0-9]+)?)+[\\s]+([\\-+]?[0-9]*\\.?[0-9]+([eE][\\-+]?[0-9]+)?)+/g;\n\n\t\t\twhile ( ( result = patternVertex.exec( text ) ) !== null ) {\n\n\t\t\t\tgeometry.vertices.push( new THREE.Vector3( parseFloat( result[ 1 ] ), parseFloat( result[ 3 ] ), parseFloat( result[ 5 ] ) ) );\n\n\t\t\t}\n\n\t\t\tlength = geometry.vertices.length;\n\n\t\t\tgeometry.faces.push( new THREE.Face3( length - 3, length - 2, length - 1, normal ) );\n\n\t\t}\n\n\t\tgeometry.computeBoundingBox();\n\t\tgeometry.computeBoundingSphere();\n\n\t\treturn geometry;\n\n\t},\n\n\tensureString: function ( buf ) {\n\n\t\tif (typeof buf !== \"string\") {\n\t\t\tvar array_buffer = new Uint8Array(buf);\n\t\t\tvar str = '';\n\t\t\tfor (var i = 0; i < buf.byteLength; i ++) {\n\t\t\t\tstr += String.fromCharCode(array_buffer[i]); // implicitly assumes little-endian\n\t\t\t}\n\t\t\treturn str;\n\t\t} else {\n\t\t\treturn buf;\n\t\t}\n\n\t},\n\n\tensureBinary: function ( buf ) {\n\n\t\tif (typeof buf === \"string\") {\n\t\t\tvar array_buffer = new Uint8Array(buf.length);\n\t\t\tfor (var i = 0; i < buf.length; i ++) {\n\t\t\t\tarray_buffer[i] = buf.charCodeAt(i) & 0xff; // implicitly assumes little-endian\n\t\t\t}\n\t\t\treturn array_buffer.buffer || array_buffer;\n\t\t} else {\n\t\t\treturn buf;\n\t\t}\n\t\t\n\t}\n\n};\n\nif ( typeof DataView === 'undefined') {\n\n\tDataView = function(buffer, byteOffset, byteLength) {\n\n\t\tthis.buffer = buffer;\n\t\tthis.byteOffset = byteOffset || 0;\n\t\tthis.byteLength = byteLength || buffer.byteLength || buffer.length;\n\t\tthis._isString = typeof buffer === \"string\";\n\n\t}\n\n\tDataView.prototype = {\n\n\t\t_getCharCodes:function(buffer,start,length) {\n\t\t\tstart = start || 0;\n\t\t\tlength = length || buffer.length;\n\t\t\tvar end = start + length;\n\t\t\tvar codes = [];\n\t\t\tfor (var i = start; i < end; i ++) {\n\t\t\t\tcodes.push(buffer.charCodeAt(i) & 0xff);\n\t\t\t}\n\t\t\treturn codes;\n\t\t},\n\n\t\t_getBytes: function (length, byteOffset, littleEndian) {\n\n\t\t\tvar result;\n\n\t\t\t// Handle the lack of endianness\n\t\t\tif (littleEndian === undefined) {\n\n\t\t\t\tlittleEndian = this._littleEndian;\n\n\t\t\t}\n\n\t\t\t// Handle the lack of byteOffset\n\t\t\tif (byteOffset === undefined) {\n\n\t\t\t\tbyteOffset = this.byteOffset;\n\n\t\t\t} else {\n\n\t\t\t\tbyteOffset = this.byteOffset + byteOffset;\n\n\t\t\t}\n\n\t\t\tif (length === undefined) {\n\n\t\t\t\tlength = this.byteLength - byteOffset;\n\n\t\t\t}\n\n\t\t\t// Error Checking\n\t\t\tif (typeof byteOffset !== 'number') {\n\n\t\t\t\tthrow new TypeError('DataView byteOffset is not a number');\n\n\t\t\t}\n\n\t\t\tif (length < 0 || byteOffset + length > this.byteLength) {\n\n\t\t\t\tthrow new Error('DataView length or (byteOffset+length) value is out of bounds');\n\n\t\t\t}\n\n\t\t\tif (this.isString) {\n\n\t\t\t\tresult = this._getCharCodes(this.buffer, byteOffset, byteOffset + length);\n\n\t\t\t} else {\n\n\t\t\t\tresult = this.buffer.slice(byteOffset, byteOffset + length);\n\n\t\t\t}\n\n\t\t\tif (!littleEndian && length > 1) {\n\n\t\t\t\tif (!(result instanceof Array)) {\n\n\t\t\t\t\tresult = Array.prototype.slice.call(result);\n\n\t\t\t\t}\n\n\t\t\t\tresult.reverse();\n\t\t\t}\n\n\t\t\treturn result;\n\n\t\t},\n\n\t\t// Compatibility functions on a String Buffer\n\n\t\tgetFloat64: function (byteOffset, littleEndian) {\n\n\t\t\tvar b = this._getBytes(8, byteOffset, littleEndian),\n\n\t\t\t\tsign = 1 - (2 * (b[7] >> 7)),\n\t\t\t\texponent = ((((b[7] << 1) & 0xff) << 3) | (b[6] >> 4)) - ((1 << 10) - 1),\n\n\t\t\t// Binary operators such as | and << operate on 32 bit values, using + and Math.pow(2) instead\n\t\t\t\tmantissa = ((b[6] & 0x0f) * Math.pow(2, 48)) + (b[5] * Math.pow(2, 40)) + (b[4] * Math.pow(2, 32)) +\n\t\t\t\t\t\t\t(b[3] * Math.pow(2, 24)) + (b[2] * Math.pow(2, 16)) + (b[1] * Math.pow(2, 8)) + b[0];\n\n\t\t\tif (exponent === 1024) {\n\t\t\t\tif (mantissa !== 0) {\n\t\t\t\t\treturn NaN;\n\t\t\t\t} else {\n\t\t\t\t\treturn sign * Infinity;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (exponent === -1023) { // Denormalized\n\t\t\t\treturn sign * mantissa * Math.pow(2, -1022 - 52);\n\t\t\t}\n\n\t\t\treturn sign * (1 + mantissa * Math.pow(2, -52)) * Math.pow(2, exponent);\n\n\t\t},\n\n\t\tgetFloat32: function (byteOffset, littleEndian) {\n\n\t\t\tvar b = this._getBytes(4, byteOffset, littleEndian),\n\n\t\t\t\tsign = 1 - (2 * (b[3] >> 7)),\n\t\t\t\texponent = (((b[3] << 1) & 0xff) | (b[2] >> 7)) - 127,\n\t\t\t\tmantissa = ((b[2] & 0x7f) << 16) | (b[1] << 8) | b[0];\n\n\t\t\tif (exponent === 128) {\n\t\t\t\tif (mantissa !== 0) {\n\t\t\t\t\treturn NaN;\n\t\t\t\t} else {\n\t\t\t\t\treturn sign * Infinity;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (exponent === -127) { // Denormalized\n\t\t\t\treturn sign * mantissa * Math.pow(2, -126 - 23);\n\t\t\t}\n\n\t\t\treturn sign * (1 + mantissa * Math.pow(2, -23)) * Math.pow(2, exponent);\n\t\t},\n\n\t\tgetInt32: function (byteOffset, littleEndian) {\n\t\t\tvar b = this._getBytes(4, byteOffset, littleEndian);\n\t\t\treturn (b[3] << 24) | (b[2] << 16) | (b[1] << 8) | b[0];\n\t\t},\n\n\t\tgetUint32: function (byteOffset, littleEndian) {\n\t\t\treturn this.getInt32(byteOffset, littleEndian) >>> 0;\n\t\t},\n\n\t\tgetInt16: function (byteOffset, littleEndian) {\n\t\t\treturn (this.getUint16(byteOffset, littleEndian) << 16) >> 16;\n\t\t},\n\n\t\tgetUint16: function (byteOffset, littleEndian) {\n\t\t\tvar b = this._getBytes(2, byteOffset, littleEndian);\n\t\t\treturn (b[1] << 8) | b[0];\n\t\t},\n\n\t\tgetInt8: function (byteOffset) {\n\t\t\treturn (this.getUint8(byteOffset) << 24) >> 24;\n\t\t},\n\n\t\tgetUint8: function (byteOffset) {\n\t\t\treturn this._getBytes(1, byteOffset)[0];\n\t\t}\n\n\t };\n\n}\n\nmodule.exports = THREE;\n\n\n\n// WEBPACK FOOTER //\n// ./src/Three.js","'use strict';\n\nmodule.exports = document.createElement('div').style;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/domkit/builtinStyle.js\n// module id = 11\n// module chunks = 0","'use strict';\n\nvar cssVendorPrefix;\n\nmodule.exports = function() {\n\n  if (cssVendorPrefix) return cssVendorPrefix;\n\n  var styles = window.getComputedStyle(document.documentElement, '');\n  var pre = (Array.prototype.slice.call(styles).join('').match(/-(moz|webkit|ms)-/) || (styles.OLink === '' && ['', 'o']))[1];\n\n  return cssVendorPrefix = '-' + pre + '-';\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/domkit/getVendorPrefix.js\n// module id = 12\n// module chunks = 0","'use strict';\n\nvar builtinStyle = require('./builtinStyle');\nvar prefixes = ['Moz', 'Webkit', 'O', 'ms'];\nvar domVendorPrefix;\n\n// Helper function to get the proper vendor property name. (transition => WebkitTransition)\nmodule.exports = function(prop, isSupportTest) {\n\n  var vendorProp;\n  if (prop in builtinStyle) return prop;\n\n  var UpperProp = prop.charAt(0).toUpperCase() + prop.substr(1);\n\n  if (domVendorPrefix) {\n\n    vendorProp = domVendorPrefix + UpperProp;\n    if (vendorProp in builtinStyle) {\n      return vendorProp;\n    }\n  } else {\n\n    for (var i = 0; i < prefixes.length; ++i) {\n      vendorProp = prefixes[i] + UpperProp;\n      if (vendorProp in builtinStyle) {\n        domVendorPrefix = prefixes[i];\n        return vendorProp;\n      }\n    }\n  }\n\n  // if support test, not fallback to origin prop name\n  if (!isSupportTest) {\n    return prop;\n  }\n\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/domkit/getVendorPropertyName.js\n// module id = 13\n// module chunks = 0","'use strict';\n\nvar extraSheet;\n\nmodule.exports = function(css) {\n\n  if (!extraSheet) {\n    // First time, create an extra stylesheet for adding rules\n    extraSheet = document.createElement('style');\n    document.getElementsByTagName('head')[0].appendChild(extraSheet);\n    // Keep reference to actual StyleSheet object (`styleSheet` for IE < 9)\n    extraSheet = extraSheet.sheet || extraSheet.styleSheet;\n  }\n\n  var index = (extraSheet.cssRules || extraSheet.rules).length;\n  extraSheet.insertRule(css, index);\n\n  return extraSheet;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/domkit/insertRule.js\n// module id = 14\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _appendVendorPrefix = require('domkit/appendVendorPrefix');\n\nvar _appendVendorPrefix2 = _interopRequireDefault(_appendVendorPrefix);\n\nvar _insertKeyframesRule = require('domkit/insertKeyframesRule');\n\nvar _insertKeyframesRule2 = _interopRequireDefault(_insertKeyframesRule);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * @type {Object}\n */\nvar keyframes = {\n  '50%': {\n    transform: 'scale(0.75)',\n    opacity: 0.2\n  },\n  '100%': {\n    transform: 'scale(1)',\n    opacity: 1\n  }\n};\n\nvar animationName = (0, _insertKeyframesRule2.default)(keyframes);\n\nvar propTypes = {\n  loading: _propTypes2.default.bool,\n  color: _propTypes2.default.string,\n  size: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n  margin: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n  verticalAlign: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string])\n};\n\nvar ptKeys = Object.keys(propTypes);\n\nvar BeatLoader = function (_Component) {\n  _inherits(BeatLoader, _Component);\n\n  function BeatLoader() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, BeatLoader);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = BeatLoader.__proto__ || Object.getPrototypeOf(BeatLoader)).call.apply(_ref, [this].concat(args))), _this), _this.getBallStyle = function () {\n      return {\n        backgroundColor: _this.props.color,\n        width: _this.props.size,\n        height: _this.props.size,\n        margin: _this.props.margin,\n        borderRadius: '100%',\n        verticalAlign: _this.props.verticalAlign\n      };\n    }, _this.getAnimationStyle = function (i) {\n      var animation = [animationName, '0.7s', (i % 2 ? 0 : 0.35) + 's', 'infinite', 'linear'].join(' ');\n      var animationFillMode = 'both';\n\n      return {\n        animation: animation,\n        animationFillMode: animationFillMode\n      };\n    }, _this.getStyle = function (i) {\n      return (0, _appendVendorPrefix2.default)(_this.getBallStyle(i), _this.getAnimationStyle(i), {\n        display: 'inline-block',\n        border: '0px solid transparent' // fix firefox/chrome/opera rendering\n      });\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  /**\n   * @return {Object}\n   */\n\n\n  /**\n   * @param  {Number} i\n   * @return {Object}\n   */\n\n\n  /**\n   * @param  {Number} i\n   * @return {Object}\n   */\n\n\n  _createClass(BeatLoader, [{\n    key: 'render',\n    value: function render() {\n      var loading = this.props.loading;\n\n\n      if (loading) {\n        var props = _extends({}, this.props);\n\n        if (propTypes && ptKeys) {\n          var klen = ptKeys.length;\n          for (var i = 0; i < klen; i++) {\n            delete props[ptKeys[i]];\n          }\n        }\n\n        return _react2.default.createElement(\n          'div',\n          props,\n          _react2.default.createElement('div', { style: this.getStyle(1) }),\n          _react2.default.createElement('div', { style: this.getStyle(2) }),\n          _react2.default.createElement('div', { style: this.getStyle(3) })\n        );\n      }\n\n      return null;\n    }\n  }]);\n\n  return BeatLoader;\n}(_react.Component);\n\nBeatLoader.propTypes = propTypes;\nBeatLoader.defaultProps = {\n  loading: true,\n  color: '#ffffff',\n  size: '15px',\n  margin: '2px' };\nexports.default = BeatLoader;\nmodule.exports = exports['default'];\n//# sourceMappingURL=BeatLoader.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/halogenium/lib/BeatLoader.js\n// module id = 15\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _appendVendorPrefix = require('domkit/appendVendorPrefix');\n\nvar _appendVendorPrefix2 = _interopRequireDefault(_appendVendorPrefix);\n\nvar _insertKeyframesRule = require('domkit/insertKeyframesRule');\n\nvar _insertKeyframesRule2 = _interopRequireDefault(_insertKeyframesRule);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar keyframes = {\n  '0%, 100%': {\n    transform: 'scale(0)'\n  },\n  '50%': {\n    transform: 'scale(1.0)'\n  }\n};\n\nvar animationName = (0, _insertKeyframesRule2.default)(keyframes);\n\nvar propTypes = {\n  loading: _propTypes2.default.bool,\n  color: _propTypes2.default.string,\n  size: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n  verticalAlign: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string])\n};\n\nvar ptKeys = Object.keys(propTypes);\n\nvar BounceLoader = function (_Component) {\n  _inherits(BounceLoader, _Component);\n\n  function BounceLoader() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, BounceLoader);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = BounceLoader.__proto__ || Object.getPrototypeOf(BounceLoader)).call.apply(_ref, [this].concat(args))), _this), _this.getBallStyle = function () {\n      return {\n        backgroundColor: _this.props.color,\n        width: _this.props.size,\n        height: _this.props.size,\n        borderRadius: '100%',\n        opacity: 0.6,\n        position: 'absolute',\n        top: 0,\n        left: 0,\n        verticalAlign: _this.props.verticalAlign\n      };\n    }, _this.getAnimationStyle = function (i) {\n      var animation = [animationName, '2s', i === 1 ? '1s' : '0s', 'infinite', 'ease-in-out'].join(' ');\n      var animationFillMode = 'both';\n\n      return {\n        animation: animation,\n        animationFillMode: animationFillMode\n      };\n    }, _this.getStyle = function (i) {\n      if (i) {\n        return (0, _appendVendorPrefix2.default)(_this.getBallStyle(i), _this.getAnimationStyle(i), {\n          border: '0px solid transparent' // fix firefox/chrome/opera rendering\n        });\n      }\n\n      return (0, _appendVendorPrefix2.default)({\n        width: _this.props.size,\n        height: _this.props.size,\n        position: 'relative',\n        border: '0px solid transparent' // fix firefox/chrome/opera rendering\n      });\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  /**\n   * @param  {Number} i\n   * @return {Object}\n   */\n\n\n  /**\n   * @param  {Number} i\n   * @return {Object}\n   */\n\n\n  _createClass(BounceLoader, [{\n    key: 'render',\n    value: function render() {\n      var loading = this.props.loading;\n\n      if (loading) {\n        var props = _extends({}, this.props);\n\n        if (propTypes && ptKeys) {\n          var klen = ptKeys.length;\n          for (var i = 0; i < klen; i++) {\n            delete props[ptKeys[i]];\n          }\n        }\n\n        return _react2.default.createElement(\n          'div',\n          props,\n          _react2.default.createElement(\n            'div',\n            { style: this.getStyle() },\n            _react2.default.createElement('div', { style: this.getStyle(1) }),\n            _react2.default.createElement('div', { style: this.getStyle(2) })\n          )\n        );\n      }\n\n      return null;\n    }\n  }]);\n\n  return BounceLoader;\n}(_react.Component);\n\nBounceLoader.propTypes = propTypes;\nBounceLoader.defaultProps = {\n  loading: true,\n  color: '#ffffff',\n  size: '60px'\n};\nexports.default = BounceLoader;\nmodule.exports = exports['default'];\n//# sourceMappingURL=BounceLoader.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/halogenium/lib/BounceLoader.js\n// module id = 16\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _appendVendorPrefix = require('domkit/appendVendorPrefix');\n\nvar _appendVendorPrefix2 = _interopRequireDefault(_appendVendorPrefix);\n\nvar _insertKeyframesRule = require('domkit/insertKeyframesRule');\n\nvar _insertKeyframesRule2 = _interopRequireDefault(_insertKeyframesRule);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * @type {Object}\n */\nvar keyframes = {\n  '0%': {\n    transform: 'rotate(0deg) scale(1)'\n  },\n  '50%': {\n    transform: 'rotate(180deg) scale(0.8)'\n  },\n  '100%': {\n    transform: 'rotate(360deg) scale(1)'\n  }\n\n  /**\n   * @type {String}\n   */\n};var animationName = (0, _insertKeyframesRule2.default)(keyframes);\n\nvar propTypes = {\n  loading: _propTypes2.default.bool,\n  color: _propTypes2.default.string,\n  size: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n  verticalAlign: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string])\n};\n\nvar ptKeys = Object.keys(propTypes);\n\nvar ClipLoader = function (_Component) {\n  _inherits(ClipLoader, _Component);\n\n  function ClipLoader() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, ClipLoader);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = ClipLoader.__proto__ || Object.getPrototypeOf(ClipLoader)).call.apply(_ref, [this].concat(args))), _this), _this.getBallStyle = function () {\n      return {\n        width: _this.props.size,\n        height: _this.props.size,\n        border: '2px solid',\n        borderColor: _this.props.color,\n        borderBottomColor: 'transparent',\n        borderRadius: '100%',\n        background: 'transparent !important',\n        verticalAlign: _this.props.verticalAlign\n      };\n    }, _this.getAnimationStyle = function () {\n      var animation = [animationName, '0.75s', '0s', 'infinite', 'linear'].join(' ');\n      var animationFillMode = 'both';\n\n      return {\n        animation: animation,\n        animationFillMode: animationFillMode\n      };\n    }, _this.getStyle = function (i) {\n      return (0, _appendVendorPrefix2.default)({\n        border: '0px solid transparent' // fix firefox/chrome/opera rendering\n      }, _this.getBallStyle(i), _this.getAnimationStyle(), {\n        display: 'inline-block'\n      });\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  /**\n   * @param  {Number} i\n   * @return {Object}\n   */\n\n\n  _createClass(ClipLoader, [{\n    key: 'render',\n    value: function render() {\n      var loading = this.props.loading;\n\n\n      if (loading) {\n        var props = _extends({}, this.props);\n\n        if (propTypes && ptKeys) {\n          var klen = ptKeys.length;\n          for (var i = 0; i < klen; i++) {\n            delete props[ptKeys[i]];\n          }\n        }\n\n        return _react2.default.createElement(\n          'div',\n          props,\n          _react2.default.createElement('div', { style: this.getStyle() })\n        );\n      }\n\n      return null;\n    }\n  }]);\n\n  return ClipLoader;\n}(_react.Component);\n\nClipLoader.propTypes = propTypes;\nClipLoader.defaultProps = {\n  loading: true,\n  color: '#ffffff',\n  size: '35px'\n};\nexports.default = ClipLoader;\nmodule.exports = exports['default'];\n//# sourceMappingURL=ClipLoader.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/halogenium/lib/ClipLoader.js\n// module id = 17\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _appendVendorPrefix = require('domkit/appendVendorPrefix');\n\nvar _appendVendorPrefix2 = _interopRequireDefault(_appendVendorPrefix);\n\nvar _insertKeyframesRule = require('domkit/insertKeyframesRule');\n\nvar _insertKeyframesRule2 = _interopRequireDefault(_insertKeyframesRule);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * @type {Object}\n */\nvar rotateKeyframes = {\n  '100%': {\n    transform: 'rotate(360deg)'\n  }\n\n  /**\n   * @type {Object}\n   */\n};var bounceKeyframes = {\n  '0%, 100%': {\n    transform: 'scale(0)'\n  },\n  '50%': {\n    transform: 'scale(1.0)'\n  }\n\n  /**\n   * @type {String}\n   */\n};var rotateAnimationName = (0, _insertKeyframesRule2.default)(rotateKeyframes);\n\n/**\n * @type {String}\n */\nvar bounceAnimationName = (0, _insertKeyframesRule2.default)(bounceKeyframes);\n\nvar propTypes = {\n  loading: _propTypes2.default.bool,\n  color: _propTypes2.default.string,\n  size: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n  margin: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n  verticalAlign: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string])\n};\n\nvar ptKeys = Object.keys(propTypes);\n\nvar DotLoader = function (_Component) {\n  _inherits(DotLoader, _Component);\n\n  function DotLoader() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, DotLoader);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = DotLoader.__proto__ || Object.getPrototypeOf(DotLoader)).call.apply(_ref, [this].concat(args))), _this), _this.getBallStyle = function (size) {\n      return {\n        backgroundColor: _this.props.color,\n        width: size,\n        height: size,\n        borderRadius: '100%',\n        verticalAlign: _this.props.verticalAlign\n      };\n    }, _this.getAnimationStyle = function (i) {\n      var animation = [i === 0 ? rotateAnimationName : bounceAnimationName, '2s', i === 2 ? '-1s' : '0s', 'infinite', 'linear'].join(' ');\n      var animationFillMode = 'forwards';\n\n      return {\n        animation: animation,\n        animationFillMode: animationFillMode\n      };\n    }, _this.getStyle = function (i) {\n      var size = _this.props.size | 0;\n      var ballSize = size / 2;\n\n      if (i) {\n        return (0, _appendVendorPrefix2.default)(_this.getBallStyle(ballSize), _this.getAnimationStyle(i), {\n          position: 'absolute',\n          top: i % 2 ? 0 : 'auto',\n          bottom: i % 2 ? 'auto' : 0,\n          border: '0px solid transparent' // fix firefox/chrome/opera rendering\n        });\n      }\n\n      return (0, _appendVendorPrefix2.default)(_this.getAnimationStyle(i), {\n        width: size,\n        height: size,\n        position: 'relative',\n        border: '0px solid transparent' // fix firefox/chrome/opera rendering\n      });\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  /**\n   * @param  {String} size\n   * @return {Object}\n   */\n\n\n  /**\n   * @param  {Number} i\n   * @return {Object}\n   */\n\n\n  /**\n   * @param  {Number} i\n   * @return {Object}\n   */\n\n\n  _createClass(DotLoader, [{\n    key: 'render',\n    value: function render() {\n      var loading = this.props.loading;\n\n\n      if (loading) {\n        var props = _extends({}, this.props);\n\n        if (propTypes && ptKeys) {\n          var klen = ptKeys.length;\n          for (var i = 0; i < klen; i++) {\n            delete props[ptKeys[i]];\n          }\n        }\n\n        return _react2.default.createElement(\n          'div',\n          props,\n          _react2.default.createElement(\n            'div',\n            { style: this.getStyle(0) },\n            _react2.default.createElement('div', { style: this.getStyle(1) }),\n            _react2.default.createElement('div', { style: this.getStyle(2) })\n          )\n        );\n      }\n\n      return null;\n    }\n  }]);\n\n  return DotLoader;\n}(_react.Component);\n\nDotLoader.propTypes = propTypes;\nDotLoader.defaultProps = {\n  loading: true,\n  color: '#ffffff',\n  size: '60px' };\nexports.default = DotLoader;\nmodule.exports = exports['default'];\n//# sourceMappingURL=DotLoader.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/halogenium/lib/DotLoader.js\n// module id = 18\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _appendVendorPrefix = require('domkit/appendVendorPrefix');\n\nvar _appendVendorPrefix2 = _interopRequireDefault(_appendVendorPrefix);\n\nvar _insertKeyframesRule = require('domkit/insertKeyframesRule');\n\nvar _insertKeyframesRule2 = _interopRequireDefault(_insertKeyframesRule);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * @type {Object}\n */\nvar keyframes = {\n  '50%': {\n    opacity: 0.3\n  },\n  '100%': {\n    opacity: 1\n  }\n\n  /**\n   * @type {String}\n   */\n};var animationName = (0, _insertKeyframesRule2.default)(keyframes);\n\nvar propTypes = {\n  loading: _propTypes2.default.bool,\n  color: _propTypes2.default.string,\n  height: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n  width: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n  margin: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n  radius: _propTypes2.default.string,\n  verticalAlign: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string])\n};\n\nvar ptKeys = Object.keys(propTypes);\n\nvar FadeLoader = function (_Component) {\n  _inherits(FadeLoader, _Component);\n\n  function FadeLoader() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, FadeLoader);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = FadeLoader.__proto__ || Object.getPrototypeOf(FadeLoader)).call.apply(_ref, [this].concat(args))), _this), _this.getLineStyle = function () {\n      return {\n        backgroundColor: _this.props.color,\n        height: _this.props.height,\n        width: _this.props.width,\n        margin: _this.props.margin,\n        borderRadius: _this.props.radius,\n        verticalAlign: _this.props.verticalAlign\n      };\n    }, _this.getAnimationStyle = function (i) {\n      var animation = [animationName, '1.2s', i * 0.12 + 's', 'infinite', 'ease-in-out'].join(' ');\n      var animationFillMode = 'both';\n\n      return {\n        animation: animation,\n        animationFillMode: animationFillMode\n      };\n    }, _this.getPosStyle = function (i) {\n      var radius = 20;\n      var quarter = radius / 2 + radius / 5.5;\n\n      var lines = {\n        l1: {\n          top: radius,\n          left: 0\n        },\n        l2: {\n          top: quarter,\n          left: quarter,\n          transform: 'rotate(-45deg)'\n        },\n        l3: {\n          top: 0,\n          left: radius,\n          transform: 'rotate(90deg)'\n        },\n        l4: {\n          top: -quarter,\n          left: quarter,\n          transform: 'rotate(45deg)'\n        },\n        l5: {\n          top: -radius,\n          left: 0\n        },\n        l6: {\n          top: -quarter,\n          left: -quarter,\n          transform: 'rotate(-45deg)'\n        },\n        l7: {\n          top: 0,\n          left: -radius,\n          transform: 'rotate(90deg)'\n        },\n        l8: {\n          top: quarter,\n          left: -quarter,\n          transform: 'rotate(45deg)'\n        }\n      };\n\n      return lines['l' + i];\n    }, _this.getStyle = function (i) {\n      return (0, _appendVendorPrefix2.default)(_this.getLineStyle(i), _this.getPosStyle(i), _this.getAnimationStyle(i), {\n        position: 'absolute',\n        border: '0px solid transparent' // fix firefox/chrome/opera rendering\n      });\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  /**\n   * @param  {Number} i\n   * @return {Object}\n   */\n\n\n  /**\n   * @param  {Number} i\n   * @return {Object}\n   */\n\n\n  /**\n   * @param  {Number} i\n   * @return {Object}\n   */\n\n\n  _createClass(FadeLoader, [{\n    key: 'render',\n    value: function render() {\n      var loading = this.props.loading;\n\n\n      if (loading) {\n        var style = {\n          position: 'relative',\n          fontSize: 0\n        };\n\n        var props = _extends({}, this.props);\n\n        if (propTypes && ptKeys) {\n          var klen = ptKeys.length;\n          for (var i = 0; i < klen; i++) {\n            delete props[ptKeys[i]];\n          }\n        }\n\n        return _react2.default.createElement(\n          'div',\n          props,\n          _react2.default.createElement(\n            'div',\n            { style: style },\n            _react2.default.createElement('div', { style: this.getStyle(1) }),\n            _react2.default.createElement('div', { style: this.getStyle(2) }),\n            _react2.default.createElement('div', { style: this.getStyle(3) }),\n            _react2.default.createElement('div', { style: this.getStyle(4) }),\n            _react2.default.createElement('div', { style: this.getStyle(5) }),\n            _react2.default.createElement('div', { style: this.getStyle(6) }),\n            _react2.default.createElement('div', { style: this.getStyle(7) }),\n            _react2.default.createElement('div', { style: this.getStyle(8) })\n          )\n        );\n      }\n\n      return null;\n    }\n  }]);\n\n  return FadeLoader;\n}(_react.Component);\n\nFadeLoader.propTypes = propTypes;\nFadeLoader.defaultProps = {\n  loading: true,\n  color: '#ffffff',\n  height: '15px',\n  width: '5px',\n  margin: '2px',\n  radius: '2px'\n};\nexports.default = FadeLoader;\nmodule.exports = exports['default'];\n//# sourceMappingURL=FadeLoader.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/halogenium/lib/FadeLoader.js\n// module id = 19\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _appendVendorPrefix = require('domkit/appendVendorPrefix');\n\nvar _appendVendorPrefix2 = _interopRequireDefault(_appendVendorPrefix);\n\nvar _insertKeyframesRule = require('domkit/insertKeyframesRule');\n\nvar _insertKeyframesRule2 = _interopRequireDefault(_insertKeyframesRule);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * @type {Object}\n */\nvar keyframes = {\n  '0%': {\n    transform: 'scale(1)'\n  },\n  '50%': {\n    transform: 'scale(0.5)',\n    opacity: 0.7\n  },\n  '100%': {\n    transform: 'scale(1)',\n    opacity: 1\n  }\n\n  /**\n   * @type {String}\n   */\n};var animationName = (0, _insertKeyframesRule2.default)(keyframes);\n\n/**\n * @param  {Number} top\n * @return {Number}\n */\nfunction random(top) {\n  return Math.random() * top;\n}\n\nvar propTypes = {\n  loading: _propTypes2.default.bool,\n  color: _propTypes2.default.string,\n  size: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n  margin: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n  verticalAlign: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string])\n};\n\nvar ptKeys = Object.keys(propTypes);\n\nvar GridLoader = function (_Component) {\n  _inherits(GridLoader, _Component);\n\n  function GridLoader() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, GridLoader);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = GridLoader.__proto__ || Object.getPrototypeOf(GridLoader)).call.apply(_ref, [this].concat(args))), _this), _this.getBallStyle = function () {\n      return {\n        backgroundColor: _this.props.color,\n        width: _this.props.size,\n        height: _this.props.size,\n        margin: _this.props.margin,\n        borderRadius: '100%',\n        verticalAlign: _this.props.verticalAlign\n      };\n    }, _this.getAnimationStyle = function () {\n      var animationDuration = random(100) / 100 + 0.6 + 's';\n      var animationDelay = random(100) / 100 - 0.2 + 's';\n\n      var animation = [animationName, animationDuration, animationDelay, 'infinite', 'ease'].join(' ');\n      var animationFillMode = 'both';\n\n      return {\n        animation: animation,\n        animationFillMode: animationFillMode\n      };\n    }, _this.getStyle = function (i) {\n      return (0, _appendVendorPrefix2.default)(_this.getBallStyle(i), _this.getAnimationStyle(i), {\n        display: 'inline-block',\n        border: '0px solid transparent' // fix firefox/chrome/opera rendering\n      });\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  /**\n   * @param  {Number} i\n   * @return {Object}\n   */\n\n\n  _createClass(GridLoader, [{\n    key: 'render',\n    value: function render() {\n      var loading = this.props.loading;\n\n\n      if (loading) {\n        var style = {\n          width: parseFloat(this.props.size) * 3 + parseFloat(this.props.margin) * 6,\n          fontSize: 0\n        };\n\n        var props = _extends({}, this.props);\n\n        if (propTypes && ptKeys) {\n          var klen = ptKeys.length;\n          for (var i = 0; i < klen; i++) {\n            delete props[ptKeys[i]];\n          }\n        }\n\n        return _react2.default.createElement(\n          'div',\n          props,\n          _react2.default.createElement(\n            'div',\n            { style: style },\n            _react2.default.createElement('div', { style: this.getStyle(1) }),\n            _react2.default.createElement('div', { style: this.getStyle(2) }),\n            _react2.default.createElement('div', { style: this.getStyle(3) }),\n            _react2.default.createElement('div', { style: this.getStyle(4) }),\n            _react2.default.createElement('div', { style: this.getStyle(5) }),\n            _react2.default.createElement('div', { style: this.getStyle(6) }),\n            _react2.default.createElement('div', { style: this.getStyle(7) }),\n            _react2.default.createElement('div', { style: this.getStyle(8) }),\n            _react2.default.createElement('div', { style: this.getStyle(9) })\n          )\n        );\n      }\n\n      return null;\n    }\n  }]);\n\n  return GridLoader;\n}(_react.Component);\n\nGridLoader.propTypes = propTypes;\nGridLoader.defaultProps = {\n  loading: true,\n  color: '#ffffff',\n  size: '15px',\n  margin: '2px'\n};\nexports.default = GridLoader;\nmodule.exports = exports['default'];\n//# sourceMappingURL=GridLoader.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/halogenium/lib/GridLoader.js\n// module id = 20\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SyncLoader = exports.SquareLoader = exports.SkewLoader = exports.ScaleLoader = exports.RotateLoader = exports.RiseLoader = exports.RingLoader = exports.PulseLoader = exports.PacmanLoader = exports.MoonLoader = exports.GridLoader = exports.FadeLoader = exports.DotLoader = exports.ClipLoader = exports.BounceLoader = exports.BeatLoader = undefined;\n\nvar _BeatLoader2 = require('./BeatLoader');\n\nvar _BeatLoader3 = _interopRequireDefault(_BeatLoader2);\n\nvar _BounceLoader2 = require('./BounceLoader');\n\nvar _BounceLoader3 = _interopRequireDefault(_BounceLoader2);\n\nvar _ClipLoader2 = require('./ClipLoader');\n\nvar _ClipLoader3 = _interopRequireDefault(_ClipLoader2);\n\nvar _DotLoader2 = require('./DotLoader');\n\nvar _DotLoader3 = _interopRequireDefault(_DotLoader2);\n\nvar _FadeLoader2 = require('./FadeLoader');\n\nvar _FadeLoader3 = _interopRequireDefault(_FadeLoader2);\n\nvar _GridLoader2 = require('./GridLoader');\n\nvar _GridLoader3 = _interopRequireDefault(_GridLoader2);\n\nvar _MoonLoader2 = require('./MoonLoader');\n\nvar _MoonLoader3 = _interopRequireDefault(_MoonLoader2);\n\nvar _PacmanLoader2 = require('./PacmanLoader');\n\nvar _PacmanLoader3 = _interopRequireDefault(_PacmanLoader2);\n\nvar _PulseLoader2 = require('./PulseLoader');\n\nvar _PulseLoader3 = _interopRequireDefault(_PulseLoader2);\n\nvar _RingLoader2 = require('./RingLoader');\n\nvar _RingLoader3 = _interopRequireDefault(_RingLoader2);\n\nvar _RiseLoader2 = require('./RiseLoader');\n\nvar _RiseLoader3 = _interopRequireDefault(_RiseLoader2);\n\nvar _RotateLoader2 = require('./RotateLoader');\n\nvar _RotateLoader3 = _interopRequireDefault(_RotateLoader2);\n\nvar _ScaleLoader2 = require('./ScaleLoader');\n\nvar _ScaleLoader3 = _interopRequireDefault(_ScaleLoader2);\n\nvar _SkewLoader2 = require('./SkewLoader');\n\nvar _SkewLoader3 = _interopRequireDefault(_SkewLoader2);\n\nvar _SquareLoader2 = require('./SquareLoader');\n\nvar _SquareLoader3 = _interopRequireDefault(_SquareLoader2);\n\nvar _SyncLoader2 = require('./SyncLoader');\n\nvar _SyncLoader3 = _interopRequireDefault(_SyncLoader2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.BeatLoader = _BeatLoader3.default;\nexports.BounceLoader = _BounceLoader3.default;\nexports.ClipLoader = _ClipLoader3.default;\nexports.DotLoader = _DotLoader3.default;\nexports.FadeLoader = _FadeLoader3.default;\nexports.GridLoader = _GridLoader3.default;\nexports.MoonLoader = _MoonLoader3.default;\nexports.PacmanLoader = _PacmanLoader3.default;\nexports.PulseLoader = _PulseLoader3.default;\nexports.RingLoader = _RingLoader3.default;\nexports.RiseLoader = _RiseLoader3.default;\nexports.RotateLoader = _RotateLoader3.default;\nexports.ScaleLoader = _ScaleLoader3.default;\nexports.SkewLoader = _SkewLoader3.default;\nexports.SquareLoader = _SquareLoader3.default;\nexports.SyncLoader = _SyncLoader3.default;\n//# sourceMappingURL=Halogenium.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/halogenium/lib/Halogenium.js\n// module id = 21\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _appendVendorPrefix = require('domkit/appendVendorPrefix');\n\nvar _appendVendorPrefix2 = _interopRequireDefault(_appendVendorPrefix);\n\nvar _insertKeyframesRule = require('domkit/insertKeyframesRule');\n\nvar _insertKeyframesRule2 = _interopRequireDefault(_insertKeyframesRule);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * @type {Object}\n */\nvar keyframes = {\n  '100%': {\n    transform: 'rotate(360deg)'\n  }\n\n  /**\n   * @type {String}\n   */\n};var animationName = (0, _insertKeyframesRule2.default)(keyframes);\n\nvar propTypes = {\n  loading: _propTypes2.default.bool,\n  color: _propTypes2.default.string,\n  size: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n  margin: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n  verticalAlign: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string])\n};\n\nvar ptKeys = Object.keys(propTypes);\n\nvar MoonLoader = function (_Component) {\n  _inherits(MoonLoader, _Component);\n\n  function MoonLoader() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, MoonLoader);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = MoonLoader.__proto__ || Object.getPrototypeOf(MoonLoader)).call.apply(_ref, [this].concat(args))), _this), _this.getBallStyle = function (size) {\n      return {\n        width: size,\n        height: size,\n        borderRadius: '100%',\n        verticalAlign: _this.props.verticalAlign\n      };\n    }, _this.getAnimationStyle = function () {\n      var animation = [animationName, '0.6s', '0s', 'infinite', 'linear'].join(' ');\n      var animationFillMode = 'forwards';\n\n      return {\n        animation: animation,\n        animationFillMode: animationFillMode\n      };\n    }, _this.getStyle = function (i) {\n      var size = _this.props.size | 0;\n      var moonSize = size / 7;\n\n      if (i === 1) {\n        return (0, _appendVendorPrefix2.default)({\n          border: '0px solid transparent' // fix firefox/chrome/opera rendering\n        }, _this.getBallStyle(moonSize), _this.getAnimationStyle(i), {\n          backgroundColor: _this.props.color,\n          opacity: '0.8',\n          position: 'absolute',\n          top: size / 2 - moonSize / 2\n        });\n      } else if (i === 2) {\n        return (0, _appendVendorPrefix2.default)({\n          border: '0px solid transparent' // fix firefox/chrome/opera rendering\n        }, _this.getBallStyle(size), {\n          border: moonSize + 'px solid ' + _this.props.color,\n          opacity: 0.1\n        });\n      }\n      return (0, _appendVendorPrefix2.default)({\n        border: '0px solid transparent' // fix firefox/chrome/opera rendering\n      }, _this.getAnimationStyle(i), {\n        position: 'relative'\n      });\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  /**\n   * @param  {String} size\n   * @return {Object}\n   */\n\n\n  /**\n   * @param  {Number} i\n   * @return {Object}\n   */\n\n\n  _createClass(MoonLoader, [{\n    key: 'render',\n    value: function render() {\n      var loading = this.props.loading;\n\n\n      if (loading) {\n        var props = _extends({}, this.props);\n\n        if (propTypes && ptKeys) {\n          var klen = ptKeys.length;\n          for (var i = 0; i < klen; i++) {\n            delete props[ptKeys[i]];\n          }\n        }\n\n        return _react2.default.createElement(\n          'div',\n          props,\n          _react2.default.createElement(\n            'div',\n            { style: this.getStyle(0) },\n            _react2.default.createElement('div', { style: this.getStyle(1) }),\n            _react2.default.createElement('div', { style: this.getStyle(2) })\n          )\n        );\n      }\n\n      return null;\n    }\n  }]);\n\n  return MoonLoader;\n}(_react.Component);\n\nMoonLoader.propTypes = propTypes;\nMoonLoader.defaultProps = {\n  loading: true,\n  color: '#ffffff',\n  size: '60px' };\nexports.default = MoonLoader;\nmodule.exports = exports['default'];\n//# sourceMappingURL=MoonLoader.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/halogenium/lib/MoonLoader.js\n// module id = 22\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _appendVendorPrefix = require('domkit/appendVendorPrefix');\n\nvar _appendVendorPrefix2 = _interopRequireDefault(_appendVendorPrefix);\n\nvar _insertKeyframesRule = require('domkit/insertKeyframesRule');\n\nvar _insertKeyframesRule2 = _interopRequireDefault(_insertKeyframesRule);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * @type {Object}\n */\nvar animations = {};\n\nvar propTypes = {\n  loading: _propTypes2.default.bool,\n  color: _propTypes2.default.string,\n  size: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n  margin: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n  verticalAlign: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string])\n};\n\nvar ptKeys = Object.keys(propTypes);\n\nvar PacmanLoader = function (_Component) {\n  _inherits(PacmanLoader, _Component);\n\n  function PacmanLoader() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, PacmanLoader);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = PacmanLoader.__proto__ || Object.getPrototypeOf(PacmanLoader)).call.apply(_ref, [this].concat(args))), _this), _this.getBallStyle = function () {\n      return {\n        backgroundColor: _this.props.color,\n        width: _this.props.size,\n        height: _this.props.size,\n        margin: _this.props.margin,\n        borderRadius: '100%',\n        verticalAlign: _this.props.verticalAlign,\n        border: '0px solid transparent' // fix firefox/chrome/opera rendering\n      };\n    }, _this.getAnimationStyle = function (i) {\n      var size = _this.props.size;\n      var animationName = animations[size];\n\n      if (!animationName) {\n        var keyframes = {\n          '75%': {\n            opacity: 0.7\n          },\n          '100%': {\n            transform: 'translate(' + -4 * size + 'px, ' + -size / 4 + 'px)'\n          }\n        };\n        animationName = animations[size] = (0, _insertKeyframesRule2.default)(keyframes);\n      }\n\n      var animation = [animationName, '1s', i * 0.25 + 's', 'infinite', 'linear'].join(' ');\n      var animationFillMode = 'both';\n\n      return {\n        animation: animation,\n        animationFillMode: animationFillMode\n      };\n    }, _this.getStyle = function (i) {\n      if (i | 0 === 1) {\n        var s1 = _this.props.size + 'px solid transparent';\n        var s2 = _this.props.size + 'px solid ' + _this.props.color;\n\n        return {\n          width: 0,\n          height: 0,\n          borderRight: s1,\n          borderTop: s2,\n          borderLeft: s2,\n          borderBottom: s2,\n          borderRadius: _this.props.size\n        };\n      }\n\n      return (0, _appendVendorPrefix2.default)(_this.getBallStyle(i), _this.getAnimationStyle(i), {\n        width: 10,\n        height: 10,\n        transform: 'translate(0, ' + -_this.props.size / 4 + 'px)',\n        position: 'absolute',\n        top: 25,\n        left: 100\n      });\n    }, _this.renderLoader = function (loading) {\n      if (loading) {\n        var style = {\n          position: 'relative',\n          fontSize: 0\n        };\n        var props = Object.assign({}, _this.props);\n\n        if (propTypes && ptKeys) {\n          var klen = ptKeys.length;\n          for (var i = 0; i < klen; i++) {\n            delete props[ptKeys[i]];\n          }\n        }\n\n        return _react2.default.createElement(\n          'div',\n          props,\n          _react2.default.createElement(\n            'div',\n            { style: style },\n            _react2.default.createElement('div', { style: _this.getStyle(1) }),\n            _react2.default.createElement('div', { style: _this.getStyle(2) }),\n            _react2.default.createElement('div', { style: _this.getStyle(3) }),\n            _react2.default.createElement('div', { style: _this.getStyle(4) }),\n            _react2.default.createElement('div', { style: _this.getStyle(5) })\n          )\n        );\n      }\n\n      return null;\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  /**\n   * @return {Object}\n   */\n\n\n  /**\n   * @return {Object}\n   */\n\n\n  /**\n   * @param  {Number} i\n   * @return {Object}\n   */\n\n\n  _createClass(PacmanLoader, [{\n    key: 'render',\n    value: function render() {\n      return this.renderLoader(this.props.loading);\n    }\n  }]);\n\n  return PacmanLoader;\n}(_react.Component);\n\nPacmanLoader.propTypes = propTypes;\nPacmanLoader.defaultProps = {\n  loading: true,\n  color: '#fff',\n  size: 25,\n  margin: 2 };\nexports.default = PacmanLoader;\nmodule.exports = exports['default'];\n//# sourceMappingURL=PacmanLoader.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/halogenium/lib/PacmanLoader.js\n// module id = 23\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _appendVendorPrefix = require('domkit/appendVendorPrefix');\n\nvar _appendVendorPrefix2 = _interopRequireDefault(_appendVendorPrefix);\n\nvar _insertKeyframesRule = require('domkit/insertKeyframesRule');\n\nvar _insertKeyframesRule2 = _interopRequireDefault(_insertKeyframesRule);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * @type {Object}\n */\nvar keyframes = {\n  '0%': {\n    transform: 'scale(1)',\n    opacity: 1\n  },\n  '45%': {\n    transform: 'scale(0.1)',\n    opacity: 0.7\n  },\n  '80%': {\n    transform: 'scale(1)',\n    opacity: 1\n  }\n\n  /**\n   * @type {String}\n   */\n};var animationName = (0, _insertKeyframesRule2.default)(keyframes);\n\nvar propTypes = {\n  loading: _propTypes2.default.bool,\n  color: _propTypes2.default.string,\n  size: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n  margin: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n  verticalAlign: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string])\n};\n\nvar ptKeys = Object.keys(propTypes);\n\nvar PulseLoader = function (_Component) {\n  _inherits(PulseLoader, _Component);\n\n  function PulseLoader() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, PulseLoader);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = PulseLoader.__proto__ || Object.getPrototypeOf(PulseLoader)).call.apply(_ref, [this].concat(args))), _this), _this.getBallStyle = function () {\n      return {\n        backgroundColor: _this.props.color,\n        width: _this.props.size,\n        height: _this.props.size,\n        margin: _this.props.margin,\n        borderRadius: '100%',\n        verticalAlign: _this.props.verticalAlign\n      };\n    }, _this.getAnimationStyle = function (i) {\n      var animation = [animationName, '0.75s', i * 0.12 + 's', 'infinite', 'cubic-bezier(.2,.68,.18,1.08)'].join(' ');\n      var animationFillMode = 'both';\n\n      return {\n        animation: animation,\n        animationFillMode: animationFillMode\n      };\n    }, _this.getStyle = function (i) {\n      return (0, _appendVendorPrefix2.default)(_this.getBallStyle(i), _this.getAnimationStyle(i), {\n        display: 'inline-block',\n        border: '0px solid transparent' // fix firefox/chrome/opera rendering\n      });\n    }, _this.renderLoader = function (loading) {\n      if (loading) {\n        var props = Object.assign({}, _this.props);\n\n        if (propTypes && ptKeys) {\n          var klen = ptKeys.length;\n          for (var i = 0; i < klen; i++) {\n            delete props[ptKeys[i]];\n          }\n        }\n\n        return _react2.default.createElement(\n          'div',\n          props,\n          _react2.default.createElement('div', { style: _this.getStyle(1) }),\n          _react2.default.createElement('div', { style: _this.getStyle(2) }),\n          _react2.default.createElement('div', { style: _this.getStyle(3) })\n        );\n      }\n\n      return null;\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n  /**\n   * @type {Object}\n   */\n\n\n  /**\n   * @return {Object}\n   */\n\n\n  /**\n   * @param  {Number} i\n   * @return {Object}\n   */\n\n\n  /**\n   * @param  {Number} i\n   * @return {Object}\n   */\n\n\n  /**\n   * @param  {Boolean} loading\n   * @return {ReactComponent || null}\n   */\n\n\n  _createClass(PulseLoader, [{\n    key: 'render',\n    value: function render() {\n      return this.renderLoader(this.props.loading);\n    }\n  }]);\n\n  return PulseLoader;\n}(_react.Component);\n\nPulseLoader.propTypes = propTypes;\nPulseLoader.defaultProps = {\n  loading: true,\n  color: '#ffffff',\n  size: '15px',\n  margin: '2px' };\nexports.default = PulseLoader;\nmodule.exports = exports['default'];\n//# sourceMappingURL=PulseLoader.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/halogenium/lib/PulseLoader.js\n// module id = 24\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _appendVendorPrefix = require('domkit/appendVendorPrefix');\n\nvar _appendVendorPrefix2 = _interopRequireDefault(_appendVendorPrefix);\n\nvar _insertKeyframesRule = require('domkit/insertKeyframesRule');\n\nvar _insertKeyframesRule2 = _interopRequireDefault(_insertKeyframesRule);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * @type {Object}\n */\nvar rightRotateKeyframes = {\n  '0%': {\n    transform: 'rotateX(0deg) rotateY(0deg) rotateZ(0deg)'\n\n  },\n  '100%': {\n    transform: 'rotateX(180deg) rotateY(360deg) rotateZ(360deg)'\n  }\n\n  /**\n   * @type {Object}\n   */\n};var leftRotateKeyframes = {\n  '0%': {\n    transform: 'rotateX(0deg) rotateY(0deg) rotateZ(0deg)'\n  },\n  '100%': {\n    transform: 'rotateX(360deg) rotateY(180deg) rotateZ(360deg)'\n  }\n\n  /**\n   * @type {String}\n   */\n};var rightRotateAnimationName = (0, _insertKeyframesRule2.default)(rightRotateKeyframes);\n\n/**\n * @type {String}\n */\nvar leftRotateAnimationName = (0, _insertKeyframesRule2.default)(leftRotateKeyframes);\n\nvar propTypes = {\n  loading: _propTypes2.default.bool,\n  color: _propTypes2.default.string,\n  size: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n  margin: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n  verticalAlign: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string])\n};\n\nvar ptKeys = Object.keys(propTypes);\n\nvar RingLoader = function (_Component) {\n  _inherits(RingLoader, _Component);\n\n  function RingLoader() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, RingLoader);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = RingLoader.__proto__ || Object.getPrototypeOf(RingLoader)).call.apply(_ref, [this].concat(args))), _this), _this.getCircleStyle = function (size) {\n      return {\n        width: size,\n        height: size,\n        border: size / 10 + 'px solid ' + _this.props.color,\n        opacity: 0.4,\n        borderRadius: '100%',\n        verticalAlign: _this.props.verticalAlign\n      };\n    }, _this.getAnimationStyle = function (i) {\n      var animation = [i | 0 === 1 ? rightRotateAnimationName : leftRotateAnimationName, '2s', '0s', 'infinite', 'linear'].join(' ');\n\n      var animationFillMode = 'forwards';\n      var perspective = '800px';\n\n      return {\n        perspective: perspective,\n        animation: animation,\n        animationFillMode: animationFillMode\n      };\n    }, _this.getStyle = function (i) {\n      var size = parseInt(_this.props.size, 10);\n\n      if (i) {\n        return (0, _appendVendorPrefix2.default)({\n          border: '0px solid transparent' // fix firefox/chrome/opera rendering\n        }, _this.getCircleStyle(size), _this.getAnimationStyle(i), {\n          position: 'absolute',\n          top: 0,\n          left: 0\n        });\n      }\n\n      return {\n        width: size,\n        height: size,\n        position: 'relative',\n        border: '0px solid transparent' // fix firefox/chrome/opera rendering\n      };\n    }, _this.renderLoader = function (loading) {\n      if (loading) {\n        var props = Object.assign({}, _this.props);\n\n        if (propTypes && ptKeys) {\n          var klen = ptKeys.length;\n          for (var i = 0; i < klen; i++) {\n            delete props[ptKeys[i]];\n          }\n        }\n\n        return _react2.default.createElement(\n          'div',\n          props,\n          _react2.default.createElement(\n            'div',\n            { style: _this.getStyle(0) },\n            _react2.default.createElement('div', { style: _this.getStyle(1) }),\n            _react2.default.createElement('div', { style: _this.getStyle(2) })\n          )\n        );\n      }\n\n      return null;\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n  /**\n   * @type {Object}\n   */\n\n\n  /**\n   * @param {String} size\n   * @return {Object}\n   */\n\n\n  /**\n   * @param  {Number} i\n   * @return {Object}\n   */\n\n\n  /**\n   * @param  {Number} i\n   * @return {Object}\n   */\n\n\n  /**\n   * @param  {Boolean} loading\n   * @return {ReactComponent || null}\n   */\n\n\n  _createClass(RingLoader, [{\n    key: 'render',\n    value: function render() {\n      return this.renderLoader(this.props.loading);\n    }\n  }]);\n\n  return RingLoader;\n}(_react.Component);\n\nRingLoader.propTypes = propTypes;\nRingLoader.defaultProps = {\n  loading: true,\n  color: '#ffffff',\n  size: '60px' };\nexports.default = RingLoader;\nmodule.exports = exports['default'];\n//# sourceMappingURL=RingLoader.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/halogenium/lib/RingLoader.js\n// module id = 25\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _appendVendorPrefix = require('domkit/appendVendorPrefix');\n\nvar _appendVendorPrefix2 = _interopRequireDefault(_appendVendorPrefix);\n\nvar _insertKeyframesRule = require('domkit/insertKeyframesRule');\n\nvar _insertKeyframesRule2 = _interopRequireDefault(_insertKeyframesRule);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * @type {Number}\n */\nvar riseAmount = 30;\n\n/**\n * @type {Object}\n */\nvar keyframesEven = {\n  '0%': {\n    transform: 'scale(1.1)'\n  },\n  '25%': {\n    transform: 'translateY(-' + riseAmount + 'px)'\n  },\n  '50%': {\n    transform: 'scale(0.4)'\n  },\n  '75%': {\n    transform: 'translateY(' + riseAmount + 'px)'\n  },\n  '100%': {\n    transform: 'translateY(0) scale(1.0)'\n  }\n\n  /**\n   * @type {Object}\n   */\n};var keyframesOdd = {\n  '0%': {\n    transform: 'scale(0.4)'\n  },\n  25: {\n    transform: 'translateY(' + riseAmount + 'px)'\n  },\n  '50%': {\n    transform: 'scale(1.1)'\n  },\n  '75%': {\n    transform: 'translateY(-' + riseAmount + 'px)'\n  },\n  '100%': {\n    transform: 'translateY(0) scale(0.75)'\n  }\n\n  /**\n   * @type {String}\n   */\n};var animationNameEven = (0, _insertKeyframesRule2.default)(keyframesEven);\n\n/**\n * @type {String}\n */\nvar animationNameOdd = (0, _insertKeyframesRule2.default)(keyframesOdd);\n\nvar propTypes = {\n  loading: _propTypes2.default.bool,\n  color: _propTypes2.default.string,\n  size: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n  margin: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n  verticalAlign: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string])\n};\n\nvar ptKeys = Object.keys(propTypes);\n\nvar RiseLoader = function (_Component) {\n  _inherits(RiseLoader, _Component);\n\n  function RiseLoader() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, RiseLoader);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = RiseLoader.__proto__ || Object.getPrototypeOf(RiseLoader)).call.apply(_ref, [this].concat(args))), _this), _this.getBallStyle = function () {\n      return {\n        backgroundColor: _this.props.color,\n        width: _this.props.size,\n        height: _this.props.size,\n        margin: _this.props.margin,\n        borderRadius: '100%',\n        verticalAlign: _this.props.verticalAlign\n      };\n    }, _this.getAnimationStyle = function (i) {\n      var animation = [i % 2 === 0 ? animationNameEven : animationNameOdd, '1s', '0s', 'infinite', 'cubic-bezier(.15,.46,.9,.6)'].join(' ');\n      var animationFillMode = 'both';\n\n      return {\n        animation: animation,\n        animationFillMode: animationFillMode\n      };\n    }, _this.getStyle = function (i) {\n      return (0, _appendVendorPrefix2.default)(_this.getBallStyle(i), _this.getAnimationStyle(i), {\n        display: 'inline-block',\n        border: '0px solid transparent' // fix firefox/chrome/opera rendering\n      });\n    }, _this.renderLoader = function (loading) {\n      if (loading) {\n        var props = Object.assign({}, _this.props);\n\n        if (propTypes && ptKeys) {\n          var klen = ptKeys.length;\n          for (var i = 0; i < klen; i++) {\n            delete props[ptKeys[i]];\n          }\n        }\n\n        return _react2.default.createElement(\n          'div',\n          props,\n          _react2.default.createElement('div', { style: _this.getStyle(1) }),\n          _react2.default.createElement('div', { style: _this.getStyle(2) }),\n          _react2.default.createElement('div', { style: _this.getStyle(3) }),\n          _react2.default.createElement('div', { style: _this.getStyle(4) }),\n          _react2.default.createElement('div', { style: _this.getStyle(5) })\n        );\n      }\n\n      return null;\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n  /**\n   * @type {Object}\n   */\n\n\n  /**\n   * @return {Object}\n   */\n\n\n  /**\n   * @param  {Number} i\n   * @return {Object}\n   */\n\n\n  /**\n   * @param  {Number} i\n   * @return {Object}\n   */\n\n\n  /**\n   * @param  {Boolean} loading\n   * @return {ReactComponent || null}\n   */\n\n\n  _createClass(RiseLoader, [{\n    key: 'render',\n    value: function render() {\n      return this.renderLoader(this.props.loading);\n    }\n  }]);\n\n  return RiseLoader;\n}(_react.Component);\n\nRiseLoader.propTypes = propTypes;\nRiseLoader.defaultProps = {\n  loading: true,\n  color: '#ffffff',\n  size: '15px',\n  margin: '2px' };\nexports.default = RiseLoader;\nmodule.exports = exports['default'];\n//# sourceMappingURL=RiseLoader.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/halogenium/lib/RiseLoader.js\n// module id = 26\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _appendVendorPrefix = require('domkit/appendVendorPrefix');\n\nvar _appendVendorPrefix2 = _interopRequireDefault(_appendVendorPrefix);\n\nvar _insertKeyframesRule = require('domkit/insertKeyframesRule');\n\nvar _insertKeyframesRule2 = _interopRequireDefault(_insertKeyframesRule);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * @type {Object}\n */\nvar keyframes = {\n  '0%': {\n    transform: 'rotate(0deg)'\n  },\n  '50%': {\n    transform: 'rotate(180deg)'\n  },\n  '100%': {\n    transform: 'rotate(360deg)'\n  }\n\n  /**\n   * @type {String}\n   */\n};var animationName = (0, _insertKeyframesRule2.default)(keyframes);\n\nvar propTypes = {\n  loading: _propTypes2.default.bool,\n  color: _propTypes2.default.string,\n  size: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n  margin: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n  verticalAlign: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string])\n};\n\nvar ptKeys = Object.keys(propTypes);\n\nvar RotateLoader = function (_Component) {\n  _inherits(RotateLoader, _Component);\n\n  function RotateLoader() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, RotateLoader);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = RotateLoader.__proto__ || Object.getPrototypeOf(RotateLoader)).call.apply(_ref, [this].concat(args))), _this), _this.getBallStyle = function () {\n      return {\n        backgroundColor: _this.props.color,\n        width: _this.props.size,\n        height: _this.props.size,\n        margin: _this.props.margin,\n        borderRadius: '100%',\n        verticalAlign: _this.props.verticalAlign\n      };\n    }, _this.getAnimationStyle = function () {\n      var animation = [animationName, '1s', '0s', 'infinite', 'cubic-bezier(.7,-.13,.22,.86)'].join(' ');\n      var animationFillMode = 'both';\n\n      return {\n        animation: animation,\n        animationFillMode: animationFillMode\n      };\n    }, _this.getStyle = function (i) {\n      if (i) {\n        return (0, _appendVendorPrefix2.default)(_this.getBallStyle(i), {\n          opacity: '0.8',\n          position: 'absolute',\n          top: 0,\n          left: i % 2 ? -28 : 25,\n          border: '0px solid transparent' // fix firefox/chrome/opera rendering\n        });\n      }\n\n      return (0, _appendVendorPrefix2.default)(_this.getBallStyle(i), _this.getAnimationStyle(i), {\n        display: 'inline-block',\n        position: 'relative',\n        border: '0px solid transparent' // fix firefox/chrome/opera rendering\n      });\n    }, _this.renderLoader = function (loading) {\n      if (loading) {\n        var props = Object.assign({}, _this.props);\n\n        if (propTypes && ptKeys) {\n          var klen = ptKeys.length;\n          for (var i = 0; i < klen; i++) {\n            delete props[ptKeys[i]];\n          }\n        }\n\n        return _react2.default.createElement(\n          'div',\n          props,\n          _react2.default.createElement(\n            'div',\n            { style: _this.getStyle() },\n            _react2.default.createElement('div', { style: _this.getStyle(1) }),\n            _react2.default.createElement('div', { style: _this.getStyle(2) })\n          )\n        );\n      }\n\n      return null;\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  /**\n   * @return {Object}\n   */\n\n\n  /**\n   * @param  {Number} i\n   * @return {Object}\n   */\n\n\n  /**\n   * @param  {Number} i\n   * @return {Object}\n   */\n\n\n  /**\n   * @param  {Boolean} loading\n   * @return {ReactComponent || null}\n   */\n\n\n  _createClass(RotateLoader, [{\n    key: 'render',\n    value: function render() {\n      return this.renderLoader(this.props.loading);\n    }\n  }]);\n\n  return RotateLoader;\n}(_react.Component);\n\nRotateLoader.propTypes = propTypes;\nRotateLoader.defaultProps = {\n  loading: true,\n  color: '#ffffff',\n  size: '15px',\n  margin: '2px' };\nexports.default = RotateLoader;\nmodule.exports = exports['default'];\n//# sourceMappingURL=RotateLoader.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/halogenium/lib/RotateLoader.js\n// module id = 27\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _appendVendorPrefix = require('domkit/appendVendorPrefix');\n\nvar _appendVendorPrefix2 = _interopRequireDefault(_appendVendorPrefix);\n\nvar _insertKeyframesRule = require('domkit/insertKeyframesRule');\n\nvar _insertKeyframesRule2 = _interopRequireDefault(_insertKeyframesRule);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * @type {Object}\n */\nvar keyframes = {\n  '0%': {\n    transform: 'scaley(1.0)'\n  },\n  '50%': {\n    transform: 'scaley(0.4)'\n  },\n  '100%': {\n    transform: 'scaley(1.0)'\n  }\n\n  /**\n   * @type {String}\n   */\n};var animationName = (0, _insertKeyframesRule2.default)(keyframes);\n\nvar propTypes = {\n  loading: _propTypes2.default.bool,\n  color: _propTypes2.default.string,\n  height: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n  width: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n  margin: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n  radius: _propTypes2.default.string,\n  verticalAlign: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string])\n};\n\nvar ptKeys = Object.keys(propTypes);\n\nvar ScaleLoader = function (_Component) {\n  _inherits(ScaleLoader, _Component);\n\n  function ScaleLoader() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, ScaleLoader);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = ScaleLoader.__proto__ || Object.getPrototypeOf(ScaleLoader)).call.apply(_ref, [this].concat(args))), _this), _this.getLineStyle = function () {\n      return {\n        backgroundColor: _this.props.color,\n        height: _this.props.height,\n        width: _this.props.width,\n        margin: _this.props.margin,\n        borderRadius: _this.props.radius,\n        verticalAlign: _this.props.verticalAlign\n      };\n    }, _this.getAnimationStyle = function (i) {\n      var animation = [animationName, '1s', i * 0.1 + 's', 'infinite', 'cubic-bezier(.2,.68,.18,1.08)'].join(' ');\n      var animationFillMode = 'both';\n\n      return {\n        animation: animation,\n        animationFillMode: animationFillMode\n      };\n    }, _this.getStyle = function (i) {\n      return (0, _appendVendorPrefix2.default)(_this.getLineStyle(i), _this.getAnimationStyle(i), {\n        display: 'inline-block',\n        border: '0px solid transparent' // fix firefox/chrome/opera rendering\n      });\n    }, _this.renderLoader = function (loading) {\n      if (loading) {\n        var props = Object.assign({}, _this.props);\n\n        if (propTypes && ptKeys) {\n          var klen = ptKeys.length;\n          for (var i = 0; i < klen; i++) {\n            delete props[ptKeys[i]];\n          }\n        }\n\n        return _react2.default.createElement(\n          'div',\n          props,\n          _react2.default.createElement('div', { style: _this.getStyle(1) }),\n          _react2.default.createElement('div', { style: _this.getStyle(2) }),\n          _react2.default.createElement('div', { style: _this.getStyle(3) }),\n          _react2.default.createElement('div', { style: _this.getStyle(4) }),\n          _react2.default.createElement('div', { style: _this.getStyle(5) })\n        );\n      }\n\n      return null;\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n  /**\n   * @type {Object}\n   */\n\n\n  /**\n   * @return {Object}\n   */\n\n\n  /**\n   * @param  {Number} i\n   * @return {Object}\n   */\n\n\n  /**\n   * @param  {Number} i\n   * @return {Object}\n   */\n\n\n  /**\n   * @param  {Boolean} loading\n   * @return {ReactComponent || null}\n   */\n\n\n  _createClass(ScaleLoader, [{\n    key: 'render',\n    value: function render() {\n      return this.renderLoader(this.props.loading);\n    }\n  }]);\n\n  return ScaleLoader;\n}(_react.Component);\n\nScaleLoader.propTypes = propTypes;\nScaleLoader.defaultProps = {\n  loading: true,\n  color: '#fff',\n  height: '35px',\n  width: '4px',\n  margin: '2px',\n  radius: '2px' };\nexports.default = ScaleLoader;\nmodule.exports = exports['default'];\n//# sourceMappingURL=ScaleLoader.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/halogenium/lib/ScaleLoader.js\n// module id = 28\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _appendVendorPrefix = require('domkit/appendVendorPrefix');\n\nvar _appendVendorPrefix2 = _interopRequireDefault(_appendVendorPrefix);\n\nvar _insertKeyframesRule = require('domkit/insertKeyframesRule');\n\nvar _insertKeyframesRule2 = _interopRequireDefault(_insertKeyframesRule);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * @type {Object}\n */\nvar keyframes = {\n  '25%': {\n    transform: 'perspective(100px) rotateX(180deg) rotateY(0)'\n  },\n  '50%': {\n    transform: 'perspective(100px) rotateX(180deg) rotateY(180deg)'\n  },\n  '75%': {\n    transform: 'perspective(100px) rotateX(0) rotateY(180deg)'\n  },\n  '100%': {\n    transform: 'perspective(100px) rotateX(0) rotateY(0)'\n  }\n\n  /**\n   * @type {String}\n   */\n};var animationName = (0, _insertKeyframesRule2.default)(keyframes);\n\nvar propTypes = {\n  loading: _propTypes2.default.bool,\n  color: _propTypes2.default.string,\n  size: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n  verticalAlign: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string])\n};\n\nvar ptKeys = Object.keys(propTypes);\n\nvar SkewLoader = function (_Component) {\n  _inherits(SkewLoader, _Component);\n\n  function SkewLoader() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, SkewLoader);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = SkewLoader.__proto__ || Object.getPrototypeOf(SkewLoader)).call.apply(_ref, [this].concat(args))), _this), _this.getSharpStyle = function () {\n      return {\n        width: 0,\n        height: 0,\n        borderLeft: _this.props.size + ' solid transparent',\n        borderRight: _this.props.size + ' solid transparent',\n        borderBottom: _this.props.size + ' solid ' + _this.props.color,\n        verticalAlign: _this.props.verticalAlign\n      };\n    }, _this.getAnimationStyle = function () {\n      var animation = [animationName, '3s', '0s', 'infinite', 'cubic-bezier(.09,.57,.49,.9)'].join(' ');\n      var animationFillMode = 'both';\n\n      return {\n        animation: animation,\n        animationFillMode: animationFillMode\n      };\n    }, _this.getStyle = function (i) {\n      return (0, _appendVendorPrefix2.default)({\n        border: '0px solid transparent' // fix firefox/chrome/opera rendering\n      }, _this.getSharpStyle(i), _this.getAnimationStyle(i), {\n        display: 'inline-block'\n      });\n    }, _this.renderLoader = function (loading) {\n      if (loading) {\n        var props = Object.assign({}, _this.props);\n\n        if (propTypes && ptKeys) {\n          var klen = ptKeys.length;\n          for (var i = 0; i < klen; i++) {\n            delete props[ptKeys[i]];\n          }\n        }\n\n        return _react2.default.createElement(\n          'div',\n          props,\n          _react2.default.createElement('div', { style: _this.getStyle() })\n        );\n      }\n\n      return null;\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n  /**\n   * @type {Object}\n   */\n\n\n  /**\n   * @return {Object}\n   */\n\n\n  /**\n   * @param  {Number} i\n   * @return {Object}\n   */\n\n\n  /**\n   * @param  {Number} i\n   * @return {Object}\n   */\n\n\n  /**\n   * @param  {Boolean} loading\n   * @return {ReactComponent || null}\n   */\n\n\n  _createClass(SkewLoader, [{\n    key: 'render',\n    value: function render() {\n      return this.renderLoader(this.props.loading);\n    }\n  }]);\n\n  return SkewLoader;\n}(_react.Component);\n\nSkewLoader.propTypes = propTypes;\nSkewLoader.defaultProps = {\n  loading: true,\n  color: '#fff',\n  size: '20px' };\nexports.default = SkewLoader;\nmodule.exports = exports['default'];\n//# sourceMappingURL=SkewLoader.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/halogenium/lib/SkewLoader.js\n// module id = 29\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _appendVendorPrefix = require('domkit/appendVendorPrefix');\n\nvar _appendVendorPrefix2 = _interopRequireDefault(_appendVendorPrefix);\n\nvar _insertKeyframesRule = require('domkit/insertKeyframesRule');\n\nvar _insertKeyframesRule2 = _interopRequireDefault(_insertKeyframesRule);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * @type {Object}\n */\nvar keyframes = {\n  '25%': {\n    transform: 'rotateX(180deg) rotateY(0)'\n  },\n  '50%': {\n    transform: 'rotateX(180deg) rotateY(180deg)'\n  },\n  '75%': {\n    transform: 'rotateX(0) rotateY(180deg)'\n  },\n  '100%': {\n    transform: 'rotateX(0) rotateY(0)'\n  }\n\n  /**\n   * @type {String}\n   */\n};var animationName = (0, _insertKeyframesRule2.default)(keyframes);\n\nvar propTypes = {\n  loading: _propTypes2.default.bool,\n  color: _propTypes2.default.string,\n  size: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n  margin: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n  verticalAlign: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string])\n};\n\nvar ptKeys = Object.keys(propTypes);\n\nvar SquareLoader = function (_Component) {\n  _inherits(SquareLoader, _Component);\n\n  function SquareLoader() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, SquareLoader);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = SquareLoader.__proto__ || Object.getPrototypeOf(SquareLoader)).call.apply(_ref, [this].concat(args))), _this), _this.getSquareStyle = function () {\n      return {\n        backgroundColor: _this.props.color,\n        width: _this.props.size,\n        height: _this.props.size,\n        verticalAlign: _this.props.verticalAlign\n      };\n    }, _this.getAnimationStyle = function () {\n      var animation = [animationName, '3s', '0s', 'infinite', 'cubic-bezier(.09,.57,.49,.9)'].join(' ');\n      var animationFillMode = 'both';\n      var perspective = '100px';\n\n      return {\n        perspective: perspective,\n        animation: animation,\n        animationFillMode: animationFillMode\n      };\n    }, _this.getStyle = function (i) {\n      return (0, _appendVendorPrefix2.default)(_this.getSquareStyle(i), _this.getAnimationStyle(i), {\n        display: 'inline-block',\n        border: '0px solid transparent' // fix firefox/chrome/opera rendering\n      });\n    }, _this.renderLoader = function (loading) {\n      if (loading) {\n        var props = Object.assign({}, _this.props);\n\n        if (propTypes && ptKeys) {\n          var klen = ptKeys.length;\n          for (var i = 0; i < klen; i++) {\n            delete props[ptKeys[i]];\n          }\n        }\n\n        return _react2.default.createElement(\n          'div',\n          props,\n          _react2.default.createElement('div', { style: _this.getStyle() })\n        );\n      }\n\n      return null;\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n  /**\n   * @type {Object}\n   */\n\n\n  /**\n   * @return {Object}\n   */\n\n\n  /**\n   * @param  {Number} i\n   * @return {Object}\n   */\n\n\n  /**\n   * @param  {Number} i\n   * @return {Object}\n   */\n\n\n  /**\n   * @param  {Boolean} loading\n   * @return {ReactComponent || null}\n   */\n\n\n  _createClass(SquareLoader, [{\n    key: 'render',\n    value: function render() {\n      return this.renderLoader(this.props.loading);\n    }\n  }]);\n\n  return SquareLoader;\n}(_react.Component);\n\nSquareLoader.propTypes = propTypes;\nSquareLoader.defaultProps = {\n  loading: true,\n  color: '#ffffff',\n  size: '50px' };\nexports.default = SquareLoader;\nmodule.exports = exports['default'];\n//# sourceMappingURL=SquareLoader.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/halogenium/lib/SquareLoader.js\n// module id = 30\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _appendVendorPrefix = require('domkit/appendVendorPrefix');\n\nvar _appendVendorPrefix2 = _interopRequireDefault(_appendVendorPrefix);\n\nvar _insertKeyframesRule = require('domkit/insertKeyframesRule');\n\nvar _insertKeyframesRule2 = _interopRequireDefault(_insertKeyframesRule);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * @type {Object}\n */\nvar keyframes = {\n  '33%': {\n    transform: 'translateY(10px)'\n  },\n  '66%': {\n    transform: 'translateY(-10px)'\n  },\n  '100%': {\n    transform: 'translateY(0)'\n  }\n\n  /**\n   * @type {String}\n   */\n};var animationName = (0, _insertKeyframesRule2.default)(keyframes);\n\nvar propTypes = {\n  loading: _propTypes2.default.bool,\n  color: _propTypes2.default.string,\n  size: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n  margin: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n  verticalAlign: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string])\n};\n\nvar ptKeys = Object.keys(propTypes);\n\nvar SyncLoader = function (_Component) {\n  _inherits(SyncLoader, _Component);\n\n  function SyncLoader() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, SyncLoader);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = SyncLoader.__proto__ || Object.getPrototypeOf(SyncLoader)).call.apply(_ref, [this].concat(args))), _this), _this.getBallStyle = function () {\n      return {\n        backgroundColor: _this.props.color,\n        width: _this.props.size,\n        height: _this.props.size,\n        margin: _this.props.margin,\n        borderRadius: '100%',\n        verticalAlign: _this.props.verticalAlign\n      };\n    }, _this.getAnimationStyle = function (i) {\n      var animation = [animationName, '0.6s', i * 0.07 + 's', 'infinite', 'ease-in-out'].join(' ');\n      var animationFillMode = 'both';\n\n      return {\n        animation: animation,\n        animationFillMode: animationFillMode\n      };\n    }, _this.getStyle = function (i) {\n      return (0, _appendVendorPrefix2.default)(_this.getBallStyle(i), _this.getAnimationStyle(i), {\n        display: 'inline-block',\n        border: '0px solid transparent' // fix firefox/chrome/opera rendering\n      });\n    }, _this.renderLoader = function (loading) {\n      if (loading) {\n        var props = Object.assign({}, _this.props);\n\n        if (propTypes && ptKeys) {\n          var klen = ptKeys.length;\n          for (var i = 0; i < klen; i++) {\n            delete props[ptKeys[i]];\n          }\n        }\n\n        return _react2.default.createElement(\n          'div',\n          props,\n          _react2.default.createElement('div', { style: _this.getStyle(1) }),\n          _react2.default.createElement('div', { style: _this.getStyle(2) }),\n          _react2.default.createElement('div', { style: _this.getStyle(3) })\n        );\n      }\n\n      return null;\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n  /**\n   * @type {Object}\n   */\n\n\n  /**\n   * @return {Object}\n   */\n\n\n  /**\n   * @param  {Number} i\n   * @return {Object}\n   */\n\n\n  /**\n   * @param  {Number} i\n   * @return {Object}\n   */\n\n\n  /**\n   * @param  {Boolean} loading\n   * @return {ReactComponent || null}\n   */\n\n\n  _createClass(SyncLoader, [{\n    key: 'render',\n    value: function render() {\n      return this.renderLoader(this.props.loading);\n    }\n  }]);\n\n  return SyncLoader;\n}(_react.Component);\n\nSyncLoader.propTypes = propTypes;\nSyncLoader.defaultProps = {\n  loading: true,\n  color: '#ffffff',\n  size: '15px',\n  margin: '2px' };\nexports.default = SyncLoader;\nmodule.exports = exports['default'];\n//# sourceMappingURL=SyncLoader.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/halogenium/lib/SyncLoader.js\n// module id = 31\n// module chunks = 0","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim\n  };\n\n  ReactPropTypes.checkPropTypes = emptyFunction;\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/prop-types/factoryWithThrowingShims.js\n// module id = 32\n// module chunks = 0","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/prop-types/lib/ReactPropTypesSecret.js\n// module id = 33\n// module chunks = 0","/** @license React v16.7.0\n * react-dom.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/*\n Modernizr 3.0.0pre (Custom Build) | MIT\n*/\n'use strict';var aa=require(\"react\"),n=require(\"object-assign\"),ba=require(\"scheduler\");function ca(a,b,c,d,e,f,g,h){if(!a){a=void 0;if(void 0===b)a=Error(\"Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.\");else{var k=[c,d,e,f,g,h],l=0;a=Error(b.replace(/%s/g,function(){return k[l++]}));a.name=\"Invariant Violation\"}a.framesToPop=1;throw a;}}\nfunction t(a){for(var b=arguments.length-1,c=\"https://reactjs.org/docs/error-decoder.html?invariant=\"+a,d=0;d<b;d++)c+=\"&args[]=\"+encodeURIComponent(arguments[d+1]);ca(!1,\"Minified React error #\"+a+\"; visit %s for the full message or use the non-minified dev environment for full errors and additional helpful warnings. \",c)}aa?void 0:t(\"227\");function da(a,b,c,d,e,f,g,h,k){var l=Array.prototype.slice.call(arguments,3);try{b.apply(c,l)}catch(m){this.onError(m)}}\nvar ea=!1,fa=null,ha=!1,ia=null,ja={onError:function(a){ea=!0;fa=a}};function ka(a,b,c,d,e,f,g,h,k){ea=!1;fa=null;da.apply(ja,arguments)}function la(a,b,c,d,e,f,g,h,k){ka.apply(this,arguments);if(ea){if(ea){var l=fa;ea=!1;fa=null}else t(\"198\"),l=void 0;ha||(ha=!0,ia=l)}}var ma=null,na={};\nfunction oa(){if(ma)for(var a in na){var b=na[a],c=ma.indexOf(a);-1<c?void 0:t(\"96\",a);if(!pa[c]){b.extractEvents?void 0:t(\"97\",a);pa[c]=b;c=b.eventTypes;for(var d in c){var e=void 0;var f=c[d],g=b,h=d;qa.hasOwnProperty(h)?t(\"99\",h):void 0;qa[h]=f;var k=f.phasedRegistrationNames;if(k){for(e in k)k.hasOwnProperty(e)&&ra(k[e],g,h);e=!0}else f.registrationName?(ra(f.registrationName,g,h),e=!0):e=!1;e?void 0:t(\"98\",d,a)}}}}\nfunction ra(a,b,c){sa[a]?t(\"100\",a):void 0;sa[a]=b;ta[a]=b.eventTypes[c].dependencies}var pa=[],qa={},sa={},ta={},ua=null,va=null,wa=null;function xa(a,b,c){var d=a.type||\"unknown-event\";a.currentTarget=wa(c);la(d,b,void 0,a);a.currentTarget=null}function ya(a,b){null==b?t(\"30\"):void 0;if(null==a)return b;if(Array.isArray(a)){if(Array.isArray(b))return a.push.apply(a,b),a;a.push(b);return a}return Array.isArray(b)?[a].concat(b):[a,b]}\nfunction za(a,b,c){Array.isArray(a)?a.forEach(b,c):a&&b.call(c,a)}var Aa=null;function Ba(a){if(a){var b=a._dispatchListeners,c=a._dispatchInstances;if(Array.isArray(b))for(var d=0;d<b.length&&!a.isPropagationStopped();d++)xa(a,b[d],c[d]);else b&&xa(a,b,c);a._dispatchListeners=null;a._dispatchInstances=null;a.isPersistent()||a.constructor.release(a)}}\nvar Ca={injectEventPluginOrder:function(a){ma?t(\"101\"):void 0;ma=Array.prototype.slice.call(a);oa()},injectEventPluginsByName:function(a){var b=!1,c;for(c in a)if(a.hasOwnProperty(c)){var d=a[c];na.hasOwnProperty(c)&&na[c]===d||(na[c]?t(\"102\",c):void 0,na[c]=d,b=!0)}b&&oa()}};\nfunction Da(a,b){var c=a.stateNode;if(!c)return null;var d=ua(c);if(!d)return null;c=d[b];a:switch(b){case \"onClick\":case \"onClickCapture\":case \"onDoubleClick\":case \"onDoubleClickCapture\":case \"onMouseDown\":case \"onMouseDownCapture\":case \"onMouseMove\":case \"onMouseMoveCapture\":case \"onMouseUp\":case \"onMouseUpCapture\":(d=!d.disabled)||(a=a.type,d=!(\"button\"===a||\"input\"===a||\"select\"===a||\"textarea\"===a));a=!d;break a;default:a=!1}if(a)return null;c&&\"function\"!==typeof c?t(\"231\",b,typeof c):void 0;\nreturn c}function Ea(a){null!==a&&(Aa=ya(Aa,a));a=Aa;Aa=null;if(a&&(za(a,Ba),Aa?t(\"95\"):void 0,ha))throw a=ia,ha=!1,ia=null,a;}var Fa=Math.random().toString(36).slice(2),Ga=\"__reactInternalInstance$\"+Fa,Ha=\"__reactEventHandlers$\"+Fa;function Ia(a){if(a[Ga])return a[Ga];for(;!a[Ga];)if(a.parentNode)a=a.parentNode;else return null;a=a[Ga];return 5===a.tag||6===a.tag?a:null}function Ja(a){a=a[Ga];return!a||5!==a.tag&&6!==a.tag?null:a}\nfunction Ka(a){if(5===a.tag||6===a.tag)return a.stateNode;t(\"33\")}function La(a){return a[Ha]||null}function Ma(a){do a=a.return;while(a&&5!==a.tag);return a?a:null}function Na(a,b,c){if(b=Da(a,c.dispatchConfig.phasedRegistrationNames[b]))c._dispatchListeners=ya(c._dispatchListeners,b),c._dispatchInstances=ya(c._dispatchInstances,a)}\nfunction Oa(a){if(a&&a.dispatchConfig.phasedRegistrationNames){for(var b=a._targetInst,c=[];b;)c.push(b),b=Ma(b);for(b=c.length;0<b--;)Na(c[b],\"captured\",a);for(b=0;b<c.length;b++)Na(c[b],\"bubbled\",a)}}function Pa(a,b,c){a&&c&&c.dispatchConfig.registrationName&&(b=Da(a,c.dispatchConfig.registrationName))&&(c._dispatchListeners=ya(c._dispatchListeners,b),c._dispatchInstances=ya(c._dispatchInstances,a))}function Qa(a){a&&a.dispatchConfig.registrationName&&Pa(a._targetInst,null,a)}\nfunction Ra(a){za(a,Oa)}var Sa=!(\"undefined\"===typeof window||!window.document||!window.document.createElement);function Ta(a,b){var c={};c[a.toLowerCase()]=b.toLowerCase();c[\"Webkit\"+a]=\"webkit\"+b;c[\"Moz\"+a]=\"moz\"+b;return c}var Ua={animationend:Ta(\"Animation\",\"AnimationEnd\"),animationiteration:Ta(\"Animation\",\"AnimationIteration\"),animationstart:Ta(\"Animation\",\"AnimationStart\"),transitionend:Ta(\"Transition\",\"TransitionEnd\")},Va={},Wa={};\nSa&&(Wa=document.createElement(\"div\").style,\"AnimationEvent\"in window||(delete Ua.animationend.animation,delete Ua.animationiteration.animation,delete Ua.animationstart.animation),\"TransitionEvent\"in window||delete Ua.transitionend.transition);function Xa(a){if(Va[a])return Va[a];if(!Ua[a])return a;var b=Ua[a],c;for(c in b)if(b.hasOwnProperty(c)&&c in Wa)return Va[a]=b[c];return a}\nvar Ya=Xa(\"animationend\"),Za=Xa(\"animationiteration\"),$a=Xa(\"animationstart\"),ab=Xa(\"transitionend\"),bb=\"abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting\".split(\" \"),cb=null,eb=null,fb=null;\nfunction gb(){if(fb)return fb;var a,b=eb,c=b.length,d,e=\"value\"in cb?cb.value:cb.textContent,f=e.length;for(a=0;a<c&&b[a]===e[a];a++);var g=c-a;for(d=1;d<=g&&b[c-d]===e[f-d];d++);return fb=e.slice(a,1<d?1-d:void 0)}function hb(){return!0}function ib(){return!1}\nfunction z(a,b,c,d){this.dispatchConfig=a;this._targetInst=b;this.nativeEvent=c;a=this.constructor.Interface;for(var e in a)a.hasOwnProperty(e)&&((b=a[e])?this[e]=b(c):\"target\"===e?this.target=d:this[e]=c[e]);this.isDefaultPrevented=(null!=c.defaultPrevented?c.defaultPrevented:!1===c.returnValue)?hb:ib;this.isPropagationStopped=ib;return this}\nn(z.prototype,{preventDefault:function(){this.defaultPrevented=!0;var a=this.nativeEvent;a&&(a.preventDefault?a.preventDefault():\"unknown\"!==typeof a.returnValue&&(a.returnValue=!1),this.isDefaultPrevented=hb)},stopPropagation:function(){var a=this.nativeEvent;a&&(a.stopPropagation?a.stopPropagation():\"unknown\"!==typeof a.cancelBubble&&(a.cancelBubble=!0),this.isPropagationStopped=hb)},persist:function(){this.isPersistent=hb},isPersistent:ib,destructor:function(){var a=this.constructor.Interface,\nb;for(b in a)this[b]=null;this.nativeEvent=this._targetInst=this.dispatchConfig=null;this.isPropagationStopped=this.isDefaultPrevented=ib;this._dispatchInstances=this._dispatchListeners=null}});z.Interface={type:null,target:null,currentTarget:function(){return null},eventPhase:null,bubbles:null,cancelable:null,timeStamp:function(a){return a.timeStamp||Date.now()},defaultPrevented:null,isTrusted:null};\nz.extend=function(a){function b(){}function c(){return d.apply(this,arguments)}var d=this;b.prototype=d.prototype;var e=new b;n(e,c.prototype);c.prototype=e;c.prototype.constructor=c;c.Interface=n({},d.Interface,a);c.extend=d.extend;jb(c);return c};jb(z);function kb(a,b,c,d){if(this.eventPool.length){var e=this.eventPool.pop();this.call(e,a,b,c,d);return e}return new this(a,b,c,d)}function lb(a){a instanceof this?void 0:t(\"279\");a.destructor();10>this.eventPool.length&&this.eventPool.push(a)}\nfunction jb(a){a.eventPool=[];a.getPooled=kb;a.release=lb}var mb=z.extend({data:null}),nb=z.extend({data:null}),ob=[9,13,27,32],pb=Sa&&\"CompositionEvent\"in window,qb=null;Sa&&\"documentMode\"in document&&(qb=document.documentMode);\nvar rb=Sa&&\"TextEvent\"in window&&!qb,sb=Sa&&(!pb||qb&&8<qb&&11>=qb),tb=String.fromCharCode(32),ub={beforeInput:{phasedRegistrationNames:{bubbled:\"onBeforeInput\",captured:\"onBeforeInputCapture\"},dependencies:[\"compositionend\",\"keypress\",\"textInput\",\"paste\"]},compositionEnd:{phasedRegistrationNames:{bubbled:\"onCompositionEnd\",captured:\"onCompositionEndCapture\"},dependencies:\"blur compositionend keydown keypress keyup mousedown\".split(\" \")},compositionStart:{phasedRegistrationNames:{bubbled:\"onCompositionStart\",\ncaptured:\"onCompositionStartCapture\"},dependencies:\"blur compositionstart keydown keypress keyup mousedown\".split(\" \")},compositionUpdate:{phasedRegistrationNames:{bubbled:\"onCompositionUpdate\",captured:\"onCompositionUpdateCapture\"},dependencies:\"blur compositionupdate keydown keypress keyup mousedown\".split(\" \")}},vb=!1;\nfunction wb(a,b){switch(a){case \"keyup\":return-1!==ob.indexOf(b.keyCode);case \"keydown\":return 229!==b.keyCode;case \"keypress\":case \"mousedown\":case \"blur\":return!0;default:return!1}}function xb(a){a=a.detail;return\"object\"===typeof a&&\"data\"in a?a.data:null}var yb=!1;function zb(a,b){switch(a){case \"compositionend\":return xb(b);case \"keypress\":if(32!==b.which)return null;vb=!0;return tb;case \"textInput\":return a=b.data,a===tb&&vb?null:a;default:return null}}\nfunction Ab(a,b){if(yb)return\"compositionend\"===a||!pb&&wb(a,b)?(a=gb(),fb=eb=cb=null,yb=!1,a):null;switch(a){case \"paste\":return null;case \"keypress\":if(!(b.ctrlKey||b.altKey||b.metaKey)||b.ctrlKey&&b.altKey){if(b.char&&1<b.char.length)return b.char;if(b.which)return String.fromCharCode(b.which)}return null;case \"compositionend\":return sb&&\"ko\"!==b.locale?null:b.data;default:return null}}\nvar Bb={eventTypes:ub,extractEvents:function(a,b,c,d){var e=void 0;var f=void 0;if(pb)b:{switch(a){case \"compositionstart\":e=ub.compositionStart;break b;case \"compositionend\":e=ub.compositionEnd;break b;case \"compositionupdate\":e=ub.compositionUpdate;break b}e=void 0}else yb?wb(a,c)&&(e=ub.compositionEnd):\"keydown\"===a&&229===c.keyCode&&(e=ub.compositionStart);e?(sb&&\"ko\"!==c.locale&&(yb||e!==ub.compositionStart?e===ub.compositionEnd&&yb&&(f=gb()):(cb=d,eb=\"value\"in cb?cb.value:cb.textContent,yb=\n!0)),e=mb.getPooled(e,b,c,d),f?e.data=f:(f=xb(c),null!==f&&(e.data=f)),Ra(e),f=e):f=null;(a=rb?zb(a,c):Ab(a,c))?(b=nb.getPooled(ub.beforeInput,b,c,d),b.data=a,Ra(b)):b=null;return null===f?b:null===b?f:[f,b]}},Cb=null,Db=null,Eb=null;function Hb(a){if(a=va(a)){\"function\"!==typeof Cb?t(\"280\"):void 0;var b=ua(a.stateNode);Cb(a.stateNode,a.type,b)}}function Ib(a){Db?Eb?Eb.push(a):Eb=[a]:Db=a}function Jb(){if(Db){var a=Db,b=Eb;Eb=Db=null;Hb(a);if(b)for(a=0;a<b.length;a++)Hb(b[a])}}\nfunction Kb(a,b){return a(b)}function Lb(a,b,c){return a(b,c)}function Mb(){}var Nb=!1;function Ob(a,b){if(Nb)return a(b);Nb=!0;try{return Kb(a,b)}finally{if(Nb=!1,null!==Db||null!==Eb)Mb(),Jb()}}var Pb={color:!0,date:!0,datetime:!0,\"datetime-local\":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function Qb(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return\"input\"===b?!!Pb[a.type]:\"textarea\"===b?!0:!1}\nfunction Rb(a){a=a.target||a.srcElement||window;a.correspondingUseElement&&(a=a.correspondingUseElement);return 3===a.nodeType?a.parentNode:a}function Sb(a){if(!Sa)return!1;a=\"on\"+a;var b=a in document;b||(b=document.createElement(\"div\"),b.setAttribute(a,\"return;\"),b=\"function\"===typeof b[a]);return b}function Tb(a){var b=a.type;return(a=a.nodeName)&&\"input\"===a.toLowerCase()&&(\"checkbox\"===b||\"radio\"===b)}\nfunction Ub(a){var b=Tb(a)?\"checked\":\"value\",c=Object.getOwnPropertyDescriptor(a.constructor.prototype,b),d=\"\"+a[b];if(!a.hasOwnProperty(b)&&\"undefined\"!==typeof c&&\"function\"===typeof c.get&&\"function\"===typeof c.set){var e=c.get,f=c.set;Object.defineProperty(a,b,{configurable:!0,get:function(){return e.call(this)},set:function(a){d=\"\"+a;f.call(this,a)}});Object.defineProperty(a,b,{enumerable:c.enumerable});return{getValue:function(){return d},setValue:function(a){d=\"\"+a},stopTracking:function(){a._valueTracker=\nnull;delete a[b]}}}}function Vb(a){a._valueTracker||(a._valueTracker=Ub(a))}function Wb(a){if(!a)return!1;var b=a._valueTracker;if(!b)return!0;var c=b.getValue();var d=\"\";a&&(d=Tb(a)?a.checked?\"true\":\"false\":a.value);a=d;return a!==c?(b.setValue(a),!0):!1}\nvar Xb=aa.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,Yb=/^(.*)[\\\\\\/]/,D=\"function\"===typeof Symbol&&Symbol.for,Zb=D?Symbol.for(\"react.element\"):60103,$b=D?Symbol.for(\"react.portal\"):60106,ac=D?Symbol.for(\"react.fragment\"):60107,bc=D?Symbol.for(\"react.strict_mode\"):60108,cc=D?Symbol.for(\"react.profiler\"):60114,dc=D?Symbol.for(\"react.provider\"):60109,ec=D?Symbol.for(\"react.context\"):60110,fc=D?Symbol.for(\"react.concurrent_mode\"):60111,gc=D?Symbol.for(\"react.forward_ref\"):60112,hc=D?Symbol.for(\"react.suspense\"):\n60113,ic=D?Symbol.for(\"react.memo\"):60115,jc=D?Symbol.for(\"react.lazy\"):60116,kc=\"function\"===typeof Symbol&&Symbol.iterator;function lc(a){if(null===a||\"object\"!==typeof a)return null;a=kc&&a[kc]||a[\"@@iterator\"];return\"function\"===typeof a?a:null}\nfunction mc(a){if(null==a)return null;if(\"function\"===typeof a)return a.displayName||a.name||null;if(\"string\"===typeof a)return a;switch(a){case fc:return\"ConcurrentMode\";case ac:return\"Fragment\";case $b:return\"Portal\";case cc:return\"Profiler\";case bc:return\"StrictMode\";case hc:return\"Suspense\"}if(\"object\"===typeof a)switch(a.$$typeof){case ec:return\"Context.Consumer\";case dc:return\"Context.Provider\";case gc:var b=a.render;b=b.displayName||b.name||\"\";return a.displayName||(\"\"!==b?\"ForwardRef(\"+b+\n\")\":\"ForwardRef\");case ic:return mc(a.type);case jc:if(a=1===a._status?a._result:null)return mc(a)}return null}function nc(a){var b=\"\";do{a:switch(a.tag){case 3:case 4:case 6:case 7:case 10:case 9:var c=\"\";break a;default:var d=a._debugOwner,e=a._debugSource,f=mc(a.type);c=null;d&&(c=mc(d.type));d=f;f=\"\";e?f=\" (at \"+e.fileName.replace(Yb,\"\")+\":\"+e.lineNumber+\")\":c&&(f=\" (created by \"+c+\")\");c=\"\\n    in \"+(d||\"Unknown\")+f}b+=c;a=a.return}while(a);return b}\nvar oc=/^[:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD][:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040]*$/,pc=Object.prototype.hasOwnProperty,qc={},rc={};\nfunction sc(a){if(pc.call(rc,a))return!0;if(pc.call(qc,a))return!1;if(oc.test(a))return rc[a]=!0;qc[a]=!0;return!1}function tc(a,b,c,d){if(null!==c&&0===c.type)return!1;switch(typeof b){case \"function\":case \"symbol\":return!0;case \"boolean\":if(d)return!1;if(null!==c)return!c.acceptsBooleans;a=a.toLowerCase().slice(0,5);return\"data-\"!==a&&\"aria-\"!==a;default:return!1}}\nfunction uc(a,b,c,d){if(null===b||\"undefined\"===typeof b||tc(a,b,c,d))return!0;if(d)return!1;if(null!==c)switch(c.type){case 3:return!b;case 4:return!1===b;case 5:return isNaN(b);case 6:return isNaN(b)||1>b}return!1}function E(a,b,c,d,e){this.acceptsBooleans=2===b||3===b||4===b;this.attributeName=d;this.attributeNamespace=e;this.mustUseProperty=c;this.propertyName=a;this.type=b}var F={};\n\"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style\".split(\" \").forEach(function(a){F[a]=new E(a,0,!1,a,null)});[[\"acceptCharset\",\"accept-charset\"],[\"className\",\"class\"],[\"htmlFor\",\"for\"],[\"httpEquiv\",\"http-equiv\"]].forEach(function(a){var b=a[0];F[b]=new E(b,1,!1,a[1],null)});[\"contentEditable\",\"draggable\",\"spellCheck\",\"value\"].forEach(function(a){F[a]=new E(a,2,!1,a.toLowerCase(),null)});\n[\"autoReverse\",\"externalResourcesRequired\",\"focusable\",\"preserveAlpha\"].forEach(function(a){F[a]=new E(a,2,!1,a,null)});\"allowFullScreen async autoFocus autoPlay controls default defer disabled formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope\".split(\" \").forEach(function(a){F[a]=new E(a,3,!1,a.toLowerCase(),null)});[\"checked\",\"multiple\",\"muted\",\"selected\"].forEach(function(a){F[a]=new E(a,3,!0,a,null)});\n[\"capture\",\"download\"].forEach(function(a){F[a]=new E(a,4,!1,a,null)});[\"cols\",\"rows\",\"size\",\"span\"].forEach(function(a){F[a]=new E(a,6,!1,a,null)});[\"rowSpan\",\"start\"].forEach(function(a){F[a]=new E(a,5,!1,a.toLowerCase(),null)});var vc=/[\\-:]([a-z])/g;function wc(a){return a[1].toUpperCase()}\n\"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height\".split(\" \").forEach(function(a){var b=a.replace(vc,\nwc);F[b]=new E(b,1,!1,a,null)});\"xlink:actuate xlink:arcrole xlink:href xlink:role xlink:show xlink:title xlink:type\".split(\" \").forEach(function(a){var b=a.replace(vc,wc);F[b]=new E(b,1,!1,a,\"http://www.w3.org/1999/xlink\")});[\"xml:base\",\"xml:lang\",\"xml:space\"].forEach(function(a){var b=a.replace(vc,wc);F[b]=new E(b,1,!1,a,\"http://www.w3.org/XML/1998/namespace\")});F.tabIndex=new E(\"tabIndex\",1,!1,\"tabindex\",null);\nfunction xc(a,b,c,d){var e=F.hasOwnProperty(b)?F[b]:null;var f=null!==e?0===e.type:d?!1:!(2<b.length)||\"o\"!==b[0]&&\"O\"!==b[0]||\"n\"!==b[1]&&\"N\"!==b[1]?!1:!0;f||(uc(b,c,e,d)&&(c=null),d||null===e?sc(b)&&(null===c?a.removeAttribute(b):a.setAttribute(b,\"\"+c)):e.mustUseProperty?a[e.propertyName]=null===c?3===e.type?!1:\"\":c:(b=e.attributeName,d=e.attributeNamespace,null===c?a.removeAttribute(b):(e=e.type,c=3===e||4===e&&!0===c?\"\":\"\"+c,d?a.setAttributeNS(d,b,c):a.setAttribute(b,c))))}\nfunction yc(a){switch(typeof a){case \"boolean\":case \"number\":case \"object\":case \"string\":case \"undefined\":return a;default:return\"\"}}function zc(a,b){var c=b.checked;return n({},b,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=c?c:a._wrapperState.initialChecked})}\nfunction Ac(a,b){var c=null==b.defaultValue?\"\":b.defaultValue,d=null!=b.checked?b.checked:b.defaultChecked;c=yc(null!=b.value?b.value:c);a._wrapperState={initialChecked:d,initialValue:c,controlled:\"checkbox\"===b.type||\"radio\"===b.type?null!=b.checked:null!=b.value}}function Bc(a,b){b=b.checked;null!=b&&xc(a,\"checked\",b,!1)}\nfunction Cc(a,b){Bc(a,b);var c=yc(b.value),d=b.type;if(null!=c)if(\"number\"===d){if(0===c&&\"\"===a.value||a.value!=c)a.value=\"\"+c}else a.value!==\"\"+c&&(a.value=\"\"+c);else if(\"submit\"===d||\"reset\"===d){a.removeAttribute(\"value\");return}b.hasOwnProperty(\"value\")?Dc(a,b.type,c):b.hasOwnProperty(\"defaultValue\")&&Dc(a,b.type,yc(b.defaultValue));null==b.checked&&null!=b.defaultChecked&&(a.defaultChecked=!!b.defaultChecked)}\nfunction Ec(a,b,c){if(b.hasOwnProperty(\"value\")||b.hasOwnProperty(\"defaultValue\")){var d=b.type;if(!(\"submit\"!==d&&\"reset\"!==d||void 0!==b.value&&null!==b.value))return;b=\"\"+a._wrapperState.initialValue;c||b===a.value||(a.value=b);a.defaultValue=b}c=a.name;\"\"!==c&&(a.name=\"\");a.defaultChecked=!a.defaultChecked;a.defaultChecked=!!a._wrapperState.initialChecked;\"\"!==c&&(a.name=c)}\nfunction Dc(a,b,c){if(\"number\"!==b||a.ownerDocument.activeElement!==a)null==c?a.defaultValue=\"\"+a._wrapperState.initialValue:a.defaultValue!==\"\"+c&&(a.defaultValue=\"\"+c)}var Fc={change:{phasedRegistrationNames:{bubbled:\"onChange\",captured:\"onChangeCapture\"},dependencies:\"blur change click focus input keydown keyup selectionchange\".split(\" \")}};function Gc(a,b,c){a=z.getPooled(Fc.change,a,b,c);a.type=\"change\";Ib(c);Ra(a);return a}var Jc=null,Kc=null;function Lc(a){Ea(a)}\nfunction Mc(a){var b=Ka(a);if(Wb(b))return a}function Nc(a,b){if(\"change\"===a)return b}var Oc=!1;Sa&&(Oc=Sb(\"input\")&&(!document.documentMode||9<document.documentMode));function Pc(){Jc&&(Jc.detachEvent(\"onpropertychange\",Qc),Kc=Jc=null)}function Qc(a){\"value\"===a.propertyName&&Mc(Kc)&&(a=Gc(Kc,a,Rb(a)),Ob(Lc,a))}function Rc(a,b,c){\"focus\"===a?(Pc(),Jc=b,Kc=c,Jc.attachEvent(\"onpropertychange\",Qc)):\"blur\"===a&&Pc()}function Sc(a){if(\"selectionchange\"===a||\"keyup\"===a||\"keydown\"===a)return Mc(Kc)}\nfunction Tc(a,b){if(\"click\"===a)return Mc(b)}function Uc(a,b){if(\"input\"===a||\"change\"===a)return Mc(b)}\nvar Vc={eventTypes:Fc,_isInputEventSupported:Oc,extractEvents:function(a,b,c,d){var e=b?Ka(b):window,f=void 0,g=void 0,h=e.nodeName&&e.nodeName.toLowerCase();\"select\"===h||\"input\"===h&&\"file\"===e.type?f=Nc:Qb(e)?Oc?f=Uc:(f=Sc,g=Rc):(h=e.nodeName)&&\"input\"===h.toLowerCase()&&(\"checkbox\"===e.type||\"radio\"===e.type)&&(f=Tc);if(f&&(f=f(a,b)))return Gc(f,c,d);g&&g(a,e,b);\"blur\"===a&&(a=e._wrapperState)&&a.controlled&&\"number\"===e.type&&Dc(e,\"number\",e.value)}},Wc=z.extend({view:null,detail:null}),Xc={Alt:\"altKey\",\nControl:\"ctrlKey\",Meta:\"metaKey\",Shift:\"shiftKey\"};function Yc(a){var b=this.nativeEvent;return b.getModifierState?b.getModifierState(a):(a=Xc[a])?!!b[a]:!1}function Zc(){return Yc}\nvar $c=0,ad=0,bd=!1,cd=!1,dd=Wc.extend({screenX:null,screenY:null,clientX:null,clientY:null,pageX:null,pageY:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,getModifierState:Zc,button:null,buttons:null,relatedTarget:function(a){return a.relatedTarget||(a.fromElement===a.srcElement?a.toElement:a.fromElement)},movementX:function(a){if(\"movementX\"in a)return a.movementX;var b=$c;$c=a.screenX;return bd?\"mousemove\"===a.type?a.screenX-b:0:(bd=!0,0)},movementY:function(a){if(\"movementY\"in a)return a.movementY;\nvar b=ad;ad=a.screenY;return cd?\"mousemove\"===a.type?a.screenY-b:0:(cd=!0,0)}}),ed=dd.extend({pointerId:null,width:null,height:null,pressure:null,tangentialPressure:null,tiltX:null,tiltY:null,twist:null,pointerType:null,isPrimary:null}),fd={mouseEnter:{registrationName:\"onMouseEnter\",dependencies:[\"mouseout\",\"mouseover\"]},mouseLeave:{registrationName:\"onMouseLeave\",dependencies:[\"mouseout\",\"mouseover\"]},pointerEnter:{registrationName:\"onPointerEnter\",dependencies:[\"pointerout\",\"pointerover\"]},pointerLeave:{registrationName:\"onPointerLeave\",\ndependencies:[\"pointerout\",\"pointerover\"]}},gd={eventTypes:fd,extractEvents:function(a,b,c,d){var e=\"mouseover\"===a||\"pointerover\"===a,f=\"mouseout\"===a||\"pointerout\"===a;if(e&&(c.relatedTarget||c.fromElement)||!f&&!e)return null;e=d.window===d?d:(e=d.ownerDocument)?e.defaultView||e.parentWindow:window;f?(f=b,b=(b=c.relatedTarget||c.toElement)?Ia(b):null):f=null;if(f===b)return null;var g=void 0,h=void 0,k=void 0,l=void 0;if(\"mouseout\"===a||\"mouseover\"===a)g=dd,h=fd.mouseLeave,k=fd.mouseEnter,l=\"mouse\";\nelse if(\"pointerout\"===a||\"pointerover\"===a)g=ed,h=fd.pointerLeave,k=fd.pointerEnter,l=\"pointer\";var m=null==f?e:Ka(f);e=null==b?e:Ka(b);a=g.getPooled(h,f,c,d);a.type=l+\"leave\";a.target=m;a.relatedTarget=e;c=g.getPooled(k,b,c,d);c.type=l+\"enter\";c.target=e;c.relatedTarget=m;d=b;if(f&&d)a:{b=f;e=d;l=0;for(g=b;g;g=Ma(g))l++;g=0;for(k=e;k;k=Ma(k))g++;for(;0<l-g;)b=Ma(b),l--;for(;0<g-l;)e=Ma(e),g--;for(;l--;){if(b===e||b===e.alternate)break a;b=Ma(b);e=Ma(e)}b=null}else b=null;e=b;for(b=[];f&&f!==e;){l=\nf.alternate;if(null!==l&&l===e)break;b.push(f);f=Ma(f)}for(f=[];d&&d!==e;){l=d.alternate;if(null!==l&&l===e)break;f.push(d);d=Ma(d)}for(d=0;d<b.length;d++)Pa(b[d],\"bubbled\",a);for(d=f.length;0<d--;)Pa(f[d],\"captured\",c);return[a,c]}},hd=Object.prototype.hasOwnProperty;function id(a,b){return a===b?0!==a||0!==b||1/a===1/b:a!==a&&b!==b}\nfunction jd(a,b){if(id(a,b))return!0;if(\"object\"!==typeof a||null===a||\"object\"!==typeof b||null===b)return!1;var c=Object.keys(a),d=Object.keys(b);if(c.length!==d.length)return!1;for(d=0;d<c.length;d++)if(!hd.call(b,c[d])||!id(a[c[d]],b[c[d]]))return!1;return!0}function kd(a){var b=a;if(a.alternate)for(;b.return;)b=b.return;else{if(0!==(b.effectTag&2))return 1;for(;b.return;)if(b=b.return,0!==(b.effectTag&2))return 1}return 3===b.tag?2:3}function ld(a){2!==kd(a)?t(\"188\"):void 0}\nfunction md(a){var b=a.alternate;if(!b)return b=kd(a),3===b?t(\"188\"):void 0,1===b?null:a;for(var c=a,d=b;;){var e=c.return,f=e?e.alternate:null;if(!e||!f)break;if(e.child===f.child){for(var g=e.child;g;){if(g===c)return ld(e),a;if(g===d)return ld(e),b;g=g.sibling}t(\"188\")}if(c.return!==d.return)c=e,d=f;else{g=!1;for(var h=e.child;h;){if(h===c){g=!0;c=e;d=f;break}if(h===d){g=!0;d=e;c=f;break}h=h.sibling}if(!g){for(h=f.child;h;){if(h===c){g=!0;c=f;d=e;break}if(h===d){g=!0;d=f;c=e;break}h=h.sibling}g?\nvoid 0:t(\"189\")}}c.alternate!==d?t(\"190\"):void 0}3!==c.tag?t(\"188\"):void 0;return c.stateNode.current===c?a:b}function nd(a){a=md(a);if(!a)return null;for(var b=a;;){if(5===b.tag||6===b.tag)return b;if(b.child)b.child.return=b,b=b.child;else{if(b===a)break;for(;!b.sibling;){if(!b.return||b.return===a)return null;b=b.return}b.sibling.return=b.return;b=b.sibling}}return null}\nvar od=z.extend({animationName:null,elapsedTime:null,pseudoElement:null}),pd=z.extend({clipboardData:function(a){return\"clipboardData\"in a?a.clipboardData:window.clipboardData}}),qd=Wc.extend({relatedTarget:null});function rd(a){var b=a.keyCode;\"charCode\"in a?(a=a.charCode,0===a&&13===b&&(a=13)):a=b;10===a&&(a=13);return 32<=a||13===a?a:0}\nvar sd={Esc:\"Escape\",Spacebar:\" \",Left:\"ArrowLeft\",Up:\"ArrowUp\",Right:\"ArrowRight\",Down:\"ArrowDown\",Del:\"Delete\",Win:\"OS\",Menu:\"ContextMenu\",Apps:\"ContextMenu\",Scroll:\"ScrollLock\",MozPrintableKey:\"Unidentified\"},td={8:\"Backspace\",9:\"Tab\",12:\"Clear\",13:\"Enter\",16:\"Shift\",17:\"Control\",18:\"Alt\",19:\"Pause\",20:\"CapsLock\",27:\"Escape\",32:\" \",33:\"PageUp\",34:\"PageDown\",35:\"End\",36:\"Home\",37:\"ArrowLeft\",38:\"ArrowUp\",39:\"ArrowRight\",40:\"ArrowDown\",45:\"Insert\",46:\"Delete\",112:\"F1\",113:\"F2\",114:\"F3\",115:\"F4\",\n116:\"F5\",117:\"F6\",118:\"F7\",119:\"F8\",120:\"F9\",121:\"F10\",122:\"F11\",123:\"F12\",144:\"NumLock\",145:\"ScrollLock\",224:\"Meta\"},ud=Wc.extend({key:function(a){if(a.key){var b=sd[a.key]||a.key;if(\"Unidentified\"!==b)return b}return\"keypress\"===a.type?(a=rd(a),13===a?\"Enter\":String.fromCharCode(a)):\"keydown\"===a.type||\"keyup\"===a.type?td[a.keyCode]||\"Unidentified\":\"\"},location:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,repeat:null,locale:null,getModifierState:Zc,charCode:function(a){return\"keypress\"===\na.type?rd(a):0},keyCode:function(a){return\"keydown\"===a.type||\"keyup\"===a.type?a.keyCode:0},which:function(a){return\"keypress\"===a.type?rd(a):\"keydown\"===a.type||\"keyup\"===a.type?a.keyCode:0}}),vd=dd.extend({dataTransfer:null}),wd=Wc.extend({touches:null,targetTouches:null,changedTouches:null,altKey:null,metaKey:null,ctrlKey:null,shiftKey:null,getModifierState:Zc}),xd=z.extend({propertyName:null,elapsedTime:null,pseudoElement:null}),yd=dd.extend({deltaX:function(a){return\"deltaX\"in a?a.deltaX:\"wheelDeltaX\"in\na?-a.wheelDeltaX:0},deltaY:function(a){return\"deltaY\"in a?a.deltaY:\"wheelDeltaY\"in a?-a.wheelDeltaY:\"wheelDelta\"in a?-a.wheelDelta:0},deltaZ:null,deltaMode:null}),zd=[[\"abort\",\"abort\"],[Ya,\"animationEnd\"],[Za,\"animationIteration\"],[$a,\"animationStart\"],[\"canplay\",\"canPlay\"],[\"canplaythrough\",\"canPlayThrough\"],[\"drag\",\"drag\"],[\"dragenter\",\"dragEnter\"],[\"dragexit\",\"dragExit\"],[\"dragleave\",\"dragLeave\"],[\"dragover\",\"dragOver\"],[\"durationchange\",\"durationChange\"],[\"emptied\",\"emptied\"],[\"encrypted\",\"encrypted\"],\n[\"ended\",\"ended\"],[\"error\",\"error\"],[\"gotpointercapture\",\"gotPointerCapture\"],[\"load\",\"load\"],[\"loadeddata\",\"loadedData\"],[\"loadedmetadata\",\"loadedMetadata\"],[\"loadstart\",\"loadStart\"],[\"lostpointercapture\",\"lostPointerCapture\"],[\"mousemove\",\"mouseMove\"],[\"mouseout\",\"mouseOut\"],[\"mouseover\",\"mouseOver\"],[\"playing\",\"playing\"],[\"pointermove\",\"pointerMove\"],[\"pointerout\",\"pointerOut\"],[\"pointerover\",\"pointerOver\"],[\"progress\",\"progress\"],[\"scroll\",\"scroll\"],[\"seeking\",\"seeking\"],[\"stalled\",\"stalled\"],\n[\"suspend\",\"suspend\"],[\"timeupdate\",\"timeUpdate\"],[\"toggle\",\"toggle\"],[\"touchmove\",\"touchMove\"],[ab,\"transitionEnd\"],[\"waiting\",\"waiting\"],[\"wheel\",\"wheel\"]],Ad={},Bd={};function Cd(a,b){var c=a[0];a=a[1];var d=\"on\"+(a[0].toUpperCase()+a.slice(1));b={phasedRegistrationNames:{bubbled:d,captured:d+\"Capture\"},dependencies:[c],isInteractive:b};Ad[a]=b;Bd[c]=b}\n[[\"blur\",\"blur\"],[\"cancel\",\"cancel\"],[\"click\",\"click\"],[\"close\",\"close\"],[\"contextmenu\",\"contextMenu\"],[\"copy\",\"copy\"],[\"cut\",\"cut\"],[\"auxclick\",\"auxClick\"],[\"dblclick\",\"doubleClick\"],[\"dragend\",\"dragEnd\"],[\"dragstart\",\"dragStart\"],[\"drop\",\"drop\"],[\"focus\",\"focus\"],[\"input\",\"input\"],[\"invalid\",\"invalid\"],[\"keydown\",\"keyDown\"],[\"keypress\",\"keyPress\"],[\"keyup\",\"keyUp\"],[\"mousedown\",\"mouseDown\"],[\"mouseup\",\"mouseUp\"],[\"paste\",\"paste\"],[\"pause\",\"pause\"],[\"play\",\"play\"],[\"pointercancel\",\"pointerCancel\"],\n[\"pointerdown\",\"pointerDown\"],[\"pointerup\",\"pointerUp\"],[\"ratechange\",\"rateChange\"],[\"reset\",\"reset\"],[\"seeked\",\"seeked\"],[\"submit\",\"submit\"],[\"touchcancel\",\"touchCancel\"],[\"touchend\",\"touchEnd\"],[\"touchstart\",\"touchStart\"],[\"volumechange\",\"volumeChange\"]].forEach(function(a){Cd(a,!0)});zd.forEach(function(a){Cd(a,!1)});\nvar Dd={eventTypes:Ad,isInteractiveTopLevelEventType:function(a){a=Bd[a];return void 0!==a&&!0===a.isInteractive},extractEvents:function(a,b,c,d){var e=Bd[a];if(!e)return null;switch(a){case \"keypress\":if(0===rd(c))return null;case \"keydown\":case \"keyup\":a=ud;break;case \"blur\":case \"focus\":a=qd;break;case \"click\":if(2===c.button)return null;case \"auxclick\":case \"dblclick\":case \"mousedown\":case \"mousemove\":case \"mouseup\":case \"mouseout\":case \"mouseover\":case \"contextmenu\":a=dd;break;case \"drag\":case \"dragend\":case \"dragenter\":case \"dragexit\":case \"dragleave\":case \"dragover\":case \"dragstart\":case \"drop\":a=\nvd;break;case \"touchcancel\":case \"touchend\":case \"touchmove\":case \"touchstart\":a=wd;break;case Ya:case Za:case $a:a=od;break;case ab:a=xd;break;case \"scroll\":a=Wc;break;case \"wheel\":a=yd;break;case \"copy\":case \"cut\":case \"paste\":a=pd;break;case \"gotpointercapture\":case \"lostpointercapture\":case \"pointercancel\":case \"pointerdown\":case \"pointermove\":case \"pointerout\":case \"pointerover\":case \"pointerup\":a=ed;break;default:a=z}b=a.getPooled(e,b,c,d);Ra(b);return b}},Ed=Dd.isInteractiveTopLevelEventType,\nFd=[];function Gd(a){var b=a.targetInst,c=b;do{if(!c){a.ancestors.push(c);break}var d;for(d=c;d.return;)d=d.return;d=3!==d.tag?null:d.stateNode.containerInfo;if(!d)break;a.ancestors.push(c);c=Ia(d)}while(c);for(c=0;c<a.ancestors.length;c++){b=a.ancestors[c];var e=Rb(a.nativeEvent);d=a.topLevelType;for(var f=a.nativeEvent,g=null,h=0;h<pa.length;h++){var k=pa[h];k&&(k=k.extractEvents(d,b,f,e))&&(g=ya(g,k))}Ea(g)}}var Hd=!0;\nfunction H(a,b){if(!b)return null;var c=(Ed(a)?Id:Jd).bind(null,a);b.addEventListener(a,c,!1)}function Kd(a,b){if(!b)return null;var c=(Ed(a)?Id:Jd).bind(null,a);b.addEventListener(a,c,!0)}function Id(a,b){Lb(Jd,a,b)}\nfunction Jd(a,b){if(Hd){var c=Rb(b);c=Ia(c);null===c||\"number\"!==typeof c.tag||2===kd(c)||(c=null);if(Fd.length){var d=Fd.pop();d.topLevelType=a;d.nativeEvent=b;d.targetInst=c;a=d}else a={topLevelType:a,nativeEvent:b,targetInst:c,ancestors:[]};try{Ob(Gd,a)}finally{a.topLevelType=null,a.nativeEvent=null,a.targetInst=null,a.ancestors.length=0,10>Fd.length&&Fd.push(a)}}}var Ld={},Md=0,Nd=\"_reactListenersID\"+(\"\"+Math.random()).slice(2);\nfunction Od(a){Object.prototype.hasOwnProperty.call(a,Nd)||(a[Nd]=Md++,Ld[a[Nd]]={});return Ld[a[Nd]]}function Pd(a){a=a||(\"undefined\"!==typeof document?document:void 0);if(\"undefined\"===typeof a)return null;try{return a.activeElement||a.body}catch(b){return a.body}}function Qd(a){for(;a&&a.firstChild;)a=a.firstChild;return a}\nfunction Rd(a,b){var c=Qd(a);a=0;for(var d;c;){if(3===c.nodeType){d=a+c.textContent.length;if(a<=b&&d>=b)return{node:c,offset:b-a};a=d}a:{for(;c;){if(c.nextSibling){c=c.nextSibling;break a}c=c.parentNode}c=void 0}c=Qd(c)}}function Sd(a,b){return a&&b?a===b?!0:a&&3===a.nodeType?!1:b&&3===b.nodeType?Sd(a,b.parentNode):\"contains\"in a?a.contains(b):a.compareDocumentPosition?!!(a.compareDocumentPosition(b)&16):!1:!1}\nfunction Td(){for(var a=window,b=Pd();b instanceof a.HTMLIFrameElement;){try{a=b.contentDocument.defaultView}catch(c){break}b=Pd(a.document)}return b}function Ud(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return b&&(\"input\"===b&&(\"text\"===a.type||\"search\"===a.type||\"tel\"===a.type||\"url\"===a.type||\"password\"===a.type)||\"textarea\"===b||\"true\"===a.contentEditable)}\nvar Vd=Sa&&\"documentMode\"in document&&11>=document.documentMode,Wd={select:{phasedRegistrationNames:{bubbled:\"onSelect\",captured:\"onSelectCapture\"},dependencies:\"blur contextmenu dragend focus keydown keyup mousedown mouseup selectionchange\".split(\" \")}},Xd=null,Yd=null,Zd=null,$d=!1;\nfunction ae(a,b){var c=b.window===b?b.document:9===b.nodeType?b:b.ownerDocument;if($d||null==Xd||Xd!==Pd(c))return null;c=Xd;\"selectionStart\"in c&&Ud(c)?c={start:c.selectionStart,end:c.selectionEnd}:(c=(c.ownerDocument&&c.ownerDocument.defaultView||window).getSelection(),c={anchorNode:c.anchorNode,anchorOffset:c.anchorOffset,focusNode:c.focusNode,focusOffset:c.focusOffset});return Zd&&jd(Zd,c)?null:(Zd=c,a=z.getPooled(Wd.select,Yd,a,b),a.type=\"select\",a.target=Xd,Ra(a),a)}\nvar be={eventTypes:Wd,extractEvents:function(a,b,c,d){var e=d.window===d?d.document:9===d.nodeType?d:d.ownerDocument,f;if(!(f=!e)){a:{e=Od(e);f=ta.onSelect;for(var g=0;g<f.length;g++){var h=f[g];if(!e.hasOwnProperty(h)||!e[h]){e=!1;break a}}e=!0}f=!e}if(f)return null;e=b?Ka(b):window;switch(a){case \"focus\":if(Qb(e)||\"true\"===e.contentEditable)Xd=e,Yd=b,Zd=null;break;case \"blur\":Zd=Yd=Xd=null;break;case \"mousedown\":$d=!0;break;case \"contextmenu\":case \"mouseup\":case \"dragend\":return $d=!1,ae(c,d);case \"selectionchange\":if(Vd)break;\ncase \"keydown\":case \"keyup\":return ae(c,d)}return null}};Ca.injectEventPluginOrder(\"ResponderEventPlugin SimpleEventPlugin EnterLeaveEventPlugin ChangeEventPlugin SelectEventPlugin BeforeInputEventPlugin\".split(\" \"));ua=La;va=Ja;wa=Ka;Ca.injectEventPluginsByName({SimpleEventPlugin:Dd,EnterLeaveEventPlugin:gd,ChangeEventPlugin:Vc,SelectEventPlugin:be,BeforeInputEventPlugin:Bb});function de(a){var b=\"\";aa.Children.forEach(a,function(a){null!=a&&(b+=a)});return b}\nfunction ee(a,b){a=n({children:void 0},b);if(b=de(b.children))a.children=b;return a}function fe(a,b,c,d){a=a.options;if(b){b={};for(var e=0;e<c.length;e++)b[\"$\"+c[e]]=!0;for(c=0;c<a.length;c++)e=b.hasOwnProperty(\"$\"+a[c].value),a[c].selected!==e&&(a[c].selected=e),e&&d&&(a[c].defaultSelected=!0)}else{c=\"\"+yc(c);b=null;for(e=0;e<a.length;e++){if(a[e].value===c){a[e].selected=!0;d&&(a[e].defaultSelected=!0);return}null!==b||a[e].disabled||(b=a[e])}null!==b&&(b.selected=!0)}}\nfunction ge(a,b){null!=b.dangerouslySetInnerHTML?t(\"91\"):void 0;return n({},b,{value:void 0,defaultValue:void 0,children:\"\"+a._wrapperState.initialValue})}function he(a,b){var c=b.value;null==c&&(c=b.defaultValue,b=b.children,null!=b&&(null!=c?t(\"92\"):void 0,Array.isArray(b)&&(1>=b.length?void 0:t(\"93\"),b=b[0]),c=b),null==c&&(c=\"\"));a._wrapperState={initialValue:yc(c)}}\nfunction ie(a,b){var c=yc(b.value),d=yc(b.defaultValue);null!=c&&(c=\"\"+c,c!==a.value&&(a.value=c),null==b.defaultValue&&a.defaultValue!==c&&(a.defaultValue=c));null!=d&&(a.defaultValue=\"\"+d)}function je(a){var b=a.textContent;b===a._wrapperState.initialValue&&(a.value=b)}var ke={html:\"http://www.w3.org/1999/xhtml\",mathml:\"http://www.w3.org/1998/Math/MathML\",svg:\"http://www.w3.org/2000/svg\"};\nfunction le(a){switch(a){case \"svg\":return\"http://www.w3.org/2000/svg\";case \"math\":return\"http://www.w3.org/1998/Math/MathML\";default:return\"http://www.w3.org/1999/xhtml\"}}function me(a,b){return null==a||\"http://www.w3.org/1999/xhtml\"===a?le(b):\"http://www.w3.org/2000/svg\"===a&&\"foreignObject\"===b?\"http://www.w3.org/1999/xhtml\":a}\nvar ne=void 0,oe=function(a){return\"undefined\"!==typeof MSApp&&MSApp.execUnsafeLocalFunction?function(b,c,d,e){MSApp.execUnsafeLocalFunction(function(){return a(b,c,d,e)})}:a}(function(a,b){if(a.namespaceURI!==ke.svg||\"innerHTML\"in a)a.innerHTML=b;else{ne=ne||document.createElement(\"div\");ne.innerHTML=\"<svg>\"+b+\"</svg>\";for(b=ne.firstChild;a.firstChild;)a.removeChild(a.firstChild);for(;b.firstChild;)a.appendChild(b.firstChild)}});\nfunction pe(a,b){if(b){var c=a.firstChild;if(c&&c===a.lastChild&&3===c.nodeType){c.nodeValue=b;return}}a.textContent=b}\nvar qe={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,\nfloodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},re=[\"Webkit\",\"ms\",\"Moz\",\"O\"];Object.keys(qe).forEach(function(a){re.forEach(function(b){b=b+a.charAt(0).toUpperCase()+a.substring(1);qe[b]=qe[a]})});function se(a,b,c){return null==b||\"boolean\"===typeof b||\"\"===b?\"\":c||\"number\"!==typeof b||0===b||qe.hasOwnProperty(a)&&qe[a]?(\"\"+b).trim():b+\"px\"}\nfunction te(a,b){a=a.style;for(var c in b)if(b.hasOwnProperty(c)){var d=0===c.indexOf(\"--\"),e=se(c,b[c],d);\"float\"===c&&(c=\"cssFloat\");d?a.setProperty(c,e):a[c]=e}}var ue=n({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});\nfunction ve(a,b){b&&(ue[a]&&(null!=b.children||null!=b.dangerouslySetInnerHTML?t(\"137\",a,\"\"):void 0),null!=b.dangerouslySetInnerHTML&&(null!=b.children?t(\"60\"):void 0,\"object\"===typeof b.dangerouslySetInnerHTML&&\"__html\"in b.dangerouslySetInnerHTML?void 0:t(\"61\")),null!=b.style&&\"object\"!==typeof b.style?t(\"62\",\"\"):void 0)}\nfunction we(a,b){if(-1===a.indexOf(\"-\"))return\"string\"===typeof b.is;switch(a){case \"annotation-xml\":case \"color-profile\":case \"font-face\":case \"font-face-src\":case \"font-face-uri\":case \"font-face-format\":case \"font-face-name\":case \"missing-glyph\":return!1;default:return!0}}\nfunction xe(a,b){a=9===a.nodeType||11===a.nodeType?a:a.ownerDocument;var c=Od(a);b=ta[b];for(var d=0;d<b.length;d++){var e=b[d];if(!c.hasOwnProperty(e)||!c[e]){switch(e){case \"scroll\":Kd(\"scroll\",a);break;case \"focus\":case \"blur\":Kd(\"focus\",a);Kd(\"blur\",a);c.blur=!0;c.focus=!0;break;case \"cancel\":case \"close\":Sb(e)&&Kd(e,a);break;case \"invalid\":case \"submit\":case \"reset\":break;default:-1===bb.indexOf(e)&&H(e,a)}c[e]=!0}}}function ye(){}var ze=null,Ae=null;\nfunction Be(a,b){switch(a){case \"button\":case \"input\":case \"select\":case \"textarea\":return!!b.autoFocus}return!1}function Ce(a,b){return\"textarea\"===a||\"option\"===a||\"noscript\"===a||\"string\"===typeof b.children||\"number\"===typeof b.children||\"object\"===typeof b.dangerouslySetInnerHTML&&null!==b.dangerouslySetInnerHTML&&null!=b.dangerouslySetInnerHTML.__html}var De=\"function\"===typeof setTimeout?setTimeout:void 0,Ee=\"function\"===typeof clearTimeout?clearTimeout:void 0;\nfunction Fe(a,b,c,d,e){a[Ha]=e;\"input\"===c&&\"radio\"===e.type&&null!=e.name&&Bc(a,e);we(c,d);d=we(c,e);for(var f=0;f<b.length;f+=2){var g=b[f],h=b[f+1];\"style\"===g?te(a,h):\"dangerouslySetInnerHTML\"===g?oe(a,h):\"children\"===g?pe(a,h):xc(a,g,h,d)}switch(c){case \"input\":Cc(a,e);break;case \"textarea\":ie(a,e);break;case \"select\":b=a._wrapperState.wasMultiple,a._wrapperState.wasMultiple=!!e.multiple,c=e.value,null!=c?fe(a,!!e.multiple,c,!1):b!==!!e.multiple&&(null!=e.defaultValue?fe(a,!!e.multiple,e.defaultValue,\n!0):fe(a,!!e.multiple,e.multiple?[]:\"\",!1))}}function Ge(a){for(a=a.nextSibling;a&&1!==a.nodeType&&3!==a.nodeType;)a=a.nextSibling;return a}function He(a){for(a=a.firstChild;a&&1!==a.nodeType&&3!==a.nodeType;)a=a.nextSibling;return a}new Set;var Ie=[],Je=-1;function I(a){0>Je||(a.current=Ie[Je],Ie[Je]=null,Je--)}function J(a,b){Je++;Ie[Je]=a.current;a.current=b}var Ke={},K={current:Ke},L={current:!1},Le=Ke;\nfunction Me(a,b){var c=a.type.contextTypes;if(!c)return Ke;var d=a.stateNode;if(d&&d.__reactInternalMemoizedUnmaskedChildContext===b)return d.__reactInternalMemoizedMaskedChildContext;var e={},f;for(f in c)e[f]=b[f];d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=b,a.__reactInternalMemoizedMaskedChildContext=e);return e}function M(a){a=a.childContextTypes;return null!==a&&void 0!==a}function Ne(a){I(L,a);I(K,a)}function Oe(a){I(L,a);I(K,a)}\nfunction Pe(a,b,c){K.current!==Ke?t(\"168\"):void 0;J(K,b,a);J(L,c,a)}function Qe(a,b,c){var d=a.stateNode;a=b.childContextTypes;if(\"function\"!==typeof d.getChildContext)return c;d=d.getChildContext();for(var e in d)e in a?void 0:t(\"108\",mc(b)||\"Unknown\",e);return n({},c,d)}function Re(a){var b=a.stateNode;b=b&&b.__reactInternalMemoizedMergedChildContext||Ke;Le=K.current;J(K,b,a);J(L,L.current,a);return!0}\nfunction Se(a,b,c){var d=a.stateNode;d?void 0:t(\"169\");c?(b=Qe(a,b,Le),d.__reactInternalMemoizedMergedChildContext=b,I(L,a),I(K,a),J(K,b,a)):I(L,a);J(L,c,a)}var Te=null,Ue=null;function Ve(a){return function(b){try{return a(b)}catch(c){}}}\nfunction We(a){if(\"undefined\"===typeof __REACT_DEVTOOLS_GLOBAL_HOOK__)return!1;var b=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(b.isDisabled||!b.supportsFiber)return!0;try{var c=b.inject(a);Te=Ve(function(a){return b.onCommitFiberRoot(c,a)});Ue=Ve(function(a){return b.onCommitFiberUnmount(c,a)})}catch(d){}return!0}\nfunction Xe(a,b,c,d){this.tag=a;this.key=c;this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null;this.index=0;this.ref=null;this.pendingProps=b;this.firstContextDependency=this.memoizedState=this.updateQueue=this.memoizedProps=null;this.mode=d;this.effectTag=0;this.lastEffect=this.firstEffect=this.nextEffect=null;this.childExpirationTime=this.expirationTime=0;this.alternate=null}function N(a,b,c,d){return new Xe(a,b,c,d)}\nfunction Ye(a){a=a.prototype;return!(!a||!a.isReactComponent)}function Ze(a){if(\"function\"===typeof a)return Ye(a)?1:0;if(void 0!==a&&null!==a){a=a.$$typeof;if(a===gc)return 11;if(a===ic)return 14}return 2}\nfunction $e(a,b){var c=a.alternate;null===c?(c=N(a.tag,b,a.key,a.mode),c.elementType=a.elementType,c.type=a.type,c.stateNode=a.stateNode,c.alternate=a,a.alternate=c):(c.pendingProps=b,c.effectTag=0,c.nextEffect=null,c.firstEffect=null,c.lastEffect=null);c.childExpirationTime=a.childExpirationTime;c.expirationTime=a.expirationTime;c.child=a.child;c.memoizedProps=a.memoizedProps;c.memoizedState=a.memoizedState;c.updateQueue=a.updateQueue;c.firstContextDependency=a.firstContextDependency;c.sibling=a.sibling;\nc.index=a.index;c.ref=a.ref;return c}\nfunction af(a,b,c,d,e,f){var g=2;d=a;if(\"function\"===typeof a)Ye(a)&&(g=1);else if(\"string\"===typeof a)g=5;else a:switch(a){case ac:return bf(c.children,e,f,b);case fc:return cf(c,e|3,f,b);case bc:return cf(c,e|2,f,b);case cc:return a=N(12,c,b,e|4),a.elementType=cc,a.type=cc,a.expirationTime=f,a;case hc:return a=N(13,c,b,e),a.elementType=hc,a.type=hc,a.expirationTime=f,a;default:if(\"object\"===typeof a&&null!==a)switch(a.$$typeof){case dc:g=10;break a;case ec:g=9;break a;case gc:g=11;break a;case ic:g=\n14;break a;case jc:g=16;d=null;break a}t(\"130\",null==a?a:typeof a,\"\")}b=N(g,c,b,e);b.elementType=a;b.type=d;b.expirationTime=f;return b}function bf(a,b,c,d){a=N(7,a,d,b);a.expirationTime=c;return a}function cf(a,b,c,d){a=N(8,a,d,b);b=0===(b&1)?bc:fc;a.elementType=b;a.type=b;a.expirationTime=c;return a}function df(a,b,c){a=N(6,a,null,b);a.expirationTime=c;return a}\nfunction ef(a,b,c){b=N(4,null!==a.children?a.children:[],a.key,b);b.expirationTime=c;b.stateNode={containerInfo:a.containerInfo,pendingChildren:null,implementation:a.implementation};return b}function ff(a,b){a.didError=!1;var c=a.earliestPendingTime;0===c?a.earliestPendingTime=a.latestPendingTime=b:c<b?a.earliestPendingTime=b:a.latestPendingTime>b&&(a.latestPendingTime=b);gf(b,a)}\nfunction hf(a,b){a.didError=!1;a.latestPingedTime>=b&&(a.latestPingedTime=0);var c=a.earliestPendingTime,d=a.latestPendingTime;c===b?a.earliestPendingTime=d===b?a.latestPendingTime=0:d:d===b&&(a.latestPendingTime=c);c=a.earliestSuspendedTime;d=a.latestSuspendedTime;0===c?a.earliestSuspendedTime=a.latestSuspendedTime=b:c<b?a.earliestSuspendedTime=b:d>b&&(a.latestSuspendedTime=b);gf(b,a)}function jf(a,b){var c=a.earliestPendingTime;a=a.earliestSuspendedTime;c>b&&(b=c);a>b&&(b=a);return b}\nfunction gf(a,b){var c=b.earliestSuspendedTime,d=b.latestSuspendedTime,e=b.earliestPendingTime,f=b.latestPingedTime;e=0!==e?e:f;0===e&&(0===a||d<a)&&(e=d);a=e;0!==a&&c>a&&(a=c);b.nextExpirationTimeToWorkOn=e;b.expirationTime=a}var kf=!1;function lf(a){return{baseState:a,firstUpdate:null,lastUpdate:null,firstCapturedUpdate:null,lastCapturedUpdate:null,firstEffect:null,lastEffect:null,firstCapturedEffect:null,lastCapturedEffect:null}}\nfunction mf(a){return{baseState:a.baseState,firstUpdate:a.firstUpdate,lastUpdate:a.lastUpdate,firstCapturedUpdate:null,lastCapturedUpdate:null,firstEffect:null,lastEffect:null,firstCapturedEffect:null,lastCapturedEffect:null}}function nf(a){return{expirationTime:a,tag:0,payload:null,callback:null,next:null,nextEffect:null}}function of(a,b){null===a.lastUpdate?a.firstUpdate=a.lastUpdate=b:(a.lastUpdate.next=b,a.lastUpdate=b)}\nfunction pf(a,b){var c=a.alternate;if(null===c){var d=a.updateQueue;var e=null;null===d&&(d=a.updateQueue=lf(a.memoizedState))}else d=a.updateQueue,e=c.updateQueue,null===d?null===e?(d=a.updateQueue=lf(a.memoizedState),e=c.updateQueue=lf(c.memoizedState)):d=a.updateQueue=mf(e):null===e&&(e=c.updateQueue=mf(d));null===e||d===e?of(d,b):null===d.lastUpdate||null===e.lastUpdate?(of(d,b),of(e,b)):(of(d,b),e.lastUpdate=b)}\nfunction qf(a,b){var c=a.updateQueue;c=null===c?a.updateQueue=lf(a.memoizedState):rf(a,c);null===c.lastCapturedUpdate?c.firstCapturedUpdate=c.lastCapturedUpdate=b:(c.lastCapturedUpdate.next=b,c.lastCapturedUpdate=b)}function rf(a,b){var c=a.alternate;null!==c&&b===c.updateQueue&&(b=a.updateQueue=mf(b));return b}\nfunction sf(a,b,c,d,e,f){switch(c.tag){case 1:return a=c.payload,\"function\"===typeof a?a.call(f,d,e):a;case 3:a.effectTag=a.effectTag&-2049|64;case 0:a=c.payload;e=\"function\"===typeof a?a.call(f,d,e):a;if(null===e||void 0===e)break;return n({},d,e);case 2:kf=!0}return d}\nfunction tf(a,b,c,d,e){kf=!1;b=rf(a,b);for(var f=b.baseState,g=null,h=0,k=b.firstUpdate,l=f;null!==k;){var m=k.expirationTime;m<e?(null===g&&(g=k,f=l),h<m&&(h=m)):(l=sf(a,b,k,l,c,d),null!==k.callback&&(a.effectTag|=32,k.nextEffect=null,null===b.lastEffect?b.firstEffect=b.lastEffect=k:(b.lastEffect.nextEffect=k,b.lastEffect=k)));k=k.next}m=null;for(k=b.firstCapturedUpdate;null!==k;){var r=k.expirationTime;r<e?(null===m&&(m=k,null===g&&(f=l)),h<r&&(h=r)):(l=sf(a,b,k,l,c,d),null!==k.callback&&(a.effectTag|=\n32,k.nextEffect=null,null===b.lastCapturedEffect?b.firstCapturedEffect=b.lastCapturedEffect=k:(b.lastCapturedEffect.nextEffect=k,b.lastCapturedEffect=k)));k=k.next}null===g&&(b.lastUpdate=null);null===m?b.lastCapturedUpdate=null:a.effectTag|=32;null===g&&null===m&&(f=l);b.baseState=f;b.firstUpdate=g;b.firstCapturedUpdate=m;a.expirationTime=h;a.memoizedState=l}\nfunction uf(a,b,c){null!==b.firstCapturedUpdate&&(null!==b.lastUpdate&&(b.lastUpdate.next=b.firstCapturedUpdate,b.lastUpdate=b.lastCapturedUpdate),b.firstCapturedUpdate=b.lastCapturedUpdate=null);vf(b.firstEffect,c);b.firstEffect=b.lastEffect=null;vf(b.firstCapturedEffect,c);b.firstCapturedEffect=b.lastCapturedEffect=null}function vf(a,b){for(;null!==a;){var c=a.callback;if(null!==c){a.callback=null;var d=b;\"function\"!==typeof c?t(\"191\",c):void 0;c.call(d)}a=a.nextEffect}}\nfunction wf(a,b){return{value:a,source:b,stack:nc(b)}}var xf={current:null},yf=null,zf=null,Af=null;function Bf(a,b){var c=a.type._context;J(xf,c._currentValue,a);c._currentValue=b}function Cf(a){var b=xf.current;I(xf,a);a.type._context._currentValue=b}function Df(a){yf=a;Af=zf=null;a.firstContextDependency=null}\nfunction Ef(a,b){if(Af!==a&&!1!==b&&0!==b){if(\"number\"!==typeof b||1073741823===b)Af=a,b=1073741823;b={context:a,observedBits:b,next:null};null===zf?(null===yf?t(\"293\"):void 0,yf.firstContextDependency=zf=b):zf=zf.next=b}return a._currentValue}var Ff={},O={current:Ff},Gf={current:Ff},Hf={current:Ff};function If(a){a===Ff?t(\"174\"):void 0;return a}\nfunction Jf(a,b){J(Hf,b,a);J(Gf,a,a);J(O,Ff,a);var c=b.nodeType;switch(c){case 9:case 11:b=(b=b.documentElement)?b.namespaceURI:me(null,\"\");break;default:c=8===c?b.parentNode:b,b=c.namespaceURI||null,c=c.tagName,b=me(b,c)}I(O,a);J(O,b,a)}function Kf(a){I(O,a);I(Gf,a);I(Hf,a)}function Lf(a){If(Hf.current);var b=If(O.current);var c=me(b,a.type);b!==c&&(J(Gf,a,a),J(O,c,a))}function Mf(a){Gf.current===a&&(I(O,a),I(Gf,a))}\nfunction P(a,b){if(a&&a.defaultProps){b=n({},b);a=a.defaultProps;for(var c in a)void 0===b[c]&&(b[c]=a[c])}return b}function Nf(a){var b=a._result;switch(a._status){case 1:return b;case 2:throw b;case 0:throw b;default:throw a._status=0,b=a._ctor,b=b(),b.then(function(b){0===a._status&&(b=b.default,a._status=1,a._result=b)},function(b){0===a._status&&(a._status=2,a._result=b)}),a._result=b,b;}}var Of=Xb.ReactCurrentOwner,Pf=(new aa.Component).refs;\nfunction Qf(a,b,c,d){b=a.memoizedState;c=c(d,b);c=null===c||void 0===c?b:n({},b,c);a.memoizedState=c;d=a.updateQueue;null!==d&&0===a.expirationTime&&(d.baseState=c)}\nvar Vf={isMounted:function(a){return(a=a._reactInternalFiber)?2===kd(a):!1},enqueueSetState:function(a,b,c){a=a._reactInternalFiber;var d=Rf();d=Sf(d,a);var e=nf(d);e.payload=b;void 0!==c&&null!==c&&(e.callback=c);Tf();pf(a,e);Uf(a,d)},enqueueReplaceState:function(a,b,c){a=a._reactInternalFiber;var d=Rf();d=Sf(d,a);var e=nf(d);e.tag=1;e.payload=b;void 0!==c&&null!==c&&(e.callback=c);Tf();pf(a,e);Uf(a,d)},enqueueForceUpdate:function(a,b){a=a._reactInternalFiber;var c=Rf();c=Sf(c,a);var d=nf(c);d.tag=\n2;void 0!==b&&null!==b&&(d.callback=b);Tf();pf(a,d);Uf(a,c)}};function Wf(a,b,c,d,e,f,g){a=a.stateNode;return\"function\"===typeof a.shouldComponentUpdate?a.shouldComponentUpdate(d,f,g):b.prototype&&b.prototype.isPureReactComponent?!jd(c,d)||!jd(e,f):!0}\nfunction Xf(a,b,c){var d=!1,e=Ke;var f=b.contextType;\"object\"===typeof f&&null!==f?f=Of.currentDispatcher.readContext(f):(e=M(b)?Le:K.current,d=b.contextTypes,f=(d=null!==d&&void 0!==d)?Me(a,e):Ke);b=new b(c,f);a.memoizedState=null!==b.state&&void 0!==b.state?b.state:null;b.updater=Vf;a.stateNode=b;b._reactInternalFiber=a;d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=e,a.__reactInternalMemoizedMaskedChildContext=f);return b}\nfunction Zf(a,b,c,d){a=b.state;\"function\"===typeof b.componentWillReceiveProps&&b.componentWillReceiveProps(c,d);\"function\"===typeof b.UNSAFE_componentWillReceiveProps&&b.UNSAFE_componentWillReceiveProps(c,d);b.state!==a&&Vf.enqueueReplaceState(b,b.state,null)}\nfunction $f(a,b,c,d){var e=a.stateNode;e.props=c;e.state=a.memoizedState;e.refs=Pf;var f=b.contextType;\"object\"===typeof f&&null!==f?e.context=Of.currentDispatcher.readContext(f):(f=M(b)?Le:K.current,e.context=Me(a,f));f=a.updateQueue;null!==f&&(tf(a,f,c,e,d),e.state=a.memoizedState);f=b.getDerivedStateFromProps;\"function\"===typeof f&&(Qf(a,b,f,c),e.state=a.memoizedState);\"function\"===typeof b.getDerivedStateFromProps||\"function\"===typeof e.getSnapshotBeforeUpdate||\"function\"!==typeof e.UNSAFE_componentWillMount&&\n\"function\"!==typeof e.componentWillMount||(b=e.state,\"function\"===typeof e.componentWillMount&&e.componentWillMount(),\"function\"===typeof e.UNSAFE_componentWillMount&&e.UNSAFE_componentWillMount(),b!==e.state&&Vf.enqueueReplaceState(e,e.state,null),f=a.updateQueue,null!==f&&(tf(a,f,c,e,d),e.state=a.memoizedState));\"function\"===typeof e.componentDidMount&&(a.effectTag|=4)}var ag=Array.isArray;\nfunction bg(a,b,c){a=c.ref;if(null!==a&&\"function\"!==typeof a&&\"object\"!==typeof a){if(c._owner){c=c._owner;var d=void 0;c&&(1!==c.tag?t(\"289\"):void 0,d=c.stateNode);d?void 0:t(\"147\",a);var e=\"\"+a;if(null!==b&&null!==b.ref&&\"function\"===typeof b.ref&&b.ref._stringRef===e)return b.ref;b=function(a){var b=d.refs;b===Pf&&(b=d.refs={});null===a?delete b[e]:b[e]=a};b._stringRef=e;return b}\"string\"!==typeof a?t(\"284\"):void 0;c._owner?void 0:t(\"290\",a)}return a}\nfunction cg(a,b){\"textarea\"!==a.type&&t(\"31\",\"[object Object]\"===Object.prototype.toString.call(b)?\"object with keys {\"+Object.keys(b).join(\", \")+\"}\":b,\"\")}\nfunction dg(a){function b(b,c){if(a){var d=b.lastEffect;null!==d?(d.nextEffect=c,b.lastEffect=c):b.firstEffect=b.lastEffect=c;c.nextEffect=null;c.effectTag=8}}function c(c,d){if(!a)return null;for(;null!==d;)b(c,d),d=d.sibling;return null}function d(a,b){for(a=new Map;null!==b;)null!==b.key?a.set(b.key,b):a.set(b.index,b),b=b.sibling;return a}function e(a,b,c){a=$e(a,b,c);a.index=0;a.sibling=null;return a}function f(b,c,d){b.index=d;if(!a)return c;d=b.alternate;if(null!==d)return d=d.index,d<c?(b.effectTag=\n2,c):d;b.effectTag=2;return c}function g(b){a&&null===b.alternate&&(b.effectTag=2);return b}function h(a,b,c,d){if(null===b||6!==b.tag)return b=df(c,a.mode,d),b.return=a,b;b=e(b,c,d);b.return=a;return b}function k(a,b,c,d){if(null!==b&&b.elementType===c.type)return d=e(b,c.props,d),d.ref=bg(a,b,c),d.return=a,d;d=af(c.type,c.key,c.props,null,a.mode,d);d.ref=bg(a,b,c);d.return=a;return d}function l(a,b,c,d){if(null===b||4!==b.tag||b.stateNode.containerInfo!==c.containerInfo||b.stateNode.implementation!==\nc.implementation)return b=ef(c,a.mode,d),b.return=a,b;b=e(b,c.children||[],d);b.return=a;return b}function m(a,b,c,d,g){if(null===b||7!==b.tag)return b=bf(c,a.mode,d,g),b.return=a,b;b=e(b,c,d);b.return=a;return b}function r(a,b,c){if(\"string\"===typeof b||\"number\"===typeof b)return b=df(\"\"+b,a.mode,c),b.return=a,b;if(\"object\"===typeof b&&null!==b){switch(b.$$typeof){case Zb:return c=af(b.type,b.key,b.props,null,a.mode,c),c.ref=bg(a,null,b),c.return=a,c;case $b:return b=ef(b,a.mode,c),b.return=a,b}if(ag(b)||\nlc(b))return b=bf(b,a.mode,c,null),b.return=a,b;cg(a,b)}return null}function w(a,b,c,d){var e=null!==b?b.key:null;if(\"string\"===typeof c||\"number\"===typeof c)return null!==e?null:h(a,b,\"\"+c,d);if(\"object\"===typeof c&&null!==c){switch(c.$$typeof){case Zb:return c.key===e?c.type===ac?m(a,b,c.props.children,d,e):k(a,b,c,d):null;case $b:return c.key===e?l(a,b,c,d):null}if(ag(c)||lc(c))return null!==e?null:m(a,b,c,d,null);cg(a,c)}return null}function y(a,b,c,d,e){if(\"string\"===typeof d||\"number\"===typeof d)return a=\na.get(c)||null,h(b,a,\"\"+d,e);if(\"object\"===typeof d&&null!==d){switch(d.$$typeof){case Zb:return a=a.get(null===d.key?c:d.key)||null,d.type===ac?m(b,a,d.props.children,e,d.key):k(b,a,d,e);case $b:return a=a.get(null===d.key?c:d.key)||null,l(b,a,d,e)}if(ag(d)||lc(d))return a=a.get(c)||null,m(b,a,d,e,null);cg(b,d)}return null}function B(e,g,h,k){for(var l=null,q=null,m=g,u=g=0,p=null;null!==m&&u<h.length;u++){m.index>u?(p=m,m=null):p=m.sibling;var v=w(e,m,h[u],k);if(null===v){null===m&&(m=p);break}a&&\nm&&null===v.alternate&&b(e,m);g=f(v,g,u);null===q?l=v:q.sibling=v;q=v;m=p}if(u===h.length)return c(e,m),l;if(null===m){for(;u<h.length;u++)if(m=r(e,h[u],k))g=f(m,g,u),null===q?l=m:q.sibling=m,q=m;return l}for(m=d(e,m);u<h.length;u++)if(p=y(m,e,u,h[u],k))a&&null!==p.alternate&&m.delete(null===p.key?u:p.key),g=f(p,g,u),null===q?l=p:q.sibling=p,q=p;a&&m.forEach(function(a){return b(e,a)});return l}function R(e,g,h,k){var l=lc(h);\"function\"!==typeof l?t(\"150\"):void 0;h=l.call(h);null==h?t(\"151\"):void 0;\nfor(var m=l=null,q=g,u=g=0,p=null,v=h.next();null!==q&&!v.done;u++,v=h.next()){q.index>u?(p=q,q=null):p=q.sibling;var A=w(e,q,v.value,k);if(null===A){q||(q=p);break}a&&q&&null===A.alternate&&b(e,q);g=f(A,g,u);null===m?l=A:m.sibling=A;m=A;q=p}if(v.done)return c(e,q),l;if(null===q){for(;!v.done;u++,v=h.next())v=r(e,v.value,k),null!==v&&(g=f(v,g,u),null===m?l=v:m.sibling=v,m=v);return l}for(q=d(e,q);!v.done;u++,v=h.next())v=y(q,e,u,v.value,k),null!==v&&(a&&null!==v.alternate&&q.delete(null===v.key?u:\nv.key),g=f(v,g,u),null===m?l=v:m.sibling=v,m=v);a&&q.forEach(function(a){return b(e,a)});return l}return function(a,d,f,h){var k=\"object\"===typeof f&&null!==f&&f.type===ac&&null===f.key;k&&(f=f.props.children);var l=\"object\"===typeof f&&null!==f;if(l)switch(f.$$typeof){case Zb:a:{l=f.key;for(k=d;null!==k;){if(k.key===l)if(7===k.tag?f.type===ac:k.elementType===f.type){c(a,k.sibling);d=e(k,f.type===ac?f.props.children:f.props,h);d.ref=bg(a,k,f);d.return=a;a=d;break a}else{c(a,k);break}else b(a,k);k=\nk.sibling}f.type===ac?(d=bf(f.props.children,a.mode,h,f.key),d.return=a,a=d):(h=af(f.type,f.key,f.props,null,a.mode,h),h.ref=bg(a,d,f),h.return=a,a=h)}return g(a);case $b:a:{for(k=f.key;null!==d;){if(d.key===k)if(4===d.tag&&d.stateNode.containerInfo===f.containerInfo&&d.stateNode.implementation===f.implementation){c(a,d.sibling);d=e(d,f.children||[],h);d.return=a;a=d;break a}else{c(a,d);break}else b(a,d);d=d.sibling}d=ef(f,a.mode,h);d.return=a;a=d}return g(a)}if(\"string\"===typeof f||\"number\"===typeof f)return f=\n\"\"+f,null!==d&&6===d.tag?(c(a,d.sibling),d=e(d,f,h),d.return=a,a=d):(c(a,d),d=df(f,a.mode,h),d.return=a,a=d),g(a);if(ag(f))return B(a,d,f,h);if(lc(f))return R(a,d,f,h);l&&cg(a,f);if(\"undefined\"===typeof f&&!k)switch(a.tag){case 1:case 0:h=a.type,t(\"152\",h.displayName||h.name||\"Component\")}return c(a,d)}}var eg=dg(!0),fg=dg(!1),gg=null,hg=null,ig=!1;\nfunction jg(a,b){var c=N(5,null,null,0);c.elementType=\"DELETED\";c.type=\"DELETED\";c.stateNode=b;c.return=a;c.effectTag=8;null!==a.lastEffect?(a.lastEffect.nextEffect=c,a.lastEffect=c):a.firstEffect=a.lastEffect=c}function kg(a,b){switch(a.tag){case 5:var c=a.type;b=1!==b.nodeType||c.toLowerCase()!==b.nodeName.toLowerCase()?null:b;return null!==b?(a.stateNode=b,!0):!1;case 6:return b=\"\"===a.pendingProps||3!==b.nodeType?null:b,null!==b?(a.stateNode=b,!0):!1;default:return!1}}\nfunction lg(a){if(ig){var b=hg;if(b){var c=b;if(!kg(a,b)){b=Ge(c);if(!b||!kg(a,b)){a.effectTag|=2;ig=!1;gg=a;return}jg(gg,c)}gg=a;hg=He(b)}else a.effectTag|=2,ig=!1,gg=a}}function mg(a){for(a=a.return;null!==a&&5!==a.tag&&3!==a.tag;)a=a.return;gg=a}function ng(a){if(a!==gg)return!1;if(!ig)return mg(a),ig=!0,!1;var b=a.type;if(5!==a.tag||\"head\"!==b&&\"body\"!==b&&!Ce(b,a.memoizedProps))for(b=hg;b;)jg(a,b),b=Ge(b);mg(a);hg=gg?Ge(a.stateNode):null;return!0}function og(){hg=gg=null;ig=!1}var pg=Xb.ReactCurrentOwner;\nfunction Q(a,b,c,d){b.child=null===a?fg(b,null,c,d):eg(b,a.child,c,d)}function qg(a,b,c,d,e){c=c.render;var f=b.ref;Df(b,e);d=c(d,f);b.effectTag|=1;Q(a,b,d,e);return b.child}\nfunction rg(a,b,c,d,e,f){if(null===a){var g=c.type;if(\"function\"===typeof g&&!Ye(g)&&void 0===g.defaultProps&&null===c.compare&&void 0===c.defaultProps)return b.tag=15,b.type=g,sg(a,b,g,d,e,f);a=af(c.type,null,d,null,b.mode,f);a.ref=b.ref;a.return=b;return b.child=a}g=a.child;if(e<f&&(e=g.memoizedProps,c=c.compare,c=null!==c?c:jd,c(e,d)&&a.ref===b.ref))return tg(a,b,f);b.effectTag|=1;a=$e(g,d,f);a.ref=b.ref;a.return=b;return b.child=a}\nfunction sg(a,b,c,d,e,f){return null!==a&&e<f&&jd(a.memoizedProps,d)&&a.ref===b.ref?tg(a,b,f):ug(a,b,c,d,f)}function vg(a,b){var c=b.ref;if(null===a&&null!==c||null!==a&&a.ref!==c)b.effectTag|=128}function ug(a,b,c,d,e){var f=M(c)?Le:K.current;f=Me(b,f);Df(b,e);c=c(d,f);b.effectTag|=1;Q(a,b,c,e);return b.child}\nfunction wg(a,b,c,d,e){if(M(c)){var f=!0;Re(b)}else f=!1;Df(b,e);if(null===b.stateNode)null!==a&&(a.alternate=null,b.alternate=null,b.effectTag|=2),Xf(b,c,d,e),$f(b,c,d,e),d=!0;else if(null===a){var g=b.stateNode,h=b.memoizedProps;g.props=h;var k=g.context,l=c.contextType;\"object\"===typeof l&&null!==l?l=Of.currentDispatcher.readContext(l):(l=M(c)?Le:K.current,l=Me(b,l));var m=c.getDerivedStateFromProps,r=\"function\"===typeof m||\"function\"===typeof g.getSnapshotBeforeUpdate;r||\"function\"!==typeof g.UNSAFE_componentWillReceiveProps&&\n\"function\"!==typeof g.componentWillReceiveProps||(h!==d||k!==l)&&Zf(b,g,d,l);kf=!1;var w=b.memoizedState;k=g.state=w;var y=b.updateQueue;null!==y&&(tf(b,y,d,g,e),k=b.memoizedState);h!==d||w!==k||L.current||kf?(\"function\"===typeof m&&(Qf(b,c,m,d),k=b.memoizedState),(h=kf||Wf(b,c,h,d,w,k,l))?(r||\"function\"!==typeof g.UNSAFE_componentWillMount&&\"function\"!==typeof g.componentWillMount||(\"function\"===typeof g.componentWillMount&&g.componentWillMount(),\"function\"===typeof g.UNSAFE_componentWillMount&&\ng.UNSAFE_componentWillMount()),\"function\"===typeof g.componentDidMount&&(b.effectTag|=4)):(\"function\"===typeof g.componentDidMount&&(b.effectTag|=4),b.memoizedProps=d,b.memoizedState=k),g.props=d,g.state=k,g.context=l,d=h):(\"function\"===typeof g.componentDidMount&&(b.effectTag|=4),d=!1)}else g=b.stateNode,h=b.memoizedProps,g.props=b.type===b.elementType?h:P(b.type,h),k=g.context,l=c.contextType,\"object\"===typeof l&&null!==l?l=Of.currentDispatcher.readContext(l):(l=M(c)?Le:K.current,l=Me(b,l)),m=c.getDerivedStateFromProps,\n(r=\"function\"===typeof m||\"function\"===typeof g.getSnapshotBeforeUpdate)||\"function\"!==typeof g.UNSAFE_componentWillReceiveProps&&\"function\"!==typeof g.componentWillReceiveProps||(h!==d||k!==l)&&Zf(b,g,d,l),kf=!1,k=b.memoizedState,w=g.state=k,y=b.updateQueue,null!==y&&(tf(b,y,d,g,e),w=b.memoizedState),h!==d||k!==w||L.current||kf?(\"function\"===typeof m&&(Qf(b,c,m,d),w=b.memoizedState),(m=kf||Wf(b,c,h,d,k,w,l))?(r||\"function\"!==typeof g.UNSAFE_componentWillUpdate&&\"function\"!==typeof g.componentWillUpdate||\n(\"function\"===typeof g.componentWillUpdate&&g.componentWillUpdate(d,w,l),\"function\"===typeof g.UNSAFE_componentWillUpdate&&g.UNSAFE_componentWillUpdate(d,w,l)),\"function\"===typeof g.componentDidUpdate&&(b.effectTag|=4),\"function\"===typeof g.getSnapshotBeforeUpdate&&(b.effectTag|=256)):(\"function\"!==typeof g.componentDidUpdate||h===a.memoizedProps&&k===a.memoizedState||(b.effectTag|=4),\"function\"!==typeof g.getSnapshotBeforeUpdate||h===a.memoizedProps&&k===a.memoizedState||(b.effectTag|=256),b.memoizedProps=\nd,b.memoizedState=w),g.props=d,g.state=w,g.context=l,d=m):(\"function\"!==typeof g.componentDidUpdate||h===a.memoizedProps&&k===a.memoizedState||(b.effectTag|=4),\"function\"!==typeof g.getSnapshotBeforeUpdate||h===a.memoizedProps&&k===a.memoizedState||(b.effectTag|=256),d=!1);return xg(a,b,c,d,f,e)}\nfunction xg(a,b,c,d,e,f){vg(a,b);var g=0!==(b.effectTag&64);if(!d&&!g)return e&&Se(b,c,!1),tg(a,b,f);d=b.stateNode;pg.current=b;var h=g&&\"function\"!==typeof c.getDerivedStateFromError?null:d.render();b.effectTag|=1;null!==a&&g?(b.child=eg(b,a.child,null,f),b.child=eg(b,null,h,f)):Q(a,b,h,f);b.memoizedState=d.state;e&&Se(b,c,!0);return b.child}function yg(a){var b=a.stateNode;b.pendingContext?Pe(a,b.pendingContext,b.pendingContext!==b.context):b.context&&Pe(a,b.context,!1);Jf(a,b.containerInfo)}\nfunction zg(a,b,c){var d=b.mode,e=b.pendingProps,f=b.memoizedState;if(0===(b.effectTag&64)){f=null;var g=!1}else f={timedOutAt:null!==f?f.timedOutAt:0},g=!0,b.effectTag&=-65;if(null===a)if(g){var h=e.fallback;a=bf(null,d,0,null);0===(b.mode&1)&&(a.child=null!==b.memoizedState?b.child.child:b.child);d=bf(h,d,c,null);a.sibling=d;c=a;c.return=d.return=b}else c=d=fg(b,null,e.children,c);else null!==a.memoizedState?(d=a.child,h=d.sibling,g?(c=e.fallback,e=$e(d,d.pendingProps,0),0===(b.mode&1)&&(g=null!==\nb.memoizedState?b.child.child:b.child,g!==d.child&&(e.child=g)),d=e.sibling=$e(h,c,h.expirationTime),c=e,e.childExpirationTime=0,c.return=d.return=b):c=d=eg(b,d.child,e.children,c)):(h=a.child,g?(g=e.fallback,e=bf(null,d,0,null),e.child=h,0===(b.mode&1)&&(e.child=null!==b.memoizedState?b.child.child:b.child),d=e.sibling=bf(g,d,c,null),d.effectTag|=2,c=e,e.childExpirationTime=0,c.return=d.return=b):d=c=eg(b,h,e.children,c)),b.stateNode=a.stateNode;b.memoizedState=f;b.child=c;return d}\nfunction tg(a,b,c){null!==a&&(b.firstContextDependency=a.firstContextDependency);if(b.childExpirationTime<c)return null;null!==a&&b.child!==a.child?t(\"153\"):void 0;if(null!==b.child){a=b.child;c=$e(a,a.pendingProps,a.expirationTime);b.child=c;for(c.return=b;null!==a.sibling;)a=a.sibling,c=c.sibling=$e(a,a.pendingProps,a.expirationTime),c.return=b;c.sibling=null}return b.child}\nfunction Ag(a,b,c){var d=b.expirationTime;if(null!==a&&a.memoizedProps===b.pendingProps&&!L.current&&d<c){switch(b.tag){case 3:yg(b);og();break;case 5:Lf(b);break;case 1:M(b.type)&&Re(b);break;case 4:Jf(b,b.stateNode.containerInfo);break;case 10:Bf(b,b.memoizedProps.value);break;case 13:if(null!==b.memoizedState){d=b.child.childExpirationTime;if(0!==d&&d>=c)return zg(a,b,c);b=tg(a,b,c);return null!==b?b.sibling:null}}return tg(a,b,c)}b.expirationTime=0;switch(b.tag){case 2:d=b.elementType;null!==\na&&(a.alternate=null,b.alternate=null,b.effectTag|=2);a=b.pendingProps;var e=Me(b,K.current);Df(b,c);e=d(a,e);b.effectTag|=1;if(\"object\"===typeof e&&null!==e&&\"function\"===typeof e.render&&void 0===e.$$typeof){b.tag=1;if(M(d)){var f=!0;Re(b)}else f=!1;b.memoizedState=null!==e.state&&void 0!==e.state?e.state:null;var g=d.getDerivedStateFromProps;\"function\"===typeof g&&Qf(b,d,g,a);e.updater=Vf;b.stateNode=e;e._reactInternalFiber=b;$f(b,d,a,c);b=xg(null,b,d,!0,f,c)}else b.tag=0,Q(null,b,e,c),b=b.child;\nreturn b;case 16:e=b.elementType;null!==a&&(a.alternate=null,b.alternate=null,b.effectTag|=2);f=b.pendingProps;a=Nf(e);b.type=a;e=b.tag=Ze(a);f=P(a,f);g=void 0;switch(e){case 0:g=ug(null,b,a,f,c);break;case 1:g=wg(null,b,a,f,c);break;case 11:g=qg(null,b,a,f,c);break;case 14:g=rg(null,b,a,P(a.type,f),d,c);break;default:t(\"306\",a,\"\")}return g;case 0:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:P(d,e),ug(a,b,d,e,c);case 1:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:P(d,e),wg(a,b,\nd,e,c);case 3:yg(b);d=b.updateQueue;null===d?t(\"282\"):void 0;e=b.memoizedState;e=null!==e?e.element:null;tf(b,d,b.pendingProps,null,c);d=b.memoizedState.element;if(d===e)og(),b=tg(a,b,c);else{e=b.stateNode;if(e=(null===a||null===a.child)&&e.hydrate)hg=He(b.stateNode.containerInfo),gg=b,e=ig=!0;e?(b.effectTag|=2,b.child=fg(b,null,d,c)):(Q(a,b,d,c),og());b=b.child}return b;case 5:return Lf(b),null===a&&lg(b),d=b.type,e=b.pendingProps,f=null!==a?a.memoizedProps:null,g=e.children,Ce(d,e)?g=null:null!==\nf&&Ce(d,f)&&(b.effectTag|=16),vg(a,b),1!==c&&b.mode&1&&e.hidden?(b.expirationTime=1,b=null):(Q(a,b,g,c),b=b.child),b;case 6:return null===a&&lg(b),null;case 13:return zg(a,b,c);case 4:return Jf(b,b.stateNode.containerInfo),d=b.pendingProps,null===a?b.child=eg(b,null,d,c):Q(a,b,d,c),b.child;case 11:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:P(d,e),qg(a,b,d,e,c);case 7:return Q(a,b,b.pendingProps,c),b.child;case 8:return Q(a,b,b.pendingProps.children,c),b.child;case 12:return Q(a,b,b.pendingProps.children,\nc),b.child;case 10:a:{d=b.type._context;e=b.pendingProps;g=b.memoizedProps;f=e.value;Bf(b,f);if(null!==g){var h=g.value;f=h===f&&(0!==h||1/h===1/f)||h!==h&&f!==f?0:(\"function\"===typeof d._calculateChangedBits?d._calculateChangedBits(h,f):1073741823)|0;if(0===f){if(g.children===e.children&&!L.current){b=tg(a,b,c);break a}}else for(g=b.child,null!==g&&(g.return=b);null!==g;){h=g.firstContextDependency;if(null!==h){do{if(h.context===d&&0!==(h.observedBits&f)){if(1===g.tag){var k=nf(c);k.tag=2;pf(g,k)}g.expirationTime<\nc&&(g.expirationTime=c);k=g.alternate;null!==k&&k.expirationTime<c&&(k.expirationTime=c);for(var l=g.return;null!==l;){k=l.alternate;if(l.childExpirationTime<c)l.childExpirationTime=c,null!==k&&k.childExpirationTime<c&&(k.childExpirationTime=c);else if(null!==k&&k.childExpirationTime<c)k.childExpirationTime=c;else break;l=l.return}}k=g.child;h=h.next}while(null!==h)}else k=10===g.tag?g.type===b.type?null:g.child:g.child;if(null!==k)k.return=g;else for(k=g;null!==k;){if(k===b){k=null;break}g=k.sibling;\nif(null!==g){g.return=k.return;k=g;break}k=k.return}g=k}}Q(a,b,e.children,c);b=b.child}return b;case 9:return e=b.type,f=b.pendingProps,d=f.children,Df(b,c),e=Ef(e,f.unstable_observedBits),d=d(e),b.effectTag|=1,Q(a,b,d,c),b.child;case 14:return e=b.type,f=P(e,b.pendingProps),f=P(e.type,f),rg(a,b,e,f,d,c);case 15:return sg(a,b,b.type,b.pendingProps,d,c);case 17:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:P(d,e),null!==a&&(a.alternate=null,b.alternate=null,b.effectTag|=2),b.tag=1,M(d)?(a=\n!0,Re(b)):a=!1,Df(b,c),Xf(b,d,e,c),$f(b,d,e,c),xg(null,b,d,!0,a,c);default:t(\"156\")}}function Bg(a){a.effectTag|=4}var Cg=void 0,Gg=void 0,Hg=void 0,Ig=void 0;Cg=function(a,b){for(var c=b.child;null!==c;){if(5===c.tag||6===c.tag)a.appendChild(c.stateNode);else if(4!==c.tag&&null!==c.child){c.child.return=c;c=c.child;continue}if(c===b)break;for(;null===c.sibling;){if(null===c.return||c.return===b)return;c=c.return}c.sibling.return=c.return;c=c.sibling}};Gg=function(){};\nHg=function(a,b,c,d,e){var f=a.memoizedProps;if(f!==d){var g=b.stateNode;If(O.current);a=null;switch(c){case \"input\":f=zc(g,f);d=zc(g,d);a=[];break;case \"option\":f=ee(g,f);d=ee(g,d);a=[];break;case \"select\":f=n({},f,{value:void 0});d=n({},d,{value:void 0});a=[];break;case \"textarea\":f=ge(g,f);d=ge(g,d);a=[];break;default:\"function\"!==typeof f.onClick&&\"function\"===typeof d.onClick&&(g.onclick=ye)}ve(c,d);g=c=void 0;var h=null;for(c in f)if(!d.hasOwnProperty(c)&&f.hasOwnProperty(c)&&null!=f[c])if(\"style\"===\nc){var k=f[c];for(g in k)k.hasOwnProperty(g)&&(h||(h={}),h[g]=\"\")}else\"dangerouslySetInnerHTML\"!==c&&\"children\"!==c&&\"suppressContentEditableWarning\"!==c&&\"suppressHydrationWarning\"!==c&&\"autoFocus\"!==c&&(sa.hasOwnProperty(c)?a||(a=[]):(a=a||[]).push(c,null));for(c in d){var l=d[c];k=null!=f?f[c]:void 0;if(d.hasOwnProperty(c)&&l!==k&&(null!=l||null!=k))if(\"style\"===c)if(k){for(g in k)!k.hasOwnProperty(g)||l&&l.hasOwnProperty(g)||(h||(h={}),h[g]=\"\");for(g in l)l.hasOwnProperty(g)&&k[g]!==l[g]&&(h||\n(h={}),h[g]=l[g])}else h||(a||(a=[]),a.push(c,h)),h=l;else\"dangerouslySetInnerHTML\"===c?(l=l?l.__html:void 0,k=k?k.__html:void 0,null!=l&&k!==l&&(a=a||[]).push(c,\"\"+l)):\"children\"===c?k===l||\"string\"!==typeof l&&\"number\"!==typeof l||(a=a||[]).push(c,\"\"+l):\"suppressContentEditableWarning\"!==c&&\"suppressHydrationWarning\"!==c&&(sa.hasOwnProperty(c)?(null!=l&&xe(e,c),a||k===l||(a=[])):(a=a||[]).push(c,l))}h&&(a=a||[]).push(\"style\",h);e=a;(b.updateQueue=e)&&Bg(b)}};Ig=function(a,b,c,d){c!==d&&Bg(b)};\nvar Jg=\"function\"===typeof WeakSet?WeakSet:Set;function Kg(a,b){var c=b.source,d=b.stack;null===d&&null!==c&&(d=nc(c));null!==c&&mc(c.type);b=b.value;null!==a&&1===a.tag&&mc(a.type);try{console.error(b)}catch(e){setTimeout(function(){throw e;})}}function Lg(a){var b=a.ref;if(null!==b)if(\"function\"===typeof b)try{b(null)}catch(c){Mg(a,c)}else b.current=null}\nfunction Ng(a,b){for(var c=a;;){if(5===c.tag){var d=c.stateNode;if(b)d.style.display=\"none\";else{d=c.stateNode;var e=c.memoizedProps.style;e=void 0!==e&&null!==e&&e.hasOwnProperty(\"display\")?e.display:null;d.style.display=se(\"display\",e)}}else if(6===c.tag)c.stateNode.nodeValue=b?\"\":c.memoizedProps;else if(13===c.tag&&null!==c.memoizedState){d=c.child.sibling;d.return=c;c=d;continue}else if(null!==c.child){c.child.return=c;c=c.child;continue}if(c===a)break;for(;null===c.sibling;){if(null===c.return||\nc.return===a)return;c=c.return}c.sibling.return=c.return;c=c.sibling}}\nfunction Og(a){\"function\"===typeof Ue&&Ue(a);switch(a.tag){case 0:case 11:case 14:case 15:var b=a.updateQueue;if(null!==b&&(b=b.lastEffect,null!==b)){var c=b=b.next;do{var d=c.destroy;if(null!==d){var e=a;try{d()}catch(f){Mg(e,f)}}c=c.next}while(c!==b)}break;case 1:Lg(a);b=a.stateNode;if(\"function\"===typeof b.componentWillUnmount)try{b.props=a.memoizedProps,b.state=a.memoizedState,b.componentWillUnmount()}catch(f){Mg(a,f)}break;case 5:Lg(a);break;case 4:Pg(a)}}\nfunction Qg(a){return 5===a.tag||3===a.tag||4===a.tag}\nfunction Rg(a){a:{for(var b=a.return;null!==b;){if(Qg(b)){var c=b;break a}b=b.return}t(\"160\");c=void 0}var d=b=void 0;switch(c.tag){case 5:b=c.stateNode;d=!1;break;case 3:b=c.stateNode.containerInfo;d=!0;break;case 4:b=c.stateNode.containerInfo;d=!0;break;default:t(\"161\")}c.effectTag&16&&(pe(b,\"\"),c.effectTag&=-17);a:b:for(c=a;;){for(;null===c.sibling;){if(null===c.return||Qg(c.return)){c=null;break a}c=c.return}c.sibling.return=c.return;for(c=c.sibling;5!==c.tag&&6!==c.tag;){if(c.effectTag&2)continue b;\nif(null===c.child||4===c.tag)continue b;else c.child.return=c,c=c.child}if(!(c.effectTag&2)){c=c.stateNode;break a}}for(var e=a;;){if(5===e.tag||6===e.tag)if(c)if(d){var f=b,g=e.stateNode,h=c;8===f.nodeType?f.parentNode.insertBefore(g,h):f.insertBefore(g,h)}else b.insertBefore(e.stateNode,c);else d?(g=b,h=e.stateNode,8===g.nodeType?(f=g.parentNode,f.insertBefore(h,g)):(f=g,f.appendChild(h)),g=g._reactRootContainer,null!==g&&void 0!==g||null!==f.onclick||(f.onclick=ye)):b.appendChild(e.stateNode);\nelse if(4!==e.tag&&null!==e.child){e.child.return=e;e=e.child;continue}if(e===a)break;for(;null===e.sibling;){if(null===e.return||e.return===a)return;e=e.return}e.sibling.return=e.return;e=e.sibling}}\nfunction Pg(a){for(var b=a,c=!1,d=void 0,e=void 0;;){if(!c){c=b.return;a:for(;;){null===c?t(\"160\"):void 0;switch(c.tag){case 5:d=c.stateNode;e=!1;break a;case 3:d=c.stateNode.containerInfo;e=!0;break a;case 4:d=c.stateNode.containerInfo;e=!0;break a}c=c.return}c=!0}if(5===b.tag||6===b.tag){a:for(var f=b,g=f;;)if(Og(g),null!==g.child&&4!==g.tag)g.child.return=g,g=g.child;else{if(g===f)break;for(;null===g.sibling;){if(null===g.return||g.return===f)break a;g=g.return}g.sibling.return=g.return;g=g.sibling}e?\n(f=d,g=b.stateNode,8===f.nodeType?f.parentNode.removeChild(g):f.removeChild(g)):d.removeChild(b.stateNode)}else if(4===b.tag?(d=b.stateNode.containerInfo,e=!0):Og(b),null!==b.child){b.child.return=b;b=b.child;continue}if(b===a)break;for(;null===b.sibling;){if(null===b.return||b.return===a)return;b=b.return;4===b.tag&&(c=!1)}b.sibling.return=b.return;b=b.sibling}}\nfunction Sg(a,b){switch(b.tag){case 0:case 11:case 14:case 15:break;case 1:break;case 5:var c=b.stateNode;if(null!=c){var d=b.memoizedProps;a=null!==a?a.memoizedProps:d;var e=b.type,f=b.updateQueue;b.updateQueue=null;null!==f&&Fe(c,f,e,a,d,b)}break;case 6:null===b.stateNode?t(\"162\"):void 0;b.stateNode.nodeValue=b.memoizedProps;break;case 3:break;case 12:break;case 13:c=b.memoizedState;d=void 0;a=b;null===c?d=!1:(d=!0,a=b.child,0===c.timedOutAt&&(c.timedOutAt=Rf()));null!==a&&Ng(a,d);c=b.updateQueue;\nif(null!==c){b.updateQueue=null;var g=b.stateNode;null===g&&(g=b.stateNode=new Jg);c.forEach(function(a){var c=Tg.bind(null,b,a);g.has(a)||(g.add(a),a.then(c,c))})}break;case 17:break;default:t(\"163\")}}var Ug=\"function\"===typeof WeakMap?WeakMap:Map;function Vg(a,b,c){c=nf(c);c.tag=3;c.payload={element:null};var d=b.value;c.callback=function(){Wg(d);Kg(a,b)};return c}\nfunction Xg(a,b,c){c=nf(c);c.tag=3;var d=a.type.getDerivedStateFromError;if(\"function\"===typeof d){var e=b.value;c.payload=function(){return d(e)}}var f=a.stateNode;null!==f&&\"function\"===typeof f.componentDidCatch&&(c.callback=function(){\"function\"!==typeof d&&(null===Yg?Yg=new Set([this]):Yg.add(this));var c=b.value,e=b.stack;Kg(a,b);this.componentDidCatch(c,{componentStack:null!==e?e:\"\"})});return c}\nfunction Zg(a){switch(a.tag){case 1:M(a.type)&&Ne(a);var b=a.effectTag;return b&2048?(a.effectTag=b&-2049|64,a):null;case 3:return Kf(a),Oe(a),b=a.effectTag,0!==(b&64)?t(\"285\"):void 0,a.effectTag=b&-2049|64,a;case 5:return Mf(a),null;case 13:return b=a.effectTag,b&2048?(a.effectTag=b&-2049|64,a):null;case 4:return Kf(a),null;case 10:return Cf(a),null;default:return null}}\nvar $g={readContext:Ef},ah=Xb.ReactCurrentOwner,bh=1073741822,ch=0,dh=!1,S=null,T=null,U=0,eh=-1,fh=!1,V=null,gh=!1,hh=null,ih=null,Yg=null;function jh(){if(null!==S)for(var a=S.return;null!==a;){var b=a;switch(b.tag){case 1:var c=b.type.childContextTypes;null!==c&&void 0!==c&&Ne(b);break;case 3:Kf(b);Oe(b);break;case 5:Mf(b);break;case 4:Kf(b);break;case 10:Cf(b)}a=a.return}T=null;U=0;eh=-1;fh=!1;S=null}function Tf(){null!==ih&&(ba.unstable_cancelCallback(hh),ih())}\nfunction kh(a){for(;;){var b=a.alternate,c=a.return,d=a.sibling;if(0===(a.effectTag&1024)){S=a;a:{var e=b;b=a;var f=U;var g=b.pendingProps;switch(b.tag){case 2:break;case 16:break;case 15:case 0:break;case 1:M(b.type)&&Ne(b);break;case 3:Kf(b);Oe(b);g=b.stateNode;g.pendingContext&&(g.context=g.pendingContext,g.pendingContext=null);if(null===e||null===e.child)ng(b),b.effectTag&=-3;Gg(b);break;case 5:Mf(b);var h=If(Hf.current);f=b.type;if(null!==e&&null!=b.stateNode)Hg(e,b,f,g,h),e.ref!==b.ref&&(b.effectTag|=\n128);else if(g){var k=If(O.current);if(ng(b)){g=b;e=g.stateNode;var l=g.type,m=g.memoizedProps,r=h;e[Ga]=g;e[Ha]=m;f=void 0;h=l;switch(h){case \"iframe\":case \"object\":H(\"load\",e);break;case \"video\":case \"audio\":for(l=0;l<bb.length;l++)H(bb[l],e);break;case \"source\":H(\"error\",e);break;case \"img\":case \"image\":case \"link\":H(\"error\",e);H(\"load\",e);break;case \"form\":H(\"reset\",e);H(\"submit\",e);break;case \"details\":H(\"toggle\",e);break;case \"input\":Ac(e,m);H(\"invalid\",e);xe(r,\"onChange\");break;case \"select\":e._wrapperState=\n{wasMultiple:!!m.multiple};H(\"invalid\",e);xe(r,\"onChange\");break;case \"textarea\":he(e,m),H(\"invalid\",e),xe(r,\"onChange\")}ve(h,m);l=null;for(f in m)m.hasOwnProperty(f)&&(k=m[f],\"children\"===f?\"string\"===typeof k?e.textContent!==k&&(l=[\"children\",k]):\"number\"===typeof k&&e.textContent!==\"\"+k&&(l=[\"children\",\"\"+k]):sa.hasOwnProperty(f)&&null!=k&&xe(r,f));switch(h){case \"input\":Vb(e);Ec(e,m,!0);break;case \"textarea\":Vb(e);je(e,m);break;case \"select\":case \"option\":break;default:\"function\"===typeof m.onClick&&\n(e.onclick=ye)}f=l;g.updateQueue=f;g=null!==f?!0:!1;g&&Bg(b)}else{m=b;e=f;r=g;l=9===h.nodeType?h:h.ownerDocument;k===ke.html&&(k=le(e));k===ke.html?\"script\"===e?(e=l.createElement(\"div\"),e.innerHTML=\"<script>\\x3c/script>\",l=e.removeChild(e.firstChild)):\"string\"===typeof r.is?l=l.createElement(e,{is:r.is}):(l=l.createElement(e),\"select\"===e&&r.multiple&&(l.multiple=!0)):l=l.createElementNS(k,e);e=l;e[Ga]=m;e[Ha]=g;Cg(e,b,!1,!1);r=e;l=f;m=g;var w=h,y=we(l,m);switch(l){case \"iframe\":case \"object\":H(\"load\",\nr);h=m;break;case \"video\":case \"audio\":for(h=0;h<bb.length;h++)H(bb[h],r);h=m;break;case \"source\":H(\"error\",r);h=m;break;case \"img\":case \"image\":case \"link\":H(\"error\",r);H(\"load\",r);h=m;break;case \"form\":H(\"reset\",r);H(\"submit\",r);h=m;break;case \"details\":H(\"toggle\",r);h=m;break;case \"input\":Ac(r,m);h=zc(r,m);H(\"invalid\",r);xe(w,\"onChange\");break;case \"option\":h=ee(r,m);break;case \"select\":r._wrapperState={wasMultiple:!!m.multiple};h=n({},m,{value:void 0});H(\"invalid\",r);xe(w,\"onChange\");break;case \"textarea\":he(r,\nm);h=ge(r,m);H(\"invalid\",r);xe(w,\"onChange\");break;default:h=m}ve(l,h);k=void 0;var B=l,R=r,v=h;for(k in v)if(v.hasOwnProperty(k)){var q=v[k];\"style\"===k?te(R,q):\"dangerouslySetInnerHTML\"===k?(q=q?q.__html:void 0,null!=q&&oe(R,q)):\"children\"===k?\"string\"===typeof q?(\"textarea\"!==B||\"\"!==q)&&pe(R,q):\"number\"===typeof q&&pe(R,\"\"+q):\"suppressContentEditableWarning\"!==k&&\"suppressHydrationWarning\"!==k&&\"autoFocus\"!==k&&(sa.hasOwnProperty(k)?null!=q&&xe(w,k):null!=q&&xc(R,k,q,y))}switch(l){case \"input\":Vb(r);\nEc(r,m,!1);break;case \"textarea\":Vb(r);je(r,m);break;case \"option\":null!=m.value&&r.setAttribute(\"value\",\"\"+yc(m.value));break;case \"select\":h=r;h.multiple=!!m.multiple;r=m.value;null!=r?fe(h,!!m.multiple,r,!1):null!=m.defaultValue&&fe(h,!!m.multiple,m.defaultValue,!0);break;default:\"function\"===typeof h.onClick&&(r.onclick=ye)}(g=Be(f,g))&&Bg(b);b.stateNode=e}null!==b.ref&&(b.effectTag|=128)}else null===b.stateNode?t(\"166\"):void 0;break;case 6:e&&null!=b.stateNode?Ig(e,b,e.memoizedProps,g):(\"string\"!==\ntypeof g&&(null===b.stateNode?t(\"166\"):void 0),e=If(Hf.current),If(O.current),ng(b)?(g=b,f=g.stateNode,e=g.memoizedProps,f[Ga]=g,(g=f.nodeValue!==e)&&Bg(b)):(f=b,g=(9===e.nodeType?e:e.ownerDocument).createTextNode(g),g[Ga]=b,f.stateNode=g));break;case 11:break;case 13:g=b.memoizedState;if(0!==(b.effectTag&64)){b.expirationTime=f;S=b;break a}g=null!==g;f=null!==e&&null!==e.memoizedState;null!==e&&!g&&f&&(e=e.child.sibling,null!==e&&(h=b.firstEffect,null!==h?(b.firstEffect=e,e.nextEffect=h):(b.firstEffect=\nb.lastEffect=e,e.nextEffect=null),e.effectTag=8));if(g!==f||0===(b.effectTag&1)&&g)b.effectTag|=4;break;case 7:break;case 8:break;case 12:break;case 4:Kf(b);Gg(b);break;case 10:Cf(b);break;case 9:break;case 14:break;case 17:M(b.type)&&Ne(b);break;default:t(\"156\")}S=null}b=a;if(1===U||1!==b.childExpirationTime){g=0;for(f=b.child;null!==f;)e=f.expirationTime,h=f.childExpirationTime,e>g&&(g=e),h>g&&(g=h),f=f.sibling;b.childExpirationTime=g}if(null!==S)return S;null!==c&&0===(c.effectTag&1024)&&(null===\nc.firstEffect&&(c.firstEffect=a.firstEffect),null!==a.lastEffect&&(null!==c.lastEffect&&(c.lastEffect.nextEffect=a.firstEffect),c.lastEffect=a.lastEffect),1<a.effectTag&&(null!==c.lastEffect?c.lastEffect.nextEffect=a:c.firstEffect=a,c.lastEffect=a))}else{a=Zg(a,U);if(null!==a)return a.effectTag&=1023,a;null!==c&&(c.firstEffect=c.lastEffect=null,c.effectTag|=1024)}if(null!==d)return d;if(null!==c)a=c;else break}return null}\nfunction lh(a){var b=Ag(a.alternate,a,U);a.memoizedProps=a.pendingProps;null===b&&(b=kh(a));ah.current=null;return b}\nfunction mh(a,b){dh?t(\"243\"):void 0;Tf();dh=!0;ah.currentDispatcher=$g;var c=a.nextExpirationTimeToWorkOn;if(c!==U||a!==T||null===S)jh(),T=a,U=c,S=$e(T.current,null,U),a.pendingCommitExpirationTime=0;var d=!1;do{try{if(b)for(;null!==S&&!nh();)S=lh(S);else for(;null!==S;)S=lh(S)}catch(B){if(Af=zf=yf=null,null===S)d=!0,Wg(B);else{null===S?t(\"271\"):void 0;var e=S,f=e.return;if(null===f)d=!0,Wg(B);else{a:{var g=a,h=f,k=e,l=B;f=U;k.effectTag|=1024;k.firstEffect=k.lastEffect=null;if(null!==l&&\"object\"===\ntypeof l&&\"function\"===typeof l.then){var m=l;l=h;var r=-1,w=-1;do{if(13===l.tag){var y=l.alternate;if(null!==y&&(y=y.memoizedState,null!==y)){w=10*(1073741822-y.timedOutAt);break}y=l.pendingProps.maxDuration;if(\"number\"===typeof y)if(0>=y)r=0;else if(-1===r||y<r)r=y}l=l.return}while(null!==l);l=h;do{if(y=13===l.tag)y=void 0===l.memoizedProps.fallback?!1:null===l.memoizedState;if(y){h=l.updateQueue;null===h?l.updateQueue=new Set([m]):h.add(m);if(0===(l.mode&1)){l.effectTag|=64;k.effectTag&=-1957;\n1===k.tag&&(null===k.alternate?k.tag=17:(f=nf(1073741823),f.tag=2,pf(k,f)));k.expirationTime=1073741823;break a}k=g.pingCache;null===k?(k=g.pingCache=new Ug,h=new Set,k.set(m,h)):(h=k.get(m),void 0===h&&(h=new Set,k.set(m,h)));h.has(f)||(h.add(f),k=oh.bind(null,g,m,f),m.then(k,k));-1===r?g=1073741823:(-1===w&&(w=10*(1073741822-jf(g,f))-5E3),g=w+r);0<=g&&eh<g&&(eh=g);l.effectTag|=2048;l.expirationTime=f;break a}l=l.return}while(null!==l);l=Error((mc(k.type)||\"A React component\")+\" suspended while rendering, but no fallback UI was specified.\\n\\nAdd a <Suspense fallback=...> component higher in the tree to provide a loading indicator or placeholder to display.\"+\nnc(k))}fh=!0;l=wf(l,k);g=h;do{switch(g.tag){case 3:g.effectTag|=2048;g.expirationTime=f;f=Vg(g,l,f);qf(g,f);break a;case 1:if(m=l,r=g.type,w=g.stateNode,0===(g.effectTag&64)&&(\"function\"===typeof r.getDerivedStateFromError||null!==w&&\"function\"===typeof w.componentDidCatch&&(null===Yg||!Yg.has(w)))){g.effectTag|=2048;g.expirationTime=f;f=Xg(g,m,f);qf(g,f);break a}}g=g.return}while(null!==g)}S=kh(e);continue}}}break}while(1);dh=!1;Af=zf=yf=ah.currentDispatcher=null;if(d)T=null,a.finishedWork=null;\nelse if(null!==S)a.finishedWork=null;else{d=a.current.alternate;null===d?t(\"281\"):void 0;T=null;if(fh){e=a.latestPendingTime;f=a.latestSuspendedTime;g=a.latestPingedTime;if(0!==e&&e<c||0!==f&&f<c||0!==g&&g<c){hf(a,c);ph(a,d,c,a.expirationTime,-1);return}if(!a.didError&&b){a.didError=!0;c=a.nextExpirationTimeToWorkOn=c;b=a.expirationTime=1073741823;ph(a,d,c,b,-1);return}}b&&-1!==eh?(hf(a,c),b=10*(1073741822-jf(a,c)),b<eh&&(eh=b),b=10*(1073741822-Rf()),b=eh-b,ph(a,d,c,a.expirationTime,0>b?0:b)):(a.pendingCommitExpirationTime=\nc,a.finishedWork=d)}}function Mg(a,b){for(var c=a.return;null!==c;){switch(c.tag){case 1:var d=c.stateNode;if(\"function\"===typeof c.type.getDerivedStateFromError||\"function\"===typeof d.componentDidCatch&&(null===Yg||!Yg.has(d))){a=wf(b,a);a=Xg(c,a,1073741823);pf(c,a);Uf(c,1073741823);return}break;case 3:a=wf(b,a);a=Vg(c,a,1073741823);pf(c,a);Uf(c,1073741823);return}c=c.return}3===a.tag&&(c=wf(b,a),c=Vg(a,c,1073741823),pf(a,c),Uf(a,1073741823))}\nfunction Sf(a,b){0!==ch?a=ch:dh?a=gh?1073741823:U:b.mode&1?(a=qh?1073741822-10*(((1073741822-a+15)/10|0)+1):1073741822-25*(((1073741822-a+500)/25|0)+1),null!==T&&a===U&&--a):a=1073741823;qh&&(0===rh||a<rh)&&(rh=a);return a}function oh(a,b,c){var d=a.pingCache;null!==d&&d.delete(b);if(null!==T&&U===c)T=null;else if(b=a.earliestSuspendedTime,d=a.latestSuspendedTime,0!==b&&c<=b&&c>=d){a.didError=!1;b=a.latestPingedTime;if(0===b||b>c)a.latestPingedTime=c;gf(c,a);c=a.expirationTime;0!==c&&sh(a,c)}}\nfunction Tg(a,b){var c=a.stateNode;null!==c&&c.delete(b);b=Rf();b=Sf(b,a);a=th(a,b);null!==a&&(ff(a,b),b=a.expirationTime,0!==b&&sh(a,b))}\nfunction th(a,b){a.expirationTime<b&&(a.expirationTime=b);var c=a.alternate;null!==c&&c.expirationTime<b&&(c.expirationTime=b);var d=a.return,e=null;if(null===d&&3===a.tag)e=a.stateNode;else for(;null!==d;){c=d.alternate;d.childExpirationTime<b&&(d.childExpirationTime=b);null!==c&&c.childExpirationTime<b&&(c.childExpirationTime=b);if(null===d.return&&3===d.tag){e=d.stateNode;break}d=d.return}return e}\nfunction Uf(a,b){a=th(a,b);null!==a&&(!dh&&0!==U&&b>U&&jh(),ff(a,b),dh&&!gh&&T===a||sh(a,a.expirationTime),uh>vh&&(uh=0,t(\"185\")))}function wh(a,b,c,d,e){var f=ch;ch=1073741823;try{return a(b,c,d,e)}finally{ch=f}}var xh=null,W=null,yh=0,zh=void 0,X=!1,Ah=null,Y=0,rh=0,Bh=!1,Ch=null,Z=!1,Dh=!1,qh=!1,Eh=null,Fh=ba.unstable_now(),Gh=1073741822-(Fh/10|0),Hh=Gh,vh=50,uh=0,Ih=null;function Jh(){Gh=1073741822-((ba.unstable_now()-Fh)/10|0)}\nfunction Kh(a,b){if(0!==yh){if(b<yh)return;null!==zh&&ba.unstable_cancelCallback(zh)}yh=b;a=ba.unstable_now()-Fh;zh=ba.unstable_scheduleCallback(Lh,{timeout:10*(1073741822-b)-a})}function ph(a,b,c,d,e){a.expirationTime=d;0!==e||nh()?0<e&&(a.timeoutHandle=De(Mh.bind(null,a,b,c),e)):(a.pendingCommitExpirationTime=c,a.finishedWork=b)}function Mh(a,b,c){a.pendingCommitExpirationTime=c;a.finishedWork=b;Jh();Hh=Gh;Nh(a,c)}function Rf(){if(X)return Hh;Oh();if(0===Y||1===Y)Jh(),Hh=Gh;return Hh}\nfunction sh(a,b){null===a.nextScheduledRoot?(a.expirationTime=b,null===W?(xh=W=a,a.nextScheduledRoot=a):(W=W.nextScheduledRoot=a,W.nextScheduledRoot=xh)):b>a.expirationTime&&(a.expirationTime=b);X||(Z?Dh&&(Ah=a,Y=1073741823,Ph(a,1073741823,!1)):1073741823===b?Qh(1073741823,!1):Kh(a,b))}\nfunction Oh(){var a=0,b=null;if(null!==W)for(var c=W,d=xh;null!==d;){var e=d.expirationTime;if(0===e){null===c||null===W?t(\"244\"):void 0;if(d===d.nextScheduledRoot){xh=W=d.nextScheduledRoot=null;break}else if(d===xh)xh=e=d.nextScheduledRoot,W.nextScheduledRoot=e,d.nextScheduledRoot=null;else if(d===W){W=c;W.nextScheduledRoot=xh;d.nextScheduledRoot=null;break}else c.nextScheduledRoot=d.nextScheduledRoot,d.nextScheduledRoot=null;d=c.nextScheduledRoot}else{e>a&&(a=e,b=d);if(d===W)break;if(1073741823===\na)break;c=d;d=d.nextScheduledRoot}}Ah=b;Y=a}var Rh=!1;function nh(){return Rh?!0:ba.unstable_shouldYield()?Rh=!0:!1}function Lh(){try{if(!nh()&&null!==xh){Jh();var a=xh;do{var b=a.expirationTime;0!==b&&Gh<=b&&(a.nextExpirationTimeToWorkOn=Gh);a=a.nextScheduledRoot}while(a!==xh)}Qh(0,!0)}finally{Rh=!1}}\nfunction Qh(a,b){Oh();if(b)for(Jh(),Hh=Gh;null!==Ah&&0!==Y&&a<=Y&&!(Rh&&Gh>Y);)Ph(Ah,Y,Gh>Y),Oh(),Jh(),Hh=Gh;else for(;null!==Ah&&0!==Y&&a<=Y;)Ph(Ah,Y,!1),Oh();b&&(yh=0,zh=null);0!==Y&&Kh(Ah,Y);uh=0;Ih=null;if(null!==Eh)for(a=Eh,Eh=null,b=0;b<a.length;b++){var c=a[b];try{c._onComplete()}catch(d){Bh||(Bh=!0,Ch=d)}}if(Bh)throw a=Ch,Ch=null,Bh=!1,a;}function Nh(a,b){X?t(\"253\"):void 0;Ah=a;Y=b;Ph(a,b,!1);Qh(1073741823,!1)}\nfunction Ph(a,b,c){X?t(\"245\"):void 0;X=!0;if(c){var d=a.finishedWork;null!==d?Sh(a,d,b):(a.finishedWork=null,d=a.timeoutHandle,-1!==d&&(a.timeoutHandle=-1,Ee(d)),mh(a,c),d=a.finishedWork,null!==d&&(nh()?a.finishedWork=d:Sh(a,d,b)))}else d=a.finishedWork,null!==d?Sh(a,d,b):(a.finishedWork=null,d=a.timeoutHandle,-1!==d&&(a.timeoutHandle=-1,Ee(d)),mh(a,c),d=a.finishedWork,null!==d&&Sh(a,d,b));X=!1}\nfunction Sh(a,b,c){var d=a.firstBatch;if(null!==d&&d._expirationTime>=c&&(null===Eh?Eh=[d]:Eh.push(d),d._defer)){a.finishedWork=b;a.expirationTime=0;return}a.finishedWork=null;a===Ih?uh++:(Ih=a,uh=0);gh=dh=!0;a.current===b?t(\"177\"):void 0;c=a.pendingCommitExpirationTime;0===c?t(\"261\"):void 0;a.pendingCommitExpirationTime=0;d=b.expirationTime;var e=b.childExpirationTime;d=e>d?e:d;a.didError=!1;0===d?(a.earliestPendingTime=0,a.latestPendingTime=0,a.earliestSuspendedTime=0,a.latestSuspendedTime=0,a.latestPingedTime=\n0):(d<a.latestPingedTime&&(a.latestPingedTime=0),e=a.latestPendingTime,0!==e&&(e>d?a.earliestPendingTime=a.latestPendingTime=0:a.earliestPendingTime>d&&(a.earliestPendingTime=a.latestPendingTime)),e=a.earliestSuspendedTime,0===e?ff(a,d):d<a.latestSuspendedTime?(a.earliestSuspendedTime=0,a.latestSuspendedTime=0,a.latestPingedTime=0,ff(a,d)):d>e&&ff(a,d));gf(0,a);ah.current=null;1<b.effectTag?null!==b.lastEffect?(b.lastEffect.nextEffect=b,d=b.firstEffect):d=b:d=b.firstEffect;ze=Hd;e=Td();if(Ud(e)){if(\"selectionStart\"in\ne)var f={start:e.selectionStart,end:e.selectionEnd};else a:{f=(f=e.ownerDocument)&&f.defaultView||window;var g=f.getSelection&&f.getSelection();if(g&&0!==g.rangeCount){f=g.anchorNode;var h=g.anchorOffset,k=g.focusNode;g=g.focusOffset;try{f.nodeType,k.nodeType}catch(db){f=null;break a}var l=0,m=-1,r=-1,w=0,y=0,B=e,R=null;b:for(;;){for(var v;;){B!==f||0!==h&&3!==B.nodeType||(m=l+h);B!==k||0!==g&&3!==B.nodeType||(r=l+g);3===B.nodeType&&(l+=B.nodeValue.length);if(null===(v=B.firstChild))break;R=B;B=v}for(;;){if(B===\ne)break b;R===f&&++w===h&&(m=l);R===k&&++y===g&&(r=l);if(null!==(v=B.nextSibling))break;B=R;R=B.parentNode}B=v}f=-1===m||-1===r?null:{start:m,end:r}}else f=null}f=f||{start:0,end:0}}else f=null;Ae={focusedElem:e,selectionRange:f};Hd=!1;for(V=d;null!==V;){e=!1;f=void 0;try{for(;null!==V;){if(V.effectTag&256)a:{var q=V.alternate;h=V;switch(h.tag){case 0:case 11:case 15:break a;case 1:if(h.effectTag&256&&null!==q){var u=q.memoizedProps,A=q.memoizedState,Yf=h.stateNode,Vh=Yf.getSnapshotBeforeUpdate(h.elementType===\nh.type?u:P(h.type,u),A);Yf.__reactInternalSnapshotBeforeUpdate=Vh}break a;case 3:case 5:case 6:case 4:case 17:break a;default:t(\"163\")}}V=V.nextEffect}}catch(db){e=!0,f=db}e&&(null===V?t(\"178\"):void 0,Mg(V,f),null!==V&&(V=V.nextEffect))}for(V=d;null!==V;){q=!1;u=void 0;try{for(;null!==V;){var x=V.effectTag;x&16&&pe(V.stateNode,\"\");if(x&128){var C=V.alternate;if(null!==C){var p=C.ref;null!==p&&(\"function\"===typeof p?p(null):p.current=null)}}switch(x&14){case 2:Rg(V);V.effectTag&=-3;break;case 6:Rg(V);\nV.effectTag&=-3;Sg(V.alternate,V);break;case 4:Sg(V.alternate,V);break;case 8:A=V;Pg(A);A.return=null;A.child=null;A.memoizedState=null;A.updateQueue=null;var G=A.alternate;null!==G&&(G.return=null,G.child=null,G.memoizedState=null,G.updateQueue=null)}V=V.nextEffect}}catch(db){q=!0,u=db}q&&(null===V?t(\"178\"):void 0,Mg(V,u),null!==V&&(V=V.nextEffect))}p=Ae;C=Td();x=p.focusedElem;q=p.selectionRange;if(C!==x&&x&&x.ownerDocument&&Sd(x.ownerDocument.documentElement,x)){null!==q&&Ud(x)&&(C=q.start,p=q.end,\nvoid 0===p&&(p=C),\"selectionStart\"in x?(x.selectionStart=C,x.selectionEnd=Math.min(p,x.value.length)):(p=(C=x.ownerDocument||document)&&C.defaultView||window,p.getSelection&&(p=p.getSelection(),u=x.textContent.length,G=Math.min(q.start,u),q=void 0===q.end?G:Math.min(q.end,u),!p.extend&&G>q&&(u=q,q=G,G=u),u=Rd(x,G),A=Rd(x,q),u&&A&&(1!==p.rangeCount||p.anchorNode!==u.node||p.anchorOffset!==u.offset||p.focusNode!==A.node||p.focusOffset!==A.offset)&&(C=C.createRange(),C.setStart(u.node,u.offset),p.removeAllRanges(),\nG>q?(p.addRange(C),p.extend(A.node,A.offset)):(C.setEnd(A.node,A.offset),p.addRange(C))))));C=[];for(p=x;p=p.parentNode;)1===p.nodeType&&C.push({element:p,left:p.scrollLeft,top:p.scrollTop});\"function\"===typeof x.focus&&x.focus();for(x=0;x<C.length;x++)p=C[x],p.element.scrollLeft=p.left,p.element.scrollTop=p.top}Ae=null;Hd=!!ze;ze=null;a.current=b;for(V=d;null!==V;){d=!1;x=void 0;try{for(C=c;null!==V;){var Fb=V.effectTag;if(Fb&36){var Gb=V.alternate;p=V;G=C;switch(p.tag){case 0:case 11:case 15:break;\ncase 1:var Hc=p.stateNode;if(p.effectTag&4)if(null===Gb)Hc.componentDidMount();else{var ii=p.elementType===p.type?Gb.memoizedProps:P(p.type,Gb.memoizedProps);Hc.componentDidUpdate(ii,Gb.memoizedState,Hc.__reactInternalSnapshotBeforeUpdate)}var Dg=p.updateQueue;null!==Dg&&uf(p,Dg,Hc,G);break;case 3:var Eg=p.updateQueue;if(null!==Eg){q=null;if(null!==p.child)switch(p.child.tag){case 5:q=p.child.stateNode;break;case 1:q=p.child.stateNode}uf(p,Eg,q,G)}break;case 5:var ji=p.stateNode;null===Gb&&p.effectTag&\n4&&Be(p.type,p.memoizedProps)&&ji.focus();break;case 6:break;case 4:break;case 12:break;case 13:break;case 17:break;default:t(\"163\")}}if(Fb&128){var Ic=V.ref;if(null!==Ic){var Fg=V.stateNode;switch(V.tag){case 5:var ce=Fg;break;default:ce=Fg}\"function\"===typeof Ic?Ic(ce):Ic.current=ce}}V=V.nextEffect}}catch(db){d=!0,x=db}d&&(null===V?t(\"178\"):void 0,Mg(V,x),null!==V&&(V=V.nextEffect))}dh=gh=!1;\"function\"===typeof Te&&Te(b.stateNode);Fb=b.expirationTime;b=b.childExpirationTime;b=b>Fb?b:Fb;0===b&&(Yg=\nnull);a.expirationTime=b;a.finishedWork=null}function Wg(a){null===Ah?t(\"246\"):void 0;Ah.expirationTime=0;Bh||(Bh=!0,Ch=a)}function Th(a,b){var c=Z;Z=!0;try{return a(b)}finally{(Z=c)||X||Qh(1073741823,!1)}}function Uh(a,b){if(Z&&!Dh){Dh=!0;try{return a(b)}finally{Dh=!1}}return a(b)}function Wh(a,b,c){if(qh)return a(b,c);Z||X||0===rh||(Qh(rh,!1),rh=0);var d=qh,e=Z;Z=qh=!0;try{return a(b,c)}finally{qh=d,(Z=e)||X||Qh(1073741823,!1)}}\nfunction Xh(a,b,c,d,e){var f=b.current;a:if(c){c=c._reactInternalFiber;b:{2===kd(c)&&1===c.tag?void 0:t(\"170\");var g=c;do{switch(g.tag){case 3:g=g.stateNode.context;break b;case 1:if(M(g.type)){g=g.stateNode.__reactInternalMemoizedMergedChildContext;break b}}g=g.return}while(null!==g);t(\"171\");g=void 0}if(1===c.tag){var h=c.type;if(M(h)){c=Qe(c,h,g);break a}}c=g}else c=Ke;null===b.context?b.context=c:b.pendingContext=c;b=e;e=nf(d);e.payload={element:a};b=void 0===b?null:b;null!==b&&(e.callback=b);\nTf();pf(f,e);Uf(f,d);return d}function Yh(a,b,c,d){var e=b.current,f=Rf();e=Sf(f,e);return Xh(a,b,c,e,d)}function Zh(a){a=a.current;if(!a.child)return null;switch(a.child.tag){case 5:return a.child.stateNode;default:return a.child.stateNode}}function $h(a,b,c){var d=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:$b,key:null==d?null:\"\"+d,children:a,containerInfo:b,implementation:c}}\nCb=function(a,b,c){switch(b){case \"input\":Cc(a,c);b=c.name;if(\"radio\"===c.type&&null!=b){for(c=a;c.parentNode;)c=c.parentNode;c=c.querySelectorAll(\"input[name=\"+JSON.stringify(\"\"+b)+'][type=\"radio\"]');for(b=0;b<c.length;b++){var d=c[b];if(d!==a&&d.form===a.form){var e=La(d);e?void 0:t(\"90\");Wb(d);Cc(d,e)}}}break;case \"textarea\":ie(a,c);break;case \"select\":b=c.value,null!=b&&fe(a,!!c.multiple,b,!1)}};\nfunction ai(a){var b=1073741822-25*(((1073741822-Rf()+500)/25|0)+1);b>=bh&&(b=bh-1);this._expirationTime=bh=b;this._root=a;this._callbacks=this._next=null;this._hasChildren=this._didComplete=!1;this._children=null;this._defer=!0}ai.prototype.render=function(a){this._defer?void 0:t(\"250\");this._hasChildren=!0;this._children=a;var b=this._root._internalRoot,c=this._expirationTime,d=new bi;Xh(a,b,null,c,d._onCommit);return d};\nai.prototype.then=function(a){if(this._didComplete)a();else{var b=this._callbacks;null===b&&(b=this._callbacks=[]);b.push(a)}};\nai.prototype.commit=function(){var a=this._root._internalRoot,b=a.firstBatch;this._defer&&null!==b?void 0:t(\"251\");if(this._hasChildren){var c=this._expirationTime;if(b!==this){this._hasChildren&&(c=this._expirationTime=b._expirationTime,this.render(this._children));for(var d=null,e=b;e!==this;)d=e,e=e._next;null===d?t(\"251\"):void 0;d._next=e._next;this._next=b;a.firstBatch=this}this._defer=!1;Nh(a,c);b=this._next;this._next=null;b=a.firstBatch=b;null!==b&&b._hasChildren&&b.render(b._children)}else this._next=\nnull,this._defer=!1};ai.prototype._onComplete=function(){if(!this._didComplete){this._didComplete=!0;var a=this._callbacks;if(null!==a)for(var b=0;b<a.length;b++)(0,a[b])()}};function bi(){this._callbacks=null;this._didCommit=!1;this._onCommit=this._onCommit.bind(this)}bi.prototype.then=function(a){if(this._didCommit)a();else{var b=this._callbacks;null===b&&(b=this._callbacks=[]);b.push(a)}};\nbi.prototype._onCommit=function(){if(!this._didCommit){this._didCommit=!0;var a=this._callbacks;if(null!==a)for(var b=0;b<a.length;b++){var c=a[b];\"function\"!==typeof c?t(\"191\",c):void 0;c()}}};\nfunction ci(a,b,c){b=N(3,null,null,b?3:0);a={current:b,containerInfo:a,pendingChildren:null,pingCache:null,earliestPendingTime:0,latestPendingTime:0,earliestSuspendedTime:0,latestSuspendedTime:0,latestPingedTime:0,didError:!1,pendingCommitExpirationTime:0,finishedWork:null,timeoutHandle:-1,context:null,pendingContext:null,hydrate:c,nextExpirationTimeToWorkOn:0,expirationTime:0,firstBatch:null,nextScheduledRoot:null};this._internalRoot=b.stateNode=a}\nci.prototype.render=function(a,b){var c=this._internalRoot,d=new bi;b=void 0===b?null:b;null!==b&&d.then(b);Yh(a,c,null,d._onCommit);return d};ci.prototype.unmount=function(a){var b=this._internalRoot,c=new bi;a=void 0===a?null:a;null!==a&&c.then(a);Yh(null,b,null,c._onCommit);return c};ci.prototype.legacy_renderSubtreeIntoContainer=function(a,b,c){var d=this._internalRoot,e=new bi;c=void 0===c?null:c;null!==c&&e.then(c);Yh(b,d,a,e._onCommit);return e};\nci.prototype.createBatch=function(){var a=new ai(this),b=a._expirationTime,c=this._internalRoot,d=c.firstBatch;if(null===d)c.firstBatch=a,a._next=null;else{for(c=null;null!==d&&d._expirationTime>=b;)c=d,d=d._next;a._next=d;null!==c&&(c._next=a)}return a};function di(a){return!(!a||1!==a.nodeType&&9!==a.nodeType&&11!==a.nodeType&&(8!==a.nodeType||\" react-mount-point-unstable \"!==a.nodeValue))}Kb=Th;Lb=Wh;Mb=function(){X||0===rh||(Qh(rh,!1),rh=0)};\nfunction ei(a,b){b||(b=a?9===a.nodeType?a.documentElement:a.firstChild:null,b=!(!b||1!==b.nodeType||!b.hasAttribute(\"data-reactroot\")));if(!b)for(var c;c=a.lastChild;)a.removeChild(c);return new ci(a,!1,b)}\nfunction fi(a,b,c,d,e){di(c)?void 0:t(\"200\");var f=c._reactRootContainer;if(f){if(\"function\"===typeof e){var g=e;e=function(){var a=Zh(f._internalRoot);g.call(a)}}null!=a?f.legacy_renderSubtreeIntoContainer(a,b,e):f.render(b,e)}else{f=c._reactRootContainer=ei(c,d);if(\"function\"===typeof e){var h=e;e=function(){var a=Zh(f._internalRoot);h.call(a)}}Uh(function(){null!=a?f.legacy_renderSubtreeIntoContainer(a,b,e):f.render(b,e)})}return Zh(f._internalRoot)}\nfunction gi(a,b){var c=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;di(b)?void 0:t(\"200\");return $h(a,b,null,c)}\nvar ki={createPortal:gi,findDOMNode:function(a){if(null==a)return null;if(1===a.nodeType)return a;var b=a._reactInternalFiber;void 0===b&&(\"function\"===typeof a.render?t(\"188\"):t(\"268\",Object.keys(a)));a=nd(b);a=null===a?null:a.stateNode;return a},hydrate:function(a,b,c){return fi(null,a,b,!0,c)},render:function(a,b,c){return fi(null,a,b,!1,c)},unstable_renderSubtreeIntoContainer:function(a,b,c,d){null==a||void 0===a._reactInternalFiber?t(\"38\"):void 0;return fi(a,b,c,!1,d)},unmountComponentAtNode:function(a){di(a)?\nvoid 0:t(\"40\");return a._reactRootContainer?(Uh(function(){fi(null,null,a,!1,function(){a._reactRootContainer=null})}),!0):!1},unstable_createPortal:function(){return gi.apply(void 0,arguments)},unstable_batchedUpdates:Th,unstable_interactiveUpdates:Wh,flushSync:function(a,b){X?t(\"187\"):void 0;var c=Z;Z=!0;try{return wh(a,b)}finally{Z=c,Qh(1073741823,!1)}},unstable_createRoot:hi,unstable_flushControlled:function(a){var b=Z;Z=!0;try{wh(a)}finally{(Z=b)||X||Qh(1073741823,!1)}},__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{Events:[Ja,\nKa,La,Ca.injectEventPluginsByName,qa,Ra,function(a){za(a,Qa)},Ib,Jb,Jd,Ea]}};function hi(a,b){di(a)?void 0:t(\"299\",\"unstable_createRoot\");return new ci(a,!0,null!=b&&!0===b.hydrate)}(function(a){var b=a.findFiberByHostInstance;return We(n({},a,{overrideProps:null,findHostInstanceByFiber:function(a){a=nd(a);return null===a?null:a.stateNode},findFiberByHostInstance:function(a){return b?b(a):null}}))})({findFiberByHostInstance:Ia,bundleType:0,version:\"16.7.0\",rendererPackageName:\"react-dom\"});\nvar li={default:ki},mi=li&&ki||li;module.exports=mi.default||mi;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/cjs/react-dom.production.min.js\n// module id = 34\n// module chunks = 0","/** @license React v16.7.0\n * react.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';var k=require(\"object-assign\"),n=\"function\"===typeof Symbol&&Symbol.for,p=n?Symbol.for(\"react.element\"):60103,q=n?Symbol.for(\"react.portal\"):60106,r=n?Symbol.for(\"react.fragment\"):60107,t=n?Symbol.for(\"react.strict_mode\"):60108,u=n?Symbol.for(\"react.profiler\"):60114,v=n?Symbol.for(\"react.provider\"):60109,w=n?Symbol.for(\"react.context\"):60110,x=n?Symbol.for(\"react.concurrent_mode\"):60111,y=n?Symbol.for(\"react.forward_ref\"):60112,z=n?Symbol.for(\"react.suspense\"):60113,A=n?Symbol.for(\"react.memo\"):\n60115,B=n?Symbol.for(\"react.lazy\"):60116,C=\"function\"===typeof Symbol&&Symbol.iterator;function aa(a,b,e,c,d,g,h,f){if(!a){a=void 0;if(void 0===b)a=Error(\"Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.\");else{var l=[e,c,d,g,h,f],m=0;a=Error(b.replace(/%s/g,function(){return l[m++]}));a.name=\"Invariant Violation\"}a.framesToPop=1;throw a;}}\nfunction D(a){for(var b=arguments.length-1,e=\"https://reactjs.org/docs/error-decoder.html?invariant=\"+a,c=0;c<b;c++)e+=\"&args[]=\"+encodeURIComponent(arguments[c+1]);aa(!1,\"Minified React error #\"+a+\"; visit %s for the full message or use the non-minified dev environment for full errors and additional helpful warnings. \",e)}var E={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},F={};\nfunction G(a,b,e){this.props=a;this.context=b;this.refs=F;this.updater=e||E}G.prototype.isReactComponent={};G.prototype.setState=function(a,b){\"object\"!==typeof a&&\"function\"!==typeof a&&null!=a?D(\"85\"):void 0;this.updater.enqueueSetState(this,a,b,\"setState\")};G.prototype.forceUpdate=function(a){this.updater.enqueueForceUpdate(this,a,\"forceUpdate\")};function H(){}H.prototype=G.prototype;function I(a,b,e){this.props=a;this.context=b;this.refs=F;this.updater=e||E}var J=I.prototype=new H;\nJ.constructor=I;k(J,G.prototype);J.isPureReactComponent=!0;var K={current:null,currentDispatcher:null},L=Object.prototype.hasOwnProperty,M={key:!0,ref:!0,__self:!0,__source:!0};\nfunction N(a,b,e){var c=void 0,d={},g=null,h=null;if(null!=b)for(c in void 0!==b.ref&&(h=b.ref),void 0!==b.key&&(g=\"\"+b.key),b)L.call(b,c)&&!M.hasOwnProperty(c)&&(d[c]=b[c]);var f=arguments.length-2;if(1===f)d.children=e;else if(1<f){for(var l=Array(f),m=0;m<f;m++)l[m]=arguments[m+2];d.children=l}if(a&&a.defaultProps)for(c in f=a.defaultProps,f)void 0===d[c]&&(d[c]=f[c]);return{$$typeof:p,type:a,key:g,ref:h,props:d,_owner:K.current}}\nfunction ba(a,b){return{$$typeof:p,type:a.type,key:b,ref:a.ref,props:a.props,_owner:a._owner}}function O(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===p}function escape(a){var b={\"=\":\"=0\",\":\":\"=2\"};return\"$\"+(\"\"+a).replace(/[=:]/g,function(a){return b[a]})}var P=/\\/+/g,Q=[];function R(a,b,e,c){if(Q.length){var d=Q.pop();d.result=a;d.keyPrefix=b;d.func=e;d.context=c;d.count=0;return d}return{result:a,keyPrefix:b,func:e,context:c,count:0}}\nfunction S(a){a.result=null;a.keyPrefix=null;a.func=null;a.context=null;a.count=0;10>Q.length&&Q.push(a)}\nfunction T(a,b,e,c){var d=typeof a;if(\"undefined\"===d||\"boolean\"===d)a=null;var g=!1;if(null===a)g=!0;else switch(d){case \"string\":case \"number\":g=!0;break;case \"object\":switch(a.$$typeof){case p:case q:g=!0}}if(g)return e(c,a,\"\"===b?\".\"+U(a,0):b),1;g=0;b=\"\"===b?\".\":b+\":\";if(Array.isArray(a))for(var h=0;h<a.length;h++){d=a[h];var f=b+U(d,h);g+=T(d,f,e,c)}else if(null===a||\"object\"!==typeof a?f=null:(f=C&&a[C]||a[\"@@iterator\"],f=\"function\"===typeof f?f:null),\"function\"===typeof f)for(a=f.call(a),h=\n0;!(d=a.next()).done;)d=d.value,f=b+U(d,h++),g+=T(d,f,e,c);else\"object\"===d&&(e=\"\"+a,D(\"31\",\"[object Object]\"===e?\"object with keys {\"+Object.keys(a).join(\", \")+\"}\":e,\"\"));return g}function V(a,b,e){return null==a?0:T(a,\"\",b,e)}function U(a,b){return\"object\"===typeof a&&null!==a&&null!=a.key?escape(a.key):b.toString(36)}function ca(a,b){a.func.call(a.context,b,a.count++)}\nfunction da(a,b,e){var c=a.result,d=a.keyPrefix;a=a.func.call(a.context,b,a.count++);Array.isArray(a)?W(a,c,e,function(a){return a}):null!=a&&(O(a)&&(a=ba(a,d+(!a.key||b&&b.key===a.key?\"\":(\"\"+a.key).replace(P,\"$&/\")+\"/\")+e)),c.push(a))}function W(a,b,e,c,d){var g=\"\";null!=e&&(g=(\"\"+e).replace(P,\"$&/\")+\"/\");b=R(b,g,c,d);V(a,da,b);S(b)}\nvar X={Children:{map:function(a,b,e){if(null==a)return a;var c=[];W(a,c,null,b,e);return c},forEach:function(a,b,e){if(null==a)return a;b=R(null,null,b,e);V(a,ca,b);S(b)},count:function(a){return V(a,function(){return null},null)},toArray:function(a){var b=[];W(a,b,null,function(a){return a});return b},only:function(a){O(a)?void 0:D(\"143\");return a}},createRef:function(){return{current:null}},Component:G,PureComponent:I,createContext:function(a,b){void 0===b&&(b=null);a={$$typeof:w,_calculateChangedBits:b,\n_currentValue:a,_currentValue2:a,_threadCount:0,Provider:null,Consumer:null};a.Provider={$$typeof:v,_context:a};return a.Consumer=a},forwardRef:function(a){return{$$typeof:y,render:a}},lazy:function(a){return{$$typeof:B,_ctor:a,_status:-1,_result:null}},memo:function(a,b){return{$$typeof:A,type:a,compare:void 0===b?null:b}},Fragment:r,StrictMode:t,Suspense:z,createElement:N,cloneElement:function(a,b,e){null===a||void 0===a?D(\"267\",a):void 0;var c=void 0,d=k({},a.props),g=a.key,h=a.ref,f=a._owner;\nif(null!=b){void 0!==b.ref&&(h=b.ref,f=K.current);void 0!==b.key&&(g=\"\"+b.key);var l=void 0;a.type&&a.type.defaultProps&&(l=a.type.defaultProps);for(c in b)L.call(b,c)&&!M.hasOwnProperty(c)&&(d[c]=void 0===b[c]&&void 0!==l?l[c]:b[c])}c=arguments.length-2;if(1===c)d.children=e;else if(1<c){l=Array(c);for(var m=0;m<c;m++)l[m]=arguments[m+2];d.children=l}return{$$typeof:p,type:a.type,key:g,ref:h,props:d,_owner:f}},createFactory:function(a){var b=N.bind(null,a);b.type=a;return b},isValidElement:O,version:\"16.7.0\",\nunstable_ConcurrentMode:x,unstable_Profiler:u,__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{ReactCurrentOwner:K,assign:k}},Y={default:X},Z=Y&&X||Y;module.exports=Z.default||Z;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react/cjs/react.production.min.js\n// module id = 35\n// module chunks = 0","/** @license React v0.12.0\n * scheduler.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';Object.defineProperty(exports,\"__esModule\",{value:!0});var c=null,f=!1,h=3,k=-1,l=-1,m=!1,n=!1;function p(){if(!m){var a=c.expirationTime;n?q():n=!0;r(t,a)}}\nfunction u(){var a=c,b=c.next;if(c===b)c=null;else{var d=c.previous;c=d.next=b;b.previous=d}a.next=a.previous=null;d=a.callback;b=a.expirationTime;a=a.priorityLevel;var e=h,Q=l;h=a;l=b;try{var g=d()}finally{h=e,l=Q}if(\"function\"===typeof g)if(g={callback:g,priorityLevel:a,expirationTime:b,next:null,previous:null},null===c)c=g.next=g.previous=g;else{d=null;a=c;do{if(a.expirationTime>=b){d=a;break}a=a.next}while(a!==c);null===d?d=c:d===c&&(c=g,p());b=d.previous;b.next=d.previous=g;g.next=d;g.previous=\nb}}function v(){if(-1===k&&null!==c&&1===c.priorityLevel){m=!0;try{do u();while(null!==c&&1===c.priorityLevel)}finally{m=!1,null!==c?p():n=!1}}}function t(a){m=!0;var b=f;f=a;try{if(a)for(;null!==c;){var d=exports.unstable_now();if(c.expirationTime<=d){do u();while(null!==c&&c.expirationTime<=d)}else break}else if(null!==c){do u();while(null!==c&&!w())}}finally{m=!1,f=b,null!==c?p():n=!1,v()}}\nvar x=Date,y=\"function\"===typeof setTimeout?setTimeout:void 0,z=\"function\"===typeof clearTimeout?clearTimeout:void 0,A=\"function\"===typeof requestAnimationFrame?requestAnimationFrame:void 0,B=\"function\"===typeof cancelAnimationFrame?cancelAnimationFrame:void 0,C,D;function E(a){C=A(function(b){z(D);a(b)});D=y(function(){B(C);a(exports.unstable_now())},100)}\nif(\"object\"===typeof performance&&\"function\"===typeof performance.now){var F=performance;exports.unstable_now=function(){return F.now()}}else exports.unstable_now=function(){return x.now()};var r,q,w,G=null;\"undefined\"!==typeof window?G=window:\"undefined\"!==typeof global&&(G=global);\nif(G&&G._schedMock){var H=G._schedMock;r=H[0];q=H[1];w=H[2];exports.unstable_now=H[3]}else if(\"undefined\"===typeof window||\"function\"!==typeof MessageChannel){var I=null,J=function(a){if(null!==I)try{I(a)}finally{I=null}};r=function(a){null!==I?setTimeout(r,0,a):(I=a,setTimeout(J,0,!1))};q=function(){I=null};w=function(){return!1}}else{\"undefined\"!==typeof console&&(\"function\"!==typeof A&&console.error(\"This browser doesn't support requestAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills\"),\n\"function\"!==typeof B&&console.error(\"This browser doesn't support cancelAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills\"));var K=null,L=!1,M=-1,N=!1,O=!1,P=0,R=33,S=33;w=function(){return P<=exports.unstable_now()};var T=new MessageChannel,U=T.port2;T.port1.onmessage=function(){L=!1;var a=K,b=M;K=null;M=-1;var d=exports.unstable_now(),e=!1;if(0>=P-d)if(-1!==b&&b<=d)e=!0;else{N||(N=!0,E(V));K=a;M=b;return}if(null!==a){O=!0;try{a(e)}finally{O=!1}}};\nvar V=function(a){if(null!==K){E(V);var b=a-P+S;b<S&&R<S?(8>b&&(b=8),S=b<R?R:b):R=b;P=a+S;L||(L=!0,U.postMessage(void 0))}else N=!1};r=function(a,b){K=a;M=b;O||0>b?U.postMessage(void 0):N||(N=!0,E(V))};q=function(){K=null;L=!1;M=-1}}exports.unstable_ImmediatePriority=1;exports.unstable_UserBlockingPriority=2;exports.unstable_NormalPriority=3;exports.unstable_IdlePriority=5;exports.unstable_LowPriority=4;\nexports.unstable_runWithPriority=function(a,b){switch(a){case 1:case 2:case 3:case 4:case 5:break;default:a=3}var d=h,e=k;h=a;k=exports.unstable_now();try{return b()}finally{h=d,k=e,v()}};\nexports.unstable_scheduleCallback=function(a,b){var d=-1!==k?k:exports.unstable_now();if(\"object\"===typeof b&&null!==b&&\"number\"===typeof b.timeout)b=d+b.timeout;else switch(h){case 1:b=d+-1;break;case 2:b=d+250;break;case 5:b=d+1073741823;break;case 4:b=d+1E4;break;default:b=d+5E3}a={callback:a,priorityLevel:h,expirationTime:b,next:null,previous:null};if(null===c)c=a.next=a.previous=a,p();else{d=null;var e=c;do{if(e.expirationTime>b){d=e;break}e=e.next}while(e!==c);null===d?d=c:d===c&&(c=a,p());\nb=d.previous;b.next=d.previous=a;a.next=d;a.previous=b}return a};exports.unstable_cancelCallback=function(a){var b=a.next;if(null!==b){if(b===a)c=null;else{a===c&&(c=b);var d=a.previous;d.next=b;b.previous=d}a.next=a.previous=null}};exports.unstable_wrapCallback=function(a){var b=h;return function(){var d=h,e=k;h=b;k=exports.unstable_now();try{return a.apply(this,arguments)}finally{h=d,k=e,v()}}};exports.unstable_getCurrentPriorityLevel=function(){return h};\nexports.unstable_shouldYield=function(){return!f&&(null!==c&&c.expirationTime<l||w())};exports.unstable_continueExecution=function(){null!==c&&p()};exports.unstable_pauseExecution=function(){};exports.unstable_getFirstCallbackNode=function(){return c};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/scheduler/cjs/scheduler.production.min.js\n// module id = 36\n// module chunks = 0","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/scheduler.production.min.js');\n} else {\n  module.exports = require('./cjs/scheduler.development.js');\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/scheduler/index.js\n// module id = 37\n// module chunks = 0","module.exports = function(THREE) {\n\tvar MOUSE = THREE.MOUSE\n\tif (!MOUSE)\n\t\tMOUSE = { LEFT: 0, MIDDLE: 1, RIGHT: 2 };\n\n\t/**\n\t * @author qiao / https://github.com/qiao\n\t * @author mrdoob / http://mrdoob.com\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author WestLangley / http://github.com/WestLangley\n\t * @author erich666 / http://erichaines.com\n\t */\n\t/*global THREE, console */\n\n\tfunction OrbitConstraint ( object ) {\n\n\t\tthis.object = object;\n\n\t\t// \"target\" sets the location of focus, where the object orbits around\n\t\t// and where it pans with respect to.\n\t\tthis.target = new THREE.Vector3();\n\n\t\t// Limits to how far you can dolly in and out ( PerspectiveCamera only )\n\t\tthis.minDistance = 0;\n\t\tthis.maxDistance = Infinity;\n\n\t\t// Limits to how far you can zoom in and out ( OrthographicCamera only )\n\t\tthis.minZoom = 0;\n\t\tthis.maxZoom = Infinity;\n\n\t\t// How far you can orbit vertically, upper and lower limits.\n\t\t// Range is 0 to Math.PI radians.\n\t\tthis.minPolarAngle = 0; // radians\n\t\tthis.maxPolarAngle = Math.PI; // radians\n\n\t\t// How far you can orbit horizontally, upper and lower limits.\n\t\t// If set, must be a sub-interval of the interval [ - Math.PI, Math.PI ].\n\t\tthis.minAzimuthAngle = - Infinity; // radians\n\t\tthis.maxAzimuthAngle = Infinity; // radians\n\n\t\t// Set to true to enable damping (inertia)\n\t\t// If damping is enabled, you must call controls.update() in your animation loop\n\t\tthis.enableDamping = false;\n\t\tthis.dampingFactor = 0.25;\n\n\t\t////////////\n\t\t// internals\n\n\t\tvar scope = this;\n\n\t\tvar EPS = 0.000001;\n\n\t\t// Current position in spherical coordinate system.\n\t\tvar theta;\n\t\tvar phi;\n\n\t\t// Pending changes\n\t\tvar phiDelta = 0;\n\t\tvar thetaDelta = 0;\n\t\tvar scale = 1;\n\t\tvar panOffset = new THREE.Vector3();\n\t\tvar zoomChanged = false;\n\n\t\t// API\n\n\t\tthis.getPolarAngle = function () {\n\n\t\t\treturn phi;\n\n\t\t};\n\n\t\tthis.getAzimuthalAngle = function () {\n\n\t\t\treturn theta;\n\n\t\t};\n\n\t\tthis.rotateLeft = function ( angle ) {\n\n\t\t\tthetaDelta -= angle;\n\n\t\t};\n\n\t\tthis.rotateUp = function ( angle ) {\n\n\t\t\tphiDelta -= angle;\n\n\t\t};\n\n\t\t// pass in distance in world space to move left\n\t\tthis.panLeft = function() {\n\n\t\t\tvar v = new THREE.Vector3();\n\n\t\t\treturn function panLeft ( distance ) {\n\n\t\t\t\tvar te = this.object.matrix.elements;\n\n\t\t\t\t// get X column of matrix\n\t\t\t\tv.set( te[ 0 ], te[ 1 ], te[ 2 ] );\n\t\t\t\tv.multiplyScalar( - distance );\n\n\t\t\t\tpanOffset.add( v );\n\n\t\t\t};\n\n\t\t}();\n\n\t\t// pass in distance in world space to move up\n\t\tthis.panUp = function() {\n\n\t\t\tvar v = new THREE.Vector3();\n\n\t\t\treturn function panUp ( distance ) {\n\n\t\t\t\tvar te = this.object.matrix.elements;\n\n\t\t\t\t// get Y column of matrix\n\t\t\t\tv.set( te[ 4 ], te[ 5 ], te[ 6 ] );\n\t\t\t\tv.multiplyScalar( distance );\n\n\t\t\t\tpanOffset.add( v );\n\n\t\t\t};\n\n\t\t}();\n\n\t\t// pass in x,y of change desired in pixel space,\n\t\t// right and down are positive\n\t\tthis.pan = function ( deltaX, deltaY, screenWidth, screenHeight ) {\n\n\t\t\tif ( scope.object instanceof THREE.PerspectiveCamera ) {\n\n\t\t\t\t// perspective\n\t\t\t\tvar position = scope.object.position;\n\t\t\t\tvar offset = position.clone().sub( scope.target );\n\t\t\t\tvar targetDistance = offset.length();\n\n\t\t\t\t// half of the fov is center to top of screen\n\t\t\t\ttargetDistance *= Math.tan( ( scope.object.fov / 2 ) * Math.PI / 180.0 );\n\n\t\t\t\t// we actually don't use screenWidth, since perspective camera is fixed to screen height\n\t\t\t\tscope.panLeft( 2 * deltaX * targetDistance / screenHeight );\n\t\t\t\tscope.panUp( 2 * deltaY * targetDistance / screenHeight );\n\n\t\t\t} else if ( scope.object instanceof THREE.OrthographicCamera ) {\n\n\t\t\t\t// orthographic\n\t\t\t\tscope.panLeft( deltaX * ( scope.object.right - scope.object.left ) / screenWidth );\n\t\t\t\tscope.panUp( deltaY * ( scope.object.top - scope.object.bottom ) / screenHeight );\n\n\t\t\t} else {\n\n\t\t\t\t// camera neither orthographic or perspective\n\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.' );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.dollyIn = function ( dollyScale ) {\n\n\t\t\tif ( scope.object instanceof THREE.PerspectiveCamera ) {\n\n\t\t\t\tscale /= dollyScale;\n\n\t\t\t} else if ( scope.object instanceof THREE.OrthographicCamera ) {\n\n\t\t\t\tscope.object.zoom = Math.max( this.minZoom, Math.min( this.maxZoom, this.object.zoom * dollyScale ) );\n\t\t\t\tscope.object.updateProjectionMatrix();\n\t\t\t\tzoomChanged = true;\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.dollyOut = function ( dollyScale ) {\n\n\t\t\tif ( scope.object instanceof THREE.PerspectiveCamera ) {\n\n\t\t\t\tscale *= dollyScale;\n\n\t\t\t} else if ( scope.object instanceof THREE.OrthographicCamera ) {\n\n\t\t\t\tscope.object.zoom = Math.max( this.minZoom, Math.min( this.maxZoom, this.object.zoom / dollyScale ) );\n\t\t\t\tscope.object.updateProjectionMatrix();\n\t\t\t\tzoomChanged = true;\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.update = function() {\n\n\t\t\tvar offset = new THREE.Vector3();\n\n\t\t\t// so camera.up is the orbit axis\n\t\t\tvar quat = new THREE.Quaternion().setFromUnitVectors( object.up, new THREE.Vector3( 0, 1, 0 ) );\n\t\t\tvar quatInverse = quat.clone().inverse();\n\n\t\t\tvar lastPosition = new THREE.Vector3();\n\t\t\tvar lastQuaternion = new THREE.Quaternion();\n\n\t\t\treturn function () {\n\n\t\t\t\tvar position = this.object.position;\n\n\t\t\t\toffset.copy( position ).sub( this.target );\n\n\t\t\t\t// rotate offset to \"y-axis-is-up\" space\n\t\t\t\toffset.applyQuaternion( quat );\n\n\t\t\t\t// angle from z-axis around y-axis\n\n\t\t\t\ttheta = Math.atan2( offset.x, offset.z );\n\n\t\t\t\t// angle from y-axis\n\n\t\t\t\tphi = Math.atan2( Math.sqrt( offset.x * offset.x + offset.z * offset.z ), offset.y );\n\n\t\t\t\ttheta += thetaDelta;\n\t\t\t\tphi += phiDelta;\n\n\t\t\t\t// restrict theta to be between desired limits\n\t\t\t\ttheta = Math.max( this.minAzimuthAngle, Math.min( this.maxAzimuthAngle, theta ) );\n\n\t\t\t\t// restrict phi to be between desired limits\n\t\t\t\tphi = Math.max( this.minPolarAngle, Math.min( this.maxPolarAngle, phi ) );\n\n\t\t\t\t// restrict phi to be betwee EPS and PI-EPS\n\t\t\t\tphi = Math.max( EPS, Math.min( Math.PI - EPS, phi ) );\n\n\t\t\t\tvar radius = offset.length() * scale;\n\n\t\t\t\t// restrict radius to be between desired limits\n\t\t\t\tradius = Math.max( this.minDistance, Math.min( this.maxDistance, radius ) );\n\n\t\t\t\t// move target to panned location\n\t\t\t\tthis.target.add( panOffset );\n\n\t\t\t\toffset.x = radius * Math.sin( phi ) * Math.sin( theta );\n\t\t\t\toffset.y = radius * Math.cos( phi );\n\t\t\t\toffset.z = radius * Math.sin( phi ) * Math.cos( theta );\n\n\t\t\t\t// rotate offset back to \"camera-up-vector-is-up\" space\n\t\t\t\toffset.applyQuaternion( quatInverse );\n\n\t\t\t\tposition.copy( this.target ).add( offset );\n\n\t\t\t\tthis.object.lookAt( this.target );\n\n\t\t\t\tif ( this.enableDamping === true ) {\n\n\t\t\t\t\tthetaDelta *= ( 1 - this.dampingFactor );\n\t\t\t\t\tphiDelta *= ( 1 - this.dampingFactor );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthetaDelta = 0;\n\t\t\t\t\tphiDelta = 0;\n\n\t\t\t\t}\n\n\t\t\t\tscale = 1;\n\t\t\t\tpanOffset.set( 0, 0, 0 );\n\n\t\t\t\t// update condition is:\n\t\t\t\t// min(camera displacement, camera rotation in radians)^2 > EPS\n\t\t\t\t// using small-angle approximation cos(x/2) = 1 - x^2 / 8\n\n\t\t\t\tif ( zoomChanged ||\n\t\t\t\t\t lastPosition.distanceToSquared( this.object.position ) > EPS ||\n\t\t\t\t\t8 * ( 1 - lastQuaternion.dot( this.object.quaternion ) ) > EPS ) {\n\n\t\t\t\t\tlastPosition.copy( this.object.position );\n\t\t\t\t\tlastQuaternion.copy( this.object.quaternion );\n\t\t\t\t\tzoomChanged = false;\n\n\t\t\t\t\treturn true;\n\n\t\t\t\t}\n\n\t\t\t\treturn false;\n\n\t\t\t};\n\n\t\t}();\n\n\t};\n\n\n\t// This set of controls performs orbiting, dollying (zooming), and panning. It maintains\n\t// the \"up\" direction as +Y, unlike the TrackballControls. Touch on tablet and phones is\n\t// supported.\n\t//\n\t//    Orbit - left mouse / touch: one finger move\n\t//    Zoom - middle mouse, or mousewheel / touch: two finger spread or squish\n\t//    Pan - right mouse, or arrow keys / touch: three finter swipe\n\n\tfunction OrbitControls ( object, domElement ) {\n\n\t\tvar constraint = new OrbitConstraint( object );\n\n\t\tthis.domElement = ( domElement !== undefined ) ? domElement : document;\n\n\t\t// API\n\n\t\tObject.defineProperty( this, 'constraint', {\n\n\t\t\tget: function() {\n\n\t\t\t\treturn constraint;\n\n\t\t\t}\n\n\t\t} );\n\n\t\tthis.getPolarAngle = function () {\n\n\t\t\treturn constraint.getPolarAngle();\n\n\t\t};\n\n\t\tthis.getAzimuthalAngle = function () {\n\n\t\t\treturn constraint.getAzimuthalAngle();\n\n\t\t};\n\n\t\t// Set to false to disable this control\n\t\tthis.enabled = true;\n\n\t\t// center is old, deprecated; use \"target\" instead\n\t\tthis.center = this.target;\n\n\t\t// This option actually enables dollying in and out; left as \"zoom\" for\n\t\t// backwards compatibility.\n\t\t// Set to false to disable zooming\n\t\tthis.enableZoom = true;\n\t\tthis.zoomSpeed = 1.0;\n\n\t\t// Set to false to disable rotating\n\t\tthis.enableRotate = true;\n\t\tthis.rotateSpeed = 1.0;\n\n\t\t// Set to false to disable panning\n\t\tthis.enablePan = true;\n\t\tthis.keyPanSpeed = 7.0;\t// pixels moved per arrow key push\n\n\t\t// Set to true to automatically rotate around the target\n\t\t// If auto-rotate is enabled, you must call controls.update() in your animation loop\n\t\tthis.autoRotate = false;\n\t\tthis.autoRotateSpeed = 2.0; // 30 seconds per round when fps is 60\n\n\t\t// Set to false to disable use of the keys\n\t\tthis.enableKeys = true;\n\n\t\t// The four arrow keys\n\t\tthis.keys = { LEFT: 37, UP: 38, RIGHT: 39, BOTTOM: 40 };\n\n\t\t// Mouse buttons\n\t\tthis.mouseButtons = { ORBIT: THREE.MOUSE.LEFT, ZOOM: THREE.MOUSE.MIDDLE, PAN: THREE.MOUSE.RIGHT };\n\n\t\t////////////\n\t\t// internals\n\n\t\tvar scope = this;\n\n\t\tvar rotateStart = new THREE.Vector2();\n\t\tvar rotateEnd = new THREE.Vector2();\n\t\tvar rotateDelta = new THREE.Vector2();\n\n\t\tvar panStart = new THREE.Vector2();\n\t\tvar panEnd = new THREE.Vector2();\n\t\tvar panDelta = new THREE.Vector2();\n\n\t\tvar dollyStart = new THREE.Vector2();\n\t\tvar dollyEnd = new THREE.Vector2();\n\t\tvar dollyDelta = new THREE.Vector2();\n\n\t\tvar STATE = { NONE : - 1, ROTATE : 0, DOLLY : 1, PAN : 2, TOUCH_ROTATE : 3, TOUCH_DOLLY : 4, TOUCH_PAN : 5 };\n\n\t\tvar state = STATE.NONE;\n\n\t\t// for reset\n\n\t\tthis.target0 = this.target.clone();\n\t\tthis.position0 = this.object.position.clone();\n\t\tthis.zoom0 = this.object.zoom;\n\n\t\t// events\n\n\t\tvar changeEvent = { type: 'change' };\n\t\tvar startEvent = { type: 'start' };\n\t\tvar endEvent = { type: 'end' };\n\n\t\t// pass in x,y of change desired in pixel space,\n\t\t// right and down are positive\n\t\tfunction pan( deltaX, deltaY ) {\n\n\t\t\tvar element = scope.domElement === document ? scope.domElement.body : scope.domElement;\n\n\t\t\tconstraint.pan( deltaX, deltaY, element.clientWidth, element.clientHeight );\n\n\t\t}\n\n\t\tthis.update = function () {\n\n\t\t\tif ( this.autoRotate && state === STATE.NONE ) {\n\n\t\t\t\tconstraint.rotateLeft( getAutoRotationAngle() );\n\n\t\t\t}\n\n\t\t\tif ( constraint.update() === true ) {\n\n\t\t\t\tthis.dispatchEvent( changeEvent );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.reset = function () {\n\n\t\t\tstate = STATE.NONE;\n\n\t\t\tthis.target.copy( this.target0 );\n\t\t\tthis.object.position.copy( this.position0 );\n\t\t\tthis.object.zoom = this.zoom0;\n\n\t\t\tthis.object.updateProjectionMatrix();\n\t\t\tthis.dispatchEvent( changeEvent );\n\n\t\t\tthis.update();\n\n\t\t};\n\n\t\tfunction getAutoRotationAngle() {\n\n\t\t\treturn 2 * Math.PI / 60 / 60 * scope.autoRotateSpeed;\n\n\t\t}\n\n\t\tfunction getZoomScale() {\n\n\t\t\treturn Math.pow( 0.95, scope.zoomSpeed );\n\n\t\t}\n\n\t\tfunction onMouseDown( event ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\tevent.preventDefault();\n\n\t\t\tif ( event.button === scope.mouseButtons.ORBIT ) {\n\n\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\tstate = STATE.ROTATE;\n\n\t\t\t\trotateStart.set( event.clientX, event.clientY );\n\n\t\t\t} else if ( event.button === scope.mouseButtons.ZOOM ) {\n\n\t\t\t\tif ( scope.enableZoom === false ) return;\n\n\t\t\t\tstate = STATE.DOLLY;\n\n\t\t\t\tdollyStart.set( event.clientX, event.clientY );\n\n\t\t\t} else if ( event.button === scope.mouseButtons.PAN ) {\n\n\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\tstate = STATE.PAN;\n\n\t\t\t\tpanStart.set( event.clientX, event.clientY );\n\n\t\t\t}\n\n\t\t\tif ( state !== STATE.NONE ) {\n\n\t\t\t\tdocument.addEventListener( 'mousemove', onMouseMove, false );\n\t\t\t\tdocument.addEventListener( 'mouseup', onMouseUp, false );\n\t\t\t\tscope.dispatchEvent( startEvent );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onMouseMove( event ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\tevent.preventDefault();\n\n\t\t\tvar element = scope.domElement === document ? scope.domElement.body : scope.domElement;\n\n\t\t\tif ( state === STATE.ROTATE ) {\n\n\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\trotateEnd.set( event.clientX, event.clientY );\n\t\t\t\trotateDelta.subVectors( rotateEnd, rotateStart );\n\n\t\t\t\t// rotating across whole screen goes 360 degrees around\n\t\t\t\tconstraint.rotateLeft( 2 * Math.PI * rotateDelta.x / element.clientWidth * scope.rotateSpeed );\n\n\t\t\t\t// rotating up and down along whole screen attempts to go 360, but limited to 180\n\t\t\t\tconstraint.rotateUp( 2 * Math.PI * rotateDelta.y / element.clientHeight * scope.rotateSpeed );\n\n\t\t\t\trotateStart.copy( rotateEnd );\n\n\t\t\t} else if ( state === STATE.DOLLY ) {\n\n\t\t\t\tif ( scope.enableZoom === false ) return;\n\n\t\t\t\tdollyEnd.set( event.clientX, event.clientY );\n\t\t\t\tdollyDelta.subVectors( dollyEnd, dollyStart );\n\n\t\t\t\tif ( dollyDelta.y > 0 ) {\n\n\t\t\t\t\tconstraint.dollyIn( getZoomScale() );\n\n\t\t\t\t} else if ( dollyDelta.y < 0 ) {\n\n\t\t\t\t\tconstraint.dollyOut( getZoomScale() );\n\n\t\t\t\t}\n\n\t\t\t\tdollyStart.copy( dollyEnd );\n\n\t\t\t} else if ( state === STATE.PAN ) {\n\n\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\tpanEnd.set( event.clientX, event.clientY );\n\t\t\t\tpanDelta.subVectors( panEnd, panStart );\n\n\t\t\t\tpan( panDelta.x, panDelta.y );\n\n\t\t\t\tpanStart.copy( panEnd );\n\n\t\t\t}\n\n\t\t\tif ( state !== STATE.NONE ) scope.update();\n\n\t\t}\n\n\t\tfunction onMouseUp( /* event */ ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\tdocument.removeEventListener( 'mousemove', onMouseMove, false );\n\t\t\tdocument.removeEventListener( 'mouseup', onMouseUp, false );\n\t\t\tscope.dispatchEvent( endEvent );\n\t\t\tstate = STATE.NONE;\n\n\t\t}\n\n\t\tfunction onMouseWheel( event ) {\n\n\t\t\tif ( scope.enabled === false || scope.enableZoom === false || state !== STATE.NONE ) return;\n\n\t\t\tevent.preventDefault();\n\t\t\tevent.stopPropagation();\n\n\t\t\tvar delta = 0;\n\n\t\t\tif ( event.wheelDelta !== undefined ) {\n\n\t\t\t\t// WebKit / Opera / Explorer 9\n\n\t\t\t\tdelta = event.wheelDelta;\n\n\t\t\t} else if ( event.detail !== undefined ) {\n\n\t\t\t\t// Firefox\n\n\t\t\t\tdelta = - event.detail;\n\n\t\t\t}\n\n\t\t\tif ( delta > 0 ) {\n\n\t\t\t\tconstraint.dollyOut( getZoomScale() );\n\n\t\t\t} else if ( delta < 0 ) {\n\n\t\t\t\tconstraint.dollyIn( getZoomScale() );\n\n\t\t\t}\n\n\t\t\tscope.update();\n\t\t\tscope.dispatchEvent( startEvent );\n\t\t\tscope.dispatchEvent( endEvent );\n\n\t\t}\n\n\t\tfunction onKeyDown( event ) {\n\n\t\t\tif ( scope.enabled === false || scope.enableKeys === false || scope.enablePan === false ) return;\n\n\t\t\tswitch ( event.keyCode ) {\n\n\t\t\t\tcase scope.keys.UP:\n\t\t\t\t\tpan( 0, scope.keyPanSpeed );\n\t\t\t\t\tscope.update();\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase scope.keys.BOTTOM:\n\t\t\t\t\tpan( 0, - scope.keyPanSpeed );\n\t\t\t\t\tscope.update();\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase scope.keys.LEFT:\n\t\t\t\t\tpan( scope.keyPanSpeed, 0 );\n\t\t\t\t\tscope.update();\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase scope.keys.RIGHT:\n\t\t\t\t\tpan( - scope.keyPanSpeed, 0 );\n\t\t\t\t\tscope.update();\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction touchstart( event ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\tswitch ( event.touches.length ) {\n\n\t\t\t\tcase 1:\t// one-fingered touch: rotate\n\n\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\tstate = STATE.TOUCH_ROTATE;\n\n\t\t\t\t\trotateStart.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 2:\t// two-fingered touch: dolly\n\n\t\t\t\t\tif ( scope.enableZoom === false ) return;\n\n\t\t\t\t\tstate = STATE.TOUCH_DOLLY;\n\n\t\t\t\t\tvar dx = event.touches[ 0 ].pageX - event.touches[ 1 ].pageX;\n\t\t\t\t\tvar dy = event.touches[ 0 ].pageY - event.touches[ 1 ].pageY;\n\t\t\t\t\tvar distance = Math.sqrt( dx * dx + dy * dy );\n\t\t\t\t\tdollyStart.set( 0, distance );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 3: // three-fingered touch: pan\n\n\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\tstate = STATE.TOUCH_PAN;\n\n\t\t\t\t\tpanStart.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t}\n\n\t\t\tif ( state !== STATE.NONE ) scope.dispatchEvent( startEvent );\n\n\t\t}\n\n\t\tfunction touchmove( event ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\tevent.preventDefault();\n\t\t\tevent.stopPropagation();\n\n\t\t\tvar element = scope.domElement === document ? scope.domElement.body : scope.domElement;\n\n\t\t\tswitch ( event.touches.length ) {\n\n\t\t\t\tcase 1: // one-fingered touch: rotate\n\n\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\t\t\t\t\tif ( state !== STATE.TOUCH_ROTATE ) return;\n\n\t\t\t\t\trotateEnd.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\t\t\t\t\trotateDelta.subVectors( rotateEnd, rotateStart );\n\n\t\t\t\t\t// rotating across whole screen goes 360 degrees around\n\t\t\t\t\tconstraint.rotateLeft( 2 * Math.PI * rotateDelta.x / element.clientWidth * scope.rotateSpeed );\n\t\t\t\t\t// rotating up and down along whole screen attempts to go 360, but limited to 180\n\t\t\t\t\tconstraint.rotateUp( 2 * Math.PI * rotateDelta.y / element.clientHeight * scope.rotateSpeed );\n\n\t\t\t\t\trotateStart.copy( rotateEnd );\n\n\t\t\t\t\tscope.update();\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 2: // two-fingered touch: dolly\n\n\t\t\t\t\tif ( scope.enableZoom === false ) return;\n\t\t\t\t\tif ( state !== STATE.TOUCH_DOLLY ) return;\n\n\t\t\t\t\tvar dx = event.touches[ 0 ].pageX - event.touches[ 1 ].pageX;\n\t\t\t\t\tvar dy = event.touches[ 0 ].pageY - event.touches[ 1 ].pageY;\n\t\t\t\t\tvar distance = Math.sqrt( dx * dx + dy * dy );\n\n\t\t\t\t\tdollyEnd.set( 0, distance );\n\t\t\t\t\tdollyDelta.subVectors( dollyEnd, dollyStart );\n\n\t\t\t\t\tif ( dollyDelta.y > 0 ) {\n\n\t\t\t\t\t\tconstraint.dollyOut( getZoomScale() );\n\n\t\t\t\t\t} else if ( dollyDelta.y < 0 ) {\n\n\t\t\t\t\t\tconstraint.dollyIn( getZoomScale() );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tdollyStart.copy( dollyEnd );\n\n\t\t\t\t\tscope.update();\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 3: // three-fingered touch: pan\n\n\t\t\t\t\tif ( scope.enablePan === false ) return;\n\t\t\t\t\tif ( state !== STATE.TOUCH_PAN ) return;\n\n\t\t\t\t\tpanEnd.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\t\t\t\t\tpanDelta.subVectors( panEnd, panStart );\n\n\t\t\t\t\tpan( panDelta.x, panDelta.y );\n\n\t\t\t\t\tpanStart.copy( panEnd );\n\n\t\t\t\t\tscope.update();\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction touchend( /* event */ ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\tscope.dispatchEvent( endEvent );\n\t\t\tstate = STATE.NONE;\n\n\t\t}\n\n\t\tfunction contextmenu( event ) {\n\n\t\t\tevent.preventDefault();\n\n\t\t}\n\n\t\tthis.dispose = function() {\n\n\t\t\tthis.domElement.removeEventListener( 'contextmenu', contextmenu, false );\n\t\t\tthis.domElement.removeEventListener( 'mousedown', onMouseDown, false );\n\t\t\tthis.domElement.removeEventListener( 'mousewheel', onMouseWheel, false );\n\t\t\tthis.domElement.removeEventListener( 'MozMousePixelScroll', onMouseWheel, false ); // firefox\n\n\t\t\tthis.domElement.removeEventListener( 'touchstart', touchstart, false );\n\t\t\tthis.domElement.removeEventListener( 'touchend', touchend, false );\n\t\t\tthis.domElement.removeEventListener( 'touchmove', touchmove, false );\n\n\t\t\tdocument.removeEventListener( 'mousemove', onMouseMove, false );\n\t\t\tdocument.removeEventListener( 'mouseup', onMouseUp, false );\n\n\t\t\twindow.removeEventListener( 'keydown', onKeyDown, false );\n\n\t\t}\n\n\t\tthis.domElement.addEventListener( 'contextmenu', contextmenu, false );\n\n\t\tthis.domElement.addEventListener( 'mousedown', onMouseDown, false );\n\t\tthis.domElement.addEventListener( 'mousewheel', onMouseWheel, false );\n\t\tthis.domElement.addEventListener( 'MozMousePixelScroll', onMouseWheel, false ); // firefox\n\n\t\tthis.domElement.addEventListener( 'touchstart', touchstart, false );\n\t\tthis.domElement.addEventListener( 'touchend', touchend, false );\n\t\tthis.domElement.addEventListener( 'touchmove', touchmove, false );\n\n\t\twindow.addEventListener( 'keydown', onKeyDown, false );\n\n\t\t// force an update at start\n\t\tthis.update();\n\n\t};\n\n\tOrbitControls.prototype = Object.create( THREE.EventDispatcher.prototype );\n\tOrbitControls.prototype.constructor = OrbitControls;\n\n\tObject.defineProperties( OrbitControls.prototype, {\n\n\t\tobject: {\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this.constraint.object;\n\n\t\t\t}\n\n\t\t},\n\n\t\ttarget: {\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this.constraint.target;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.OrbitControls: target is now immutable. Use target.set() instead.' );\n\t\t\t\tthis.constraint.target.copy( value );\n\n\t\t\t}\n\n\t\t},\n\n\t\tminDistance : {\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this.constraint.minDistance;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tthis.constraint.minDistance = value;\n\n\t\t\t}\n\n\t\t},\n\n\t\tmaxDistance : {\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this.constraint.maxDistance;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tthis.constraint.maxDistance = value;\n\n\t\t\t}\n\n\t\t},\n\n\t\tminZoom : {\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this.constraint.minZoom;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tthis.constraint.minZoom = value;\n\n\t\t\t}\n\n\t\t},\n\n\t\tmaxZoom : {\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this.constraint.maxZoom;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tthis.constraint.maxZoom = value;\n\n\t\t\t}\n\n\t\t},\n\n\t\tminPolarAngle : {\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this.constraint.minPolarAngle;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tthis.constraint.minPolarAngle = value;\n\n\t\t\t}\n\n\t\t},\n\n\t\tmaxPolarAngle : {\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this.constraint.maxPolarAngle;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tthis.constraint.maxPolarAngle = value;\n\n\t\t\t}\n\n\t\t},\n\n\t\tminAzimuthAngle : {\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this.constraint.minAzimuthAngle;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tthis.constraint.minAzimuthAngle = value;\n\n\t\t\t}\n\n\t\t},\n\n\t\tmaxAzimuthAngle : {\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this.constraint.maxAzimuthAngle;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tthis.constraint.maxAzimuthAngle = value;\n\n\t\t\t}\n\n\t\t},\n\n\t\tenableDamping : {\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this.constraint.enableDamping;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tthis.constraint.enableDamping = value;\n\n\t\t\t}\n\n\t\t},\n\n\t\tdampingFactor : {\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this.constraint.dampingFactor;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tthis.constraint.dampingFactor = value;\n\n\t\t\t}\n\n\t\t},\n\n\t\t// backward compatibility\n\n\t\tnoZoom: {\n\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.OrbitControls: .noZoom has been deprecated. Use .enableZoom instead.' );\n\t\t\t\treturn ! this.enableZoom;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.OrbitControls: .noZoom has been deprecated. Use .enableZoom instead.' );\n\t\t\t\tthis.enableZoom = ! value;\n\n\t\t\t}\n\n\t\t},\n\n\t\tnoRotate: {\n\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.OrbitControls: .noRotate has been deprecated. Use .enableRotate instead.' );\n\t\t\t\treturn ! this.enableRotate;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.OrbitControls: .noRotate has been deprecated. Use .enableRotate instead.' );\n\t\t\t\tthis.enableRotate = ! value;\n\n\t\t\t}\n\n\t\t},\n\n\t\tnoPan: {\n\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.OrbitControls: .noPan has been deprecated. Use .enablePan instead.' );\n\t\t\t\treturn ! this.enablePan;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.OrbitControls: .noPan has been deprecated. Use .enablePan instead.' );\n\t\t\t\tthis.enablePan = ! value;\n\n\t\t\t}\n\n\t\t},\n\n\t\tnoKeys: {\n\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.OrbitControls: .noKeys has been deprecated. Use .enableKeys instead.' );\n\t\t\t\treturn ! this.enableKeys;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.OrbitControls: .noKeys has been deprecated. Use .enableKeys instead.' );\n\t\t\t\tthis.enableKeys = ! value;\n\n\t\t\t}\n\n\t\t},\n\n\t\tstaticMoving : {\n\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.OrbitControls: .staticMoving has been deprecated. Use .enableDamping instead.' );\n\t\t\t\treturn ! this.constraint.enableDamping;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.OrbitControls: .staticMoving has been deprecated. Use .enableDamping instead.' );\n\t\t\t\tthis.constraint.enableDamping = ! value;\n\n\t\t\t}\n\n\t\t},\n\n\t\tdynamicDampingFactor : {\n\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.OrbitControls: .dynamicDampingFactor has been renamed. Use .dampingFactor instead.' );\n\t\t\t\treturn this.constraint.dampingFactor;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.OrbitControls: .dynamicDampingFactor has been renamed. Use .dampingFactor instead.' );\n\t\t\t\tthis.constraint.dampingFactor = value;\n\n\t\t\t}\n\n\t\t}\n\n\t} );\n\n\treturn OrbitControls;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/three-orbit-controls/index.js\n// module id = 38\n// module chunks = 0","var self = self || {};// File:src/Three.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nvar THREE = { REVISION: '72' };\r\n\r\n//\r\n\r\nif ( typeof define === 'function' && define.amd ) {\r\n\r\n\t\tdefine( 'three', THREE );\r\n\r\n} else if ( 'undefined' !== typeof exports && 'undefined' !== typeof module ) {\r\n\r\n\t\tmodule.exports = THREE;\r\n\r\n}\r\n\r\n\r\n// polyfills\r\n\r\nif ( self.requestAnimationFrame === undefined || self.cancelAnimationFrame === undefined ) {\r\n\r\n\t// Missing in Android stock browser.\r\n\r\n\t( function () {\r\n\r\n\t\tvar lastTime = 0;\r\n\t\tvar vendors = [ 'ms', 'moz', 'webkit', 'o' ];\r\n\r\n\t\tfor ( var x = 0; x < vendors.length && ! self.requestAnimationFrame; ++ x ) {\r\n\r\n\t\t\tself.requestAnimationFrame = self[ vendors[ x ] + 'RequestAnimationFrame' ];\r\n\t\t\tself.cancelAnimationFrame = self[ vendors[ x ] + 'CancelAnimationFrame' ] || self[ vendors[ x ] + 'CancelRequestAnimationFrame' ];\r\n\r\n\t\t}\r\n\r\n\t\tif ( self.requestAnimationFrame === undefined && self.setTimeout !== undefined ) {\r\n\r\n\t\t\tself.requestAnimationFrame = function ( callback ) {\r\n\r\n\t\t\t\tvar currTime = Date.now(), timeToCall = Math.max( 0, 16 - ( currTime - lastTime ) );\r\n\t\t\t\tvar id = self.setTimeout( function () {\r\n\r\n\t\t\t\t\tcallback( currTime + timeToCall );\r\n\r\n\t\t\t\t}, timeToCall );\r\n\t\t\t\tlastTime = currTime + timeToCall;\r\n\t\t\t\treturn id;\r\n\r\n\t\t\t};\r\n\r\n\t\t}\r\n\r\n\t\tif ( self.cancelAnimationFrame === undefined && self.clearTimeout !== undefined ) {\r\n\r\n\t\t\tself.cancelAnimationFrame = function ( id ) {\r\n\r\n\t\t\t\tself.clearTimeout( id );\r\n\r\n\t\t\t};\r\n\r\n\t\t}\r\n\r\n\t}() );\r\n\r\n}\r\n\r\nif ( Math.sign === undefined ) {\r\n\r\n\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/sign\r\n\r\n\tMath.sign = function ( x ) {\r\n\r\n\t\treturn ( x < 0 ) ? - 1 : ( x > 0 ) ? 1 : + x;\r\n\r\n\t};\r\n\r\n}\r\n\r\nif ( Function.prototype.name === undefined && Object.defineProperty !== undefined ) {\r\n\r\n\t// Missing in IE9-11.\r\n\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/name\r\n\r\n\tObject.defineProperty( Function.prototype, 'name', {\r\n\r\n\t\tget: function () {\r\n\r\n\t\t\treturn this.toString().match( /^\\s*function\\s*(\\S*)\\s*\\(/ )[ 1 ];\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n}\r\n\r\n// https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent.button\r\n\r\nTHREE.MOUSE = { LEFT: 0, MIDDLE: 1, RIGHT: 2 };\r\n\r\n// GL STATE CONSTANTS\r\n\r\nTHREE.CullFaceNone = 0;\r\nTHREE.CullFaceBack = 1;\r\nTHREE.CullFaceFront = 2;\r\nTHREE.CullFaceFrontBack = 3;\r\n\r\nTHREE.FrontFaceDirectionCW = 0;\r\nTHREE.FrontFaceDirectionCCW = 1;\r\n\r\n// SHADOWING TYPES\r\n\r\nTHREE.BasicShadowMap = 0;\r\nTHREE.PCFShadowMap = 1;\r\nTHREE.PCFSoftShadowMap = 2;\r\n\r\n// MATERIAL CONSTANTS\r\n\r\n// side\r\n\r\nTHREE.FrontSide = 0;\r\nTHREE.BackSide = 1;\r\nTHREE.DoubleSide = 2;\r\n\r\n// shading\r\n\r\nTHREE.FlatShading = 1;\r\nTHREE.SmoothShading = 2;\r\n\r\n// colors\r\n\r\nTHREE.NoColors = 0;\r\nTHREE.FaceColors = 1;\r\nTHREE.VertexColors = 2;\r\n\r\n// blending modes\r\n\r\nTHREE.NoBlending = 0;\r\nTHREE.NormalBlending = 1;\r\nTHREE.AdditiveBlending = 2;\r\nTHREE.SubtractiveBlending = 3;\r\nTHREE.MultiplyBlending = 4;\r\nTHREE.CustomBlending = 5;\r\n\r\n// custom blending equations\r\n// (numbers start from 100 not to clash with other\r\n// mappings to OpenGL constants defined in Texture.js)\r\n\r\nTHREE.AddEquation = 100;\r\nTHREE.SubtractEquation = 101;\r\nTHREE.ReverseSubtractEquation = 102;\r\nTHREE.MinEquation = 103;\r\nTHREE.MaxEquation = 104;\r\n\r\n// custom blending destination factors\r\n\r\nTHREE.ZeroFactor = 200;\r\nTHREE.OneFactor = 201;\r\nTHREE.SrcColorFactor = 202;\r\nTHREE.OneMinusSrcColorFactor = 203;\r\nTHREE.SrcAlphaFactor = 204;\r\nTHREE.OneMinusSrcAlphaFactor = 205;\r\nTHREE.DstAlphaFactor = 206;\r\nTHREE.OneMinusDstAlphaFactor = 207;\r\n\r\n// custom blending source factors\r\n\r\n//THREE.ZeroFactor = 200;\r\n//THREE.OneFactor = 201;\r\n//THREE.SrcAlphaFactor = 204;\r\n//THREE.OneMinusSrcAlphaFactor = 205;\r\n//THREE.DstAlphaFactor = 206;\r\n//THREE.OneMinusDstAlphaFactor = 207;\r\nTHREE.DstColorFactor = 208;\r\nTHREE.OneMinusDstColorFactor = 209;\r\nTHREE.SrcAlphaSaturateFactor = 210;\r\n\r\n// depth modes\r\n\r\nTHREE.NeverDepth = 0;\r\nTHREE.AlwaysDepth = 1;\r\nTHREE.LessDepth = 2;\r\nTHREE.LessEqualDepth = 3;\r\nTHREE.EqualDepth = 4;\r\nTHREE.GreaterEqualDepth = 5;\r\nTHREE.GreaterDepth = 6;\r\nTHREE.NotEqualDepth = 7;\r\n\r\n\r\n// TEXTURE CONSTANTS\r\n\r\nTHREE.MultiplyOperation = 0;\r\nTHREE.MixOperation = 1;\r\nTHREE.AddOperation = 2;\r\n\r\n// Mapping modes\r\n\r\nTHREE.UVMapping = 300;\r\n\r\nTHREE.CubeReflectionMapping = 301;\r\nTHREE.CubeRefractionMapping = 302;\r\n\r\nTHREE.EquirectangularReflectionMapping = 303;\r\nTHREE.EquirectangularRefractionMapping = 304;\r\n\r\nTHREE.SphericalReflectionMapping = 305;\r\n\r\n// Wrapping modes\r\n\r\nTHREE.RepeatWrapping = 1000;\r\nTHREE.ClampToEdgeWrapping = 1001;\r\nTHREE.MirroredRepeatWrapping = 1002;\r\n\r\n// Filters\r\n\r\nTHREE.NearestFilter = 1003;\r\nTHREE.NearestMipMapNearestFilter = 1004;\r\nTHREE.NearestMipMapLinearFilter = 1005;\r\nTHREE.LinearFilter = 1006;\r\nTHREE.LinearMipMapNearestFilter = 1007;\r\nTHREE.LinearMipMapLinearFilter = 1008;\r\n\r\n// Data types\r\n\r\nTHREE.UnsignedByteType = 1009;\r\nTHREE.ByteType = 1010;\r\nTHREE.ShortType = 1011;\r\nTHREE.UnsignedShortType = 1012;\r\nTHREE.IntType = 1013;\r\nTHREE.UnsignedIntType = 1014;\r\nTHREE.FloatType = 1015;\r\nTHREE.HalfFloatType = 1025;\r\n\r\n// Pixel types\r\n\r\n//THREE.UnsignedByteType = 1009;\r\nTHREE.UnsignedShort4444Type = 1016;\r\nTHREE.UnsignedShort5551Type = 1017;\r\nTHREE.UnsignedShort565Type = 1018;\r\n\r\n// Pixel formats\r\n\r\nTHREE.AlphaFormat = 1019;\r\nTHREE.RGBFormat = 1020;\r\nTHREE.RGBAFormat = 1021;\r\nTHREE.LuminanceFormat = 1022;\r\nTHREE.LuminanceAlphaFormat = 1023;\r\n// THREE.RGBEFormat handled as THREE.RGBAFormat in shaders\r\nTHREE.RGBEFormat = THREE.RGBAFormat; //1024;\r\n\r\n// DDS / ST3C Compressed texture formats\r\n\r\nTHREE.RGB_S3TC_DXT1_Format = 2001;\r\nTHREE.RGBA_S3TC_DXT1_Format = 2002;\r\nTHREE.RGBA_S3TC_DXT3_Format = 2003;\r\nTHREE.RGBA_S3TC_DXT5_Format = 2004;\r\n\r\n\r\n// PVRTC compressed texture formats\r\n\r\nTHREE.RGB_PVRTC_4BPPV1_Format = 2100;\r\nTHREE.RGB_PVRTC_2BPPV1_Format = 2101;\r\nTHREE.RGBA_PVRTC_4BPPV1_Format = 2102;\r\nTHREE.RGBA_PVRTC_2BPPV1_Format = 2103;\r\n\r\n\r\n// DEPRECATED\r\n\r\nTHREE.Projector = function () {\r\n\r\n\tconsole.error( 'THREE.Projector has been moved to /examples/js/renderers/Projector.js.' );\r\n\r\n\tthis.projectVector = function ( vector, camera ) {\r\n\r\n\t\tconsole.warn( 'THREE.Projector: .projectVector() is now vector.project().' );\r\n\t\tvector.project( camera );\r\n\r\n\t};\r\n\r\n\tthis.unprojectVector = function ( vector, camera ) {\r\n\r\n\t\tconsole.warn( 'THREE.Projector: .unprojectVector() is now vector.unproject().' );\r\n\t\tvector.unproject( camera );\r\n\r\n\t};\r\n\r\n\tthis.pickingRay = function ( vector, camera ) {\r\n\r\n\t\tconsole.error( 'THREE.Projector: .pickingRay() is now raycaster.setFromCamera().' );\r\n\r\n\t};\r\n\r\n};\r\n\r\nTHREE.CanvasRenderer = function () {\r\n\r\n\tconsole.error( 'THREE.CanvasRenderer has been moved to /examples/js/renderers/CanvasRenderer.js' );\r\n\r\n\tthis.domElement = document.createElement( 'canvas' );\r\n\tthis.clear = function () {};\r\n\tthis.render = function () {};\r\n\tthis.setClearColor = function () {};\r\n\tthis.setSize = function () {};\r\n\r\n};\r\n\r\n// File:src/math/Color.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.Color = function ( color ) {\r\n\r\n\tif ( arguments.length === 3 ) {\r\n\r\n\t\treturn this.setRGB( arguments[ 0 ], arguments[ 1 ], arguments[ 2 ] );\r\n\r\n\t}\r\n\r\n\treturn this.set( color );\r\n\r\n};\r\n\r\nTHREE.Color.prototype = {\r\n\r\n\tconstructor: THREE.Color,\r\n\r\n\tr: 1, g: 1, b: 1,\r\n\r\n\tset: function ( value ) {\r\n\r\n\t\tif ( value instanceof THREE.Color ) {\r\n\r\n\t\t\tthis.copy( value );\r\n\r\n\t\t} else if ( typeof value === 'number' ) {\r\n\r\n\t\t\tthis.setHex( value );\r\n\r\n\t\t} else if ( typeof value === 'string' ) {\r\n\r\n\t\t\tthis.setStyle( value );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetHex: function ( hex ) {\r\n\r\n\t\thex = Math.floor( hex );\r\n\r\n\t\tthis.r = ( hex >> 16 & 255 ) / 255;\r\n\t\tthis.g = ( hex >> 8 & 255 ) / 255;\r\n\t\tthis.b = ( hex & 255 ) / 255;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetRGB: function ( r, g, b ) {\r\n\r\n\t\tthis.r = r;\r\n\t\tthis.g = g;\r\n\t\tthis.b = b;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetHSL: function () {\r\n\r\n\t\tfunction hue2rgb ( p, q, t ) {\r\n\r\n\t\t\tif ( t < 0 ) t += 1;\r\n\t\t\tif ( t > 1 ) t -= 1;\r\n\t\t\tif ( t < 1 / 6 ) return p + ( q - p ) * 6 * t;\r\n\t\t\tif ( t < 1 / 2 ) return q;\r\n\t\t\tif ( t < 2 / 3 ) return p + ( q - p ) * 6 * ( 2 / 3 - t );\r\n\t\t\treturn p;\r\n\r\n\t\t}\r\n\r\n\t\treturn function ( h, s, l ) {\r\n\r\n\t\t\t// h,s,l ranges are in 0.0 - 1.0\r\n\t\t\th = THREE.Math.euclideanModulo( h, 1 );\r\n\t\t\ts = THREE.Math.clamp( s, 0, 1 );\r\n\t\t\tl = THREE.Math.clamp( l, 0, 1 );\r\n\r\n\t\t\tif ( s === 0 ) {\r\n\r\n\t\t\t\tthis.r = this.g = this.b = l;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tvar p = l <= 0.5 ? l * ( 1 + s ) : l + s - ( l * s );\r\n\t\t\t\tvar q = ( 2 * l ) - p;\r\n\r\n\t\t\t\tthis.r = hue2rgb( q, p, h + 1 / 3 );\r\n\t\t\t\tthis.g = hue2rgb( q, p, h );\r\n\t\t\t\tthis.b = hue2rgb( q, p, h - 1 / 3 );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tsetStyle: function ( style ) {\r\n\r\n\t\tvar parseAlpha = function ( strAlpha ) {\r\n\r\n\t\t\tvar alpha = parseFloat( strAlpha );\r\n\r\n\t\t\tif ( alpha < 1 ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Color: Alpha component of color ' + style + ' will be ignored.' );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn alpha;\r\n\r\n\t\t}\r\n\r\n\r\n\t\tvar m;\r\n\r\n\t\tif ( m = /^((?:rgb|hsl)a?)\\(\\s*([^\\)]*)\\)/.exec( style ) ) {\r\n\r\n\t\t\t// rgb / hsl\r\n\r\n\t\t\tvar color;\r\n\t\t\tvar name = m[ 1 ];\r\n\t\t\tvar components = m[ 2 ];\r\n\r\n\t\t\tswitch ( name ) {\r\n\r\n\t\t\t\tcase 'rgb':\r\n\r\n\t\t\t\t\tif ( color = /^(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*$/.exec( components ) ) {\r\n\r\n\t\t\t\t\t\t// rgb(255,0,0)\r\n\t\t\t\t\t\tthis.r = Math.min( 255, parseInt( color[ 1 ], 10 ) ) / 255;\r\n\t\t\t\t\t\tthis.g = Math.min( 255, parseInt( color[ 2 ], 10 ) ) / 255;\r\n\t\t\t\t\t\tthis.b = Math.min( 255, parseInt( color[ 3 ], 10 ) ) / 255;\r\n\r\n\t\t\t\t\t\treturn this;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( color = /^(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*$/.exec( components ) ) {\r\n\r\n\t\t\t\t\t\t// rgb(100%,0%,0%)\r\n\t\t\t\t\t\tthis.r = Math.min( 100, parseInt( color[ 1 ], 10 ) ) / 100;\r\n\t\t\t\t\t\tthis.g = Math.min( 100, parseInt( color[ 2 ], 10 ) ) / 100;\r\n\t\t\t\t\t\tthis.b = Math.min( 100, parseInt( color[ 3 ], 10 ) ) / 100;\r\n\r\n\t\t\t\t\t\treturn this;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'rgba':\r\n\r\n\t\t\t\t\tif ( color = /^(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*([0-9]*\\.?[0-9]+)\\s*$/.exec( components ) ) {\r\n\r\n\t\t\t\t\t\t// rgba(255,0,0,0.5)\r\n\t\t\t\t\t\tthis.r = Math.min( 255, parseInt( color[ 1 ], 10 ) ) / 255;\r\n\t\t\t\t\t\tthis.g = Math.min( 255, parseInt( color[ 2 ], 10 ) ) / 255;\r\n\t\t\t\t\t\tthis.b = Math.min( 255, parseInt( color[ 3 ], 10 ) ) / 255;\r\n\t\t\t\t\t\tparseAlpha( color[ 4 ] );\r\n\r\n\t\t\t\t\t\treturn this;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( color = /^(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*([0-9]*\\.?[0-9]+)\\s*$/.exec( components ) ) {\r\n\r\n\t\t\t\t\t\t// rgba(100%,0%,0%,0.5)\r\n\t\t\t\t\t\tthis.r = Math.min( 100, parseInt( color[ 1 ], 10 ) ) / 100;\r\n\t\t\t\t\t\tthis.g = Math.min( 100, parseInt( color[ 2 ], 10 ) ) / 100;\r\n\t\t\t\t\t\tthis.b = Math.min( 100, parseInt( color[ 3 ], 10 ) ) / 100;\r\n\t\t\t\t\t\tparseAlpha( color[ 4 ] );\r\n\r\n\t\t\t\t\t\treturn this;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'hsl':\r\n\r\n\t\t\t\t\tif ( color = /^([0-9]*\\.?[0-9]+)\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*$/.exec( components ) ) {\r\n\r\n\t\t\t\t\t\t// hsl(120,50%,50%)\r\n\t\t\t\t\t\tvar h = parseFloat( color[ 1 ] );\r\n\t\t\t\t\t\tvar s = parseInt( color[ 2 ], 10 ) / 100;\r\n\t\t\t\t\t\tvar l = parseInt( color[ 3 ], 10 ) / 100;\r\n\r\n\t\t\t\t\t\treturn this.setHSL( h, s, l );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'hsla':\r\n\r\n\t\t\t\t\tif ( color = /^([0-9]*\\.?[0-9]+)\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*([0-9]*\\.?[0-9]+)\\s*$/.exec( components ) ) {\r\n\r\n\t\t\t\t\t\t// hsla(120,50%,50%,0.5)\r\n\t\t\t\t\t\tvar h = parseFloat( color[ 1 ] );\r\n\t\t\t\t\t\tvar s = parseInt( color[ 2 ], 10 ) / 100;\r\n\t\t\t\t\t\tvar l = parseInt( color[ 3 ], 10 ) / 100;\r\n\t\t\t\t\t\tparseAlpha( color[ 4 ] );\r\n\r\n\t\t\t\t\t\treturn this.setHSL( h, s, l );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( m = /^\\#([A-Fa-f0-9]+)$/.exec( style ) ) {\r\n\r\n\t\t\t// hex color\r\n\r\n\t\t\tvar hex = m[ 1 ];\r\n\t\t\tvar size = hex.length;\r\n\r\n\t\t\tif ( size === 3 ) {\r\n\r\n\t\t\t\t// #ff0\r\n\t\t\t\tthis.r = parseInt( hex.charAt( 0 ) + hex.charAt( 0 ), 16 ) / 255;\r\n\t\t\t\tthis.g = parseInt( hex.charAt( 1 ) + hex.charAt( 1 ), 16 ) / 255;\r\n\t\t\t\tthis.b = parseInt( hex.charAt( 2 ) + hex.charAt( 2 ), 16 ) / 255;\r\n\r\n\t\t\t\treturn this;\r\n\r\n\t\t\t} else if ( size === 6 ) {\r\n\r\n\t\t\t\t// #ff0000\r\n\t\t\t\tthis.r = parseInt( hex.charAt( 0 ) + hex.charAt( 1 ), 16 ) / 255;\r\n\t\t\t\tthis.g = parseInt( hex.charAt( 2 ) + hex.charAt( 3 ), 16 ) / 255;\r\n\t\t\t\tthis.b = parseInt( hex.charAt( 4 ) + hex.charAt( 5 ), 16 ) / 255;\r\n\r\n\t\t\t\treturn this;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( style && style.length > 0 ) {\r\n\r\n\t\t\t// color keywords\r\n\t\t\tvar hex = THREE.ColorKeywords[ style ];\r\n\r\n\t\t\tif ( hex !== undefined ) {\r\n\r\n\t\t\t\t// red\r\n\t\t\t\tthis.setHex( hex );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// unknown color\r\n\t\t\t\tconsole.warn( 'THREE.Color: Unknown color ' + style );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor( this.r, this.g, this.b );\r\n\r\n\t},\r\n\r\n\tcopy: function ( color ) {\r\n\r\n\t\tthis.r = color.r;\r\n\t\tthis.g = color.g;\r\n\t\tthis.b = color.b;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcopyGammaToLinear: function ( color, gammaFactor ) {\r\n\r\n\t\tif ( gammaFactor === undefined ) gammaFactor = 2.0;\r\n\r\n\t\tthis.r = Math.pow( color.r, gammaFactor );\r\n\t\tthis.g = Math.pow( color.g, gammaFactor );\r\n\t\tthis.b = Math.pow( color.b, gammaFactor );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcopyLinearToGamma: function ( color, gammaFactor ) {\r\n\r\n\t\tif ( gammaFactor === undefined ) gammaFactor = 2.0;\r\n\r\n\t\tvar safeInverse = ( gammaFactor > 0 ) ? ( 1.0 / gammaFactor ) : 1.0;\r\n\r\n\t\tthis.r = Math.pow( color.r, safeInverse );\r\n\t\tthis.g = Math.pow( color.g, safeInverse );\r\n\t\tthis.b = Math.pow( color.b, safeInverse );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tconvertGammaToLinear: function () {\r\n\r\n\t\tvar r = this.r, g = this.g, b = this.b;\r\n\r\n\t\tthis.r = r * r;\r\n\t\tthis.g = g * g;\r\n\t\tthis.b = b * b;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tconvertLinearToGamma: function () {\r\n\r\n\t\tthis.r = Math.sqrt( this.r );\r\n\t\tthis.g = Math.sqrt( this.g );\r\n\t\tthis.b = Math.sqrt( this.b );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tgetHex: function () {\r\n\r\n\t\treturn ( this.r * 255 ) << 16 ^ ( this.g * 255 ) << 8 ^ ( this.b * 255 ) << 0;\r\n\r\n\t},\r\n\r\n\tgetHexString: function () {\r\n\r\n\t\treturn ( '000000' + this.getHex().toString( 16 ) ).slice( - 6 );\r\n\r\n\t},\r\n\r\n\tgetHSL: function ( optionalTarget ) {\r\n\r\n\t\t// h,s,l ranges are in 0.0 - 1.0\r\n\r\n\t\tvar hsl = optionalTarget || { h: 0, s: 0, l: 0 };\r\n\r\n\t\tvar r = this.r, g = this.g, b = this.b;\r\n\r\n\t\tvar max = Math.max( r, g, b );\r\n\t\tvar min = Math.min( r, g, b );\r\n\r\n\t\tvar hue, saturation;\r\n\t\tvar lightness = ( min + max ) / 2.0;\r\n\r\n\t\tif ( min === max ) {\r\n\r\n\t\t\thue = 0;\r\n\t\t\tsaturation = 0;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tvar delta = max - min;\r\n\r\n\t\t\tsaturation = lightness <= 0.5 ? delta / ( max + min ) : delta / ( 2 - max - min );\r\n\r\n\t\t\tswitch ( max ) {\r\n\r\n\t\t\t\tcase r: hue = ( g - b ) / delta + ( g < b ? 6 : 0 ); break;\r\n\t\t\t\tcase g: hue = ( b - r ) / delta + 2; break;\r\n\t\t\t\tcase b: hue = ( r - g ) / delta + 4; break;\r\n\r\n\t\t\t}\r\n\r\n\t\t\thue /= 6;\r\n\r\n\t\t}\r\n\r\n\t\thsl.h = hue;\r\n\t\thsl.s = saturation;\r\n\t\thsl.l = lightness;\r\n\r\n\t\treturn hsl;\r\n\r\n\t},\r\n\r\n\tgetStyle: function () {\r\n\r\n\t\treturn 'rgb(' + ( ( this.r * 255 ) | 0 ) + ',' + ( ( this.g * 255 ) | 0 ) + ',' + ( ( this.b * 255 ) | 0 ) + ')';\r\n\r\n\t},\r\n\r\n\toffsetHSL: function ( h, s, l ) {\r\n\r\n\t\tvar hsl = this.getHSL();\r\n\r\n\t\thsl.h += h; hsl.s += s; hsl.l += l;\r\n\r\n\t\tthis.setHSL( hsl.h, hsl.s, hsl.l );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tadd: function ( color ) {\r\n\r\n\t\tthis.r += color.r;\r\n\t\tthis.g += color.g;\r\n\t\tthis.b += color.b;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\taddColors: function ( color1, color2 ) {\r\n\r\n\t\tthis.r = color1.r + color2.r;\r\n\t\tthis.g = color1.g + color2.g;\r\n\t\tthis.b = color1.b + color2.b;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\taddScalar: function ( s ) {\r\n\r\n\t\tthis.r += s;\r\n\t\tthis.g += s;\r\n\t\tthis.b += s;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmultiply: function ( color ) {\r\n\r\n\t\tthis.r *= color.r;\r\n\t\tthis.g *= color.g;\r\n\t\tthis.b *= color.b;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmultiplyScalar: function ( s ) {\r\n\r\n\t\tthis.r *= s;\r\n\t\tthis.g *= s;\r\n\t\tthis.b *= s;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tlerp: function ( color, alpha ) {\r\n\r\n\t\tthis.r += ( color.r - this.r ) * alpha;\r\n\t\tthis.g += ( color.g - this.g ) * alpha;\r\n\t\tthis.b += ( color.b - this.b ) * alpha;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tequals: function ( c ) {\r\n\r\n\t\treturn ( c.r === this.r ) && ( c.g === this.g ) && ( c.b === this.b );\r\n\r\n\t},\r\n\r\n\tfromArray: function ( array ) {\r\n\r\n\t\tthis.r = array[ 0 ];\r\n\t\tthis.g = array[ 1 ];\r\n\t\tthis.b = array[ 2 ];\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\ttoArray: function ( array, offset ) {\r\n\r\n\t\tif ( array === undefined ) array = [];\r\n\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\tarray[ offset ] = this.r;\r\n\t\tarray[ offset + 1 ] = this.g;\r\n\t\tarray[ offset + 2 ] = this.b;\r\n\r\n\t\treturn array;\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.ColorKeywords = { 'aliceblue': 0xF0F8FF, 'antiquewhite': 0xFAEBD7, 'aqua': 0x00FFFF, 'aquamarine': 0x7FFFD4, 'azure': 0xF0FFFF,\r\n'beige': 0xF5F5DC, 'bisque': 0xFFE4C4, 'black': 0x000000, 'blanchedalmond': 0xFFEBCD, 'blue': 0x0000FF, 'blueviolet': 0x8A2BE2,\r\n'brown': 0xA52A2A, 'burlywood': 0xDEB887, 'cadetblue': 0x5F9EA0, 'chartreuse': 0x7FFF00, 'chocolate': 0xD2691E, 'coral': 0xFF7F50,\r\n'cornflowerblue': 0x6495ED, 'cornsilk': 0xFFF8DC, 'crimson': 0xDC143C, 'cyan': 0x00FFFF, 'darkblue': 0x00008B, 'darkcyan': 0x008B8B,\r\n'darkgoldenrod': 0xB8860B, 'darkgray': 0xA9A9A9, 'darkgreen': 0x006400, 'darkgrey': 0xA9A9A9, 'darkkhaki': 0xBDB76B, 'darkmagenta': 0x8B008B,\r\n'darkolivegreen': 0x556B2F, 'darkorange': 0xFF8C00, 'darkorchid': 0x9932CC, 'darkred': 0x8B0000, 'darksalmon': 0xE9967A, 'darkseagreen': 0x8FBC8F,\r\n'darkslateblue': 0x483D8B, 'darkslategray': 0x2F4F4F, 'darkslategrey': 0x2F4F4F, 'darkturquoise': 0x00CED1, 'darkviolet': 0x9400D3,\r\n'deeppink': 0xFF1493, 'deepskyblue': 0x00BFFF, 'dimgray': 0x696969, 'dimgrey': 0x696969, 'dodgerblue': 0x1E90FF, 'firebrick': 0xB22222,\r\n'floralwhite': 0xFFFAF0, 'forestgreen': 0x228B22, 'fuchsia': 0xFF00FF, 'gainsboro': 0xDCDCDC, 'ghostwhite': 0xF8F8FF, 'gold': 0xFFD700,\r\n'goldenrod': 0xDAA520, 'gray': 0x808080, 'green': 0x008000, 'greenyellow': 0xADFF2F, 'grey': 0x808080, 'honeydew': 0xF0FFF0, 'hotpink': 0xFF69B4,\r\n'indianred': 0xCD5C5C, 'indigo': 0x4B0082, 'ivory': 0xFFFFF0, 'khaki': 0xF0E68C, 'lavender': 0xE6E6FA, 'lavenderblush': 0xFFF0F5, 'lawngreen': 0x7CFC00,\r\n'lemonchiffon': 0xFFFACD, 'lightblue': 0xADD8E6, 'lightcoral': 0xF08080, 'lightcyan': 0xE0FFFF, 'lightgoldenrodyellow': 0xFAFAD2, 'lightgray': 0xD3D3D3,\r\n'lightgreen': 0x90EE90, 'lightgrey': 0xD3D3D3, 'lightpink': 0xFFB6C1, 'lightsalmon': 0xFFA07A, 'lightseagreen': 0x20B2AA, 'lightskyblue': 0x87CEFA,\r\n'lightslategray': 0x778899, 'lightslategrey': 0x778899, 'lightsteelblue': 0xB0C4DE, 'lightyellow': 0xFFFFE0, 'lime': 0x00FF00, 'limegreen': 0x32CD32,\r\n'linen': 0xFAF0E6, 'magenta': 0xFF00FF, 'maroon': 0x800000, 'mediumaquamarine': 0x66CDAA, 'mediumblue': 0x0000CD, 'mediumorchid': 0xBA55D3,\r\n'mediumpurple': 0x9370DB, 'mediumseagreen': 0x3CB371, 'mediumslateblue': 0x7B68EE, 'mediumspringgreen': 0x00FA9A, 'mediumturquoise': 0x48D1CC,\r\n'mediumvioletred': 0xC71585, 'midnightblue': 0x191970, 'mintcream': 0xF5FFFA, 'mistyrose': 0xFFE4E1, 'moccasin': 0xFFE4B5, 'navajowhite': 0xFFDEAD,\r\n'navy': 0x000080, 'oldlace': 0xFDF5E6, 'olive': 0x808000, 'olivedrab': 0x6B8E23, 'orange': 0xFFA500, 'orangered': 0xFF4500, 'orchid': 0xDA70D6,\r\n'palegoldenrod': 0xEEE8AA, 'palegreen': 0x98FB98, 'paleturquoise': 0xAFEEEE, 'palevioletred': 0xDB7093, 'papayawhip': 0xFFEFD5, 'peachpuff': 0xFFDAB9,\r\n'peru': 0xCD853F, 'pink': 0xFFC0CB, 'plum': 0xDDA0DD, 'powderblue': 0xB0E0E6, 'purple': 0x800080, 'red': 0xFF0000, 'rosybrown': 0xBC8F8F,\r\n'royalblue': 0x4169E1, 'saddlebrown': 0x8B4513, 'salmon': 0xFA8072, 'sandybrown': 0xF4A460, 'seagreen': 0x2E8B57, 'seashell': 0xFFF5EE,\r\n'sienna': 0xA0522D, 'silver': 0xC0C0C0, 'skyblue': 0x87CEEB, 'slateblue': 0x6A5ACD, 'slategray': 0x708090, 'slategrey': 0x708090, 'snow': 0xFFFAFA,\r\n'springgreen': 0x00FF7F, 'steelblue': 0x4682B4, 'tan': 0xD2B48C, 'teal': 0x008080, 'thistle': 0xD8BFD8, 'tomato': 0xFF6347, 'turquoise': 0x40E0D0,\r\n'violet': 0xEE82EE, 'wheat': 0xF5DEB3, 'white': 0xFFFFFF, 'whitesmoke': 0xF5F5F5, 'yellow': 0xFFFF00, 'yellowgreen': 0x9ACD32 };\r\n\r\n// File:src/math/Quaternion.js\r\n\r\n/**\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author WestLangley / http://github.com/WestLangley\r\n * @author bhouston / http://exocortex.com\r\n */\r\n\r\nTHREE.Quaternion = function ( x, y, z, w ) {\r\n\r\n\tthis._x = x || 0;\r\n\tthis._y = y || 0;\r\n\tthis._z = z || 0;\r\n\tthis._w = ( w !== undefined ) ? w : 1;\r\n\r\n};\r\n\r\nTHREE.Quaternion.prototype = {\r\n\r\n\tconstructor: THREE.Quaternion,\r\n\r\n\tget x () {\r\n\r\n\t\treturn this._x;\r\n\r\n\t},\r\n\r\n\tset x ( value ) {\r\n\r\n\t\tthis._x = value;\r\n\t\tthis.onChangeCallback();\r\n\r\n\t},\r\n\r\n\tget y () {\r\n\r\n\t\treturn this._y;\r\n\r\n\t},\r\n\r\n\tset y ( value ) {\r\n\r\n\t\tthis._y = value;\r\n\t\tthis.onChangeCallback();\r\n\r\n\t},\r\n\r\n\tget z () {\r\n\r\n\t\treturn this._z;\r\n\r\n\t},\r\n\r\n\tset z ( value ) {\r\n\r\n\t\tthis._z = value;\r\n\t\tthis.onChangeCallback();\r\n\r\n\t},\r\n\r\n\tget w () {\r\n\r\n\t\treturn this._w;\r\n\r\n\t},\r\n\r\n\tset w ( value ) {\r\n\r\n\t\tthis._w = value;\r\n\t\tthis.onChangeCallback();\r\n\r\n\t},\r\n\r\n\tset: function ( x, y, z, w ) {\r\n\r\n\t\tthis._x = x;\r\n\t\tthis._y = y;\r\n\t\tthis._z = z;\r\n\t\tthis._w = w;\r\n\r\n\t\tthis.onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor( this._x, this._y, this._z, this._w );\r\n\r\n\t},\r\n\r\n\tcopy: function ( quaternion ) {\r\n\r\n\t\tthis._x = quaternion.x;\r\n\t\tthis._y = quaternion.y;\r\n\t\tthis._z = quaternion.z;\r\n\t\tthis._w = quaternion.w;\r\n\r\n\t\tthis.onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromEuler: function ( euler, update ) {\r\n\r\n\t\tif ( euler instanceof THREE.Euler === false ) {\r\n\r\n\t\t\tthrow new Error( 'THREE.Quaternion: .setFromEuler() now expects a Euler rotation rather than a Vector3 and order.' );\r\n\r\n\t\t}\r\n\r\n\t\t// http://www.mathworks.com/matlabcentral/fileexchange/\r\n\t\t// \t20696-function-to-convert-between-dcm-euler-angles-quaternions-and-euler-vectors/\r\n\t\t//\tcontent/SpinCalc.m\r\n\r\n\t\tvar c1 = Math.cos( euler._x / 2 );\r\n\t\tvar c2 = Math.cos( euler._y / 2 );\r\n\t\tvar c3 = Math.cos( euler._z / 2 );\r\n\t\tvar s1 = Math.sin( euler._x / 2 );\r\n\t\tvar s2 = Math.sin( euler._y / 2 );\r\n\t\tvar s3 = Math.sin( euler._z / 2 );\r\n\r\n\t\tvar order = euler.order;\r\n\r\n\t\tif ( order === 'XYZ' ) {\r\n\r\n\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\r\n\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\r\n\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\r\n\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\r\n\r\n\t\t} else if ( order === 'YXZ' ) {\r\n\r\n\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\r\n\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\r\n\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\r\n\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\r\n\r\n\t\t} else if ( order === 'ZXY' ) {\r\n\r\n\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\r\n\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\r\n\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\r\n\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\r\n\r\n\t\t} else if ( order === 'ZYX' ) {\r\n\r\n\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\r\n\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\r\n\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\r\n\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\r\n\r\n\t\t} else if ( order === 'YZX' ) {\r\n\r\n\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\r\n\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\r\n\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\r\n\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\r\n\r\n\t\t} else if ( order === 'XZY' ) {\r\n\r\n\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\r\n\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\r\n\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\r\n\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\r\n\r\n\t\t}\r\n\r\n\t\tif ( update !== false ) this.onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromAxisAngle: function ( axis, angle ) {\r\n\r\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/angleToQuaternion/index.htm\r\n\r\n\t\t// assumes axis is normalized\r\n\r\n\t\tvar halfAngle = angle / 2, s = Math.sin( halfAngle );\r\n\r\n\t\tthis._x = axis.x * s;\r\n\t\tthis._y = axis.y * s;\r\n\t\tthis._z = axis.z * s;\r\n\t\tthis._w = Math.cos( halfAngle );\r\n\r\n\t\tthis.onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromRotationMatrix: function ( m ) {\r\n\r\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\r\n\r\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\r\n\r\n\t\tvar te = m.elements,\r\n\r\n\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\r\n\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\r\n\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ],\r\n\r\n\t\t\ttrace = m11 + m22 + m33,\r\n\t\t\ts;\r\n\r\n\t\tif ( trace > 0 ) {\r\n\r\n\t\t\ts = 0.5 / Math.sqrt( trace + 1.0 );\r\n\r\n\t\t\tthis._w = 0.25 / s;\r\n\t\t\tthis._x = ( m32 - m23 ) * s;\r\n\t\t\tthis._y = ( m13 - m31 ) * s;\r\n\t\t\tthis._z = ( m21 - m12 ) * s;\r\n\r\n\t\t} else if ( m11 > m22 && m11 > m33 ) {\r\n\r\n\t\t\ts = 2.0 * Math.sqrt( 1.0 + m11 - m22 - m33 );\r\n\r\n\t\t\tthis._w = ( m32 - m23 ) / s;\r\n\t\t\tthis._x = 0.25 * s;\r\n\t\t\tthis._y = ( m12 + m21 ) / s;\r\n\t\t\tthis._z = ( m13 + m31 ) / s;\r\n\r\n\t\t} else if ( m22 > m33 ) {\r\n\r\n\t\t\ts = 2.0 * Math.sqrt( 1.0 + m22 - m11 - m33 );\r\n\r\n\t\t\tthis._w = ( m13 - m31 ) / s;\r\n\t\t\tthis._x = ( m12 + m21 ) / s;\r\n\t\t\tthis._y = 0.25 * s;\r\n\t\t\tthis._z = ( m23 + m32 ) / s;\r\n\r\n\t\t} else {\r\n\r\n\t\t\ts = 2.0 * Math.sqrt( 1.0 + m33 - m11 - m22 );\r\n\r\n\t\t\tthis._w = ( m21 - m12 ) / s;\r\n\t\t\tthis._x = ( m13 + m31 ) / s;\r\n\t\t\tthis._y = ( m23 + m32 ) / s;\r\n\t\t\tthis._z = 0.25 * s;\r\n\r\n\t\t}\r\n\r\n\t\tthis.onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromUnitVectors: function () {\r\n\r\n\t\t// http://lolengine.net/blog/2014/02/24/quaternion-from-two-vectors-final\r\n\r\n\t\t// assumes direction vectors vFrom and vTo are normalized\r\n\r\n\t\tvar v1, r;\r\n\r\n\t\tvar EPS = 0.000001;\r\n\r\n\t\treturn function ( vFrom, vTo ) {\r\n\r\n\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\r\n\r\n\t\t\tr = vFrom.dot( vTo ) + 1;\r\n\r\n\t\t\tif ( r < EPS ) {\r\n\r\n\t\t\t\tr = 0;\r\n\r\n\t\t\t\tif ( Math.abs( vFrom.x ) > Math.abs( vFrom.z ) ) {\r\n\r\n\t\t\t\t\tv1.set( - vFrom.y, vFrom.x, 0 );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tv1.set( 0, - vFrom.z, vFrom.y );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tv1.crossVectors( vFrom, vTo );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis._x = v1.x;\r\n\t\t\tthis._y = v1.y;\r\n\t\t\tthis._z = v1.z;\r\n\t\t\tthis._w = r;\r\n\r\n\t\t\tthis.normalize();\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t}(),\r\n\r\n\tinverse: function () {\r\n\r\n\t\tthis.conjugate().normalize();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tconjugate: function () {\r\n\r\n\t\tthis._x *= - 1;\r\n\t\tthis._y *= - 1;\r\n\t\tthis._z *= - 1;\r\n\r\n\t\tthis.onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tdot: function ( v ) {\r\n\r\n\t\treturn this._x * v._x + this._y * v._y + this._z * v._z + this._w * v._w;\r\n\r\n\t},\r\n\r\n\tlengthSq: function () {\r\n\r\n\t\treturn this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w;\r\n\r\n\t},\r\n\r\n\tlength: function () {\r\n\r\n\t\treturn Math.sqrt( this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w );\r\n\r\n\t},\r\n\r\n\tnormalize: function () {\r\n\r\n\t\tvar l = this.length();\r\n\r\n\t\tif ( l === 0 ) {\r\n\r\n\t\t\tthis._x = 0;\r\n\t\t\tthis._y = 0;\r\n\t\t\tthis._z = 0;\r\n\t\t\tthis._w = 1;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tl = 1 / l;\r\n\r\n\t\t\tthis._x = this._x * l;\r\n\t\t\tthis._y = this._y * l;\r\n\t\t\tthis._z = this._z * l;\r\n\t\t\tthis._w = this._w * l;\r\n\r\n\t\t}\r\n\r\n\t\tthis.onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmultiply: function ( q, p ) {\r\n\r\n\t\tif ( p !== undefined ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead.' );\r\n\t\t\treturn this.multiplyQuaternions( q, p );\r\n\r\n\t\t}\r\n\r\n\t\treturn this.multiplyQuaternions( this, q );\r\n\r\n\t},\r\n\r\n\tmultiplyQuaternions: function ( a, b ) {\r\n\r\n\t\t// from http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/code/index.htm\r\n\r\n\t\tvar qax = a._x, qay = a._y, qaz = a._z, qaw = a._w;\r\n\t\tvar qbx = b._x, qby = b._y, qbz = b._z, qbw = b._w;\r\n\r\n\t\tthis._x = qax * qbw + qaw * qbx + qay * qbz - qaz * qby;\r\n\t\tthis._y = qay * qbw + qaw * qby + qaz * qbx - qax * qbz;\r\n\t\tthis._z = qaz * qbw + qaw * qbz + qax * qby - qay * qbx;\r\n\t\tthis._w = qaw * qbw - qax * qbx - qay * qby - qaz * qbz;\r\n\r\n\t\tthis.onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmultiplyVector3: function ( vector ) {\r\n\r\n\t\tconsole.warn( 'THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead.' );\r\n\t\treturn vector.applyQuaternion( this );\r\n\r\n\t},\r\n\r\n\tslerp: function ( qb, t ) {\r\n\r\n\t\tif ( t === 0 ) return this;\r\n\t\tif ( t === 1 ) return this.copy( qb );\r\n\r\n\t\tvar x = this._x, y = this._y, z = this._z, w = this._w;\r\n\r\n\t\t// http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/slerp/\r\n\r\n\t\tvar cosHalfTheta = w * qb._w + x * qb._x + y * qb._y + z * qb._z;\r\n\r\n\t\tif ( cosHalfTheta < 0 ) {\r\n\r\n\t\t\tthis._w = - qb._w;\r\n\t\t\tthis._x = - qb._x;\r\n\t\t\tthis._y = - qb._y;\r\n\t\t\tthis._z = - qb._z;\r\n\r\n\t\t\tcosHalfTheta = - cosHalfTheta;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.copy( qb );\r\n\r\n\t\t}\r\n\r\n\t\tif ( cosHalfTheta >= 1.0 ) {\r\n\r\n\t\t\tthis._w = w;\r\n\t\t\tthis._x = x;\r\n\t\t\tthis._y = y;\r\n\t\t\tthis._z = z;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t\tvar halfTheta = Math.acos( cosHalfTheta );\r\n\t\tvar sinHalfTheta = Math.sqrt( 1.0 - cosHalfTheta * cosHalfTheta );\r\n\r\n\t\tif ( Math.abs( sinHalfTheta ) < 0.001 ) {\r\n\r\n\t\t\tthis._w = 0.5 * ( w + this._w );\r\n\t\t\tthis._x = 0.5 * ( x + this._x );\r\n\t\t\tthis._y = 0.5 * ( y + this._y );\r\n\t\t\tthis._z = 0.5 * ( z + this._z );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t\tvar ratioA = Math.sin( ( 1 - t ) * halfTheta ) / sinHalfTheta,\r\n\t\tratioB = Math.sin( t * halfTheta ) / sinHalfTheta;\r\n\r\n\t\tthis._w = ( w * ratioA + this._w * ratioB );\r\n\t\tthis._x = ( x * ratioA + this._x * ratioB );\r\n\t\tthis._y = ( y * ratioA + this._y * ratioB );\r\n\t\tthis._z = ( z * ratioA + this._z * ratioB );\r\n\r\n\t\tthis.onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tequals: function ( quaternion ) {\r\n\r\n\t\treturn ( quaternion._x === this._x ) && ( quaternion._y === this._y ) && ( quaternion._z === this._z ) && ( quaternion._w === this._w );\r\n\r\n\t},\r\n\r\n\tfromArray: function ( array, offset ) {\r\n\r\n\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\tthis._x = array[ offset ];\r\n\t\tthis._y = array[ offset + 1 ];\r\n\t\tthis._z = array[ offset + 2 ];\r\n\t\tthis._w = array[ offset + 3 ];\r\n\r\n\t\tthis.onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\ttoArray: function ( array, offset ) {\r\n\r\n\t\tif ( array === undefined ) array = [];\r\n\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\tarray[ offset ] = this._x;\r\n\t\tarray[ offset + 1 ] = this._y;\r\n\t\tarray[ offset + 2 ] = this._z;\r\n\t\tarray[ offset + 3 ] = this._w;\r\n\r\n\t\treturn array;\r\n\r\n\t},\r\n\r\n\tonChange: function ( callback ) {\r\n\r\n\t\tthis.onChangeCallback = callback;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tonChangeCallback: function () {}\r\n\r\n};\r\n\r\nTHREE.Quaternion.slerp = function ( qa, qb, qm, t ) {\r\n\r\n\treturn qm.copy( qa ).slerp( qb, t );\r\n\r\n};\r\n\r\n// File:src/math/Vector2.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author philogb / http://blog.thejit.org/\r\n * @author egraether / http://egraether.com/\r\n * @author zz85 / http://www.lab4games.net/zz85/blog\r\n */\r\n\r\nTHREE.Vector2 = function ( x, y ) {\r\n\r\n\tthis.x = x || 0;\r\n\tthis.y = y || 0;\r\n\r\n};\r\n\r\nTHREE.Vector2.prototype = {\r\n\r\n\tconstructor: THREE.Vector2,\r\n\r\n\tset: function ( x, y ) {\r\n\r\n\t\tthis.x = x;\r\n\t\tthis.y = y;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetX: function ( x ) {\r\n\r\n\t\tthis.x = x;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetY: function ( y ) {\r\n\r\n\t\tthis.y = y;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetComponent: function ( index, value ) {\r\n\r\n\t\tswitch ( index ) {\r\n\r\n\t\t\tcase 0: this.x = value; break;\r\n\t\t\tcase 1: this.y = value; break;\r\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tgetComponent: function ( index ) {\r\n\r\n\t\tswitch ( index ) {\r\n\r\n\t\t\tcase 0: return this.x;\r\n\t\t\tcase 1: return this.y;\r\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor( this.x, this.y );\r\n\r\n\t},\r\n\r\n\tcopy: function ( v ) {\r\n\r\n\t\tthis.x = v.x;\r\n\t\tthis.y = v.y;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tadd: function ( v, w ) {\r\n\r\n\t\tif ( w !== undefined ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\r\n\t\t\treturn this.addVectors( v, w );\r\n\r\n\t\t}\r\n\r\n\t\tthis.x += v.x;\r\n\t\tthis.y += v.y;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\taddScalar: function ( s ) {\r\n\r\n\t\tthis.x += s;\r\n\t\tthis.y += s;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\taddVectors: function ( a, b ) {\r\n\r\n\t\tthis.x = a.x + b.x;\r\n\t\tthis.y = a.y + b.y;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\taddScaledVector: function ( v, s ) {\r\n\r\n\t\tthis.x += v.x * s;\r\n\t\tthis.y += v.y * s;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsub: function ( v, w ) {\r\n\r\n\t\tif ( w !== undefined ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\r\n\t\t\treturn this.subVectors( v, w );\r\n\r\n\t\t}\r\n\r\n\t\tthis.x -= v.x;\r\n\t\tthis.y -= v.y;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsubScalar: function ( s ) {\r\n\r\n\t\tthis.x -= s;\r\n\t\tthis.y -= s;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsubVectors: function ( a, b ) {\r\n\r\n\t\tthis.x = a.x - b.x;\r\n\t\tthis.y = a.y - b.y;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmultiply: function ( v ) {\r\n\r\n\t\tthis.x *= v.x;\r\n\t\tthis.y *= v.y;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmultiplyScalar: function ( s ) {\r\n\r\n\t\tthis.x *= s;\r\n\t\tthis.y *= s;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tdivide: function ( v ) {\r\n\r\n\t\tthis.x /= v.x;\r\n\t\tthis.y /= v.y;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tdivideScalar: function ( scalar ) {\r\n\r\n\t\tif ( scalar !== 0 ) {\r\n\r\n\t\t\tvar invScalar = 1 / scalar;\r\n\r\n\t\t\tthis.x *= invScalar;\r\n\t\t\tthis.y *= invScalar;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.x = 0;\r\n\t\t\tthis.y = 0;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmin: function ( v ) {\r\n\r\n\t\tif ( this.x > v.x ) {\r\n\r\n\t\t\tthis.x = v.x;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.y > v.y ) {\r\n\r\n\t\t\tthis.y = v.y;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmax: function ( v ) {\r\n\r\n\t\tif ( this.x < v.x ) {\r\n\r\n\t\t\tthis.x = v.x;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.y < v.y ) {\r\n\r\n\t\t\tthis.y = v.y;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tclamp: function ( min, max ) {\r\n\r\n\t\t// This function assumes min < max, if this assumption isn't true it will not operate correctly\r\n\r\n\t\tif ( this.x < min.x ) {\r\n\r\n\t\t\tthis.x = min.x;\r\n\r\n\t\t} else if ( this.x > max.x ) {\r\n\r\n\t\t\tthis.x = max.x;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.y < min.y ) {\r\n\r\n\t\t\tthis.y = min.y;\r\n\r\n\t\t} else if ( this.y > max.y ) {\r\n\r\n\t\t\tthis.y = max.y;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tclampScalar: function () {\r\n\r\n\t\tvar min, max;\r\n\r\n\t\treturn function clampScalar( minVal, maxVal ) {\r\n\r\n\t\t\tif ( min === undefined ) {\r\n\r\n\t\t\t\tmin = new THREE.Vector2();\r\n\t\t\t\tmax = new THREE.Vector2();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tmin.set( minVal, minVal );\r\n\t\t\tmax.set( maxVal, maxVal );\r\n\r\n\t\t\treturn this.clamp( min, max );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tfloor: function () {\r\n\r\n\t\tthis.x = Math.floor( this.x );\r\n\t\tthis.y = Math.floor( this.y );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tceil: function () {\r\n\r\n\t\tthis.x = Math.ceil( this.x );\r\n\t\tthis.y = Math.ceil( this.y );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tround: function () {\r\n\r\n\t\tthis.x = Math.round( this.x );\r\n\t\tthis.y = Math.round( this.y );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\troundToZero: function () {\r\n\r\n\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\r\n\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tnegate: function () {\r\n\r\n\t\tthis.x = - this.x;\r\n\t\tthis.y = - this.y;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tdot: function ( v ) {\r\n\r\n\t\treturn this.x * v.x + this.y * v.y;\r\n\r\n\t},\r\n\r\n\tlengthSq: function () {\r\n\r\n\t\treturn this.x * this.x + this.y * this.y;\r\n\r\n\t},\r\n\r\n\tlength: function () {\r\n\r\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y );\r\n\r\n\t},\r\n\r\n\tlengthManhattan: function() {\r\n\r\n\t\treturn Math.abs( this.x ) + Math.abs( this.y );\r\n\r\n\t},\r\n\r\n\tnormalize: function () {\r\n\r\n\t\treturn this.divideScalar( this.length() );\r\n\r\n\t},\r\n\r\n\tdistanceTo: function ( v ) {\r\n\r\n\t\treturn Math.sqrt( this.distanceToSquared( v ) );\r\n\r\n\t},\r\n\r\n\tdistanceToSquared: function ( v ) {\r\n\r\n\t\tvar dx = this.x - v.x, dy = this.y - v.y;\r\n\t\treturn dx * dx + dy * dy;\r\n\r\n\t},\r\n\r\n\tsetLength: function ( l ) {\r\n\r\n\t\tvar oldLength = this.length();\r\n\r\n\t\tif ( oldLength !== 0 && l !== oldLength ) {\r\n\r\n\t\t\tthis.multiplyScalar( l / oldLength );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tlerp: function ( v, alpha ) {\r\n\r\n\t\tthis.x += ( v.x - this.x ) * alpha;\r\n\t\tthis.y += ( v.y - this.y ) * alpha;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tlerpVectors: function ( v1, v2, alpha ) {\r\n\r\n\t\tthis.subVectors( v2, v1 ).multiplyScalar( alpha ).add( v1 );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tequals: function ( v ) {\r\n\r\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) );\r\n\r\n\t},\r\n\r\n\tfromArray: function ( array, offset ) {\r\n\r\n\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\tthis.x = array[ offset ];\r\n\t\tthis.y = array[ offset + 1 ];\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\ttoArray: function ( array, offset ) {\r\n\r\n\t\tif ( array === undefined ) array = [];\r\n\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\tarray[ offset ] = this.x;\r\n\t\tarray[ offset + 1 ] = this.y;\r\n\r\n\t\treturn array;\r\n\r\n\t},\r\n\r\n\tfromAttribute: function ( attribute, index, offset ) {\r\n\r\n\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\tindex = index * attribute.itemSize + offset;\r\n\r\n\t\tthis.x = attribute.array[ index ];\r\n\t\tthis.y = attribute.array[ index + 1 ];\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/math/Vector3.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author *kile / http://kile.stravaganza.org/\r\n * @author philogb / http://blog.thejit.org/\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author egraether / http://egraether.com/\r\n * @author WestLangley / http://github.com/WestLangley\r\n */\r\n\r\nTHREE.Vector3 = function ( x, y, z ) {\r\n\r\n\tthis.x = x || 0;\r\n\tthis.y = y || 0;\r\n\tthis.z = z || 0;\r\n\r\n};\r\n\r\nTHREE.Vector3.prototype = {\r\n\r\n\tconstructor: THREE.Vector3,\r\n\r\n\tset: function ( x, y, z ) {\r\n\r\n\t\tthis.x = x;\r\n\t\tthis.y = y;\r\n\t\tthis.z = z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetX: function ( x ) {\r\n\r\n\t\tthis.x = x;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetY: function ( y ) {\r\n\r\n\t\tthis.y = y;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetZ: function ( z ) {\r\n\r\n\t\tthis.z = z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetComponent: function ( index, value ) {\r\n\r\n\t\tswitch ( index ) {\r\n\r\n\t\t\tcase 0: this.x = value; break;\r\n\t\t\tcase 1: this.y = value; break;\r\n\t\t\tcase 2: this.z = value; break;\r\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tgetComponent: function ( index ) {\r\n\r\n\t\tswitch ( index ) {\r\n\r\n\t\t\tcase 0: return this.x;\r\n\t\t\tcase 1: return this.y;\r\n\t\t\tcase 2: return this.z;\r\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor( this.x, this.y, this.z );\r\n\r\n\t},\r\n\r\n\tcopy: function ( v ) {\r\n\r\n\t\tthis.x = v.x;\r\n\t\tthis.y = v.y;\r\n\t\tthis.z = v.z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tadd: function ( v, w ) {\r\n\r\n\t\tif ( w !== undefined ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\r\n\t\t\treturn this.addVectors( v, w );\r\n\r\n\t\t}\r\n\r\n\t\tthis.x += v.x;\r\n\t\tthis.y += v.y;\r\n\t\tthis.z += v.z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\taddScalar: function ( s ) {\r\n\r\n\t\tthis.x += s;\r\n\t\tthis.y += s;\r\n\t\tthis.z += s;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\taddVectors: function ( a, b ) {\r\n\r\n\t\tthis.x = a.x + b.x;\r\n\t\tthis.y = a.y + b.y;\r\n\t\tthis.z = a.z + b.z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\taddScaledVector: function ( v, s ) {\r\n\r\n\t\tthis.x += v.x * s;\r\n\t\tthis.y += v.y * s;\r\n\t\tthis.z += v.z * s;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsub: function ( v, w ) {\r\n\r\n\t\tif ( w !== undefined ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\r\n\t\t\treturn this.subVectors( v, w );\r\n\r\n\t\t}\r\n\r\n\t\tthis.x -= v.x;\r\n\t\tthis.y -= v.y;\r\n\t\tthis.z -= v.z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsubScalar: function ( s ) {\r\n\r\n\t\tthis.x -= s;\r\n\t\tthis.y -= s;\r\n\t\tthis.z -= s;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsubVectors: function ( a, b ) {\r\n\r\n\t\tthis.x = a.x - b.x;\r\n\t\tthis.y = a.y - b.y;\r\n\t\tthis.z = a.z - b.z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmultiply: function ( v, w ) {\r\n\r\n\t\tif ( w !== undefined ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead.' );\r\n\t\t\treturn this.multiplyVectors( v, w );\r\n\r\n\t\t}\r\n\r\n\t\tthis.x *= v.x;\r\n\t\tthis.y *= v.y;\r\n\t\tthis.z *= v.z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmultiplyScalar: function ( scalar ) {\r\n\r\n\t\tthis.x *= scalar;\r\n\t\tthis.y *= scalar;\r\n\t\tthis.z *= scalar;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmultiplyVectors: function ( a, b ) {\r\n\r\n\t\tthis.x = a.x * b.x;\r\n\t\tthis.y = a.y * b.y;\r\n\t\tthis.z = a.z * b.z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tapplyEuler: function () {\r\n\r\n\t\tvar quaternion;\r\n\r\n\t\treturn function applyEuler( euler ) {\r\n\r\n\t\t\tif ( euler instanceof THREE.Euler === false ) {\r\n\r\n\t\t\t\tconsole.error( 'THREE.Vector3: .applyEuler() now expects a Euler rotation rather than a Vector3 and order.' );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( quaternion === undefined ) quaternion = new THREE.Quaternion();\r\n\r\n\t\t\tthis.applyQuaternion( quaternion.setFromEuler( euler ) );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tapplyAxisAngle: function () {\r\n\r\n\t\tvar quaternion;\r\n\r\n\t\treturn function applyAxisAngle( axis, angle ) {\r\n\r\n\t\t\tif ( quaternion === undefined ) quaternion = new THREE.Quaternion();\r\n\r\n\t\t\tthis.applyQuaternion( quaternion.setFromAxisAngle( axis, angle ) );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tapplyMatrix3: function ( m ) {\r\n\r\n\t\tvar x = this.x;\r\n\t\tvar y = this.y;\r\n\t\tvar z = this.z;\r\n\r\n\t\tvar e = m.elements;\r\n\r\n\t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ] * z;\r\n\t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ] * z;\r\n\t\tthis.z = e[ 2 ] * x + e[ 5 ] * y + e[ 8 ] * z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tapplyMatrix4: function ( m ) {\r\n\r\n\t\t// input: THREE.Matrix4 affine matrix\r\n\r\n\t\tvar x = this.x, y = this.y, z = this.z;\r\n\r\n\t\tvar e = m.elements;\r\n\r\n\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ]  * z + e[ 12 ];\r\n\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ]  * z + e[ 13 ];\r\n\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ];\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tapplyProjection: function ( m ) {\r\n\r\n\t\t// input: THREE.Matrix4 projection matrix\r\n\r\n\t\tvar x = this.x, y = this.y, z = this.z;\r\n\r\n\t\tvar e = m.elements;\r\n\t\tvar d = 1 / ( e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] ); // perspective divide\r\n\r\n\t\tthis.x = ( e[ 0 ] * x + e[ 4 ] * y + e[ 8 ]  * z + e[ 12 ] ) * d;\r\n\t\tthis.y = ( e[ 1 ] * x + e[ 5 ] * y + e[ 9 ]  * z + e[ 13 ] ) * d;\r\n\t\tthis.z = ( e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] ) * d;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tapplyQuaternion: function ( q ) {\r\n\r\n\t\tvar x = this.x;\r\n\t\tvar y = this.y;\r\n\t\tvar z = this.z;\r\n\r\n\t\tvar qx = q.x;\r\n\t\tvar qy = q.y;\r\n\t\tvar qz = q.z;\r\n\t\tvar qw = q.w;\r\n\r\n\t\t// calculate quat * vector\r\n\r\n\t\tvar ix =  qw * x + qy * z - qz * y;\r\n\t\tvar iy =  qw * y + qz * x - qx * z;\r\n\t\tvar iz =  qw * z + qx * y - qy * x;\r\n\t\tvar iw = - qx * x - qy * y - qz * z;\r\n\r\n\t\t// calculate result * inverse quat\r\n\r\n\t\tthis.x = ix * qw + iw * - qx + iy * - qz - iz * - qy;\r\n\t\tthis.y = iy * qw + iw * - qy + iz * - qx - ix * - qz;\r\n\t\tthis.z = iz * qw + iw * - qz + ix * - qy - iy * - qx;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tproject: function () {\r\n\r\n\t\tvar matrix;\r\n\r\n\t\treturn function project( camera ) {\r\n\r\n\t\t\tif ( matrix === undefined ) matrix = new THREE.Matrix4();\r\n\r\n\t\t\tmatrix.multiplyMatrices( camera.projectionMatrix, matrix.getInverse( camera.matrixWorld ) );\r\n\t\t\treturn this.applyProjection( matrix );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tunproject: function () {\r\n\r\n\t\tvar matrix;\r\n\r\n\t\treturn function unproject( camera ) {\r\n\r\n\t\t\tif ( matrix === undefined ) matrix = new THREE.Matrix4();\r\n\r\n\t\t\tmatrix.multiplyMatrices( camera.matrixWorld, matrix.getInverse( camera.projectionMatrix ) );\r\n\t\t\treturn this.applyProjection( matrix );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\ttransformDirection: function ( m ) {\r\n\r\n\t\t// input: THREE.Matrix4 affine matrix\r\n\t\t// vector interpreted as a direction\r\n\r\n\t\tvar x = this.x, y = this.y, z = this.z;\r\n\r\n\t\tvar e = m.elements;\r\n\r\n\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ]  * z;\r\n\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ]  * z;\r\n\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z;\r\n\r\n\t\tthis.normalize();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tdivide: function ( v ) {\r\n\r\n\t\tthis.x /= v.x;\r\n\t\tthis.y /= v.y;\r\n\t\tthis.z /= v.z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tdivideScalar: function ( scalar ) {\r\n\r\n\t\tif ( scalar !== 0 ) {\r\n\r\n\t\t\tvar invScalar = 1 / scalar;\r\n\r\n\t\t\tthis.x *= invScalar;\r\n\t\t\tthis.y *= invScalar;\r\n\t\t\tthis.z *= invScalar;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.x = 0;\r\n\t\t\tthis.y = 0;\r\n\t\t\tthis.z = 0;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmin: function ( v ) {\r\n\r\n\t\tif ( this.x > v.x ) {\r\n\r\n\t\t\tthis.x = v.x;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.y > v.y ) {\r\n\r\n\t\t\tthis.y = v.y;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.z > v.z ) {\r\n\r\n\t\t\tthis.z = v.z;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmax: function ( v ) {\r\n\r\n\t\tif ( this.x < v.x ) {\r\n\r\n\t\t\tthis.x = v.x;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.y < v.y ) {\r\n\r\n\t\t\tthis.y = v.y;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.z < v.z ) {\r\n\r\n\t\t\tthis.z = v.z;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tclamp: function ( min, max ) {\r\n\r\n\t\t// This function assumes min < max, if this assumption isn't true it will not operate correctly\r\n\r\n\t\tif ( this.x < min.x ) {\r\n\r\n\t\t\tthis.x = min.x;\r\n\r\n\t\t} else if ( this.x > max.x ) {\r\n\r\n\t\t\tthis.x = max.x;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.y < min.y ) {\r\n\r\n\t\t\tthis.y = min.y;\r\n\r\n\t\t} else if ( this.y > max.y ) {\r\n\r\n\t\t\tthis.y = max.y;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.z < min.z ) {\r\n\r\n\t\t\tthis.z = min.z;\r\n\r\n\t\t} else if ( this.z > max.z ) {\r\n\r\n\t\t\tthis.z = max.z;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tclampScalar: function () {\r\n\r\n\t\tvar min, max;\r\n\r\n\t\treturn function clampScalar( minVal, maxVal ) {\r\n\r\n\t\t\tif ( min === undefined ) {\r\n\r\n\t\t\t\tmin = new THREE.Vector3();\r\n\t\t\t\tmax = new THREE.Vector3();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tmin.set( minVal, minVal, minVal );\r\n\t\t\tmax.set( maxVal, maxVal, maxVal );\r\n\r\n\t\t\treturn this.clamp( min, max );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tfloor: function () {\r\n\r\n\t\tthis.x = Math.floor( this.x );\r\n\t\tthis.y = Math.floor( this.y );\r\n\t\tthis.z = Math.floor( this.z );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tceil: function () {\r\n\r\n\t\tthis.x = Math.ceil( this.x );\r\n\t\tthis.y = Math.ceil( this.y );\r\n\t\tthis.z = Math.ceil( this.z );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tround: function () {\r\n\r\n\t\tthis.x = Math.round( this.x );\r\n\t\tthis.y = Math.round( this.y );\r\n\t\tthis.z = Math.round( this.z );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\troundToZero: function () {\r\n\r\n\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\r\n\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\r\n\t\tthis.z = ( this.z < 0 ) ? Math.ceil( this.z ) : Math.floor( this.z );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tnegate: function () {\r\n\r\n\t\tthis.x = - this.x;\r\n\t\tthis.y = - this.y;\r\n\t\tthis.z = - this.z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tdot: function ( v ) {\r\n\r\n\t\treturn this.x * v.x + this.y * v.y + this.z * v.z;\r\n\r\n\t},\r\n\r\n\tlengthSq: function () {\r\n\r\n\t\treturn this.x * this.x + this.y * this.y + this.z * this.z;\r\n\r\n\t},\r\n\r\n\tlength: function () {\r\n\r\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z );\r\n\r\n\t},\r\n\r\n\tlengthManhattan: function () {\r\n\r\n\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z );\r\n\r\n\t},\r\n\r\n\tnormalize: function () {\r\n\r\n\t\treturn this.divideScalar( this.length() );\r\n\r\n\t},\r\n\r\n\tsetLength: function ( l ) {\r\n\r\n\t\tvar oldLength = this.length();\r\n\r\n\t\tif ( oldLength !== 0 && l !== oldLength  ) {\r\n\r\n\t\t\tthis.multiplyScalar( l / oldLength );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tlerp: function ( v, alpha ) {\r\n\r\n\t\tthis.x += ( v.x - this.x ) * alpha;\r\n\t\tthis.y += ( v.y - this.y ) * alpha;\r\n\t\tthis.z += ( v.z - this.z ) * alpha;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tlerpVectors: function ( v1, v2, alpha ) {\r\n\r\n\t\tthis.subVectors( v2, v1 ).multiplyScalar( alpha ).add( v1 );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcross: function ( v, w ) {\r\n\r\n\t\tif ( w !== undefined ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead.' );\r\n\t\t\treturn this.crossVectors( v, w );\r\n\r\n\t\t}\r\n\r\n\t\tvar x = this.x, y = this.y, z = this.z;\r\n\r\n\t\tthis.x = y * v.z - z * v.y;\r\n\t\tthis.y = z * v.x - x * v.z;\r\n\t\tthis.z = x * v.y - y * v.x;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcrossVectors: function ( a, b ) {\r\n\r\n\t\tvar ax = a.x, ay = a.y, az = a.z;\r\n\t\tvar bx = b.x, by = b.y, bz = b.z;\r\n\r\n\t\tthis.x = ay * bz - az * by;\r\n\t\tthis.y = az * bx - ax * bz;\r\n\t\tthis.z = ax * by - ay * bx;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tprojectOnVector: function () {\r\n\r\n\t\tvar v1, dot;\r\n\r\n\t\treturn function projectOnVector( vector ) {\r\n\r\n\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\r\n\r\n\t\t\tv1.copy( vector ).normalize();\r\n\r\n\t\t\tdot = this.dot( v1 );\r\n\r\n\t\t\treturn this.copy( v1 ).multiplyScalar( dot );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tprojectOnPlane: function () {\r\n\r\n\t\tvar v1;\r\n\r\n\t\treturn function projectOnPlane( planeNormal ) {\r\n\r\n\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\r\n\r\n\t\t\tv1.copy( this ).projectOnVector( planeNormal );\r\n\r\n\t\t\treturn this.sub( v1 );\r\n\r\n\t\t}\r\n\r\n\t}(),\r\n\r\n\treflect: function () {\r\n\r\n\t\t// reflect incident vector off plane orthogonal to normal\r\n\t\t// normal is assumed to have unit length\r\n\r\n\t\tvar v1;\r\n\r\n\t\treturn function reflect( normal ) {\r\n\r\n\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\r\n\r\n\t\t\treturn this.sub( v1.copy( normal ).multiplyScalar( 2 * this.dot( normal ) ) );\r\n\r\n\t\t}\r\n\r\n\t}(),\r\n\r\n\tangleTo: function ( v ) {\r\n\r\n\t\tvar theta = this.dot( v ) / ( this.length() * v.length() );\r\n\r\n\t\t// clamp, to handle numerical problems\r\n\r\n\t\treturn Math.acos( THREE.Math.clamp( theta, - 1, 1 ) );\r\n\r\n\t},\r\n\r\n\tdistanceTo: function ( v ) {\r\n\r\n\t\treturn Math.sqrt( this.distanceToSquared( v ) );\r\n\r\n\t},\r\n\r\n\tdistanceToSquared: function ( v ) {\r\n\r\n\t\tvar dx = this.x - v.x;\r\n\t\tvar dy = this.y - v.y;\r\n\t\tvar dz = this.z - v.z;\r\n\r\n\t\treturn dx * dx + dy * dy + dz * dz;\r\n\r\n\t},\r\n\r\n\tsetEulerFromRotationMatrix: function ( m, order ) {\r\n\r\n\t\tconsole.error( 'THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.' );\r\n\r\n\t},\r\n\r\n\tsetEulerFromQuaternion: function ( q, order ) {\r\n\r\n\t\tconsole.error( 'THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.' );\r\n\r\n\t},\r\n\r\n\tgetPositionFromMatrix: function ( m ) {\r\n\r\n\t\tconsole.warn( 'THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition().' );\r\n\r\n\t\treturn this.setFromMatrixPosition( m );\r\n\r\n\t},\r\n\r\n\tgetScaleFromMatrix: function ( m ) {\r\n\r\n\t\tconsole.warn( 'THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale().' );\r\n\r\n\t\treturn this.setFromMatrixScale( m );\r\n\r\n\t},\r\n\r\n\tgetColumnFromMatrix: function ( index, matrix ) {\r\n\r\n\t\tconsole.warn( 'THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn().' );\r\n\r\n\t\treturn this.setFromMatrixColumn( index, matrix );\r\n\r\n\t},\r\n\r\n\tsetFromMatrixPosition: function ( m ) {\r\n\r\n\t\tthis.x = m.elements[ 12 ];\r\n\t\tthis.y = m.elements[ 13 ];\r\n\t\tthis.z = m.elements[ 14 ];\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromMatrixScale: function ( m ) {\r\n\r\n\t\tvar sx = this.set( m.elements[ 0 ], m.elements[ 1 ], m.elements[ 2 ] ).length();\r\n\t\tvar sy = this.set( m.elements[ 4 ], m.elements[ 5 ], m.elements[ 6 ] ).length();\r\n\t\tvar sz = this.set( m.elements[ 8 ], m.elements[ 9 ], m.elements[ 10 ] ).length();\r\n\r\n\t\tthis.x = sx;\r\n\t\tthis.y = sy;\r\n\t\tthis.z = sz;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromMatrixColumn: function ( index, matrix ) {\r\n\r\n\t\tvar offset = index * 4;\r\n\r\n\t\tvar me = matrix.elements;\r\n\r\n\t\tthis.x = me[ offset ];\r\n\t\tthis.y = me[ offset + 1 ];\r\n\t\tthis.z = me[ offset + 2 ];\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tequals: function ( v ) {\r\n\r\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) );\r\n\r\n\t},\r\n\r\n\tfromArray: function ( array, offset ) {\r\n\r\n\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\tthis.x = array[ offset ];\r\n\t\tthis.y = array[ offset + 1 ];\r\n\t\tthis.z = array[ offset + 2 ];\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\ttoArray: function ( array, offset ) {\r\n\r\n\t\tif ( array === undefined ) array = [];\r\n\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\tarray[ offset ] = this.x;\r\n\t\tarray[ offset + 1 ] = this.y;\r\n\t\tarray[ offset + 2 ] = this.z;\r\n\r\n\t\treturn array;\r\n\r\n\t},\r\n\r\n\tfromAttribute: function ( attribute, index, offset ) {\r\n\r\n\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\tindex = index * attribute.itemSize + offset;\r\n\r\n\t\tthis.x = attribute.array[ index ];\r\n\t\tthis.y = attribute.array[ index + 1 ];\r\n\t\tthis.z = attribute.array[ index + 2 ];\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/math/Vector4.js\r\n\r\n/**\r\n * @author supereggbert / http://www.paulbrunt.co.uk/\r\n * @author philogb / http://blog.thejit.org/\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author egraether / http://egraether.com/\r\n * @author WestLangley / http://github.com/WestLangley\r\n */\r\n\r\nTHREE.Vector4 = function ( x, y, z, w ) {\r\n\r\n\tthis.x = x || 0;\r\n\tthis.y = y || 0;\r\n\tthis.z = z || 0;\r\n\tthis.w = ( w !== undefined ) ? w : 1;\r\n\r\n};\r\n\r\nTHREE.Vector4.prototype = {\r\n\r\n\tconstructor: THREE.Vector4,\r\n\r\n\tset: function ( x, y, z, w ) {\r\n\r\n\t\tthis.x = x;\r\n\t\tthis.y = y;\r\n\t\tthis.z = z;\r\n\t\tthis.w = w;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetX: function ( x ) {\r\n\r\n\t\tthis.x = x;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetY: function ( y ) {\r\n\r\n\t\tthis.y = y;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetZ: function ( z ) {\r\n\r\n\t\tthis.z = z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetW: function ( w ) {\r\n\r\n\t\tthis.w = w;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetComponent: function ( index, value ) {\r\n\r\n\t\tswitch ( index ) {\r\n\r\n\t\t\tcase 0: this.x = value; break;\r\n\t\t\tcase 1: this.y = value; break;\r\n\t\t\tcase 2: this.z = value; break;\r\n\t\t\tcase 3: this.w = value; break;\r\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tgetComponent: function ( index ) {\r\n\r\n\t\tswitch ( index ) {\r\n\r\n\t\t\tcase 0: return this.x;\r\n\t\t\tcase 1: return this.y;\r\n\t\t\tcase 2: return this.z;\r\n\t\t\tcase 3: return this.w;\r\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor( this.x, this.y, this.z, this.w );\r\n\r\n\t},\r\n\r\n\tcopy: function ( v ) {\r\n\r\n\t\tthis.x = v.x;\r\n\t\tthis.y = v.y;\r\n\t\tthis.z = v.z;\r\n\t\tthis.w = ( v.w !== undefined ) ? v.w : 1;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tadd: function ( v, w ) {\r\n\r\n\t\tif ( w !== undefined ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\r\n\t\t\treturn this.addVectors( v, w );\r\n\r\n\t\t}\r\n\r\n\t\tthis.x += v.x;\r\n\t\tthis.y += v.y;\r\n\t\tthis.z += v.z;\r\n\t\tthis.w += v.w;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\taddScalar: function ( s ) {\r\n\r\n\t\tthis.x += s;\r\n\t\tthis.y += s;\r\n\t\tthis.z += s;\r\n\t\tthis.w += s;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\taddVectors: function ( a, b ) {\r\n\r\n\t\tthis.x = a.x + b.x;\r\n\t\tthis.y = a.y + b.y;\r\n\t\tthis.z = a.z + b.z;\r\n\t\tthis.w = a.w + b.w;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\taddScaledVector: function ( v, s ) {\r\n\r\n\t\tthis.x += v.x * s;\r\n\t\tthis.y += v.y * s;\r\n\t\tthis.z += v.z * s;\r\n\t\tthis.w += v.w * s;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsub: function ( v, w ) {\r\n\r\n\t\tif ( w !== undefined ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\r\n\t\t\treturn this.subVectors( v, w );\r\n\r\n\t\t}\r\n\r\n\t\tthis.x -= v.x;\r\n\t\tthis.y -= v.y;\r\n\t\tthis.z -= v.z;\r\n\t\tthis.w -= v.w;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsubScalar: function ( s ) {\r\n\r\n\t\tthis.x -= s;\r\n\t\tthis.y -= s;\r\n\t\tthis.z -= s;\r\n\t\tthis.w -= s;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsubVectors: function ( a, b ) {\r\n\r\n\t\tthis.x = a.x - b.x;\r\n\t\tthis.y = a.y - b.y;\r\n\t\tthis.z = a.z - b.z;\r\n\t\tthis.w = a.w - b.w;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmultiplyScalar: function ( scalar ) {\r\n\r\n\t\tthis.x *= scalar;\r\n\t\tthis.y *= scalar;\r\n\t\tthis.z *= scalar;\r\n\t\tthis.w *= scalar;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tapplyMatrix4: function ( m ) {\r\n\r\n\t\tvar x = this.x;\r\n\t\tvar y = this.y;\r\n\t\tvar z = this.z;\r\n\t\tvar w = this.w;\r\n\r\n\t\tvar e = m.elements;\r\n\r\n\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] * w;\r\n\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] * w;\r\n\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] * w;\r\n\t\tthis.w = e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] * w;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tdivideScalar: function ( scalar ) {\r\n\r\n\t\tif ( scalar !== 0 ) {\r\n\r\n\t\t\tvar invScalar = 1 / scalar;\r\n\r\n\t\t\tthis.x *= invScalar;\r\n\t\t\tthis.y *= invScalar;\r\n\t\t\tthis.z *= invScalar;\r\n\t\t\tthis.w *= invScalar;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.x = 0;\r\n\t\t\tthis.y = 0;\r\n\t\t\tthis.z = 0;\r\n\t\t\tthis.w = 1;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetAxisAngleFromQuaternion: function ( q ) {\r\n\r\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/quaternionToAngle/index.htm\r\n\r\n\t\t// q is assumed to be normalized\r\n\r\n\t\tthis.w = 2 * Math.acos( q.w );\r\n\r\n\t\tvar s = Math.sqrt( 1 - q.w * q.w );\r\n\r\n\t\tif ( s < 0.0001 ) {\r\n\r\n\t\t\t this.x = 1;\r\n\t\t\t this.y = 0;\r\n\t\t\t this.z = 0;\r\n\r\n\t\t} else {\r\n\r\n\t\t\t this.x = q.x / s;\r\n\t\t\t this.y = q.y / s;\r\n\t\t\t this.z = q.z / s;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetAxisAngleFromRotationMatrix: function ( m ) {\r\n\r\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToAngle/index.htm\r\n\r\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\r\n\r\n\t\tvar angle, x, y, z,\t\t// variables for result\r\n\t\t\tepsilon = 0.01,\t\t// margin to allow for rounding errors\r\n\t\t\tepsilon2 = 0.1,\t\t// margin to distinguish between 0 and 180 degrees\r\n\r\n\t\t\tte = m.elements,\r\n\r\n\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\r\n\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\r\n\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\r\n\r\n\t\tif ( ( Math.abs( m12 - m21 ) < epsilon )\r\n\t\t   && ( Math.abs( m13 - m31 ) < epsilon )\r\n\t\t   && ( Math.abs( m23 - m32 ) < epsilon ) ) {\r\n\r\n\t\t\t// singularity found\r\n\t\t\t// first check for identity matrix which must have +1 for all terms\r\n\t\t\t// in leading diagonal and zero in other terms\r\n\r\n\t\t\tif ( ( Math.abs( m12 + m21 ) < epsilon2 )\r\n\t\t\t   && ( Math.abs( m13 + m31 ) < epsilon2 )\r\n\t\t\t   && ( Math.abs( m23 + m32 ) < epsilon2 )\r\n\t\t\t   && ( Math.abs( m11 + m22 + m33 - 3 ) < epsilon2 ) ) {\r\n\r\n\t\t\t\t// this singularity is identity matrix so angle = 0\r\n\r\n\t\t\t\tthis.set( 1, 0, 0, 0 );\r\n\r\n\t\t\t\treturn this; // zero angle, arbitrary axis\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// otherwise this singularity is angle = 180\r\n\r\n\t\t\tangle = Math.PI;\r\n\r\n\t\t\tvar xx = ( m11 + 1 ) / 2;\r\n\t\t\tvar yy = ( m22 + 1 ) / 2;\r\n\t\t\tvar zz = ( m33 + 1 ) / 2;\r\n\t\t\tvar xy = ( m12 + m21 ) / 4;\r\n\t\t\tvar xz = ( m13 + m31 ) / 4;\r\n\t\t\tvar yz = ( m23 + m32 ) / 4;\r\n\r\n\t\t\tif ( ( xx > yy ) && ( xx > zz ) ) {\r\n\r\n\t\t\t\t// m11 is the largest diagonal term\r\n\r\n\t\t\t\tif ( xx < epsilon ) {\r\n\r\n\t\t\t\t\tx = 0;\r\n\t\t\t\t\ty = 0.707106781;\r\n\t\t\t\t\tz = 0.707106781;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tx = Math.sqrt( xx );\r\n\t\t\t\t\ty = xy / x;\r\n\t\t\t\t\tz = xz / x;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else if ( yy > zz ) {\r\n\r\n\t\t\t\t// m22 is the largest diagonal term\r\n\r\n\t\t\t\tif ( yy < epsilon ) {\r\n\r\n\t\t\t\t\tx = 0.707106781;\r\n\t\t\t\t\ty = 0;\r\n\t\t\t\t\tz = 0.707106781;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\ty = Math.sqrt( yy );\r\n\t\t\t\t\tx = xy / y;\r\n\t\t\t\t\tz = yz / y;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// m33 is the largest diagonal term so base result on this\r\n\r\n\t\t\t\tif ( zz < epsilon ) {\r\n\r\n\t\t\t\t\tx = 0.707106781;\r\n\t\t\t\t\ty = 0.707106781;\r\n\t\t\t\t\tz = 0;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tz = Math.sqrt( zz );\r\n\t\t\t\t\tx = xz / z;\r\n\t\t\t\t\ty = yz / z;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.set( x, y, z, angle );\r\n\r\n\t\t\treturn this; // return 180 deg rotation\r\n\r\n\t\t}\r\n\r\n\t\t// as we have reached here there are no singularities so we can handle normally\r\n\r\n\t\tvar s = Math.sqrt( ( m32 - m23 ) * ( m32 - m23 )\r\n\t\t\t\t\t\t  + ( m13 - m31 ) * ( m13 - m31 )\r\n\t\t\t\t\t\t  + ( m21 - m12 ) * ( m21 - m12 ) ); // used to normalize\r\n\r\n\t\tif ( Math.abs( s ) < 0.001 ) s = 1;\r\n\r\n\t\t// prevent divide by zero, should not happen if matrix is orthogonal and should be\r\n\t\t// caught by singularity test above, but I've left it in just in case\r\n\r\n\t\tthis.x = ( m32 - m23 ) / s;\r\n\t\tthis.y = ( m13 - m31 ) / s;\r\n\t\tthis.z = ( m21 - m12 ) / s;\r\n\t\tthis.w = Math.acos( ( m11 + m22 + m33 - 1 ) / 2 );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmin: function ( v ) {\r\n\r\n\t\tif ( this.x > v.x ) {\r\n\r\n\t\t\tthis.x = v.x;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.y > v.y ) {\r\n\r\n\t\t\tthis.y = v.y;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.z > v.z ) {\r\n\r\n\t\t\tthis.z = v.z;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.w > v.w ) {\r\n\r\n\t\t\tthis.w = v.w;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmax: function ( v ) {\r\n\r\n\t\tif ( this.x < v.x ) {\r\n\r\n\t\t\tthis.x = v.x;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.y < v.y ) {\r\n\r\n\t\t\tthis.y = v.y;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.z < v.z ) {\r\n\r\n\t\t\tthis.z = v.z;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.w < v.w ) {\r\n\r\n\t\t\tthis.w = v.w;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tclamp: function ( min, max ) {\r\n\r\n\t\t// This function assumes min < max, if this assumption isn't true it will not operate correctly\r\n\r\n\t\tif ( this.x < min.x ) {\r\n\r\n\t\t\tthis.x = min.x;\r\n\r\n\t\t} else if ( this.x > max.x ) {\r\n\r\n\t\t\tthis.x = max.x;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.y < min.y ) {\r\n\r\n\t\t\tthis.y = min.y;\r\n\r\n\t\t} else if ( this.y > max.y ) {\r\n\r\n\t\t\tthis.y = max.y;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.z < min.z ) {\r\n\r\n\t\t\tthis.z = min.z;\r\n\r\n\t\t} else if ( this.z > max.z ) {\r\n\r\n\t\t\tthis.z = max.z;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.w < min.w ) {\r\n\r\n\t\t\tthis.w = min.w;\r\n\r\n\t\t} else if ( this.w > max.w ) {\r\n\r\n\t\t\tthis.w = max.w;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tclampScalar: function () {\r\n\r\n\t\tvar min, max;\r\n\r\n\t\treturn function clampScalar( minVal, maxVal ) {\r\n\r\n\t\t\tif ( min === undefined ) {\r\n\r\n\t\t\t\tmin = new THREE.Vector4();\r\n\t\t\t\tmax = new THREE.Vector4();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tmin.set( minVal, minVal, minVal, minVal );\r\n\t\t\tmax.set( maxVal, maxVal, maxVal, maxVal );\r\n\r\n\t\t\treturn this.clamp( min, max );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tfloor: function () {\r\n\r\n\t\tthis.x = Math.floor( this.x );\r\n\t\tthis.y = Math.floor( this.y );\r\n\t\tthis.z = Math.floor( this.z );\r\n\t\tthis.w = Math.floor( this.w );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tceil: function () {\r\n\r\n\t\tthis.x = Math.ceil( this.x );\r\n\t\tthis.y = Math.ceil( this.y );\r\n\t\tthis.z = Math.ceil( this.z );\r\n\t\tthis.w = Math.ceil( this.w );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tround: function () {\r\n\r\n\t\tthis.x = Math.round( this.x );\r\n\t\tthis.y = Math.round( this.y );\r\n\t\tthis.z = Math.round( this.z );\r\n\t\tthis.w = Math.round( this.w );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\troundToZero: function () {\r\n\r\n\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\r\n\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\r\n\t\tthis.z = ( this.z < 0 ) ? Math.ceil( this.z ) : Math.floor( this.z );\r\n\t\tthis.w = ( this.w < 0 ) ? Math.ceil( this.w ) : Math.floor( this.w );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tnegate: function () {\r\n\r\n\t\tthis.x = - this.x;\r\n\t\tthis.y = - this.y;\r\n\t\tthis.z = - this.z;\r\n\t\tthis.w = - this.w;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tdot: function ( v ) {\r\n\r\n\t\treturn this.x * v.x + this.y * v.y + this.z * v.z + this.w * v.w;\r\n\r\n\t},\r\n\r\n\tlengthSq: function () {\r\n\r\n\t\treturn this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w;\r\n\r\n\t},\r\n\r\n\tlength: function () {\r\n\r\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w );\r\n\r\n\t},\r\n\r\n\tlengthManhattan: function () {\r\n\r\n\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z ) + Math.abs( this.w );\r\n\r\n\t},\r\n\r\n\tnormalize: function () {\r\n\r\n\t\treturn this.divideScalar( this.length() );\r\n\r\n\t},\r\n\r\n\tsetLength: function ( l ) {\r\n\r\n\t\tvar oldLength = this.length();\r\n\r\n\t\tif ( oldLength !== 0 && l !== oldLength ) {\r\n\r\n\t\t\tthis.multiplyScalar( l / oldLength );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tlerp: function ( v, alpha ) {\r\n\r\n\t\tthis.x += ( v.x - this.x ) * alpha;\r\n\t\tthis.y += ( v.y - this.y ) * alpha;\r\n\t\tthis.z += ( v.z - this.z ) * alpha;\r\n\t\tthis.w += ( v.w - this.w ) * alpha;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tlerpVectors: function ( v1, v2, alpha ) {\r\n\r\n\t\tthis.subVectors( v2, v1 ).multiplyScalar( alpha ).add( v1 );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tequals: function ( v ) {\r\n\r\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) && ( v.w === this.w ) );\r\n\r\n\t},\r\n\r\n\tfromArray: function ( array, offset ) {\r\n\r\n\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\tthis.x = array[ offset ];\r\n\t\tthis.y = array[ offset + 1 ];\r\n\t\tthis.z = array[ offset + 2 ];\r\n\t\tthis.w = array[ offset + 3 ];\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\ttoArray: function ( array, offset ) {\r\n\r\n\t\tif ( array === undefined ) array = [];\r\n\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\tarray[ offset ] = this.x;\r\n\t\tarray[ offset + 1 ] = this.y;\r\n\t\tarray[ offset + 2 ] = this.z;\r\n\t\tarray[ offset + 3 ] = this.w;\r\n\r\n\t\treturn array;\r\n\r\n\t},\r\n\r\n\tfromAttribute: function ( attribute, index, offset ) {\r\n\r\n\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\tindex = index * attribute.itemSize + offset;\r\n\r\n\t\tthis.x = attribute.array[ index ];\r\n\t\tthis.y = attribute.array[ index + 1 ];\r\n\t\tthis.z = attribute.array[ index + 2 ];\r\n\t\tthis.w = attribute.array[ index + 3 ];\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/math/Euler.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author WestLangley / http://github.com/WestLangley\r\n * @author bhouston / http://exocortex.com\r\n */\r\n\r\nTHREE.Euler = function ( x, y, z, order ) {\r\n\r\n\tthis._x = x || 0;\r\n\tthis._y = y || 0;\r\n\tthis._z = z || 0;\r\n\tthis._order = order || THREE.Euler.DefaultOrder;\r\n\r\n};\r\n\r\nTHREE.Euler.RotationOrders = [ 'XYZ', 'YZX', 'ZXY', 'XZY', 'YXZ', 'ZYX' ];\r\n\r\nTHREE.Euler.DefaultOrder = 'XYZ';\r\n\r\nTHREE.Euler.prototype = {\r\n\r\n\tconstructor: THREE.Euler,\r\n\r\n\tget x () {\r\n\r\n\t\treturn this._x;\r\n\r\n\t},\r\n\r\n\tset x ( value ) {\r\n\r\n\t\tthis._x = value;\r\n\t\tthis.onChangeCallback();\r\n\r\n\t},\r\n\r\n\tget y () {\r\n\r\n\t\treturn this._y;\r\n\r\n\t},\r\n\r\n\tset y ( value ) {\r\n\r\n\t\tthis._y = value;\r\n\t\tthis.onChangeCallback();\r\n\r\n\t},\r\n\r\n\tget z () {\r\n\r\n\t\treturn this._z;\r\n\r\n\t},\r\n\r\n\tset z ( value ) {\r\n\r\n\t\tthis._z = value;\r\n\t\tthis.onChangeCallback();\r\n\r\n\t},\r\n\r\n\tget order () {\r\n\r\n\t\treturn this._order;\r\n\r\n\t},\r\n\r\n\tset order ( value ) {\r\n\r\n\t\tthis._order = value;\r\n\t\tthis.onChangeCallback();\r\n\r\n\t},\r\n\r\n\tset: function ( x, y, z, order ) {\r\n\r\n\t\tthis._x = x;\r\n\t\tthis._y = y;\r\n\t\tthis._z = z;\r\n\t\tthis._order = order || this._order;\r\n\r\n\t\tthis.onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor( this._x, this._y, this._z, this._order);\r\n\r\n\t},\r\n\r\n\tcopy: function ( euler ) {\r\n\r\n\t\tthis._x = euler._x;\r\n\t\tthis._y = euler._y;\r\n\t\tthis._z = euler._z;\r\n\t\tthis._order = euler._order;\r\n\r\n\t\tthis.onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromRotationMatrix: function ( m, order, update ) {\r\n\r\n\t\tvar clamp = THREE.Math.clamp;\r\n\r\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\r\n\r\n\t\tvar te = m.elements;\r\n\t\tvar m11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ];\r\n\t\tvar m21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ];\r\n\t\tvar m31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\r\n\r\n\t\torder = order || this._order;\r\n\r\n\t\tif ( order === 'XYZ' ) {\r\n\r\n\t\t\tthis._y = Math.asin( clamp( m13, - 1, 1 ) );\r\n\r\n\t\t\tif ( Math.abs( m13 ) < 0.99999 ) {\r\n\r\n\t\t\t\tthis._x = Math.atan2( - m23, m33 );\r\n\t\t\t\tthis._z = Math.atan2( - m12, m11 );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthis._x = Math.atan2( m32, m22 );\r\n\t\t\t\tthis._z = 0;\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( order === 'YXZ' ) {\r\n\r\n\t\t\tthis._x = Math.asin( - clamp( m23, - 1, 1 ) );\r\n\r\n\t\t\tif ( Math.abs( m23 ) < 0.99999 ) {\r\n\r\n\t\t\t\tthis._y = Math.atan2( m13, m33 );\r\n\t\t\t\tthis._z = Math.atan2( m21, m22 );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthis._y = Math.atan2( - m31, m11 );\r\n\t\t\t\tthis._z = 0;\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( order === 'ZXY' ) {\r\n\r\n\t\t\tthis._x = Math.asin( clamp( m32, - 1, 1 ) );\r\n\r\n\t\t\tif ( Math.abs( m32 ) < 0.99999 ) {\r\n\r\n\t\t\t\tthis._y = Math.atan2( - m31, m33 );\r\n\t\t\t\tthis._z = Math.atan2( - m12, m22 );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthis._y = 0;\r\n\t\t\t\tthis._z = Math.atan2( m21, m11 );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( order === 'ZYX' ) {\r\n\r\n\t\t\tthis._y = Math.asin( - clamp( m31, - 1, 1 ) );\r\n\r\n\t\t\tif ( Math.abs( m31 ) < 0.99999 ) {\r\n\r\n\t\t\t\tthis._x = Math.atan2( m32, m33 );\r\n\t\t\t\tthis._z = Math.atan2( m21, m11 );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthis._x = 0;\r\n\t\t\t\tthis._z = Math.atan2( - m12, m22 );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( order === 'YZX' ) {\r\n\r\n\t\t\tthis._z = Math.asin( clamp( m21, - 1, 1 ) );\r\n\r\n\t\t\tif ( Math.abs( m21 ) < 0.99999 ) {\r\n\r\n\t\t\t\tthis._x = Math.atan2( - m23, m22 );\r\n\t\t\t\tthis._y = Math.atan2( - m31, m11 );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthis._x = 0;\r\n\t\t\t\tthis._y = Math.atan2( m13, m33 );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( order === 'XZY' ) {\r\n\r\n\t\t\tthis._z = Math.asin( - clamp( m12, - 1, 1 ) );\r\n\r\n\t\t\tif ( Math.abs( m12 ) < 0.99999 ) {\r\n\r\n\t\t\t\tthis._x = Math.atan2( m32, m22 );\r\n\t\t\t\tthis._y = Math.atan2( m13, m11 );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthis._x = Math.atan2( - m23, m33 );\r\n\t\t\t\tthis._y = 0;\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\tconsole.warn( 'THREE.Euler: .setFromRotationMatrix() given unsupported order: ' + order )\r\n\r\n\t\t}\r\n\r\n\t\tthis._order = order;\r\n\r\n\t\tif ( update !== false ) this.onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromQuaternion: function () {\r\n\r\n\t\tvar matrix;\r\n\r\n\t\treturn function ( q, order, update ) {\r\n\r\n\t\t\tif ( matrix === undefined ) matrix = new THREE.Matrix4();\r\n\t\t\tmatrix.makeRotationFromQuaternion( q );\r\n\t\t\tthis.setFromRotationMatrix( matrix, order, update );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tsetFromVector3: function ( v, order ) {\r\n\r\n\t\treturn this.set( v.x, v.y, v.z, order || this._order );\r\n\r\n\t},\r\n\r\n\treorder: function () {\r\n\r\n\t\t// WARNING: this discards revolution information -bhouston\r\n\r\n\t\tvar q = new THREE.Quaternion();\r\n\r\n\t\treturn function ( newOrder ) {\r\n\r\n\t\t\tq.setFromEuler( this );\r\n\t\t\tthis.setFromQuaternion( q, newOrder );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tequals: function ( euler ) {\r\n\r\n\t\treturn ( euler._x === this._x ) && ( euler._y === this._y ) && ( euler._z === this._z ) && ( euler._order === this._order );\r\n\r\n\t},\r\n\r\n\tfromArray: function ( array ) {\r\n\r\n\t\tthis._x = array[ 0 ];\r\n\t\tthis._y = array[ 1 ];\r\n\t\tthis._z = array[ 2 ];\r\n\t\tif ( array[ 3 ] !== undefined ) this._order = array[ 3 ];\r\n\r\n\t\tthis.onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\ttoArray: function ( array, offset ) {\r\n\r\n\t\tif ( array === undefined ) array = [];\r\n\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\tarray[ offset ] = this._x;\r\n\t\tarray[ offset + 1 ] = this._y;\r\n\t\tarray[ offset + 2 ] = this._z;\r\n\t\tarray[ offset + 3 ] = this._order;\r\n\r\n\t\treturn array;\r\n\r\n\t},\r\n\r\n\ttoVector3: function ( optionalResult ) {\r\n\r\n\t\tif ( optionalResult ) {\r\n\r\n\t\t\treturn optionalResult.set( this._x, this._y, this._z );\r\n\r\n\t\t} else {\r\n\r\n\t\t\treturn new THREE.Vector3( this._x, this._y, this._z );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tonChange: function ( callback ) {\r\n\r\n\t\tthis.onChangeCallback = callback;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tonChangeCallback: function () {}\r\n\r\n};\r\n\r\n// File:src/math/Line3.js\r\n\r\n/**\r\n * @author bhouston / http://exocortex.com\r\n */\r\n\r\nTHREE.Line3 = function ( start, end ) {\r\n\r\n\tthis.start = ( start !== undefined ) ? start : new THREE.Vector3();\r\n\tthis.end = ( end !== undefined ) ? end : new THREE.Vector3();\r\n\r\n};\r\n\r\nTHREE.Line3.prototype = {\r\n\r\n\tconstructor: THREE.Line3,\r\n\r\n\tset: function ( start, end ) {\r\n\r\n\t\tthis.start.copy( start );\r\n\t\tthis.end.copy( end );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t},\r\n\r\n\tcopy: function ( line ) {\r\n\r\n\t\tthis.start.copy( line.start );\r\n\t\tthis.end.copy( line.end );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcenter: function ( optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\treturn result.addVectors( this.start, this.end ).multiplyScalar( 0.5 );\r\n\r\n\t},\r\n\r\n\tdelta: function ( optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\treturn result.subVectors( this.end, this.start );\r\n\r\n\t},\r\n\r\n\tdistanceSq: function () {\r\n\r\n\t\treturn this.start.distanceToSquared( this.end );\r\n\r\n\t},\r\n\r\n\tdistance: function () {\r\n\r\n\t\treturn this.start.distanceTo( this.end );\r\n\r\n\t},\r\n\r\n\tat: function ( t, optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\r\n\t\treturn this.delta( result ).multiplyScalar( t ).add( this.start );\r\n\r\n\t},\r\n\r\n\tclosestPointToPointParameter: function () {\r\n\r\n\t\tvar startP = new THREE.Vector3();\r\n\t\tvar startEnd = new THREE.Vector3();\r\n\r\n\t\treturn function ( point, clampToLine ) {\r\n\r\n\t\t\tstartP.subVectors( point, this.start );\r\n\t\t\tstartEnd.subVectors( this.end, this.start );\r\n\r\n\t\t\tvar startEnd2 = startEnd.dot( startEnd );\r\n\t\t\tvar startEnd_startP = startEnd.dot( startP );\r\n\r\n\t\t\tvar t = startEnd_startP / startEnd2;\r\n\r\n\t\t\tif ( clampToLine ) {\r\n\r\n\t\t\t\tt = THREE.Math.clamp( t, 0, 1 );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn t;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tclosestPointToPoint: function ( point, clampToLine, optionalTarget ) {\r\n\r\n\t\tvar t = this.closestPointToPointParameter( point, clampToLine );\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\r\n\t\treturn this.delta( result ).multiplyScalar( t ).add( this.start );\r\n\r\n\t},\r\n\r\n\tapplyMatrix4: function ( matrix ) {\r\n\r\n\t\tthis.start.applyMatrix4( matrix );\r\n\t\tthis.end.applyMatrix4( matrix );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tequals: function ( line ) {\r\n\r\n\t\treturn line.start.equals( this.start ) && line.end.equals( this.end );\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/math/Box2.js\r\n\r\n/**\r\n * @author bhouston / http://exocortex.com\r\n */\r\n\r\nTHREE.Box2 = function ( min, max ) {\r\n\r\n\tthis.min = ( min !== undefined ) ? min : new THREE.Vector2( Infinity, Infinity );\r\n\tthis.max = ( max !== undefined ) ? max : new THREE.Vector2( - Infinity, - Infinity );\r\n\r\n};\r\n\r\nTHREE.Box2.prototype = {\r\n\r\n\tconstructor: THREE.Box2,\r\n\r\n\tset: function ( min, max ) {\r\n\r\n\t\tthis.min.copy( min );\r\n\t\tthis.max.copy( max );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromPoints: function ( points ) {\r\n\r\n\t\tthis.makeEmpty();\r\n\r\n\t\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\r\n\r\n\t\t\tthis.expandByPoint( points[ i ] )\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromCenterAndSize: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector2();\r\n\r\n\t\treturn function ( center, size ) {\r\n\r\n\t\t\tvar halfSize = v1.copy( size ).multiplyScalar( 0.5 );\r\n\t\t\tthis.min.copy( center ).sub( halfSize );\r\n\t\t\tthis.max.copy( center ).add( halfSize );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\t\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t},\r\n\r\n\tcopy: function ( box ) {\r\n\r\n\t\tthis.min.copy( box.min );\r\n\t\tthis.max.copy( box.max );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmakeEmpty: function () {\r\n\r\n\t\tthis.min.x = this.min.y = Infinity;\r\n\t\tthis.max.x = this.max.y = - Infinity;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tempty: function () {\r\n\r\n\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\r\n\r\n\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y );\r\n\r\n\t},\r\n\r\n\tcenter: function ( optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector2();\r\n\t\treturn result.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\r\n\r\n\t},\r\n\r\n\tsize: function ( optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector2();\r\n\t\treturn result.subVectors( this.max, this.min );\r\n\r\n\t},\r\n\r\n\texpandByPoint: function ( point ) {\r\n\r\n\t\tthis.min.min( point );\r\n\t\tthis.max.max( point );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\texpandByVector: function ( vector ) {\r\n\r\n\t\tthis.min.sub( vector );\r\n\t\tthis.max.add( vector );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\texpandByScalar: function ( scalar ) {\r\n\r\n\t\tthis.min.addScalar( - scalar );\r\n\t\tthis.max.addScalar( scalar );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcontainsPoint: function ( point ) {\r\n\r\n\t\tif ( point.x < this.min.x || point.x > this.max.x ||\r\n\t\t     point.y < this.min.y || point.y > this.max.y ) {\r\n\r\n\t\t\treturn false;\r\n\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\r\n\t},\r\n\r\n\tcontainsBox: function ( box ) {\r\n\r\n\t\tif ( ( this.min.x <= box.min.x ) && ( box.max.x <= this.max.x ) &&\r\n\t\t     ( this.min.y <= box.min.y ) && ( box.max.y <= this.max.y ) ) {\r\n\r\n\t\t\treturn true;\r\n\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\r\n\t},\r\n\r\n\tgetParameter: function ( point, optionalTarget ) {\r\n\r\n\t\t// This can potentially have a divide by zero if the box\r\n\t\t// has a size dimension of 0.\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector2();\r\n\r\n\t\treturn result.set(\r\n\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\r\n\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y )\r\n\t\t);\r\n\r\n\t},\r\n\r\n\tisIntersectionBox: function ( box ) {\r\n\r\n\t\t// using 6 splitting planes to rule out intersections.\r\n\r\n\t\tif ( box.max.x < this.min.x || box.min.x > this.max.x ||\r\n\t\t     box.max.y < this.min.y || box.min.y > this.max.y ) {\r\n\r\n\t\t\treturn false;\r\n\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\r\n\t},\r\n\r\n\tclampPoint: function ( point, optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector2();\r\n\t\treturn result.copy( point ).clamp( this.min, this.max );\r\n\r\n\t},\r\n\r\n\tdistanceToPoint: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector2();\r\n\r\n\t\treturn function ( point ) {\r\n\r\n\t\t\tvar clampedPoint = v1.copy( point ).clamp( this.min, this.max );\r\n\t\t\treturn clampedPoint.sub( point ).length();\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tintersect: function ( box ) {\r\n\r\n\t\tthis.min.max( box.min );\r\n\t\tthis.max.min( box.max );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tunion: function ( box ) {\r\n\r\n\t\tthis.min.min( box.min );\r\n\t\tthis.max.max( box.max );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\ttranslate: function ( offset ) {\r\n\r\n\t\tthis.min.add( offset );\r\n\t\tthis.max.add( offset );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tequals: function ( box ) {\r\n\r\n\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/math/Box3.js\r\n\r\n/**\r\n * @author bhouston / http://exocortex.com\r\n * @author WestLangley / http://github.com/WestLangley\r\n */\r\n\r\nTHREE.Box3 = function ( min, max ) {\r\n\r\n\tthis.min = ( min !== undefined ) ? min : new THREE.Vector3( Infinity, Infinity, Infinity );\r\n\tthis.max = ( max !== undefined ) ? max : new THREE.Vector3( - Infinity, - Infinity, - Infinity );\r\n\r\n};\r\n\r\nTHREE.Box3.prototype = {\r\n\r\n\tconstructor: THREE.Box3,\r\n\r\n\tset: function ( min, max ) {\r\n\r\n\t\tthis.min.copy( min );\r\n\t\tthis.max.copy( max );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromPoints: function ( points ) {\r\n\r\n\t\tthis.makeEmpty();\r\n\r\n\t\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\r\n\r\n\t\t\tthis.expandByPoint( points[ i ] );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromCenterAndSize: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector3();\r\n\r\n\t\treturn function ( center, size ) {\r\n\r\n\t\t\tvar halfSize = v1.copy( size ).multiplyScalar( 0.5 );\r\n\r\n\t\t\tthis.min.copy( center ).sub( halfSize );\r\n\t\t\tthis.max.copy( center ).add( halfSize );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tsetFromObject: function () {\r\n\r\n\t\t// Computes the world-axis-aligned bounding box of an object (including its children),\r\n\t\t// accounting for both the object's, and children's, world transforms\r\n\r\n\t\tvar v1 = new THREE.Vector3();\r\n\r\n\t\treturn function ( object ) {\r\n\r\n\t\t\tvar scope = this;\r\n\r\n\t\t\tobject.updateMatrixWorld( true );\r\n\r\n\t\t\tthis.makeEmpty();\r\n\r\n\t\t\tobject.traverse( function ( node ) {\r\n\r\n\t\t\t\tvar geometry = node.geometry;\r\n\r\n\t\t\t\tif ( geometry !== undefined ) {\r\n\r\n\t\t\t\t\tif ( geometry instanceof THREE.Geometry ) {\r\n\r\n\t\t\t\t\t\tvar vertices = geometry.vertices;\r\n\r\n\t\t\t\t\t\tfor ( var i = 0, il = vertices.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\t\t\tv1.copy( vertices[ i ] );\r\n\r\n\t\t\t\t\t\t\tv1.applyMatrix4( node.matrixWorld );\r\n\r\n\t\t\t\t\t\t\tscope.expandByPoint( v1 );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} else if ( geometry instanceof THREE.BufferGeometry && geometry.attributes[ 'position' ] !== undefined ) {\r\n\r\n\t\t\t\t\t\tvar positions = geometry.attributes[ 'position' ].array;\r\n\r\n\t\t\t\t\t\tfor ( var i = 0, il = positions.length; i < il; i += 3 ) {\r\n\r\n\t\t\t\t\t\t\tv1.set( positions[ i ], positions[ i + 1 ], positions[ i + 2 ] );\r\n\r\n\t\t\t\t\t\t\tv1.applyMatrix4( node.matrixWorld );\r\n\r\n\t\t\t\t\t\t\tscope.expandByPoint( v1 );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t},\r\n\r\n\tcopy: function ( box ) {\r\n\r\n\t\tthis.min.copy( box.min );\r\n\t\tthis.max.copy( box.max );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmakeEmpty: function () {\r\n\r\n\t\tthis.min.x = this.min.y = this.min.z = Infinity;\r\n\t\tthis.max.x = this.max.y = this.max.z = - Infinity;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tempty: function () {\r\n\r\n\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\r\n\r\n\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y ) || ( this.max.z < this.min.z );\r\n\r\n\t},\r\n\r\n\tcenter: function ( optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\treturn result.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\r\n\r\n\t},\r\n\r\n\tsize: function ( optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\treturn result.subVectors( this.max, this.min );\r\n\r\n\t},\r\n\r\n\texpandByPoint: function ( point ) {\r\n\r\n\t\tthis.min.min( point );\r\n\t\tthis.max.max( point );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\texpandByVector: function ( vector ) {\r\n\r\n\t\tthis.min.sub( vector );\r\n\t\tthis.max.add( vector );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\texpandByScalar: function ( scalar ) {\r\n\r\n\t\tthis.min.addScalar( - scalar );\r\n\t\tthis.max.addScalar( scalar );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcontainsPoint: function ( point ) {\r\n\r\n\t\tif ( point.x < this.min.x || point.x > this.max.x ||\r\n\t\t     point.y < this.min.y || point.y > this.max.y ||\r\n\t\t     point.z < this.min.z || point.z > this.max.z ) {\r\n\r\n\t\t\treturn false;\r\n\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\r\n\t},\r\n\r\n\tcontainsBox: function ( box ) {\r\n\r\n\t\tif ( ( this.min.x <= box.min.x ) && ( box.max.x <= this.max.x ) &&\r\n\t\t\t ( this.min.y <= box.min.y ) && ( box.max.y <= this.max.y ) &&\r\n\t\t\t ( this.min.z <= box.min.z ) && ( box.max.z <= this.max.z ) ) {\r\n\r\n\t\t\treturn true;\r\n\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\r\n\t},\r\n\r\n\tgetParameter: function ( point, optionalTarget ) {\r\n\r\n\t\t// This can potentially have a divide by zero if the box\r\n\t\t// has a size dimension of 0.\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\r\n\t\treturn result.set(\r\n\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\r\n\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y ),\r\n\t\t\t( point.z - this.min.z ) / ( this.max.z - this.min.z )\r\n\t\t);\r\n\r\n\t},\r\n\r\n\tisIntersectionBox: function ( box ) {\r\n\r\n\t\t// using 6 splitting planes to rule out intersections.\r\n\r\n\t\tif ( box.max.x < this.min.x || box.min.x > this.max.x ||\r\n\t\t     box.max.y < this.min.y || box.min.y > this.max.y ||\r\n\t\t     box.max.z < this.min.z || box.min.z > this.max.z ) {\r\n\r\n\t\t\treturn false;\r\n\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\r\n\t},\r\n\r\n\tclampPoint: function ( point, optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\treturn result.copy( point ).clamp( this.min, this.max );\r\n\r\n\t},\r\n\r\n\tdistanceToPoint: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector3();\r\n\r\n\t\treturn function ( point ) {\r\n\r\n\t\t\tvar clampedPoint = v1.copy( point ).clamp( this.min, this.max );\r\n\t\t\treturn clampedPoint.sub( point ).length();\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tgetBoundingSphere: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector3();\r\n\r\n\t\treturn function ( optionalTarget ) {\r\n\r\n\t\t\tvar result = optionalTarget || new THREE.Sphere();\r\n\r\n\t\t\tresult.center = this.center();\r\n\t\t\tresult.radius = this.size( v1 ).length() * 0.5;\r\n\r\n\t\t\treturn result;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tintersect: function ( box ) {\r\n\r\n\t\tthis.min.max( box.min );\r\n\t\tthis.max.min( box.max );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tunion: function ( box ) {\r\n\r\n\t\tthis.min.min( box.min );\r\n\t\tthis.max.max( box.max );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tapplyMatrix4: function () {\r\n\r\n\t\tvar points = [\r\n\t\t\tnew THREE.Vector3(),\r\n\t\t\tnew THREE.Vector3(),\r\n\t\t\tnew THREE.Vector3(),\r\n\t\t\tnew THREE.Vector3(),\r\n\t\t\tnew THREE.Vector3(),\r\n\t\t\tnew THREE.Vector3(),\r\n\t\t\tnew THREE.Vector3(),\r\n\t\t\tnew THREE.Vector3()\r\n\t\t];\r\n\r\n\t\treturn function ( matrix ) {\r\n\r\n\t\t\t// NOTE: I am using a binary pattern to specify all 2^3 combinations below\r\n\t\t\tpoints[ 0 ].set( this.min.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 000\r\n\t\t\tpoints[ 1 ].set( this.min.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 001\r\n\t\t\tpoints[ 2 ].set( this.min.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 010\r\n\t\t\tpoints[ 3 ].set( this.min.x, this.max.y, this.max.z ).applyMatrix4( matrix ); // 011\r\n\t\t\tpoints[ 4 ].set( this.max.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 100\r\n\t\t\tpoints[ 5 ].set( this.max.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 101\r\n\t\t\tpoints[ 6 ].set( this.max.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 110\r\n\t\t\tpoints[ 7 ].set( this.max.x, this.max.y, this.max.z ).applyMatrix4( matrix );  // 111\r\n\r\n\t\t\tthis.makeEmpty();\r\n\t\t\tthis.setFromPoints( points );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\ttranslate: function ( offset ) {\r\n\r\n\t\tthis.min.add( offset );\r\n\t\tthis.max.add( offset );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tequals: function ( box ) {\r\n\r\n\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/math/Matrix3.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author WestLangley / http://github.com/WestLangley\r\n * @author bhouston / http://exocortex.com\r\n */\r\n\r\nTHREE.Matrix3 = function () {\r\n\r\n\tthis.elements = new Float32Array( [\r\n\r\n\t\t1, 0, 0,\r\n\t\t0, 1, 0,\r\n\t\t0, 0, 1\r\n\r\n\t] );\r\n\r\n\tif ( arguments.length > 0 ) {\r\n\r\n\t\tconsole.error( 'THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.' );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.Matrix3.prototype = {\r\n\r\n\tconstructor: THREE.Matrix3,\r\n\r\n\tset: function ( n11, n12, n13, n21, n22, n23, n31, n32, n33 ) {\r\n\r\n\t\tvar te = this.elements;\r\n\r\n\t\tte[ 0 ] = n11; te[ 3 ] = n12; te[ 6 ] = n13;\r\n\t\tte[ 1 ] = n21; te[ 4 ] = n22; te[ 7 ] = n23;\r\n\t\tte[ 2 ] = n31; te[ 5 ] = n32; te[ 8 ] = n33;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tidentity: function () {\r\n\r\n\t\tthis.set(\r\n\r\n\t\t\t1, 0, 0,\r\n\t\t\t0, 1, 0,\r\n\t\t\t0, 0, 1\r\n\r\n\t\t);\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor().fromArray( this.elements );\r\n\r\n\t},\r\n\r\n\tcopy: function ( m ) {\r\n\r\n\t\tvar me = m.elements;\r\n\r\n\t\tthis.set(\r\n\r\n\t\t\tme[ 0 ], me[ 3 ], me[ 6 ],\r\n\t\t\tme[ 1 ], me[ 4 ], me[ 7 ],\r\n\t\t\tme[ 2 ], me[ 5 ], me[ 8 ]\r\n\r\n\t\t);\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmultiplyVector3: function ( vector ) {\r\n\r\n\t\tconsole.warn( 'THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead.' );\r\n\t\treturn vector.applyMatrix3( this );\r\n\r\n\t},\r\n\r\n\tmultiplyVector3Array: function ( a ) {\r\n\r\n\t\tconsole.warn( 'THREE.Matrix3: .multiplyVector3Array() has been renamed. Use matrix.applyToVector3Array( array ) instead.' );\r\n\t\treturn this.applyToVector3Array( a );\r\n\r\n\t},\r\n\r\n\tapplyToVector3Array: function () {\r\n\r\n\t\tvar v1;\r\n\r\n\t\treturn function ( array, offset, length ) {\r\n\r\n\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\t\t\tif ( length === undefined ) length = array.length;\r\n\r\n\t\t\tfor ( var i = 0, j = offset; i < length; i += 3, j += 3 ) {\r\n\r\n\t\t\t\tv1.fromArray( array, j );\r\n\t\t\t\tv1.applyMatrix3( this );\r\n\t\t\t\tv1.toArray( array, j );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn array;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tapplyToBuffer: function () {\r\n\r\n\t\tvar v1;\r\n\r\n\t\treturn function applyToBuffer( buffer, offset, length ) {\r\n\r\n\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\t\t\tif ( length === undefined ) length = buffer.length / buffer.itemSize;\r\n\r\n\t\t\tfor ( var i = 0, j = offset; i < length; i ++, j ++ ) {\r\n\r\n\t\t\t\tv1.x = buffer.getX( j );\r\n\t\t\t\tv1.y = buffer.getY( j );\r\n\t\t\t\tv1.z = buffer.getZ( j );\r\n\r\n\t\t\t\tv1.applyMatrix3( this );\r\n\r\n\t\t\t\tbuffer.setXYZ( v1.x, v1.y, v1.z );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn buffer;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tmultiplyScalar: function ( s ) {\r\n\r\n\t\tvar te = this.elements;\r\n\r\n\t\tte[ 0 ] *= s; te[ 3 ] *= s; te[ 6 ] *= s;\r\n\t\tte[ 1 ] *= s; te[ 4 ] *= s; te[ 7 ] *= s;\r\n\t\tte[ 2 ] *= s; te[ 5 ] *= s; te[ 8 ] *= s;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tdeterminant: function () {\r\n\r\n\t\tvar te = this.elements;\r\n\r\n\t\tvar a = te[ 0 ], b = te[ 1 ], c = te[ 2 ],\r\n\t\t\td = te[ 3 ], e = te[ 4 ], f = te[ 5 ],\r\n\t\t\tg = te[ 6 ], h = te[ 7 ], i = te[ 8 ];\r\n\r\n\t\treturn a * e * i - a * f * h - b * d * i + b * f * g + c * d * h - c * e * g;\r\n\r\n\t},\r\n\r\n\tgetInverse: function ( matrix, throwOnInvertible ) {\r\n\r\n\t\t// input: THREE.Matrix4\r\n\t\t// ( based on http://code.google.com/p/webgl-mjs/ )\r\n\r\n\t\tvar me = matrix.elements;\r\n\t\tvar te = this.elements;\r\n\r\n\t\tte[ 0 ] =   me[ 10 ] * me[ 5 ] - me[ 6 ] * me[ 9 ];\r\n\t\tte[ 1 ] = - me[ 10 ] * me[ 1 ] + me[ 2 ] * me[ 9 ];\r\n\t\tte[ 2 ] =   me[ 6 ] * me[ 1 ] - me[ 2 ] * me[ 5 ];\r\n\t\tte[ 3 ] = - me[ 10 ] * me[ 4 ] + me[ 6 ] * me[ 8 ];\r\n\t\tte[ 4 ] =   me[ 10 ] * me[ 0 ] - me[ 2 ] * me[ 8 ];\r\n\t\tte[ 5 ] = - me[ 6 ] * me[ 0 ] + me[ 2 ] * me[ 4 ];\r\n\t\tte[ 6 ] =   me[ 9 ] * me[ 4 ] - me[ 5 ] * me[ 8 ];\r\n\t\tte[ 7 ] = - me[ 9 ] * me[ 0 ] + me[ 1 ] * me[ 8 ];\r\n\t\tte[ 8 ] =   me[ 5 ] * me[ 0 ] - me[ 1 ] * me[ 4 ];\r\n\r\n\t\tvar det = me[ 0 ] * te[ 0 ] + me[ 1 ] * te[ 3 ] + me[ 2 ] * te[ 6 ];\r\n\r\n\t\t// no inverse\r\n\r\n\t\tif ( det === 0 ) {\r\n\r\n\t\t\tvar msg = \"Matrix3.getInverse(): can't invert matrix, determinant is 0\";\r\n\r\n\t\t\tif ( throwOnInvertible || false ) {\r\n\r\n\t\t\t\tthrow new Error( msg );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tconsole.warn( msg );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.identity();\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t\tthis.multiplyScalar( 1.0 / det );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\ttranspose: function () {\r\n\r\n\t\tvar tmp, m = this.elements;\r\n\r\n\t\ttmp = m[ 1 ]; m[ 1 ] = m[ 3 ]; m[ 3 ] = tmp;\r\n\t\ttmp = m[ 2 ]; m[ 2 ] = m[ 6 ]; m[ 6 ] = tmp;\r\n\t\ttmp = m[ 5 ]; m[ 5 ] = m[ 7 ]; m[ 7 ] = tmp;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tflattenToArrayOffset: function ( array, offset ) {\r\n\r\n\t\tvar te = this.elements;\r\n\r\n\t\tarray[ offset ] = te[ 0 ];\r\n\t\tarray[ offset + 1 ] = te[ 1 ];\r\n\t\tarray[ offset + 2 ] = te[ 2 ];\r\n\r\n\t\tarray[ offset + 3 ] = te[ 3 ];\r\n\t\tarray[ offset + 4 ] = te[ 4 ];\r\n\t\tarray[ offset + 5 ] = te[ 5 ];\r\n\r\n\t\tarray[ offset + 6 ] = te[ 6 ];\r\n\t\tarray[ offset + 7 ] = te[ 7 ];\r\n\t\tarray[ offset + 8 ]  = te[ 8 ];\r\n\r\n\t\treturn array;\r\n\r\n\t},\r\n\r\n\tgetNormalMatrix: function ( m ) {\r\n\r\n\t\t// input: THREE.Matrix4\r\n\r\n\t\tthis.getInverse( m ).transpose();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\ttransposeIntoArray: function ( r ) {\r\n\r\n\t\tvar m = this.elements;\r\n\r\n\t\tr[ 0 ] = m[ 0 ];\r\n\t\tr[ 1 ] = m[ 3 ];\r\n\t\tr[ 2 ] = m[ 6 ];\r\n\t\tr[ 3 ] = m[ 1 ];\r\n\t\tr[ 4 ] = m[ 4 ];\r\n\t\tr[ 5 ] = m[ 7 ];\r\n\t\tr[ 6 ] = m[ 2 ];\r\n\t\tr[ 7 ] = m[ 5 ];\r\n\t\tr[ 8 ] = m[ 8 ];\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tfromArray: function ( array ) {\r\n\r\n\t\tthis.elements.set( array );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\ttoArray: function () {\r\n\r\n\t\tvar te = this.elements;\r\n\r\n\t\treturn [\r\n\t\t\tte[ 0 ], te[ 1 ], te[ 2 ],\r\n\t\t\tte[ 3 ], te[ 4 ], te[ 5 ],\r\n\t\t\tte[ 6 ], te[ 7 ], te[ 8 ]\r\n\t\t];\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/math/Matrix4.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author supereggbert / http://www.paulbrunt.co.uk/\r\n * @author philogb / http://blog.thejit.org/\r\n * @author jordi_ros / http://plattsoft.com\r\n * @author D1plo1d / http://github.com/D1plo1d\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author timknip / http://www.floorplanner.com/\r\n * @author bhouston / http://exocortex.com\r\n * @author WestLangley / http://github.com/WestLangley\r\n */\r\n\r\nTHREE.Matrix4 = function () {\r\n\r\n\tthis.elements = new Float32Array( [\r\n\r\n\t\t1, 0, 0, 0,\r\n\t\t0, 1, 0, 0,\r\n\t\t0, 0, 1, 0,\r\n\t\t0, 0, 0, 1\r\n\r\n\t] );\r\n\r\n\tif ( arguments.length > 0 ) {\r\n\r\n\t\tconsole.error( 'THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.' );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.Matrix4.prototype = {\r\n\r\n\tconstructor: THREE.Matrix4,\r\n\r\n\tset: function ( n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44 ) {\r\n\r\n\t\tvar te = this.elements;\r\n\r\n\t\tte[ 0 ] = n11; te[ 4 ] = n12; te[ 8 ] = n13; te[ 12 ] = n14;\r\n\t\tte[ 1 ] = n21; te[ 5 ] = n22; te[ 9 ] = n23; te[ 13 ] = n24;\r\n\t\tte[ 2 ] = n31; te[ 6 ] = n32; te[ 10 ] = n33; te[ 14 ] = n34;\r\n\t\tte[ 3 ] = n41; te[ 7 ] = n42; te[ 11 ] = n43; te[ 15 ] = n44;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tidentity: function () {\r\n\r\n\t\tthis.set(\r\n\r\n\t\t\t1, 0, 0, 0,\r\n\t\t\t0, 1, 0, 0,\r\n\t\t\t0, 0, 1, 0,\r\n\t\t\t0, 0, 0, 1\r\n\r\n\t\t);\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new THREE.Matrix4().fromArray( this.elements );\r\n\r\n\t},\r\n\r\n\tcopy: function ( m ) {\r\n\r\n\t\tthis.elements.set( m.elements );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\textractPosition: function ( m ) {\r\n\r\n\t\tconsole.warn( 'THREE.Matrix4: .extractPosition() has been renamed to .copyPosition().' );\r\n\t\treturn this.copyPosition( m );\r\n\r\n\t},\r\n\r\n\tcopyPosition: function ( m ) {\r\n\r\n\t\tvar te = this.elements;\r\n\t\tvar me = m.elements;\r\n\r\n\t\tte[ 12 ] = me[ 12 ];\r\n\t\tte[ 13 ] = me[ 13 ];\r\n\t\tte[ 14 ] = me[ 14 ];\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\textractBasis: function ( xAxis, yAxis, zAxis ) {\r\n\r\n\t\tvar te = this.elements;\r\n\r\n\t\txAxis.set( te[ 0 ], te[ 1 ], te[ 2 ] );\r\n\t\tyAxis.set( te[ 4 ], te[ 5 ], te[ 6 ] );\r\n\t\tzAxis.set( te[ 8 ], te[ 9 ], te[ 10 ] );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmakeBasis: function ( xAxis, yAxis, zAxis ) {\r\n\r\n\t\tthis.set(\r\n\t\t\txAxis.x, yAxis.x, zAxis.x, 0,\r\n\t\t\txAxis.y, yAxis.y, zAxis.y, 0,\r\n\t\t\txAxis.z, yAxis.z, zAxis.z, 0,\r\n\t\t\t0,       0,       0,       1\r\n\t\t);\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\textractRotation: function () {\r\n\r\n\t\tvar v1;\r\n\r\n\t\treturn function ( m ) {\r\n\r\n\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\r\n\r\n\t\t\tvar te = this.elements;\r\n\t\t\tvar me = m.elements;\r\n\r\n\t\t\tvar scaleX = 1 / v1.set( me[ 0 ], me[ 1 ], me[ 2 ] ).length();\r\n\t\t\tvar scaleY = 1 / v1.set( me[ 4 ], me[ 5 ], me[ 6 ] ).length();\r\n\t\t\tvar scaleZ = 1 / v1.set( me[ 8 ], me[ 9 ], me[ 10 ] ).length();\r\n\r\n\t\t\tte[ 0 ] = me[ 0 ] * scaleX;\r\n\t\t\tte[ 1 ] = me[ 1 ] * scaleX;\r\n\t\t\tte[ 2 ] = me[ 2 ] * scaleX;\r\n\r\n\t\t\tte[ 4 ] = me[ 4 ] * scaleY;\r\n\t\t\tte[ 5 ] = me[ 5 ] * scaleY;\r\n\t\t\tte[ 6 ] = me[ 6 ] * scaleY;\r\n\r\n\t\t\tte[ 8 ] = me[ 8 ] * scaleZ;\r\n\t\t\tte[ 9 ] = me[ 9 ] * scaleZ;\r\n\t\t\tte[ 10 ] = me[ 10 ] * scaleZ;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tmakeRotationFromEuler: function ( euler ) {\r\n\r\n\t\tif ( euler instanceof THREE.Euler === false ) {\r\n\r\n\t\t\tconsole.error( 'THREE.Matrix: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.' );\r\n\r\n\t\t}\r\n\r\n\t\tvar te = this.elements;\r\n\r\n\t\tvar x = euler.x, y = euler.y, z = euler.z;\r\n\t\tvar a = Math.cos( x ), b = Math.sin( x );\r\n\t\tvar c = Math.cos( y ), d = Math.sin( y );\r\n\t\tvar e = Math.cos( z ), f = Math.sin( z );\r\n\r\n\t\tif ( euler.order === 'XYZ' ) {\r\n\r\n\t\t\tvar ae = a * e, af = a * f, be = b * e, bf = b * f;\r\n\r\n\t\t\tte[ 0 ] = c * e;\r\n\t\t\tte[ 4 ] = - c * f;\r\n\t\t\tte[ 8 ] = d;\r\n\r\n\t\t\tte[ 1 ] = af + be * d;\r\n\t\t\tte[ 5 ] = ae - bf * d;\r\n\t\t\tte[ 9 ] = - b * c;\r\n\r\n\t\t\tte[ 2 ] = bf - ae * d;\r\n\t\t\tte[ 6 ] = be + af * d;\r\n\t\t\tte[ 10 ] = a * c;\r\n\r\n\t\t} else if ( euler.order === 'YXZ' ) {\r\n\r\n\t\t\tvar ce = c * e, cf = c * f, de = d * e, df = d * f;\r\n\r\n\t\t\tte[ 0 ] = ce + df * b;\r\n\t\t\tte[ 4 ] = de * b - cf;\r\n\t\t\tte[ 8 ] = a * d;\r\n\r\n\t\t\tte[ 1 ] = a * f;\r\n\t\t\tte[ 5 ] = a * e;\r\n\t\t\tte[ 9 ] = - b;\r\n\r\n\t\t\tte[ 2 ] = cf * b - de;\r\n\t\t\tte[ 6 ] = df + ce * b;\r\n\t\t\tte[ 10 ] = a * c;\r\n\r\n\t\t} else if ( euler.order === 'ZXY' ) {\r\n\r\n\t\t\tvar ce = c * e, cf = c * f, de = d * e, df = d * f;\r\n\r\n\t\t\tte[ 0 ] = ce - df * b;\r\n\t\t\tte[ 4 ] = - a * f;\r\n\t\t\tte[ 8 ] = de + cf * b;\r\n\r\n\t\t\tte[ 1 ] = cf + de * b;\r\n\t\t\tte[ 5 ] = a * e;\r\n\t\t\tte[ 9 ] = df - ce * b;\r\n\r\n\t\t\tte[ 2 ] = - a * d;\r\n\t\t\tte[ 6 ] = b;\r\n\t\t\tte[ 10 ] = a * c;\r\n\r\n\t\t} else if ( euler.order === 'ZYX' ) {\r\n\r\n\t\t\tvar ae = a * e, af = a * f, be = b * e, bf = b * f;\r\n\r\n\t\t\tte[ 0 ] = c * e;\r\n\t\t\tte[ 4 ] = be * d - af;\r\n\t\t\tte[ 8 ] = ae * d + bf;\r\n\r\n\t\t\tte[ 1 ] = c * f;\r\n\t\t\tte[ 5 ] = bf * d + ae;\r\n\t\t\tte[ 9 ] = af * d - be;\r\n\r\n\t\t\tte[ 2 ] = - d;\r\n\t\t\tte[ 6 ] = b * c;\r\n\t\t\tte[ 10 ] = a * c;\r\n\r\n\t\t} else if ( euler.order === 'YZX' ) {\r\n\r\n\t\t\tvar ac = a * c, ad = a * d, bc = b * c, bd = b * d;\r\n\r\n\t\t\tte[ 0 ] = c * e;\r\n\t\t\tte[ 4 ] = bd - ac * f;\r\n\t\t\tte[ 8 ] = bc * f + ad;\r\n\r\n\t\t\tte[ 1 ] = f;\r\n\t\t\tte[ 5 ] = a * e;\r\n\t\t\tte[ 9 ] = - b * e;\r\n\r\n\t\t\tte[ 2 ] = - d * e;\r\n\t\t\tte[ 6 ] = ad * f + bc;\r\n\t\t\tte[ 10 ] = ac - bd * f;\r\n\r\n\t\t} else if ( euler.order === 'XZY' ) {\r\n\r\n\t\t\tvar ac = a * c, ad = a * d, bc = b * c, bd = b * d;\r\n\r\n\t\t\tte[ 0 ] = c * e;\r\n\t\t\tte[ 4 ] = - f;\r\n\t\t\tte[ 8 ] = d * e;\r\n\r\n\t\t\tte[ 1 ] = ac * f + bd;\r\n\t\t\tte[ 5 ] = a * e;\r\n\t\t\tte[ 9 ] = ad * f - bc;\r\n\r\n\t\t\tte[ 2 ] = bc * f - ad;\r\n\t\t\tte[ 6 ] = b * e;\r\n\t\t\tte[ 10 ] = bd * f + ac;\r\n\r\n\t\t}\r\n\r\n\t\t// last column\r\n\t\tte[ 3 ] = 0;\r\n\t\tte[ 7 ] = 0;\r\n\t\tte[ 11 ] = 0;\r\n\r\n\t\t// bottom row\r\n\t\tte[ 12 ] = 0;\r\n\t\tte[ 13 ] = 0;\r\n\t\tte[ 14 ] = 0;\r\n\t\tte[ 15 ] = 1;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetRotationFromQuaternion: function ( q ) {\r\n\r\n\t\tconsole.warn( 'THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion().' );\r\n\r\n\t\treturn this.makeRotationFromQuaternion( q );\r\n\r\n\t},\r\n\r\n\tmakeRotationFromQuaternion: function ( q ) {\r\n\r\n\t\tvar te = this.elements;\r\n\r\n\t\tvar x = q.x, y = q.y, z = q.z, w = q.w;\r\n\t\tvar x2 = x + x, y2 = y + y, z2 = z + z;\r\n\t\tvar xx = x * x2, xy = x * y2, xz = x * z2;\r\n\t\tvar yy = y * y2, yz = y * z2, zz = z * z2;\r\n\t\tvar wx = w * x2, wy = w * y2, wz = w * z2;\r\n\r\n\t\tte[ 0 ] = 1 - ( yy + zz );\r\n\t\tte[ 4 ] = xy - wz;\r\n\t\tte[ 8 ] = xz + wy;\r\n\r\n\t\tte[ 1 ] = xy + wz;\r\n\t\tte[ 5 ] = 1 - ( xx + zz );\r\n\t\tte[ 9 ] = yz - wx;\r\n\r\n\t\tte[ 2 ] = xz - wy;\r\n\t\tte[ 6 ] = yz + wx;\r\n\t\tte[ 10 ] = 1 - ( xx + yy );\r\n\r\n\t\t// last column\r\n\t\tte[ 3 ] = 0;\r\n\t\tte[ 7 ] = 0;\r\n\t\tte[ 11 ] = 0;\r\n\r\n\t\t// bottom row\r\n\t\tte[ 12 ] = 0;\r\n\t\tte[ 13 ] = 0;\r\n\t\tte[ 14 ] = 0;\r\n\t\tte[ 15 ] = 1;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tlookAt: function () {\r\n\r\n\t\tvar x, y, z;\r\n\r\n\t\treturn function ( eye, target, up ) {\r\n\r\n\t\t\tif ( x === undefined ) x = new THREE.Vector3();\r\n\t\t\tif ( y === undefined ) y = new THREE.Vector3();\r\n\t\t\tif ( z === undefined ) z = new THREE.Vector3();\r\n\r\n\t\t\tvar te = this.elements;\r\n\r\n\t\t\tz.subVectors( eye, target ).normalize();\r\n\r\n\t\t\tif ( z.length() === 0 ) {\r\n\r\n\t\t\t\tz.z = 1;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tx.crossVectors( up, z ).normalize();\r\n\r\n\t\t\tif ( x.length() === 0 ) {\r\n\r\n\t\t\t\tz.x += 0.0001;\r\n\t\t\t\tx.crossVectors( up, z ).normalize();\r\n\r\n\t\t\t}\r\n\r\n\t\t\ty.crossVectors( z, x );\r\n\r\n\r\n\t\t\tte[ 0 ] = x.x; te[ 4 ] = y.x; te[ 8 ] = z.x;\r\n\t\t\tte[ 1 ] = x.y; te[ 5 ] = y.y; te[ 9 ] = z.y;\r\n\t\t\tte[ 2 ] = x.z; te[ 6 ] = y.z; te[ 10 ] = z.z;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tmultiply: function ( m, n ) {\r\n\r\n\t\tif ( n !== undefined ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead.' );\r\n\t\t\treturn this.multiplyMatrices( m, n );\r\n\r\n\t\t}\r\n\r\n\t\treturn this.multiplyMatrices( this, m );\r\n\r\n\t},\r\n\r\n\tmultiplyMatrices: function ( a, b ) {\r\n\r\n\t\tvar ae = a.elements;\r\n\t\tvar be = b.elements;\r\n\t\tvar te = this.elements;\r\n\r\n\t\tvar a11 = ae[ 0 ], a12 = ae[ 4 ], a13 = ae[ 8 ], a14 = ae[ 12 ];\r\n\t\tvar a21 = ae[ 1 ], a22 = ae[ 5 ], a23 = ae[ 9 ], a24 = ae[ 13 ];\r\n\t\tvar a31 = ae[ 2 ], a32 = ae[ 6 ], a33 = ae[ 10 ], a34 = ae[ 14 ];\r\n\t\tvar a41 = ae[ 3 ], a42 = ae[ 7 ], a43 = ae[ 11 ], a44 = ae[ 15 ];\r\n\r\n\t\tvar b11 = be[ 0 ], b12 = be[ 4 ], b13 = be[ 8 ], b14 = be[ 12 ];\r\n\t\tvar b21 = be[ 1 ], b22 = be[ 5 ], b23 = be[ 9 ], b24 = be[ 13 ];\r\n\t\tvar b31 = be[ 2 ], b32 = be[ 6 ], b33 = be[ 10 ], b34 = be[ 14 ];\r\n\t\tvar b41 = be[ 3 ], b42 = be[ 7 ], b43 = be[ 11 ], b44 = be[ 15 ];\r\n\r\n\t\tte[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31 + a14 * b41;\r\n\t\tte[ 4 ] = a11 * b12 + a12 * b22 + a13 * b32 + a14 * b42;\r\n\t\tte[ 8 ] = a11 * b13 + a12 * b23 + a13 * b33 + a14 * b43;\r\n\t\tte[ 12 ] = a11 * b14 + a12 * b24 + a13 * b34 + a14 * b44;\r\n\r\n\t\tte[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31 + a24 * b41;\r\n\t\tte[ 5 ] = a21 * b12 + a22 * b22 + a23 * b32 + a24 * b42;\r\n\t\tte[ 9 ] = a21 * b13 + a22 * b23 + a23 * b33 + a24 * b43;\r\n\t\tte[ 13 ] = a21 * b14 + a22 * b24 + a23 * b34 + a24 * b44;\r\n\r\n\t\tte[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31 + a34 * b41;\r\n\t\tte[ 6 ] = a31 * b12 + a32 * b22 + a33 * b32 + a34 * b42;\r\n\t\tte[ 10 ] = a31 * b13 + a32 * b23 + a33 * b33 + a34 * b43;\r\n\t\tte[ 14 ] = a31 * b14 + a32 * b24 + a33 * b34 + a34 * b44;\r\n\r\n\t\tte[ 3 ] = a41 * b11 + a42 * b21 + a43 * b31 + a44 * b41;\r\n\t\tte[ 7 ] = a41 * b12 + a42 * b22 + a43 * b32 + a44 * b42;\r\n\t\tte[ 11 ] = a41 * b13 + a42 * b23 + a43 * b33 + a44 * b43;\r\n\t\tte[ 15 ] = a41 * b14 + a42 * b24 + a43 * b34 + a44 * b44;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmultiplyToArray: function ( a, b, r ) {\r\n\r\n\t\tvar te = this.elements;\r\n\r\n\t\tthis.multiplyMatrices( a, b );\r\n\r\n\t\tr[ 0 ] = te[ 0 ]; r[ 1 ] = te[ 1 ]; r[ 2 ] = te[ 2 ]; r[ 3 ] = te[ 3 ];\r\n\t\tr[ 4 ] = te[ 4 ]; r[ 5 ] = te[ 5 ]; r[ 6 ] = te[ 6 ]; r[ 7 ] = te[ 7 ];\r\n\t\tr[ 8 ]  = te[ 8 ]; r[ 9 ]  = te[ 9 ]; r[ 10 ] = te[ 10 ]; r[ 11 ] = te[ 11 ];\r\n\t\tr[ 12 ] = te[ 12 ]; r[ 13 ] = te[ 13 ]; r[ 14 ] = te[ 14 ]; r[ 15 ] = te[ 15 ];\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmultiplyScalar: function ( s ) {\r\n\r\n\t\tvar te = this.elements;\r\n\r\n\t\tte[ 0 ] *= s; te[ 4 ] *= s; te[ 8 ] *= s; te[ 12 ] *= s;\r\n\t\tte[ 1 ] *= s; te[ 5 ] *= s; te[ 9 ] *= s; te[ 13 ] *= s;\r\n\t\tte[ 2 ] *= s; te[ 6 ] *= s; te[ 10 ] *= s; te[ 14 ] *= s;\r\n\t\tte[ 3 ] *= s; te[ 7 ] *= s; te[ 11 ] *= s; te[ 15 ] *= s;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmultiplyVector3: function ( vector ) {\r\n\r\n\t\tconsole.warn( 'THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) or vector.applyProjection( matrix ) instead.' );\r\n\t\treturn vector.applyProjection( this );\r\n\r\n\t},\r\n\r\n\tmultiplyVector4: function ( vector ) {\r\n\r\n\t\tconsole.warn( 'THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead.' );\r\n\t\treturn vector.applyMatrix4( this );\r\n\r\n\t},\r\n\r\n\tmultiplyVector3Array: function ( a ) {\r\n\r\n\t\tconsole.warn( 'THREE.Matrix4: .multiplyVector3Array() has been renamed. Use matrix.applyToVector3Array( array ) instead.' );\r\n\t\treturn this.applyToVector3Array( a );\r\n\r\n\t},\r\n\r\n\tapplyToVector3Array: function () {\r\n\r\n\t\tvar v1;\r\n\r\n\t\treturn function ( array, offset, length ) {\r\n\r\n\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\t\t\tif ( length === undefined ) length = array.length;\r\n\r\n\t\t\tfor ( var i = 0, j = offset; i < length; i += 3, j += 3 ) {\r\n\r\n\t\t\t\tv1.fromArray( array, j );\r\n\t\t\t\tv1.applyMatrix4( this );\r\n\t\t\t\tv1.toArray( array, j );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn array;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tapplyToBuffer: function () {\r\n\r\n\t\tvar v1;\r\n\r\n\t\treturn function applyToBuffer( buffer, offset, length ) {\r\n\r\n\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\t\t\tif ( length === undefined ) length = buffer.length / buffer.itemSize;\r\n\r\n\t\t\tfor ( var i = 0, j = offset; i < length; i ++, j ++ ) {\r\n\r\n\t\t\t\tv1.x = buffer.getX( j );\r\n\t\t\t\tv1.y = buffer.getY( j );\r\n\t\t\t\tv1.z = buffer.getZ( j );\r\n\r\n\t\t\t\tv1.applyMatrix4( this );\r\n\r\n\t\t\t\tbuffer.setXYZ( v1.x, v1.y, v1.z );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn buffer;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\trotateAxis: function ( v ) {\r\n\r\n\t\tconsole.warn( 'THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead.' );\r\n\r\n\t\tv.transformDirection( this );\r\n\r\n\t},\r\n\r\n\tcrossVector: function ( vector ) {\r\n\r\n\t\tconsole.warn( 'THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead.' );\r\n\t\treturn vector.applyMatrix4( this );\r\n\r\n\t},\r\n\r\n\tdeterminant: function () {\r\n\r\n\t\tvar te = this.elements;\r\n\r\n\t\tvar n11 = te[ 0 ], n12 = te[ 4 ], n13 = te[ 8 ], n14 = te[ 12 ];\r\n\t\tvar n21 = te[ 1 ], n22 = te[ 5 ], n23 = te[ 9 ], n24 = te[ 13 ];\r\n\t\tvar n31 = te[ 2 ], n32 = te[ 6 ], n33 = te[ 10 ], n34 = te[ 14 ];\r\n\t\tvar n41 = te[ 3 ], n42 = te[ 7 ], n43 = te[ 11 ], n44 = te[ 15 ];\r\n\r\n\t\t//TODO: make this more efficient\r\n\t\t//( based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm )\r\n\r\n\t\treturn (\r\n\t\t\tn41 * (\r\n\t\t\t\t+ n14 * n23 * n32\r\n\t\t\t\t - n13 * n24 * n32\r\n\t\t\t\t - n14 * n22 * n33\r\n\t\t\t\t + n12 * n24 * n33\r\n\t\t\t\t + n13 * n22 * n34\r\n\t\t\t\t - n12 * n23 * n34\r\n\t\t\t) +\r\n\t\t\tn42 * (\r\n\t\t\t\t+ n11 * n23 * n34\r\n\t\t\t\t - n11 * n24 * n33\r\n\t\t\t\t + n14 * n21 * n33\r\n\t\t\t\t - n13 * n21 * n34\r\n\t\t\t\t + n13 * n24 * n31\r\n\t\t\t\t - n14 * n23 * n31\r\n\t\t\t) +\r\n\t\t\tn43 * (\r\n\t\t\t\t+ n11 * n24 * n32\r\n\t\t\t\t - n11 * n22 * n34\r\n\t\t\t\t - n14 * n21 * n32\r\n\t\t\t\t + n12 * n21 * n34\r\n\t\t\t\t + n14 * n22 * n31\r\n\t\t\t\t - n12 * n24 * n31\r\n\t\t\t) +\r\n\t\t\tn44 * (\r\n\t\t\t\t- n13 * n22 * n31\r\n\t\t\t\t - n11 * n23 * n32\r\n\t\t\t\t + n11 * n22 * n33\r\n\t\t\t\t + n13 * n21 * n32\r\n\t\t\t\t - n12 * n21 * n33\r\n\t\t\t\t + n12 * n23 * n31\r\n\t\t\t)\r\n\r\n\t\t);\r\n\r\n\t},\r\n\r\n\ttranspose: function () {\r\n\r\n\t\tvar te = this.elements;\r\n\t\tvar tmp;\r\n\r\n\t\ttmp = te[ 1 ]; te[ 1 ] = te[ 4 ]; te[ 4 ] = tmp;\r\n\t\ttmp = te[ 2 ]; te[ 2 ] = te[ 8 ]; te[ 8 ] = tmp;\r\n\t\ttmp = te[ 6 ]; te[ 6 ] = te[ 9 ]; te[ 9 ] = tmp;\r\n\r\n\t\ttmp = te[ 3 ]; te[ 3 ] = te[ 12 ]; te[ 12 ] = tmp;\r\n\t\ttmp = te[ 7 ]; te[ 7 ] = te[ 13 ]; te[ 13 ] = tmp;\r\n\t\ttmp = te[ 11 ]; te[ 11 ] = te[ 14 ]; te[ 14 ] = tmp;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tflattenToArrayOffset: function ( array, offset ) {\r\n\r\n\t\tvar te = this.elements;\r\n\r\n\t\tarray[ offset ] = te[ 0 ];\r\n\t\tarray[ offset + 1 ] = te[ 1 ];\r\n\t\tarray[ offset + 2 ] = te[ 2 ];\r\n\t\tarray[ offset + 3 ] = te[ 3 ];\r\n\r\n\t\tarray[ offset + 4 ] = te[ 4 ];\r\n\t\tarray[ offset + 5 ] = te[ 5 ];\r\n\t\tarray[ offset + 6 ] = te[ 6 ];\r\n\t\tarray[ offset + 7 ] = te[ 7 ];\r\n\r\n\t\tarray[ offset + 8 ]  = te[ 8 ];\r\n\t\tarray[ offset + 9 ]  = te[ 9 ];\r\n\t\tarray[ offset + 10 ] = te[ 10 ];\r\n\t\tarray[ offset + 11 ] = te[ 11 ];\r\n\r\n\t\tarray[ offset + 12 ] = te[ 12 ];\r\n\t\tarray[ offset + 13 ] = te[ 13 ];\r\n\t\tarray[ offset + 14 ] = te[ 14 ];\r\n\t\tarray[ offset + 15 ] = te[ 15 ];\r\n\r\n\t\treturn array;\r\n\r\n\t},\r\n\r\n\tgetPosition: function () {\r\n\r\n\t\tvar v1;\r\n\r\n\t\treturn function () {\r\n\r\n\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\r\n\t\t\tconsole.warn( 'THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead.' );\r\n\r\n\t\t\tvar te = this.elements;\r\n\t\t\treturn v1.set( te[ 12 ], te[ 13 ], te[ 14 ] );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tsetPosition: function ( v ) {\r\n\r\n\t\tvar te = this.elements;\r\n\r\n\t\tte[ 12 ] = v.x;\r\n\t\tte[ 13 ] = v.y;\r\n\t\tte[ 14 ] = v.z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tgetInverse: function ( m, throwOnInvertible ) {\r\n\r\n\t\t// based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm\r\n\t\tvar te = this.elements;\r\n\t\tvar me = m.elements;\r\n\r\n\t\tvar n11 = me[ 0 ], n12 = me[ 4 ], n13 = me[ 8 ], n14 = me[ 12 ];\r\n\t\tvar n21 = me[ 1 ], n22 = me[ 5 ], n23 = me[ 9 ], n24 = me[ 13 ];\r\n\t\tvar n31 = me[ 2 ], n32 = me[ 6 ], n33 = me[ 10 ], n34 = me[ 14 ];\r\n\t\tvar n41 = me[ 3 ], n42 = me[ 7 ], n43 = me[ 11 ], n44 = me[ 15 ];\r\n\r\n\t\tte[ 0 ] = n23 * n34 * n42 - n24 * n33 * n42 + n24 * n32 * n43 - n22 * n34 * n43 - n23 * n32 * n44 + n22 * n33 * n44;\r\n\t\tte[ 4 ] = n14 * n33 * n42 - n13 * n34 * n42 - n14 * n32 * n43 + n12 * n34 * n43 + n13 * n32 * n44 - n12 * n33 * n44;\r\n\t\tte[ 8 ] = n13 * n24 * n42 - n14 * n23 * n42 + n14 * n22 * n43 - n12 * n24 * n43 - n13 * n22 * n44 + n12 * n23 * n44;\r\n\t\tte[ 12 ] = n14 * n23 * n32 - n13 * n24 * n32 - n14 * n22 * n33 + n12 * n24 * n33 + n13 * n22 * n34 - n12 * n23 * n34;\r\n\t\tte[ 1 ] = n24 * n33 * n41 - n23 * n34 * n41 - n24 * n31 * n43 + n21 * n34 * n43 + n23 * n31 * n44 - n21 * n33 * n44;\r\n\t\tte[ 5 ] = n13 * n34 * n41 - n14 * n33 * n41 + n14 * n31 * n43 - n11 * n34 * n43 - n13 * n31 * n44 + n11 * n33 * n44;\r\n\t\tte[ 9 ] = n14 * n23 * n41 - n13 * n24 * n41 - n14 * n21 * n43 + n11 * n24 * n43 + n13 * n21 * n44 - n11 * n23 * n44;\r\n\t\tte[ 13 ] = n13 * n24 * n31 - n14 * n23 * n31 + n14 * n21 * n33 - n11 * n24 * n33 - n13 * n21 * n34 + n11 * n23 * n34;\r\n\t\tte[ 2 ] = n22 * n34 * n41 - n24 * n32 * n41 + n24 * n31 * n42 - n21 * n34 * n42 - n22 * n31 * n44 + n21 * n32 * n44;\r\n\t\tte[ 6 ] = n14 * n32 * n41 - n12 * n34 * n41 - n14 * n31 * n42 + n11 * n34 * n42 + n12 * n31 * n44 - n11 * n32 * n44;\r\n\t\tte[ 10 ] = n12 * n24 * n41 - n14 * n22 * n41 + n14 * n21 * n42 - n11 * n24 * n42 - n12 * n21 * n44 + n11 * n22 * n44;\r\n\t\tte[ 14 ] = n14 * n22 * n31 - n12 * n24 * n31 - n14 * n21 * n32 + n11 * n24 * n32 + n12 * n21 * n34 - n11 * n22 * n34;\r\n\t\tte[ 3 ] = n23 * n32 * n41 - n22 * n33 * n41 - n23 * n31 * n42 + n21 * n33 * n42 + n22 * n31 * n43 - n21 * n32 * n43;\r\n\t\tte[ 7 ] = n12 * n33 * n41 - n13 * n32 * n41 + n13 * n31 * n42 - n11 * n33 * n42 - n12 * n31 * n43 + n11 * n32 * n43;\r\n\t\tte[ 11 ] = n13 * n22 * n41 - n12 * n23 * n41 - n13 * n21 * n42 + n11 * n23 * n42 + n12 * n21 * n43 - n11 * n22 * n43;\r\n\t\tte[ 15 ] = n12 * n23 * n31 - n13 * n22 * n31 + n13 * n21 * n32 - n11 * n23 * n32 - n12 * n21 * n33 + n11 * n22 * n33;\r\n\r\n\t\tvar det = n11 * te[ 0 ] + n21 * te[ 4 ] + n31 * te[ 8 ] + n41 * te[ 12 ];\r\n\r\n\t\tif ( det === 0 ) {\r\n\r\n\t\t\tvar msg = \"THREE.Matrix4.getInverse(): can't invert matrix, determinant is 0\";\r\n\r\n\t\t\tif ( throwOnInvertible || false ) {\r\n\r\n\t\t\t\tthrow new Error( msg );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tconsole.warn( msg );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.identity();\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t\tthis.multiplyScalar( 1 / det );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\ttranslate: function ( v ) {\r\n\r\n\t\tconsole.error( 'THREE.Matrix4: .translate() has been removed.' );\r\n\r\n\t},\r\n\r\n\trotateX: function ( angle ) {\r\n\r\n\t\tconsole.error( 'THREE.Matrix4: .rotateX() has been removed.' );\r\n\r\n\t},\r\n\r\n\trotateY: function ( angle ) {\r\n\r\n\t\tconsole.error( 'THREE.Matrix4: .rotateY() has been removed.' );\r\n\r\n\t},\r\n\r\n\trotateZ: function ( angle ) {\r\n\r\n\t\tconsole.error( 'THREE.Matrix4: .rotateZ() has been removed.' );\r\n\r\n\t},\r\n\r\n\trotateByAxis: function ( axis, angle ) {\r\n\r\n\t\tconsole.error( 'THREE.Matrix4: .rotateByAxis() has been removed.' );\r\n\r\n\t},\r\n\r\n\tscale: function ( v ) {\r\n\r\n\t\tvar te = this.elements;\r\n\t\tvar x = v.x, y = v.y, z = v.z;\r\n\r\n\t\tte[ 0 ] *= x; te[ 4 ] *= y; te[ 8 ] *= z;\r\n\t\tte[ 1 ] *= x; te[ 5 ] *= y; te[ 9 ] *= z;\r\n\t\tte[ 2 ] *= x; te[ 6 ] *= y; te[ 10 ] *= z;\r\n\t\tte[ 3 ] *= x; te[ 7 ] *= y; te[ 11 ] *= z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tgetMaxScaleOnAxis: function () {\r\n\r\n\t\tvar te = this.elements;\r\n\r\n\t\tvar scaleXSq = te[ 0 ] * te[ 0 ] + te[ 1 ] * te[ 1 ] + te[ 2 ] * te[ 2 ];\r\n\t\tvar scaleYSq = te[ 4 ] * te[ 4 ] + te[ 5 ] * te[ 5 ] + te[ 6 ] * te[ 6 ];\r\n\t\tvar scaleZSq = te[ 8 ] * te[ 8 ] + te[ 9 ] * te[ 9 ] + te[ 10 ] * te[ 10 ];\r\n\r\n\t\treturn Math.sqrt( Math.max( scaleXSq, Math.max( scaleYSq, scaleZSq ) ) );\r\n\r\n\t},\r\n\r\n\tmakeTranslation: function ( x, y, z ) {\r\n\r\n\t\tthis.set(\r\n\r\n\t\t\t1, 0, 0, x,\r\n\t\t\t0, 1, 0, y,\r\n\t\t\t0, 0, 1, z,\r\n\t\t\t0, 0, 0, 1\r\n\r\n\t\t);\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmakeRotationX: function ( theta ) {\r\n\r\n\t\tvar c = Math.cos( theta ), s = Math.sin( theta );\r\n\r\n\t\tthis.set(\r\n\r\n\t\t\t1, 0,  0, 0,\r\n\t\t\t0, c, - s, 0,\r\n\t\t\t0, s,  c, 0,\r\n\t\t\t0, 0,  0, 1\r\n\r\n\t\t);\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmakeRotationY: function ( theta ) {\r\n\r\n\t\tvar c = Math.cos( theta ), s = Math.sin( theta );\r\n\r\n\t\tthis.set(\r\n\r\n\t\t\t c, 0, s, 0,\r\n\t\t\t 0, 1, 0, 0,\r\n\t\t\t- s, 0, c, 0,\r\n\t\t\t 0, 0, 0, 1\r\n\r\n\t\t);\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmakeRotationZ: function ( theta ) {\r\n\r\n\t\tvar c = Math.cos( theta ), s = Math.sin( theta );\r\n\r\n\t\tthis.set(\r\n\r\n\t\t\tc, - s, 0, 0,\r\n\t\t\ts,  c, 0, 0,\r\n\t\t\t0,  0, 1, 0,\r\n\t\t\t0,  0, 0, 1\r\n\r\n\t\t);\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmakeRotationAxis: function ( axis, angle ) {\r\n\r\n\t\t// Based on http://www.gamedev.net/reference/articles/article1199.asp\r\n\r\n\t\tvar c = Math.cos( angle );\r\n\t\tvar s = Math.sin( angle );\r\n\t\tvar t = 1 - c;\r\n\t\tvar x = axis.x, y = axis.y, z = axis.z;\r\n\t\tvar tx = t * x, ty = t * y;\r\n\r\n\t\tthis.set(\r\n\r\n\t\t\ttx * x + c, tx * y - s * z, tx * z + s * y, 0,\r\n\t\t\ttx * y + s * z, ty * y + c, ty * z - s * x, 0,\r\n\t\t\ttx * z - s * y, ty * z + s * x, t * z * z + c, 0,\r\n\t\t\t0, 0, 0, 1\r\n\r\n\t\t);\r\n\r\n\t\t return this;\r\n\r\n\t},\r\n\r\n\tmakeScale: function ( x, y, z ) {\r\n\r\n\t\tthis.set(\r\n\r\n\t\t\tx, 0, 0, 0,\r\n\t\t\t0, y, 0, 0,\r\n\t\t\t0, 0, z, 0,\r\n\t\t\t0, 0, 0, 1\r\n\r\n\t\t);\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcompose: function ( position, quaternion, scale ) {\r\n\r\n\t\tthis.makeRotationFromQuaternion( quaternion );\r\n\t\tthis.scale( scale );\r\n\t\tthis.setPosition( position );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tdecompose: function () {\r\n\r\n\t\tvar vector, matrix;\r\n\r\n\t\treturn function ( position, quaternion, scale ) {\r\n\r\n\t\t\tif ( vector === undefined ) vector = new THREE.Vector3();\r\n\t\t\tif ( matrix === undefined ) matrix = new THREE.Matrix4();\r\n\r\n\t\t\tvar te = this.elements;\r\n\r\n\t\t\tvar sx = vector.set( te[ 0 ], te[ 1 ], te[ 2 ] ).length();\r\n\t\t\tvar sy = vector.set( te[ 4 ], te[ 5 ], te[ 6 ] ).length();\r\n\t\t\tvar sz = vector.set( te[ 8 ], te[ 9 ], te[ 10 ] ).length();\r\n\r\n\t\t\t// if determine is negative, we need to invert one scale\r\n\t\t\tvar det = this.determinant();\r\n\t\t\tif ( det < 0 ) {\r\n\r\n\t\t\t\tsx = - sx;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tposition.x = te[ 12 ];\r\n\t\t\tposition.y = te[ 13 ];\r\n\t\t\tposition.z = te[ 14 ];\r\n\r\n\t\t\t// scale the rotation part\r\n\r\n\t\t\tmatrix.elements.set( this.elements ); // at this point matrix is incomplete so we can't use .copy()\r\n\r\n\t\t\tvar invSX = 1 / sx;\r\n\t\t\tvar invSY = 1 / sy;\r\n\t\t\tvar invSZ = 1 / sz;\r\n\r\n\t\t\tmatrix.elements[ 0 ] *= invSX;\r\n\t\t\tmatrix.elements[ 1 ] *= invSX;\r\n\t\t\tmatrix.elements[ 2 ] *= invSX;\r\n\r\n\t\t\tmatrix.elements[ 4 ] *= invSY;\r\n\t\t\tmatrix.elements[ 5 ] *= invSY;\r\n\t\t\tmatrix.elements[ 6 ] *= invSY;\r\n\r\n\t\t\tmatrix.elements[ 8 ] *= invSZ;\r\n\t\t\tmatrix.elements[ 9 ] *= invSZ;\r\n\t\t\tmatrix.elements[ 10 ] *= invSZ;\r\n\r\n\t\t\tquaternion.setFromRotationMatrix( matrix );\r\n\r\n\t\t\tscale.x = sx;\r\n\t\t\tscale.y = sy;\r\n\t\t\tscale.z = sz;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tmakeFrustum: function ( left, right, bottom, top, near, far ) {\r\n\r\n\t\tvar te = this.elements;\r\n\t\tvar x = 2 * near / ( right - left );\r\n\t\tvar y = 2 * near / ( top - bottom );\r\n\r\n\t\tvar a = ( right + left ) / ( right - left );\r\n\t\tvar b = ( top + bottom ) / ( top - bottom );\r\n\t\tvar c = - ( far + near ) / ( far - near );\r\n\t\tvar d = - 2 * far * near / ( far - near );\r\n\r\n\t\tte[ 0 ] = x;\tte[ 4 ] = 0;\tte[ 8 ] = a;\tte[ 12 ] = 0;\r\n\t\tte[ 1 ] = 0;\tte[ 5 ] = y;\tte[ 9 ] = b;\tte[ 13 ] = 0;\r\n\t\tte[ 2 ] = 0;\tte[ 6 ] = 0;\tte[ 10 ] = c;\tte[ 14 ] = d;\r\n\t\tte[ 3 ] = 0;\tte[ 7 ] = 0;\tte[ 11 ] = - 1;\tte[ 15 ] = 0;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmakePerspective: function ( fov, aspect, near, far ) {\r\n\r\n\t\tvar ymax = near * Math.tan( THREE.Math.degToRad( fov * 0.5 ) );\r\n\t\tvar ymin = - ymax;\r\n\t\tvar xmin = ymin * aspect;\r\n\t\tvar xmax = ymax * aspect;\r\n\r\n\t\treturn this.makeFrustum( xmin, xmax, ymin, ymax, near, far );\r\n\r\n\t},\r\n\r\n\tmakeOrthographic: function ( left, right, top, bottom, near, far ) {\r\n\r\n\t\tvar te = this.elements;\r\n\t\tvar w = right - left;\r\n\t\tvar h = top - bottom;\r\n\t\tvar p = far - near;\r\n\r\n\t\tvar x = ( right + left ) / w;\r\n\t\tvar y = ( top + bottom ) / h;\r\n\t\tvar z = ( far + near ) / p;\r\n\r\n\t\tte[ 0 ] = 2 / w;\tte[ 4 ] = 0;\tte[ 8 ] = 0;\tte[ 12 ] = - x;\r\n\t\tte[ 1 ] = 0;\tte[ 5 ] = 2 / h;\tte[ 9 ] = 0;\tte[ 13 ] = - y;\r\n\t\tte[ 2 ] = 0;\tte[ 6 ] = 0;\tte[ 10 ] = - 2 / p;\tte[ 14 ] = - z;\r\n\t\tte[ 3 ] = 0;\tte[ 7 ] = 0;\tte[ 11 ] = 0;\tte[ 15 ] = 1;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tequals: function ( matrix ) {\r\n\r\n\t\tvar te = this.elements;\r\n\t\tvar me = matrix.elements;\r\n\r\n\t\tfor ( var i = 0; i < 16; i ++ ) {\r\n\r\n\t\t\tif ( te[ i ] !== me[ i ] ) return false;\r\n\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\r\n\t},\r\n\r\n\tfromArray: function ( array ) {\r\n\r\n\t\tthis.elements.set( array );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\ttoArray: function () {\r\n\r\n\t\tvar te = this.elements;\r\n\r\n\t\treturn [\r\n\t\t\tte[ 0 ], te[ 1 ], te[ 2 ], te[ 3 ],\r\n\t\t\tte[ 4 ], te[ 5 ], te[ 6 ], te[ 7 ],\r\n\t\t\tte[ 8 ], te[ 9 ], te[ 10 ], te[ 11 ],\r\n\t\t\tte[ 12 ], te[ 13 ], te[ 14 ], te[ 15 ]\r\n\t\t];\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/math/Ray.js\r\n\r\n/**\r\n * @author bhouston / http://exocortex.com\r\n */\r\n\r\nTHREE.Ray = function ( origin, direction ) {\r\n\r\n\tthis.origin = ( origin !== undefined ) ? origin : new THREE.Vector3();\r\n\tthis.direction = ( direction !== undefined ) ? direction : new THREE.Vector3();\r\n\r\n};\r\n\r\nTHREE.Ray.prototype = {\r\n\r\n\tconstructor: THREE.Ray,\r\n\r\n\tset: function ( origin, direction ) {\r\n\r\n\t\tthis.origin.copy( origin );\r\n\t\tthis.direction.copy( direction );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t},\r\n\r\n\tcopy: function ( ray ) {\r\n\r\n\t\tthis.origin.copy( ray.origin );\r\n\t\tthis.direction.copy( ray.direction );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tat: function ( t, optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\r\n\t\treturn result.copy( this.direction ).multiplyScalar( t ).add( this.origin );\r\n\r\n\t},\r\n\r\n\trecast: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector3();\r\n\r\n\t\treturn function ( t ) {\r\n\r\n\t\t\tthis.origin.copy( this.at( t, v1 ) );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tclosestPointToPoint: function ( point, optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\tresult.subVectors( point, this.origin );\r\n\t\tvar directionDistance = result.dot( this.direction );\r\n\r\n\t\tif ( directionDistance < 0 ) {\r\n\r\n\t\t\treturn result.copy( this.origin );\r\n\r\n\t\t}\r\n\r\n\t\treturn result.copy( this.direction ).multiplyScalar( directionDistance ).add( this.origin );\r\n\r\n\t},\r\n\r\n\tdistanceToPoint: function ( point ) {\r\n\r\n\t\treturn Math.sqrt( this.distanceSqToPoint( point ) );\r\n\r\n\t},\r\n\r\n\tdistanceSqToPoint: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector3();\r\n\r\n\t\treturn function ( point ) {\r\n\r\n\t\t\tvar directionDistance = v1.subVectors( point, this.origin ).dot( this.direction );\r\n\r\n\t\t\t// point behind the ray\r\n\r\n\t\t\tif ( directionDistance < 0 ) {\r\n\r\n\t\t\t\treturn this.origin.distanceToSquared( point );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tv1.copy( this.direction ).multiplyScalar( directionDistance ).add( this.origin );\r\n\r\n\t\t\treturn v1.distanceToSquared( point );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tdistanceSqToSegment: function () {\r\n\r\n\t\tvar segCenter = new THREE.Vector3();\r\n\t\tvar segDir = new THREE.Vector3();\r\n\t\tvar diff = new THREE.Vector3();\r\n\r\n\t\treturn function ( v0, v1, optionalPointOnRay, optionalPointOnSegment ) {\r\n\r\n\t\t\t// from http://www.geometrictools.com/LibMathematics/Distance/Wm5DistRay3Segment3.cpp\r\n\t\t\t// It returns the min distance between the ray and the segment\r\n\t\t\t// defined by v0 and v1\r\n\t\t\t// It can also set two optional targets :\r\n\t\t\t// - The closest point on the ray\r\n\t\t\t// - The closest point on the segment\r\n\r\n\t\t\tsegCenter.copy( v0 ).add( v1 ).multiplyScalar( 0.5 );\r\n\t\t\tsegDir.copy( v1 ).sub( v0 ).normalize();\r\n\t\t\tdiff.copy( this.origin ).sub( segCenter );\r\n\r\n\t\t\tvar segExtent = v0.distanceTo( v1 ) * 0.5;\r\n\t\t\tvar a01 = - this.direction.dot( segDir );\r\n\t\t\tvar b0 = diff.dot( this.direction );\r\n\t\t\tvar b1 = - diff.dot( segDir );\r\n\t\t\tvar c = diff.lengthSq();\r\n\t\t\tvar det = Math.abs( 1 - a01 * a01 );\r\n\t\t\tvar s0, s1, sqrDist, extDet;\r\n\r\n\t\t\tif ( det > 0 ) {\r\n\r\n\t\t\t\t// The ray and segment are not parallel.\r\n\r\n\t\t\t\ts0 = a01 * b1 - b0;\r\n\t\t\t\ts1 = a01 * b0 - b1;\r\n\t\t\t\textDet = segExtent * det;\r\n\r\n\t\t\t\tif ( s0 >= 0 ) {\r\n\r\n\t\t\t\t\tif ( s1 >= - extDet ) {\r\n\r\n\t\t\t\t\t\tif ( s1 <= extDet ) {\r\n\r\n\t\t\t\t\t\t\t// region 0\r\n\t\t\t\t\t\t\t// Minimum at interior points of ray and segment.\r\n\r\n\t\t\t\t\t\t\tvar invDet = 1 / det;\r\n\t\t\t\t\t\t\ts0 *= invDet;\r\n\t\t\t\t\t\t\ts1 *= invDet;\r\n\t\t\t\t\t\t\tsqrDist = s0 * ( s0 + a01 * s1 + 2 * b0 ) + s1 * ( a01 * s0 + s1 + 2 * b1 ) + c;\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\t// region 1\r\n\r\n\t\t\t\t\t\t\ts1 = segExtent;\r\n\t\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\r\n\t\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t// region 5\r\n\r\n\t\t\t\t\t\ts1 = - segExtent;\r\n\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\r\n\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tif ( s1 <= - extDet ) {\r\n\r\n\t\t\t\t\t\t// region 4\r\n\r\n\t\t\t\t\t\ts0 = Math.max( 0, - ( - a01 * segExtent + b0 ) );\r\n\t\t\t\t\t\ts1 = ( s0 > 0 ) ? - segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\r\n\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\r\n\r\n\t\t\t\t\t} else if ( s1 <= extDet ) {\r\n\r\n\t\t\t\t\t\t// region 3\r\n\r\n\t\t\t\t\t\ts0 = 0;\r\n\t\t\t\t\t\ts1 = Math.min( Math.max( - segExtent, - b1 ), segExtent );\r\n\t\t\t\t\t\tsqrDist = s1 * ( s1 + 2 * b1 ) + c;\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t// region 2\r\n\r\n\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * segExtent + b0 ) );\r\n\t\t\t\t\t\ts1 = ( s0 > 0 ) ? segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\r\n\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// Ray and segment are parallel.\r\n\r\n\t\t\t\ts1 = ( a01 > 0 ) ? - segExtent : segExtent;\r\n\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\r\n\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( optionalPointOnRay ) {\r\n\r\n\t\t\t\toptionalPointOnRay.copy( this.direction ).multiplyScalar( s0 ).add( this.origin );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( optionalPointOnSegment ) {\r\n\r\n\t\t\t\toptionalPointOnSegment.copy( segDir ).multiplyScalar( s1 ).add( segCenter );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn sqrDist;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\r\n\tisIntersectionSphere: function ( sphere ) {\r\n\r\n\t\treturn this.distanceToPoint( sphere.center ) <= sphere.radius;\r\n\r\n\t},\r\n\r\n\tintersectSphere: function () {\r\n\r\n\t\t// from http://www.scratchapixel.com/lessons/3d-basic-lessons/lesson-7-intersecting-simple-shapes/ray-sphere-intersection/\r\n\r\n\t\tvar v1 = new THREE.Vector3();\r\n\r\n\t\treturn function ( sphere, optionalTarget ) {\r\n\r\n\t\t\tv1.subVectors( sphere.center, this.origin );\r\n\r\n\t\t\tvar tca = v1.dot( this.direction );\r\n\r\n\t\t\tvar d2 = v1.dot( v1 ) - tca * tca;\r\n\r\n\t\t\tvar radius2 = sphere.radius * sphere.radius;\r\n\r\n\t\t\tif ( d2 > radius2 ) return null;\r\n\r\n\t\t\tvar thc = Math.sqrt( radius2 - d2 );\r\n\r\n\t\t\t// t0 = first intersect point - entrance on front of sphere\r\n\t\t\tvar t0 = tca - thc;\r\n\r\n\t\t\t// t1 = second intersect point - exit point on back of sphere\r\n\t\t\tvar t1 = tca + thc;\r\n\r\n\t\t\t// test to see if both t0 and t1 are behind the ray - if so, return null\r\n\t\t\tif ( t0 < 0 && t1 < 0 ) return null;\r\n\r\n\t\t\t// test to see if t0 is behind the ray:\r\n\t\t\t// if it is, the ray is inside the sphere, so return the second exit point scaled by t1,\r\n\t\t\t// in order to always return an intersect point that is in front of the ray.\r\n\t\t\tif ( t0 < 0 ) return this.at( t1, optionalTarget );\r\n\r\n\t\t\t// else t0 is in front of the ray, so return the first collision point scaled by t0\r\n\t\t\treturn this.at( t0, optionalTarget );\r\n\r\n\t\t}\r\n\r\n\t}(),\r\n\r\n\tisIntersectionPlane: function ( plane ) {\r\n\r\n\t\t// check if the ray lies on the plane first\r\n\r\n\t\tvar distToPoint = plane.distanceToPoint( this.origin );\r\n\r\n\t\tif ( distToPoint === 0 ) {\r\n\r\n\t\t\treturn true;\r\n\r\n\t\t}\r\n\r\n\t\tvar denominator = plane.normal.dot( this.direction );\r\n\r\n\t\tif ( denominator * distToPoint < 0 ) {\r\n\r\n\t\t\treturn true;\r\n\r\n\t\t}\r\n\r\n\t\t// ray origin is behind the plane (and is pointing behind it)\r\n\r\n\t\treturn false;\r\n\r\n\t},\r\n\r\n\tdistanceToPlane: function ( plane ) {\r\n\r\n\t\tvar denominator = plane.normal.dot( this.direction );\r\n\t\tif ( denominator === 0 ) {\r\n\r\n\t\t\t// line is coplanar, return origin\r\n\t\t\tif ( plane.distanceToPoint( this.origin ) === 0 ) {\r\n\r\n\t\t\t\treturn 0;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// Null is preferable to undefined since undefined means.... it is undefined\r\n\r\n\t\t\treturn null;\r\n\r\n\t\t}\r\n\r\n\t\tvar t = - ( this.origin.dot( plane.normal ) + plane.constant ) / denominator;\r\n\r\n\t\t// Return if the ray never intersects the plane\r\n\r\n\t\treturn t >= 0 ? t :  null;\r\n\r\n\t},\r\n\r\n\tintersectPlane: function ( plane, optionalTarget ) {\r\n\r\n\t\tvar t = this.distanceToPlane( plane );\r\n\r\n\t\tif ( t === null ) {\r\n\r\n\t\t\treturn null;\r\n\r\n\t\t}\r\n\r\n\t\treturn this.at( t, optionalTarget );\r\n\r\n\t},\r\n\r\n\tisIntersectionBox: function () {\r\n\r\n\t\tvar v = new THREE.Vector3();\r\n\r\n\t\treturn function ( box ) {\r\n\r\n\t\t\treturn this.intersectBox( box, v ) !== null;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tintersectBox: function ( box, optionalTarget ) {\r\n\r\n\t\t// http://www.scratchapixel.com/lessons/3d-basic-lessons/lesson-7-intersecting-simple-shapes/ray-box-intersection/\r\n\r\n\t\tvar tmin, tmax, tymin, tymax, tzmin, tzmax;\r\n\r\n\t\tvar invdirx = 1 / this.direction.x,\r\n\t\t\tinvdiry = 1 / this.direction.y,\r\n\t\t\tinvdirz = 1 / this.direction.z;\r\n\r\n\t\tvar origin = this.origin;\r\n\r\n\t\tif ( invdirx >= 0 ) {\r\n\r\n\t\t\ttmin = ( box.min.x - origin.x ) * invdirx;\r\n\t\t\ttmax = ( box.max.x - origin.x ) * invdirx;\r\n\r\n\t\t} else {\r\n\r\n\t\t\ttmin = ( box.max.x - origin.x ) * invdirx;\r\n\t\t\ttmax = ( box.min.x - origin.x ) * invdirx;\r\n\r\n\t\t}\r\n\r\n\t\tif ( invdiry >= 0 ) {\r\n\r\n\t\t\ttymin = ( box.min.y - origin.y ) * invdiry;\r\n\t\t\ttymax = ( box.max.y - origin.y ) * invdiry;\r\n\r\n\t\t} else {\r\n\r\n\t\t\ttymin = ( box.max.y - origin.y ) * invdiry;\r\n\t\t\ttymax = ( box.min.y - origin.y ) * invdiry;\r\n\r\n\t\t}\r\n\r\n\t\tif ( ( tmin > tymax ) || ( tymin > tmax ) ) return null;\r\n\r\n\t\t// These lines also handle the case where tmin or tmax is NaN\r\n\t\t// (result of 0 * Infinity). x !== x returns true if x is NaN\r\n\r\n\t\tif ( tymin > tmin || tmin !== tmin ) tmin = tymin;\r\n\r\n\t\tif ( tymax < tmax || tmax !== tmax ) tmax = tymax;\r\n\r\n\t\tif ( invdirz >= 0 ) {\r\n\r\n\t\t\ttzmin = ( box.min.z - origin.z ) * invdirz;\r\n\t\t\ttzmax = ( box.max.z - origin.z ) * invdirz;\r\n\r\n\t\t} else {\r\n\r\n\t\t\ttzmin = ( box.max.z - origin.z ) * invdirz;\r\n\t\t\ttzmax = ( box.min.z - origin.z ) * invdirz;\r\n\r\n\t\t}\r\n\r\n\t\tif ( ( tmin > tzmax ) || ( tzmin > tmax ) ) return null;\r\n\r\n\t\tif ( tzmin > tmin || tmin !== tmin ) tmin = tzmin;\r\n\r\n\t\tif ( tzmax < tmax || tmax !== tmax ) tmax = tzmax;\r\n\r\n\t\t//return point closest to the ray (positive side)\r\n\r\n\t\tif ( tmax < 0 ) return null;\r\n\r\n\t\treturn this.at( tmin >= 0 ? tmin : tmax, optionalTarget );\r\n\r\n\t},\r\n\r\n\tintersectTriangle: function () {\r\n\r\n\t\t// Compute the offset origin, edges, and normal.\r\n\t\tvar diff = new THREE.Vector3();\r\n\t\tvar edge1 = new THREE.Vector3();\r\n\t\tvar edge2 = new THREE.Vector3();\r\n\t\tvar normal = new THREE.Vector3();\r\n\r\n\t\treturn function ( a, b, c, backfaceCulling, optionalTarget ) {\r\n\r\n\t\t\t// from http://www.geometrictools.com/LibMathematics/Intersection/Wm5IntrRay3Triangle3.cpp\r\n\r\n\t\t\tedge1.subVectors( b, a );\r\n\t\t\tedge2.subVectors( c, a );\r\n\t\t\tnormal.crossVectors( edge1, edge2 );\r\n\r\n\t\t\t// Solve Q + t*D = b1*E1 + b2*E2 (Q = kDiff, D = ray direction,\r\n\t\t\t// E1 = kEdge1, E2 = kEdge2, N = Cross(E1,E2)) by\r\n\t\t\t//   |Dot(D,N)|*b1 = sign(Dot(D,N))*Dot(D,Cross(Q,E2))\r\n\t\t\t//   |Dot(D,N)|*b2 = sign(Dot(D,N))*Dot(D,Cross(E1,Q))\r\n\t\t\t//   |Dot(D,N)|*t = -sign(Dot(D,N))*Dot(Q,N)\r\n\t\t\tvar DdN = this.direction.dot( normal );\r\n\t\t\tvar sign;\r\n\r\n\t\t\tif ( DdN > 0 ) {\r\n\r\n\t\t\t\tif ( backfaceCulling ) return null;\r\n\t\t\t\tsign = 1;\r\n\r\n\t\t\t} else if ( DdN < 0 ) {\r\n\r\n\t\t\t\tsign = - 1;\r\n\t\t\t\tDdN = - DdN;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\treturn null;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tdiff.subVectors( this.origin, a );\r\n\t\t\tvar DdQxE2 = sign * this.direction.dot( edge2.crossVectors( diff, edge2 ) );\r\n\r\n\t\t\t// b1 < 0, no intersection\r\n\t\t\tif ( DdQxE2 < 0 ) {\r\n\r\n\t\t\t\treturn null;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar DdE1xQ = sign * this.direction.dot( edge1.cross( diff ) );\r\n\r\n\t\t\t// b2 < 0, no intersection\r\n\t\t\tif ( DdE1xQ < 0 ) {\r\n\r\n\t\t\t\treturn null;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// b1+b2 > 1, no intersection\r\n\t\t\tif ( DdQxE2 + DdE1xQ > DdN ) {\r\n\r\n\t\t\t\treturn null;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// Line intersects triangle, check if ray does.\r\n\t\t\tvar QdN = - sign * diff.dot( normal );\r\n\r\n\t\t\t// t < 0, no intersection\r\n\t\t\tif ( QdN < 0 ) {\r\n\r\n\t\t\t\treturn null;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// Ray intersects triangle.\r\n\t\t\treturn this.at( QdN / DdN, optionalTarget );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tapplyMatrix4: function ( matrix4 ) {\r\n\r\n\t\tthis.direction.add( this.origin ).applyMatrix4( matrix4 );\r\n\t\tthis.origin.applyMatrix4( matrix4 );\r\n\t\tthis.direction.sub( this.origin );\r\n\t\tthis.direction.normalize();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tequals: function ( ray ) {\r\n\r\n\t\treturn ray.origin.equals( this.origin ) && ray.direction.equals( this.direction );\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/math/Sphere.js\r\n\r\n/**\r\n * @author bhouston / http://exocortex.com\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.Sphere = function ( center, radius ) {\r\n\r\n\tthis.center = ( center !== undefined ) ? center : new THREE.Vector3();\r\n\tthis.radius = ( radius !== undefined ) ? radius : 0;\r\n\r\n};\r\n\r\nTHREE.Sphere.prototype = {\r\n\r\n\tconstructor: THREE.Sphere,\r\n\r\n\tset: function ( center, radius ) {\r\n\r\n\t\tthis.center.copy( center );\r\n\t\tthis.radius = radius;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromPoints: function () {\r\n\r\n\t\tvar box = new THREE.Box3();\r\n\r\n\t\treturn function ( points, optionalCenter ) {\r\n\r\n\t\t\tvar center = this.center;\r\n\r\n\t\t\tif ( optionalCenter !== undefined ) {\r\n\r\n\t\t\t\tcenter.copy( optionalCenter );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tbox.setFromPoints( points ).center( center );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar maxRadiusSq = 0;\r\n\r\n\t\t\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( points[ i ] ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.radius = Math.sqrt( maxRadiusSq );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t},\r\n\r\n\tcopy: function ( sphere ) {\r\n\r\n\t\tthis.center.copy( sphere.center );\r\n\t\tthis.radius = sphere.radius;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tempty: function () {\r\n\r\n\t\treturn ( this.radius <= 0 );\r\n\r\n\t},\r\n\r\n\tcontainsPoint: function ( point ) {\r\n\r\n\t\treturn ( point.distanceToSquared( this.center ) <= ( this.radius * this.radius ) );\r\n\r\n\t},\r\n\r\n\tdistanceToPoint: function ( point ) {\r\n\r\n\t\treturn ( point.distanceTo( this.center ) - this.radius );\r\n\r\n\t},\r\n\r\n\tintersectsSphere: function ( sphere ) {\r\n\r\n\t\tvar radiusSum = this.radius + sphere.radius;\r\n\r\n\t\treturn sphere.center.distanceToSquared( this.center ) <= ( radiusSum * radiusSum );\r\n\r\n\t},\r\n\r\n\tclampPoint: function ( point, optionalTarget ) {\r\n\r\n\t\tvar deltaLengthSq = this.center.distanceToSquared( point );\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\tresult.copy( point );\r\n\r\n\t\tif ( deltaLengthSq > ( this.radius * this.radius ) ) {\r\n\r\n\t\t\tresult.sub( this.center ).normalize();\r\n\t\t\tresult.multiplyScalar( this.radius ).add( this.center );\r\n\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\r\n\t},\r\n\r\n\tgetBoundingBox: function ( optionalTarget ) {\r\n\r\n\t\tvar box = optionalTarget || new THREE.Box3();\r\n\r\n\t\tbox.set( this.center, this.center );\r\n\t\tbox.expandByScalar( this.radius );\r\n\r\n\t\treturn box;\r\n\r\n\t},\r\n\r\n\tapplyMatrix4: function ( matrix ) {\r\n\r\n\t\tthis.center.applyMatrix4( matrix );\r\n\t\tthis.radius = this.radius * matrix.getMaxScaleOnAxis();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\ttranslate: function ( offset ) {\r\n\r\n\t\tthis.center.add( offset );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tequals: function ( sphere ) {\r\n\r\n\t\treturn sphere.center.equals( this.center ) && ( sphere.radius === this.radius );\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/math/Frustum.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author bhouston / http://exocortex.com\r\n */\r\n\r\nTHREE.Frustum = function ( p0, p1, p2, p3, p4, p5 ) {\r\n\r\n\tthis.planes = [\r\n\r\n\t\t( p0 !== undefined ) ? p0 : new THREE.Plane(),\r\n\t\t( p1 !== undefined ) ? p1 : new THREE.Plane(),\r\n\t\t( p2 !== undefined ) ? p2 : new THREE.Plane(),\r\n\t\t( p3 !== undefined ) ? p3 : new THREE.Plane(),\r\n\t\t( p4 !== undefined ) ? p4 : new THREE.Plane(),\r\n\t\t( p5 !== undefined ) ? p5 : new THREE.Plane()\r\n\r\n\t];\r\n\r\n};\r\n\r\nTHREE.Frustum.prototype = {\r\n\r\n\tconstructor: THREE.Frustum,\r\n\r\n\tset: function ( p0, p1, p2, p3, p4, p5 ) {\r\n\r\n\t\tvar planes = this.planes;\r\n\r\n\t\tplanes[ 0 ].copy( p0 );\r\n\t\tplanes[ 1 ].copy( p1 );\r\n\t\tplanes[ 2 ].copy( p2 );\r\n\t\tplanes[ 3 ].copy( p3 );\r\n\t\tplanes[ 4 ].copy( p4 );\r\n\t\tplanes[ 5 ].copy( p5 );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t},\r\n\r\n\tcopy: function ( frustum ) {\r\n\r\n\t\tvar planes = this.planes;\r\n\r\n\t\tfor ( var i = 0; i < 6; i ++ ) {\r\n\r\n\t\t\tplanes[ i ].copy( frustum.planes[ i ] );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromMatrix: function ( m ) {\r\n\r\n\t\tvar planes = this.planes;\r\n\t\tvar me = m.elements;\r\n\t\tvar me0 = me[ 0 ], me1 = me[ 1 ], me2 = me[ 2 ], me3 = me[ 3 ];\r\n\t\tvar me4 = me[ 4 ], me5 = me[ 5 ], me6 = me[ 6 ], me7 = me[ 7 ];\r\n\t\tvar me8 = me[ 8 ], me9 = me[ 9 ], me10 = me[ 10 ], me11 = me[ 11 ];\r\n\t\tvar me12 = me[ 12 ], me13 = me[ 13 ], me14 = me[ 14 ], me15 = me[ 15 ];\r\n\r\n\t\tplanes[ 0 ].setComponents( me3 - me0, me7 - me4, me11 - me8, me15 - me12 ).normalize();\r\n\t\tplanes[ 1 ].setComponents( me3 + me0, me7 + me4, me11 + me8, me15 + me12 ).normalize();\r\n\t\tplanes[ 2 ].setComponents( me3 + me1, me7 + me5, me11 + me9, me15 + me13 ).normalize();\r\n\t\tplanes[ 3 ].setComponents( me3 - me1, me7 - me5, me11 - me9, me15 - me13 ).normalize();\r\n\t\tplanes[ 4 ].setComponents( me3 - me2, me7 - me6, me11 - me10, me15 - me14 ).normalize();\r\n\t\tplanes[ 5 ].setComponents( me3 + me2, me7 + me6, me11 + me10, me15 + me14 ).normalize();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tintersectsObject: function () {\r\n\r\n\t\tvar sphere = new THREE.Sphere();\r\n\r\n\t\treturn function ( object ) {\r\n\r\n\t\t\tvar geometry = object.geometry;\r\n\r\n\t\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\r\n\r\n\t\t\tsphere.copy( geometry.boundingSphere );\r\n\t\t\tsphere.applyMatrix4( object.matrixWorld );\r\n\r\n\t\t\treturn this.intersectsSphere( sphere );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tintersectsSphere: function ( sphere ) {\r\n\r\n\t\tvar planes = this.planes;\r\n\t\tvar center = sphere.center;\r\n\t\tvar negRadius = - sphere.radius;\r\n\r\n\t\tfor ( var i = 0; i < 6; i ++ ) {\r\n\r\n\t\t\tvar distance = planes[ i ].distanceToPoint( center );\r\n\r\n\t\t\tif ( distance < negRadius ) {\r\n\r\n\t\t\t\treturn false;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\r\n\t},\r\n\r\n\tintersectsBox: function () {\r\n\r\n\t\tvar p1 = new THREE.Vector3(),\r\n\t\t\tp2 = new THREE.Vector3();\r\n\r\n\t\treturn function ( box ) {\r\n\r\n\t\t\tvar planes = this.planes;\r\n\r\n\t\t\tfor ( var i = 0; i < 6 ; i ++ ) {\r\n\r\n\t\t\t\tvar plane = planes[ i ];\r\n\r\n\t\t\t\tp1.x = plane.normal.x > 0 ? box.min.x : box.max.x;\r\n\t\t\t\tp2.x = plane.normal.x > 0 ? box.max.x : box.min.x;\r\n\t\t\t\tp1.y = plane.normal.y > 0 ? box.min.y : box.max.y;\r\n\t\t\t\tp2.y = plane.normal.y > 0 ? box.max.y : box.min.y;\r\n\t\t\t\tp1.z = plane.normal.z > 0 ? box.min.z : box.max.z;\r\n\t\t\t\tp2.z = plane.normal.z > 0 ? box.max.z : box.min.z;\r\n\r\n\t\t\t\tvar d1 = plane.distanceToPoint( p1 );\r\n\t\t\t\tvar d2 = plane.distanceToPoint( p2 );\r\n\r\n\t\t\t\t// if both outside plane, no intersection\r\n\r\n\t\t\t\tif ( d1 < 0 && d2 < 0 ) {\r\n\r\n\t\t\t\t\treturn false;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn true;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\r\n\tcontainsPoint: function ( point ) {\r\n\r\n\t\tvar planes = this.planes;\r\n\r\n\t\tfor ( var i = 0; i < 6; i ++ ) {\r\n\r\n\t\t\tif ( planes[ i ].distanceToPoint( point ) < 0 ) {\r\n\r\n\t\t\t\treturn false;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/math/Plane.js\r\n\r\n/**\r\n * @author bhouston / http://exocortex.com\r\n */\r\n\r\nTHREE.Plane = function ( normal, constant ) {\r\n\r\n\tthis.normal = ( normal !== undefined ) ? normal : new THREE.Vector3( 1, 0, 0 );\r\n\tthis.constant = ( constant !== undefined ) ? constant : 0;\r\n\r\n};\r\n\r\nTHREE.Plane.prototype = {\r\n\r\n\tconstructor: THREE.Plane,\r\n\r\n\tset: function ( normal, constant ) {\r\n\r\n\t\tthis.normal.copy( normal );\r\n\t\tthis.constant = constant;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetComponents: function ( x, y, z, w ) {\r\n\r\n\t\tthis.normal.set( x, y, z );\r\n\t\tthis.constant = w;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromNormalAndCoplanarPoint: function ( normal, point ) {\r\n\r\n\t\tthis.normal.copy( normal );\r\n\t\tthis.constant = - point.dot( this.normal );\t// must be this.normal, not normal, as this.normal is normalized\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromCoplanarPoints: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector3();\r\n\t\tvar v2 = new THREE.Vector3();\r\n\r\n\t\treturn function ( a, b, c ) {\r\n\r\n\t\t\tvar normal = v1.subVectors( c, b ).cross( v2.subVectors( a, b ) ).normalize();\r\n\r\n\t\t\t// Q: should an error be thrown if normal is zero (e.g. degenerate plane)?\r\n\r\n\t\t\tthis.setFromNormalAndCoplanarPoint( normal, a );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t},\r\n\r\n\tcopy: function ( plane ) {\r\n\r\n\t\tthis.normal.copy( plane.normal );\r\n\t\tthis.constant = plane.constant;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tnormalize: function () {\r\n\r\n\t\t// Note: will lead to a divide by zero if the plane is invalid.\r\n\r\n\t\tvar inverseNormalLength = 1.0 / this.normal.length();\r\n\t\tthis.normal.multiplyScalar( inverseNormalLength );\r\n\t\tthis.constant *= inverseNormalLength;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tnegate: function () {\r\n\r\n\t\tthis.constant *= - 1;\r\n\t\tthis.normal.negate();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tdistanceToPoint: function ( point ) {\r\n\r\n\t\treturn this.normal.dot( point ) + this.constant;\r\n\r\n\t},\r\n\r\n\tdistanceToSphere: function ( sphere ) {\r\n\r\n\t\treturn this.distanceToPoint( sphere.center ) - sphere.radius;\r\n\r\n\t},\r\n\r\n\tprojectPoint: function ( point, optionalTarget ) {\r\n\r\n\t\treturn this.orthoPoint( point, optionalTarget ).sub( point ).negate();\r\n\r\n\t},\r\n\r\n\torthoPoint: function ( point, optionalTarget ) {\r\n\r\n\t\tvar perpendicularMagnitude = this.distanceToPoint( point );\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\treturn result.copy( this.normal ).multiplyScalar( perpendicularMagnitude );\r\n\r\n\t},\r\n\r\n\tisIntersectionLine: function ( line ) {\r\n\r\n\t\t// Note: this tests if a line intersects the plane, not whether it (or its end-points) are coplanar with it.\r\n\r\n\t\tvar startSign = this.distanceToPoint( line.start );\r\n\t\tvar endSign = this.distanceToPoint( line.end );\r\n\r\n\t\treturn ( startSign < 0 && endSign > 0 ) || ( endSign < 0 && startSign > 0 );\r\n\r\n\t},\r\n\r\n\tintersectLine: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector3();\r\n\r\n\t\treturn function ( line, optionalTarget ) {\r\n\r\n\t\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\r\n\t\t\tvar direction = line.delta( v1 );\r\n\r\n\t\t\tvar denominator = this.normal.dot( direction );\r\n\r\n\t\t\tif ( denominator === 0 ) {\r\n\r\n\t\t\t\t// line is coplanar, return origin\r\n\t\t\t\tif ( this.distanceToPoint( line.start ) === 0 ) {\r\n\r\n\t\t\t\t\treturn result.copy( line.start );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Unsure if this is the correct method to handle this case.\r\n\t\t\t\treturn undefined;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar t = - ( line.start.dot( this.normal ) + this.constant ) / denominator;\r\n\r\n\t\t\tif ( t < 0 || t > 1 ) {\r\n\r\n\t\t\t\treturn undefined;\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn result.copy( direction ).multiplyScalar( t ).add( line.start );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\r\n\tcoplanarPoint: function ( optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\treturn result.copy( this.normal ).multiplyScalar( - this.constant );\r\n\r\n\t},\r\n\r\n\tapplyMatrix4: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector3();\r\n\t\tvar v2 = new THREE.Vector3();\r\n\t\tvar m1 = new THREE.Matrix3();\r\n\r\n\t\treturn function ( matrix, optionalNormalMatrix ) {\r\n\r\n\t\t\t// compute new normal based on theory here:\r\n\t\t\t// http://www.songho.ca/opengl/gl_normaltransform.html\r\n\t\t\tvar normalMatrix = optionalNormalMatrix || m1.getNormalMatrix( matrix );\r\n\t\t\tvar newNormal = v1.copy( this.normal ).applyMatrix3( normalMatrix );\r\n\r\n\t\t\tvar newCoplanarPoint = this.coplanarPoint( v2 );\r\n\t\t\tnewCoplanarPoint.applyMatrix4( matrix );\r\n\r\n\t\t\tthis.setFromNormalAndCoplanarPoint( newNormal, newCoplanarPoint );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\ttranslate: function ( offset ) {\r\n\r\n\t\tthis.constant = this.constant - offset.dot( this.normal );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tequals: function ( plane ) {\r\n\r\n\t\treturn plane.normal.equals( this.normal ) && ( plane.constant === this.constant );\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/math/Math.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.Math = {\r\n\r\n\tgenerateUUID: function () {\r\n\r\n\t\t// http://www.broofa.com/Tools/Math.uuid.htm\r\n\r\n\t\tvar chars = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz'.split( '' );\r\n\t\tvar uuid = new Array( 36 );\r\n\t\tvar rnd = 0, r;\r\n\r\n\t\treturn function () {\r\n\r\n\t\t\tfor ( var i = 0; i < 36; i ++ ) {\r\n\r\n\t\t\t\tif ( i === 8 || i === 13 || i === 18 || i === 23 ) {\r\n\r\n\t\t\t\t\tuuid[ i ] = '-';\r\n\r\n\t\t\t\t} else if ( i === 14 ) {\r\n\r\n\t\t\t\t\tuuid[ i ] = '4';\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tif ( rnd <= 0x02 ) rnd = 0x2000000 + ( Math.random() * 0x1000000 ) | 0;\r\n\t\t\t\t\tr = rnd & 0xf;\r\n\t\t\t\t\trnd = rnd >> 4;\r\n\t\t\t\t\tuuid[ i ] = chars[ ( i === 19 ) ? ( r & 0x3 ) | 0x8 : r ];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn uuid.join( '' );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\t// Clamp value to range <a, b>\r\n\r\n\tclamp: function ( x, a, b ) {\r\n\r\n\t\treturn ( x < a ) ? a : ( ( x > b ) ? b : x );\r\n\r\n\t},\r\n\r\n\t// Clamp value to range <a, inf)\r\n\r\n\tclampBottom: function ( x, a ) {\r\n\r\n\t\treturn x < a ? a : x;\r\n\r\n\t},\r\n\r\n\t// compute euclidian modulo of m % n\r\n\t// https://en.wikipedia.org/wiki/Modulo_operation\r\n\r\n\teuclideanModulo: function ( n, m ) {\r\n\r\n\t\treturn ( ( n % m ) + m ) % m;\r\n\r\n\t},\r\n\r\n\t// Linear mapping from range <a1, a2> to range <b1, b2>\r\n\r\n\tmapLinear: function ( x, a1, a2, b1, b2 ) {\r\n\r\n\t\treturn b1 + ( x - a1 ) * ( b2 - b1 ) / ( a2 - a1 );\r\n\r\n\t},\r\n\r\n\t// http://en.wikipedia.org/wiki/Smoothstep\r\n\r\n\tsmoothstep: function ( x, min, max ) {\r\n\r\n\t\tif ( x <= min ) return 0;\r\n\t\tif ( x >= max ) return 1;\r\n\r\n\t\tx = ( x - min ) / ( max - min );\r\n\r\n\t\treturn x * x * ( 3 - 2 * x );\r\n\r\n\t},\r\n\r\n\tsmootherstep: function ( x, min, max ) {\r\n\r\n\t\tif ( x <= min ) return 0;\r\n\t\tif ( x >= max ) return 1;\r\n\r\n\t\tx = ( x - min ) / ( max - min );\r\n\r\n\t\treturn x * x * x * ( x * ( x * 6 - 15 ) + 10 );\r\n\r\n\t},\r\n\r\n\t// Random float from <0, 1> with 16 bits of randomness\r\n\t// (standard Math.random() creates repetitive patterns when applied over larger space)\r\n\r\n\trandom16: function () {\r\n\r\n\t\treturn ( 65280 * Math.random() + 255 * Math.random() ) / 65535;\r\n\r\n\t},\r\n\r\n\t// Random integer from <low, high> interval\r\n\r\n\trandInt: function ( low, high ) {\r\n\r\n\t\treturn low + Math.floor( Math.random() * ( high - low + 1 ) );\r\n\r\n\t},\r\n\r\n\t// Random float from <low, high> interval\r\n\r\n\trandFloat: function ( low, high ) {\r\n\r\n\t\treturn low + Math.random() * ( high - low );\r\n\r\n\t},\r\n\r\n\t// Random float from <-range/2, range/2> interval\r\n\r\n\trandFloatSpread: function ( range ) {\r\n\r\n\t\treturn range * ( 0.5 - Math.random() );\r\n\r\n\t},\r\n\r\n\tdegToRad: function () {\r\n\r\n\t\tvar degreeToRadiansFactor = Math.PI / 180;\r\n\r\n\t\treturn function ( degrees ) {\r\n\r\n\t\t\treturn degrees * degreeToRadiansFactor;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tradToDeg: function () {\r\n\r\n\t\tvar radianToDegreesFactor = 180 / Math.PI;\r\n\r\n\t\treturn function ( radians ) {\r\n\r\n\t\t\treturn radians * radianToDegreesFactor;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tisPowerOfTwo: function ( value ) {\r\n\r\n\t\treturn ( value & ( value - 1 ) ) === 0 && value !== 0;\r\n\r\n\t},\r\n\r\n\tnextPowerOfTwo: function ( value ) {\r\n\r\n\t\tvalue --;\r\n\t\tvalue |= value >> 1;\r\n\t\tvalue |= value >> 2;\r\n\t\tvalue |= value >> 4;\r\n\t\tvalue |= value >> 8;\r\n\t\tvalue |= value >> 16;\r\n\t\tvalue ++;\r\n\r\n\t\treturn value;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/math/Spline.js\r\n\r\n/**\r\n * Spline from Tween.js, slightly optimized (and trashed)\r\n * http://sole.github.com/tween.js/examples/05_spline.html\r\n *\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.Spline = function ( points ) {\r\n\r\n\tthis.points = points;\r\n\r\n\tvar c = [], v3 = { x: 0, y: 0, z: 0 },\r\n\tpoint, intPoint, weight, w2, w3,\r\n\tpa, pb, pc, pd;\r\n\r\n\tthis.initFromArray = function ( a ) {\r\n\r\n\t\tthis.points = [];\r\n\r\n\t\tfor ( var i = 0; i < a.length; i ++ ) {\r\n\r\n\t\t\tthis.points[ i ] = { x: a[ i ][ 0 ], y: a[ i ][ 1 ], z: a[ i ][ 2 ] };\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.getPoint = function ( k ) {\r\n\r\n\t\tpoint = ( this.points.length - 1 ) * k;\r\n\t\tintPoint = Math.floor( point );\r\n\t\tweight = point - intPoint;\r\n\r\n\t\tc[ 0 ] = intPoint === 0 ? intPoint : intPoint - 1;\r\n\t\tc[ 1 ] = intPoint;\r\n\t\tc[ 2 ] = intPoint  > this.points.length - 2 ? this.points.length - 1 : intPoint + 1;\r\n\t\tc[ 3 ] = intPoint  > this.points.length - 3 ? this.points.length - 1 : intPoint + 2;\r\n\r\n\t\tpa = this.points[ c[ 0 ] ];\r\n\t\tpb = this.points[ c[ 1 ] ];\r\n\t\tpc = this.points[ c[ 2 ] ];\r\n\t\tpd = this.points[ c[ 3 ] ];\r\n\r\n\t\tw2 = weight * weight;\r\n\t\tw3 = weight * w2;\r\n\r\n\t\tv3.x = interpolate( pa.x, pb.x, pc.x, pd.x, weight, w2, w3 );\r\n\t\tv3.y = interpolate( pa.y, pb.y, pc.y, pd.y, weight, w2, w3 );\r\n\t\tv3.z = interpolate( pa.z, pb.z, pc.z, pd.z, weight, w2, w3 );\r\n\r\n\t\treturn v3;\r\n\r\n\t};\r\n\r\n\tthis.getControlPointsArray = function () {\r\n\r\n\t\tvar i, p, l = this.points.length,\r\n\t\t\tcoords = [];\r\n\r\n\t\tfor ( i = 0; i < l; i ++ ) {\r\n\r\n\t\t\tp = this.points[ i ];\r\n\t\t\tcoords[ i ] = [ p.x, p.y, p.z ];\r\n\r\n\t\t}\r\n\r\n\t\treturn coords;\r\n\r\n\t};\r\n\r\n\t// approximate length by summing linear segments\r\n\r\n\tthis.getLength = function ( nSubDivisions ) {\r\n\r\n\t\tvar i, index, nSamples, position,\r\n\t\t\tpoint = 0, intPoint = 0, oldIntPoint = 0,\r\n\t\t\toldPosition = new THREE.Vector3(),\r\n\t\t\ttmpVec = new THREE.Vector3(),\r\n\t\t\tchunkLengths = [],\r\n\t\t\ttotalLength = 0;\r\n\r\n\t\t// first point has 0 length\r\n\r\n\t\tchunkLengths[ 0 ] = 0;\r\n\r\n\t\tif ( ! nSubDivisions ) nSubDivisions = 100;\r\n\r\n\t\tnSamples = this.points.length * nSubDivisions;\r\n\r\n\t\toldPosition.copy( this.points[ 0 ] );\r\n\r\n\t\tfor ( i = 1; i < nSamples; i ++ ) {\r\n\r\n\t\t\tindex = i / nSamples;\r\n\r\n\t\t\tposition = this.getPoint( index );\r\n\t\t\ttmpVec.copy( position );\r\n\r\n\t\t\ttotalLength += tmpVec.distanceTo( oldPosition );\r\n\r\n\t\t\toldPosition.copy( position );\r\n\r\n\t\t\tpoint = ( this.points.length - 1 ) * index;\r\n\t\t\tintPoint = Math.floor( point );\r\n\r\n\t\t\tif ( intPoint !== oldIntPoint ) {\r\n\r\n\t\t\t\tchunkLengths[ intPoint ] = totalLength;\r\n\t\t\t\toldIntPoint = intPoint;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// last point ends with total length\r\n\r\n\t\tchunkLengths[ chunkLengths.length ] = totalLength;\r\n\r\n\t\treturn { chunks: chunkLengths, total: totalLength };\r\n\r\n\t};\r\n\r\n\tthis.reparametrizeByArcLength = function ( samplingCoef ) {\r\n\r\n\t\tvar i, j,\r\n\t\t\tindex, indexCurrent, indexNext,\r\n\t\t\trealDistance,\r\n\t\t\tsampling, position,\r\n\t\t\tnewpoints = [],\r\n\t\t\ttmpVec = new THREE.Vector3(),\r\n\t\t\tsl = this.getLength();\r\n\r\n\t\tnewpoints.push( tmpVec.copy( this.points[ 0 ] ).clone() );\r\n\r\n\t\tfor ( i = 1; i < this.points.length; i ++ ) {\r\n\r\n\t\t\t//tmpVec.copy( this.points[ i - 1 ] );\r\n\t\t\t//linearDistance = tmpVec.distanceTo( this.points[ i ] );\r\n\r\n\t\t\trealDistance = sl.chunks[ i ] - sl.chunks[ i - 1 ];\r\n\r\n\t\t\tsampling = Math.ceil( samplingCoef * realDistance / sl.total );\r\n\r\n\t\t\tindexCurrent = ( i - 1 ) / ( this.points.length - 1 );\r\n\t\t\tindexNext = i / ( this.points.length - 1 );\r\n\r\n\t\t\tfor ( j = 1; j < sampling - 1; j ++ ) {\r\n\r\n\t\t\t\tindex = indexCurrent + j * ( 1 / sampling ) * ( indexNext - indexCurrent );\r\n\r\n\t\t\t\tposition = this.getPoint( index );\r\n\t\t\t\tnewpoints.push( tmpVec.copy( position ).clone() );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tnewpoints.push( tmpVec.copy( this.points[ i ] ).clone() );\r\n\r\n\t\t}\r\n\r\n\t\tthis.points = newpoints;\r\n\r\n\t};\r\n\r\n\t// Catmull-Rom\r\n\r\n\tfunction interpolate( p0, p1, p2, p3, t, t2, t3 ) {\r\n\r\n\t\tvar v0 = ( p2 - p0 ) * 0.5,\r\n\t\t\tv1 = ( p3 - p1 ) * 0.5;\r\n\r\n\t\treturn ( 2 * ( p1 - p2 ) + v0 + v1 ) * t3 + ( - 3 * ( p1 - p2 ) - 2 * v0 - v1 ) * t2 + v0 * t + p1;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/math/Triangle.js\r\n\r\n/**\r\n * @author bhouston / http://exocortex.com\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.Triangle = function ( a, b, c ) {\r\n\r\n\tthis.a = ( a !== undefined ) ? a : new THREE.Vector3();\r\n\tthis.b = ( b !== undefined ) ? b : new THREE.Vector3();\r\n\tthis.c = ( c !== undefined ) ? c : new THREE.Vector3();\r\n\r\n};\r\n\r\nTHREE.Triangle.normal = function () {\r\n\r\n\tvar v0 = new THREE.Vector3();\r\n\r\n\treturn function ( a, b, c, optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\r\n\t\tresult.subVectors( c, b );\r\n\t\tv0.subVectors( a, b );\r\n\t\tresult.cross( v0 );\r\n\r\n\t\tvar resultLengthSq = result.lengthSq();\r\n\t\tif ( resultLengthSq > 0 ) {\r\n\r\n\t\t\treturn result.multiplyScalar( 1 / Math.sqrt( resultLengthSq ) );\r\n\r\n\t\t}\r\n\r\n\t\treturn result.set( 0, 0, 0 );\r\n\r\n\t};\r\n\r\n}();\r\n\r\n// static/instance method to calculate barycentric coordinates\r\n// based on: http://www.blackpawn.com/texts/pointinpoly/default.html\r\nTHREE.Triangle.barycoordFromPoint = function () {\r\n\r\n\tvar v0 = new THREE.Vector3();\r\n\tvar v1 = new THREE.Vector3();\r\n\tvar v2 = new THREE.Vector3();\r\n\r\n\treturn function ( point, a, b, c, optionalTarget ) {\r\n\r\n\t\tv0.subVectors( c, a );\r\n\t\tv1.subVectors( b, a );\r\n\t\tv2.subVectors( point, a );\r\n\r\n\t\tvar dot00 = v0.dot( v0 );\r\n\t\tvar dot01 = v0.dot( v1 );\r\n\t\tvar dot02 = v0.dot( v2 );\r\n\t\tvar dot11 = v1.dot( v1 );\r\n\t\tvar dot12 = v1.dot( v2 );\r\n\r\n\t\tvar denom = ( dot00 * dot11 - dot01 * dot01 );\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\r\n\t\t// collinear or singular triangle\r\n\t\tif ( denom === 0 ) {\r\n\r\n\t\t\t// arbitrary location outside of triangle?\r\n\t\t\t// not sure if this is the best idea, maybe should be returning undefined\r\n\t\t\treturn result.set( - 2, - 1, - 1 );\r\n\r\n\t\t}\r\n\r\n\t\tvar invDenom = 1 / denom;\r\n\t\tvar u = ( dot11 * dot02 - dot01 * dot12 ) * invDenom;\r\n\t\tvar v = ( dot00 * dot12 - dot01 * dot02 ) * invDenom;\r\n\r\n\t\t// barycentric coordinates must always sum to 1\r\n\t\treturn result.set( 1 - u - v, v, u );\r\n\r\n\t};\r\n\r\n}();\r\n\r\nTHREE.Triangle.containsPoint = function () {\r\n\r\n\tvar v1 = new THREE.Vector3();\r\n\r\n\treturn function ( point, a, b, c ) {\r\n\r\n\t\tvar result = THREE.Triangle.barycoordFromPoint( point, a, b, c, v1 );\r\n\r\n\t\treturn ( result.x >= 0 ) && ( result.y >= 0 ) && ( ( result.x + result.y ) <= 1 );\r\n\r\n\t};\r\n\r\n}();\r\n\r\nTHREE.Triangle.prototype = {\r\n\r\n\tconstructor: THREE.Triangle,\r\n\r\n\tset: function ( a, b, c ) {\r\n\r\n\t\tthis.a.copy( a );\r\n\t\tthis.b.copy( b );\r\n\t\tthis.c.copy( c );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromPointsAndIndices: function ( points, i0, i1, i2 ) {\r\n\r\n\t\tthis.a.copy( points[ i0 ] );\r\n\t\tthis.b.copy( points[ i1 ] );\r\n\t\tthis.c.copy( points[ i2 ] );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t},\r\n\r\n\tcopy: function ( triangle ) {\r\n\r\n\t\tthis.a.copy( triangle.a );\r\n\t\tthis.b.copy( triangle.b );\r\n\t\tthis.c.copy( triangle.c );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tarea: function () {\r\n\r\n\t\tvar v0 = new THREE.Vector3();\r\n\t\tvar v1 = new THREE.Vector3();\r\n\r\n\t\treturn function () {\r\n\r\n\t\t\tv0.subVectors( this.c, this.b );\r\n\t\t\tv1.subVectors( this.a, this.b );\r\n\r\n\t\t\treturn v0.cross( v1 ).length() * 0.5;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tmidpoint: function ( optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\treturn result.addVectors( this.a, this.b ).add( this.c ).multiplyScalar( 1 / 3 );\r\n\r\n\t},\r\n\r\n\tnormal: function ( optionalTarget ) {\r\n\r\n\t\treturn THREE.Triangle.normal( this.a, this.b, this.c, optionalTarget );\r\n\r\n\t},\r\n\r\n\tplane: function ( optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Plane();\r\n\r\n\t\treturn result.setFromCoplanarPoints( this.a, this.b, this.c );\r\n\r\n\t},\r\n\r\n\tbarycoordFromPoint: function ( point, optionalTarget ) {\r\n\r\n\t\treturn THREE.Triangle.barycoordFromPoint( point, this.a, this.b, this.c, optionalTarget );\r\n\r\n\t},\r\n\r\n\tcontainsPoint: function ( point ) {\r\n\r\n\t\treturn THREE.Triangle.containsPoint( point, this.a, this.b, this.c );\r\n\r\n\t},\r\n\r\n\tequals: function ( triangle ) {\r\n\r\n\t\treturn triangle.a.equals( this.a ) && triangle.b.equals( this.b ) && triangle.c.equals( this.c );\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/core/Clock.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.Clock = function ( autoStart ) {\r\n\r\n\tthis.autoStart = ( autoStart !== undefined ) ? autoStart : true;\r\n\r\n\tthis.startTime = 0;\r\n\tthis.oldTime = 0;\r\n\tthis.elapsedTime = 0;\r\n\r\n\tthis.running = false;\r\n\r\n};\r\n\r\nTHREE.Clock.prototype = {\r\n\r\n\tconstructor: THREE.Clock,\r\n\r\n\tstart: function () {\r\n\r\n\t\tthis.startTime = self.performance !== undefined && self.performance.now !== undefined\r\n\t\t\t\t\t ? self.performance.now()\r\n\t\t\t\t\t : Date.now();\r\n\r\n\t\tthis.oldTime = this.startTime;\r\n\t\tthis.running = true;\r\n\r\n\t},\r\n\r\n\tstop: function () {\r\n\r\n\t\tthis.getElapsedTime();\r\n\t\tthis.running = false;\r\n\r\n\t},\r\n\r\n\tgetElapsedTime: function () {\r\n\r\n\t\tthis.getDelta();\r\n\t\treturn this.elapsedTime;\r\n\r\n\t},\r\n\r\n\tgetDelta: function () {\r\n\r\n\t\tvar diff = 0;\r\n\r\n\t\tif ( this.autoStart && ! this.running ) {\r\n\r\n\t\t\tthis.start();\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.running ) {\r\n\r\n\t\t\tvar newTime = self.performance !== undefined && self.performance.now !== undefined\r\n\t\t\t\t\t ? self.performance.now()\r\n\t\t\t\t\t : Date.now();\r\n\r\n\t\t\tdiff = 0.001 * ( newTime - this.oldTime );\r\n\t\t\tthis.oldTime = newTime;\r\n\r\n\t\t\tthis.elapsedTime += diff;\r\n\r\n\t\t}\r\n\r\n\t\treturn diff;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/core/EventDispatcher.js\r\n\r\n/**\r\n * https://github.com/mrdoob/eventdispatcher.js/\r\n */\r\n\r\nTHREE.EventDispatcher = function () {};\r\n\r\nTHREE.EventDispatcher.prototype = {\r\n\r\n\tconstructor: THREE.EventDispatcher,\r\n\r\n\tapply: function ( object ) {\r\n\r\n\t\tobject.addEventListener = THREE.EventDispatcher.prototype.addEventListener;\r\n\t\tobject.hasEventListener = THREE.EventDispatcher.prototype.hasEventListener;\r\n\t\tobject.removeEventListener = THREE.EventDispatcher.prototype.removeEventListener;\r\n\t\tobject.dispatchEvent = THREE.EventDispatcher.prototype.dispatchEvent;\r\n\r\n\t},\r\n\r\n\taddEventListener: function ( type, listener ) {\r\n\r\n\t\tif ( this._listeners === undefined ) this._listeners = {};\r\n\r\n\t\tvar listeners = this._listeners;\r\n\r\n\t\tif ( listeners[ type ] === undefined ) {\r\n\r\n\t\t\tlisteners[ type ] = [];\r\n\r\n\t\t}\r\n\r\n\t\tif ( listeners[ type ].indexOf( listener ) === - 1 ) {\r\n\r\n\t\t\tlisteners[ type ].push( listener );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\thasEventListener: function ( type, listener ) {\r\n\r\n\t\tif ( this._listeners === undefined ) return false;\r\n\r\n\t\tvar listeners = this._listeners;\r\n\r\n\t\tif ( listeners[ type ] !== undefined && listeners[ type ].indexOf( listener ) !== - 1 ) {\r\n\r\n\t\t\treturn true;\r\n\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\r\n\t},\r\n\r\n\tremoveEventListener: function ( type, listener ) {\r\n\r\n\t\tif ( this._listeners === undefined ) return;\r\n\r\n\t\tvar listeners = this._listeners;\r\n\t\tvar listenerArray = listeners[ type ];\r\n\r\n\t\tif ( listenerArray !== undefined ) {\r\n\r\n\t\t\tvar index = listenerArray.indexOf( listener );\r\n\r\n\t\t\tif ( index !== - 1 ) {\r\n\r\n\t\t\t\tlistenerArray.splice( index, 1 );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tdispatchEvent: function ( event ) {\r\n\r\n\t\tif ( this._listeners === undefined ) return;\r\n\r\n\t\tvar listeners = this._listeners;\r\n\t\tvar listenerArray = listeners[ event.type ];\r\n\r\n\t\tif ( listenerArray !== undefined ) {\r\n\r\n\t\t\tevent.target = this;\r\n\r\n\t\t\tvar array = [];\r\n\t\t\tvar length = listenerArray.length;\r\n\r\n\t\t\tfor ( var i = 0; i < length; i ++ ) {\r\n\r\n\t\t\t\tarray[ i ] = listenerArray[ i ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfor ( var i = 0; i < length; i ++ ) {\r\n\r\n\t\t\t\tarray[ i ].call( this, event );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/core/Raycaster.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author bhouston / http://exocortex.com/\r\n * @author stephomi / http://stephaneginier.com/\r\n */\r\n\r\n( function ( THREE ) {\r\n\r\n\tTHREE.Raycaster = function ( origin, direction, near, far ) {\r\n\r\n\t\tthis.ray = new THREE.Ray( origin, direction );\r\n\t\t// direction is assumed to be normalized (for accurate distance calculations)\r\n\r\n\t\tthis.near = near || 0;\r\n\t\tthis.far = far || Infinity;\r\n\r\n\t\tthis.params = {\r\n\t\t\tMesh: {},\r\n\t\t\tLine: {},\r\n\t\t\tLOD: {},\r\n\t\t\tPoints: { threshold: 1 },\r\n\t\t\tSprite: {}\r\n\t\t};\r\n\r\n\t\tObject.defineProperties( this.params, {\r\n\t\t\tPointCloud: {\r\n\t\t\t\tget: function () {\r\n\t\t\t\t\tconsole.warn( 'THREE.Raycaster: params.PointCloud has been renamed to params.Points.' );\r\n\t\t\t\t\treturn this.Points;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} );\r\n\r\n\t};\r\n\r\n\tfunction descSort( a, b ) {\r\n\r\n\t\treturn a.distance - b.distance;\r\n\r\n\t}\r\n\r\n\tvar intersectObject = function ( object, raycaster, intersects, recursive ) {\r\n\r\n\t\tif ( object.visible === false ) return;\r\n\r\n\t\tobject.raycast( raycaster, intersects );\r\n\r\n\t\tif ( recursive === true ) {\r\n\r\n\t\t\tvar children = object.children;\r\n\r\n\t\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tintersectObject( children[ i ], raycaster, intersects, true );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\t//\r\n\r\n\tTHREE.Raycaster.prototype = {\r\n\r\n\t\tconstructor: THREE.Raycaster,\r\n\r\n\t\tlinePrecision: 1,\r\n\r\n\t\tset: function ( origin, direction ) {\r\n\r\n\t\t\t// direction is assumed to be normalized (for accurate distance calculations)\r\n\r\n\t\t\tthis.ray.set( origin, direction );\r\n\r\n\t\t},\r\n\r\n\t\tsetFromCamera: function ( coords, camera ) {\r\n\r\n\t\t\tif ( camera instanceof THREE.PerspectiveCamera ) {\r\n\r\n\t\t\t\tthis.ray.origin.setFromMatrixPosition( camera.matrixWorld );\r\n\t\t\t\tthis.ray.direction.set( coords.x, coords.y, 0.5 ).unproject( camera ).sub( this.ray.origin ).normalize();\r\n\r\n\t\t\t} else if ( camera instanceof THREE.OrthographicCamera ) {\r\n\r\n\t\t\t\tthis.ray.origin.set( coords.x, coords.y, - 1 ).unproject( camera );\r\n\t\t\t\tthis.ray.direction.set( 0, 0, - 1 ).transformDirection( camera.matrixWorld );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tconsole.error( 'THREE.Raycaster: Unsupported camera type.' );\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\tintersectObject: function ( object, recursive ) {\r\n\r\n\t\t\tvar intersects = [];\r\n\r\n\t\t\tintersectObject( object, this, intersects, recursive );\r\n\r\n\t\t\tintersects.sort( descSort );\r\n\r\n\t\t\treturn intersects;\r\n\r\n\t\t},\r\n\r\n\t\tintersectObjects: function ( objects, recursive ) {\r\n\r\n\t\t\tvar intersects = [];\r\n\r\n\t\t\tif ( Array.isArray( objects ) === false ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Raycaster.intersectObjects: objects is not an Array.' );\r\n\t\t\t\treturn intersects;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfor ( var i = 0, l = objects.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tintersectObject( objects[ i ], this, intersects, recursive );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tintersects.sort( descSort );\r\n\r\n\t\t\treturn intersects;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n}( THREE ) );\r\n\r\n// File:src/core/Object3D.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author WestLangley / http://github.com/WestLangley\r\n * @author elephantatwork / www.elephantatwork.ch\r\n */\r\n\r\nTHREE.Object3D = function () {\r\n\r\n\tObject.defineProperty( this, 'id', { value: THREE.Object3DIdCount ++ } );\r\n\r\n\tthis.uuid = THREE.Math.generateUUID();\r\n\r\n\tthis.name = '';\r\n\tthis.type = 'Object3D';\r\n\r\n\tthis.parent = null;\r\n\tthis.children = [];\r\n\r\n\tthis.up = THREE.Object3D.DefaultUp.clone();\r\n\r\n\tvar position = new THREE.Vector3();\r\n\tvar rotation = new THREE.Euler();\r\n\tvar quaternion = new THREE.Quaternion();\r\n\tvar scale = new THREE.Vector3( 1, 1, 1 );\r\n\r\n\tvar onRotationChange = function () {\r\n\r\n\t\tquaternion.setFromEuler( rotation, false );\r\n\r\n\t};\r\n\r\n\tvar onQuaternionChange = function () {\r\n\r\n\t\trotation.setFromQuaternion( quaternion, undefined, false );\r\n\r\n\t};\r\n\r\n\trotation.onChange( onRotationChange );\r\n\tquaternion.onChange( onQuaternionChange );\r\n\r\n\tObject.defineProperties( this, {\r\n\t\tposition: {\r\n\t\t\tenumerable: true,\r\n\t\t\tvalue: position\r\n\t\t},\r\n\t\trotation: {\r\n\t\t\tenumerable: true,\r\n\t\t\tvalue: rotation\r\n\t\t},\r\n\t\tquaternion: {\r\n\t\t\tenumerable: true,\r\n\t\t\tvalue: quaternion\r\n\t\t},\r\n\t\tscale: {\r\n\t\t\tenumerable: true,\r\n\t\t\tvalue: scale\r\n\t\t},\r\n\t\tmodelViewMatrix: {\r\n\t\t\tvalue: new THREE.Matrix4()\r\n\t\t},\r\n\t\tnormalMatrix: {\r\n\t\t\tvalue: new THREE.Matrix3()\r\n\t\t}\r\n\t} );\r\n\r\n\tthis.rotationAutoUpdate = true;\r\n\r\n\tthis.matrix = new THREE.Matrix4();\r\n\tthis.matrixWorld = new THREE.Matrix4();\r\n\r\n\tthis.matrixAutoUpdate = THREE.Object3D.DefaultMatrixAutoUpdate;\r\n\tthis.matrixWorldNeedsUpdate = false;\r\n\r\n\tthis.visible = true;\r\n\r\n\tthis.castShadow = false;\r\n\tthis.receiveShadow = false;\r\n\r\n\tthis.frustumCulled = true;\r\n\tthis.renderOrder = 0;\r\n\r\n\tthis.userData = {};\r\n\r\n};\r\n\r\nTHREE.Object3D.DefaultUp = new THREE.Vector3( 0, 1, 0 );\r\nTHREE.Object3D.DefaultMatrixAutoUpdate = true;\r\n\r\nTHREE.Object3D.prototype = {\r\n\r\n\tconstructor: THREE.Object3D,\r\n\r\n\tget eulerOrder () {\r\n\r\n\t\tconsole.warn( 'THREE.Object3D: .eulerOrder has been moved to .rotation.order.' );\r\n\r\n\t\treturn this.rotation.order;\r\n\r\n\t},\r\n\r\n\tset eulerOrder ( value ) {\r\n\r\n\t\tconsole.warn( 'THREE.Object3D: .eulerOrder has been moved to .rotation.order.' );\r\n\r\n\t\tthis.rotation.order = value;\r\n\r\n\t},\r\n\r\n\tget useQuaternion () {\r\n\r\n\t\tconsole.warn( 'THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.' );\r\n\r\n\t},\r\n\r\n\tset useQuaternion ( value ) {\r\n\r\n\t\tconsole.warn( 'THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.' );\r\n\r\n\t},\r\n\r\n\tset renderDepth ( value ) {\r\n\r\n\t\tconsole.warn( 'THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.' );\r\n\r\n\t},\r\n\r\n\tapplyMatrix: function ( matrix ) {\r\n\r\n\t\tthis.matrix.multiplyMatrices( matrix, this.matrix );\r\n\r\n\t\tthis.matrix.decompose( this.position, this.quaternion, this.scale );\r\n\r\n\t},\r\n\r\n\tsetRotationFromAxisAngle: function ( axis, angle ) {\r\n\r\n\t\t// assumes axis is normalized\r\n\r\n\t\tthis.quaternion.setFromAxisAngle( axis, angle );\r\n\r\n\t},\r\n\r\n\tsetRotationFromEuler: function ( euler ) {\r\n\r\n\t\tthis.quaternion.setFromEuler( euler, true );\r\n\r\n\t},\r\n\r\n\tsetRotationFromMatrix: function ( m ) {\r\n\r\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\r\n\r\n\t\tthis.quaternion.setFromRotationMatrix( m );\r\n\r\n\t},\r\n\r\n\tsetRotationFromQuaternion: function ( q ) {\r\n\r\n\t\t// assumes q is normalized\r\n\r\n\t\tthis.quaternion.copy( q );\r\n\r\n\t},\r\n\r\n\trotateOnAxis: function () {\r\n\r\n\t\t// rotate object on axis in object space\r\n\t\t// axis is assumed to be normalized\r\n\r\n\t\tvar q1 = new THREE.Quaternion();\r\n\r\n\t\treturn function ( axis, angle ) {\r\n\r\n\t\t\tq1.setFromAxisAngle( axis, angle );\r\n\r\n\t\t\tthis.quaternion.multiply( q1 );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\trotateX: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector3( 1, 0, 0 );\r\n\r\n\t\treturn function ( angle ) {\r\n\r\n\t\t\treturn this.rotateOnAxis( v1, angle );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\trotateY: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector3( 0, 1, 0 );\r\n\r\n\t\treturn function ( angle ) {\r\n\r\n\t\t\treturn this.rotateOnAxis( v1, angle );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\trotateZ: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector3( 0, 0, 1 );\r\n\r\n\t\treturn function ( angle ) {\r\n\r\n\t\t\treturn this.rotateOnAxis( v1, angle );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\ttranslateOnAxis: function () {\r\n\r\n\t\t// translate object by distance along axis in object space\r\n\t\t// axis is assumed to be normalized\r\n\r\n\t\tvar v1 = new THREE.Vector3();\r\n\r\n\t\treturn function ( axis, distance ) {\r\n\r\n\t\t\tv1.copy( axis ).applyQuaternion( this.quaternion );\r\n\r\n\t\t\tthis.position.add( v1.multiplyScalar( distance ) );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\ttranslate: function ( distance, axis ) {\r\n\r\n\t\tconsole.warn( 'THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead.' );\r\n\t\treturn this.translateOnAxis( axis, distance );\r\n\r\n\t},\r\n\r\n\ttranslateX: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector3( 1, 0, 0 );\r\n\r\n\t\treturn function ( distance ) {\r\n\r\n\t\t\treturn this.translateOnAxis( v1, distance );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\ttranslateY: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector3( 0, 1, 0 );\r\n\r\n\t\treturn function ( distance ) {\r\n\r\n\t\t\treturn this.translateOnAxis( v1, distance );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\ttranslateZ: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector3( 0, 0, 1 );\r\n\r\n\t\treturn function ( distance ) {\r\n\r\n\t\t\treturn this.translateOnAxis( v1, distance );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tlocalToWorld: function ( vector ) {\r\n\r\n\t\treturn vector.applyMatrix4( this.matrixWorld );\r\n\r\n\t},\r\n\r\n\tworldToLocal: function () {\r\n\r\n\t\tvar m1 = new THREE.Matrix4();\r\n\r\n\t\treturn function ( vector ) {\r\n\r\n\t\t\treturn vector.applyMatrix4( m1.getInverse( this.matrixWorld ) );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tlookAt: function () {\r\n\r\n\t\t// This routine does not support objects with rotated and/or translated parent(s)\r\n\r\n\t\tvar m1 = new THREE.Matrix4();\r\n\r\n\t\treturn function ( vector ) {\r\n\r\n\t\t\tm1.lookAt( vector, this.position, this.up );\r\n\r\n\t\t\tthis.quaternion.setFromRotationMatrix( m1 );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tadd: function ( object ) {\r\n\r\n\t\tif ( arguments.length > 1 ) {\r\n\r\n\t\t\tfor ( var i = 0; i < arguments.length; i ++ ) {\r\n\r\n\t\t\t\tthis.add( arguments[ i ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t\tif ( object === this ) {\r\n\r\n\t\t\tconsole.error( \"THREE.Object3D.add: object can't be added as a child of itself.\", object );\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t\tif ( object instanceof THREE.Object3D ) {\r\n\r\n\t\t\tif ( object.parent !== null ) {\r\n\r\n\t\t\t\tobject.parent.remove( object );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tobject.parent = this;\r\n\t\t\tobject.dispatchEvent( { type: 'added' } );\r\n\r\n\t\t\tthis.children.push( object );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tconsole.error( \"THREE.Object3D.add: object not an instance of THREE.Object3D.\", object );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tremove: function ( object ) {\r\n\r\n\t\tif ( arguments.length > 1 ) {\r\n\r\n\t\t\tfor ( var i = 0; i < arguments.length; i ++ ) {\r\n\r\n\t\t\t\tthis.remove( arguments[ i ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tvar index = this.children.indexOf( object );\r\n\r\n\t\tif ( index !== - 1 ) {\r\n\r\n\t\t\tobject.parent = null;\r\n\r\n\t\t\tobject.dispatchEvent( { type: 'removed' } );\r\n\r\n\t\t\tthis.children.splice( index, 1 );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tgetChildByName: function ( name ) {\r\n\r\n\t\tconsole.warn( 'THREE.Object3D: .getChildByName() has been renamed to .getObjectByName().' );\r\n\t\treturn this.getObjectByName( name );\r\n\r\n\t},\r\n\r\n\tgetObjectById: function ( id ) {\r\n\r\n\t\treturn this.getObjectByProperty( 'id', id );\r\n\r\n\t},\r\n\r\n\tgetObjectByName: function ( name ) {\r\n\r\n\t\treturn this.getObjectByProperty( 'name', name );\r\n\r\n\t},\r\n\r\n\tgetObjectByProperty: function ( name, value ) {\r\n\r\n\t\tif ( this[ name ] === value ) return this;\r\n\r\n\t\tfor ( var i = 0, l = this.children.length; i < l; i ++ ) {\r\n\r\n\t\t\tvar child = this.children[ i ];\r\n\t\t\tvar object = child.getObjectByProperty( name, value );\r\n\r\n\t\t\tif ( object !== undefined ) {\r\n\r\n\t\t\t\treturn object;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn undefined;\r\n\r\n\t},\r\n\r\n\tgetWorldPosition: function ( optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\r\n\t\tthis.updateMatrixWorld( true );\r\n\r\n\t\treturn result.setFromMatrixPosition( this.matrixWorld );\r\n\r\n\t},\r\n\r\n\tgetWorldQuaternion: function () {\r\n\r\n\t\tvar position = new THREE.Vector3();\r\n\t\tvar scale = new THREE.Vector3();\r\n\r\n\t\treturn function ( optionalTarget ) {\r\n\r\n\t\t\tvar result = optionalTarget || new THREE.Quaternion();\r\n\r\n\t\t\tthis.updateMatrixWorld( true );\r\n\r\n\t\t\tthis.matrixWorld.decompose( position, result, scale );\r\n\r\n\t\t\treturn result;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tgetWorldRotation: function () {\r\n\r\n\t\tvar quaternion = new THREE.Quaternion();\r\n\r\n\t\treturn function ( optionalTarget ) {\r\n\r\n\t\t\tvar result = optionalTarget || new THREE.Euler();\r\n\r\n\t\t\tthis.getWorldQuaternion( quaternion );\r\n\r\n\t\t\treturn result.setFromQuaternion( quaternion, this.rotation.order, false );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tgetWorldScale: function () {\r\n\r\n\t\tvar position = new THREE.Vector3();\r\n\t\tvar quaternion = new THREE.Quaternion();\r\n\r\n\t\treturn function ( optionalTarget ) {\r\n\r\n\t\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\r\n\t\t\tthis.updateMatrixWorld( true );\r\n\r\n\t\t\tthis.matrixWorld.decompose( position, quaternion, result );\r\n\r\n\t\t\treturn result;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tgetWorldDirection: function () {\r\n\r\n\t\tvar quaternion = new THREE.Quaternion();\r\n\r\n\t\treturn function ( optionalTarget ) {\r\n\r\n\t\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\r\n\t\t\tthis.getWorldQuaternion( quaternion );\r\n\r\n\t\t\treturn result.set( 0, 0, 1 ).applyQuaternion( quaternion );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\traycast: function () {},\r\n\r\n\ttraverse: function ( callback ) {\r\n\r\n\t\tcallback( this );\r\n\r\n\t\tvar children = this.children;\r\n\r\n\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\r\n\r\n\t\t\tchildren[ i ].traverse( callback );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\ttraverseVisible: function ( callback ) {\r\n\r\n\t\tif ( this.visible === false ) return;\r\n\r\n\t\tcallback( this );\r\n\r\n\t\tvar children = this.children;\r\n\r\n\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\r\n\r\n\t\t\tchildren[ i ].traverseVisible( callback );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\ttraverseAncestors: function ( callback ) {\r\n\r\n\t\tvar parent = this.parent;\r\n\r\n\t\tif ( parent !== null ) {\r\n\r\n\t\t\tcallback( parent );\r\n\r\n\t\t\tparent.traverseAncestors( callback );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tupdateMatrix: function () {\r\n\r\n\t\tthis.matrix.compose( this.position, this.quaternion, this.scale );\r\n\r\n\t\tthis.matrixWorldNeedsUpdate = true;\r\n\r\n\t},\r\n\r\n\tupdateMatrixWorld: function ( force ) {\r\n\r\n\t\tif ( this.matrixAutoUpdate === true ) this.updateMatrix();\r\n\r\n\t\tif ( this.matrixWorldNeedsUpdate === true || force === true ) {\r\n\r\n\t\t\tif ( this.parent === null ) {\r\n\r\n\t\t\t\tthis.matrixWorld.copy( this.matrix );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthis.matrixWorld.multiplyMatrices( this.parent.matrixWorld, this.matrix );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.matrixWorldNeedsUpdate = false;\r\n\r\n\t\t\tforce = true;\r\n\r\n\t\t}\r\n\r\n\t\t// update children\r\n\r\n\t\tfor ( var i = 0, l = this.children.length; i < l; i ++ ) {\r\n\r\n\t\t\tthis.children[ i ].updateMatrixWorld( force );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\ttoJSON: function ( meta ) {\r\n\r\n\t\tvar isRootObject = ( meta === undefined );\r\n\r\n\t\tvar data = {};\r\n\r\n\t\t// meta is a hash used to collect geometries, materials.\r\n\t\t// not providing it implies that this is the root object\r\n\t\t// being serialized.\r\n\t\tif ( isRootObject ) {\r\n\r\n\t\t\t// initialize meta obj\r\n\t\t\tmeta = {\r\n\t\t\t\tgeometries: {},\r\n\t\t\t\tmaterials: {},\r\n\t\t\t\ttextures: {},\r\n\t\t\t\timages: {}\r\n\t\t\t};\r\n\r\n\t\t\tdata.metadata = {\r\n\t\t\t\tversion: 4.4,\r\n\t\t\t\ttype: 'Object',\r\n\t\t\t\tgenerator: 'Object3D.toJSON'\r\n\t\t\t};\r\n\r\n\t\t}\r\n\r\n\t\t// standard Object3D serialization\r\n\r\n\t\tdata.uuid = this.uuid;\r\n\t\tdata.type = this.type;\r\n\r\n\t\tif ( this.name !== '' ) data.name = this.name;\r\n\t\tif ( JSON.stringify( this.userData ) !== '{}' ) data.userData = this.userData;\r\n\t\tif ( this.visible !== true ) data.visible = this.visible;\r\n\r\n\t\tdata.matrix = this.matrix.toArray();\r\n\r\n\t\tif ( this.children.length > 0 ) {\r\n\r\n\t\t\tdata.children = [];\r\n\r\n\t\t\tfor ( var i = 0; i < this.children.length; i ++ ) {\r\n\r\n\t\t\t\tdata.children.push( this.children[ i ].toJSON( meta ).object );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tvar output = {};\r\n\r\n\t\tif ( isRootObject ) {\r\n\r\n\t\t\tvar geometries = extractFromCache( meta.geometries );\r\n\t\t\tvar materials = extractFromCache( meta.materials );\r\n\t\t\tvar textures = extractFromCache( meta.textures );\r\n\t\t\tvar images = extractFromCache( meta.images );\r\n\r\n\t\t\tif ( geometries.length > 0 ) output.geometries = geometries;\r\n\t\t\tif ( materials.length > 0 ) output.materials = materials;\r\n\t\t\tif ( textures.length > 0 ) output.textures = textures;\r\n\t\t\tif ( images.length > 0 ) output.images = images;\r\n\r\n\t\t}\r\n\r\n\t\toutput.object = data;\r\n\r\n\t\treturn output;\r\n\r\n\t\t// extract data from the cache hash\r\n\t\t// remove metadata on each item\r\n\t\t// and return as array\r\n\t\tfunction extractFromCache ( cache ) {\r\n\r\n\t\t\tvar values = [];\r\n\t\t\tfor ( var key in cache ) {\r\n\r\n\t\t\t\tvar data = cache[ key ];\r\n\t\t\t\tdelete data.metadata;\r\n\t\t\t\tvalues.push( data );\r\n\r\n\t\t\t}\r\n\t\t\treturn values;\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tclone: function ( recursive ) {\r\n\r\n\t\treturn new this.constructor().copy( this, recursive );\r\n\r\n\t},\r\n\r\n\tcopy: function ( source, recursive ) {\r\n\r\n\t\tif ( recursive === undefined ) recursive = true;\r\n\r\n\t\tthis.name = source.name;\r\n\r\n\t\tthis.up.copy( source.up );\r\n\r\n\t\tthis.position.copy( source.position );\r\n\t\tthis.quaternion.copy( source.quaternion );\r\n\t\tthis.scale.copy( source.scale );\r\n\r\n\t\tthis.rotationAutoUpdate = source.rotationAutoUpdate;\r\n\r\n\t\tthis.matrix.copy( source.matrix );\r\n\t\tthis.matrixWorld.copy( source.matrixWorld );\r\n\r\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\r\n\t\tthis.matrixWorldNeedsUpdate = source.matrixWorldNeedsUpdate;\r\n\r\n\t\tthis.visible = source.visible;\r\n\r\n\t\tthis.castShadow = source.castShadow;\r\n\t\tthis.receiveShadow = source.receiveShadow;\r\n\r\n\t\tthis.frustumCulled = source.frustumCulled;\r\n\t\tthis.renderOrder = source.renderOrder;\r\n\r\n\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\r\n\r\n\t\tif ( recursive === true ) {\r\n\r\n\t\t\tfor ( var i = 0; i < source.children.length; i ++ ) {\r\n\r\n\t\t\t\tvar child = source.children[ i ];\r\n\t\t\t\tthis.add( child.clone() );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.EventDispatcher.prototype.apply( THREE.Object3D.prototype );\r\n\r\nTHREE.Object3DIdCount = 0;\r\n\r\n// File:src/core/Face3.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.Face3 = function ( a, b, c, normal, color, materialIndex ) {\r\n\r\n\tthis.a = a;\r\n\tthis.b = b;\r\n\tthis.c = c;\r\n\r\n\tthis.normal = normal instanceof THREE.Vector3 ? normal : new THREE.Vector3();\r\n\tthis.vertexNormals = Array.isArray( normal ) ? normal : [];\r\n\r\n\tthis.color = color instanceof THREE.Color ? color : new THREE.Color();\r\n\tthis.vertexColors = Array.isArray( color ) ? color : [];\r\n\r\n\tthis.materialIndex = materialIndex !== undefined ? materialIndex : 0;\r\n\r\n};\r\n\r\nTHREE.Face3.prototype = {\r\n\r\n\tconstructor: THREE.Face3,\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t},\r\n\r\n\tcopy: function ( source ) {\r\n\r\n\t\tthis.a = source.a;\r\n\t\tthis.b = source.b;\r\n\t\tthis.c = source.c;\r\n\r\n\t\tthis.normal.copy( source.normal );\r\n\t\tthis.color.copy( source.color );\r\n\r\n\t\tthis.materialIndex = source.materialIndex;\r\n\r\n\t\tfor ( var i = 0, il = source.vertexNormals.length; i < il; i ++ ) {\r\n\r\n\t\t\tthis.vertexNormals[ i ] = source.vertexNormals[ i ].clone();\r\n\r\n\t\t}\r\n\r\n\t\tfor ( var i = 0, il = source.vertexColors.length; i < il; i ++ ) {\r\n\r\n\t\t\tthis.vertexColors[ i ] = source.vertexColors[ i ].clone();\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/core/Face4.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.Face4 = function ( a, b, c, d, normal, color, materialIndex ) {\r\n\r\n\tconsole.warn( 'THREE.Face4 has been removed. A THREE.Face3 will be created instead.' );\r\n\treturn new THREE.Face3( a, b, c, normal, color, materialIndex );\r\n\r\n};\r\n\r\n// File:src/core/BufferAttribute.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.BufferAttribute = function ( array, itemSize ) {\r\n\r\n\tthis.uuid = THREE.Math.generateUUID();\r\n\r\n\tthis.array = array;\r\n\tthis.itemSize = itemSize;\r\n\r\n\tthis.dynamic = false;\r\n\tthis.updateRange = { offset: 0, count: - 1 };\r\n\r\n\tthis.version = 0;\r\n\r\n};\r\n\r\nTHREE.BufferAttribute.prototype = {\r\n\r\n\tconstructor: THREE.BufferAttribute,\r\n\r\n\tget length() {\r\n\r\n\t\tconsole.warn( 'THREE.BufferAttribute: .length has been deprecated. Please use .count.' );\r\n\t\treturn this.array.length;\r\n\r\n\t},\r\n\r\n\tget count() {\r\n\r\n\t\treturn this.array.length / this.itemSize;\r\n\r\n\t},\r\n\r\n\tset needsUpdate( value ) {\r\n\r\n\t\tif ( value === true ) this.version ++;\r\n\r\n\t},\r\n\r\n\tsetDynamic: function ( value ) {\r\n\r\n\t\tthis.dynamic = value;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcopy: function ( source ) {\r\n\r\n\t\tthis.array = new source.array.constructor( source.array );\r\n\t\tthis.itemSize = source.itemSize;\r\n\r\n\t\tthis.dynamic = source.dynamic;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcopyAt: function ( index1, attribute, index2 ) {\r\n\r\n\t\tindex1 *= this.itemSize;\r\n\t\tindex2 *= attribute.itemSize;\r\n\r\n\t\tfor ( var i = 0, l = this.itemSize; i < l; i ++ ) {\r\n\r\n\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcopyArray: function ( array ) {\r\n\r\n\t\tthis.array.set( array );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcopyColorsArray: function ( colors ) {\r\n\r\n\t\tvar array = this.array, offset = 0;\r\n\r\n\t\tfor ( var i = 0, l = colors.length; i < l; i ++ ) {\r\n\r\n\t\t\tvar color = colors[ i ];\r\n\r\n\t\t\tif ( color === undefined ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyColorsArray(): color is undefined', i );\r\n\t\t\t\tcolor = new THREE.Color();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tarray[ offset ++ ] = color.r;\r\n\t\t\tarray[ offset ++ ] = color.g;\r\n\t\t\tarray[ offset ++ ] = color.b;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcopyIndicesArray: function ( indices ) {\r\n\r\n\t\tvar array = this.array, offset = 0;\r\n\r\n\t\tfor ( var i = 0, l = indices.length; i < l; i ++ ) {\r\n\r\n\t\t\tvar index = indices[ i ];\r\n\r\n\t\t\tarray[ offset ++ ] = index.a;\r\n\t\t\tarray[ offset ++ ] = index.b;\r\n\t\t\tarray[ offset ++ ] = index.c;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcopyVector2sArray: function ( vectors ) {\r\n\r\n\t\tvar array = this.array, offset = 0;\r\n\r\n\t\tfor ( var i = 0, l = vectors.length; i < l; i ++ ) {\r\n\r\n\t\t\tvar vector = vectors[ i ];\r\n\r\n\t\t\tif ( vector === undefined ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyVector2sArray(): vector is undefined', i );\r\n\t\t\t\tvector = new THREE.Vector2();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tarray[ offset ++ ] = vector.x;\r\n\t\t\tarray[ offset ++ ] = vector.y;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcopyVector3sArray: function ( vectors ) {\r\n\r\n\t\tvar array = this.array, offset = 0;\r\n\r\n\t\tfor ( var i = 0, l = vectors.length; i < l; i ++ ) {\r\n\r\n\t\t\tvar vector = vectors[ i ];\r\n\r\n\t\t\tif ( vector === undefined ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyVector3sArray(): vector is undefined', i );\r\n\t\t\t\tvector = new THREE.Vector3();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tarray[ offset ++ ] = vector.x;\r\n\t\t\tarray[ offset ++ ] = vector.y;\r\n\t\t\tarray[ offset ++ ] = vector.z;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcopyVector4sArray: function ( vectors ) {\r\n\r\n\t\tvar array = this.array, offset = 0;\r\n\r\n\t\tfor ( var i = 0, l = vectors.length; i < l; i ++ ) {\r\n\r\n\t\t\tvar vector = vectors[ i ];\r\n\r\n\t\t\tif ( vector === undefined ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyVector4sArray(): vector is undefined', i );\r\n\t\t\t\tvector = new THREE.Vector4();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tarray[ offset ++ ] = vector.x;\r\n\t\t\tarray[ offset ++ ] = vector.y;\r\n\t\t\tarray[ offset ++ ] = vector.z;\r\n\t\t\tarray[ offset ++ ] = vector.w;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tset: function ( value, offset ) {\r\n\r\n\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\tthis.array.set( value, offset );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tgetX: function ( index ) {\r\n\r\n\t\treturn this.array[ index * this.itemSize ];\r\n\r\n\t},\r\n\r\n\tsetX: function ( index, x ) {\r\n\r\n\t\tthis.array[ index * this.itemSize ] = x;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tgetY: function ( index ) {\r\n\r\n\t\treturn this.array[ index * this.itemSize + 1 ];\r\n\r\n\t},\r\n\r\n\tsetY: function ( index, y ) {\r\n\r\n\t\tthis.array[ index * this.itemSize + 1 ] = y;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tgetZ: function ( index ) {\r\n\r\n\t\treturn this.array[ index * this.itemSize + 2 ];\r\n\r\n\t},\r\n\r\n\tsetZ: function ( index, z ) {\r\n\r\n\t\tthis.array[ index * this.itemSize + 2 ] = z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tgetW: function ( index ) {\r\n\r\n\t\treturn this.array[ index * this.itemSize + 3 ];\r\n\r\n\t},\r\n\r\n\tsetW: function ( index, w ) {\r\n\r\n\t\tthis.array[ index * this.itemSize + 3 ] = w;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetXY: function ( index, x, y ) {\r\n\r\n\t\tindex *= this.itemSize;\r\n\r\n\t\tthis.array[ index + 0 ] = x;\r\n\t\tthis.array[ index + 1 ] = y;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetXYZ: function ( index, x, y, z ) {\r\n\r\n\t\tindex *= this.itemSize;\r\n\r\n\t\tthis.array[ index + 0 ] = x;\r\n\t\tthis.array[ index + 1 ] = y;\r\n\t\tthis.array[ index + 2 ] = z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetXYZW: function ( index, x, y, z, w ) {\r\n\r\n\t\tindex *= this.itemSize;\r\n\r\n\t\tthis.array[ index + 0 ] = x;\r\n\t\tthis.array[ index + 1 ] = y;\r\n\t\tthis.array[ index + 2 ] = z;\r\n\t\tthis.array[ index + 3 ] = w;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t}\r\n\r\n};\r\n\r\n//\r\n\r\nTHREE.Int8Attribute = function ( array, itemSize ) {\r\n\r\n\treturn new THREE.BufferAttribute( new Int8Array( array ), itemSize );\r\n\r\n};\r\n\r\nTHREE.Uint8Attribute = function ( array, itemSize ) {\r\n\r\n\treturn new THREE.BufferAttribute( new Uint8Array( array ), itemSize );\r\n\r\n};\r\n\r\nTHREE.Uint8ClampedAttribute = function ( array, itemSize ) {\r\n\r\n\treturn new THREE.BufferAttribute( new Uint8ClampedArray( array ), itemSize );\r\n\r\n};\r\n\r\nTHREE.Int16Attribute = function ( array, itemSize ) {\r\n\r\n\treturn new THREE.BufferAttribute( new Int16Array( array ), itemSize );\r\n\r\n};\r\n\r\nTHREE.Uint16Attribute = function ( array, itemSize ) {\r\n\r\n\treturn new THREE.BufferAttribute( new Uint16Array( array ), itemSize );\r\n\r\n};\r\n\r\nTHREE.Int32Attribute = function ( array, itemSize ) {\r\n\r\n\treturn new THREE.BufferAttribute( new Int32Array( array ), itemSize );\r\n\r\n};\r\n\r\nTHREE.Uint32Attribute = function ( array, itemSize ) {\r\n\r\n\treturn new THREE.BufferAttribute( new Uint32Array( array ), itemSize );\r\n\r\n};\r\n\r\nTHREE.Float32Attribute = function ( array, itemSize ) {\r\n\r\n\treturn new THREE.BufferAttribute( new Float32Array( array ), itemSize );\r\n\r\n};\r\n\r\nTHREE.Float64Attribute = function ( array, itemSize ) {\r\n\r\n\treturn new THREE.BufferAttribute( new Float64Array( array ), itemSize );\r\n\r\n};\r\n\r\n\r\n// Deprecated\r\n\r\nTHREE.DynamicBufferAttribute = function ( array, itemSize ) {\r\n\r\n\tconsole.warn( 'THREE.DynamicBufferAttribute has been removed. Use new THREE.BufferAttribute().setDynamic( true ) instead.' );\r\n\treturn new THREE.BufferAttribute( array, itemSize ).setDynamic( true );\r\n\r\n};\r\n\r\n// File:src/core/InstancedBufferAttribute.js\r\n\r\n/**\r\n * @author benaadams / https://twitter.com/ben_a_adams\r\n */\r\n\r\nTHREE.InstancedBufferAttribute = function ( array, itemSize, meshPerAttribute ) {\r\n\r\n\tTHREE.BufferAttribute.call( this, array, itemSize );\r\n\r\n\tthis.meshPerAttribute = meshPerAttribute || 1;\r\n\r\n};\r\n\r\nTHREE.InstancedBufferAttribute.prototype = Object.create( THREE.BufferAttribute.prototype );\r\nTHREE.InstancedBufferAttribute.prototype.constructor = THREE.InstancedBufferAttribute;\r\n\r\nTHREE.InstancedBufferAttribute.prototype.copy = function ( source ) {\r\n\r\n\tTHREE.BufferAttribute.prototype.copy.call( this, source );\r\n\r\n\tthis.meshPerAttribute = source.meshPerAttribute;\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\n// File:src/core/InterleavedBuffer.js\r\n\r\n/**\r\n * @author benaadams / https://twitter.com/ben_a_adams\r\n */\r\n\r\nTHREE.InterleavedBuffer = function ( array, stride ) {\r\n\r\n\tthis.uuid = THREE.Math.generateUUID();\r\n\r\n\tthis.array = array;\r\n\tthis.stride = stride;\r\n\r\n\tthis.dynamic = false;\r\n\tthis.updateRange = { offset: 0, count: - 1 };\r\n\r\n\tthis.version = 0;\r\n\r\n};\r\n\r\nTHREE.InterleavedBuffer.prototype = {\r\n\r\n\tconstructor: THREE.InterleavedBuffer,\r\n\r\n\tget length () {\r\n\r\n\t\treturn this.array.length;\r\n\r\n\t},\r\n\r\n\tget count () {\r\n\r\n\t\treturn this.array.length / this.stride;\r\n\r\n\t},\r\n\r\n\tset needsUpdate( value ) {\r\n\r\n\t\tif ( value === true ) this.version ++;\r\n\r\n\t},\r\n\r\n\tsetDynamic: function ( value ) {\r\n\r\n\t\tthis.dynamic = value;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcopy: function ( source ) {\r\n\r\n\t\tthis.array = new source.array.constructor( source.array );\r\n\t\tthis.stride = source.stride;\r\n\t\tthis.dynamic = source.dynamic;\r\n\r\n\t},\r\n\r\n\tcopyAt: function ( index1, attribute, index2 ) {\r\n\r\n\t\tindex1 *= this.stride;\r\n\t\tindex2 *= attribute.stride;\r\n\r\n\t\tfor ( var i = 0, l = this.stride; i < l; i ++ ) {\r\n\r\n\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tset: function ( value, offset ) {\r\n\r\n\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\tthis.array.set( value, offset );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/core/InstancedInterleavedBuffer.js\r\n\r\n/**\r\n * @author benaadams / https://twitter.com/ben_a_adams\r\n */\r\n\r\nTHREE.InstancedInterleavedBuffer = function ( array, stride, meshPerAttribute ) {\r\n\r\n\tTHREE.InterleavedBuffer.call( this, array, stride );\r\n\r\n\tthis.meshPerAttribute = meshPerAttribute || 1;\r\n\r\n};\r\n\r\nTHREE.InstancedInterleavedBuffer.prototype = Object.create( THREE.InterleavedBuffer.prototype );\r\nTHREE.InstancedInterleavedBuffer.prototype.constructor = THREE.InstancedInterleavedBuffer;\r\n\r\nTHREE.InstancedInterleavedBuffer.prototype.copy = function ( source ) {\r\n\r\n\tTHREE.InterleavedBuffer.prototype.copy.call( this, source );\r\n\r\n\tthis.meshPerAttribute = source.meshPerAttribute;\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\n// File:src/core/InterleavedBufferAttribute.js\r\n\r\n/**\r\n * @author benaadams / https://twitter.com/ben_a_adams\r\n */\r\n\r\nTHREE.InterleavedBufferAttribute = function ( interleavedBuffer, itemSize, offset ) {\r\n\r\n\tthis.uuid = THREE.Math.generateUUID();\r\n\r\n\tthis.data = interleavedBuffer;\r\n\tthis.itemSize = itemSize;\r\n\tthis.offset = offset;\r\n\r\n};\r\n\r\n\r\nTHREE.InterleavedBufferAttribute.prototype = {\r\n\r\n\tconstructor: THREE.InterleavedBufferAttribute,\r\n\r\n\tget length() {\r\n\r\n\t\tconsole.warn( 'THREE.BufferAttribute: .length has been deprecated. Please use .count.' );\r\n\t\treturn this.array.length;\r\n\r\n\t},\r\n\r\n\tget count() {\r\n\r\n\t\treturn this.data.array.length / this.data.stride;\r\n\r\n\t},\r\n\r\n\tsetX: function ( index, x ) {\r\n\r\n\t\tthis.data.array[ index * this.data.stride + this.offset ] = x;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetY: function ( index, y ) {\r\n\r\n\t\tthis.data.array[ index * this.data.stride + this.offset + 1 ] = y;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetZ: function ( index, z ) {\r\n\r\n\t\tthis.data.array[ index * this.data.stride + this.offset + 2 ] = z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetW: function ( index, w ) {\r\n\r\n\t\tthis.data.array[ index * this.data.stride + this.offset + 3 ] = w;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tgetX: function ( index ) {\r\n\r\n\t\treturn this.data.array[ index * this.data.stride + this.offset ];\r\n\r\n\t},\r\n\r\n\tgetY: function ( index ) {\r\n\r\n\t\treturn this.data.array[ index * this.data.stride + this.offset + 1 ];\r\n\r\n\t},\r\n\r\n\tgetZ: function ( index ) {\r\n\r\n\t\treturn this.data.array[ index * this.data.stride + this.offset + 2 ];\r\n\r\n\t},\r\n\r\n\tgetW: function ( index ) {\r\n\r\n\t\treturn this.data.array[ index * this.data.stride + this.offset + 3 ];\r\n\r\n\t},\r\n\r\n\tsetXY: function ( index, x, y ) {\r\n\r\n\t\tindex = index * this.data.stride + this.offset;\r\n\r\n\t\tthis.data.array[ index + 0 ] = x;\r\n\t\tthis.data.array[ index + 1 ] = y;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetXYZ: function ( index, x, y, z ) {\r\n\r\n\t\tindex = index * this.data.stride + this.offset;\r\n\r\n\t\tthis.data.array[ index + 0 ] = x;\r\n\t\tthis.data.array[ index + 1 ] = y;\r\n\t\tthis.data.array[ index + 2 ] = z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetXYZW: function ( index, x, y, z, w ) {\r\n\r\n\t\tindex = index * this.data.stride + this.offset;\r\n\r\n\t\tthis.data.array[ index + 0 ] = x;\r\n\t\tthis.data.array[ index + 1 ] = y;\r\n\t\tthis.data.array[ index + 2 ] = z;\r\n\t\tthis.data.array[ index + 3 ] = w;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/core/Geometry.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author kile / http://kile.stravaganza.org/\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author zz85 / http://www.lab4games.net/zz85/blog\r\n * @author bhouston / http://exocortex.com\r\n */\r\n\r\nTHREE.Geometry = function () {\r\n\r\n\tObject.defineProperty( this, 'id', { value: THREE.GeometryIdCount ++ } );\r\n\r\n\tthis.uuid = THREE.Math.generateUUID();\r\n\r\n\tthis.name = '';\r\n\tthis.type = 'Geometry';\r\n\r\n\tthis.vertices = [];\r\n\tthis.colors = [];\r\n\tthis.faces = [];\r\n\tthis.faceVertexUvs = [ [] ];\r\n\r\n\tthis.morphTargets = [];\r\n\tthis.morphColors = [];\r\n\tthis.morphNormals = [];\r\n\r\n\tthis.skinWeights = [];\r\n\tthis.skinIndices = [];\r\n\r\n\tthis.lineDistances = [];\r\n\r\n\tthis.boundingBox = null;\r\n\tthis.boundingSphere = null;\r\n\r\n\t// update flags\r\n\r\n\tthis.verticesNeedUpdate = false;\r\n\tthis.elementsNeedUpdate = false;\r\n\tthis.uvsNeedUpdate = false;\r\n\tthis.normalsNeedUpdate = false;\r\n\tthis.colorsNeedUpdate = false;\r\n\tthis.lineDistancesNeedUpdate = false;\r\n\tthis.groupsNeedUpdate = false;\r\n\r\n};\r\n\r\nTHREE.Geometry.prototype = {\r\n\r\n\tconstructor: THREE.Geometry,\r\n\r\n\tapplyMatrix: function ( matrix ) {\r\n\r\n\t\tvar normalMatrix = new THREE.Matrix3().getNormalMatrix( matrix );\r\n\r\n\t\tfor ( var i = 0, il = this.vertices.length; i < il; i ++ ) {\r\n\r\n\t\t\tvar vertex = this.vertices[ i ];\r\n\t\t\tvertex.applyMatrix4( matrix );\r\n\r\n\t\t}\r\n\r\n\t\tfor ( var i = 0, il = this.faces.length; i < il; i ++ ) {\r\n\r\n\t\t\tvar face = this.faces[ i ];\r\n\t\t\tface.normal.applyMatrix3( normalMatrix ).normalize();\r\n\r\n\t\t\tfor ( var j = 0, jl = face.vertexNormals.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\tface.vertexNormals[ j ].applyMatrix3( normalMatrix ).normalize();\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.boundingBox !== null ) {\r\n\r\n\t\t\tthis.computeBoundingBox();\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.boundingSphere !== null ) {\r\n\r\n\t\t\tthis.computeBoundingSphere();\r\n\r\n\t\t}\r\n\r\n\t\tthis.verticesNeedUpdate = true;\r\n\t\tthis.normalsNeedUpdate = true;\r\n\r\n\t},\r\n\r\n\trotateX: function () {\r\n\r\n\t\t// rotate geometry around world x-axis\r\n\r\n\t\tvar m1;\r\n\r\n\t\treturn function rotateX( angle ) {\r\n\r\n\t\t\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\r\n\r\n\t\t\tm1.makeRotationX( angle );\r\n\r\n\t\t\tthis.applyMatrix( m1 );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\trotateY: function () {\r\n\r\n\t\t// rotate geometry around world y-axis\r\n\r\n\t\tvar m1;\r\n\r\n\t\treturn function rotateY( angle ) {\r\n\r\n\t\t\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\r\n\r\n\t\t\tm1.makeRotationY( angle );\r\n\r\n\t\t\tthis.applyMatrix( m1 );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\trotateZ: function () {\r\n\r\n\t\t// rotate geometry around world z-axis\r\n\r\n\t\tvar m1;\r\n\r\n\t\treturn function rotateZ( angle ) {\r\n\r\n\t\t\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\r\n\r\n\t\t\tm1.makeRotationZ( angle );\r\n\r\n\t\t\tthis.applyMatrix( m1 );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\ttranslate: function () {\r\n\r\n\t\t// translate geometry\r\n\r\n\t\tvar m1;\r\n\r\n\t\treturn function translate( x, y, z ) {\r\n\r\n\t\t\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\r\n\r\n\t\t\tm1.makeTranslation( x, y, z );\r\n\r\n\t\t\tthis.applyMatrix( m1 );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tscale: function () {\r\n\r\n\t\t// scale geometry\r\n\r\n\t\tvar m1;\r\n\r\n\t\treturn function scale( x, y, z ) {\r\n\r\n\t\t\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\r\n\r\n\t\t\tm1.makeScale( x, y, z );\r\n\r\n\t\t\tthis.applyMatrix( m1 );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tlookAt: function () {\r\n\r\n\t\tvar obj;\r\n\r\n\t\treturn function lookAt( vector ) {\r\n\r\n\t\t\tif ( obj === undefined ) obj = new THREE.Object3D();\r\n\r\n\t\t\tobj.lookAt( vector );\r\n\r\n\t\t\tobj.updateMatrix();\r\n\r\n\t\t\tthis.applyMatrix( obj.matrix );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tfromBufferGeometry: function ( geometry ) {\r\n\r\n\t\tvar scope = this;\r\n\r\n\t\tvar indices = geometry.index !== null ? geometry.index.array : undefined;\r\n\t\tvar attributes = geometry.attributes;\r\n\r\n\t\tvar vertices = attributes.position.array;\r\n\t\tvar normals = attributes.normal !== undefined ? attributes.normal.array : undefined;\r\n\t\tvar colors = attributes.color !== undefined ? attributes.color.array : undefined;\r\n\t\tvar uvs = attributes.uv !== undefined ? attributes.uv.array : undefined;\r\n\t\tvar uvs2 = attributes.uv2 !== undefined ? attributes.uv2.array : undefined;\r\n\r\n\t\tif ( uvs2 !== undefined ) this.faceVertexUvs[ 1 ] = [];\r\n\r\n\t\tvar tempNormals = [];\r\n\t\tvar tempUVs = [];\r\n\t\tvar tempUVs2 = [];\r\n\r\n\t\tfor ( var i = 0, j = 0, k = 0; i < vertices.length; i += 3, j += 2, k += 4 ) {\r\n\r\n\t\t\tscope.vertices.push( new THREE.Vector3( vertices[ i ], vertices[ i + 1 ], vertices[ i + 2 ] ) );\r\n\r\n\t\t\tif ( normals !== undefined ) {\r\n\r\n\t\t\t\ttempNormals.push( new THREE.Vector3( normals[ i ], normals[ i + 1 ], normals[ i + 2 ] ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( colors !== undefined ) {\r\n\r\n\t\t\t\tscope.colors.push( new THREE.Color( colors[ i ], colors[ i + 1 ], colors[ i + 2 ] ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( uvs !== undefined ) {\r\n\r\n\t\t\t\ttempUVs.push( new THREE.Vector2( uvs[ j ], uvs[ j + 1 ] ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( uvs2 !== undefined ) {\r\n\r\n\t\t\t\ttempUVs2.push( new THREE.Vector2( uvs2[ j ], uvs2[ j + 1 ] ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tvar addFace = function ( a, b, c ) {\r\n\r\n\t\t\tvar vertexNormals = normals !== undefined ? [ tempNormals[ a ].clone(), tempNormals[ b ].clone(), tempNormals[ c ].clone() ] : [];\r\n\t\t\tvar vertexColors = colors !== undefined ? [ scope.colors[ a ].clone(), scope.colors[ b ].clone(), scope.colors[ c ].clone() ] : [];\r\n\r\n\t\t\tvar face = new THREE.Face3( a, b, c, vertexNormals, vertexColors );\r\n\r\n\t\t\tscope.faces.push( face );\r\n\r\n\t\t\tif ( uvs !== undefined ) {\r\n\r\n\t\t\t\tscope.faceVertexUvs[ 0 ].push( [ tempUVs[ a ].clone(), tempUVs[ b ].clone(), tempUVs[ c ].clone() ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( uvs2 !== undefined ) {\r\n\r\n\t\t\t\tscope.faceVertexUvs[ 1 ].push( [ tempUVs2[ a ].clone(), tempUVs2[ b ].clone(), tempUVs2[ c ].clone() ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t};\r\n\r\n\t\tif ( indices !== undefined ) {\r\n\r\n\t\t\tvar groups = geometry.groups;\r\n\r\n\t\t\tif ( groups.length > 0 ) {\r\n\r\n\t\t\t\tfor ( var i = 0; i < groups.length; i ++ ) {\r\n\r\n\t\t\t\t\tvar group = groups[ i ];\r\n\r\n\t\t\t\t\tvar start = group.start;\r\n\t\t\t\t\tvar count = group.count;\r\n\r\n\t\t\t\t\tfor ( var j = start, jl = start + count; j < jl; j += 3 ) {\r\n\r\n\t\t\t\t\t\taddFace( indices[ j ], indices[ j + 1 ], indices[ j + 2 ] );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tfor ( var i = 0; i < indices.length; i += 3 ) {\r\n\r\n\t\t\t\t\taddFace( indices[ i ], indices[ i + 1 ], indices[ i + 2 ] );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\tfor ( var i = 0; i < vertices.length / 3; i += 3 ) {\r\n\r\n\t\t\t\taddFace( i, i + 1, i + 2 );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tthis.computeFaceNormals();\r\n\r\n\t\tif ( geometry.boundingBox !== null ) {\r\n\r\n\t\t\tthis.boundingBox = geometry.boundingBox.clone();\r\n\r\n\t\t}\r\n\r\n\t\tif ( geometry.boundingSphere !== null ) {\r\n\r\n\t\t\tthis.boundingSphere = geometry.boundingSphere.clone();\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcenter: function () {\r\n\r\n\t\tthis.computeBoundingBox();\r\n\r\n\t\tvar offset = this.boundingBox.center().negate();\r\n\r\n\t\tthis.translate( offset.x, offset.y, offset.z );\r\n\r\n\t\treturn offset;\r\n\r\n\t},\r\n\r\n\tnormalize: function () {\r\n\r\n\t\tthis.computeBoundingSphere();\r\n\r\n\t\tvar center = this.boundingSphere.center;\r\n\t\tvar radius = this.boundingSphere.radius;\r\n\r\n\t\tvar s = radius === 0 ? 1 : 1.0 / radius;\r\n\r\n\t\tvar matrix = new THREE.Matrix4();\r\n\t\tmatrix.set(\r\n\t\t\ts, 0, 0, - s * center.x,\r\n\t\t\t0, s, 0, - s * center.y,\r\n\t\t\t0, 0, s, - s * center.z,\r\n\t\t\t0, 0, 0, 1\r\n\t\t);\r\n\r\n\t\tthis.applyMatrix( matrix );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcomputeFaceNormals: function () {\r\n\r\n\t\tvar cb = new THREE.Vector3(), ab = new THREE.Vector3();\r\n\r\n\t\tfor ( var f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\r\n\t\t\tvar face = this.faces[ f ];\r\n\r\n\t\t\tvar vA = this.vertices[ face.a ];\r\n\t\t\tvar vB = this.vertices[ face.b ];\r\n\t\t\tvar vC = this.vertices[ face.c ];\r\n\r\n\t\t\tcb.subVectors( vC, vB );\r\n\t\t\tab.subVectors( vA, vB );\r\n\t\t\tcb.cross( ab );\r\n\r\n\t\t\tcb.normalize();\r\n\r\n\t\t\tface.normal.copy( cb );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tcomputeVertexNormals: function ( areaWeighted ) {\r\n\r\n\t\tvar v, vl, f, fl, face, vertices;\r\n\r\n\t\tvertices = new Array( this.vertices.length );\r\n\r\n\t\tfor ( v = 0, vl = this.vertices.length; v < vl; v ++ ) {\r\n\r\n\t\t\tvertices[ v ] = new THREE.Vector3();\r\n\r\n\t\t}\r\n\r\n\t\tif ( areaWeighted ) {\r\n\r\n\t\t\t// vertex normals weighted by triangle areas\r\n\t\t\t// http://www.iquilezles.org/www/articles/normals/normals.htm\r\n\r\n\t\t\tvar vA, vB, vC;\r\n\t\t\tvar cb = new THREE.Vector3(), ab = new THREE.Vector3();\r\n\r\n\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\r\n\t\t\t\tface = this.faces[ f ];\r\n\r\n\t\t\t\tvA = this.vertices[ face.a ];\r\n\t\t\t\tvB = this.vertices[ face.b ];\r\n\t\t\t\tvC = this.vertices[ face.c ];\r\n\r\n\t\t\t\tcb.subVectors( vC, vB );\r\n\t\t\t\tab.subVectors( vA, vB );\r\n\t\t\t\tcb.cross( ab );\r\n\r\n\t\t\t\tvertices[ face.a ].add( cb );\r\n\t\t\t\tvertices[ face.b ].add( cb );\r\n\t\t\t\tvertices[ face.c ].add( cb );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\r\n\t\t\t\tface = this.faces[ f ];\r\n\r\n\t\t\t\tvertices[ face.a ].add( face.normal );\r\n\t\t\t\tvertices[ face.b ].add( face.normal );\r\n\t\t\t\tvertices[ face.c ].add( face.normal );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfor ( v = 0, vl = this.vertices.length; v < vl; v ++ ) {\r\n\r\n\t\t\tvertices[ v ].normalize();\r\n\r\n\t\t}\r\n\r\n\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\r\n\t\t\tface = this.faces[ f ];\r\n\r\n\t\t\tvar vertexNormals = face.vertexNormals;\r\n\r\n\t\t\tif ( vertexNormals.length === 3 ) {\r\n\r\n\t\t\t\tvertexNormals[ 0 ].copy( vertices[ face.a ] );\r\n\t\t\t\tvertexNormals[ 1 ].copy( vertices[ face.b ] );\r\n\t\t\t\tvertexNormals[ 2 ].copy( vertices[ face.c ] );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tvertexNormals[ 0 ] = vertices[ face.a ].clone();\r\n\t\t\t\tvertexNormals[ 1 ] = vertices[ face.b ].clone();\r\n\t\t\t\tvertexNormals[ 2 ] = vertices[ face.c ].clone();\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tcomputeMorphNormals: function () {\r\n\r\n\t\tvar i, il, f, fl, face;\r\n\r\n\t\t// save original normals\r\n\t\t// - create temp variables on first access\r\n\t\t//   otherwise just copy (for faster repeated calls)\r\n\r\n\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\r\n\t\t\tface = this.faces[ f ];\r\n\r\n\t\t\tif ( ! face.__originalFaceNormal ) {\r\n\r\n\t\t\t\tface.__originalFaceNormal = face.normal.clone();\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tface.__originalFaceNormal.copy( face.normal );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( ! face.__originalVertexNormals ) face.__originalVertexNormals = [];\r\n\r\n\t\t\tfor ( i = 0, il = face.vertexNormals.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tif ( ! face.__originalVertexNormals[ i ] ) {\r\n\r\n\t\t\t\t\tface.__originalVertexNormals[ i ] = face.vertexNormals[ i ].clone();\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tface.__originalVertexNormals[ i ].copy( face.vertexNormals[ i ] );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// use temp geometry to compute face and vertex normals for each morph\r\n\r\n\t\tvar tmpGeo = new THREE.Geometry();\r\n\t\ttmpGeo.faces = this.faces;\r\n\r\n\t\tfor ( i = 0, il = this.morphTargets.length; i < il; i ++ ) {\r\n\r\n\t\t\t// create on first access\r\n\r\n\t\t\tif ( ! this.morphNormals[ i ] ) {\r\n\r\n\t\t\t\tthis.morphNormals[ i ] = {};\r\n\t\t\t\tthis.morphNormals[ i ].faceNormals = [];\r\n\t\t\t\tthis.morphNormals[ i ].vertexNormals = [];\r\n\r\n\t\t\t\tvar dstNormalsFace = this.morphNormals[ i ].faceNormals;\r\n\t\t\t\tvar dstNormalsVertex = this.morphNormals[ i ].vertexNormals;\r\n\r\n\t\t\t\tvar faceNormal, vertexNormals;\r\n\r\n\t\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\r\n\t\t\t\t\tfaceNormal = new THREE.Vector3();\r\n\t\t\t\t\tvertexNormals = { a: new THREE.Vector3(), b: new THREE.Vector3(), c: new THREE.Vector3() };\r\n\r\n\t\t\t\t\tdstNormalsFace.push( faceNormal );\r\n\t\t\t\t\tdstNormalsVertex.push( vertexNormals );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar morphNormals = this.morphNormals[ i ];\r\n\r\n\t\t\t// set vertices to morph target\r\n\r\n\t\t\ttmpGeo.vertices = this.morphTargets[ i ].vertices;\r\n\r\n\t\t\t// compute morph normals\r\n\r\n\t\t\ttmpGeo.computeFaceNormals();\r\n\t\t\ttmpGeo.computeVertexNormals();\r\n\r\n\t\t\t// store morph normals\r\n\r\n\t\t\tvar faceNormal, vertexNormals;\r\n\r\n\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\r\n\t\t\t\tface = this.faces[ f ];\r\n\r\n\t\t\t\tfaceNormal = morphNormals.faceNormals[ f ];\r\n\t\t\t\tvertexNormals = morphNormals.vertexNormals[ f ];\r\n\r\n\t\t\t\tfaceNormal.copy( face.normal );\r\n\r\n\t\t\t\tvertexNormals.a.copy( face.vertexNormals[ 0 ] );\r\n\t\t\t\tvertexNormals.b.copy( face.vertexNormals[ 1 ] );\r\n\t\t\t\tvertexNormals.c.copy( face.vertexNormals[ 2 ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// restore original normals\r\n\r\n\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\r\n\t\t\tface = this.faces[ f ];\r\n\r\n\t\t\tface.normal = face.__originalFaceNormal;\r\n\t\t\tface.vertexNormals = face.__originalVertexNormals;\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tcomputeTangents: function () {\r\n\r\n\t\tconsole.warn( 'THREE.Geometry: .computeTangents() has been removed.' );\r\n\r\n\t},\r\n\r\n\tcomputeLineDistances: function () {\r\n\r\n\t\tvar d = 0;\r\n\t\tvar vertices = this.vertices;\r\n\r\n\t\tfor ( var i = 0, il = vertices.length; i < il; i ++ ) {\r\n\r\n\t\t\tif ( i > 0 ) {\r\n\r\n\t\t\t\td += vertices[ i ].distanceTo( vertices[ i - 1 ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.lineDistances[ i ] = d;\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tcomputeBoundingBox: function () {\r\n\r\n\t\tif ( this.boundingBox === null ) {\r\n\r\n\t\t\tthis.boundingBox = new THREE.Box3();\r\n\r\n\t\t}\r\n\r\n\t\tthis.boundingBox.setFromPoints( this.vertices );\r\n\r\n\t},\r\n\r\n\tcomputeBoundingSphere: function () {\r\n\r\n\t\tif ( this.boundingSphere === null ) {\r\n\r\n\t\t\tthis.boundingSphere = new THREE.Sphere();\r\n\r\n\t\t}\r\n\r\n\t\tthis.boundingSphere.setFromPoints( this.vertices );\r\n\r\n\t},\r\n\r\n\tmerge: function ( geometry, matrix, materialIndexOffset ) {\r\n\r\n\t\tif ( geometry instanceof THREE.Geometry === false ) {\r\n\r\n\t\t\tconsole.error( 'THREE.Geometry.merge(): geometry not an instance of THREE.Geometry.', geometry );\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tvar normalMatrix,\r\n\t\tvertexOffset = this.vertices.length,\r\n\t\tvertices1 = this.vertices,\r\n\t\tvertices2 = geometry.vertices,\r\n\t\tfaces1 = this.faces,\r\n\t\tfaces2 = geometry.faces,\r\n\t\tuvs1 = this.faceVertexUvs[ 0 ],\r\n\t\tuvs2 = geometry.faceVertexUvs[ 0 ];\r\n\r\n\t\tif ( materialIndexOffset === undefined ) materialIndexOffset = 0;\r\n\r\n\t\tif ( matrix !== undefined ) {\r\n\r\n\t\t\tnormalMatrix = new THREE.Matrix3().getNormalMatrix( matrix );\r\n\r\n\t\t}\r\n\r\n\t\t// vertices\r\n\r\n\t\tfor ( var i = 0, il = vertices2.length; i < il; i ++ ) {\r\n\r\n\t\t\tvar vertex = vertices2[ i ];\r\n\r\n\t\t\tvar vertexCopy = vertex.clone();\r\n\r\n\t\t\tif ( matrix !== undefined ) vertexCopy.applyMatrix4( matrix );\r\n\r\n\t\t\tvertices1.push( vertexCopy );\r\n\r\n\t\t}\r\n\r\n\t\t// faces\r\n\r\n\t\tfor ( i = 0, il = faces2.length; i < il; i ++ ) {\r\n\r\n\t\t\tvar face = faces2[ i ], faceCopy, normal, color,\r\n\t\t\tfaceVertexNormals = face.vertexNormals,\r\n\t\t\tfaceVertexColors = face.vertexColors;\r\n\r\n\t\t\tfaceCopy = new THREE.Face3( face.a + vertexOffset, face.b + vertexOffset, face.c + vertexOffset );\r\n\t\t\tfaceCopy.normal.copy( face.normal );\r\n\r\n\t\t\tif ( normalMatrix !== undefined ) {\r\n\r\n\t\t\t\tfaceCopy.normal.applyMatrix3( normalMatrix ).normalize();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfor ( var j = 0, jl = faceVertexNormals.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\tnormal = faceVertexNormals[ j ].clone();\r\n\r\n\t\t\t\tif ( normalMatrix !== undefined ) {\r\n\r\n\t\t\t\t\tnormal.applyMatrix3( normalMatrix ).normalize();\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfaceCopy.vertexNormals.push( normal );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfaceCopy.color.copy( face.color );\r\n\r\n\t\t\tfor ( var j = 0, jl = faceVertexColors.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\tcolor = faceVertexColors[ j ];\r\n\t\t\t\tfaceCopy.vertexColors.push( color.clone() );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfaceCopy.materialIndex = face.materialIndex + materialIndexOffset;\r\n\r\n\t\t\tfaces1.push( faceCopy );\r\n\r\n\t\t}\r\n\r\n\t\t// uvs\r\n\r\n\t\tfor ( i = 0, il = uvs2.length; i < il; i ++ ) {\r\n\r\n\t\t\tvar uv = uvs2[ i ], uvCopy = [];\r\n\r\n\t\t\tif ( uv === undefined ) {\r\n\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfor ( var j = 0, jl = uv.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\tuvCopy.push( uv[ j ].clone() );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tuvs1.push( uvCopy );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tmergeMesh: function ( mesh ) {\r\n\r\n\t\tif ( mesh instanceof THREE.Mesh === false ) {\r\n\r\n\t\t\tconsole.error( 'THREE.Geometry.mergeMesh(): mesh not an instance of THREE.Mesh.', mesh );\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tmesh.matrixAutoUpdate && mesh.updateMatrix();\r\n\r\n\t\tthis.merge( mesh.geometry, mesh.matrix );\r\n\r\n\t},\r\n\r\n\t/*\r\n\t * Checks for duplicate vertices with hashmap.\r\n\t * Duplicated vertices are removed\r\n\t * and faces' vertices are updated.\r\n\t */\r\n\r\n\tmergeVertices: function () {\r\n\r\n\t\tvar verticesMap = {}; // Hashmap for looking up vertices by position coordinates (and making sure they are unique)\r\n\t\tvar unique = [], changes = [];\r\n\r\n\t\tvar v, key;\r\n\t\tvar precisionPoints = 4; // number of decimal points, e.g. 4 for epsilon of 0.0001\r\n\t\tvar precision = Math.pow( 10, precisionPoints );\r\n\t\tvar i, il, face;\r\n\t\tvar indices, j, jl;\r\n\r\n\t\tfor ( i = 0, il = this.vertices.length; i < il; i ++ ) {\r\n\r\n\t\t\tv = this.vertices[ i ];\r\n\t\t\tkey = Math.round( v.x * precision ) + '_' + Math.round( v.y * precision ) + '_' + Math.round( v.z * precision );\r\n\r\n\t\t\tif ( verticesMap[ key ] === undefined ) {\r\n\r\n\t\t\t\tverticesMap[ key ] = i;\r\n\t\t\t\tunique.push( this.vertices[ i ] );\r\n\t\t\t\tchanges[ i ] = unique.length - 1;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t//console.log('Duplicate vertex found. ', i, ' could be using ', verticesMap[key]);\r\n\t\t\t\tchanges[ i ] = changes[ verticesMap[ key ] ];\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\r\n\t\t// if faces are completely degenerate after merging vertices, we\r\n\t\t// have to remove them from the geometry.\r\n\t\tvar faceIndicesToRemove = [];\r\n\r\n\t\tfor ( i = 0, il = this.faces.length; i < il; i ++ ) {\r\n\r\n\t\t\tface = this.faces[ i ];\r\n\r\n\t\t\tface.a = changes[ face.a ];\r\n\t\t\tface.b = changes[ face.b ];\r\n\t\t\tface.c = changes[ face.c ];\r\n\r\n\t\t\tindices = [ face.a, face.b, face.c ];\r\n\r\n\t\t\tvar dupIndex = - 1;\r\n\r\n\t\t\t// if any duplicate vertices are found in a Face3\r\n\t\t\t// we have to remove the face as nothing can be saved\r\n\t\t\tfor ( var n = 0; n < 3; n ++ ) {\r\n\r\n\t\t\t\tif ( indices[ n ] === indices[ ( n + 1 ) % 3 ] ) {\r\n\r\n\t\t\t\t\tdupIndex = n;\r\n\t\t\t\t\tfaceIndicesToRemove.push( i );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfor ( i = faceIndicesToRemove.length - 1; i >= 0; i -- ) {\r\n\r\n\t\t\tvar idx = faceIndicesToRemove[ i ];\r\n\r\n\t\t\tthis.faces.splice( idx, 1 );\r\n\r\n\t\t\tfor ( j = 0, jl = this.faceVertexUvs.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\tthis.faceVertexUvs[ j ].splice( idx, 1 );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// Use unique set of vertices\r\n\r\n\t\tvar diff = this.vertices.length - unique.length;\r\n\t\tthis.vertices = unique;\r\n\t\treturn diff;\r\n\r\n\t},\r\n\r\n\ttoJSON: function () {\r\n\r\n\t\tvar data = {\r\n\t\t\tmetadata: {\r\n\t\t\t\tversion: 4.4,\r\n\t\t\t\ttype: 'Geometry',\r\n\t\t\t\tgenerator: 'Geometry.toJSON'\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t// standard Geometry serialization\r\n\r\n\t\tdata.uuid = this.uuid;\r\n\t\tdata.type = this.type;\r\n\t\tif ( this.name !== '' ) data.name = this.name;\r\n\r\n\t\tif ( this.parameters !== undefined ) {\r\n\r\n\t\t\tvar parameters = this.parameters;\r\n\r\n\t\t\tfor ( var key in parameters ) {\r\n\r\n\t\t\t\tif ( parameters[ key ] !== undefined ) data[ key ] = parameters[ key ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn data;\r\n\r\n\t\t}\r\n\r\n\t\tvar vertices = [];\r\n\r\n\t\tfor ( var i = 0; i < this.vertices.length; i ++ ) {\r\n\r\n\t\t\tvar vertex = this.vertices[ i ];\r\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\r\n\r\n\t\t}\r\n\r\n\t\tvar faces = [];\r\n\t\tvar normals = [];\r\n\t\tvar normalsHash = {};\r\n\t\tvar colors = [];\r\n\t\tvar colorsHash = {};\r\n\t\tvar uvs = [];\r\n\t\tvar uvsHash = {};\r\n\r\n\t\tfor ( var i = 0; i < this.faces.length; i ++ ) {\r\n\r\n\t\t\tvar face = this.faces[ i ];\r\n\r\n\t\t\tvar hasMaterial = false; // face.materialIndex !== undefined;\r\n\t\t\tvar hasFaceUv = false; // deprecated\r\n\t\t\tvar hasFaceVertexUv = this.faceVertexUvs[ 0 ][ i ] !== undefined;\r\n\t\t\tvar hasFaceNormal = face.normal.length() > 0;\r\n\t\t\tvar hasFaceVertexNormal = face.vertexNormals.length > 0;\r\n\t\t\tvar hasFaceColor = face.color.r !== 1 || face.color.g !== 1 || face.color.b !== 1;\r\n\t\t\tvar hasFaceVertexColor = face.vertexColors.length > 0;\r\n\r\n\t\t\tvar faceType = 0;\r\n\r\n\t\t\tfaceType = setBit( faceType, 0, 0 );\r\n\t\t\tfaceType = setBit( faceType, 1, hasMaterial );\r\n\t\t\tfaceType = setBit( faceType, 2, hasFaceUv );\r\n\t\t\tfaceType = setBit( faceType, 3, hasFaceVertexUv );\r\n\t\t\tfaceType = setBit( faceType, 4, hasFaceNormal );\r\n\t\t\tfaceType = setBit( faceType, 5, hasFaceVertexNormal );\r\n\t\t\tfaceType = setBit( faceType, 6, hasFaceColor );\r\n\t\t\tfaceType = setBit( faceType, 7, hasFaceVertexColor );\r\n\r\n\t\t\tfaces.push( faceType );\r\n\t\t\tfaces.push( face.a, face.b, face.c );\r\n\r\n\t\t\tif ( hasFaceVertexUv ) {\r\n\r\n\t\t\t\tvar faceVertexUvs = this.faceVertexUvs[ 0 ][ i ];\r\n\r\n\t\t\t\tfaces.push(\r\n\t\t\t\t\tgetUvIndex( faceVertexUvs[ 0 ] ),\r\n\t\t\t\t\tgetUvIndex( faceVertexUvs[ 1 ] ),\r\n\t\t\t\t\tgetUvIndex( faceVertexUvs[ 2 ] )\r\n\t\t\t\t);\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( hasFaceNormal ) {\r\n\r\n\t\t\t\tfaces.push( getNormalIndex( face.normal ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( hasFaceVertexNormal ) {\r\n\r\n\t\t\t\tvar vertexNormals = face.vertexNormals;\r\n\r\n\t\t\t\tfaces.push(\r\n\t\t\t\t\tgetNormalIndex( vertexNormals[ 0 ] ),\r\n\t\t\t\t\tgetNormalIndex( vertexNormals[ 1 ] ),\r\n\t\t\t\t\tgetNormalIndex( vertexNormals[ 2 ] )\r\n\t\t\t\t);\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( hasFaceColor ) {\r\n\r\n\t\t\t\tfaces.push( getColorIndex( face.color ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( hasFaceVertexColor ) {\r\n\r\n\t\t\t\tvar vertexColors = face.vertexColors;\r\n\r\n\t\t\t\tfaces.push(\r\n\t\t\t\t\tgetColorIndex( vertexColors[ 0 ] ),\r\n\t\t\t\t\tgetColorIndex( vertexColors[ 1 ] ),\r\n\t\t\t\t\tgetColorIndex( vertexColors[ 2 ] )\r\n\t\t\t\t);\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction setBit( value, position, enabled ) {\r\n\r\n\t\t\treturn enabled ? value | ( 1 << position ) : value & ( ~ ( 1 << position ) );\r\n\r\n\t\t}\r\n\r\n\t\tfunction getNormalIndex( normal ) {\r\n\r\n\t\t\tvar hash = normal.x.toString() + normal.y.toString() + normal.z.toString();\r\n\r\n\t\t\tif ( normalsHash[ hash ] !== undefined ) {\r\n\r\n\t\t\t\treturn normalsHash[ hash ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tnormalsHash[ hash ] = normals.length / 3;\r\n\t\t\tnormals.push( normal.x, normal.y, normal.z );\r\n\r\n\t\t\treturn normalsHash[ hash ];\r\n\r\n\t\t}\r\n\r\n\t\tfunction getColorIndex( color ) {\r\n\r\n\t\t\tvar hash = color.r.toString() + color.g.toString() + color.b.toString();\r\n\r\n\t\t\tif ( colorsHash[ hash ] !== undefined ) {\r\n\r\n\t\t\t\treturn colorsHash[ hash ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tcolorsHash[ hash ] = colors.length;\r\n\t\t\tcolors.push( color.getHex() );\r\n\r\n\t\t\treturn colorsHash[ hash ];\r\n\r\n\t\t}\r\n\r\n\t\tfunction getUvIndex( uv ) {\r\n\r\n\t\t\tvar hash = uv.x.toString() + uv.y.toString();\r\n\r\n\t\t\tif ( uvsHash[ hash ] !== undefined ) {\r\n\r\n\t\t\t\treturn uvsHash[ hash ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tuvsHash[ hash ] = uvs.length / 2;\r\n\t\t\tuvs.push( uv.x, uv.y );\r\n\r\n\t\t\treturn uvsHash[ hash ];\r\n\r\n\t\t}\r\n\r\n\t\tdata.data = {};\r\n\r\n\t\tdata.data.vertices = vertices;\r\n\t\tdata.data.normals = normals;\r\n\t\tif ( colors.length > 0 ) data.data.colors = colors;\r\n\t\tif ( uvs.length > 0 ) data.data.uvs = [ uvs ]; // temporal backward compatibility\r\n\t\tdata.data.faces = faces;\r\n\r\n\t\treturn data;\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t},\r\n\r\n\tcopy: function ( source ) {\r\n\r\n\t\tthis.vertices = [];\r\n\t\tthis.faces = [];\r\n\t\tthis.faceVertexUvs = [ [] ];\r\n\r\n\t\tvar vertices = source.vertices;\r\n\r\n\t\tfor ( var i = 0, il = vertices.length; i < il; i ++ ) {\r\n\r\n\t\t\tthis.vertices.push( vertices[ i ].clone() );\r\n\r\n\t\t}\r\n\r\n\t\tvar faces = source.faces;\r\n\r\n\t\tfor ( var i = 0, il = faces.length; i < il; i ++ ) {\r\n\r\n\t\t\tthis.faces.push( faces[ i ].clone() );\r\n\r\n\t\t}\r\n\r\n\t\tfor ( var i = 0, il = source.faceVertexUvs.length; i < il; i ++ ) {\r\n\r\n\t\t\tvar faceVertexUvs = source.faceVertexUvs[ i ];\r\n\r\n\t\t\tif ( this.faceVertexUvs[ i ] === undefined ) {\r\n\r\n\t\t\t\tthis.faceVertexUvs[ i ] = [];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfor ( var j = 0, jl = faceVertexUvs.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\tvar uvs = faceVertexUvs[ j ], uvsCopy = [];\r\n\r\n\t\t\t\tfor ( var k = 0, kl = uvs.length; k < kl; k ++ ) {\r\n\r\n\t\t\t\t\tvar uv = uvs[ k ];\r\n\r\n\t\t\t\t\tuvsCopy.push( uv.clone() );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.faceVertexUvs[ i ].push( uvsCopy );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tdispose: function () {\r\n\r\n\t\tthis.dispatchEvent( { type: 'dispose' } );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.EventDispatcher.prototype.apply( THREE.Geometry.prototype );\r\n\r\nTHREE.GeometryIdCount = 0;\r\n\r\n// File:src/core/DirectGeometry.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.DirectGeometry = function () {\r\n\r\n\tObject.defineProperty( this, 'id', { value: THREE.GeometryIdCount ++ } );\r\n\r\n\tthis.uuid = THREE.Math.generateUUID();\r\n\r\n\tthis.name = '';\r\n\tthis.type = 'DirectGeometry';\r\n\r\n\tthis.indices = [];\r\n\tthis.vertices = [];\r\n\tthis.normals = [];\r\n\tthis.colors = [];\r\n\tthis.uvs = [];\r\n\tthis.uvs2 = [];\r\n\r\n\tthis.groups = [];\r\n\r\n\tthis.morphTargets = {};\r\n\r\n\tthis.skinWeights = [];\r\n\tthis.skinIndices = [];\r\n\r\n\t// this.lineDistances = [];\r\n\r\n\tthis.boundingBox = null;\r\n\tthis.boundingSphere = null;\r\n\r\n\t// update flags\r\n\r\n\tthis.verticesNeedUpdate = false;\r\n\tthis.normalsNeedUpdate = false;\r\n\tthis.colorsNeedUpdate = false;\r\n\tthis.uvsNeedUpdate = false;\r\n\tthis.groupsNeedUpdate = false;\r\n\r\n};\r\n\r\nTHREE.DirectGeometry.prototype = {\r\n\r\n\tconstructor: THREE.DirectGeometry,\r\n\r\n\tcomputeBoundingBox: THREE.Geometry.prototype.computeBoundingBox,\r\n\tcomputeBoundingSphere: THREE.Geometry.prototype.computeBoundingSphere,\r\n\r\n\tcomputeFaceNormals: function () {\r\n\r\n\t\tconsole.warn( 'THREE.DirectGeometry: computeFaceNormals() is not a method of this type of geometry.' );\r\n\r\n\t},\r\n\r\n\tcomputeVertexNormals: function () {\r\n\r\n\t\tconsole.warn( 'THREE.DirectGeometry: computeVertexNormals() is not a method of this type of geometry.' );\r\n\r\n\t},\r\n\r\n\tcomputeGroups: function ( geometry ) {\r\n\r\n\t\tvar group;\r\n\t\tvar groups = [];\r\n\t\tvar materialIndex;\r\n\r\n\t\tvar faces = geometry.faces;\r\n\r\n\t\tfor ( var i = 0; i < faces.length; i ++ ) {\r\n\r\n\t\t\tvar face = faces[ i ];\r\n\r\n\t\t\t// materials\r\n\r\n\t\t\tif ( face.materialIndex !== materialIndex ) {\r\n\r\n\t\t\t\tmaterialIndex = face.materialIndex;\r\n\r\n\t\t\t\tif ( group !== undefined ) {\r\n\r\n\t\t\t\t\tgroup.count = ( i * 3 ) - group.start;\r\n\t\t\t\t\tgroups.push( group );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tgroup = {\r\n\t\t\t\t\tstart: i * 3,\r\n\t\t\t\t\tmaterialIndex: materialIndex\r\n\t\t\t\t};\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( group !== undefined ) {\r\n\r\n\t\t\tgroup.count = ( i * 3 ) - group.start;\r\n\t\t\tgroups.push( group );\r\n\r\n\t\t}\r\n\r\n\t\tthis.groups = groups;\r\n\r\n\t},\r\n\r\n\tfromGeometry: function ( geometry ) {\r\n\r\n\t\tvar faces = geometry.faces;\r\n\t\tvar vertices = geometry.vertices;\r\n\t\tvar faceVertexUvs = geometry.faceVertexUvs;\r\n\r\n\t\tvar hasFaceVertexUv = faceVertexUvs[ 0 ] && faceVertexUvs[ 0 ].length > 0;\r\n\t\tvar hasFaceVertexUv2 = faceVertexUvs[ 1 ] && faceVertexUvs[ 1 ].length > 0;\r\n\r\n\t\t// morphs\r\n\r\n\t\tvar morphTargets = geometry.morphTargets;\r\n\t\tvar morphTargetsLength = morphTargets.length;\r\n\r\n\t\tif ( morphTargetsLength > 0 ) {\r\n\r\n\t\t\tvar morphTargetsPosition = [];\r\n\r\n\t\t\tfor ( var i = 0; i < morphTargetsLength; i ++ ) {\r\n\r\n\t\t\t\tmorphTargetsPosition[ i ] = [];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.morphTargets.position = morphTargetsPosition;\r\n\r\n\t\t}\r\n\r\n\t\tvar morphNormals = geometry.morphNormals;\r\n\t\tvar morphNormalsLength = morphNormals.length;\r\n\r\n\t\tif ( morphNormalsLength > 0 ) {\r\n\r\n\t\t\tvar morphTargetsNormal = [];\r\n\r\n\t\t\tfor ( var i = 0; i < morphNormalsLength; i ++ ) {\r\n\r\n\t\t\t\tmorphTargetsNormal[ i ] = [];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.morphTargets.normal = morphTargetsNormal;\r\n\r\n\t\t}\r\n\r\n\t\t// skins\r\n\r\n\t\tvar skinIndices = geometry.skinIndices;\r\n\t\tvar skinWeights = geometry.skinWeights;\r\n\r\n\t\tvar hasSkinIndices = skinIndices.length === vertices.length;\r\n\t\tvar hasSkinWeights = skinWeights.length === vertices.length;\r\n\r\n\t\t//\r\n\r\n\t\tfor ( var i = 0; i < faces.length; i ++ ) {\r\n\r\n\t\t\tvar face = faces[ i ];\r\n\r\n\t\t\tthis.vertices.push( vertices[ face.a ], vertices[ face.b ], vertices[ face.c ] );\r\n\r\n\t\t\tvar vertexNormals = face.vertexNormals;\r\n\r\n\t\t\tif ( vertexNormals.length === 3 ) {\r\n\r\n\t\t\t\tthis.normals.push( vertexNormals[ 0 ], vertexNormals[ 1 ], vertexNormals[ 2 ] );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tvar normal = face.normal;\r\n\r\n\t\t\t\tthis.normals.push( normal, normal, normal );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar vertexColors = face.vertexColors;\r\n\r\n\t\t\tif ( vertexColors.length === 3 ) {\r\n\r\n\t\t\t\tthis.colors.push( vertexColors[ 0 ], vertexColors[ 1 ], vertexColors[ 2 ] );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tvar color = face.color;\r\n\r\n\t\t\t\tthis.colors.push( color, color, color );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( hasFaceVertexUv === true ) {\r\n\r\n\t\t\t\tvar vertexUvs = faceVertexUvs[ 0 ][ i ];\r\n\r\n\t\t\t\tif ( vertexUvs !== undefined ) {\r\n\r\n\t\t\t\t\tthis.uvs.push( vertexUvs[ 0 ], vertexUvs[ 1 ], vertexUvs[ 2 ] );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tconsole.warn( 'THREE.DirectGeometry.fromGeometry(): Undefined vertexUv ', i );\r\n\r\n\t\t\t\t\tthis.uvs.push( new THREE.Vector2(), new THREE.Vector2(), new THREE.Vector2() );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( hasFaceVertexUv2 === true ) {\r\n\r\n\t\t\t\tvar vertexUvs = faceVertexUvs[ 1 ][ i ];\r\n\r\n\t\t\t\tif ( vertexUvs !== undefined ) {\r\n\r\n\t\t\t\t\tthis.uvs2.push( vertexUvs[ 0 ], vertexUvs[ 1 ], vertexUvs[ 2 ] );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tconsole.warn( 'THREE.DirectGeometry.fromGeometry(): Undefined vertexUv2 ', i );\r\n\r\n\t\t\t\t\tthis.uvs2.push( new THREE.Vector2(), new THREE.Vector2(), new THREE.Vector2() );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// morphs\r\n\r\n\t\t\tfor ( var j = 0; j < morphTargetsLength; j ++ ) {\r\n\r\n\t\t\t\tvar morphTarget = morphTargets[ j ].vertices;\r\n\r\n\t\t\t\tmorphTargetsPosition[ j ].push( morphTarget[ face.a ], morphTarget[ face.b ], morphTarget[ face.c ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfor ( var j = 0; j < morphNormalsLength; j ++ ) {\r\n\r\n\t\t\t\tvar morphNormal = morphNormals[ j ].vertexNormals[ i ];\r\n\r\n\t\t\t\tmorphTargetsNormal[ j ].push( morphNormal.a, morphNormal.b, morphNormal.c );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// skins\r\n\r\n\t\t\tif ( hasSkinIndices ) {\r\n\r\n\t\t\t\tthis.skinIndices.push( skinIndices[ face.a ], skinIndices[ face.b ], skinIndices[ face.c ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( hasSkinWeights ) {\r\n\r\n\t\t\t\tthis.skinWeights.push( skinWeights[ face.a ], skinWeights[ face.b ], skinWeights[ face.c ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tthis.computeGroups( geometry );\r\n\r\n\t\tthis.verticesNeedUpdate = geometry.verticesNeedUpdate;\r\n\t\tthis.normalsNeedUpdate = geometry.normalsNeedUpdate;\r\n\t\tthis.colorsNeedUpdate = geometry.colorsNeedUpdate;\r\n\t\tthis.uvsNeedUpdate = geometry.uvsNeedUpdate;\r\n\t\tthis.groupsNeedUpdate = geometry.groupsNeedUpdate;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tdispose: function () {\r\n\r\n\t\tthis.dispatchEvent( { type: 'dispose' } );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.EventDispatcher.prototype.apply( THREE.DirectGeometry.prototype );\r\n\r\n// File:src/core/BufferGeometry.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.BufferGeometry = function () {\r\n\r\n\tObject.defineProperty( this, 'id', { value: THREE.GeometryIdCount ++ } );\r\n\r\n\tthis.uuid = THREE.Math.generateUUID();\r\n\r\n\tthis.name = '';\r\n\tthis.type = 'BufferGeometry';\r\n\r\n\tthis.index = null;\r\n\tthis.attributes = {};\r\n\r\n\tthis.morphAttributes = {};\r\n\r\n\tthis.groups = [];\r\n\r\n\tthis.boundingBox = null;\r\n\tthis.boundingSphere = null;\r\n\r\n\tthis.drawRange = { start: 0, count: Infinity };\r\n\r\n};\r\n\r\nTHREE.BufferGeometry.prototype = {\r\n\r\n\tconstructor: THREE.BufferGeometry,\r\n\r\n\taddIndex: function ( index ) {\r\n\r\n\t\tconsole.warn( 'THREE.BufferGeometry: .addIndex() has been renamed to .setIndex().' );\r\n\t\tthis.setIndex( index );\r\n\r\n\t},\r\n\r\n\tgetIndex: function () {\r\n\r\n\t\treturn this.index;\r\n\r\n\t},\r\n\r\n\tsetIndex: function ( index ) {\r\n\r\n\t\tthis.index = index;\r\n\r\n\t},\r\n\r\n\taddAttribute: function ( name, attribute ) {\r\n\r\n\t\tif ( attribute instanceof THREE.BufferAttribute === false && attribute instanceof THREE.InterleavedBufferAttribute === false ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .addAttribute() now expects ( name, attribute ).' );\r\n\r\n\t\t\tthis.addAttribute( name, new THREE.BufferAttribute( arguments[ 1 ], arguments[ 2 ] ) );\r\n\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tif ( name === 'index' ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute.' );\r\n\t\t\tthis.setIndex( attribute );\r\n\r\n\t\t}\r\n\r\n\t\tthis.attributes[ name ] = attribute;\r\n\r\n\t},\r\n\r\n\tgetAttribute: function ( name ) {\r\n\r\n\t\treturn this.attributes[ name ];\r\n\r\n\t},\r\n\r\n\tremoveAttribute: function ( name ) {\r\n\r\n\t\tdelete this.attributes[ name ];\r\n\r\n\t},\r\n\r\n\tget drawcalls() {\r\n\r\n\t\tconsole.error( 'THREE.BufferGeometry: .drawcalls has been renamed to .groups.' );\r\n\t\treturn this.groups;\r\n\r\n\t},\r\n\r\n\tget offsets() {\r\n\r\n\t\tconsole.warn( 'THREE.BufferGeometry: .offsets has been renamed to .groups.' );\r\n\t\treturn this.groups;\r\n\r\n\t},\r\n\r\n\taddDrawCall: function ( start, count, indexOffset ) {\r\n\r\n\t\tif ( indexOffset !== undefined ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset.' );\r\n\r\n\t\t}\r\n\r\n\t\tconsole.warn( 'THREE.BufferGeometry: .addDrawCall() is now .addGroup().' );\r\n\t\tthis.addGroup( start, count );\r\n\r\n\t},\r\n\r\n\tclearDrawCalls: function () {\r\n\r\n\t\tconsole.warn( 'THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups().' );\r\n\t\tthis.clearGroups();\r\n\r\n\t},\r\n\r\n\taddGroup: function ( start, count, materialIndex ) {\r\n\r\n\t\tthis.groups.push( {\r\n\r\n\t\t\tstart: start,\r\n\t\t\tcount: count,\r\n\t\t\tmaterialIndex: materialIndex !== undefined ? materialIndex : 0\r\n\r\n\t\t} );\r\n\r\n\t},\r\n\r\n\tclearGroups: function () {\r\n\r\n\t\tthis.groups = [];\r\n\r\n\t},\r\n\r\n\tsetDrawRange: function ( start, count ) {\r\n\r\n\t\tthis.drawRange.start = start;\r\n\t\tthis.drawRange.count = count;\r\n\r\n\t},\r\n\r\n\tapplyMatrix: function ( matrix ) {\r\n\r\n\t\tvar position = this.attributes.position;\r\n\r\n\t\tif ( position !== undefined ) {\r\n\r\n\t\t\tmatrix.applyToVector3Array( position.array );\r\n\t\t\tposition.needsUpdate = true;\r\n\r\n\t\t}\r\n\r\n\t\tvar normal = this.attributes.normal;\r\n\r\n\t\tif ( normal !== undefined ) {\r\n\r\n\t\t\tvar normalMatrix = new THREE.Matrix3().getNormalMatrix( matrix );\r\n\r\n\t\t\tnormalMatrix.applyToVector3Array( normal.array );\r\n\t\t\tnormal.needsUpdate = true;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.boundingBox !== null ) {\r\n\r\n\t\t\tthis.computeBoundingBox();\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.boundingSphere !== null ) {\r\n\r\n\t\t\tthis.computeBoundingSphere();\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\trotateX: function () {\r\n\r\n\t\t// rotate geometry around world x-axis\r\n\r\n\t\tvar m1;\r\n\r\n\t\treturn function rotateX( angle ) {\r\n\r\n\t\t\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\r\n\r\n\t\t\tm1.makeRotationX( angle );\r\n\r\n\t\t\tthis.applyMatrix( m1 );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\trotateY: function () {\r\n\r\n\t\t// rotate geometry around world y-axis\r\n\r\n\t\tvar m1;\r\n\r\n\t\treturn function rotateY( angle ) {\r\n\r\n\t\t\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\r\n\r\n\t\t\tm1.makeRotationY( angle );\r\n\r\n\t\t\tthis.applyMatrix( m1 );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\trotateZ: function () {\r\n\r\n\t\t// rotate geometry around world z-axis\r\n\r\n\t\tvar m1;\r\n\r\n\t\treturn function rotateZ( angle ) {\r\n\r\n\t\t\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\r\n\r\n\t\t\tm1.makeRotationZ( angle );\r\n\r\n\t\t\tthis.applyMatrix( m1 );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\ttranslate: function () {\r\n\r\n\t\t// translate geometry\r\n\r\n\t\tvar m1;\r\n\r\n\t\treturn function translate( x, y, z ) {\r\n\r\n\t\t\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\r\n\r\n\t\t\tm1.makeTranslation( x, y, z );\r\n\r\n\t\t\tthis.applyMatrix( m1 );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tscale: function () {\r\n\r\n\t\t// scale geometry\r\n\r\n\t\tvar m1;\r\n\r\n\t\treturn function scale( x, y, z ) {\r\n\r\n\t\t\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\r\n\r\n\t\t\tm1.makeScale( x, y, z );\r\n\r\n\t\t\tthis.applyMatrix( m1 );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tlookAt: function () {\r\n\r\n\t\tvar obj;\r\n\r\n\t\treturn function lookAt( vector ) {\r\n\r\n\t\t\tif ( obj === undefined ) obj = new THREE.Object3D();\r\n\r\n\t\t\tobj.lookAt( vector );\r\n\r\n\t\t\tobj.updateMatrix();\r\n\r\n\t\t\tthis.applyMatrix( obj.matrix );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tcenter: function () {\r\n\r\n\t\tthis.computeBoundingBox();\r\n\r\n\t\tvar offset = this.boundingBox.center().negate();\r\n\r\n\t\tthis.translate( offset.x, offset.y, offset.z );\r\n\r\n\t\treturn offset;\r\n\r\n\t},\r\n\r\n\tsetFromObject: function ( object ) {\r\n\r\n\t\t// console.log( 'THREE.BufferGeometry.setFromObject(). Converting', object, this );\r\n\r\n\t\tvar geometry = object.geometry;\r\n\r\n\t\tif ( object instanceof THREE.Points || object instanceof THREE.Line ) {\r\n\r\n\t\t\tvar positions = new THREE.Float32Attribute( geometry.vertices.length * 3, 3 );\r\n\t\t\tvar colors = new THREE.Float32Attribute( geometry.colors.length * 3, 3 );\r\n\r\n\t\t\tthis.addAttribute( 'position', positions.copyVector3sArray( geometry.vertices ) );\r\n\t\t\tthis.addAttribute( 'color', colors.copyColorsArray( geometry.colors ) );\r\n\r\n\t\t\tif ( geometry.lineDistances && geometry.lineDistances.length === geometry.vertices.length ) {\r\n\r\n\t\t\t\tvar lineDistances = new THREE.Float32Attribute( geometry.lineDistances.length, 1 );\r\n\r\n\t\t\t\tthis.addAttribute( 'lineDistance',  lineDistances.copyArray( geometry.lineDistances ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( geometry.boundingSphere !== null ) {\r\n\r\n\t\t\t\tthis.boundingSphere = geometry.boundingSphere.clone();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( geometry.boundingBox !== null ) {\r\n\r\n\t\t\t\tthis.boundingBox = geometry.boundingBox.clone();\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( object instanceof THREE.Mesh ) {\r\n\r\n\t\t\tif ( geometry instanceof THREE.Geometry ) {\r\n\r\n\t\t\t\tthis.fromGeometry( geometry );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tupdateFromObject: function ( object ) {\r\n\r\n\t\tvar geometry = object.geometry;\r\n\r\n\t\tif ( object instanceof THREE.Mesh ) {\r\n\r\n\t\t\tvar direct = geometry.__directGeometry;\r\n\r\n\t\t\tif ( direct === undefined ) {\r\n\r\n\t\t\t\treturn this.fromGeometry( geometry );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tdirect.verticesNeedUpdate = geometry.verticesNeedUpdate;\r\n\t\t\tdirect.normalsNeedUpdate = geometry.normalsNeedUpdate;\r\n\t\t\tdirect.colorsNeedUpdate = geometry.colorsNeedUpdate;\r\n\t\t\tdirect.uvsNeedUpdate = geometry.uvsNeedUpdate;\r\n\t\t\tdirect.groupsNeedUpdate = geometry.groupsNeedUpdate;\r\n\r\n\t\t\tgeometry.verticesNeedUpdate = false;\r\n\t\t\tgeometry.normalsNeedUpdate = false;\r\n\t\t\tgeometry.colorsNeedUpdate = false;\r\n\t\t\tgeometry.uvsNeedUpdate = false;\r\n\t\t\tgeometry.groupsNeedUpdate = false;\r\n\r\n\t\t\tgeometry = direct;\r\n\r\n\t\t}\r\n\r\n\t\tif ( geometry.verticesNeedUpdate === true ) {\r\n\r\n\t\t\tvar attribute = this.attributes.position;\r\n\r\n\t\t\tif ( attribute !== undefined ) {\r\n\r\n\t\t\t\tattribute.copyVector3sArray( geometry.vertices );\r\n\t\t\t\tattribute.needsUpdate = true;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tgeometry.verticesNeedUpdate = false;\r\n\r\n\t\t}\r\n\r\n\t\tif ( geometry.normalsNeedUpdate === true ) {\r\n\r\n\t\t\tvar attribute = this.attributes.normal;\r\n\r\n\t\t\tif ( attribute !== undefined ) {\r\n\r\n\t\t\t\tattribute.copyVector3sArray( geometry.normals );\r\n\t\t\t\tattribute.needsUpdate = true;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tgeometry.normalsNeedUpdate = false;\r\n\r\n\t\t}\r\n\r\n\t\tif ( geometry.colorsNeedUpdate === true ) {\r\n\r\n\t\t\tvar attribute = this.attributes.color;\r\n\r\n\t\t\tif ( attribute !== undefined ) {\r\n\r\n\t\t\t\tattribute.copyColorsArray( geometry.colors );\r\n\t\t\t\tattribute.needsUpdate = true;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tgeometry.colorsNeedUpdate = false;\r\n\r\n\t\t}\r\n\r\n\t\tif ( geometry.lineDistancesNeedUpdate ) {\r\n\r\n\t\t\tvar attribute = this.attributes.lineDistance;\r\n\r\n\t\t\tif ( attribute !== undefined ) {\r\n\r\n\t\t\t\tattribute.copyArray( geometry.lineDistances );\r\n\t\t\t\tattribute.needsUpdate = true;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tgeometry.lineDistancesNeedUpdate = false;\r\n\r\n\t\t}\r\n\r\n\t\tif ( geometry.groupsNeedUpdate ) {\r\n\r\n\t\t\tgeometry.computeGroups( object.geometry );\r\n\t\t\tthis.groups = geometry.groups;\r\n\r\n\t\t\tgeometry.groupsNeedUpdate = false;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tfromGeometry: function ( geometry ) {\r\n\r\n\t\tgeometry.__directGeometry = new THREE.DirectGeometry().fromGeometry( geometry );\r\n\r\n\t\treturn this.fromDirectGeometry( geometry.__directGeometry );\r\n\r\n\t},\r\n\r\n\tfromDirectGeometry: function ( geometry ) {\r\n\r\n\t\tvar positions = new Float32Array( geometry.vertices.length * 3 );\r\n\t\tthis.addAttribute( 'position', new THREE.BufferAttribute( positions, 3 ).copyVector3sArray( geometry.vertices ) );\r\n\r\n\t\tif ( geometry.normals.length > 0 ) {\r\n\r\n\t\t\tvar normals = new Float32Array( geometry.normals.length * 3 );\r\n\t\t\tthis.addAttribute( 'normal', new THREE.BufferAttribute( normals, 3 ).copyVector3sArray( geometry.normals ) );\r\n\r\n\t\t}\r\n\r\n\t\tif ( geometry.colors.length > 0 ) {\r\n\r\n\t\t\tvar colors = new Float32Array( geometry.colors.length * 3 );\r\n\t\t\tthis.addAttribute( 'color', new THREE.BufferAttribute( colors, 3 ).copyColorsArray( geometry.colors ) );\r\n\r\n\t\t}\r\n\r\n\t\tif ( geometry.uvs.length > 0 ) {\r\n\r\n\t\t\tvar uvs = new Float32Array( geometry.uvs.length * 2 );\r\n\t\t\tthis.addAttribute( 'uv', new THREE.BufferAttribute( uvs, 2 ).copyVector2sArray( geometry.uvs ) );\r\n\r\n\t\t}\r\n\r\n\t\tif ( geometry.uvs2.length > 0 ) {\r\n\r\n\t\t\tvar uvs2 = new Float32Array( geometry.uvs2.length * 2 );\r\n\t\t\tthis.addAttribute( 'uv2', new THREE.BufferAttribute( uvs2, 2 ).copyVector2sArray( geometry.uvs2 ) );\r\n\r\n\t\t}\r\n\r\n\t\tif ( geometry.indices.length > 0 ) {\r\n\r\n\t\t\tvar TypeArray = geometry.vertices.length > 65535 ? Uint32Array : Uint16Array;\r\n\t\t\tvar indices = new TypeArray( geometry.indices.length * 3 );\r\n\t\t\tthis.setIndex( new THREE.BufferAttribute( indices, 1 ).copyIndicesArray( geometry.indices ) );\r\n\r\n\t\t}\r\n\r\n\t\t// groups\r\n\r\n\t\tthis.groups = geometry.groups;\r\n\r\n\t\t// morphs\r\n\r\n\t\tfor ( var name in geometry.morphTargets ) {\r\n\r\n\t\t\tvar array = [];\r\n\t\t\tvar morphTargets = geometry.morphTargets[ name ];\r\n\r\n\t\t\tfor ( var i = 0, l = morphTargets.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tvar morphTarget = morphTargets[ i ];\r\n\r\n\t\t\t\tvar attribute = new THREE.Float32Attribute( morphTarget.length * 3, 3 );\r\n\r\n\t\t\t\tarray.push( attribute.copyVector3sArray( morphTarget ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.morphAttributes[ name ] = array;\r\n\r\n\t\t}\r\n\r\n\t\t// skinning\r\n\r\n\t\tif ( geometry.skinIndices.length > 0 ) {\r\n\r\n\t\t\tvar skinIndices = new THREE.Float32Attribute( geometry.skinIndices.length * 4, 4 );\r\n\t\t\tthis.addAttribute( 'skinIndex', skinIndices.copyVector4sArray( geometry.skinIndices ) );\r\n\r\n\t\t}\r\n\r\n\t\tif ( geometry.skinWeights.length > 0 ) {\r\n\r\n\t\t\tvar skinWeights = new THREE.Float32Attribute( geometry.skinWeights.length * 4, 4 );\r\n\t\t\tthis.addAttribute( 'skinWeight', skinWeights.copyVector4sArray( geometry.skinWeights ) );\r\n\r\n\t\t}\r\n\r\n\t\t//\r\n\r\n\t\tif ( geometry.boundingSphere !== null ) {\r\n\r\n\t\t\tthis.boundingSphere = geometry.boundingSphere.clone();\r\n\r\n\t\t}\r\n\r\n\t\tif ( geometry.boundingBox !== null ) {\r\n\r\n\t\t\tthis.boundingBox = geometry.boundingBox.clone();\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcomputeBoundingBox: function () {\r\n\r\n\t\tvar vector = new THREE.Vector3();\r\n\r\n\t\treturn function () {\r\n\r\n\t\t\tif ( this.boundingBox === null ) {\r\n\r\n\t\t\t\tthis.boundingBox = new THREE.Box3();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar positions = this.attributes.position.array;\r\n\r\n\t\t\tif ( positions ) {\r\n\r\n\t\t\t\tvar bb = this.boundingBox;\r\n\t\t\t\tbb.makeEmpty();\r\n\r\n\t\t\t\tfor ( var i = 0, il = positions.length; i < il; i += 3 ) {\r\n\r\n\t\t\t\t\tvector.fromArray( positions, i );\r\n\t\t\t\t\tbb.expandByPoint( vector );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( positions === undefined || positions.length === 0 ) {\r\n\r\n\t\t\t\tthis.boundingBox.min.set( 0, 0, 0 );\r\n\t\t\t\tthis.boundingBox.max.set( 0, 0, 0 );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( isNaN( this.boundingBox.min.x ) || isNaN( this.boundingBox.min.y ) || isNaN( this.boundingBox.min.z ) ) {\r\n\r\n\t\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingBox: Computed min/max have NaN values. The \"position\" attribute is likely to have NaN values.', this );\r\n\r\n\t\t\t}\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tcomputeBoundingSphere: function () {\r\n\r\n\t\tvar box = new THREE.Box3();\r\n\t\tvar vector = new THREE.Vector3();\r\n\r\n\t\treturn function () {\r\n\r\n\t\t\tif ( this.boundingSphere === null ) {\r\n\r\n\t\t\t\tthis.boundingSphere = new THREE.Sphere();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar positions = this.attributes.position.array;\r\n\r\n\t\t\tif ( positions ) {\r\n\r\n\t\t\t\tbox.makeEmpty();\r\n\r\n\t\t\t\tvar center = this.boundingSphere.center;\r\n\r\n\t\t\t\tfor ( var i = 0, il = positions.length; i < il; i += 3 ) {\r\n\r\n\t\t\t\t\tvector.fromArray( positions, i );\r\n\t\t\t\t\tbox.expandByPoint( vector );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tbox.center( center );\r\n\r\n\t\t\t\t// hoping to find a boundingSphere with a radius smaller than the\r\n\t\t\t\t// boundingSphere of the boundingBox: sqrt(3) smaller in the best case\r\n\r\n\t\t\t\tvar maxRadiusSq = 0;\r\n\r\n\t\t\t\tfor ( var i = 0, il = positions.length; i < il; i += 3 ) {\r\n\r\n\t\t\t\t\tvector.fromArray( positions, i );\r\n\t\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( vector ) );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.boundingSphere.radius = Math.sqrt( maxRadiusSq );\r\n\r\n\t\t\t\tif ( isNaN( this.boundingSphere.radius ) ) {\r\n\r\n\t\t\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The \"position\" attribute is likely to have NaN values.', this );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tcomputeFaceNormals: function () {\r\n\r\n\t\t// backwards compatibility\r\n\r\n\t},\r\n\r\n\tcomputeVertexNormals: function () {\r\n\r\n\t\tvar index = this.index;\r\n\t\tvar attributes = this.attributes;\r\n\t\tvar groups = this.groups;\r\n\r\n\t\tif ( attributes.position ) {\r\n\r\n\t\t\tvar positions = attributes.position.array;\r\n\r\n\t\t\tif ( attributes.normal === undefined ) {\r\n\r\n\t\t\t\tthis.addAttribute( 'normal', new THREE.BufferAttribute( new Float32Array( positions.length ), 3 ) );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// reset existing normals to zero\r\n\r\n\t\t\t\tvar normals = attributes.normal.array;\r\n\r\n\t\t\t\tfor ( var i = 0, il = normals.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\tnormals[ i ] = 0;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar normals = attributes.normal.array;\r\n\r\n\t\t\tvar vA, vB, vC,\r\n\r\n\t\t\tpA = new THREE.Vector3(),\r\n\t\t\tpB = new THREE.Vector3(),\r\n\t\t\tpC = new THREE.Vector3(),\r\n\r\n\t\t\tcb = new THREE.Vector3(),\r\n\t\t\tab = new THREE.Vector3();\r\n\r\n\t\t\t// indexed elements\r\n\r\n\t\t\tif ( index ) {\r\n\r\n\t\t\t\tvar indices = index.array;\r\n\r\n\t\t\t\tif ( groups.length === 0 ) {\r\n\r\n\t\t\t\t\tthis.addGroup( 0, indices.length );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfor ( var j = 0, jl = groups.length; j < jl; ++ j ) {\r\n\r\n\t\t\t\t\tvar group = groups[ j ];\r\n\r\n\t\t\t\t\tvar start = group.start;\r\n\t\t\t\t\tvar count = group.count;\r\n\r\n\t\t\t\t\tfor ( var i = start, il = start + count; i < il; i += 3 ) {\r\n\r\n\t\t\t\t\t\tvA = indices[ i + 0 ] * 3;\r\n\t\t\t\t\t\tvB = indices[ i + 1 ] * 3;\r\n\t\t\t\t\t\tvC = indices[ i + 2 ] * 3;\r\n\r\n\t\t\t\t\t\tpA.fromArray( positions, vA );\r\n\t\t\t\t\t\tpB.fromArray( positions, vB );\r\n\t\t\t\t\t\tpC.fromArray( positions, vC );\r\n\r\n\t\t\t\t\t\tcb.subVectors( pC, pB );\r\n\t\t\t\t\t\tab.subVectors( pA, pB );\r\n\t\t\t\t\t\tcb.cross( ab );\r\n\r\n\t\t\t\t\t\tnormals[ vA ] += cb.x;\r\n\t\t\t\t\t\tnormals[ vA + 1 ] += cb.y;\r\n\t\t\t\t\t\tnormals[ vA + 2 ] += cb.z;\r\n\r\n\t\t\t\t\t\tnormals[ vB ] += cb.x;\r\n\t\t\t\t\t\tnormals[ vB + 1 ] += cb.y;\r\n\t\t\t\t\t\tnormals[ vB + 2 ] += cb.z;\r\n\r\n\t\t\t\t\t\tnormals[ vC ] += cb.x;\r\n\t\t\t\t\t\tnormals[ vC + 1 ] += cb.y;\r\n\t\t\t\t\t\tnormals[ vC + 2 ] += cb.z;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// non-indexed elements (unconnected triangle soup)\r\n\r\n\t\t\t\tfor ( var i = 0, il = positions.length; i < il; i += 9 ) {\r\n\r\n\t\t\t\t\tpA.fromArray( positions, i );\r\n\t\t\t\t\tpB.fromArray( positions, i + 3 );\r\n\t\t\t\t\tpC.fromArray( positions, i + 6 );\r\n\r\n\t\t\t\t\tcb.subVectors( pC, pB );\r\n\t\t\t\t\tab.subVectors( pA, pB );\r\n\t\t\t\t\tcb.cross( ab );\r\n\r\n\t\t\t\t\tnormals[ i ] = cb.x;\r\n\t\t\t\t\tnormals[ i + 1 ] = cb.y;\r\n\t\t\t\t\tnormals[ i + 2 ] = cb.z;\r\n\r\n\t\t\t\t\tnormals[ i + 3 ] = cb.x;\r\n\t\t\t\t\tnormals[ i + 4 ] = cb.y;\r\n\t\t\t\t\tnormals[ i + 5 ] = cb.z;\r\n\r\n\t\t\t\t\tnormals[ i + 6 ] = cb.x;\r\n\t\t\t\t\tnormals[ i + 7 ] = cb.y;\r\n\t\t\t\t\tnormals[ i + 8 ] = cb.z;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.normalizeNormals();\r\n\r\n\t\t\tattributes.normal.needsUpdate = true;\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tcomputeTangents: function () {\r\n\r\n\t\tconsole.warn( 'THREE.BufferGeometry: .computeTangents() has been removed.' );\r\n\r\n\t},\r\n\r\n\tcomputeOffsets: function ( size ) {\r\n\r\n\t\tconsole.warn( 'THREE.BufferGeometry: .computeOffsets() has been removed.')\r\n\r\n\t},\r\n\r\n\tmerge: function ( geometry, offset ) {\r\n\r\n\t\tif ( geometry instanceof THREE.BufferGeometry === false ) {\r\n\r\n\t\t\tconsole.error( 'THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.', geometry );\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\tvar attributes = this.attributes;\r\n\r\n\t\tfor ( var key in attributes ) {\r\n\r\n\t\t\tif ( geometry.attributes[ key ] === undefined ) continue;\r\n\r\n\t\t\tvar attribute1 = attributes[ key ];\r\n\t\t\tvar attributeArray1 = attribute1.array;\r\n\r\n\t\t\tvar attribute2 = geometry.attributes[ key ];\r\n\t\t\tvar attributeArray2 = attribute2.array;\r\n\r\n\t\t\tvar attributeSize = attribute2.itemSize;\r\n\r\n\t\t\tfor ( var i = 0, j = attributeSize * offset; i < attributeArray2.length; i ++, j ++ ) {\r\n\r\n\t\t\t\tattributeArray1[ j ] = attributeArray2[ i ];\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tnormalizeNormals: function () {\r\n\r\n\t\tvar normals = this.attributes.normal.array;\r\n\r\n\t\tvar x, y, z, n;\r\n\r\n\t\tfor ( var i = 0, il = normals.length; i < il; i += 3 ) {\r\n\r\n\t\t\tx = normals[ i ];\r\n\t\t\ty = normals[ i + 1 ];\r\n\t\t\tz = normals[ i + 2 ];\r\n\r\n\t\t\tn = 1.0 / Math.sqrt( x * x + y * y + z * z );\r\n\r\n\t\t\tnormals[ i ] *= n;\r\n\t\t\tnormals[ i + 1 ] *= n;\r\n\t\t\tnormals[ i + 2 ] *= n;\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\ttoJSON: function () {\r\n\r\n\t\tvar data = {\r\n\t\t\tmetadata: {\r\n\t\t\t\tversion: 4.4,\r\n\t\t\t\ttype: 'BufferGeometry',\r\n\t\t\t\tgenerator: 'BufferGeometry.toJSON'\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t// standard BufferGeometry serialization\r\n\r\n\t\tdata.uuid = this.uuid;\r\n\t\tdata.type = this.type;\r\n\t\tif ( this.name !== '' ) data.name = this.name;\r\n\r\n\t\tif ( this.parameters !== undefined ) {\r\n\r\n\t\t\tvar parameters = this.parameters;\r\n\r\n\t\t\tfor ( var key in parameters ) {\r\n\r\n\t\t\t\tif ( parameters[ key ] !== undefined ) data[ key ] = parameters[ key ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn data;\r\n\r\n\t\t}\r\n\r\n\t\tdata.data = { attributes: {} };\r\n\r\n\t\tvar index = this.index;\r\n\r\n\t\tif ( index !== null ) {\r\n\r\n\t\t\tvar array = Array.prototype.slice.call( index.array );\r\n\r\n\t\t\tdata.data.index = {\r\n\t\t\t\ttype: index.array.constructor.name,\r\n\t\t\t\tarray: array\r\n\t\t\t};\r\n\r\n\t\t}\r\n\r\n\t\tvar attributes = this.attributes;\r\n\r\n\t\tfor ( var key in attributes ) {\r\n\r\n\t\t\tvar attribute = attributes[ key ];\r\n\r\n\t\t\tvar array = Array.prototype.slice.call( attribute.array );\r\n\r\n\t\t\tdata.data.attributes[ key ] = {\r\n\t\t\t\titemSize: attribute.itemSize,\r\n\t\t\t\ttype: attribute.array.constructor.name,\r\n\t\t\t\tarray: array\r\n\t\t\t};\r\n\r\n\t\t}\r\n\r\n\t\tvar groups = this.groups;\r\n\r\n\t\tif ( groups.length > 0 ) {\r\n\r\n\t\t\tdata.data.groups = JSON.parse( JSON.stringify( groups ) );\r\n\r\n\t\t}\r\n\r\n\t\tvar boundingSphere = this.boundingSphere;\r\n\r\n\t\tif ( boundingSphere !== null ) {\r\n\r\n\t\t\tdata.data.boundingSphere = {\r\n\t\t\t\tcenter: boundingSphere.center.toArray(),\r\n\t\t\t\tradius: boundingSphere.radius\r\n\t\t\t};\r\n\r\n\t\t}\r\n\r\n\t\treturn data;\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t},\r\n\r\n\tcopy: function ( source ) {\r\n\r\n\t\tvar index = source.index;\r\n\r\n\t\tif ( index !== null ) {\r\n\r\n\t\t\tthis.setIndex( index.clone() );\r\n\r\n\t\t}\r\n\r\n\t\tvar attributes = source.attributes;\r\n\r\n\t\tfor ( var name in attributes ) {\r\n\r\n\t\t\tvar attribute = attributes[ name ];\r\n\t\t\tthis.addAttribute( name, attribute.clone() );\r\n\r\n\t\t}\r\n\r\n\t\tvar groups = source.groups;\r\n\r\n\t\tfor ( var i = 0, l = groups.length; i < l; i ++ ) {\r\n\r\n\t\t\tvar group = groups[ i ];\r\n\t\t\tthis.addGroup( group.start, group.count );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tdispose: function () {\r\n\r\n\t\tthis.dispatchEvent( { type: 'dispose' } );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.EventDispatcher.prototype.apply( THREE.BufferGeometry.prototype );\r\n\r\nTHREE.BufferGeometry.MaxIndex = 65535;\r\n\r\n// File:src/core/InstancedBufferGeometry.js\r\n\r\n/**\r\n * @author benaadams / https://twitter.com/ben_a_adams\r\n */\r\n\r\nTHREE.InstancedBufferGeometry = function () {\r\n\r\n\tTHREE.BufferGeometry.call( this );\r\n\r\n\tthis.type = 'InstancedBufferGeometry';\r\n\tthis.maxInstancedCount = undefined;\r\n\r\n};\r\n\r\nTHREE.InstancedBufferGeometry.prototype = Object.create( THREE.BufferGeometry.prototype );\r\nTHREE.InstancedBufferGeometry.prototype.constructor = THREE.InstancedBufferGeometry;\r\n\r\nTHREE.InstancedBufferGeometry.prototype.addGroup = function ( start, count, instances ) {\r\n\r\n\tthis.groups.push( {\r\n\r\n\t\tstart: start,\r\n\t\tcount: count,\r\n\t\tinstances: instances\r\n\r\n\t} );\r\n\r\n};\r\n\r\nTHREE.InstancedBufferGeometry.prototype.copy = function ( source ) {\r\n\r\n\tvar index = source.index;\r\n\r\n\tif ( index !== null ) {\r\n\r\n\t\tthis.setIndex( index.clone() );\r\n\r\n\t}\r\n\r\n\tvar attributes = source.attributes;\r\n\r\n\tfor ( var name in attributes ) {\r\n\r\n\t\tvar attribute = attributes[ name ];\r\n\t\tthis.addAttribute( name, attribute.clone() );\r\n\r\n\t}\r\n\r\n\tvar groups = source.groups;\r\n\r\n\tfor ( var i = 0, l = groups.length; i < l; i ++ ) {\r\n\r\n\t\tvar group = groups[ i ];\r\n\t\tthis.addGroup( group.start, group.count, group.instances );\r\n\r\n\t}\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\nTHREE.EventDispatcher.prototype.apply( THREE.InstancedBufferGeometry.prototype );\r\n\r\n// File:src/cameras/Camera.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author WestLangley / http://github.com/WestLangley\r\n*/\r\n\r\nTHREE.Camera = function () {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.type = 'Camera';\r\n\r\n\tthis.matrixWorldInverse = new THREE.Matrix4();\r\n\tthis.projectionMatrix = new THREE.Matrix4();\r\n\r\n};\r\n\r\nTHREE.Camera.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.Camera.prototype.constructor = THREE.Camera;\r\n\r\nTHREE.Camera.prototype.getWorldDirection = function () {\r\n\r\n\tvar quaternion = new THREE.Quaternion();\r\n\r\n\treturn function ( optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\r\n\t\tthis.getWorldQuaternion( quaternion );\r\n\r\n\t\treturn result.set( 0, 0, - 1 ).applyQuaternion( quaternion );\r\n\r\n\t};\r\n\r\n}();\r\n\r\nTHREE.Camera.prototype.lookAt = function () {\r\n\r\n\t// This routine does not support cameras with rotated and/or translated parent(s)\r\n\r\n\tvar m1 = new THREE.Matrix4();\r\n\r\n\treturn function ( vector ) {\r\n\r\n\t\tm1.lookAt( this.position, vector, this.up );\r\n\r\n\t\tthis.quaternion.setFromRotationMatrix( m1 );\r\n\r\n\t};\r\n\r\n}();\r\n\r\nTHREE.Camera.prototype.clone = function () {\r\n\r\n\treturn new this.constructor().copy( this );\r\n\r\n};\r\n\r\nTHREE.Camera.prototype.copy = function ( source ) {\r\n\r\n\tTHREE.Object3D.prototype.copy.call( this, source );\r\n\r\n\tthis.matrixWorldInverse.copy( source.matrixWorldInverse );\r\n\tthis.projectionMatrix.copy( source.projectionMatrix );\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\n// File:src/cameras/CubeCamera.js\r\n\r\n/**\r\n * Camera for rendering cube maps\r\n *\t- renders scene into axis-aligned cube\r\n *\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.CubeCamera = function ( near, far, cubeResolution ) {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.type = 'CubeCamera';\r\n\r\n\tvar fov = 90, aspect = 1;\r\n\r\n\tvar cameraPX = new THREE.PerspectiveCamera( fov, aspect, near, far );\r\n\tcameraPX.up.set( 0, - 1, 0 );\r\n\tcameraPX.lookAt( new THREE.Vector3( 1, 0, 0 ) );\r\n\tthis.add( cameraPX );\r\n\r\n\tvar cameraNX = new THREE.PerspectiveCamera( fov, aspect, near, far );\r\n\tcameraNX.up.set( 0, - 1, 0 );\r\n\tcameraNX.lookAt( new THREE.Vector3( - 1, 0, 0 ) );\r\n\tthis.add( cameraNX );\r\n\r\n\tvar cameraPY = new THREE.PerspectiveCamera( fov, aspect, near, far );\r\n\tcameraPY.up.set( 0, 0, 1 );\r\n\tcameraPY.lookAt( new THREE.Vector3( 0, 1, 0 ) );\r\n\tthis.add( cameraPY );\r\n\r\n\tvar cameraNY = new THREE.PerspectiveCamera( fov, aspect, near, far );\r\n\tcameraNY.up.set( 0, 0, - 1 );\r\n\tcameraNY.lookAt( new THREE.Vector3( 0, - 1, 0 ) );\r\n\tthis.add( cameraNY );\r\n\r\n\tvar cameraPZ = new THREE.PerspectiveCamera( fov, aspect, near, far );\r\n\tcameraPZ.up.set( 0, - 1, 0 );\r\n\tcameraPZ.lookAt( new THREE.Vector3( 0, 0, 1 ) );\r\n\tthis.add( cameraPZ );\r\n\r\n\tvar cameraNZ = new THREE.PerspectiveCamera( fov, aspect, near, far );\r\n\tcameraNZ.up.set( 0, - 1, 0 );\r\n\tcameraNZ.lookAt( new THREE.Vector3( 0, 0, - 1 ) );\r\n\tthis.add( cameraNZ );\r\n\r\n\tthis.renderTarget = new THREE.WebGLRenderTargetCube( cubeResolution, cubeResolution, { format: THREE.RGBFormat, magFilter: THREE.LinearFilter, minFilter: THREE.LinearFilter } );\r\n\r\n\tthis.updateCubeMap = function ( renderer, scene ) {\r\n\r\n\t\tif ( this.parent === null ) this.updateMatrixWorld();\r\n\r\n\t\tvar renderTarget = this.renderTarget;\r\n\t\tvar generateMipmaps = renderTarget.generateMipmaps;\r\n\r\n\t\trenderTarget.generateMipmaps = false;\r\n\r\n\t\trenderTarget.activeCubeFace = 0;\r\n\t\trenderer.render( scene, cameraPX, renderTarget );\r\n\r\n\t\trenderTarget.activeCubeFace = 1;\r\n\t\trenderer.render( scene, cameraNX, renderTarget );\r\n\r\n\t\trenderTarget.activeCubeFace = 2;\r\n\t\trenderer.render( scene, cameraPY, renderTarget );\r\n\r\n\t\trenderTarget.activeCubeFace = 3;\r\n\t\trenderer.render( scene, cameraNY, renderTarget );\r\n\r\n\t\trenderTarget.activeCubeFace = 4;\r\n\t\trenderer.render( scene, cameraPZ, renderTarget );\r\n\r\n\t\trenderTarget.generateMipmaps = generateMipmaps;\r\n\r\n\t\trenderTarget.activeCubeFace = 5;\r\n\t\trenderer.render( scene, cameraNZ, renderTarget );\r\n\r\n\t\trenderer.setRenderTarget( null );\r\n\r\n\t};\r\n\r\n};\r\n\r\nTHREE.CubeCamera.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.CubeCamera.prototype.constructor = THREE.CubeCamera;\r\n\r\n// File:src/cameras/OrthographicCamera.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.OrthographicCamera = function ( left, right, top, bottom, near, far ) {\r\n\r\n\tTHREE.Camera.call( this );\r\n\r\n\tthis.type = 'OrthographicCamera';\r\n\r\n\tthis.zoom = 1;\r\n\r\n\tthis.left = left;\r\n\tthis.right = right;\r\n\tthis.top = top;\r\n\tthis.bottom = bottom;\r\n\r\n\tthis.near = ( near !== undefined ) ? near : 0.1;\r\n\tthis.far = ( far !== undefined ) ? far : 2000;\r\n\r\n\tthis.updateProjectionMatrix();\r\n\r\n};\r\n\r\nTHREE.OrthographicCamera.prototype = Object.create( THREE.Camera.prototype );\r\nTHREE.OrthographicCamera.prototype.constructor = THREE.OrthographicCamera;\r\n\r\nTHREE.OrthographicCamera.prototype.updateProjectionMatrix = function () {\r\n\r\n\tvar dx = ( this.right - this.left ) / ( 2 * this.zoom );\r\n\tvar dy = ( this.top - this.bottom ) / ( 2 * this.zoom );\r\n\tvar cx = ( this.right + this.left ) / 2;\r\n\tvar cy = ( this.top + this.bottom ) / 2;\r\n\r\n\tthis.projectionMatrix.makeOrthographic( cx - dx, cx + dx, cy + dy, cy - dy, this.near, this.far );\r\n\r\n};\r\n\r\nTHREE.OrthographicCamera.prototype.copy = function ( source ) {\r\n\t\r\n\tTHREE.Camera.prototype.copy.call( this, source );\r\n\t\r\n\tthis.left = source.left;\r\n\tthis.right = source.right;\r\n\tthis.top = source.top;\r\n\tthis.bottom = source.bottom;\r\n\tthis.near = source.near;\r\n\tthis.far = source.far;\r\n\t\r\n\tthis.zoom = source.zoom;\r\n\t\r\n\treturn this;\r\n\t\t\r\n};\r\n\r\nTHREE.OrthographicCamera.prototype.toJSON = function ( meta ) {\r\n\r\n\tvar data = THREE.Object3D.prototype.toJSON.call( this, meta );\r\n\r\n\tdata.object.zoom = this.zoom;\r\n\tdata.object.left = this.left;\r\n\tdata.object.right = this.right;\r\n\tdata.object.top = this.top;\r\n\tdata.object.bottom = this.bottom;\r\n\tdata.object.near = this.near;\r\n\tdata.object.far = this.far;\r\n\r\n\treturn data;\r\n\r\n};\r\n\r\n// File:src/cameras/PerspectiveCamera.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author greggman / http://games.greggman.com/\r\n * @author zz85 / http://www.lab4games.net/zz85/blog\r\n */\r\n\r\nTHREE.PerspectiveCamera = function ( fov, aspect, near, far ) {\r\n\r\n\tTHREE.Camera.call( this );\r\n\r\n\tthis.type = 'PerspectiveCamera';\r\n\r\n\tthis.zoom = 1;\r\n\r\n\tthis.fov = fov !== undefined ? fov : 50;\r\n\tthis.aspect = aspect !== undefined ? aspect : 1;\r\n\tthis.near = near !== undefined ? near : 0.1;\r\n\tthis.far = far !== undefined ? far : 2000;\r\n\r\n\tthis.updateProjectionMatrix();\r\n\r\n};\r\n\r\nTHREE.PerspectiveCamera.prototype = Object.create( THREE.Camera.prototype );\r\nTHREE.PerspectiveCamera.prototype.constructor = THREE.PerspectiveCamera;\r\n\r\n\r\n/**\r\n * Uses Focal Length (in mm) to estimate and set FOV\r\n * 35mm (full-frame) camera is used if frame size is not specified;\r\n * Formula based on http://www.bobatkins.com/photography/technical/field_of_view.html\r\n */\r\n\r\nTHREE.PerspectiveCamera.prototype.setLens = function ( focalLength, frameHeight ) {\r\n\r\n\tif ( frameHeight === undefined ) frameHeight = 24;\r\n\r\n\tthis.fov = 2 * THREE.Math.radToDeg( Math.atan( frameHeight / ( focalLength * 2 ) ) );\r\n\tthis.updateProjectionMatrix();\r\n\r\n};\r\n\r\n\r\n/**\r\n * Sets an offset in a larger frustum. This is useful for multi-window or\r\n * multi-monitor/multi-machine setups.\r\n *\r\n * For example, if you have 3x2 monitors and each monitor is 1920x1080 and\r\n * the monitors are in grid like this\r\n *\r\n *   +---+---+---+\r\n *   | A | B | C |\r\n *   +---+---+---+\r\n *   | D | E | F |\r\n *   +---+---+---+\r\n *\r\n * then for each monitor you would call it like this\r\n *\r\n *   var w = 1920;\r\n *   var h = 1080;\r\n *   var fullWidth = w * 3;\r\n *   var fullHeight = h * 2;\r\n *\r\n *   --A--\r\n *   camera.setOffset( fullWidth, fullHeight, w * 0, h * 0, w, h );\r\n *   --B--\r\n *   camera.setOffset( fullWidth, fullHeight, w * 1, h * 0, w, h );\r\n *   --C--\r\n *   camera.setOffset( fullWidth, fullHeight, w * 2, h * 0, w, h );\r\n *   --D--\r\n *   camera.setOffset( fullWidth, fullHeight, w * 0, h * 1, w, h );\r\n *   --E--\r\n *   camera.setOffset( fullWidth, fullHeight, w * 1, h * 1, w, h );\r\n *   --F--\r\n *   camera.setOffset( fullWidth, fullHeight, w * 2, h * 1, w, h );\r\n *\r\n *   Note there is no reason monitors have to be the same size or in a grid.\r\n */\r\n\r\nTHREE.PerspectiveCamera.prototype.setViewOffset = function ( fullWidth, fullHeight, x, y, width, height ) {\r\n\r\n\tthis.fullWidth = fullWidth;\r\n\tthis.fullHeight = fullHeight;\r\n\tthis.x = x;\r\n\tthis.y = y;\r\n\tthis.width = width;\r\n\tthis.height = height;\r\n\r\n\tthis.updateProjectionMatrix();\r\n\r\n};\r\n\r\n\r\nTHREE.PerspectiveCamera.prototype.updateProjectionMatrix = function () {\r\n\r\n\tvar fov = THREE.Math.radToDeg( 2 * Math.atan( Math.tan( THREE.Math.degToRad( this.fov ) * 0.5 ) / this.zoom ) );\r\n\r\n\tif ( this.fullWidth ) {\r\n\r\n\t\tvar aspect = this.fullWidth / this.fullHeight;\r\n\t\tvar top = Math.tan( THREE.Math.degToRad( fov * 0.5 ) ) * this.near;\r\n\t\tvar bottom = - top;\r\n\t\tvar left = aspect * bottom;\r\n\t\tvar right = aspect * top;\r\n\t\tvar width = Math.abs( right - left );\r\n\t\tvar height = Math.abs( top - bottom );\r\n\r\n\t\tthis.projectionMatrix.makeFrustum(\r\n\t\t\tleft + this.x * width / this.fullWidth,\r\n\t\t\tleft + ( this.x + this.width ) * width / this.fullWidth,\r\n\t\t\ttop - ( this.y + this.height ) * height / this.fullHeight,\r\n\t\t\ttop - this.y * height / this.fullHeight,\r\n\t\t\tthis.near,\r\n\t\t\tthis.far\r\n\t\t);\r\n\r\n\t} else {\r\n\r\n\t\tthis.projectionMatrix.makePerspective( fov, this.aspect, this.near, this.far );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.PerspectiveCamera.prototype.copy = function ( source ) {\r\n\t\r\n\tTHREE.Camera.prototype.copy.call( this, source );\r\n\t\r\n\tthis.fov = source.fov;\r\n\tthis.aspect = source.aspect;\r\n\tthis.near = source.near;\r\n\tthis.far = source.far;\r\n\t\r\n\tthis.zoom = source.zoom;\r\n\t\r\n\treturn this;\r\n\t\t\r\n};\r\n\r\nTHREE.PerspectiveCamera.prototype.toJSON = function ( meta ) {\r\n\r\n\tvar data = THREE.Object3D.prototype.toJSON.call( this, meta );\r\n\r\n\tdata.object.zoom = this.zoom;\r\n\tdata.object.fov = this.fov;\r\n\tdata.object.aspect = this.aspect;\r\n\tdata.object.near = this.near;\r\n\tdata.object.far = this.far;\r\n\r\n\treturn data;\r\n\r\n};\r\n\r\n// File:src/lights/Light.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.Light = function ( color ) {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.type = 'Light';\r\n\r\n\tthis.color = new THREE.Color( color );\r\n\r\n};\r\n\r\nTHREE.Light.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.Light.prototype.constructor = THREE.Light;\r\n\r\nTHREE.Light.prototype.copy = function ( source ) {\r\n\t\r\n\tTHREE.Object3D.prototype.copy.call( this, source );\r\n\t\r\n\tthis.color.copy( source.color );\r\n\t\r\n\treturn this;\r\n\r\n};\r\n// File:src/lights/AmbientLight.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.AmbientLight = function ( color ) {\r\n\r\n\tTHREE.Light.call( this, color );\r\n\r\n\tthis.type = 'AmbientLight';\r\n\r\n};\r\n\r\nTHREE.AmbientLight.prototype = Object.create( THREE.Light.prototype );\r\nTHREE.AmbientLight.prototype.constructor = THREE.AmbientLight;\r\n\r\nTHREE.AmbientLight.prototype.toJSON = function ( meta ) {\r\n\r\n\tvar data = THREE.Object3D.prototype.toJSON.call( this, meta );\r\n\r\n\tdata.object.color = this.color.getHex();\r\n\r\n\treturn data;\r\n\r\n};\r\n\r\n// File:src/lights/DirectionalLight.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.DirectionalLight = function ( color, intensity ) {\r\n\r\n\tTHREE.Light.call( this, color );\r\n\r\n\tthis.type = 'DirectionalLight';\r\n\r\n\tthis.position.set( 0, 1, 0 );\r\n\tthis.updateMatrix();\r\n\r\n\tthis.target = new THREE.Object3D();\r\n\r\n\tthis.intensity = ( intensity !== undefined ) ? intensity : 1;\r\n\r\n\tthis.castShadow = false;\r\n\tthis.onlyShadow = false;\r\n\r\n\tthis.shadowCameraNear = 50;\r\n\tthis.shadowCameraFar = 5000;\r\n\r\n\tthis.shadowCameraLeft = - 500;\r\n\tthis.shadowCameraRight = 500;\r\n\tthis.shadowCameraTop = 500;\r\n\tthis.shadowCameraBottom = - 500;\r\n\r\n\tthis.shadowCameraVisible = false;\r\n\r\n\tthis.shadowBias = 0;\r\n\tthis.shadowDarkness = 0.5;\r\n\r\n\tthis.shadowMapWidth = 512;\r\n\tthis.shadowMapHeight = 512;\r\n\r\n\tthis.shadowMap = null;\r\n\tthis.shadowMapSize = null;\r\n\tthis.shadowCamera = null;\r\n\tthis.shadowMatrix = null;\r\n\r\n};\r\n\r\nTHREE.DirectionalLight.prototype = Object.create( THREE.Light.prototype );\r\nTHREE.DirectionalLight.prototype.constructor = THREE.DirectionalLight;\r\n\r\nTHREE.DirectionalLight.prototype.copy = function ( source ) {\r\n\r\n\tTHREE.Light.prototype.copy.call( this, source );\r\n\r\n\tthis.intensity = source.intensity;\r\n\tthis.target = source.target.clone();\r\n\r\n\tthis.castShadow = source.castShadow;\r\n\tthis.onlyShadow = source.onlyShadow;\r\n\r\n\tthis.shadowCameraNear = source.shadowCameraNear;\r\n\tthis.shadowCameraFar = source.shadowCameraFar;\r\n\r\n\tthis.shadowCameraLeft = source.shadowCameraLeft;\r\n\tthis.shadowCameraRight = source.shadowCameraRight;\r\n\tthis.shadowCameraTop = source.shadowCameraTop;\r\n\tthis.shadowCameraBottom = source.shadowCameraBottom;\r\n\r\n\tthis.shadowCameraVisible = source.shadowCameraVisible;\r\n\r\n\tthis.shadowBias = source.shadowBias;\r\n\tthis.shadowDarkness = source.shadowDarkness;\r\n\r\n\tthis.shadowMapWidth = source.shadowMapWidth;\r\n\tthis.shadowMapHeight = source.shadowMapHeight;\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\nTHREE.DirectionalLight.prototype.toJSON = function ( meta ) {\r\n\r\n\tvar data = THREE.Object3D.prototype.toJSON.call( this, meta );\r\n\r\n\tdata.object.color = this.color.getHex();\r\n\tdata.object.intensity = this.intensity;\r\n\r\n\treturn data;\r\n\r\n};\r\n\r\n// File:src/lights/HemisphereLight.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.HemisphereLight = function ( skyColor, groundColor, intensity ) {\r\n\r\n\tTHREE.Light.call( this, skyColor );\r\n\r\n\tthis.type = 'HemisphereLight';\r\n\r\n\tthis.position.set( 0, 1, 0 );\r\n\tthis.updateMatrix();\r\n\r\n\tthis.groundColor = new THREE.Color( groundColor );\r\n\tthis.intensity = ( intensity !== undefined ) ? intensity : 1;\r\n\r\n};\r\n\r\nTHREE.HemisphereLight.prototype = Object.create( THREE.Light.prototype );\r\nTHREE.HemisphereLight.prototype.constructor = THREE.HemisphereLight;\r\n\r\nTHREE.HemisphereLight.prototype.copy = function ( source ) {\r\n\r\n\tTHREE.Light.prototype.copy.call( this, source );\r\n\r\n\tthis.groundColor.copy( source.groundColor );\r\n\tthis.intensity = source.intensity;\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\nTHREE.HemisphereLight.prototype.toJSON = function ( meta ) {\r\n\r\n\tvar data = THREE.Object3D.prototype.toJSON.call( this, meta );\r\n\r\n\tdata.object.color = this.color.getHex();\r\n\tdata.object.groundColor = this.groundColor.getHex();\r\n\tdata.object.intensity = this.intensity;\r\n\r\n\treturn data;\r\n\r\n};\r\n\r\n// File:src/lights/PointLight.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.PointLight = function ( color, intensity, distance, decay ) {\r\n\r\n\tTHREE.Light.call( this, color );\r\n\r\n\tthis.type = 'PointLight';\r\n\r\n\tthis.intensity = ( intensity !== undefined ) ? intensity : 1;\r\n\tthis.distance = ( distance !== undefined ) ? distance : 0;\r\n\tthis.decay = ( decay !== undefined ) ? decay : 1;\t// for physically correct lights, should be 2.\r\n\r\n};\r\n\r\nTHREE.PointLight.prototype = Object.create( THREE.Light.prototype );\r\nTHREE.PointLight.prototype.constructor = THREE.PointLight;\r\n\r\nTHREE.PointLight.prototype.copy = function ( source ) {\r\n\r\n\tTHREE.Light.prototype.copy.call( this, source );\r\n\r\n\tthis.intensity = source.intensity;\r\n\tthis.distance = source.distance;\r\n\tthis.decay = source.decay;\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\nTHREE.PointLight.prototype.toJSON = function ( meta ) {\r\n\r\n\tvar data = THREE.Object3D.prototype.toJSON.call( this, meta );\r\n\r\n\tdata.object.color = this.color.getHex();\r\n\tdata.object.intensity = this.intensity;\r\n\tdata.object.distance = this.distance;\r\n\tdata.object.decay = this.decay;\r\n\r\n\treturn data;\r\n\r\n};\r\n\r\n// File:src/lights/SpotLight.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.SpotLight = function ( color, intensity, distance, angle, exponent, decay ) {\r\n\r\n\tTHREE.Light.call( this, color );\r\n\r\n\tthis.type = 'SpotLight';\r\n\r\n\tthis.position.set( 0, 1, 0 );\r\n\tthis.updateMatrix();\r\n\r\n\tthis.target = new THREE.Object3D();\r\n\r\n\tthis.intensity = ( intensity !== undefined ) ? intensity : 1;\r\n\tthis.distance = ( distance !== undefined ) ? distance : 0;\r\n\tthis.angle = ( angle !== undefined ) ? angle : Math.PI / 3;\r\n\tthis.exponent = ( exponent !== undefined ) ? exponent : 10;\r\n\tthis.decay = ( decay !== undefined ) ? decay : 1;\t// for physically correct lights, should be 2.\r\n\r\n\tthis.castShadow = false;\r\n\tthis.onlyShadow = false;\r\n\r\n\tthis.shadowCameraNear = 50;\r\n\tthis.shadowCameraFar = 5000;\r\n\tthis.shadowCameraFov = 50;\r\n\r\n\tthis.shadowCameraVisible = false;\r\n\r\n\tthis.shadowBias = 0;\r\n\tthis.shadowDarkness = 0.5;\r\n\r\n\tthis.shadowMapWidth = 512;\r\n\tthis.shadowMapHeight = 512;\r\n\r\n\tthis.shadowMap = null;\r\n\tthis.shadowMapSize = null;\r\n\tthis.shadowCamera = null;\r\n\tthis.shadowMatrix = null;\r\n\r\n};\r\n\r\nTHREE.SpotLight.prototype = Object.create( THREE.Light.prototype );\r\nTHREE.SpotLight.prototype.constructor = THREE.SpotLight;\r\n\r\nTHREE.SpotLight.prototype.copy = function ( source ) {\r\n\r\n\tTHREE.Light.prototype.copy.call( this, source );\r\n\r\n\tthis.intensity = source.intensity;\r\n\tthis.distance = source.distance;\r\n\tthis.angle = source.angle;\r\n\tthis.exponent = source.exponent;\r\n\tthis.decay = source.decay;\r\n\r\n\tthis.target = source.target.clone();\r\n\r\n\tthis.castShadow = source.castShadow;\r\n\tthis.onlyShadow = source.onlyShadow;\r\n\r\n\tthis.shadowCameraNear = source.shadowCameraNear;\r\n\tthis.shadowCameraFar = source.shadowCameraFar;\r\n\tthis.shadowCameraFov = source.shadowCameraFov;\r\n\r\n\tthis.shadowCameraVisible = source.shadowCameraVisible;\r\n\r\n\tthis.shadowBias = source.shadowBias;\r\n\tthis.shadowDarkness = source.shadowDarkness;\r\n\r\n\tthis.shadowMapWidth = source.shadowMapWidth;\r\n\tthis.shadowMapHeight = source.shadowMapHeight;\r\n\r\n\treturn this;\r\n}\r\n\r\nTHREE.SpotLight.prototype.toJSON = function ( meta ) {\r\n\r\n\tvar data = THREE.Object3D.prototype.toJSON.call( this, meta );\r\n\r\n\tdata.object.color = this.color.getHex();\r\n\tdata.object.intensity = this.intensity;\r\n\tdata.object.distance = this.distance;\r\n\tdata.object.angle = this.angle;\r\n\tdata.object.exponent = this.exponent;\r\n\tdata.object.decay = this.decay;\r\n\r\n\treturn data;\r\n\r\n};\r\n\r\n// File:src/loaders/Cache.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.Cache = {\r\n\r\n\tenabled: false,\r\n\r\n\tfiles: {},\r\n\r\n\tadd: function ( key, file ) {\r\n\r\n\t\tif ( this.enabled === false ) return;\r\n\r\n\t\t// console.log( 'THREE.Cache', 'Adding key:', key );\r\n\r\n\t\tthis.files[ key ] = file;\r\n\r\n\t},\r\n\r\n\tget: function ( key ) {\r\n\r\n\t\tif ( this.enabled === false ) return;\r\n\r\n\t\t// console.log( 'THREE.Cache', 'Checking key:', key );\r\n\r\n\t\treturn this.files[ key ];\r\n\r\n\t},\r\n\r\n\tremove: function ( key ) {\r\n\r\n\t\tdelete this.files[ key ];\r\n\r\n\t},\r\n\r\n\tclear: function () {\r\n\r\n\t\tthis.files = {};\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/loaders/Loader.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.Loader = function () {\r\n\r\n\tthis.onLoadStart = function () {};\r\n\tthis.onLoadProgress = function () {};\r\n\tthis.onLoadComplete = function () {};\r\n\r\n};\r\n\r\nTHREE.Loader.prototype = {\r\n\r\n\tconstructor: THREE.Loader,\r\n\r\n\tcrossOrigin: undefined,\r\n\r\n\textractUrlBase: function ( url ) {\r\n\r\n\t\tvar parts = url.split( '/' );\r\n\r\n\t\tif ( parts.length === 1 ) return './';\r\n\r\n\t\tparts.pop();\r\n\r\n\t\treturn parts.join( '/' ) + '/';\r\n\r\n\t},\r\n\r\n\tinitMaterials: function ( materials, texturePath, crossOrigin ) {\r\n\r\n\t\tvar array = [];\r\n\r\n\t\tfor ( var i = 0; i < materials.length; ++ i ) {\r\n\r\n\t\t\tarray[ i ] = this.createMaterial( materials[ i ], texturePath, crossOrigin );\r\n\r\n\t\t}\r\n\r\n\t\treturn array;\r\n\r\n\t},\r\n\r\n\tcreateMaterial: ( function () {\r\n\r\n\t\tvar imageLoader;\r\n\r\n\t\treturn function createMaterial( m, texturePath, crossOrigin ) {\r\n\r\n\t\t\tvar scope = this;\r\n\r\n\t\t\tif ( crossOrigin === undefined && scope.crossOrigin !== undefined ) crossOrigin = scope.crossOrigin;\r\n\r\n\t\t\tif ( imageLoader === undefined ) imageLoader = new THREE.ImageLoader();\r\n\r\n\t\t\tfunction nearest_pow2( n ) {\r\n\r\n\t\t\t\tvar l = Math.log( n ) / Math.LN2;\r\n\t\t\t\treturn Math.pow( 2, Math.round(  l ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfunction create_texture( where, name, sourceFile, repeat, offset, wrap, anisotropy ) {\r\n\r\n\t\t\t\tvar fullPath = texturePath + sourceFile;\r\n\r\n\t\t\t\tvar texture;\r\n\r\n\t\t\t\tvar loader = THREE.Loader.Handlers.get( fullPath );\r\n\r\n\t\t\t\tif ( loader !== null ) {\r\n\r\n\t\t\t\t\ttexture = loader.load( fullPath );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\ttexture = new THREE.Texture();\r\n\r\n\t\t\t\t\tloader = imageLoader;\r\n\t\t\t\t\tloader.setCrossOrigin( crossOrigin );\r\n\t\t\t\t\tloader.load( fullPath, function ( image ) {\r\n\r\n\t\t\t\t\t\tif ( THREE.Math.isPowerOfTwo( image.width ) === false ||\r\n\t\t\t\t\t\t\tTHREE.Math.isPowerOfTwo( image.height ) === false ) {\r\n\r\n\t\t\t\t\t\t\tvar width = nearest_pow2( image.width );\r\n\t\t\t\t\t\t\tvar height = nearest_pow2( image.height );\r\n\r\n\t\t\t\t\t\t\tvar canvas = document.createElement( 'canvas' );\r\n\t\t\t\t\t\t\tcanvas.width = width;\r\n\t\t\t\t\t\t\tcanvas.height = height;\r\n\r\n\t\t\t\t\t\t\tvar context = canvas.getContext( '2d' );\r\n\t\t\t\t\t\t\tcontext.drawImage( image, 0, 0, width, height );\r\n\r\n\t\t\t\t\t\t\ttexture.image = canvas;\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\ttexture.image = image;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\ttexture.needsUpdate = true;\r\n\r\n\t\t\t\t\t} );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttexture.sourceFile = sourceFile;\r\n\r\n\t\t\t\tif ( repeat ) {\r\n\r\n\t\t\t\t\ttexture.repeat.set( repeat[ 0 ], repeat[ 1 ] );\r\n\r\n\t\t\t\t\tif ( repeat[ 0 ] !== 1 ) texture.wrapS = THREE.RepeatWrapping;\r\n\t\t\t\t\tif ( repeat[ 1 ] !== 1 ) texture.wrapT = THREE.RepeatWrapping;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( offset ) {\r\n\r\n\t\t\t\t\ttexture.offset.set( offset[ 0 ], offset[ 1 ] );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( wrap ) {\r\n\r\n\t\t\t\t\tvar wrapMap = {\r\n\t\t\t\t\t\t'repeat': THREE.RepeatWrapping,\r\n\t\t\t\t\t\t'mirror': THREE.MirroredRepeatWrapping\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t\tif ( wrapMap[ wrap[ 0 ] ] !== undefined ) texture.wrapS = wrapMap[ wrap[ 0 ] ];\r\n\t\t\t\t\tif ( wrapMap[ wrap[ 1 ] ] !== undefined ) texture.wrapT = wrapMap[ wrap[ 1 ] ];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( anisotropy ) {\r\n\r\n\t\t\t\t\ttexture.anisotropy = anisotropy;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\twhere[ name ] = texture;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfunction rgb2hex( rgb ) {\r\n\r\n\t\t\t\treturn ( rgb[ 0 ] * 255 << 16 ) + ( rgb[ 1 ] * 255 << 8 ) + rgb[ 2 ] * 255;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// defaults\r\n\r\n\t\t\tvar mtype = 'MeshLambertMaterial';\r\n\t\t\tvar mpars = {};\r\n\r\n\t\t\t// parameters from model file\r\n\r\n\t\t\tif ( m.shading ) {\r\n\r\n\t\t\t\tvar shading = m.shading.toLowerCase();\r\n\r\n\t\t\t\tif ( shading === 'phong' ) mtype = 'MeshPhongMaterial';\r\n\t\t\t\telse if ( shading === 'basic' ) mtype = 'MeshBasicMaterial';\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( m.blending !== undefined && THREE[ m.blending ] !== undefined ) {\r\n\r\n\t\t\t\tmpars.blending = THREE[ m.blending ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( m.transparent !== undefined ) {\r\n\r\n\t\t\t\tmpars.transparent = m.transparent;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( m.opacity !== undefined && m.opacity < 1.0 ) {\r\n\r\n\t\t\t\tmpars.transparent = true;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( m.depthTest !== undefined ) {\r\n\r\n\t\t\t\tmpars.depthTest = m.depthTest;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( m.depthWrite !== undefined ) {\r\n\r\n\t\t\t\tmpars.depthWrite = m.depthWrite;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( m.visible !== undefined ) {\r\n\r\n\t\t\t\tmpars.visible = m.visible;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( m.flipSided !== undefined ) {\r\n\r\n\t\t\t\tmpars.side = THREE.BackSide;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( m.doubleSided !== undefined ) {\r\n\r\n\t\t\t\tmpars.side = THREE.DoubleSide;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( m.wireframe !== undefined ) {\r\n\r\n\t\t\t\tmpars.wireframe = m.wireframe;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( m.vertexColors !== undefined ) {\r\n\r\n\t\t\t\tif ( m.vertexColors === 'face' ) {\r\n\r\n\t\t\t\t\tmpars.vertexColors = THREE.FaceColors;\r\n\r\n\t\t\t\t} else if ( m.vertexColors ) {\r\n\r\n\t\t\t\t\tmpars.vertexColors = THREE.VertexColors;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// colors\r\n\r\n\t\t\tif ( m.colorDiffuse ) {\r\n\r\n\t\t\t\tmpars.color = rgb2hex( m.colorDiffuse );\r\n\r\n\t\t\t} else if ( m.DbgColor ) {\r\n\r\n\t\t\t\tmpars.color = m.DbgColor;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( m.colorEmissive ) {\r\n\r\n\t\t\t\tmpars.emissive = rgb2hex( m.colorEmissive );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( mtype === 'MeshPhongMaterial' ) {\r\n\r\n\t\t\t\tif ( m.colorSpecular ) {\r\n\r\n\t\t\t\t\tmpars.specular = rgb2hex( m.colorSpecular );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( m.specularCoef ) {\r\n\r\n\t\t\t\t\tmpars.shininess = m.specularCoef;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// modifiers\r\n\r\n\t\t\tif ( m.transparency !== undefined ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Loader: transparency has been renamed to opacity' );\r\n\t\t\t\tm.opacity = m.transparency;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( m.opacity !== undefined ) {\r\n\r\n\t\t\t\tmpars.opacity = m.opacity;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// textures\r\n\r\n\t\t\tif ( texturePath ) {\r\n\r\n\t\t\t\tif ( m.mapDiffuse ) {\r\n\r\n\t\t\t\t\tcreate_texture( mpars, 'map', m.mapDiffuse, m.mapDiffuseRepeat, m.mapDiffuseOffset, m.mapDiffuseWrap, m.mapDiffuseAnisotropy );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( m.mapLight ) {\r\n\r\n\t\t\t\t\tcreate_texture( mpars, 'lightMap', m.mapLight, m.mapLightRepeat, m.mapLightOffset, m.mapLightWrap, m.mapLightAnisotropy );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( m.mapAO ) {\r\n\r\n\t\t\t\t\tcreate_texture( mpars, 'aoMap', m.mapAO, m.mapAORepeat, m.mapAOOffset, m.mapAOWrap, m.mapAOAnisotropy );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( m.mapBump ) {\r\n\r\n\t\t\t\t\tcreate_texture( mpars, 'bumpMap', m.mapBump, m.mapBumpRepeat, m.mapBumpOffset, m.mapBumpWrap, m.mapBumpAnisotropy );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( m.mapNormal ) {\r\n\r\n\t\t\t\t\tcreate_texture( mpars, 'normalMap', m.mapNormal, m.mapNormalRepeat, m.mapNormalOffset, m.mapNormalWrap, m.mapNormalAnisotropy );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( m.mapSpecular ) {\r\n\r\n\t\t\t\t\tcreate_texture( mpars, 'specularMap', m.mapSpecular, m.mapSpecularRepeat, m.mapSpecularOffset, m.mapSpecularWrap, m.mapSpecularAnisotropy );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( m.mapAlpha ) {\r\n\r\n\t\t\t\t\tcreate_texture( mpars, 'alphaMap', m.mapAlpha, m.mapAlphaRepeat, m.mapAlphaOffset, m.mapAlphaWrap, m.mapAlphaAnisotropy );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t//\r\n\r\n\t\t\tif ( m.mapBumpScale ) {\r\n\r\n\t\t\t\tmpars.bumpScale = m.mapBumpScale;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( m.mapNormalFactor ) {\r\n\r\n\t\t\t\tmpars.normalScale = new THREE.Vector2( m.mapNormalFactor, m.mapNormalFactor );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar material = new THREE[ mtype ]( mpars );\r\n\r\n\t\t\tif ( m.DbgName !== undefined ) material.name = m.DbgName;\r\n\r\n\t\t\treturn material;\r\n\r\n\t\t};\r\n\r\n\t} )()\r\n\r\n};\r\n\r\nTHREE.Loader.Handlers = {\r\n\r\n\thandlers: [],\r\n\r\n\tadd: function ( regex, loader ) {\r\n\r\n\t\tthis.handlers.push( regex, loader );\r\n\r\n\t},\r\n\r\n\tget: function ( file ) {\r\n\r\n\t\tfor ( var i = 0, l = this.handlers.length; i < l; i += 2 ) {\r\n\r\n\t\t\tvar regex = this.handlers[ i ];\r\n\t\t\tvar loader  = this.handlers[ i + 1 ];\r\n\r\n\t\t\tif ( regex.test( file ) ) {\r\n\r\n\t\t\t\treturn loader;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/loaders/XHRLoader.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.XHRLoader = function ( manager ) {\r\n\r\n\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\r\n\r\n};\r\n\r\nTHREE.XHRLoader.prototype = {\r\n\r\n\tconstructor: THREE.XHRLoader,\r\n\r\n\tload: function ( url, onLoad, onProgress, onError ) {\r\n\r\n\t\tvar scope = this;\r\n\r\n\t\tvar cached = THREE.Cache.get( url );\r\n\r\n\t\tif ( cached !== undefined ) {\r\n\r\n\t\t\tif ( onLoad ) {\r\n\r\n\t\t\t\tsetTimeout( function () {\r\n\r\n\t\t\t\t\tonLoad( cached );\r\n\r\n\t\t\t\t}, 0 );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn cached;\r\n\r\n\t\t}\r\n\r\n\t\tvar request = new XMLHttpRequest();\r\n\t\trequest.open( 'GET', url, true );\r\n\r\n\t\trequest.addEventListener( 'load', function ( event ) {\r\n\r\n\t\t\tTHREE.Cache.add( url, this.response );\r\n\r\n\t\t\tif ( onLoad ) onLoad( this.response );\r\n\r\n\t\t\tscope.manager.itemEnd( url );\r\n\r\n\t\t}, false );\r\n\r\n\t\tif ( onProgress !== undefined ) {\r\n\r\n\t\t\trequest.addEventListener( 'progress', function ( event ) {\r\n\r\n\t\t\t\tonProgress( event );\r\n\r\n\t\t\t}, false );\r\n\r\n\t\t}\r\n\r\n\t\trequest.addEventListener( 'error', function ( event ) {\r\n\r\n\t\t\tif ( onError ) onError( event );\r\n\r\n\t\t\tscope.manager.itemError( url );\r\n\r\n\t\t}, false );\r\n\r\n\t\tif ( this.crossOrigin !== undefined ) request.crossOrigin = this.crossOrigin;\r\n\t\tif ( this.responseType !== undefined ) request.responseType = this.responseType;\r\n\t\tif ( this.withCredentials !== undefined ) request.withCredentials = this.withCredentials;\r\n\r\n\t\trequest.send( null );\r\n\r\n\t\tscope.manager.itemStart( url );\r\n\r\n\t\treturn request;\r\n\r\n\t},\r\n\r\n\tsetResponseType: function ( value ) {\r\n\r\n\t\tthis.responseType = value;\r\n\r\n\t},\r\n\r\n\tsetCrossOrigin: function ( value ) {\r\n\r\n\t\tthis.crossOrigin = value;\r\n\r\n\t},\r\n\r\n\tsetWithCredentials: function ( value ) {\r\n\r\n\t\tthis.withCredentials = value;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/loaders/ImageLoader.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.ImageLoader = function ( manager ) {\r\n\r\n\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\r\n\r\n};\r\n\r\nTHREE.ImageLoader.prototype = {\r\n\r\n\tconstructor: THREE.ImageLoader,\r\n\r\n\tload: function ( url, onLoad, onProgress, onError ) {\r\n\r\n\t\tvar scope = this;\r\n\r\n\t\tvar cached = THREE.Cache.get( url );\r\n\r\n\t\tif ( cached !== undefined ) {\r\n\r\n\t\t\tif ( onLoad ) {\r\n\r\n\t\t\t\tsetTimeout( function () {\r\n\r\n\t\t\t\t\tonLoad( cached );\r\n\r\n\t\t\t\t}, 0 );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn cached;\r\n\r\n\t\t}\r\n\r\n\t\tvar image = document.createElement( 'img' );\r\n\r\n\t\timage.addEventListener( 'load', function ( event ) {\r\n\r\n\t\t\tTHREE.Cache.add( url, this );\r\n\r\n\t\t\tif ( onLoad ) onLoad( this );\r\n\r\n\t\t\tscope.manager.itemEnd( url );\r\n\r\n\t\t}, false );\r\n\r\n\t\tif ( onProgress !== undefined ) {\r\n\r\n\t\t\timage.addEventListener( 'progress', function ( event ) {\r\n\r\n\t\t\t\tonProgress( event );\r\n\r\n\t\t\t}, false );\r\n\r\n\t\t}\r\n\r\n\t\timage.addEventListener( 'error', function ( event ) {\r\n\r\n\t\t\tif ( onError ) onError( event );\r\n\r\n\t\t\tscope.manager.itemError( url );\r\n\r\n\t\t}, false );\r\n\r\n\t\tif ( this.crossOrigin !== undefined ) image.crossOrigin = this.crossOrigin;\r\n\r\n\t\tscope.manager.itemStart( url );\r\n\r\n\t\timage.src = url;\r\n\r\n\t\treturn image;\r\n\r\n\t},\r\n\r\n\tsetCrossOrigin: function ( value ) {\r\n\r\n\t\tthis.crossOrigin = value;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/loaders/JSONLoader.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.JSONLoader = function ( manager ) {\r\n\r\n\tif ( typeof manager === 'boolean' ) {\r\n\r\n\t\tconsole.warn( 'THREE.JSONLoader: showStatus parameter has been removed from constructor.' );\r\n\t\tmanager = undefined;\r\n\r\n\t}\r\n\r\n\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\r\n\r\n\tthis.withCredentials = false;\r\n\r\n};\r\n\r\nTHREE.JSONLoader.prototype = {\r\n\r\n\tconstructor: THREE.JSONLoader,\r\n\r\n\t// Deprecated\r\n\t\r\n\tget statusDomElement () {\r\n\r\n\t\tif ( this._statusDomElement === undefined ) {\r\n\r\n\t\t\tthis._statusDomElement = document.createElement( 'div' );\r\n\r\n\t\t}\r\n\r\n\t\tconsole.warn( 'THREE.JSONLoader: .statusDomElement has been removed.' );\r\n\t\treturn this._statusDomElement;\r\n\r\n\t},\r\n\r\n\tload: function( url, onLoad, onProgress, onError ) {\r\n\r\n\t\tvar scope = this;\r\n\r\n\t\tvar texturePath = this.texturePath && ( typeof this.texturePath === \"string\" ) ? this.texturePath : THREE.Loader.prototype.extractUrlBase( url );\r\n\r\n\t\tvar loader = new THREE.XHRLoader( this.manager );\r\n\t\tloader.setCrossOrigin( this.crossOrigin );\r\n\t\tloader.setWithCredentials( this.withCredentials );\r\n\t\tloader.load( url, function ( text ) {\r\n\r\n\t\t\tvar json = JSON.parse( text );\r\n\t\t\tvar metadata = json.metadata;\r\n\r\n\t\t\tif ( metadata !== undefined ) {\r\n\r\n\t\t\t\tif ( metadata.type === 'object' ) {\r\n\r\n\t\t\t\t\tconsole.error( 'THREE.JSONLoader: ' + url + ' should be loaded with THREE.ObjectLoader instead.' );\r\n\t\t\t\t\treturn;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( metadata.type === 'scene' ) {\r\n\r\n\t\t\t\t\tconsole.error( 'THREE.JSONLoader: ' + url + ' should be loaded with THREE.SceneLoader instead.' );\r\n\t\t\t\t\treturn;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar object = scope.parse( json, texturePath );\r\n\t\t\tonLoad( object.geometry, object.materials );\r\n\r\n\t\t} );\r\n\r\n\t},\r\n\r\n\tsetCrossOrigin: function ( value ) {\r\n\r\n\t\tthis.crossOrigin = value;\r\n\r\n\t},\r\n\r\n\tsetTexturePath: function ( value ) {\r\n\r\n\t\tthis.texturePath = value;\r\n\r\n\t},\r\n\r\n\tparse: function ( json, texturePath ) {\r\n\r\n\t\tvar geometry = new THREE.Geometry(),\r\n\t\tscale = ( json.scale !== undefined ) ? 1.0 / json.scale : 1.0;\r\n\r\n\t\tparseModel( scale );\r\n\r\n\t\tparseSkin();\r\n\t\tparseMorphing( scale );\r\n\r\n\t\tgeometry.computeFaceNormals();\r\n\t\tgeometry.computeBoundingSphere();\r\n\r\n\t\tfunction parseModel( scale ) {\r\n\r\n\t\t\tfunction isBitSet( value, position ) {\r\n\r\n\t\t\t\treturn value & ( 1 << position );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar i, j, fi,\r\n\r\n\t\t\toffset, zLength,\r\n\r\n\t\tcolorIndex, normalIndex, uvIndex, materialIndex,\r\n\r\n\t\t\ttype,\r\n\t\t\tisQuad,\r\n\t\t\thasMaterial,\r\n\t\t\thasFaceVertexUv,\r\n\t\t\thasFaceNormal, hasFaceVertexNormal,\r\n\t\t\thasFaceColor, hasFaceVertexColor,\r\n\r\n\t\tvertex, face, faceA, faceB, hex, normal,\r\n\r\n\t\t\tuvLayer, uv, u, v,\r\n\r\n\t\t\tfaces = json.faces,\r\n\t\t\tvertices = json.vertices,\r\n\t\t\tnormals = json.normals,\r\n\t\t\tcolors = json.colors,\r\n\r\n\t\t\tnUvLayers = 0;\r\n\r\n\t\t\tif ( json.uvs !== undefined ) {\r\n\r\n\t\t\t\t// disregard empty arrays\r\n\r\n\t\t\t\tfor ( i = 0; i < json.uvs.length; i ++ ) {\r\n\r\n\t\t\t\t\tif ( json.uvs[ i ].length ) nUvLayers ++;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfor ( i = 0; i < nUvLayers; i ++ ) {\r\n\r\n\t\t\t\t\tgeometry.faceVertexUvs[ i ] = [];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\toffset = 0;\r\n\t\t\tzLength = vertices.length;\r\n\r\n\t\t\twhile ( offset < zLength ) {\r\n\r\n\t\t\t\tvertex = new THREE.Vector3();\r\n\r\n\t\t\t\tvertex.x = vertices[ offset ++ ] * scale;\r\n\t\t\t\tvertex.y = vertices[ offset ++ ] * scale;\r\n\t\t\t\tvertex.z = vertices[ offset ++ ] * scale;\r\n\r\n\t\t\t\tgeometry.vertices.push( vertex );\r\n\r\n\t\t\t}\r\n\r\n\t\t\toffset = 0;\r\n\t\t\tzLength = faces.length;\r\n\r\n\t\t\twhile ( offset < zLength ) {\r\n\r\n\t\t\t\ttype = faces[ offset ++ ];\r\n\r\n\r\n\t\t\t\tisQuad              = isBitSet( type, 0 );\r\n\t\t\t\thasMaterial         = isBitSet( type, 1 );\r\n\t\t\t\thasFaceVertexUv     = isBitSet( type, 3 );\r\n\t\t\t\thasFaceNormal       = isBitSet( type, 4 );\r\n\t\t\t\thasFaceVertexNormal = isBitSet( type, 5 );\r\n\t\t\t\thasFaceColor\t     = isBitSet( type, 6 );\r\n\t\t\t\thasFaceVertexColor  = isBitSet( type, 7 );\r\n\r\n\t\t\t\t// console.log(\"type\", type, \"bits\", isQuad, hasMaterial, hasFaceVertexUv, hasFaceNormal, hasFaceVertexNormal, hasFaceColor, hasFaceVertexColor);\r\n\r\n\t\t\t\tif ( isQuad ) {\r\n\r\n\t\t\t\t\tfaceA = new THREE.Face3();\r\n\t\t\t\t\tfaceA.a = faces[ offset ];\r\n\t\t\t\t\tfaceA.b = faces[ offset + 1 ];\r\n\t\t\t\t\tfaceA.c = faces[ offset + 3 ];\r\n\r\n\t\t\t\t\tfaceB = new THREE.Face3();\r\n\t\t\t\t\tfaceB.a = faces[ offset + 1 ];\r\n\t\t\t\t\tfaceB.b = faces[ offset + 2 ];\r\n\t\t\t\t\tfaceB.c = faces[ offset + 3 ];\r\n\r\n\t\t\t\t\toffset += 4;\r\n\r\n\t\t\t\t\tif ( hasMaterial ) {\r\n\r\n\t\t\t\t\t\tmaterialIndex = faces[ offset ++ ];\r\n\t\t\t\t\t\tfaceA.materialIndex = materialIndex;\r\n\t\t\t\t\t\tfaceB.materialIndex = materialIndex;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// to get face <=> uv index correspondence\r\n\r\n\t\t\t\t\tfi = geometry.faces.length;\r\n\r\n\t\t\t\t\tif ( hasFaceVertexUv ) {\r\n\r\n\t\t\t\t\t\tfor ( i = 0; i < nUvLayers; i ++ ) {\r\n\r\n\t\t\t\t\t\t\tuvLayer = json.uvs[ i ];\r\n\r\n\t\t\t\t\t\t\tgeometry.faceVertexUvs[ i ][ fi ] = [];\r\n\t\t\t\t\t\t\tgeometry.faceVertexUvs[ i ][ fi + 1 ] = [];\r\n\r\n\t\t\t\t\t\t\tfor ( j = 0; j < 4; j ++ ) {\r\n\r\n\t\t\t\t\t\t\t\tuvIndex = faces[ offset ++ ];\r\n\r\n\t\t\t\t\t\t\t\tu = uvLayer[ uvIndex * 2 ];\r\n\t\t\t\t\t\t\t\tv = uvLayer[ uvIndex * 2 + 1 ];\r\n\r\n\t\t\t\t\t\t\t\tuv = new THREE.Vector2( u, v );\r\n\r\n\t\t\t\t\t\t\t\tif ( j !== 2 ) geometry.faceVertexUvs[ i ][ fi ].push( uv );\r\n\t\t\t\t\t\t\t\tif ( j !== 0 ) geometry.faceVertexUvs[ i ][ fi + 1 ].push( uv );\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( hasFaceNormal ) {\r\n\r\n\t\t\t\t\t\tnormalIndex = faces[ offset ++ ] * 3;\r\n\r\n\t\t\t\t\t\tfaceA.normal.set(\r\n\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\r\n\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\r\n\t\t\t\t\t\t\tnormals[ normalIndex ]\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tfaceB.normal.copy( faceA.normal );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( hasFaceVertexNormal ) {\r\n\r\n\t\t\t\t\t\tfor ( i = 0; i < 4; i ++ ) {\r\n\r\n\t\t\t\t\t\t\tnormalIndex = faces[ offset ++ ] * 3;\r\n\r\n\t\t\t\t\t\t\tnormal = new THREE.Vector3(\r\n\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\r\n\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\r\n\t\t\t\t\t\t\t\tnormals[ normalIndex ]\r\n\t\t\t\t\t\t\t);\r\n\r\n\r\n\t\t\t\t\t\t\tif ( i !== 2 ) faceA.vertexNormals.push( normal );\r\n\t\t\t\t\t\t\tif ( i !== 0 ) faceB.vertexNormals.push( normal );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\r\n\t\t\t\t\tif ( hasFaceColor ) {\r\n\r\n\t\t\t\t\t\tcolorIndex = faces[ offset ++ ];\r\n\t\t\t\t\t\thex = colors[ colorIndex ];\r\n\r\n\t\t\t\t\t\tfaceA.color.setHex( hex );\r\n\t\t\t\t\t\tfaceB.color.setHex( hex );\r\n\r\n\t\t\t\t\t}\r\n\r\n\r\n\t\t\t\t\tif ( hasFaceVertexColor ) {\r\n\r\n\t\t\t\t\t\tfor ( i = 0; i < 4; i ++ ) {\r\n\r\n\t\t\t\t\t\t\tcolorIndex = faces[ offset ++ ];\r\n\t\t\t\t\t\t\thex = colors[ colorIndex ];\r\n\r\n\t\t\t\t\t\t\tif ( i !== 2 ) faceA.vertexColors.push( new THREE.Color( hex ) );\r\n\t\t\t\t\t\t\tif ( i !== 0 ) faceB.vertexColors.push( new THREE.Color( hex ) );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tgeometry.faces.push( faceA );\r\n\t\t\t\t\tgeometry.faces.push( faceB );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tface = new THREE.Face3();\r\n\t\t\t\t\tface.a = faces[ offset ++ ];\r\n\t\t\t\t\tface.b = faces[ offset ++ ];\r\n\t\t\t\t\tface.c = faces[ offset ++ ];\r\n\r\n\t\t\t\t\tif ( hasMaterial ) {\r\n\r\n\t\t\t\t\t\tmaterialIndex = faces[ offset ++ ];\r\n\t\t\t\t\t\tface.materialIndex = materialIndex;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// to get face <=> uv index correspondence\r\n\r\n\t\t\t\t\tfi = geometry.faces.length;\r\n\r\n\t\t\t\t\tif ( hasFaceVertexUv ) {\r\n\r\n\t\t\t\t\t\tfor ( i = 0; i < nUvLayers; i ++ ) {\r\n\r\n\t\t\t\t\t\t\tuvLayer = json.uvs[ i ];\r\n\r\n\t\t\t\t\t\t\tgeometry.faceVertexUvs[ i ][ fi ] = [];\r\n\r\n\t\t\t\t\t\t\tfor ( j = 0; j < 3; j ++ ) {\r\n\r\n\t\t\t\t\t\t\t\tuvIndex = faces[ offset ++ ];\r\n\r\n\t\t\t\t\t\t\t\tu = uvLayer[ uvIndex * 2 ];\r\n\t\t\t\t\t\t\t\tv = uvLayer[ uvIndex * 2 + 1 ];\r\n\r\n\t\t\t\t\t\t\t\tuv = new THREE.Vector2( u, v );\r\n\r\n\t\t\t\t\t\t\t\tgeometry.faceVertexUvs[ i ][ fi ].push( uv );\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( hasFaceNormal ) {\r\n\r\n\t\t\t\t\t\tnormalIndex = faces[ offset ++ ] * 3;\r\n\r\n\t\t\t\t\t\tface.normal.set(\r\n\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\r\n\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\r\n\t\t\t\t\t\t\tnormals[ normalIndex ]\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( hasFaceVertexNormal ) {\r\n\r\n\t\t\t\t\t\tfor ( i = 0; i < 3; i ++ ) {\r\n\r\n\t\t\t\t\t\t\tnormalIndex = faces[ offset ++ ] * 3;\r\n\r\n\t\t\t\t\t\t\tnormal = new THREE.Vector3(\r\n\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\r\n\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\r\n\t\t\t\t\t\t\t\tnormals[ normalIndex ]\r\n\t\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\t\tface.vertexNormals.push( normal );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\r\n\t\t\t\t\tif ( hasFaceColor ) {\r\n\r\n\t\t\t\t\t\tcolorIndex = faces[ offset ++ ];\r\n\t\t\t\t\t\tface.color.setHex( colors[ colorIndex ] );\r\n\r\n\t\t\t\t\t}\r\n\r\n\r\n\t\t\t\t\tif ( hasFaceVertexColor ) {\r\n\r\n\t\t\t\t\t\tfor ( i = 0; i < 3; i ++ ) {\r\n\r\n\t\t\t\t\t\t\tcolorIndex = faces[ offset ++ ];\r\n\t\t\t\t\t\t\tface.vertexColors.push( new THREE.Color( colors[ colorIndex ] ) );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tgeometry.faces.push( face );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t};\r\n\r\n\t\tfunction parseSkin() {\r\n\r\n\t\t\tvar influencesPerVertex = ( json.influencesPerVertex !== undefined ) ? json.influencesPerVertex : 2;\r\n\r\n\t\t\tif ( json.skinWeights ) {\r\n\r\n\t\t\t\tfor ( var i = 0, l = json.skinWeights.length; i < l; i += influencesPerVertex ) {\r\n\r\n\t\t\t\t\tvar x =                               json.skinWeights[ i ];\r\n\t\t\t\t\tvar y = ( influencesPerVertex > 1 ) ? json.skinWeights[ i + 1 ] : 0;\r\n\t\t\t\t\tvar z = ( influencesPerVertex > 2 ) ? json.skinWeights[ i + 2 ] : 0;\r\n\t\t\t\t\tvar w = ( influencesPerVertex > 3 ) ? json.skinWeights[ i + 3 ] : 0;\r\n\r\n\t\t\t\t\tgeometry.skinWeights.push( new THREE.Vector4( x, y, z, w ) );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( json.skinIndices ) {\r\n\r\n\t\t\t\tfor ( var i = 0, l = json.skinIndices.length; i < l; i += influencesPerVertex ) {\r\n\r\n\t\t\t\t\tvar a =                               json.skinIndices[ i ];\r\n\t\t\t\t\tvar b = ( influencesPerVertex > 1 ) ? json.skinIndices[ i + 1 ] : 0;\r\n\t\t\t\t\tvar c = ( influencesPerVertex > 2 ) ? json.skinIndices[ i + 2 ] : 0;\r\n\t\t\t\t\tvar d = ( influencesPerVertex > 3 ) ? json.skinIndices[ i + 3 ] : 0;\r\n\r\n\t\t\t\t\tgeometry.skinIndices.push( new THREE.Vector4( a, b, c, d ) );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tgeometry.bones = json.bones;\r\n\r\n\t\t\tif ( geometry.bones && geometry.bones.length > 0 && ( geometry.skinWeights.length !== geometry.skinIndices.length || geometry.skinIndices.length !== geometry.vertices.length ) ) {\r\n\r\n\t\t\t\tconsole.warn( 'When skinning, number of vertices (' + geometry.vertices.length + '), skinIndices (' +\r\n\t\t\t\t\tgeometry.skinIndices.length + '), and skinWeights (' + geometry.skinWeights.length + ') should match.' );\r\n\r\n\t\t\t}\r\n\r\n\r\n\t\t\t// could change this to json.animations[0] or remove completely\r\n\r\n\t\t\tgeometry.animation = json.animation;\r\n\t\t\tgeometry.animations = json.animations;\r\n\r\n\t\t};\r\n\r\n\t\tfunction parseMorphing( scale ) {\r\n\r\n\t\t\tif ( json.morphTargets !== undefined ) {\r\n\r\n\t\t\t\tvar i, l, v, vl, dstVertices, srcVertices;\r\n\r\n\t\t\t\tfor ( i = 0, l = json.morphTargets.length; i < l; i ++ ) {\r\n\r\n\t\t\t\t\tgeometry.morphTargets[ i ] = {};\r\n\t\t\t\t\tgeometry.morphTargets[ i ].name = json.morphTargets[ i ].name;\r\n\t\t\t\t\tgeometry.morphTargets[ i ].vertices = [];\r\n\r\n\t\t\t\t\tdstVertices = geometry.morphTargets[ i ].vertices;\r\n\t\t\t\t\tsrcVertices = json.morphTargets[ i ].vertices;\r\n\r\n\t\t\t\t\tfor ( v = 0, vl = srcVertices.length; v < vl; v += 3 ) {\r\n\r\n\t\t\t\t\t\tvar vertex = new THREE.Vector3();\r\n\t\t\t\t\t\tvertex.x = srcVertices[ v ] * scale;\r\n\t\t\t\t\t\tvertex.y = srcVertices[ v + 1 ] * scale;\r\n\t\t\t\t\t\tvertex.z = srcVertices[ v + 2 ] * scale;\r\n\r\n\t\t\t\t\t\tdstVertices.push( vertex );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( json.morphColors !== undefined ) {\r\n\r\n\t\t\t\tvar i, l, c, cl, dstColors, srcColors, color;\r\n\r\n\t\t\t\tfor ( i = 0, l = json.morphColors.length; i < l; i ++ ) {\r\n\r\n\t\t\t\t\tgeometry.morphColors[ i ] = {};\r\n\t\t\t\t\tgeometry.morphColors[ i ].name = json.morphColors[ i ].name;\r\n\t\t\t\t\tgeometry.morphColors[ i ].colors = [];\r\n\r\n\t\t\t\t\tdstColors = geometry.morphColors[ i ].colors;\r\n\t\t\t\t\tsrcColors = json.morphColors[ i ].colors;\r\n\r\n\t\t\t\t\tfor ( c = 0, cl = srcColors.length; c < cl; c += 3 ) {\r\n\r\n\t\t\t\t\t\tcolor = new THREE.Color( 0xffaa00 );\r\n\t\t\t\t\t\tcolor.setRGB( srcColors[ c ], srcColors[ c + 1 ], srcColors[ c + 2 ] );\r\n\t\t\t\t\t\tdstColors.push( color );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t};\r\n\r\n\t\tif ( json.materials === undefined || json.materials.length === 0 ) {\r\n\r\n\t\t\treturn { geometry: geometry };\r\n\r\n\t\t} else {\r\n\r\n\t\t\tvar materials = THREE.Loader.prototype.initMaterials( json.materials, texturePath, this.crossOrigin );\r\n\r\n\t\t\treturn { geometry: geometry, materials: materials };\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/loaders/LoadingManager.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.LoadingManager = function ( onLoad, onProgress, onError ) {\r\n\r\n\tvar scope = this;\r\n\r\n\tvar isLoading = false, itemsLoaded = 0, itemsTotal = 0;\r\n\r\n\tthis.onStart = undefined;\r\n\tthis.onLoad = onLoad;\r\n\tthis.onProgress = onProgress;\r\n\tthis.onError = onError;\r\n\r\n\tthis.itemStart = function ( url ) {\r\n\r\n\t\titemsTotal ++;\r\n\r\n\t\tif ( isLoading === false ) {\r\n\r\n\t\t\tif ( scope.onStart !== undefined ) {\r\n\r\n\t\t\t\tscope.onStart( url, itemsLoaded, itemsTotal );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tisLoading = true;\r\n\r\n\t};\r\n\r\n\tthis.itemEnd = function ( url ) {\r\n\r\n\t\titemsLoaded ++;\r\n\r\n\t\tif ( scope.onProgress !== undefined ) {\r\n\r\n\t\t\tscope.onProgress( url, itemsLoaded, itemsTotal );\r\n\r\n\t\t}\r\n\r\n\t\tif ( itemsLoaded === itemsTotal ) {\r\n\r\n\t\t\tisLoading = false;\r\n\r\n\t\t\tif ( scope.onLoad !== undefined ) {\r\n\r\n\t\t\t\tscope.onLoad();\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.itemError = function ( url ) {\r\n\r\n\t\tif ( scope.onError !== undefined ) {\r\n\r\n\t\t\tscope.onError( url );\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n};\r\n\r\nTHREE.DefaultLoadingManager = new THREE.LoadingManager();\r\n\r\n// File:src/loaders/BufferGeometryLoader.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.BufferGeometryLoader = function ( manager ) {\r\n\r\n\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\r\n\r\n};\r\n\r\nTHREE.BufferGeometryLoader.prototype = {\r\n\r\n\tconstructor: THREE.BufferGeometryLoader,\r\n\r\n\tload: function ( url, onLoad, onProgress, onError ) {\r\n\r\n\t\tvar scope = this;\r\n\r\n\t\tvar loader = new THREE.XHRLoader( scope.manager );\r\n\t\tloader.setCrossOrigin( this.crossOrigin );\r\n\t\tloader.load( url, function ( text ) {\r\n\r\n\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\r\n\r\n\t\t}, onProgress, onError );\r\n\r\n\t},\r\n\r\n\tsetCrossOrigin: function ( value ) {\r\n\r\n\t\tthis.crossOrigin = value;\r\n\r\n\t},\r\n\r\n\tparse: function ( json ) {\r\n\r\n\t\tvar geometry = new THREE.BufferGeometry();\r\n\r\n\t\tvar index = json.data.index;\r\n\r\n\t\tif ( index !== undefined ) {\r\n\r\n\t\t\tvar typedArray = new self[ index.type ]( index.array );\r\n\t\t\tgeometry.setIndex( new THREE.BufferAttribute( typedArray, 1 ) );\r\n\r\n\t\t}\r\n\r\n\t\tvar attributes = json.data.attributes;\r\n\r\n\t\tfor ( var key in attributes ) {\r\n\r\n\t\t\tvar attribute = attributes[ key ];\r\n\t\t\tvar typedArray = new self[ attribute.type ]( attribute.array );\r\n\r\n\t\t\tgeometry.addAttribute( key, new THREE.BufferAttribute( typedArray, attribute.itemSize ) );\r\n\r\n\t\t}\r\n\r\n\t\tvar groups = json.data.groups || json.data.drawcalls || json.data.offsets;\r\n\r\n\t\tif ( groups !== undefined ) {\r\n\r\n\t\t\tfor ( var i = 0, n = groups.length; i !== n; ++ i ) {\r\n\r\n\t\t\t\tvar group = groups[ i ];\r\n\r\n\t\t\t\tgeometry.addGroup( group.start, group.count );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tvar boundingSphere = json.data.boundingSphere;\r\n\r\n\t\tif ( boundingSphere !== undefined ) {\r\n\r\n\t\t\tvar center = new THREE.Vector3();\r\n\r\n\t\t\tif ( boundingSphere.center !== undefined ) {\r\n\r\n\t\t\t\tcenter.fromArray( boundingSphere.center );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tgeometry.boundingSphere = new THREE.Sphere( center, boundingSphere.radius );\r\n\r\n\t\t}\r\n\r\n\t\treturn geometry;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/loaders/MaterialLoader.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.MaterialLoader = function ( manager ) {\r\n\r\n\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\r\n\tthis.textures = {};\r\n\r\n};\r\n\r\nTHREE.MaterialLoader.prototype = {\r\n\r\n\tconstructor: THREE.MaterialLoader,\r\n\r\n\tload: function ( url, onLoad, onProgress, onError ) {\r\n\r\n\t\tvar scope = this;\r\n\r\n\t\tvar loader = new THREE.XHRLoader( scope.manager );\r\n\t\tloader.setCrossOrigin( this.crossOrigin );\r\n\t\tloader.load( url, function ( text ) {\r\n\r\n\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\r\n\r\n\t\t}, onProgress, onError );\r\n\r\n\t},\r\n\r\n\tsetCrossOrigin: function ( value ) {\r\n\r\n\t\tthis.crossOrigin = value;\r\n\r\n\t},\r\n\r\n\tsetTextures: function ( value ) {\r\n\r\n\t\tthis.textures = value;\r\n\r\n\t},\r\n\r\n\tgetTexture: function ( name ) {\r\n\r\n\t\tvar textures = this.textures;\r\n\r\n\t\tif ( textures[ name ] === undefined ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.MaterialLoader: Undefined texture', name );\r\n\r\n\t\t}\r\n\r\n\t\treturn textures[ name ];\r\n\r\n\t},\r\n\r\n\tparse: function ( json ) {\r\n\r\n\t\tvar material = new THREE[ json.type ];\r\n\t\tmaterial.uuid = json.uuid;\r\n\r\n\t\tif ( json.name !== undefined ) material.name = json.name;\r\n\t\tif ( json.color !== undefined ) material.color.setHex( json.color );\r\n\t\tif ( json.emissive !== undefined ) material.emissive.setHex( json.emissive );\r\n\t\tif ( json.specular !== undefined ) material.specular.setHex( json.specular );\r\n\t\tif ( json.shininess !== undefined ) material.shininess = json.shininess;\r\n\t\tif ( json.uniforms !== undefined ) material.uniforms = json.uniforms;\r\n\t\tif ( json.vertexShader !== undefined ) material.vertexShader = json.vertexShader;\r\n\t\tif ( json.fragmentShader !== undefined ) material.fragmentShader = json.fragmentShader;\r\n\t\tif ( json.vertexColors !== undefined ) material.vertexColors = json.vertexColors;\r\n\t\tif ( json.shading !== undefined ) material.shading = json.shading;\r\n\t\tif ( json.blending !== undefined ) material.blending = json.blending;\r\n\t\tif ( json.side !== undefined ) material.side = json.side;\r\n\t\tif ( json.opacity !== undefined ) material.opacity = json.opacity;\r\n\t\tif ( json.transparent !== undefined ) material.transparent = json.transparent;\r\n\t\tif ( json.alphaTest !== undefined ) material.alphaTest = json.alphaTest;\r\n\t\tif ( json.depthTest !== undefined ) material.depthTest = json.depthTest;\r\n\t\tif ( json.depthWrite !== undefined ) material.depthWrite = json.depthWrite;\r\n\t\tif ( json.wireframe !== undefined ) material.wireframe = json.wireframe;\r\n\t\tif ( json.wireframeLinewidth !== undefined ) material.wireframeLinewidth = json.wireframeLinewidth;\r\n\r\n\t\t// for PointsMaterial\r\n\t\tif ( json.size !== undefined ) material.size = json.size;\r\n\t\tif ( json.sizeAttenuation !== undefined ) material.sizeAttenuation = json.sizeAttenuation;\r\n\r\n\t\t// maps\r\n\r\n\t\tif ( json.map !== undefined ) material.map = this.getTexture( json.map );\r\n\r\n\t\tif ( json.alphaMap !== undefined ) {\r\n\r\n\t\t\tmaterial.alphaMap = this.getTexture( json.alphaMap );\r\n\t\t\tmaterial.transparent = true;\r\n\r\n\t\t}\r\n\r\n\t\tif ( json.bumpMap !== undefined ) material.bumpMap = this.getTexture( json.bumpMap );\r\n\t\tif ( json.bumpScale !== undefined ) material.bumpScale = json.bumpScale;\r\n\r\n\t\tif ( json.normalMap !== undefined ) material.normalMap = this.getTexture( json.normalMap );\r\n\t\tif ( json.normalScale )\tmaterial.normalScale = new THREE.Vector2( json.normalScale, json.normalScale );\r\n\r\n\t\tif ( json.displacementMap !== undefined ) material.displacementMap = this.getTexture( json.displacementMap );\r\n\t\tif ( json.displacementScale !== undefined ) material.displacementScale = json.displacementScale;\r\n\t\tif ( json.displacementBias !== undefined ) material.displacementBias = json.displacementBias;\r\n\r\n\t\tif ( json.specularMap !== undefined ) material.specularMap = this.getTexture( json.specularMap );\r\n\r\n\t\tif ( json.envMap !== undefined ) {\r\n\r\n\t\t\tmaterial.envMap = this.getTexture( json.envMap );\r\n\t\t\tmaterial.combine = THREE.MultiplyOperation;\r\n\r\n\t\t}\r\n\r\n\t\tif ( json.reflectivity ) material.reflectivity = json.reflectivity;\r\n\r\n\t\tif ( json.lightMap !== undefined ) material.lightMap = this.getTexture( json.lightMap );\r\n\t\tif ( json.lightMapIntensity !== undefined ) material.lightMapIntensity = json.lightMapIntensity;\r\n\r\n\t\tif ( json.aoMap !== undefined ) material.aoMap = this.getTexture( json.aoMap );\r\n\t\tif ( json.aoMapIntensity !== undefined ) material.aoMapIntensity = json.aoMapIntensity;\r\n\r\n\t\t// MeshFaceMaterial\r\n\r\n\t\tif ( json.materials !== undefined ) {\r\n\r\n\t\t\tfor ( var i = 0, l = json.materials.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tmaterial.materials.push( this.parse( json.materials[ i ] ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn material;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/loaders/ObjectLoader.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.ObjectLoader = function ( manager ) {\r\n\r\n\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\r\n\tthis.texturePath = '';\r\n\r\n};\r\n\r\nTHREE.ObjectLoader.prototype = {\r\n\r\n\tconstructor: THREE.ObjectLoader,\r\n\r\n\tload: function ( url, onLoad, onProgress, onError ) {\r\n\r\n\t\tif ( this.texturePath === '' ) {\r\n\r\n\t\t\tthis.texturePath = url.substring( 0, url.lastIndexOf( '/' ) + 1 );\r\n\r\n\t\t}\r\n\r\n\t\tvar scope = this;\r\n\r\n\t\tvar loader = new THREE.XHRLoader( scope.manager );\r\n\t\tloader.setCrossOrigin( this.crossOrigin );\r\n\t\tloader.load( url, function ( text ) {\r\n\r\n\t\t\tscope.parse( JSON.parse( text ), onLoad );\r\n\r\n\t\t}, onProgress, onError );\r\n\r\n\t},\r\n\r\n\tsetTexturePath: function ( value ) {\r\n\r\n\t\tthis.texturePath = value;\r\n\r\n\t},\r\n\r\n\tsetCrossOrigin: function ( value ) {\r\n\r\n\t\tthis.crossOrigin = value;\r\n\r\n\t},\r\n\r\n\tparse: function ( json, onLoad ) {\r\n\r\n\t\tvar geometries = this.parseGeometries( json.geometries );\r\n\r\n\t\tvar images = this.parseImages( json.images, function () {\r\n\r\n\t\t\tif ( onLoad !== undefined ) onLoad( object );\r\n\r\n\t\t} );\r\n\r\n\t\tvar textures  = this.parseTextures( json.textures, images );\r\n\t\tvar materials = this.parseMaterials( json.materials, textures );\r\n\t\tvar object = this.parseObject( json.object, geometries, materials );\r\n\r\n\t\tif ( json.images === undefined || json.images.length === 0 ) {\r\n\r\n\t\t\tif ( onLoad !== undefined ) onLoad( object );\r\n\r\n\t\t}\r\n\r\n\t\treturn object;\r\n\r\n\t},\r\n\r\n\tparseGeometries: function ( json ) {\r\n\r\n\t\tvar geometries = {};\r\n\r\n\t\tif ( json !== undefined ) {\r\n\r\n\t\t\tvar geometryLoader = new THREE.JSONLoader();\r\n\t\t\tvar bufferGeometryLoader = new THREE.BufferGeometryLoader();\r\n\r\n\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tvar geometry;\r\n\t\t\t\tvar data = json[ i ];\r\n\r\n\t\t\t\tswitch ( data.type ) {\r\n\r\n\t\t\t\t\tcase 'PlaneGeometry':\r\n\t\t\t\t\tcase 'PlaneBufferGeometry':\r\n\r\n\t\t\t\t\t\tgeometry = new THREE[ data.type ](\r\n\t\t\t\t\t\t\tdata.width,\r\n\t\t\t\t\t\t\tdata.height,\r\n\t\t\t\t\t\t\tdata.widthSegments,\r\n\t\t\t\t\t\t\tdata.heightSegments\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'BoxGeometry':\r\n\t\t\t\t\tcase 'CubeGeometry': // backwards compatible\r\n\r\n\t\t\t\t\t\tgeometry = new THREE.BoxGeometry(\r\n\t\t\t\t\t\t\tdata.width,\r\n\t\t\t\t\t\t\tdata.height,\r\n\t\t\t\t\t\t\tdata.depth,\r\n\t\t\t\t\t\t\tdata.widthSegments,\r\n\t\t\t\t\t\t\tdata.heightSegments,\r\n\t\t\t\t\t\t\tdata.depthSegments\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'CircleBufferGeometry':\r\n\r\n\t\t\t\t\t\tgeometry = new THREE.CircleBufferGeometry(\r\n\t\t\t\t\t\t\tdata.radius,\r\n\t\t\t\t\t\t\tdata.segments,\r\n\t\t\t\t\t\t\tdata.thetaStart,\r\n\t\t\t\t\t\t\tdata.thetaLength\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'CircleGeometry':\r\n\r\n\t\t\t\t\t\tgeometry = new THREE.CircleGeometry(\r\n\t\t\t\t\t\t\tdata.radius,\r\n\t\t\t\t\t\t\tdata.segments,\r\n\t\t\t\t\t\t\tdata.thetaStart,\r\n\t\t\t\t\t\t\tdata.thetaLength\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'CylinderGeometry':\r\n\r\n\t\t\t\t\t\tgeometry = new THREE.CylinderGeometry(\r\n\t\t\t\t\t\t\tdata.radiusTop,\r\n\t\t\t\t\t\t\tdata.radiusBottom,\r\n\t\t\t\t\t\t\tdata.height,\r\n\t\t\t\t\t\t\tdata.radialSegments,\r\n\t\t\t\t\t\t\tdata.heightSegments,\r\n\t\t\t\t\t\t\tdata.openEnded,\r\n\t\t\t\t\t\t\tdata.thetaStart,\r\n\t\t\t\t\t\t\tdata.thetaLength\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'SphereGeometry':\r\n\r\n\t\t\t\t\t\tgeometry = new THREE.SphereGeometry(\r\n\t\t\t\t\t\t\tdata.radius,\r\n\t\t\t\t\t\t\tdata.widthSegments,\r\n\t\t\t\t\t\t\tdata.heightSegments,\r\n\t\t\t\t\t\t\tdata.phiStart,\r\n\t\t\t\t\t\t\tdata.phiLength,\r\n\t\t\t\t\t\t\tdata.thetaStart,\r\n\t\t\t\t\t\t\tdata.thetaLength\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'SphereBufferGeometry':\r\n\r\n\t\t\t\t\t\tgeometry = new THREE.SphereBufferGeometry(\r\n\t\t\t\t\t\t\tdata.radius,\r\n\t\t\t\t\t\t\tdata.widthSegments,\r\n\t\t\t\t\t\t\tdata.heightSegments,\r\n\t\t\t\t\t\t\tdata.phiStart,\r\n\t\t\t\t\t\t\tdata.phiLength,\r\n\t\t\t\t\t\t\tdata.thetaStart,\r\n\t\t\t\t\t\t\tdata.thetaLength\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'DodecahedronGeometry':\r\n\r\n\t\t\t\t\t\tgeometry = new THREE.DodecahedronGeometry(\r\n\t\t\t\t\t\t\tdata.radius,\r\n\t\t\t\t\t\t\tdata.detail\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'IcosahedronGeometry':\r\n\r\n\t\t\t\t\t\tgeometry = new THREE.IcosahedronGeometry(\r\n\t\t\t\t\t\t\tdata.radius,\r\n\t\t\t\t\t\t\tdata.detail\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'OctahedronGeometry':\r\n\r\n\t\t\t\t\t\tgeometry = new THREE.OctahedronGeometry(\r\n\t\t\t\t\t\t\tdata.radius,\r\n\t\t\t\t\t\t\tdata.detail\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'TetrahedronGeometry':\r\n\r\n\t\t\t\t\t\tgeometry = new THREE.TetrahedronGeometry(\r\n\t\t\t\t\t\t\tdata.radius,\r\n\t\t\t\t\t\t\tdata.detail\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'RingGeometry':\r\n\r\n\t\t\t\t\t\tgeometry = new THREE.RingGeometry(\r\n\t\t\t\t\t\t\tdata.innerRadius,\r\n\t\t\t\t\t\t\tdata.outerRadius,\r\n\t\t\t\t\t\t\tdata.thetaSegments,\r\n\t\t\t\t\t\t\tdata.phiSegments,\r\n\t\t\t\t\t\t\tdata.thetaStart,\r\n\t\t\t\t\t\t\tdata.thetaLength\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'TorusGeometry':\r\n\r\n\t\t\t\t\t\tgeometry = new THREE.TorusGeometry(\r\n\t\t\t\t\t\t\tdata.radius,\r\n\t\t\t\t\t\t\tdata.tube,\r\n\t\t\t\t\t\t\tdata.radialSegments,\r\n\t\t\t\t\t\t\tdata.tubularSegments,\r\n\t\t\t\t\t\t\tdata.arc\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'TorusKnotGeometry':\r\n\r\n\t\t\t\t\t\tgeometry = new THREE.TorusKnotGeometry(\r\n\t\t\t\t\t\t\tdata.radius,\r\n\t\t\t\t\t\t\tdata.tube,\r\n\t\t\t\t\t\t\tdata.radialSegments,\r\n\t\t\t\t\t\t\tdata.tubularSegments,\r\n\t\t\t\t\t\t\tdata.p,\r\n\t\t\t\t\t\t\tdata.q,\r\n\t\t\t\t\t\t\tdata.heightScale\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'TextGeometry':\r\n\r\n\t\t\t\t\t\tgeometry = new THREE.TextGeometry(\r\n\t\t\t\t\t\t\tdata.text,\r\n\t\t\t\t\t\t\tdata.data\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'BufferGeometry':\r\n\r\n\t\t\t\t\t\tgeometry = bufferGeometryLoader.parse( data );\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'Geometry':\r\n\r\n\t\t\t\t\t\tgeometry = geometryLoader.parse( data.data, this.texturePath ).geometry;\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tdefault:\r\n\r\n\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Unsupported geometry type \"' + data.type + '\"' );\r\n\r\n\t\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tgeometry.uuid = data.uuid;\r\n\r\n\t\t\t\tif ( data.name !== undefined ) geometry.name = data.name;\r\n\r\n\t\t\t\tgeometries[ data.uuid ] = geometry;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn geometries;\r\n\r\n\t},\r\n\r\n\tparseMaterials: function ( json, textures ) {\r\n\r\n\t\tvar materials = {};\r\n\r\n\t\tif ( json !== undefined ) {\r\n\r\n\t\t\tvar loader = new THREE.MaterialLoader();\r\n\t\t\tloader.setTextures( textures );\r\n\r\n\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tvar material = loader.parse( json[ i ] );\r\n\t\t\t\tmaterials[ material.uuid ] = material;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn materials;\r\n\r\n\t},\r\n\r\n\tparseImages: function ( json, onLoad ) {\r\n\r\n\t\tvar scope = this;\r\n\t\tvar images = {};\r\n\r\n\t\tfunction loadImage( url ) {\r\n\r\n\t\t\tscope.manager.itemStart( url );\r\n\r\n\t\t\treturn loader.load( url, function () {\r\n\r\n\t\t\t\tscope.manager.itemEnd( url );\r\n\r\n\t\t\t} );\r\n\r\n\t\t}\r\n\r\n\t\tif ( json !== undefined && json.length > 0 ) {\r\n\r\n\t\t\tvar manager = new THREE.LoadingManager( onLoad );\r\n\r\n\t\t\tvar loader = new THREE.ImageLoader( manager );\r\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\r\n\r\n\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tvar image = json[ i ];\r\n\t\t\t\tvar path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test( image.url ) ? image.url : scope.texturePath + image.url;\r\n\r\n\t\t\t\timages[ image.uuid ] = loadImage( path );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn images;\r\n\r\n\t},\r\n\r\n\tparseTextures: function ( json, images ) {\r\n\r\n\t\tfunction parseConstant( value ) {\r\n\r\n\t\t\tif ( typeof( value ) === 'number' ) return value;\r\n\r\n\t\t\tconsole.warn( 'THREE.ObjectLoader.parseTexture: Constant should be in numeric form.', value );\r\n\r\n\t\t\treturn THREE[ value ];\r\n\r\n\t\t}\r\n\r\n\t\tvar textures = {};\r\n\r\n\t\tif ( json !== undefined ) {\r\n\r\n\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tvar data = json[ i ];\r\n\r\n\t\t\t\tif ( data.image === undefined ) {\r\n\r\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: No \"image\" specified for', data.uuid );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( images[ data.image ] === undefined ) {\r\n\r\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined image', data.image );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar texture = new THREE.Texture( images[ data.image ] );\r\n\t\t\t\ttexture.needsUpdate = true;\r\n\r\n\t\t\t\ttexture.uuid = data.uuid;\r\n\r\n\t\t\t\tif ( data.name !== undefined ) texture.name = data.name;\r\n\t\t\t\tif ( data.mapping !== undefined ) texture.mapping = parseConstant( data.mapping );\r\n\t\t\t\tif ( data.offset !== undefined ) texture.offset = new THREE.Vector2( data.offset[ 0 ], data.offset[ 1 ] );\r\n\t\t\t\tif ( data.repeat !== undefined ) texture.repeat = new THREE.Vector2( data.repeat[ 0 ], data.repeat[ 1 ] );\r\n\t\t\t\tif ( data.minFilter !== undefined ) texture.minFilter = parseConstant( data.minFilter );\r\n\t\t\t\tif ( data.magFilter !== undefined ) texture.magFilter = parseConstant( data.magFilter );\r\n\t\t\t\tif ( data.anisotropy !== undefined ) texture.anisotropy = data.anisotropy;\r\n\t\t\t\tif ( Array.isArray( data.wrap ) ) {\r\n\r\n\t\t\t\t\ttexture.wrapS = parseConstant( data.wrap[ 0 ] );\r\n\t\t\t\t\ttexture.wrapT = parseConstant( data.wrap[ 1 ] );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttextures[ data.uuid ] = texture;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn textures;\r\n\r\n\t},\r\n\r\n\tparseObject: function () {\r\n\r\n\t\tvar matrix = new THREE.Matrix4();\r\n\r\n\t\treturn function ( data, geometries, materials ) {\r\n\r\n\t\t\tvar object;\r\n\r\n\t\t\tvar getGeometry = function ( name ) {\r\n\r\n\t\t\t\tif ( geometries[ name ] === undefined ) {\r\n\r\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined geometry', name );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn geometries[ name ];\r\n\r\n\t\t\t};\r\n\r\n\t\t\tvar getMaterial = function ( name ) {\r\n\r\n\t\t\t\tif ( materials[ name ] === undefined ) {\r\n\r\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined material', name );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn materials[ name ];\r\n\r\n\t\t\t};\r\n\r\n\t\t\tswitch ( data.type ) {\r\n\r\n\t\t\t\tcase 'Scene':\r\n\r\n\t\t\t\t\tobject = new THREE.Scene();\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'PerspectiveCamera':\r\n\r\n\t\t\t\t\tobject = new THREE.PerspectiveCamera( data.fov, data.aspect, data.near, data.far );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'OrthographicCamera':\r\n\r\n\t\t\t\t\tobject = new THREE.OrthographicCamera( data.left, data.right, data.top, data.bottom, data.near, data.far );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'AmbientLight':\r\n\r\n\t\t\t\t\tobject = new THREE.AmbientLight( data.color );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'DirectionalLight':\r\n\r\n\t\t\t\t\tobject = new THREE.DirectionalLight( data.color, data.intensity );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'PointLight':\r\n\r\n\t\t\t\t\tobject = new THREE.PointLight( data.color, data.intensity, data.distance, data.decay );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'SpotLight':\r\n\r\n\t\t\t\t\tobject = new THREE.SpotLight( data.color, data.intensity, data.distance, data.angle, data.exponent, data.decay );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'HemisphereLight':\r\n\r\n\t\t\t\t\tobject = new THREE.HemisphereLight( data.color, data.groundColor, data.intensity );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'Mesh':\r\n\r\n\t\t\t\t\tobject = new THREE.Mesh( getGeometry( data.geometry ), getMaterial( data.material ) );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'LOD':\r\n\r\n\t\t\t\t\tobject = new THREE.LOD();\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'Line':\r\n\r\n\t\t\t\t\tobject = new THREE.Line( getGeometry( data.geometry ), getMaterial( data.material ), data.mode );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'PointCloud':\r\n\t\t\t\tcase 'Points':\r\n\r\n\t\t\t\t\tobject = new THREE.Points( getGeometry( data.geometry ), getMaterial( data.material ) );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'Sprite':\r\n\r\n\t\t\t\t\tobject = new THREE.Sprite( getMaterial( data.material ) );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'Group':\r\n\r\n\t\t\t\t\tobject = new THREE.Group();\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault:\r\n\r\n\t\t\t\t\tobject = new THREE.Object3D();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tobject.uuid = data.uuid;\r\n\r\n\t\t\tif ( data.name !== undefined ) object.name = data.name;\r\n\t\t\tif ( data.matrix !== undefined ) {\r\n\r\n\t\t\t\tmatrix.fromArray( data.matrix );\r\n\t\t\t\tmatrix.decompose( object.position, object.quaternion, object.scale );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tif ( data.position !== undefined ) object.position.fromArray( data.position );\r\n\t\t\t\tif ( data.rotation !== undefined ) object.rotation.fromArray( data.rotation );\r\n\t\t\t\tif ( data.scale !== undefined ) object.scale.fromArray( data.scale );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( data.castShadow !== undefined ) object.castShadow = data.castShadow;\r\n\t\t\tif ( data.receiveShadow !== undefined ) object.receiveShadow = data.receiveShadow;\r\n\r\n\t\t\tif ( data.visible !== undefined ) object.visible = data.visible;\r\n\t\t\tif ( data.userData !== undefined ) object.userData = data.userData;\r\n\r\n\t\t\tif ( data.children !== undefined ) {\r\n\r\n\t\t\t\tfor ( var child in data.children ) {\r\n\r\n\t\t\t\t\tobject.add( this.parseObject( data.children[ child ], geometries, materials ) );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( data.type === 'LOD' ) {\r\n\r\n\t\t\t\tvar levels = data.levels;\r\n\r\n\t\t\t\tfor ( var l = 0; l < levels.length; l ++ ) {\r\n\r\n\t\t\t\t\tvar level = levels[ l ];\r\n\t\t\t\t\tvar child = object.getObjectByProperty( 'uuid', level.object );\r\n\r\n\t\t\t\t\tif ( child !== undefined ) {\r\n\r\n\t\t\t\t\t\tobject.addLevel( child, level.distance );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn object;\r\n\r\n\t\t}\r\n\r\n\t}()\r\n\r\n};\r\n\r\n// File:src/loaders/TextureLoader.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.TextureLoader = function ( manager ) {\r\n\r\n\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\r\n\r\n};\r\n\r\nTHREE.TextureLoader.prototype = {\r\n\r\n\tconstructor: THREE.TextureLoader,\r\n\r\n\tload: function ( url, onLoad, onProgress, onError ) {\r\n\r\n\t\tvar scope = this;\r\n\r\n\t\tvar loader = new THREE.ImageLoader( scope.manager );\r\n\t\tloader.setCrossOrigin( this.crossOrigin );\r\n\t\tloader.load( url, function ( image ) {\r\n\r\n\t\t\tvar texture = new THREE.Texture( image );\r\n\t\t\ttexture.needsUpdate = true;\r\n\r\n\t\t\tif ( onLoad !== undefined ) {\r\n\r\n\t\t\t\tonLoad( texture );\r\n\r\n\t\t\t}\r\n\r\n\t\t}, onProgress, onError );\r\n\r\n\t},\r\n\r\n\tsetCrossOrigin: function ( value ) {\r\n\r\n\t\tthis.crossOrigin = value;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/loaders/BinaryTextureLoader.js\r\n\r\n/**\r\n * @author Nikos M. / https://github.com/foo123/\r\n *\r\n * Abstract Base class to load generic binary textures formats (rgbe, hdr, ...)\r\n */\r\n\r\nTHREE.DataTextureLoader = THREE.BinaryTextureLoader = function ( manager ) {\r\n\r\n\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\r\n\r\n\t// override in sub classes\r\n\tthis._parser = null;\r\n\r\n};\r\n\r\nTHREE.BinaryTextureLoader.prototype = {\r\n\r\n\tconstructor: THREE.BinaryTextureLoader,\r\n\r\n\tload: function ( url, onLoad, onProgress, onError ) {\r\n\r\n\t\tvar scope = this;\r\n\r\n\t\tvar texture = new THREE.DataTexture();\r\n\r\n\t\tvar loader = new THREE.XHRLoader( this.manager );\r\n\t\tloader.setCrossOrigin( this.crossOrigin );\r\n\t\tloader.setResponseType( 'arraybuffer' );\r\n\r\n\t\tloader.load( url, function ( buffer ) {\r\n\r\n\t\t\tvar texData = scope._parser( buffer );\r\n\r\n\t\t\tif ( ! texData ) return;\r\n\r\n\t\t\tif ( undefined !== texData.image ) {\r\n\r\n\t\t\t\ttexture.image = texData.image;\r\n\r\n\t\t\t} else if ( undefined !== texData.data ) {\r\n\r\n\t\t\t\ttexture.image.width = texData.width;\r\n\t\t\t\ttexture.image.height = texData.height;\r\n\t\t\t\ttexture.image.data = texData.data;\r\n\r\n\t\t\t}\r\n\r\n\t\t\ttexture.wrapS = undefined !== texData.wrapS ? texData.wrapS : THREE.ClampToEdgeWrapping;\r\n\t\t\ttexture.wrapT = undefined !== texData.wrapT ? texData.wrapT : THREE.ClampToEdgeWrapping;\r\n\r\n\t\t\ttexture.magFilter = undefined !== texData.magFilter ? texData.magFilter : THREE.LinearFilter;\r\n\t\t\ttexture.minFilter = undefined !== texData.minFilter ? texData.minFilter : THREE.LinearMipMapLinearFilter;\r\n\r\n\t\t\ttexture.anisotropy = undefined !== texData.anisotropy ? texData.anisotropy : 1;\r\n\r\n\t\t\tif ( undefined !== texData.format ) {\r\n\r\n\t\t\t\ttexture.format = texData.format;\r\n\r\n\t\t\t}\r\n\t\t\tif ( undefined !== texData.type ) {\r\n\r\n\t\t\t\ttexture.type = texData.type;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( undefined !== texData.mipmaps ) {\r\n\r\n\t\t\t\ttexture.mipmaps = texData.mipmaps;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( 1 === texData.mipmapCount ) {\r\n\r\n\t\t\t\ttexture.minFilter = THREE.LinearFilter;\r\n\r\n\t\t\t}\r\n\r\n\t\t\ttexture.needsUpdate = true;\r\n\r\n\t\t\tif ( onLoad ) onLoad( texture, texData );\r\n\r\n\t\t}, onProgress, onError );\r\n\r\n\r\n\t\treturn texture;\r\n\r\n\t},\r\n\r\n\tsetCrossOrigin: function ( value ) {\r\n\r\n\t\tthis.crossOrigin = value;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/loaders/CompressedTextureLoader.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n *\r\n * Abstract Base class to block based textures loader (dds, pvr, ...)\r\n */\r\n\r\nTHREE.CompressedTextureLoader = function ( manager ) {\r\n\r\n\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\r\n\r\n\t// override in sub classes\r\n\tthis._parser = null;\r\n\r\n};\r\n\r\n\r\nTHREE.CompressedTextureLoader.prototype = {\r\n\r\n\tconstructor: THREE.CompressedTextureLoader,\r\n\r\n\tload: function ( url, onLoad, onProgress, onError ) {\r\n\r\n\t\tvar scope = this;\r\n\r\n\t\tvar images = [];\r\n\r\n\t\tvar texture = new THREE.CompressedTexture();\r\n\t\ttexture.image = images;\r\n\r\n\t\tvar loader = new THREE.XHRLoader( this.manager );\r\n\t\tloader.setCrossOrigin( this.crossOrigin );\r\n\t\tloader.setResponseType( 'arraybuffer' );\r\n\r\n\t\tif ( Array.isArray( url ) ) {\r\n\r\n\t\t\tvar loaded = 0;\r\n\r\n\t\t\tvar loadTexture = function ( i ) {\r\n\r\n\t\t\t\tloader.load( url[ i ], function ( buffer ) {\r\n\r\n\t\t\t\t\tvar texDatas = scope._parser( buffer, true );\r\n\r\n\t\t\t\t\timages[ i ] = {\r\n\t\t\t\t\t\twidth: texDatas.width,\r\n\t\t\t\t\t\theight: texDatas.height,\r\n\t\t\t\t\t\tformat: texDatas.format,\r\n\t\t\t\t\t\tmipmaps: texDatas.mipmaps\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t\tloaded += 1;\r\n\r\n\t\t\t\t\tif ( loaded === 6 ) {\r\n\r\n\t\t\t\t\t\tif ( texDatas.mipmapCount === 1 )\r\n \t\t\t\t\t\t\ttexture.minFilter = THREE.LinearFilter;\r\n\r\n\t\t\t\t\t\ttexture.format = texDatas.format;\r\n\t\t\t\t\t\ttexture.needsUpdate = true;\r\n\r\n\t\t\t\t\t\tif ( onLoad ) onLoad( texture );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}, onProgress, onError );\r\n\r\n\t\t\t};\r\n\r\n\t\t\tfor ( var i = 0, il = url.length; i < il; ++ i ) {\r\n\r\n\t\t\t\tloadTexture( i );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// compressed cubemap texture stored in a single DDS file\r\n\r\n\t\t\tloader.load( url, function ( buffer ) {\r\n\r\n\t\t\t\tvar texDatas = scope._parser( buffer, true );\r\n\r\n\t\t\t\tif ( texDatas.isCubemap ) {\r\n\r\n\t\t\t\t\tvar faces = texDatas.mipmaps.length / texDatas.mipmapCount;\r\n\r\n\t\t\t\t\tfor ( var f = 0; f < faces; f ++ ) {\r\n\r\n\t\t\t\t\t\timages[ f ] = { mipmaps : [] };\r\n\r\n\t\t\t\t\t\tfor ( var i = 0; i < texDatas.mipmapCount; i ++ ) {\r\n\r\n\t\t\t\t\t\t\timages[ f ].mipmaps.push( texDatas.mipmaps[ f * texDatas.mipmapCount + i ] );\r\n\t\t\t\t\t\t\timages[ f ].format = texDatas.format;\r\n\t\t\t\t\t\t\timages[ f ].width = texDatas.width;\r\n\t\t\t\t\t\t\timages[ f ].height = texDatas.height;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\ttexture.image.width = texDatas.width;\r\n\t\t\t\t\ttexture.image.height = texDatas.height;\r\n\t\t\t\t\ttexture.mipmaps = texDatas.mipmaps;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( texDatas.mipmapCount === 1 ) {\r\n\r\n\t\t\t\t\ttexture.minFilter = THREE.LinearFilter;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttexture.format = texDatas.format;\r\n\t\t\t\ttexture.needsUpdate = true;\r\n\r\n\t\t\t\tif ( onLoad ) onLoad( texture );\r\n\r\n\t\t\t}, onProgress, onError );\r\n\r\n\t\t}\r\n\r\n\t\treturn texture;\r\n\r\n\t},\r\n\r\n\tsetCrossOrigin: function ( value ) {\r\n\r\n\t\tthis.crossOrigin = value;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/materials/Material.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.Material = function () {\r\n\r\n\tObject.defineProperty( this, 'id', { value: THREE.MaterialIdCount ++ } );\r\n\r\n\tthis.uuid = THREE.Math.generateUUID();\r\n\r\n\tthis.name = '';\r\n\tthis.type = 'Material';\r\n\r\n\tthis.side = THREE.FrontSide;\r\n\r\n\tthis.opacity = 1;\r\n\tthis.transparent = false;\r\n\r\n\tthis.blending = THREE.NormalBlending;\r\n\r\n\tthis.blendSrc = THREE.SrcAlphaFactor;\r\n\tthis.blendDst = THREE.OneMinusSrcAlphaFactor;\r\n\tthis.blendEquation = THREE.AddEquation;\r\n\tthis.blendSrcAlpha = null;\r\n\tthis.blendDstAlpha = null;\r\n\tthis.blendEquationAlpha = null;\r\n\r\n\tthis.depthFunc = THREE.LessEqualDepth;\r\n\tthis.depthTest = true;\r\n\tthis.depthWrite = true;\r\n\r\n\tthis.colorWrite = true;\r\n\r\n\tthis.precision = null; // override the renderer's default precision for this material\r\n\r\n\tthis.polygonOffset = false;\r\n\tthis.polygonOffsetFactor = 0;\r\n\tthis.polygonOffsetUnits = 0;\r\n\r\n\tthis.alphaTest = 0;\r\n\r\n\tthis.overdraw = 0; // Overdrawn pixels (typically between 0 and 1) for fixing antialiasing gaps in CanvasRenderer\r\n\r\n\tthis.visible = true;\r\n\r\n\tthis._needsUpdate = true;\r\n\r\n};\r\n\r\nTHREE.Material.prototype = {\r\n\r\n\tconstructor: THREE.Material,\r\n\r\n\tget needsUpdate () {\r\n\r\n\t\treturn this._needsUpdate;\r\n\r\n\t},\r\n\r\n\tset needsUpdate ( value ) {\r\n\r\n\t\tif ( value === true ) this.update();\r\n\r\n\t\tthis._needsUpdate = value;\r\n\r\n\t},\r\n\r\n\tsetValues: function ( values ) {\r\n\r\n\t\tif ( values === undefined ) return;\r\n\r\n\t\tfor ( var key in values ) {\r\n\r\n\t\t\tvar newValue = values[ key ];\r\n\r\n\t\t\tif ( newValue === undefined ) {\r\n\r\n\t\t\t\tconsole.warn( \"THREE.Material: '\" + key + \"' parameter is undefined.\" );\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar currentValue = this[ key ];\r\n\r\n\t\t\tif ( currentValue === undefined ) {\r\n\r\n\t\t\t\tconsole.warn( \"THREE.\" + this.type + \": '\" + key + \"' is not a property of this material.\" );\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( currentValue instanceof THREE.Color ) {\r\n\r\n\t\t\t\tcurrentValue.set( newValue );\r\n\r\n\t\t\t} else if ( currentValue instanceof THREE.Vector3 && newValue instanceof THREE.Vector3 ) {\r\n\r\n\t\t\t\tcurrentValue.copy( newValue );\r\n\r\n\t\t\t} else if ( key === 'overdraw' ) {\r\n\r\n\t\t\t\t// ensure overdraw is backwards-compatible with legacy boolean type\r\n\t\t\t\tthis[ key ] = Number( newValue );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthis[ key ] = newValue;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\ttoJSON: function ( meta ) {\r\n\r\n\t\tvar data = {\r\n\t\t\tmetadata: {\r\n\t\t\t\tversion: 4.4,\r\n\t\t\t\ttype: 'Material',\r\n\t\t\t\tgenerator: 'Material.toJSON'\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t// standard Material serialization\r\n\t\tdata.uuid = this.uuid;\r\n\t\tdata.type = this.type;\r\n\t\tif ( this.name !== '' ) data.name = this.name;\r\n\r\n\t\tif ( this.color instanceof THREE.Color ) data.color = this.color.getHex();\r\n\t\tif ( this.emissive instanceof THREE.Color ) data.emissive = this.emissive.getHex();\r\n\t\tif ( this.specular instanceof THREE.Color ) data.specular = this.specular.getHex();\r\n\t\tif ( this.shininess !== undefined ) data.shininess = this.shininess;\r\n\r\n\t\tif ( this.map instanceof THREE.Texture ) data.map = this.map.toJSON( meta ).uuid;\r\n\t\tif ( this.alphaMap instanceof THREE.Texture ) data.alphaMap = this.alphaMap.toJSON( meta ).uuid;\r\n\t\tif ( this.lightMap instanceof THREE.Texture ) data.lightMap = this.lightMap.toJSON( meta ).uuid;\r\n\t\tif ( this.bumpMap instanceof THREE.Texture ) {\r\n\r\n\t\t\tdata.bumpMap = this.bumpMap.toJSON( meta ).uuid;\r\n\t\t\tdata.bumpScale = this.bumpScale;\r\n\r\n\t\t}\r\n\t\tif ( this.normalMap instanceof THREE.Texture ) {\r\n\r\n\t\t\tdata.normalMap = this.normalMap.toJSON( meta ).uuid;\r\n\t\t\tdata.normalScale = this.normalScale; // Removed for now, causes issue in editor ui.js\r\n\r\n\t\t}\r\n\t\tif ( this.displacementMap instanceof THREE.Texture ) {\r\n\r\n\t\t\tdata.displacementMap = this.displacementMap.toJSON( meta ).uuid;\r\n\t\t\tdata.displacementScale = this.displacementScale;\r\n\t\t\tdata.displacementBias = this.displacementBias;\r\n\r\n\t\t}\r\n\t\tif ( this.specularMap instanceof THREE.Texture ) data.specularMap = this.specularMap.toJSON( meta ).uuid;\r\n\t\tif ( this.envMap instanceof THREE.Texture ) {\r\n\r\n\t\t\tdata.envMap = this.envMap.toJSON( meta ).uuid;\r\n\t\t\tdata.reflectivity = this.reflectivity; // Scale behind envMap\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.size !== undefined ) data.size = this.size;\r\n\t\tif ( this.sizeAttenuation !== undefined ) data.sizeAttenuation = this.sizeAttenuation;\r\n\r\n\t\tif ( this.vertexColors !== undefined && this.vertexColors !== THREE.NoColors ) data.vertexColors = this.vertexColors;\r\n\t\tif ( this.shading !== undefined && this.shading !== THREE.SmoothShading ) data.shading = this.shading;\r\n\t\tif ( this.blending !== undefined && this.blending !== THREE.NormalBlending ) data.blending = this.blending;\r\n\t\tif ( this.side !== undefined && this.side !== THREE.FrontSide ) data.side = this.side;\r\n\r\n\t\tif ( this.opacity < 1 ) data.opacity = this.opacity;\r\n\t\tif ( this.transparent === true ) data.transparent = this.transparent;\r\n\t\tif ( this.alphaTest > 0 ) data.alphaTest = this.alphaTest;\r\n\t\tif ( this.wireframe === true ) data.wireframe = this.wireframe;\r\n\t\tif ( this.wireframeLinewidth > 1 ) data.wireframeLinewidth = this.wireframeLinewidth;\r\n\r\n\t\treturn data;\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t},\r\n\r\n\tcopy: function ( source ) {\r\n\r\n\t\tthis.name = source.name;\r\n\r\n\t\tthis.side = source.side;\r\n\r\n\t\tthis.opacity = source.opacity;\r\n\t\tthis.transparent = source.transparent;\r\n\r\n\t\tthis.blending = source.blending;\r\n\r\n\t\tthis.blendSrc = source.blendSrc;\r\n\t\tthis.blendDst = source.blendDst;\r\n\t\tthis.blendEquation = source.blendEquation;\r\n\t\tthis.blendSrcAlpha = source.blendSrcAlpha;\r\n\t\tthis.blendDstAlpha = source.blendDstAlpha;\r\n\t\tthis.blendEquationAlpha = source.blendEquationAlpha;\r\n\r\n\t\tthis.depthFunc = source.depthFunc;\r\n\t\tthis.depthTest = source.depthTest;\r\n\t\tthis.depthWrite = source.depthWrite;\r\n\r\n\t\tthis.precision = source.precision;\r\n\r\n\t\tthis.polygonOffset = source.polygonOffset;\r\n\t\tthis.polygonOffsetFactor = source.polygonOffsetFactor;\r\n\t\tthis.polygonOffsetUnits = source.polygonOffsetUnits;\r\n\r\n\t\tthis.alphaTest = source.alphaTest;\r\n\r\n\t\tthis.overdraw = source.overdraw;\r\n\r\n\t\tthis.visible = source.visible;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tupdate: function () {\r\n\r\n\t\tthis.dispatchEvent( { type: 'update' } );\r\n\r\n\t},\r\n\r\n\tdispose: function () {\r\n\r\n\t\tthis.dispatchEvent( { type: 'dispose' } );\r\n\r\n\t},\r\n\r\n\t// Deprecated\r\n\r\n\tget wrapAround () {\r\n\r\n\t\tconsole.warn( 'THREE.' + this.type + ': .wrapAround has been removed.' );\r\n\r\n\t},\r\n\r\n\tset wrapAround ( boolean ) {\r\n\r\n\t\tconsole.warn( 'THREE.' + this.type + ': .wrapAround has been removed.' );\r\n\r\n\t},\r\n\r\n\tget wrapRGB () {\r\n\r\n\t\tconsole.warn( 'THREE.' + this.type + ': .wrapRGB has been removed.' );\r\n\t\treturn new THREE.Color();\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.EventDispatcher.prototype.apply( THREE.Material.prototype );\r\n\r\nTHREE.MaterialIdCount = 0;\r\n\r\n// File:src/materials/LineBasicMaterial.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n *\r\n * parameters = {\r\n *  color: <hex>,\r\n *  opacity: <float>,\r\n *\r\n *  blending: THREE.NormalBlending,\r\n *  depthTest: <bool>,\r\n *  depthWrite: <bool>,\r\n *\r\n *  linewidth: <float>,\r\n *  linecap: \"round\",\r\n *  linejoin: \"round\",\r\n *\r\n *  vertexColors: <bool>\r\n *\r\n *  fog: <bool>\r\n * }\r\n */\r\n\r\nTHREE.LineBasicMaterial = function ( parameters ) {\r\n\r\n\tTHREE.Material.call( this );\r\n\r\n\tthis.type = 'LineBasicMaterial';\r\n\r\n\tthis.color = new THREE.Color( 0xffffff );\r\n\r\n\tthis.linewidth = 1;\r\n\tthis.linecap = 'round';\r\n\tthis.linejoin = 'round';\r\n\r\n\tthis.vertexColors = THREE.NoColors;\r\n\r\n\tthis.fog = true;\r\n\r\n\tthis.setValues( parameters );\r\n\r\n};\r\n\r\nTHREE.LineBasicMaterial.prototype = Object.create( THREE.Material.prototype );\r\nTHREE.LineBasicMaterial.prototype.constructor = THREE.LineBasicMaterial;\r\n\r\nTHREE.LineBasicMaterial.prototype.copy = function ( source ) {\r\n\r\n\tTHREE.Material.prototype.copy.call( this, source );\r\n\r\n\tthis.color.copy( source.color );\r\n\r\n\tthis.linewidth = source.linewidth;\r\n\tthis.linecap = source.linecap;\r\n\tthis.linejoin = source.linejoin;\r\n\r\n\tthis.vertexColors = source.vertexColors;\r\n\r\n\tthis.fog = source.fog;\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\n// File:src/materials/LineDashedMaterial.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n *\r\n * parameters = {\r\n *  color: <hex>,\r\n *  opacity: <float>,\r\n *\r\n *  blending: THREE.NormalBlending,\r\n *  depthTest: <bool>,\r\n *  depthWrite: <bool>,\r\n *\r\n *  linewidth: <float>,\r\n *\r\n *  scale: <float>,\r\n *  dashSize: <float>,\r\n *  gapSize: <float>,\r\n *\r\n *  vertexColors: <bool>\r\n *\r\n *  fog: <bool>\r\n * }\r\n */\r\n\r\nTHREE.LineDashedMaterial = function ( parameters ) {\r\n\r\n\tTHREE.Material.call( this );\r\n\r\n\tthis.type = 'LineDashedMaterial';\r\n\r\n\tthis.color = new THREE.Color( 0xffffff );\r\n\r\n\tthis.linewidth = 1;\r\n\r\n\tthis.scale = 1;\r\n\tthis.dashSize = 3;\r\n\tthis.gapSize = 1;\r\n\r\n\tthis.vertexColors = false;\r\n\r\n\tthis.fog = true;\r\n\r\n\tthis.setValues( parameters );\r\n\r\n};\r\n\r\nTHREE.LineDashedMaterial.prototype = Object.create( THREE.Material.prototype );\r\nTHREE.LineDashedMaterial.prototype.constructor = THREE.LineDashedMaterial;\r\n\r\nTHREE.LineDashedMaterial.prototype.copy = function ( source ) {\r\n\r\n\tTHREE.Material.prototype.copy.call( this, source );\r\n\r\n\tthis.color.copy( source.color );\r\n\t\r\n\tthis.linewidth = source.linewidth;\r\n\r\n\tthis.scale = source.scale;\r\n\tthis.dashSize = source.dashSize;\r\n\tthis.gapSize = source.gapSize;\r\n\r\n\tthis.vertexColors = source.vertexColors;\r\n\r\n\tthis.fog = source.fog;\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\n// File:src/materials/MeshBasicMaterial.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n *\r\n * parameters = {\r\n *  color: <hex>,\r\n *  opacity: <float>,\r\n *  map: new THREE.Texture( <Image> ),\r\n *\r\n *  aoMap: new THREE.Texture( <Image> ),\r\n *  aoMapIntensity: <float>\r\n *\r\n *  specularMap: new THREE.Texture( <Image> ),\r\n *\r\n *  alphaMap: new THREE.Texture( <Image> ),\r\n *\r\n *  envMap: new THREE.TextureCube( [posx, negx, posy, negy, posz, negz] ),\r\n *  combine: THREE.Multiply,\r\n *  reflectivity: <float>,\r\n *  refractionRatio: <float>,\r\n *\r\n *  shading: THREE.SmoothShading,\r\n *  blending: THREE.NormalBlending,\r\n *  depthTest: <bool>,\r\n *  depthWrite: <bool>,\r\n *\r\n *  wireframe: <boolean>,\r\n *  wireframeLinewidth: <float>,\r\n *\r\n *  vertexColors: THREE.NoColors / THREE.VertexColors / THREE.FaceColors,\r\n *\r\n *  skinning: <bool>,\r\n *  morphTargets: <bool>,\r\n *\r\n *  fog: <bool>\r\n * }\r\n */\r\n\r\nTHREE.MeshBasicMaterial = function ( parameters ) {\r\n\r\n\tTHREE.Material.call( this );\r\n\r\n\tthis.type = 'MeshBasicMaterial';\r\n\r\n\tthis.color = new THREE.Color( 0xffffff ); // emissive\r\n\r\n\tthis.map = null;\r\n\r\n\tthis.aoMap = null;\r\n\tthis.aoMapIntensity = 1.0;\r\n\r\n\tthis.specularMap = null;\r\n\r\n\tthis.alphaMap = null;\r\n\r\n\tthis.envMap = null;\r\n\tthis.combine = THREE.MultiplyOperation;\r\n\tthis.reflectivity = 1;\r\n\tthis.refractionRatio = 0.98;\r\n\r\n\tthis.fog = true;\r\n\r\n\tthis.shading = THREE.SmoothShading;\r\n\r\n\tthis.wireframe = false;\r\n\tthis.wireframeLinewidth = 1;\r\n\tthis.wireframeLinecap = 'round';\r\n\tthis.wireframeLinejoin = 'round';\r\n\r\n\tthis.vertexColors = THREE.NoColors;\r\n\r\n\tthis.skinning = false;\r\n\tthis.morphTargets = false;\r\n\r\n\tthis.setValues( parameters );\r\n\r\n};\r\n\r\nTHREE.MeshBasicMaterial.prototype = Object.create( THREE.Material.prototype );\r\nTHREE.MeshBasicMaterial.prototype.constructor = THREE.MeshBasicMaterial;\r\n\r\nTHREE.MeshBasicMaterial.prototype.copy = function ( source ) {\r\n\t\r\n\tTHREE.Material.prototype.copy.call( this, source );\r\n\r\n\tthis.color.copy( source.color );\r\n\r\n\tthis.map = source.map;\r\n\r\n\tthis.aoMap = source.aoMap;\r\n\tthis.aoMapIntensity = source.aoMapIntensity;\r\n\r\n\tthis.specularMap = source.specularMap;\r\n\r\n\tthis.alphaMap = source.alphaMap;\r\n\r\n\tthis.envMap = source.envMap;\r\n\tthis.combine = source.combine;\r\n\tthis.reflectivity = source.reflectivity;\r\n\tthis.refractionRatio = source.refractionRatio;\r\n\r\n\tthis.fog = source.fog;\r\n\r\n\tthis.shading = source.shading;\r\n\r\n\tthis.wireframe = source.wireframe;\r\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\r\n\tthis.wireframeLinecap = source.wireframeLinecap;\r\n\tthis.wireframeLinejoin = source.wireframeLinejoin;\r\n\r\n\tthis.vertexColors = source.vertexColors;\r\n\r\n\tthis.skinning = source.skinning;\r\n\tthis.morphTargets = source.morphTargets;\r\n\t\r\n\treturn this;\r\n\r\n};\r\n\r\n// File:src/materials/MeshLambertMaterial.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n *\r\n * parameters = {\r\n *  color: <hex>,\r\n *  emissive: <hex>,\r\n *  opacity: <float>,\r\n *\r\n *  map: new THREE.Texture( <Image> ),\r\n *\r\n *  specularMap: new THREE.Texture( <Image> ),\r\n *\r\n *  alphaMap: new THREE.Texture( <Image> ),\r\n *\r\n *  envMap: new THREE.TextureCube( [posx, negx, posy, negy, posz, negz] ),\r\n *  combine: THREE.Multiply,\r\n *  reflectivity: <float>,\r\n *  refractionRatio: <float>,\r\n *\r\n *  blending: THREE.NormalBlending,\r\n *  depthTest: <bool>,\r\n *  depthWrite: <bool>,\r\n *\r\n *  wireframe: <boolean>,\r\n *  wireframeLinewidth: <float>,\r\n *\r\n *  vertexColors: THREE.NoColors / THREE.VertexColors / THREE.FaceColors,\r\n *\r\n *  skinning: <bool>,\r\n *  morphTargets: <bool>,\r\n *  morphNormals: <bool>,\r\n *\r\n *\tfog: <bool>\r\n * }\r\n */\r\n\r\nTHREE.MeshLambertMaterial = function ( parameters ) {\r\n\r\n\tTHREE.Material.call( this );\r\n\r\n\tthis.type = 'MeshLambertMaterial';\r\n\r\n\tthis.color = new THREE.Color( 0xffffff ); // diffuse\r\n\tthis.emissive = new THREE.Color( 0x000000 );\r\n\r\n\tthis.map = null;\r\n\r\n\tthis.specularMap = null;\r\n\r\n\tthis.alphaMap = null;\r\n\r\n\tthis.envMap = null;\r\n\tthis.combine = THREE.MultiplyOperation;\r\n\tthis.reflectivity = 1;\r\n\tthis.refractionRatio = 0.98;\r\n\r\n\tthis.fog = true;\r\n\r\n\tthis.wireframe = false;\r\n\tthis.wireframeLinewidth = 1;\r\n\tthis.wireframeLinecap = 'round';\r\n\tthis.wireframeLinejoin = 'round';\r\n\r\n\tthis.vertexColors = THREE.NoColors;\r\n\r\n\tthis.skinning = false;\r\n\tthis.morphTargets = false;\r\n\tthis.morphNormals = false;\r\n\r\n\tthis.setValues( parameters );\r\n\r\n};\r\n\r\nTHREE.MeshLambertMaterial.prototype = Object.create( THREE.Material.prototype );\r\nTHREE.MeshLambertMaterial.prototype.constructor = THREE.MeshLambertMaterial;\r\n\r\nTHREE.MeshLambertMaterial.prototype.copy = function ( source ) {\r\n\r\n\tTHREE.Material.prototype.copy.call( this, source );\r\n\r\n\tthis.color.copy( source.color );\r\n\tthis.emissive.copy( source.emissive );\r\n\r\n\tthis.map = source.map;\r\n\r\n\tthis.specularMap = source.specularMap;\r\n\r\n\tthis.alphaMap = source.alphaMap;\r\n\r\n\tthis.envMap = source.envMap;\r\n\tthis.combine = source.combine;\r\n\tthis.reflectivity = source.reflectivity;\r\n\tthis.refractionRatio = source.refractionRatio;\r\n\r\n\tthis.fog = source.fog;\r\n\r\n\tthis.wireframe = source.wireframe;\r\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\r\n\tthis.wireframeLinecap = source.wireframeLinecap;\r\n\tthis.wireframeLinejoin = source.wireframeLinejoin;\r\n\r\n\tthis.vertexColors = source.vertexColors;\r\n\r\n\tthis.skinning = source.skinning;\r\n\tthis.morphTargets = source.morphTargets;\r\n\tthis.morphNormals = source.morphNormals;\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\n// File:src/materials/MeshPhongMaterial.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n *\r\n * parameters = {\r\n *  color: <hex>,\r\n *  emissive: <hex>,\r\n *  specular: <hex>,\r\n *  shininess: <float>,\r\n *  opacity: <float>,\r\n *\r\n *  map: new THREE.Texture( <Image> ),\r\n *\r\n *  lightMap: new THREE.Texture( <Image> ),\r\n *  lightMapIntensity: <float>\r\n *\r\n *  aoMap: new THREE.Texture( <Image> ),\r\n *  aoMapIntensity: <float>\r\n *\r\n *  emissiveMap: new THREE.Texture( <Image> ),\r\n *\r\n *  bumpMap: new THREE.Texture( <Image> ),\r\n *  bumpScale: <float>,\r\n *\r\n *  normalMap: new THREE.Texture( <Image> ),\r\n *  normalScale: <Vector2>,\r\n *\r\n *  displacementMap: new THREE.Texture( <Image> ),\r\n *  displacementScale: <float>,\r\n *  displacementBias: <float>,\r\n *\r\n *  specularMap: new THREE.Texture( <Image> ),\r\n *\r\n *  alphaMap: new THREE.Texture( <Image> ),\r\n *\r\n *  envMap: new THREE.TextureCube( [posx, negx, posy, negy, posz, negz] ),\r\n *  combine: THREE.Multiply,\r\n *  reflectivity: <float>,\r\n *  refractionRatio: <float>,\r\n *\r\n *  shading: THREE.SmoothShading,\r\n *  blending: THREE.NormalBlending,\r\n *  depthTest: <bool>,\r\n *  depthWrite: <bool>,\r\n *\r\n *  wireframe: <boolean>,\r\n *  wireframeLinewidth: <float>,\r\n *\r\n *  vertexColors: THREE.NoColors / THREE.VertexColors / THREE.FaceColors,\r\n *\r\n *  skinning: <bool>,\r\n *  morphTargets: <bool>,\r\n *  morphNormals: <bool>,\r\n *\r\n *\tfog: <bool>\r\n * }\r\n */\r\n\r\nTHREE.MeshPhongMaterial = function ( parameters ) {\r\n\r\n\tTHREE.Material.call( this );\r\n\r\n\tthis.type = 'MeshPhongMaterial';\r\n\r\n\tthis.color = new THREE.Color( 0xffffff ); // diffuse\r\n\tthis.emissive = new THREE.Color( 0x000000 );\r\n\tthis.specular = new THREE.Color( 0x111111 );\r\n\tthis.shininess = 30;\r\n\r\n\tthis.metal = false;\r\n\r\n\tthis.map = null;\r\n\r\n\tthis.lightMap = null;\r\n\tthis.lightMapIntensity = 1.0;\r\n\r\n\tthis.aoMap = null;\r\n\tthis.aoMapIntensity = 1.0;\r\n\r\n\tthis.emissiveMap = null;\r\n\r\n\tthis.bumpMap = null;\r\n\tthis.bumpScale = 1;\r\n\r\n\tthis.normalMap = null;\r\n\tthis.normalScale = new THREE.Vector2( 1, 1 );\r\n\r\n\tthis.displacementMap = null;\r\n\tthis.displacementScale = 1;\r\n\tthis.displacementBias = 0;\r\n\r\n\tthis.specularMap = null;\r\n\r\n\tthis.alphaMap = null;\r\n\r\n\tthis.envMap = null;\r\n\tthis.combine = THREE.MultiplyOperation;\r\n\tthis.reflectivity = 1;\r\n\tthis.refractionRatio = 0.98;\r\n\r\n\tthis.fog = true;\r\n\r\n\tthis.shading = THREE.SmoothShading;\r\n\r\n\tthis.wireframe = false;\r\n\tthis.wireframeLinewidth = 1;\r\n\tthis.wireframeLinecap = 'round';\r\n\tthis.wireframeLinejoin = 'round';\r\n\r\n\tthis.vertexColors = THREE.NoColors;\r\n\r\n\tthis.skinning = false;\r\n\tthis.morphTargets = false;\r\n\tthis.morphNormals = false;\r\n\r\n\tthis.setValues( parameters );\r\n\r\n};\r\n\r\nTHREE.MeshPhongMaterial.prototype = Object.create( THREE.Material.prototype );\r\nTHREE.MeshPhongMaterial.prototype.constructor = THREE.MeshPhongMaterial;\r\n\r\nTHREE.MeshPhongMaterial.prototype.copy = function ( source ) {\r\n\r\n\tTHREE.Material.prototype.copy.call( this, source );\r\n\r\n\tthis.color.copy( source.color );\r\n\tthis.emissive.copy( source.emissive );\r\n\tthis.specular.copy( source.specular );\r\n\tthis.shininess = source.shininess;\r\n\r\n\tthis.metal = source.metal;\r\n\r\n\tthis.map = source.map;\r\n\r\n\tthis.lightMap = source.lightMap;\r\n\tthis.lightMapIntensity = source.lightMapIntensity;\r\n\r\n\tthis.aoMap = source.aoMap;\r\n\tthis.aoMapIntensity = source.aoMapIntensity;\r\n\r\n\tthis.emissiveMap = source.emissiveMap;\r\n\r\n\tthis.bumpMap = source.bumpMap;\r\n\tthis.bumpScale = source.bumpScale;\r\n\r\n\tthis.normalMap = source.normalMap;\r\n\tthis.normalScale.copy( source.normalScale );\r\n\r\n\tthis.displacementMap = source.displacementMap;\r\n\tthis.displacementScale = source.displacementScale;\r\n\tthis.displacementBias = source.displacementBias;\r\n\r\n\tthis.specularMap = source.specularMap;\r\n\r\n\tthis.alphaMap = source.alphaMap;\r\n\r\n\tthis.envMap = source.envMap;\r\n\tthis.combine = source.combine;\r\n\tthis.reflectivity = source.reflectivity;\r\n\tthis.refractionRatio = source.refractionRatio;\r\n\r\n\tthis.fog = source.fog;\r\n\r\n\tthis.shading = source.shading;\r\n\r\n\tthis.wireframe = source.wireframe;\r\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\r\n\tthis.wireframeLinecap = source.wireframeLinecap;\r\n\tthis.wireframeLinejoin = source.wireframeLinejoin;\r\n\r\n\tthis.vertexColors = source.vertexColors;\r\n\r\n\tthis.skinning = source.skinning;\r\n\tthis.morphTargets = source.morphTargets;\r\n\tthis.morphNormals = source.morphNormals;\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\n// File:src/materials/MeshDepthMaterial.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n *\r\n * parameters = {\r\n *  opacity: <float>,\r\n *\r\n *  blending: THREE.NormalBlending,\r\n *  depthTest: <bool>,\r\n *  depthWrite: <bool>,\r\n *\r\n *  wireframe: <boolean>,\r\n *  wireframeLinewidth: <float>\r\n * }\r\n */\r\n\r\nTHREE.MeshDepthMaterial = function ( parameters ) {\r\n\r\n\tTHREE.Material.call( this );\r\n\r\n\tthis.type = 'MeshDepthMaterial';\r\n\r\n\tthis.morphTargets = false;\r\n\tthis.wireframe = false;\r\n\tthis.wireframeLinewidth = 1;\r\n\r\n\tthis.setValues( parameters );\r\n\r\n};\r\n\r\nTHREE.MeshDepthMaterial.prototype = Object.create( THREE.Material.prototype );\r\nTHREE.MeshDepthMaterial.prototype.constructor = THREE.MeshDepthMaterial;\r\n\r\nTHREE.MeshDepthMaterial.prototype.copy = function ( source ) {\r\n\r\n\tTHREE.Material.prototype.copy.call( this, source );\r\n\r\n\tthis.wireframe = source.wireframe;\r\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\n// File:src/materials/MeshNormalMaterial.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n *\r\n * parameters = {\r\n *  opacity: <float>,\r\n *\r\n *  shading: THREE.FlatShading,\r\n *  blending: THREE.NormalBlending,\r\n *  depthTest: <bool>,\r\n *  depthWrite: <bool>,\r\n *\r\n *  wireframe: <boolean>,\r\n *  wireframeLinewidth: <float>\r\n * }\r\n */\r\n\r\nTHREE.MeshNormalMaterial = function ( parameters ) {\r\n\r\n\tTHREE.Material.call( this, parameters );\r\n\r\n\tthis.type = 'MeshNormalMaterial';\r\n\r\n\tthis.wireframe = false;\r\n\tthis.wireframeLinewidth = 1;\r\n\r\n\tthis.morphTargets = false;\r\n\r\n\tthis.setValues( parameters );\r\n\r\n};\r\n\r\nTHREE.MeshNormalMaterial.prototype = Object.create( THREE.Material.prototype );\r\nTHREE.MeshNormalMaterial.prototype.constructor = THREE.MeshNormalMaterial;\r\n\r\nTHREE.MeshNormalMaterial.prototype.copy = function ( source ) {\r\n\r\n\tTHREE.Material.prototype.copy.call( this, source );\r\n\r\n\tthis.wireframe = source.wireframe;\r\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\n// File:src/materials/MultiMaterial.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.MultiMaterial = function ( materials ) {\r\n\r\n\tthis.uuid = THREE.Math.generateUUID();\r\n\r\n\tthis.type = 'MultiMaterial';\r\n\r\n\tthis.materials = materials instanceof Array ? materials : [];\r\n\r\n\tthis.visible = true;\r\n\r\n};\r\n\r\nTHREE.MultiMaterial.prototype = {\r\n\r\n\tconstructor: THREE.MultiMaterial,\r\n\r\n\ttoJSON: function () {\r\n\r\n\t\tvar output = {\r\n\t\t\tmetadata: {\r\n\t\t\t\tversion: 4.2,\r\n\t\t\t\ttype: 'material',\r\n\t\t\t\tgenerator: 'MaterialExporter'\r\n\t\t\t},\r\n\t\t\tuuid: this.uuid,\r\n\t\t\ttype: this.type,\r\n\t\t\tmaterials: []\r\n\t\t};\r\n\r\n\t\tfor ( var i = 0, l = this.materials.length; i < l; i ++ ) {\r\n\r\n\t\t\toutput.materials.push( this.materials[ i ].toJSON() );\r\n\r\n\t\t}\r\n\r\n\t\toutput.visible = this.visible;\r\n\r\n\t\treturn output;\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\tvar material = new this.constructor();\r\n\r\n\t\tfor ( var i = 0; i < this.materials.length; i ++ ) {\r\n\r\n\t\t\tmaterial.materials.push( this.materials[ i ].clone() );\r\n\r\n\t\t}\r\n\r\n\t\tmaterial.visible = this.visible;\r\n\r\n\t\treturn material;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// backwards compatibility\r\n\r\nTHREE.MeshFaceMaterial = THREE.MultiMaterial;\r\n\r\n// File:src/materials/PointsMaterial.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n *\r\n * parameters = {\r\n *  color: <hex>,\r\n *  opacity: <float>,\r\n *  map: new THREE.Texture( <Image> ),\r\n *\r\n *  size: <float>,\r\n *  sizeAttenuation: <bool>,\r\n *\r\n *  blending: THREE.NormalBlending,\r\n *  depthTest: <bool>,\r\n *  depthWrite: <bool>,\r\n *\r\n *  vertexColors: <bool>,\r\n *\r\n *  fog: <bool>\r\n * }\r\n */\r\n\r\nTHREE.PointsMaterial = function ( parameters ) {\r\n\r\n\tTHREE.Material.call( this );\r\n\r\n\tthis.type = 'PointsMaterial';\r\n\r\n\tthis.color = new THREE.Color( 0xffffff );\r\n\r\n\tthis.map = null;\r\n\r\n\tthis.size = 1;\r\n\tthis.sizeAttenuation = true;\r\n\r\n\tthis.vertexColors = THREE.NoColors;\r\n\r\n\tthis.fog = true;\r\n\r\n\tthis.setValues( parameters );\r\n\r\n};\r\n\r\nTHREE.PointsMaterial.prototype = Object.create( THREE.Material.prototype );\r\nTHREE.PointsMaterial.prototype.constructor = THREE.PointsMaterial;\r\n\r\nTHREE.PointsMaterial.prototype.copy = function ( source ) {\r\n\r\n\tTHREE.Material.prototype.copy.call( this, source );\r\n\r\n\tthis.color.copy( source.color );\r\n\r\n\tthis.map = source.map;\r\n\r\n\tthis.size = source.size;\r\n\tthis.sizeAttenuation = source.sizeAttenuation;\r\n\r\n\tthis.vertexColors = source.vertexColors;\r\n\r\n\tthis.fog = source.fog;\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\n// backwards compatibility\r\n\r\nTHREE.PointCloudMaterial = function ( parameters ) {\r\n\r\n\tconsole.warn( 'THREE.PointCloudMaterial has been renamed to THREE.PointsMaterial.' );\r\n\treturn new THREE.PointsMaterial( parameters );\r\n\r\n};\r\n\r\nTHREE.ParticleBasicMaterial = function ( parameters ) {\r\n\r\n\tconsole.warn( 'THREE.ParticleBasicMaterial has been renamed to THREE.PointsMaterial.' );\r\n\treturn new THREE.PointsMaterial( parameters );\r\n\r\n};\r\n\r\nTHREE.ParticleSystemMaterial = function ( parameters ) {\r\n\r\n\tconsole.warn( 'THREE.ParticleSystemMaterial has been renamed to THREE.PointsMaterial.' );\r\n\treturn new THREE.PointsMaterial( parameters );\r\n\r\n};\r\n\r\n// File:src/materials/ShaderMaterial.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n *\r\n * parameters = {\r\n *  defines: { \"label\" : \"value\" },\r\n *  uniforms: { \"parameter1\": { type: \"f\", value: 1.0 }, \"parameter2\": { type: \"i\" value2: 2 } },\r\n *\r\n *  fragmentShader: <string>,\r\n *  vertexShader: <string>,\r\n *\r\n *  shading: THREE.SmoothShading,\r\n *  blending: THREE.NormalBlending,\r\n *  depthTest: <bool>,\r\n *  depthWrite: <bool>,\r\n *\r\n *  wireframe: <boolean>,\r\n *  wireframeLinewidth: <float>,\r\n *\r\n *  lights: <bool>,\r\n *\r\n *  vertexColors: THREE.NoColors / THREE.VertexColors / THREE.FaceColors,\r\n *\r\n *  skinning: <bool>,\r\n *  morphTargets: <bool>,\r\n *  morphNormals: <bool>,\r\n *\r\n *\tfog: <bool>\r\n * }\r\n */\r\n\r\nTHREE.ShaderMaterial = function ( parameters ) {\r\n\r\n\tTHREE.Material.call( this );\r\n\r\n\tthis.type = 'ShaderMaterial';\r\n\r\n\tthis.defines = {};\r\n\tthis.uniforms = {};\r\n\r\n\tthis.vertexShader = 'void main() {\\n\\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n}';\r\n\tthis.fragmentShader = 'void main() {\\n\\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\\n}';\r\n\r\n\tthis.shading = THREE.SmoothShading;\r\n\r\n\tthis.linewidth = 1;\r\n\r\n\tthis.wireframe = false;\r\n\tthis.wireframeLinewidth = 1;\r\n\r\n\tthis.fog = false; // set to use scene fog\r\n\r\n\tthis.lights = false; // set to use scene lights\r\n\r\n\tthis.vertexColors = THREE.NoColors; // set to use \"color\" attribute stream\r\n\r\n\tthis.skinning = false; // set to use skinning attribute streams\r\n\r\n\tthis.morphTargets = false; // set to use morph targets\r\n\tthis.morphNormals = false; // set to use morph normals\r\n\r\n\tthis.derivatives = false; // set to use derivatives\r\n\r\n\t// When rendered geometry doesn't include these attributes but the material does,\r\n\t// use these default values in WebGL. This avoids errors when buffer data is missing.\r\n\tthis.defaultAttributeValues = {\r\n\t\t'color': [ 1, 1, 1 ],\r\n\t\t'uv': [ 0, 0 ],\r\n\t\t'uv2': [ 0, 0 ]\r\n\t};\r\n\r\n\tthis.index0AttributeName = undefined;\r\n\r\n\tif ( parameters !== undefined ) {\r\n\r\n\t\tif ( parameters.attributes !== undefined ) {\r\n\r\n\t\t\tconsole.error( 'THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead.' );\r\n\r\n\t\t}\r\n\r\n\t\tthis.setValues( parameters );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.ShaderMaterial.prototype = Object.create( THREE.Material.prototype );\r\nTHREE.ShaderMaterial.prototype.constructor = THREE.ShaderMaterial;\r\n\r\nTHREE.ShaderMaterial.prototype.copy = function ( source ) {\r\n\r\n\tTHREE.Material.prototype.copy.call( this, source );\r\n\r\n\tthis.fragmentShader = source.fragmentShader;\r\n\tthis.vertexShader = source.vertexShader;\r\n\r\n\tthis.uniforms = THREE.UniformsUtils.clone( source.uniforms );\r\n\r\n\tthis.attributes = source.attributes;\r\n\tthis.defines = source.defines;\r\n\r\n\tthis.shading = source.shading;\r\n\r\n\tthis.wireframe = source.wireframe;\r\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\r\n\r\n\tthis.fog = source.fog;\r\n\r\n\tthis.lights = source.lights;\r\n\r\n\tthis.vertexColors = source.vertexColors;\r\n\r\n\tthis.skinning = source.skinning;\r\n\r\n\tthis.morphTargets = source.morphTargets;\r\n\tthis.morphNormals = source.morphNormals;\r\n\r\n\tthis.derivatives = source.derivatives;\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\nTHREE.ShaderMaterial.prototype.toJSON = function ( meta ) {\r\n\r\n\tvar data = THREE.Material.prototype.toJSON.call( this, meta );\r\n\r\n\tdata.uniforms = this.uniforms;\r\n\tdata.attributes = this.attributes;\r\n\tdata.vertexShader = this.vertexShader;\r\n\tdata.fragmentShader = this.fragmentShader;\r\n\r\n\treturn data;\r\n\r\n};\r\n\r\n// File:src/materials/RawShaderMaterial.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.RawShaderMaterial = function ( parameters ) {\r\n\r\n\tTHREE.ShaderMaterial.call( this, parameters );\r\n\r\n\tthis.type = 'RawShaderMaterial';\r\n\r\n};\r\n\r\nTHREE.RawShaderMaterial.prototype = Object.create( THREE.ShaderMaterial.prototype );\r\nTHREE.RawShaderMaterial.prototype.constructor = THREE.RawShaderMaterial;\r\n// File:src/materials/SpriteMaterial.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n *\r\n * parameters = {\r\n *  color: <hex>,\r\n *  opacity: <float>,\r\n *  map: new THREE.Texture( <Image> ),\r\n *\r\n *  blending: THREE.NormalBlending,\r\n *  depthTest: <bool>,\r\n *  depthWrite: <bool>,\r\n *\r\n *\tuvOffset: new THREE.Vector2(),\r\n *\tuvScale: new THREE.Vector2(),\r\n *\r\n *  fog: <bool>\r\n * }\r\n */\r\n\r\nTHREE.SpriteMaterial = function ( parameters ) {\r\n\r\n\tTHREE.Material.call( this );\r\n\r\n\tthis.type = 'SpriteMaterial';\r\n\r\n\tthis.color = new THREE.Color( 0xffffff );\r\n\tthis.map = null;\r\n\r\n\tthis.rotation = 0;\r\n\r\n\tthis.fog = false;\r\n\r\n\t// set parameters\r\n\r\n\tthis.setValues( parameters );\r\n\r\n};\r\n\r\nTHREE.SpriteMaterial.prototype = Object.create( THREE.Material.prototype );\r\nTHREE.SpriteMaterial.prototype.constructor = THREE.SpriteMaterial;\r\n\r\nTHREE.SpriteMaterial.prototype.copy = function ( source ) {\r\n\r\n\tTHREE.Material.prototype.copy.call( this, source );\r\n\r\n\tthis.color.copy( source.color );\r\n\tthis.map = source.map;\r\n\r\n\tthis.rotation = source.rotation;\r\n\r\n\tthis.fog = source.fog;\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\n// File:src/textures/Texture.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author szimek / https://github.com/szimek/\r\n */\r\n\r\nTHREE.Texture = function ( image, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\r\n\r\n\tObject.defineProperty( this, 'id', { value: THREE.TextureIdCount ++ } );\r\n\r\n\tthis.uuid = THREE.Math.generateUUID();\r\n\r\n\tthis.name = '';\r\n\tthis.sourceFile = '';\r\n\r\n\tthis.image = image !== undefined ? image : THREE.Texture.DEFAULT_IMAGE;\r\n\tthis.mipmaps = [];\r\n\r\n\tthis.mapping = mapping !== undefined ? mapping : THREE.Texture.DEFAULT_MAPPING;\r\n\r\n\tthis.wrapS = wrapS !== undefined ? wrapS : THREE.ClampToEdgeWrapping;\r\n\tthis.wrapT = wrapT !== undefined ? wrapT : THREE.ClampToEdgeWrapping;\r\n\r\n\tthis.magFilter = magFilter !== undefined ? magFilter : THREE.LinearFilter;\r\n\tthis.minFilter = minFilter !== undefined ? minFilter : THREE.LinearMipMapLinearFilter;\r\n\r\n\tthis.anisotropy = anisotropy !== undefined ? anisotropy : 1;\r\n\r\n\tthis.format = format !== undefined ? format : THREE.RGBAFormat;\r\n\tthis.type = type !== undefined ? type : THREE.UnsignedByteType;\r\n\r\n\tthis.offset = new THREE.Vector2( 0, 0 );\r\n\tthis.repeat = new THREE.Vector2( 1, 1 );\r\n\r\n\tthis.generateMipmaps = true;\r\n\tthis.premultiplyAlpha = false;\r\n\tthis.flipY = true;\r\n\tthis.unpackAlignment = 4; // valid values: 1, 2, 4, 8 (see http://www.khronos.org/opengles/sdk/docs/man/xhtml/glPixelStorei.xml)\r\n\r\n\tthis.version = 0;\r\n\tthis.onUpdate = null;\r\n\r\n};\r\n\r\nTHREE.Texture.DEFAULT_IMAGE = undefined;\r\nTHREE.Texture.DEFAULT_MAPPING = THREE.UVMapping;\r\n\r\nTHREE.Texture.prototype = {\r\n\r\n\tconstructor: THREE.Texture,\r\n\r\n\tset needsUpdate ( value ) {\r\n\r\n\t\tif ( value === true ) this.version ++;\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t},\r\n\r\n\tcopy: function ( source ) {\r\n\r\n\t\tthis.image = source.image;\r\n\t\tthis.mipmaps = source.mipmaps.slice( 0 );\r\n\r\n\t\tthis.mapping = source.mapping;\r\n\r\n\t\tthis.wrapS = source.wrapS;\r\n\t\tthis.wrapT = source.wrapT;\r\n\r\n\t\tthis.magFilter = source.magFilter;\r\n\t\tthis.minFilter = source.minFilter;\r\n\r\n\t\tthis.anisotropy = source.anisotropy;\r\n\r\n\t\tthis.format = source.format;\r\n\t\tthis.type = source.type;\r\n\r\n\t\tthis.offset.copy( source.offset );\r\n\t\tthis.repeat.copy( source.repeat );\r\n\r\n\t\tthis.generateMipmaps = source.generateMipmaps;\r\n\t\tthis.premultiplyAlpha = source.premultiplyAlpha;\r\n\t\tthis.flipY = source.flipY;\r\n\t\tthis.unpackAlignment = source.unpackAlignment;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\ttoJSON: function ( meta ) {\r\n\r\n\t\tif ( meta.textures[ this.uuid ] !== undefined ) {\r\n\r\n\t\t\treturn meta.textures[ this.uuid ];\r\n\r\n\t\t}\r\n\r\n\t\tfunction getDataURL( image ) {\r\n\r\n\t\t\tvar canvas;\r\n\r\n\t\t\tif ( image.toDataURL !== undefined ) {\r\n\r\n\t\t\t\tcanvas = image;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tcanvas = document.createElement( 'canvas' );\r\n\t\t\t\tcanvas.width = image.width;\r\n\t\t\t\tcanvas.height = image.height;\r\n\r\n\t\t\t\tcanvas.getContext( '2d' ).drawImage( image, 0, 0, image.width, image.height );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( canvas.width > 2048 || canvas.height > 2048 ) {\r\n\r\n\t\t\t\treturn canvas.toDataURL( 'image/jpeg', 0.6 );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\treturn canvas.toDataURL( 'image/png' );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tvar output = {\r\n\t\t\tmetadata: {\r\n\t\t\t\tversion: 4.4,\r\n\t\t\t\ttype: 'Texture',\r\n\t\t\t\tgenerator: 'Texture.toJSON'\r\n\t\t\t},\r\n\r\n\t\t\tuuid: this.uuid,\r\n\t\t\tname: this.name,\r\n\r\n\t\t\tmapping: this.mapping,\r\n\r\n\t\t\trepeat: [ this.repeat.x, this.repeat.y ],\r\n\t\t\toffset: [ this.offset.x, this.offset.y ],\r\n\t\t\twrap: [ this.wrapS, this.wrapT ],\r\n\r\n\t\t\tminFilter: this.minFilter,\r\n\t\t\tmagFilter: this.magFilter,\r\n\t\t\tanisotropy: this.anisotropy\r\n\t\t};\r\n\r\n\t\tif ( this.image !== undefined ) {\r\n\r\n\t\t\t// TODO: Move to THREE.Image\r\n\r\n\t\t\tvar image = this.image;\r\n\r\n\t\t\tif ( image.uuid === undefined ) {\r\n\r\n\t\t\t\timage.uuid = THREE.Math.generateUUID(); // UGH\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( meta.images[ image.uuid ] === undefined ) {\r\n\r\n\t\t\t\tmeta.images[ image.uuid ] = {\r\n\t\t\t\t\tuuid: image.uuid,\r\n\t\t\t\t\turl: getDataURL( image )\r\n\t\t\t\t};\r\n\r\n\t\t\t}\r\n\r\n\t\t\toutput.image = image.uuid;\r\n\r\n\t\t}\r\n\r\n\t\tmeta.textures[ this.uuid ] = output;\r\n\r\n\t\treturn output;\r\n\r\n\t},\r\n\r\n\tdispose: function () {\r\n\r\n\t\tthis.dispatchEvent( { type: 'dispose' } );\r\n\r\n\t},\r\n\r\n\ttransformUv: function ( uv ) {\r\n\r\n\t\tif ( this.mapping !== THREE.UVMapping )  return;\r\n\r\n\t\tuv.multiply( this.repeat );\r\n\t\tuv.add( this.offset );\r\n\r\n\t\tif ( uv.x < 0 || uv.x > 1 ) {\r\n\r\n\t\t\tswitch ( this.wrapS ) {\r\n\r\n\t\t\t\tcase THREE.RepeatWrapping:\r\n\r\n\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase THREE.ClampToEdgeWrapping:\r\n\r\n\t\t\t\t\tuv.x = uv.x < 0 ? 0 : 1;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase THREE.MirroredRepeatWrapping:\r\n\r\n\t\t\t\t\tif ( Math.abs( Math.floor( uv.x ) % 2 ) === 1 ) {\r\n\r\n\t\t\t\t\t\tuv.x = Math.ceil( uv.x ) - uv.x;\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( uv.y < 0 || uv.y > 1 ) {\r\n\r\n\t\t\tswitch ( this.wrapT ) {\r\n\r\n\t\t\t\tcase THREE.RepeatWrapping:\r\n\r\n\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase THREE.ClampToEdgeWrapping:\r\n\r\n\t\t\t\t\tuv.y = uv.y < 0 ? 0 : 1;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase THREE.MirroredRepeatWrapping:\r\n\r\n\t\t\t\t\tif ( Math.abs( Math.floor( uv.y ) % 2 ) === 1 ) {\r\n\r\n\t\t\t\t\t\tuv.y = Math.ceil( uv.y ) - uv.y;\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.flipY ) {\r\n\r\n\t\t\tuv.y = 1 - uv.y;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.EventDispatcher.prototype.apply( THREE.Texture.prototype );\r\n\r\nTHREE.TextureIdCount = 0;\r\n\r\n// File:src/textures/CanvasTexture.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.CanvasTexture = function ( canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\r\n\r\n\tTHREE.Texture.call( this, canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\r\n\r\n\tthis.needsUpdate = true;\r\n\r\n};\r\n\r\nTHREE.CanvasTexture.prototype = Object.create( THREE.Texture.prototype );\r\nTHREE.CanvasTexture.prototype.constructor = THREE.CanvasTexture;\r\n\r\n// File:src/textures/CubeTexture.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.CubeTexture = function ( images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\r\n\r\n\tmapping = mapping !== undefined ? mapping : THREE.CubeReflectionMapping;\r\n\r\n\tTHREE.Texture.call( this, images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\r\n\r\n\tthis.images = images;\r\n\tthis.flipY = false;\r\n\r\n};\r\n\r\nTHREE.CubeTexture.prototype = Object.create( THREE.Texture.prototype );\r\nTHREE.CubeTexture.prototype.constructor = THREE.CubeTexture;\r\n\r\nTHREE.CubeTexture.prototype.copy = function ( source ) {\r\n\r\n\tTHREE.Texture.prototype.copy.call( this, source );\r\n\t\r\n\tthis.images = source.images;\r\n\t\r\n\treturn this;\r\n\r\n};\r\n// File:src/textures/CompressedTexture.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.CompressedTexture = function ( mipmaps, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy ) {\r\n\r\n\tTHREE.Texture.call( this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\r\n\r\n\tthis.image = { width: width, height: height };\r\n\tthis.mipmaps = mipmaps;\r\n\r\n\t// no flipping for cube textures\r\n\t// (also flipping doesn't work for compressed textures )\r\n\r\n\tthis.flipY = false;\r\n\r\n\t// can't generate mipmaps for compressed textures\r\n\t// mips must be embedded in DDS files\r\n\r\n\tthis.generateMipmaps = false;\r\n\r\n};\r\n\r\nTHREE.CompressedTexture.prototype = Object.create( THREE.Texture.prototype );\r\nTHREE.CompressedTexture.prototype.constructor = THREE.CompressedTexture;\r\n\r\n// File:src/textures/DataTexture.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.DataTexture = function ( data, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy ) {\r\n\r\n\tTHREE.Texture.call( this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\r\n\r\n\tthis.image = { data: data, width: width, height: height };\r\n\r\n\tthis.magFilter = magFilter !== undefined ? magFilter : THREE.NearestFilter;\r\n\tthis.minFilter = minFilter !== undefined ? minFilter : THREE.NearestFilter;\r\n\t\r\n\tthis.flipY = false;\r\n\tthis.generateMipmaps  = false;\r\n\r\n};\r\n\r\nTHREE.DataTexture.prototype = Object.create( THREE.Texture.prototype );\r\nTHREE.DataTexture.prototype.constructor = THREE.DataTexture;\r\n\r\n// File:src/textures/VideoTexture.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.VideoTexture = function ( video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\r\n\r\n\tTHREE.Texture.call( this, video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\r\n\r\n\tthis.generateMipmaps = false;\r\n\r\n\tvar scope = this;\r\n\r\n\tvar update = function () {\r\n\r\n\t\trequestAnimationFrame( update );\r\n\r\n\t\tif ( video.readyState === video.HAVE_ENOUGH_DATA ) {\r\n\r\n\t\t\tscope.needsUpdate = true;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tupdate();\r\n\r\n};\r\n\r\nTHREE.VideoTexture.prototype = Object.create( THREE.Texture.prototype );\r\nTHREE.VideoTexture.prototype.constructor = THREE.VideoTexture;\r\n\r\n// File:src/objects/Group.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.Group = function () {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.type = 'Group';\r\n\r\n};\r\n\r\nTHREE.Group.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.Group.prototype.constructor = THREE.Group;\r\n// File:src/objects/Points.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.Points = function ( geometry, material ) {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.type = 'Points';\r\n\r\n\tthis.geometry = geometry !== undefined ? geometry : new THREE.Geometry();\r\n\tthis.material = material !== undefined ? material : new THREE.PointsMaterial( { color: Math.random() * 0xffffff } );\r\n\r\n};\r\n\r\nTHREE.Points.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.Points.prototype.constructor = THREE.Points;\r\n\r\nTHREE.Points.prototype.raycast = ( function () {\r\n\r\n\tvar inverseMatrix = new THREE.Matrix4();\r\n\tvar ray = new THREE.Ray();\r\n\r\n\treturn function raycast( raycaster, intersects ) {\r\n\r\n\t\tvar object = this;\r\n\t\tvar geometry = object.geometry;\r\n\t\tvar threshold = raycaster.params.Points.threshold;\r\n\r\n\t\tinverseMatrix.getInverse( this.matrixWorld );\r\n\t\tray.copy( raycaster.ray ).applyMatrix4( inverseMatrix );\r\n\r\n\t\tif ( geometry.boundingBox !== null ) {\r\n\r\n\t\t\tif ( ray.isIntersectionBox( geometry.boundingBox ) === false ) {\r\n\r\n\t\t\t\treturn;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tvar localThreshold = threshold / ( ( this.scale.x + this.scale.y + this.scale.z ) / 3 );\r\n\t\tvar localThresholdSq = localThreshold * localThreshold;\r\n\t\tvar position = new THREE.Vector3();\r\n\r\n\t\tfunction testPoint( point, index ) {\r\n\r\n\t\t\tvar rayPointDistanceSq = ray.distanceSqToPoint( point );\r\n\r\n\t\t\tif ( rayPointDistanceSq < localThresholdSq ) {\r\n\r\n\t\t\t\tvar intersectPoint = ray.closestPointToPoint( point );\r\n\t\t\t\tintersectPoint.applyMatrix4( object.matrixWorld );\r\n\r\n\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( intersectPoint );\r\n\r\n\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) return;\r\n\r\n\t\t\t\tintersects.push( {\r\n\r\n\t\t\t\t\tdistance: distance,\r\n\t\t\t\t\tdistanceToRay: Math.sqrt( rayPointDistanceSq ),\r\n\t\t\t\t\tpoint: intersectPoint.clone(),\r\n\t\t\t\t\tindex: index,\r\n\t\t\t\t\tface: null,\r\n\t\t\t\t\tobject: object\r\n\r\n\t\t\t\t} );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( geometry instanceof THREE.BufferGeometry ) {\r\n\r\n\t\t\tvar index = geometry.index;\r\n\t\t\tvar attributes = geometry.attributes;\r\n\t\t\tvar positions = attributes.position.array;\r\n\r\n\t\t\tif ( index !== null ) {\r\n\r\n\t\t\t\tvar indices = index.array;\r\n\r\n\t\t\t\tfor ( var i = 0, il = indices.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\tvar a = indices[ i ];\r\n\r\n\t\t\t\t\tposition.fromArray( positions, a * 3 );\r\n\r\n\t\t\t\t\ttestPoint( position, a );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tfor ( var i = 0, l = positions.length / 3; i < l; i ++ ) {\r\n\r\n\t\t\t\t\tposition.fromArray( positions, i * 3 );\r\n\r\n\t\t\t\t\ttestPoint( position, i );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\tvar vertices = geometry.vertices;\r\n\r\n\t\t\tfor ( var i = 0, l = vertices.length; i < l; i ++ ) {\r\n\r\n\t\t\t\ttestPoint( vertices[ i ], i );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n}() );\r\n\r\nTHREE.Points.prototype.clone = function () {\r\n\r\n\treturn new this.constructor( this.geometry, this.material ).copy( this );\r\n\r\n};\r\n\r\nTHREE.Points.prototype.toJSON = function ( meta ) {\r\n\r\n\tvar data = THREE.Object3D.prototype.toJSON.call( this, meta );\r\n\r\n\t// only serialize if not in meta geometries cache\r\n\tif ( meta.geometries[ this.geometry.uuid ] === undefined ) {\r\n\r\n\t\tmeta.geometries[ this.geometry.uuid ] = this.geometry.toJSON();\r\n\r\n\t}\r\n\r\n\t// only serialize if not in meta materials cache\r\n\tif ( meta.materials[ this.material.uuid ] === undefined ) {\r\n\r\n\t\tmeta.materials[ this.material.uuid ] = this.material.toJSON();\r\n\r\n\t}\r\n\r\n\tdata.object.geometry = this.geometry.uuid;\r\n\tdata.object.material = this.material.uuid;\r\n\r\n\treturn data;\r\n\r\n};\r\n\r\n// Backwards compatibility\r\n\r\nTHREE.PointCloud = function ( geometry, material ) {\r\n\r\n\tconsole.warn( 'THREE.PointCloud has been renamed to THREE.Points.' );\r\n\treturn new THREE.Points( geometry, material );\r\n\r\n};\r\n\r\nTHREE.ParticleSystem = function ( geometry, material ) {\r\n\r\n\tconsole.warn( 'THREE.ParticleSystem has been renamed to THREE.Points.' );\r\n\treturn new THREE.Points( geometry, material );\r\n\r\n};\r\n\r\n// File:src/objects/Line.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.Line = function ( geometry, material, mode ) {\r\n\r\n\tif ( mode === 1 ) {\r\n\r\n\t\tconsole.warn( 'THREE.Line: parameter THREE.LinePieces no longer supported. Created THREE.LineSegments instead.' );\r\n\t\treturn new THREE.LineSegments( geometry, material );\r\n\r\n\t}\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.type = 'Line';\r\n\r\n\tthis.geometry = geometry !== undefined ? geometry : new THREE.Geometry();\r\n\tthis.material = material !== undefined ? material : new THREE.LineBasicMaterial( { color: Math.random() * 0xffffff } );\r\n\r\n};\r\n\r\nTHREE.Line.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.Line.prototype.constructor = THREE.Line;\r\n\r\nTHREE.Line.prototype.raycast = ( function () {\r\n\r\n\tvar inverseMatrix = new THREE.Matrix4();\r\n\tvar ray = new THREE.Ray();\r\n\tvar sphere = new THREE.Sphere();\r\n\r\n\treturn function raycast( raycaster, intersects ) {\r\n\r\n\t\tvar precision = raycaster.linePrecision;\r\n\t\tvar precisionSq = precision * precision;\r\n\r\n\t\tvar geometry = this.geometry;\r\n\r\n\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\r\n\r\n\t\t// Checking boundingSphere distance to ray\r\n\r\n\t\tsphere.copy( geometry.boundingSphere );\r\n\t\tsphere.applyMatrix4( this.matrixWorld );\r\n\r\n\t\tif ( raycaster.ray.isIntersectionSphere( sphere ) === false ) {\r\n\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tinverseMatrix.getInverse( this.matrixWorld );\r\n\t\tray.copy( raycaster.ray ).applyMatrix4( inverseMatrix );\r\n\r\n\t\tvar vStart = new THREE.Vector3();\r\n\t\tvar vEnd = new THREE.Vector3();\r\n\t\tvar interSegment = new THREE.Vector3();\r\n\t\tvar interRay = new THREE.Vector3();\r\n\t\tvar step = this instanceof THREE.LineSegments ? 2 : 1;\r\n\r\n\t\tif ( geometry instanceof THREE.BufferGeometry ) {\r\n\r\n\t\t\tvar index = geometry.index;\r\n\t\t\tvar attributes = geometry.attributes;\r\n\r\n\t\t\tif ( index !== null ) {\r\n\r\n\t\t\t\tvar indices = index.array;\r\n\t\t\t\tvar positions = attributes.position.array;\r\n\r\n\t\t\t\tfor ( var i = 0, l = indices.length - 1; i < l; i += step ) {\r\n\r\n\t\t\t\t\tvar a = indices[ i ];\r\n\t\t\t\t\tvar b = indices[ i + 1 ];\r\n\r\n\t\t\t\t\tvStart.fromArray( positions, a * 3 );\r\n\t\t\t\t\tvEnd.fromArray( positions, b * 3 );\r\n\r\n\t\t\t\t\tvar distSq = ray.distanceSqToSegment( vStart, vEnd, interRay, interSegment );\r\n\r\n\t\t\t\t\tif ( distSq > precisionSq ) continue;\r\n\r\n\t\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\r\n\r\n\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( interRay );\r\n\r\n\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\r\n\r\n\t\t\t\t\tintersects.push( {\r\n\r\n\t\t\t\t\t\tdistance: distance,\r\n\t\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\r\n\t\t\t\t\t\t// point: raycaster.ray.at( distance ),\r\n\t\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\r\n\t\t\t\t\t\tindex: i,\r\n\t\t\t\t\t\tface: null,\r\n\t\t\t\t\t\tfaceIndex: null,\r\n\t\t\t\t\t\tobject: this\r\n\r\n\t\t\t\t\t} );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tvar positions = attributes.position.array;\r\n\r\n\t\t\t\tfor ( var i = 0, l = positions.length / 3 - 1; i < l; i += step ) {\r\n\r\n\t\t\t\t\tvStart.fromArray( positions, 3 * i );\r\n\t\t\t\t\tvEnd.fromArray( positions, 3 * i + 3 );\r\n\r\n\t\t\t\t\tvar distSq = ray.distanceSqToSegment( vStart, vEnd, interRay, interSegment );\r\n\r\n\t\t\t\t\tif ( distSq > precisionSq ) continue;\r\n\r\n\t\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\r\n\r\n\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( interRay );\r\n\r\n\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\r\n\r\n\t\t\t\t\tintersects.push( {\r\n\r\n\t\t\t\t\t\tdistance: distance,\r\n\t\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\r\n\t\t\t\t\t\t// point: raycaster.ray.at( distance ),\r\n\t\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\r\n\t\t\t\t\t\tindex: i,\r\n\t\t\t\t\t\tface: null,\r\n\t\t\t\t\t\tfaceIndex: null,\r\n\t\t\t\t\t\tobject: this\r\n\r\n\t\t\t\t\t} );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( geometry instanceof THREE.Geometry ) {\r\n\r\n\t\t\tvar vertices = geometry.vertices;\r\n\t\t\tvar nbVertices = vertices.length;\r\n\r\n\t\t\tfor ( var i = 0; i < nbVertices - 1; i += step ) {\r\n\r\n\t\t\t\tvar distSq = ray.distanceSqToSegment( vertices[ i ], vertices[ i + 1 ], interRay, interSegment );\r\n\r\n\t\t\t\tif ( distSq > precisionSq ) continue;\r\n\r\n\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\r\n\r\n\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( interRay );\r\n\r\n\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\r\n\r\n\t\t\t\tintersects.push( {\r\n\r\n\t\t\t\t\tdistance: distance,\r\n\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\r\n\t\t\t\t\t// point: raycaster.ray.at( distance ),\r\n\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\r\n\t\t\t\t\tindex: i,\r\n\t\t\t\t\tface: null,\r\n\t\t\t\t\tfaceIndex: null,\r\n\t\t\t\t\tobject: this\r\n\r\n\t\t\t\t} );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n}() );\r\n\r\nTHREE.Line.prototype.clone = function () {\r\n\r\n\treturn new this.constructor( this.geometry, this.material ).copy( this );\r\n\r\n};\r\n\r\nTHREE.Line.prototype.toJSON = function ( meta ) {\r\n\r\n\tvar data = THREE.Object3D.prototype.toJSON.call( this, meta );\r\n\r\n\t// only serialize if not in meta geometries cache\r\n\tif ( meta.geometries[ this.geometry.uuid ] === undefined ) {\r\n\r\n\t\tmeta.geometries[ this.geometry.uuid ] = this.geometry.toJSON();\r\n\r\n\t}\r\n\r\n\t// only serialize if not in meta materials cache\r\n\tif ( meta.materials[ this.material.uuid ] === undefined ) {\r\n\r\n\t\tmeta.materials[ this.material.uuid ] = this.material.toJSON();\r\n\r\n\t}\r\n\r\n\tdata.object.geometry = this.geometry.uuid;\r\n\tdata.object.material = this.material.uuid;\r\n\r\n\treturn data;\r\n\r\n};\r\n\r\n// DEPRECATED\r\n\r\nTHREE.LineStrip = 0;\r\nTHREE.LinePieces = 1;\r\n\r\n// File:src/objects/LineSegments.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.LineSegments = function ( geometry, material ) {\r\n\r\n\tTHREE.Line.call( this, geometry, material );\r\n\r\n\tthis.type = 'LineSegments';\r\n\r\n};\r\n\r\nTHREE.LineSegments.prototype = Object.create( THREE.Line.prototype );\r\nTHREE.LineSegments.prototype.constructor = THREE.LineSegments;\r\n\r\n// File:src/objects/Mesh.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author jonobr1 / http://jonobr1.com/\r\n */\r\n\r\nTHREE.Mesh = function ( geometry, material ) {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.type = 'Mesh';\r\n\r\n\tthis.geometry = geometry !== undefined ? geometry : new THREE.Geometry();\r\n\tthis.material = material !== undefined ? material : new THREE.MeshBasicMaterial( { color: Math.random() * 0xffffff } );\r\n\r\n\tthis.updateMorphTargets();\r\n\r\n};\r\n\r\nTHREE.Mesh.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.Mesh.prototype.constructor = THREE.Mesh;\r\n\r\nTHREE.Mesh.prototype.updateMorphTargets = function () {\r\n\r\n\tif ( this.geometry.morphTargets !== undefined && this.geometry.morphTargets.length > 0 ) {\r\n\r\n\t\tthis.morphTargetBase = - 1;\r\n\t\tthis.morphTargetInfluences = [];\r\n\t\tthis.morphTargetDictionary = {};\r\n\r\n\t\tfor ( var m = 0, ml = this.geometry.morphTargets.length; m < ml; m ++ ) {\r\n\r\n\t\t\tthis.morphTargetInfluences.push( 0 );\r\n\t\t\tthis.morphTargetDictionary[ this.geometry.morphTargets[ m ].name ] = m;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.Mesh.prototype.getMorphTargetIndexByName = function ( name ) {\r\n\r\n\tif ( this.morphTargetDictionary[ name ] !== undefined ) {\r\n\r\n\t\treturn this.morphTargetDictionary[ name ];\r\n\r\n\t}\r\n\r\n\tconsole.warn( 'THREE.Mesh.getMorphTargetIndexByName: morph target ' + name + ' does not exist. Returning 0.' );\r\n\r\n\treturn 0;\r\n\r\n};\r\n\r\n\r\nTHREE.Mesh.prototype.raycast = ( function () {\r\n\r\n\tvar inverseMatrix = new THREE.Matrix4();\r\n\tvar ray = new THREE.Ray();\r\n\tvar sphere = new THREE.Sphere();\r\n\r\n\tvar vA = new THREE.Vector3();\r\n\tvar vB = new THREE.Vector3();\r\n\tvar vC = new THREE.Vector3();\r\n\r\n\tvar tempA = new THREE.Vector3();\r\n\tvar tempB = new THREE.Vector3();\r\n\tvar tempC = new THREE.Vector3();\r\n\r\n\tvar uvA = new THREE.Vector2();\r\n\tvar uvB = new THREE.Vector2();\r\n\tvar uvC = new THREE.Vector2();\r\n\r\n\tvar barycoord = new THREE.Vector3();\r\n\r\n\tvar intersectionPoint = new THREE.Vector3();\r\n\tvar intersectionPointWorld = new THREE.Vector3();\r\n\r\n\tfunction uvIntersection( point, p1, p2, p3, uv1, uv2, uv3 ) {\r\n\r\n\t\tTHREE.Triangle.barycoordFromPoint( point, p1, p2, p3, barycoord );\r\n\r\n\t\tuv1.multiplyScalar( barycoord.x );\r\n\t\tuv2.multiplyScalar( barycoord.y );\r\n\t\tuv3.multiplyScalar( barycoord.z );\r\n\r\n\t\tuv1.add( uv2 ).add( uv3 );\r\n\r\n\t\treturn uv1.clone();\r\n\r\n\t}\r\n\r\n\treturn function raycast( raycaster, intersects ) {\r\n\r\n\t\tvar geometry = this.geometry;\r\n\t\tvar material = this.material;\r\n\r\n\t\tif ( material === undefined ) return;\r\n\r\n\t\t// Checking boundingSphere distance to ray\r\n\r\n\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\r\n\r\n\t\tsphere.copy( geometry.boundingSphere );\r\n\t\tsphere.applyMatrix4( this.matrixWorld );\r\n\r\n\t\tif ( raycaster.ray.isIntersectionSphere( sphere ) === false ) {\r\n\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\t// Check boundingBox before continuing\r\n\r\n\t\tinverseMatrix.getInverse( this.matrixWorld );\r\n\t\tray.copy( raycaster.ray ).applyMatrix4( inverseMatrix );\r\n\r\n\t\tif ( geometry.boundingBox !== null ) {\r\n\r\n\t\t\tif ( ray.isIntersectionBox( geometry.boundingBox ) === false ) {\r\n\r\n\t\t\t\treturn;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tvar a, b, c;\r\n\r\n\t\tif ( geometry instanceof THREE.BufferGeometry ) {\r\n\r\n\t\t\tvar index = geometry.index;\r\n\t\t\tvar attributes = geometry.attributes;\r\n\r\n\t\t\tif ( index !== null ) {\r\n\r\n\t\t\t\tvar indices = index.array;\r\n\t\t\t\tvar positions = attributes.position.array;\r\n\r\n\t\t\t\tfor ( var i = 0, l = indices.length; i < l; i += 3 ) {\r\n\r\n\t\t\t\t\ta = indices[ i ];\r\n\t\t\t\t\tb = indices[ i + 1 ];\r\n\t\t\t\t\tc = indices[ i + 2 ];\r\n\r\n\t\t\t\t\tvA.fromArray( positions, a * 3 );\r\n\t\t\t\t\tvB.fromArray( positions, b * 3 );\r\n\t\t\t\t\tvC.fromArray( positions, c * 3 );\r\n\r\n\t\t\t\t\tif ( material.side === THREE.BackSide ) {\r\n\r\n\t\t\t\t\t\tif ( ray.intersectTriangle( vC, vB, vA, true, intersectionPoint ) === null ) continue;\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tif ( ray.intersectTriangle( vA, vB, vC, material.side !== THREE.DoubleSide, intersectionPoint ) === null ) continue;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tintersectionPointWorld.copy( intersectionPoint );\r\n\t\t\t\t\tintersectionPointWorld.applyMatrix4( this.matrixWorld );\r\n\r\n\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( intersectionPointWorld );\r\n\r\n\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\r\n\r\n\t\t\t\t\tvar uv;\r\n\r\n\t\t\t\t\tif ( attributes.uv !== undefined ) {\r\n\r\n\t\t\t\t\t\tvar uvs = attributes.uv.array;\r\n\t\t\t\t\t\tuvA.fromArray( uvs, a * 2 );\r\n\t\t\t\t\t\tuvB.fromArray( uvs, b * 2 );\r\n\t\t\t\t\t\tuvC.fromArray( uvs, c * 2 );\r\n\t\t\t\t\t\tuv = uvIntersection( intersectionPoint, vA, vB, vC, uvA, uvB, uvC );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tintersects.push( {\r\n\r\n\t\t\t\t\t\tdistance: distance,\r\n\t\t\t\t\t\tpoint: intersectionPointWorld.clone(),\r\n\t\t\t\t\t\tuv: uv,\r\n\t\t\t\t\t\tface: new THREE.Face3( a, b, c, THREE.Triangle.normal( vA, vB, vC ) ),\r\n\t\t\t\t\t\tfaceIndex: Math.floor( i / 3 ), // triangle number in indices buffer semantics\r\n\t\t\t\t\t\tobject: this\r\n\r\n\t\t\t\t\t} );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tvar positions = attributes.position.array;\r\n\r\n\t\t\t\tfor ( var i = 0, l = positions.length; i < l; i += 9 ) {\r\n\r\n\t\t\t\t\tvA.fromArray( positions, i );\r\n\t\t\t\t\tvB.fromArray( positions, i + 3 );\r\n\t\t\t\t\tvC.fromArray( positions, i + 6 );\r\n\r\n\t\t\t\t\tif ( material.side === THREE.BackSide ) {\r\n\r\n\t\t\t\t\t\tif ( ray.intersectTriangle( vC, vB, vA, true, intersectionPoint ) === null ) continue;\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tif ( ray.intersectTriangle( vA, vB, vC, material.side !== THREE.DoubleSide, intersectionPoint ) === null ) continue;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tintersectionPointWorld.copy( intersectionPoint );\r\n\t\t\t\t\tintersectionPointWorld.applyMatrix4( this.matrixWorld );\r\n\r\n\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( intersectionPointWorld );\r\n\r\n\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\r\n\r\n\t\t\t\t\tvar uv;\r\n\r\n\t\t\t\t\tif ( attributes.uv !== undefined ) {\r\n\r\n\t\t\t\t\t\tvar uvs = attributes.uv.array;\r\n\t\t\t\t\t\tuvA.fromArray( uvs, i );\r\n\t\t\t\t\t\tuvB.fromArray( uvs, i + 2 );\r\n\t\t\t\t\t\tuvC.fromArray( uvs, i + 4 );\r\n\t\t\t\t\t\tuv = uvIntersection( intersectionPoint, vA, vB, vC, uvA, uvB, uvC );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\ta = i / 3;\r\n\t\t\t\t\tb = a + 1;\r\n\t\t\t\t\tc = a + 2;\r\n\r\n\t\t\t\t\tintersects.push( {\r\n\r\n\t\t\t\t\t\tdistance: distance,\r\n\t\t\t\t\t\tpoint: intersectionPointWorld.clone(),\r\n\t\t\t\t\t\tuv: uv,\r\n\t\t\t\t\t\tface: new THREE.Face3( a, b, c, THREE.Triangle.normal( vA, vB, vC ) ),\r\n\t\t\t\t\t\tindex: a, // triangle number in positions buffer semantics\r\n\t\t\t\t\t\tobject: this\r\n\r\n\t\t\t\t\t} );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( geometry instanceof THREE.Geometry ) {\r\n\r\n\t\t\tvar isFaceMaterial = material instanceof THREE.MeshFaceMaterial;\r\n\t\t\tvar materials = isFaceMaterial === true ? material.materials : null;\r\n\r\n\t\t\tvar vertices = geometry.vertices;\r\n\t\t\tvar faces = geometry.faces;\r\n\r\n\t\t\tfor ( var f = 0, fl = faces.length; f < fl; f ++ ) {\r\n\r\n\t\t\t\tvar face = faces[ f ];\r\n\t\t\t\tvar faceMaterial = isFaceMaterial === true ? materials[ face.materialIndex ] : material;\r\n\r\n\t\t\t\tif ( faceMaterial === undefined ) continue;\r\n\r\n\t\t\t\ta = vertices[ face.a ];\r\n\t\t\t\tb = vertices[ face.b ];\r\n\t\t\t\tc = vertices[ face.c ];\r\n\r\n\t\t\t\tif ( faceMaterial.morphTargets === true ) {\r\n\r\n\t\t\t\t\tvar morphTargets = geometry.morphTargets;\r\n\t\t\t\t\tvar morphInfluences = this.morphTargetInfluences;\r\n\r\n\t\t\t\t\tvA.set( 0, 0, 0 );\r\n\t\t\t\t\tvB.set( 0, 0, 0 );\r\n\t\t\t\t\tvC.set( 0, 0, 0 );\r\n\r\n\t\t\t\t\tfor ( var t = 0, tl = morphTargets.length; t < tl; t ++ ) {\r\n\r\n\t\t\t\t\t\tvar influence = morphInfluences[ t ];\r\n\r\n\t\t\t\t\t\tif ( influence === 0 ) continue;\r\n\r\n\t\t\t\t\t\tvar targets = morphTargets[ t ].vertices;\r\n\r\n\t\t\t\t\t\tvA.addScaledVector( tempA.subVectors( targets[ face.a ], a ), influence );\r\n\t\t\t\t\t\tvB.addScaledVector( tempB.subVectors( targets[ face.b ], b ), influence );\r\n\t\t\t\t\t\tvC.addScaledVector( tempC.subVectors( targets[ face.c ], c ), influence );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tvA.add( a );\r\n\t\t\t\t\tvB.add( b );\r\n\t\t\t\t\tvC.add( c );\r\n\r\n\t\t\t\t\ta = vA;\r\n\t\t\t\t\tb = vB;\r\n\t\t\t\t\tc = vC;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( faceMaterial.side === THREE.BackSide ) {\r\n\r\n\t\t\t\t\tif ( ray.intersectTriangle( c, b, a, true, intersectionPoint ) === null ) continue;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tif ( ray.intersectTriangle( a, b, c, faceMaterial.side !== THREE.DoubleSide, intersectionPoint ) === null ) continue;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tintersectionPointWorld.copy( intersectionPoint );\r\n\t\t\t\tintersectionPointWorld.applyMatrix4( this.matrixWorld );\r\n\r\n\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( intersectionPointWorld );\r\n\r\n\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\r\n\r\n\t\t\t\tvar uv;\r\n\r\n\t\t\t\tif ( geometry.faceVertexUvs[ 0 ].length > 0 ) {\r\n\r\n\t\t\t\t\tvar uvs = geometry.faceVertexUvs[ 0 ][ f ];\r\n\t\t\t\t\tuvA.copy( uvs[ 0 ] );\r\n\t\t\t\t\tuvB.copy( uvs[ 1 ] );\r\n\t\t\t\t\tuvC.copy( uvs[ 2 ] );\r\n\t\t\t\t\tuv = uvIntersection( intersectionPoint, a, b, c, uvA, uvB, uvC );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tintersects.push( {\r\n\r\n\t\t\t\t\tdistance: distance,\r\n\t\t\t\t\tpoint: intersectionPointWorld.clone(),\r\n\t\t\t\t\tuv: uv,\r\n\t\t\t\t\tface: face,\r\n\t\t\t\t\tfaceIndex: f,\r\n\t\t\t\t\tobject: this\r\n\r\n\t\t\t\t} );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n}() );\r\n\r\nTHREE.Mesh.prototype.clone = function () {\r\n\r\n\treturn new this.constructor( this.geometry, this.material ).copy( this );\r\n\r\n};\r\n\r\nTHREE.Mesh.prototype.toJSON = function ( meta ) {\r\n\r\n\tvar data = THREE.Object3D.prototype.toJSON.call( this, meta );\r\n\r\n\t// only serialize if not in meta geometries cache\r\n\tif ( meta.geometries[ this.geometry.uuid ] === undefined ) {\r\n\r\n\t\tmeta.geometries[ this.geometry.uuid ] = this.geometry.toJSON( meta );\r\n\r\n\t}\r\n\r\n\t// only serialize if not in meta materials cache\r\n\tif ( meta.materials[ this.material.uuid ] === undefined ) {\r\n\r\n\t\tmeta.materials[ this.material.uuid ] = this.material.toJSON( meta );\r\n\r\n\t}\r\n\r\n\tdata.object.geometry = this.geometry.uuid;\r\n\tdata.object.material = this.material.uuid;\r\n\r\n\treturn data;\r\n\r\n};\r\n\r\n// File:src/objects/Bone.js\r\n\r\n/**\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author ikerr / http://verold.com\r\n */\r\n\r\nTHREE.Bone = function ( skin ) {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.type = 'Bone';\r\n\r\n\tthis.skin = skin;\r\n\r\n};\r\n\r\nTHREE.Bone.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.Bone.prototype.constructor = THREE.Bone;\r\n\r\nTHREE.Bone.prototype.copy = function ( source ) {\r\n\t\r\n\tTHREE.Object3D.prototype.copy.call( this, source );\r\n\t\r\n\tthis.skin = source.skin;\r\n\t\r\n\treturn this;\r\n\r\n};\r\n\r\n// File:src/objects/Skeleton.js\r\n\r\n/**\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author michael guerrero / http://realitymeltdown.com\r\n * @author ikerr / http://verold.com\r\n */\r\n\r\nTHREE.Skeleton = function ( bones, boneInverses, useVertexTexture ) {\r\n\r\n\tthis.useVertexTexture = useVertexTexture !== undefined ? useVertexTexture : true;\r\n\r\n\tthis.identityMatrix = new THREE.Matrix4();\r\n\r\n\t// copy the bone array\r\n\r\n\tbones = bones || [];\r\n\r\n\tthis.bones = bones.slice( 0 );\r\n\r\n\t// create a bone texture or an array of floats\r\n\r\n\tif ( this.useVertexTexture ) {\r\n\r\n\t\t// layout (1 matrix = 4 pixels)\r\n\t\t//      RGBA RGBA RGBA RGBA (=> column1, column2, column3, column4)\r\n\t\t//  with  8x8  pixel texture max   16 bones * 4 pixels =  (8 * 8)\r\n\t\t//       16x16 pixel texture max   64 bones * 4 pixels = (16 * 16)\r\n\t\t//       32x32 pixel texture max  256 bones * 4 pixels = (32 * 32)\r\n\t\t//       64x64 pixel texture max 1024 bones * 4 pixels = (64 * 64)\r\n\r\n\t\t\r\n\t\tvar size = Math.sqrt( this.bones.length * 4 ); // 4 pixels needed for 1 matrix\r\n\t\tsize = THREE.Math.nextPowerOfTwo( Math.ceil( size ) );\r\n\t\tsize = Math.max( size, 4 );\r\n\r\n\t\tthis.boneTextureWidth = size;\r\n\t\tthis.boneTextureHeight = size;\r\n\r\n\t\tthis.boneMatrices = new Float32Array( this.boneTextureWidth * this.boneTextureHeight * 4 ); // 4 floats per RGBA pixel\r\n\t\tthis.boneTexture = new THREE.DataTexture( this.boneMatrices, this.boneTextureWidth, this.boneTextureHeight, THREE.RGBAFormat, THREE.FloatType );\r\n\r\n\t} else {\r\n\r\n\t\tthis.boneMatrices = new Float32Array( 16 * this.bones.length );\r\n\r\n\t}\r\n\r\n\t// use the supplied bone inverses or calculate the inverses\r\n\r\n\tif ( boneInverses === undefined ) {\r\n\r\n\t\tthis.calculateInverses();\r\n\r\n\t} else {\r\n\r\n\t\tif ( this.bones.length === boneInverses.length ) {\r\n\r\n\t\t\tthis.boneInverses = boneInverses.slice( 0 );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tconsole.warn( 'THREE.Skeleton bonInverses is the wrong length.' );\r\n\r\n\t\t\tthis.boneInverses = [];\r\n\r\n\t\t\tfor ( var b = 0, bl = this.bones.length; b < bl; b ++ ) {\r\n\r\n\t\t\t\tthis.boneInverses.push( new THREE.Matrix4() );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.Skeleton.prototype.calculateInverses = function () {\r\n\r\n\tthis.boneInverses = [];\r\n\r\n\tfor ( var b = 0, bl = this.bones.length; b < bl; b ++ ) {\r\n\r\n\t\tvar inverse = new THREE.Matrix4();\r\n\r\n\t\tif ( this.bones[ b ] ) {\r\n\r\n\t\t\tinverse.getInverse( this.bones[ b ].matrixWorld );\r\n\r\n\t\t}\r\n\r\n\t\tthis.boneInverses.push( inverse );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.Skeleton.prototype.pose = function () {\r\n\r\n\tvar bone;\r\n\r\n\t// recover the bind-time world matrices\r\n\r\n\tfor ( var b = 0, bl = this.bones.length; b < bl; b ++ ) {\r\n\r\n\t\tbone = this.bones[ b ];\r\n\r\n\t\tif ( bone ) {\r\n\r\n\t\t\tbone.matrixWorld.getInverse( this.boneInverses[ b ] );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// compute the local matrices, positions, rotations and scales\r\n\r\n\tfor ( var b = 0, bl = this.bones.length; b < bl; b ++ ) {\r\n\r\n\t\tbone = this.bones[ b ];\r\n\r\n\t\tif ( bone ) {\r\n\r\n\t\t\tif ( bone.parent ) {\r\n\r\n\t\t\t\tbone.matrix.getInverse( bone.parent.matrixWorld );\r\n\t\t\t\tbone.matrix.multiply( bone.matrixWorld );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tbone.matrix.copy( bone.matrixWorld );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tbone.matrix.decompose( bone.position, bone.quaternion, bone.scale );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.Skeleton.prototype.update = ( function () {\r\n\r\n\tvar offsetMatrix = new THREE.Matrix4();\r\n\r\n\treturn function update() {\r\n\r\n\t\t// flatten bone matrices to array\r\n\r\n\t\tfor ( var b = 0, bl = this.bones.length; b < bl; b ++ ) {\r\n\r\n\t\t\t// compute the offset between the current and the original transform\r\n\r\n\t\t\tvar matrix = this.bones[ b ] ? this.bones[ b ].matrixWorld : this.identityMatrix;\r\n\r\n\t\t\toffsetMatrix.multiplyMatrices( matrix, this.boneInverses[ b ] );\r\n\t\t\toffsetMatrix.flattenToArrayOffset( this.boneMatrices, b * 16 );\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.useVertexTexture ) {\r\n\r\n\t\t\tthis.boneTexture.needsUpdate = true;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n} )();\r\n\r\nTHREE.Skeleton.prototype.clone = function () {\r\n\r\n\treturn new THREE.Skeleton( this.bones, this.boneInverses, this.useVertexTexture );\r\n\r\n};\r\n\r\n// File:src/objects/SkinnedMesh.js\r\n\r\n/**\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author ikerr / http://verold.com\r\n */\r\n\r\nTHREE.SkinnedMesh = function ( geometry, material, useVertexTexture ) {\r\n\r\n\tTHREE.Mesh.call( this, geometry, material );\r\n\r\n\tthis.type = 'SkinnedMesh';\r\n\r\n\tthis.bindMode = \"attached\";\r\n\tthis.bindMatrix = new THREE.Matrix4();\r\n\tthis.bindMatrixInverse = new THREE.Matrix4();\r\n\r\n\t// init bones\r\n\r\n\t// TODO: remove bone creation as there is no reason (other than\r\n\t// convenience) for THREE.SkinnedMesh to do this.\r\n\r\n\tvar bones = [];\r\n\r\n\tif ( this.geometry && this.geometry.bones !== undefined ) {\r\n\r\n\t\tvar bone, gbone;\r\n\r\n\t\tfor ( var b = 0, bl = this.geometry.bones.length; b < bl; ++ b ) {\r\n\r\n\t\t\tgbone = this.geometry.bones[ b ];\r\n\r\n\t\t\tbone = new THREE.Bone( this );\r\n\t\t\tbones.push( bone );\r\n\r\n\t\t\tbone.name = gbone.name;\r\n\t\t\tbone.position.fromArray( gbone.pos );\r\n\t\t\tbone.quaternion.fromArray( gbone.rotq );\r\n\t\t\tif ( gbone.scl !== undefined ) bone.scale.fromArray( gbone.scl );\r\n\r\n\t\t}\r\n\r\n\t\tfor ( var b = 0, bl = this.geometry.bones.length; b < bl; ++ b ) {\r\n\r\n\t\t\tgbone = this.geometry.bones[ b ];\r\n\r\n\t\t\tif ( gbone.parent !== - 1 ) {\r\n\r\n\t\t\t\tbones[ gbone.parent ].add( bones[ b ] );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthis.add( bones[ b ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tthis.normalizeSkinWeights();\r\n\r\n\tthis.updateMatrixWorld( true );\r\n\tthis.bind( new THREE.Skeleton( bones, undefined, useVertexTexture ), this.matrixWorld );\r\n\r\n};\r\n\r\n\r\nTHREE.SkinnedMesh.prototype = Object.create( THREE.Mesh.prototype );\r\nTHREE.SkinnedMesh.prototype.constructor = THREE.SkinnedMesh;\r\n\r\nTHREE.SkinnedMesh.prototype.bind = function( skeleton, bindMatrix ) {\r\n\r\n\tthis.skeleton = skeleton;\r\n\r\n\tif ( bindMatrix === undefined ) {\r\n\r\n\t\tthis.updateMatrixWorld( true );\r\n\t\t\r\n\t\tthis.skeleton.calculateInverses();\r\n\r\n\t\tbindMatrix = this.matrixWorld;\r\n\r\n\t}\r\n\r\n\tthis.bindMatrix.copy( bindMatrix );\r\n\tthis.bindMatrixInverse.getInverse( bindMatrix );\r\n\r\n};\r\n\r\nTHREE.SkinnedMesh.prototype.pose = function () {\r\n\r\n\tthis.skeleton.pose();\r\n\r\n};\r\n\r\nTHREE.SkinnedMesh.prototype.normalizeSkinWeights = function () {\r\n\r\n\tif ( this.geometry instanceof THREE.Geometry ) {\r\n\r\n\t\tfor ( var i = 0; i < this.geometry.skinIndices.length; i ++ ) {\r\n\r\n\t\t\tvar sw = this.geometry.skinWeights[ i ];\r\n\r\n\t\t\tvar scale = 1.0 / sw.lengthManhattan();\r\n\r\n\t\t\tif ( scale !== Infinity ) {\r\n\r\n\t\t\t\tsw.multiplyScalar( scale );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tsw.set( 1 ); // this will be normalized by the shader anyway\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t} else {\r\n\r\n\t\t// skinning weights assumed to be normalized for THREE.BufferGeometry\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.SkinnedMesh.prototype.updateMatrixWorld = function( force ) {\r\n\r\n\tTHREE.Mesh.prototype.updateMatrixWorld.call( this, true );\r\n\r\n\tif ( this.bindMode === \"attached\" ) {\r\n\r\n\t\tthis.bindMatrixInverse.getInverse( this.matrixWorld );\r\n\r\n\t} else if ( this.bindMode === \"detached\" ) {\r\n\r\n\t\tthis.bindMatrixInverse.getInverse( this.bindMatrix );\r\n\r\n\t} else {\r\n\r\n\t\tconsole.warn( 'THREE.SkinnedMesh unrecognized bindMode: ' + this.bindMode );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.SkinnedMesh.prototype.clone = function() {\r\n\r\n\treturn new this.constructor( this.geometry, this.material, this.useVertexTexture ).copy( this );\r\n\r\n};\r\n\r\n// File:src/objects/MorphAnimMesh.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.MorphAnimMesh = function ( geometry, material ) {\r\n\r\n\tTHREE.Mesh.call( this, geometry, material );\r\n\r\n\tthis.type = 'MorphAnimMesh';\r\n\r\n\t// API\r\n\r\n\tthis.duration = 1000; // milliseconds\r\n\tthis.mirroredLoop = false;\r\n\tthis.time = 0;\r\n\r\n\t// internals\r\n\r\n\tthis.lastKeyframe = 0;\r\n\tthis.currentKeyframe = 0;\r\n\r\n\tthis.direction = 1;\r\n\tthis.directionBackwards = false;\r\n\r\n\tthis.setFrameRange( 0, geometry.morphTargets.length - 1 );\r\n\r\n};\r\n\r\nTHREE.MorphAnimMesh.prototype = Object.create( THREE.Mesh.prototype );\r\nTHREE.MorphAnimMesh.prototype.constructor = THREE.MorphAnimMesh;\r\n\r\nTHREE.MorphAnimMesh.prototype.setFrameRange = function ( start, end ) {\r\n\r\n\tthis.startKeyframe = start;\r\n\tthis.endKeyframe = end;\r\n\r\n\tthis.length = this.endKeyframe - this.startKeyframe + 1;\r\n\r\n};\r\n\r\nTHREE.MorphAnimMesh.prototype.setDirectionForward = function () {\r\n\r\n\tthis.direction = 1;\r\n\tthis.directionBackwards = false;\r\n\r\n};\r\n\r\nTHREE.MorphAnimMesh.prototype.setDirectionBackward = function () {\r\n\r\n\tthis.direction = - 1;\r\n\tthis.directionBackwards = true;\r\n\r\n};\r\n\r\nTHREE.MorphAnimMesh.prototype.parseAnimations = function () {\r\n\r\n\tvar geometry = this.geometry;\r\n\r\n\tif ( ! geometry.animations ) geometry.animations = {};\r\n\r\n\tvar firstAnimation, animations = geometry.animations;\r\n\r\n\tvar pattern = /([a-z]+)_?(\\d+)/;\r\n\r\n\tfor ( var i = 0, il = geometry.morphTargets.length; i < il; i ++ ) {\r\n\r\n\t\tvar morph = geometry.morphTargets[ i ];\r\n\t\tvar parts = morph.name.match( pattern );\r\n\r\n\t\tif ( parts && parts.length > 1 ) {\r\n\r\n\t\t\tvar label = parts[ 1 ];\r\n\r\n\t\t\tif ( ! animations[ label ] ) animations[ label ] = { start: Infinity, end: - Infinity };\r\n\r\n\t\t\tvar animation = animations[ label ];\r\n\r\n\t\t\tif ( i < animation.start ) animation.start = i;\r\n\t\t\tif ( i > animation.end ) animation.end = i;\r\n\r\n\t\t\tif ( ! firstAnimation ) firstAnimation = label;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tgeometry.firstAnimation = firstAnimation;\r\n\r\n};\r\n\r\nTHREE.MorphAnimMesh.prototype.setAnimationLabel = function ( label, start, end ) {\r\n\r\n\tif ( ! this.geometry.animations ) this.geometry.animations = {};\r\n\r\n\tthis.geometry.animations[ label ] = { start: start, end: end };\r\n\r\n};\r\n\r\nTHREE.MorphAnimMesh.prototype.playAnimation = function ( label, fps ) {\r\n\r\n\tvar animation = this.geometry.animations[ label ];\r\n\r\n\tif ( animation ) {\r\n\r\n\t\tthis.setFrameRange( animation.start, animation.end );\r\n\t\tthis.duration = 1000 * ( ( animation.end - animation.start ) / fps );\r\n\t\tthis.time = 0;\r\n\r\n\t} else {\r\n\r\n\t\tconsole.warn( 'THREE.MorphAnimMesh: animation[' + label + '] undefined in .playAnimation()' );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.MorphAnimMesh.prototype.updateAnimation = function ( delta ) {\r\n\r\n\tvar frameTime = this.duration / this.length;\r\n\r\n\tthis.time += this.direction * delta;\r\n\r\n\tif ( this.mirroredLoop ) {\r\n\r\n\t\tif ( this.time > this.duration || this.time < 0 ) {\r\n\r\n\t\t\tthis.direction *= - 1;\r\n\r\n\t\t\tif ( this.time > this.duration ) {\r\n\r\n\t\t\t\tthis.time = this.duration;\r\n\t\t\t\tthis.directionBackwards = true;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( this.time < 0 ) {\r\n\r\n\t\t\t\tthis.time = 0;\r\n\t\t\t\tthis.directionBackwards = false;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t} else {\r\n\r\n\t\tthis.time = this.time % this.duration;\r\n\r\n\t\tif ( this.time < 0 ) this.time += this.duration;\r\n\r\n\t}\r\n\r\n\tvar keyframe = this.startKeyframe + THREE.Math.clamp( Math.floor( this.time / frameTime ), 0, this.length - 1 );\r\n\r\n\tvar influences = this.morphTargetInfluences;\r\n\r\n\tif ( keyframe !== this.currentKeyframe ) {\r\n\r\n\t\tinfluences[ this.lastKeyframe ] = 0;\r\n\t\tinfluences[ this.currentKeyframe ] = 1;\r\n\t\tinfluences[ keyframe ] = 0;\r\n\r\n\t\tthis.lastKeyframe = this.currentKeyframe;\r\n\t\tthis.currentKeyframe = keyframe;\r\n\r\n\t}\r\n\r\n\tvar mix = ( this.time % frameTime ) / frameTime;\r\n\r\n\tif ( this.directionBackwards ) {\r\n\r\n\t\tmix = 1 - mix;\r\n\r\n\t}\r\n\r\n\tinfluences[ this.currentKeyframe ] = mix;\r\n\tinfluences[ this.lastKeyframe ] = 1 - mix;\r\n\r\n};\r\n\r\nTHREE.MorphAnimMesh.prototype.interpolateTargets = function ( a, b, t ) {\r\n\r\n\tvar influences = this.morphTargetInfluences;\r\n\r\n\tfor ( var i = 0, l = influences.length; i < l; i ++ ) {\r\n\r\n\t\tinfluences[ i ] = 0;\r\n\r\n\t}\r\n\r\n\tif ( a > - 1 ) influences[ a ] = 1 - t;\r\n\tif ( b > - 1 ) influences[ b ] = t;\r\n\r\n};\r\n\r\nTHREE.MorphAnimMesh.prototype.copy = function ( source ) {\r\n\r\n\tTHREE.Mesh.prototype.copy.call( this, source );\r\n\r\n\tthis.duration = source.duration;\r\n\tthis.mirroredLoop = source.mirroredLoop;\r\n\tthis.time = source.time;\r\n\r\n\tthis.lastKeyframe = source.lastKeyframe;\r\n\tthis.currentKeyframe = source.currentKeyframe;\r\n\r\n\tthis.direction = source.direction;\r\n\tthis.directionBackwards = source.directionBackwards;\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\n// File:src/objects/LOD.js\r\n\r\n/**\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.LOD = function () {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.type = 'LOD';\r\n\r\n\tObject.defineProperties( this, {\r\n\t\tlevels: {\r\n\t\t\tenumerable: true,\r\n\t\t\tvalue: []\r\n\t\t},\r\n\t\tobjects: {\r\n\t\t\tget: function () {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.LOD: .objects has been renamed to .levels.' );\r\n\t\t\t\treturn this.levels;\r\n\r\n\t\t\t}\r\n\t\t}\r\n\t} );\r\n\r\n};\r\n\r\n\r\nTHREE.LOD.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.LOD.prototype.constructor = THREE.LOD;\r\n\r\nTHREE.LOD.prototype.addLevel = function ( object, distance ) {\r\n\r\n\tif ( distance === undefined ) distance = 0;\r\n\r\n\tdistance = Math.abs( distance );\r\n\r\n\tvar levels = this.levels;\r\n\r\n\tfor ( var l = 0; l < levels.length; l ++ ) {\r\n\r\n\t\tif ( distance < levels[ l ].distance ) {\r\n\r\n\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tlevels.splice( l, 0, { distance: distance, object: object } );\r\n\r\n\tthis.add( object );\r\n\r\n};\r\n\r\nTHREE.LOD.prototype.getObjectForDistance = function ( distance ) {\r\n\r\n\tvar levels = this.levels;\r\n\r\n\tfor ( var i = 1, l = levels.length; i < l; i ++ ) {\r\n\r\n\t\tif ( distance < levels[ i ].distance ) {\r\n\r\n\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\treturn levels[ i - 1 ].object;\r\n\r\n};\r\n\r\nTHREE.LOD.prototype.raycast = ( function () {\r\n\r\n\tvar matrixPosition = new THREE.Vector3();\r\n\r\n\treturn function raycast( raycaster, intersects ) {\r\n\r\n\t\tmatrixPosition.setFromMatrixPosition( this.matrixWorld );\r\n\r\n\t\tvar distance = raycaster.ray.origin.distanceTo( matrixPosition );\r\n\r\n\t\tthis.getObjectForDistance( distance ).raycast( raycaster, intersects );\r\n\r\n\t};\r\n\r\n}() );\r\n\r\nTHREE.LOD.prototype.update = function () {\r\n\r\n\tvar v1 = new THREE.Vector3();\r\n\tvar v2 = new THREE.Vector3();\r\n\r\n\treturn function update( camera ) {\r\n\r\n\t\tvar levels = this.levels;\r\n\r\n\t\tif ( levels.length > 1 ) {\r\n\r\n\t\t\tv1.setFromMatrixPosition( camera.matrixWorld );\r\n\t\t\tv2.setFromMatrixPosition( this.matrixWorld );\r\n\r\n\t\t\tvar distance = v1.distanceTo( v2 );\r\n\r\n\t\t\tlevels[ 0 ].object.visible = true;\r\n\r\n\t\t\tfor ( var i = 1, l = levels.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tif ( distance >= levels[ i ].distance ) {\r\n\r\n\t\t\t\t\tlevels[ i - 1 ].object.visible = false;\r\n\t\t\t\t\tlevels[ i ].object.visible = true;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfor ( ; i < l; i ++ ) {\r\n\r\n\t\t\t\tlevels[ i ].object.visible = false;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n}();\r\n\r\nTHREE.LOD.prototype.copy = function ( source ) {\r\n\r\n\tTHREE.Object3D.prototype.copy.call( this, source, false );\r\n\r\n\tvar levels = source.levels;\r\n\r\n\tfor ( var i = 0, l = levels.length; i < l; i ++ ) {\r\n\r\n\t\tvar level = levels[ i ];\r\n\r\n\t\tthis.addLevel( level.object.clone(), level.distance );\r\n\r\n\t}\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\nTHREE.LOD.prototype.toJSON = function ( meta ) {\r\n\r\n\tvar data = THREE.Object3D.prototype.toJSON.call( this, meta );\r\n\r\n\tdata.object.levels = [];\r\n\r\n\tvar levels = this.levels;\r\n\r\n\tfor ( var i = 0, l = levels.length; i < l; i ++ ) {\r\n\r\n\t\tvar level = levels[ i ];\r\n\r\n\t\tdata.object.levels.push( {\r\n\t\t\tobject: level.object.uuid,\r\n\t\t\tdistance: level.distance\r\n\t\t} );\r\n\r\n\t}\r\n\r\n\treturn data;\r\n\r\n};\r\n\r\n// File:src/objects/Sprite.js\r\n\r\n/**\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.Sprite = ( function () {\r\n\r\n\tvar indices = new Uint16Array( [ 0, 1, 2,  0, 2, 3 ] );\r\n\tvar vertices = new Float32Array( [ - 0.5, - 0.5, 0,   0.5, - 0.5, 0,   0.5, 0.5, 0,   - 0.5, 0.5, 0 ] );\r\n\tvar uvs = new Float32Array( [ 0, 0,   1, 0,   1, 1,   0, 1 ] );\r\n\r\n\tvar geometry = new THREE.BufferGeometry();\r\n\tgeometry.setIndex( new THREE.BufferAttribute( indices, 1 ) );\r\n\tgeometry.addAttribute( 'position', new THREE.BufferAttribute( vertices, 3 ) );\r\n\tgeometry.addAttribute( 'uv', new THREE.BufferAttribute( uvs, 2 ) );\r\n\r\n\treturn function Sprite( material ) {\r\n\r\n\t\tTHREE.Object3D.call( this );\r\n\r\n\t\tthis.type = 'Sprite';\r\n\r\n\t\tthis.geometry = geometry;\r\n\t\tthis.material = ( material !== undefined ) ? material : new THREE.SpriteMaterial();\r\n\r\n\t};\r\n\r\n} )();\r\n\r\nTHREE.Sprite.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.Sprite.prototype.constructor = THREE.Sprite;\r\n\r\nTHREE.Sprite.prototype.raycast = ( function () {\r\n\r\n\tvar matrixPosition = new THREE.Vector3();\r\n\r\n\treturn function raycast( raycaster, intersects ) {\r\n\r\n\t\tmatrixPosition.setFromMatrixPosition( this.matrixWorld );\r\n\r\n\t\tvar distanceSq = raycaster.ray.distanceSqToPoint( matrixPosition );\r\n\t\tvar guessSizeSq = this.scale.x * this.scale.y;\r\n\r\n\t\tif ( distanceSq > guessSizeSq ) {\r\n\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tintersects.push( {\r\n\r\n\t\t\tdistance: Math.sqrt( distanceSq ),\r\n\t\t\tpoint: this.position,\r\n\t\t\tface: null,\r\n\t\t\tobject: this\r\n\r\n\t\t} );\r\n\r\n\t};\r\n\r\n}() );\r\n\r\nTHREE.Sprite.prototype.clone = function () {\r\n\r\n\treturn new this.constructor( this.material ).copy( this );\r\n\r\n};\r\n\r\nTHREE.Sprite.prototype.toJSON = function ( meta ) {\r\n\r\n\tvar data = THREE.Object3D.prototype.toJSON.call( this, meta );\r\n\r\n\t// only serialize if not in meta materials cache\r\n\tif ( meta.materials[ this.material.uuid ] === undefined ) {\r\n\r\n\t\tmeta.materials[ this.material.uuid ] = this.material.toJSON();\r\n\r\n\t}\r\n\r\n\tdata.object.material = this.material.uuid;\r\n\r\n\treturn data;\r\n\r\n};\r\n\r\n// Backwards compatibility\r\n\r\nTHREE.Particle = THREE.Sprite;\r\n\r\n// File:src/objects/LensFlare.js\r\n\r\n/**\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.LensFlare = function ( texture, size, distance, blending, color ) {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.lensFlares = [];\r\n\r\n\tthis.positionScreen = new THREE.Vector3();\r\n\tthis.customUpdateCallback = undefined;\r\n\r\n\tif ( texture !== undefined ) {\r\n\r\n\t\tthis.add( texture, size, distance, blending, color );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.LensFlare.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.LensFlare.prototype.constructor = THREE.LensFlare;\r\n\r\n\r\n/*\r\n * Add: adds another flare\r\n */\r\n\r\nTHREE.LensFlare.prototype.add = function ( texture, size, distance, blending, color, opacity ) {\r\n\r\n\tif ( size === undefined ) size = - 1;\r\n\tif ( distance === undefined ) distance = 0;\r\n\tif ( opacity === undefined ) opacity = 1;\r\n\tif ( color === undefined ) color = new THREE.Color( 0xffffff );\r\n\tif ( blending === undefined ) blending = THREE.NormalBlending;\r\n\r\n\tdistance = Math.min( distance, Math.max( 0, distance ) );\r\n\r\n\tthis.lensFlares.push( {\r\n\t\ttexture: texture,\t// THREE.Texture\r\n\t\tsize: size, \t\t// size in pixels (-1 = use texture.width)\r\n\t\tdistance: distance, \t// distance (0-1) from light source (0=at light source)\r\n\t\tx: 0, y: 0, z: 0,\t// screen position (-1 => 1) z = 0 is in front z = 1 is back\r\n\t\tscale: 1, \t\t// scale\r\n\t\trotation: 0, \t\t// rotation\r\n\t\topacity: opacity,\t// opacity\r\n\t\tcolor: color,\t\t// color\r\n\t\tblending: blending\t// blending\r\n\t} );\r\n\r\n};\r\n\r\n/*\r\n * Update lens flares update positions on all flares based on the screen position\r\n * Set myLensFlare.customUpdateCallback to alter the flares in your project specific way.\r\n */\r\n\r\nTHREE.LensFlare.prototype.updateLensFlares = function () {\r\n\r\n\tvar f, fl = this.lensFlares.length;\r\n\tvar flare;\r\n\tvar vecX = - this.positionScreen.x * 2;\r\n\tvar vecY = - this.positionScreen.y * 2;\r\n\r\n\tfor ( f = 0; f < fl; f ++ ) {\r\n\r\n\t\tflare = this.lensFlares[ f ];\r\n\r\n\t\tflare.x = this.positionScreen.x + vecX * flare.distance;\r\n\t\tflare.y = this.positionScreen.y + vecY * flare.distance;\r\n\r\n\t\tflare.wantedRotation = flare.x * Math.PI * 0.25;\r\n\t\tflare.rotation += ( flare.wantedRotation - flare.rotation ) * 0.25;\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.LensFlare.prototype.copy = function ( source ) {\r\n\r\n\tTHREE.Object3D.prototype.copy.call( this, source );\r\n\r\n\tthis.positionScreen.copy( source.positionScreen );\r\n\tthis.customUpdateCallback = source.customUpdateCallback;\r\n\r\n\tfor ( var i = 0, l = source.lensFlares.length; i < l; i ++ ) {\r\n\r\n\t\tthis.lensFlares.push( source.lensFlares[ i ] );\r\n\r\n\t}\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\n// File:src/scenes/Scene.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.Scene = function () {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.type = 'Scene';\r\n\r\n\tthis.fog = null;\r\n\tthis.overrideMaterial = null;\r\n\r\n\tthis.autoUpdate = true; // checked by the renderer\r\n\r\n};\r\n\r\nTHREE.Scene.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.Scene.prototype.constructor = THREE.Scene;\r\n\r\nTHREE.Scene.prototype.copy = function ( source ) {\r\n\r\n\tTHREE.Object3D.prototype.copy.call( this, source );\r\n\r\n\tif ( source.fog !== null ) this.fog = source.fog.clone();\r\n\tif ( source.overrideMaterial !== null ) this.overrideMaterial = source.overrideMaterial.clone();\r\n\r\n\tthis.autoUpdate = source.autoUpdate;\r\n\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\n// File:src/scenes/Fog.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.Fog = function ( color, near, far ) {\r\n\r\n\tthis.name = '';\r\n\r\n\tthis.color = new THREE.Color( color );\r\n\r\n\tthis.near = ( near !== undefined ) ? near : 1;\r\n\tthis.far = ( far !== undefined ) ? far : 1000;\r\n\r\n};\r\n\r\nTHREE.Fog.prototype.clone = function () {\r\n\r\n\treturn new THREE.Fog( this.color.getHex(), this.near, this.far );\r\n\r\n};\r\n\r\n// File:src/scenes/FogExp2.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.FogExp2 = function ( color, density ) {\r\n\r\n\tthis.name = '';\r\n\r\n\tthis.color = new THREE.Color( color );\r\n\tthis.density = ( density !== undefined ) ? density : 0.00025;\r\n\r\n};\r\n\r\nTHREE.FogExp2.prototype.clone = function () {\r\n\r\n\treturn new THREE.FogExp2( this.color.getHex(), this.density );\r\n\r\n};\r\n\r\n// File:src/renderers/shaders/ShaderChunk.js\r\n\r\nTHREE.ShaderChunk = {};\r\n\r\n// File:src/renderers/shaders/ShaderChunk/alphamap_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'alphamap_fragment'] = \"#ifdef USE_ALPHAMAP\\n\\n\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/alphamap_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'alphamap_pars_fragment'] = \"#ifdef USE_ALPHAMAP\\n\\n\tuniform sampler2D alphaMap;\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/alphatest_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'alphatest_fragment'] = \"#ifdef ALPHATEST\\n\\n\tif ( diffuseColor.a < ALPHATEST ) discard;\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/aomap_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'aomap_fragment'] = \"#ifdef USE_AOMAP\\n\\n\ttotalAmbientLight *= ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/aomap_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'aomap_pars_fragment'] = \"#ifdef USE_AOMAP\\n\\n\tuniform sampler2D aoMap;\\n\tuniform float aoMapIntensity;\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/begin_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'begin_vertex'] = \"\\nvec3 transformed = vec3( position );\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/beginnormal_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'beginnormal_vertex'] = \"\\nvec3 objectNormal = vec3( normal );\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/bumpmap_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'bumpmap_pars_fragment'] = \"#ifdef USE_BUMPMAP\\n\\n\tuniform sampler2D bumpMap;\\n\tuniform float bumpScale;\\n\\n\t// Derivative maps - bump mapping unparametrized surfaces by Morten Mikkelsen\\n\t// http://mmikkelsen3d.blogspot.sk/2011/07/derivative-maps.html\\n\\n\t// Evaluate the derivative of the height w.r.t. screen-space using forward differencing (listing 2)\\n\\n\tvec2 dHdxy_fwd() {\\n\\n\t\tvec2 dSTdx = dFdx( vUv );\\n\t\tvec2 dSTdy = dFdy( vUv );\\n\\n\t\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\\n\t\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\\n\t\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\\n\\n\t\treturn vec2( dBx, dBy );\\n\\n\t}\\n\\n\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\\n\\n\t\tvec3 vSigmaX = dFdx( surf_pos );\\n\t\tvec3 vSigmaY = dFdy( surf_pos );\\n\t\tvec3 vN = surf_norm;\t\t// normalized\\n\\n\t\tvec3 R1 = cross( vSigmaY, vN );\\n\t\tvec3 R2 = cross( vN, vSigmaX );\\n\\n\t\tfloat fDet = dot( vSigmaX, R1 );\\n\\n\t\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\\n\t\treturn normalize( abs( fDet ) * surf_norm - vGrad );\\n\\n\t}\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/color_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'color_fragment'] = \"#ifdef USE_COLOR\\n\\n\tdiffuseColor.rgb *= vColor;\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/color_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'color_pars_fragment'] = \"#ifdef USE_COLOR\\n\\n\tvarying vec3 vColor;\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/color_pars_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'color_pars_vertex'] = \"#ifdef USE_COLOR\\n\\n\tvarying vec3 vColor;\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/color_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'color_vertex'] = \"#ifdef USE_COLOR\\n\\n\tvColor.xyz = color.xyz;\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/common.glsl\r\n\r\nTHREE.ShaderChunk[ 'common'] = \"#define PI 3.14159\\n#define PI2 6.28318\\n#define RECIPROCAL_PI2 0.15915494\\n#define LOG2 1.442695\\n#define EPSILON 1e-6\\n\\n#define saturate(a) clamp( a, 0.0, 1.0 )\\n#define whiteCompliment(a) ( 1.0 - saturate( a ) )\\n\\nvec3 transformDirection( in vec3 normal, in mat4 matrix ) {\\n\\n\treturn normalize( ( matrix * vec4( normal, 0.0 ) ).xyz );\\n\\n}\\n\\n// http://en.wikibooks.org/wiki/GLSL_Programming/Applying_Matrix_Transformations\\nvec3 inverseTransformDirection( in vec3 normal, in mat4 matrix ) {\\n\\n\treturn normalize( ( vec4( normal, 0.0 ) * matrix ).xyz );\\n\\n}\\n\\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\n\tfloat distance = dot( planeNormal, point - pointOnPlane );\\n\\n\treturn - distance * planeNormal + point;\\n\\n}\\n\\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\n\treturn sign( dot( point - pointOnPlane, planeNormal ) );\\n\\n}\\n\\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\n\treturn lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;\\n\\n}\\n\\nfloat calcLightAttenuation( float lightDistance, float cutoffDistance, float decayExponent ) {\\n\\n\tif ( decayExponent > 0.0 ) {\\n\\n\t  return pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );\\n\\n\t}\\n\\n\treturn 1.0;\\n\\n}\\n\\nvec3 F_Schlick( in vec3 specularColor, in float dotLH ) {\\n\\n\t// Original approximation by Christophe Schlick '94\\n\t//;float fresnel = pow( 1.0 - dotLH, 5.0 );\\n\\n\t// Optimized variant (presented by Epic at SIGGRAPH '13)\\n\tfloat fresnel = exp2( ( -5.55437 * dotLH - 6.98316 ) * dotLH );\\n\\n\treturn ( 1.0 - specularColor ) * fresnel + specularColor;\\n\\n}\\n\\nfloat G_BlinnPhong_Implicit( /* in float dotNL, in float dotNV */ ) {\\n\\n\t// geometry term is (n⋅l)(n⋅v) / 4(n⋅l)(n⋅v)\\n\\n\treturn 0.25;\\n\\n}\\n\\nfloat D_BlinnPhong( in float shininess, in float dotNH ) {\\n\\n\t// factor of 1/PI in distribution term omitted\\n\\n\treturn ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\\n\\n}\\n\\nvec3 BRDF_BlinnPhong( in vec3 specularColor, in float shininess, in vec3 normal, in vec3 lightDir, in vec3 viewDir ) {\\n\\n\tvec3 halfDir = normalize( lightDir + viewDir );\\n\\n\t//float dotNL = saturate( dot( normal, lightDir ) );\\n\t//float dotNV = saturate( dot( normal, viewDir ) );\\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\tfloat dotLH = saturate( dot( lightDir, halfDir ) );\\n\\n\tvec3 F = F_Schlick( specularColor, dotLH );\\n\\n\tfloat G = G_BlinnPhong_Implicit( /* dotNL, dotNV */ );\\n\\n\tfloat D = D_BlinnPhong( shininess, dotNH );\\n\\n\treturn F * G * D;\\n\\n}\\n\\nvec3 inputToLinear( in vec3 a ) {\\n\\n\t#ifdef GAMMA_INPUT\\n\\n\t\treturn pow( a, vec3( float( GAMMA_FACTOR ) ) );\\n\\n\t#else\\n\\n\t\treturn a;\\n\\n\t#endif\\n\\n}\\n\\nvec3 linearToOutput( in vec3 a ) {\\n\\n\t#ifdef GAMMA_OUTPUT\\n\\n\t\treturn pow( a, vec3( 1.0 / float( GAMMA_FACTOR ) ) );\\n\\n\t#else\\n\\n\t\treturn a;\\n\\n\t#endif\\n\\n}\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/defaultnormal_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'defaultnormal_vertex'] = \"#ifdef FLIP_SIDED\\n\\n\tobjectNormal = -objectNormal;\\n\\n#endif\\n\\nvec3 transformedNormal = normalMatrix * objectNormal;\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/displacementmap_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'displacementmap_vertex'] = \"#ifdef USE_DISPLACEMENTMAP\\n\\n\ttransformed += normal * ( texture2D( displacementMap, uv ).x * displacementScale + displacementBias );\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/displacementmap_pars_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'displacementmap_pars_vertex'] = \"#ifdef USE_DISPLACEMENTMAP\\n\\n\tuniform sampler2D displacementMap;\\n\tuniform float displacementScale;\\n\tuniform float displacementBias;\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/emissivemap_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'emissivemap_fragment'] = \"#ifdef USE_EMISSIVEMAP\\n\\n\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\\n\\n\temissiveColor.rgb = inputToLinear( emissiveColor.rgb );\\n\\n\ttotalEmissiveLight *= emissiveColor.rgb;\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/emissivemap_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'emissivemap_pars_fragment'] = \"#ifdef USE_EMISSIVEMAP\\n\\n\tuniform sampler2D emissiveMap;\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/envmap_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'envmap_fragment'] = \"#ifdef USE_ENVMAP\\n\\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\n\t\tvec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\\n\\n\t\t// Transforming Normal Vectors with the Inverse Transformation\\n\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\n\t\t#ifdef ENVMAP_MODE_REFLECTION\\n\\n\t\t\tvec3 reflectVec = reflect( cameraToVertex, worldNormal );\\n\\n\t\t#else\\n\\n\t\t\tvec3 reflectVec = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\n\t\t#endif\\n\\n\t#else\\n\\n\t\tvec3 reflectVec = vReflect;\\n\\n\t#endif\\n\\n\t#ifdef DOUBLE_SIDED\\n\t\tfloat flipNormal = ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n\t#else\\n\t\tfloat flipNormal = 1.0;\\n\t#endif\\n\\n\t#ifdef ENVMAP_TYPE_CUBE\\n\t\tvec4 envColor = textureCube( envMap, flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\\n\\n\t#elif defined( ENVMAP_TYPE_EQUIREC )\\n\t\tvec2 sampleUV;\\n\t\tsampleUV.y = saturate( flipNormal * reflectVec.y * 0.5 + 0.5 );\\n\t\tsampleUV.x = atan( flipNormal * reflectVec.z, flipNormal * reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\\n\t\tvec4 envColor = texture2D( envMap, sampleUV );\\n\\n\t#elif defined( ENVMAP_TYPE_SPHERE )\\n\t\tvec3 reflectView = flipNormal * normalize((viewMatrix * vec4( reflectVec, 0.0 )).xyz + vec3(0.0,0.0,1.0));\\n\t\tvec4 envColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5 );\\n\t#endif\\n\\n\tenvColor.xyz = inputToLinear( envColor.xyz );\\n\\n\t#ifdef ENVMAP_BLENDING_MULTIPLY\\n\\n\t\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\\n\\n\t#elif defined( ENVMAP_BLENDING_MIX )\\n\\n\t\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\\n\\n\t#elif defined( ENVMAP_BLENDING_ADD )\\n\\n\t\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\\n\\n\t#endif\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/envmap_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'envmap_pars_fragment'] = \"#ifdef USE_ENVMAP\\n\\n\tuniform float reflectivity;\\n\t#ifdef ENVMAP_TYPE_CUBE\\n\t\tuniform samplerCube envMap;\\n\t#else\\n\t\tuniform sampler2D envMap;\\n\t#endif\\n\tuniform float flipEnvMap;\\n\\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\n\t\tuniform float refractionRatio;\\n\\n\t#else\\n\\n\t\tvarying vec3 vReflect;\\n\\n\t#endif\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/envmap_pars_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'envmap_pars_vertex'] = \"#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP ) && ! defined( PHONG )\\n\\n\tvarying vec3 vReflect;\\n\\n\tuniform float refractionRatio;\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/envmap_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'envmap_vertex'] = \"#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP ) && ! defined( PHONG )\\n\\n\tvec3 worldNormal = transformDirection( objectNormal, modelMatrix );\\n\\n\tvec3 cameraToVertex = normalize( worldPosition.xyz - cameraPosition );\\n\\n\t#ifdef ENVMAP_MODE_REFLECTION\\n\\n\t\tvReflect = reflect( cameraToVertex, worldNormal );\\n\\n\t#else\\n\\n\t\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\n\t#endif\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/fog_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'fog_fragment'] = \"#ifdef USE_FOG\\n\\n\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\n\t\tfloat depth = gl_FragDepthEXT / gl_FragCoord.w;\\n\\n\t#else\\n\\n\t\tfloat depth = gl_FragCoord.z / gl_FragCoord.w;\\n\\n\t#endif\\n\\n\t#ifdef FOG_EXP2\\n\\n\t\tfloat fogFactor = whiteCompliment( exp2( - fogDensity * fogDensity * depth * depth * LOG2 ) );\\n\\n\t#else\\n\\n\t\tfloat fogFactor = smoothstep( fogNear, fogFar, depth );\\n\\n\t#endif\\n\t\\n\toutgoingLight = mix( outgoingLight, fogColor, fogFactor );\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/fog_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'fog_pars_fragment'] = \"#ifdef USE_FOG\\n\\n\tuniform vec3 fogColor;\\n\\n\t#ifdef FOG_EXP2\\n\\n\t\tuniform float fogDensity;\\n\\n\t#else\\n\\n\t\tuniform float fogNear;\\n\t\tuniform float fogFar;\\n\t#endif\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/lightmap_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'lightmap_fragment'] = \"#ifdef USE_LIGHTMAP\\n\\n\ttotalAmbientLight += texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/lightmap_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'lightmap_pars_fragment'] = \"#ifdef USE_LIGHTMAP\\n\\n\tuniform sampler2D lightMap;\\n\tuniform float lightMapIntensity;\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/lights_lambert_pars_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'lights_lambert_pars_vertex'] = \"uniform vec3 ambientLightColor;\\n\\n#if MAX_DIR_LIGHTS > 0\\n\\n\tuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\\n\tuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\\n\\n#endif\\n\\n#if MAX_HEMI_LIGHTS > 0\\n\\n\tuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\\n\tuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\\n\tuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\\n\\n#endif\\n\\n#if MAX_POINT_LIGHTS > 0\\n\\n\tuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\\n\tuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\\n\tuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\\n\tuniform float pointLightDecay[ MAX_POINT_LIGHTS ];\\n\\n#endif\\n\\n#if MAX_SPOT_LIGHTS > 0\\n\\n\tuniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\\n\tuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\\n\tuniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\\n\tuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\\n\tuniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];\\n\tuniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\\n\tuniform float spotLightDecay[ MAX_SPOT_LIGHTS ];\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/lights_lambert_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'lights_lambert_vertex'] = \"vLightFront = vec3( 0.0 );\\n\\n#ifdef DOUBLE_SIDED\\n\\n\tvLightBack = vec3( 0.0 );\\n\\n#endif\\n\\nvec3 normal = normalize( transformedNormal );\\n\\n#if MAX_POINT_LIGHTS > 0\\n\\n\tfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\\n\\n\t\tvec3 lightColor = pointLightColor[ i ];\\n\\n\t\tvec3 lVector = pointLightPosition[ i ] - mvPosition.xyz;\\n\t\tvec3 lightDir = normalize( lVector );\\n\\n\t\t// attenuation\\n\\n\t\tfloat attenuation = calcLightAttenuation( length( lVector ), pointLightDistance[ i ], pointLightDecay[ i ] );\\n\\n\t\t// diffuse\\n\\n\t\tfloat dotProduct = dot( normal, lightDir );\\n\\n\t\tvLightFront += lightColor * attenuation * saturate( dotProduct );\\n\\n\t\t#ifdef DOUBLE_SIDED\\n\\n\t\t\tvLightBack += lightColor * attenuation * saturate( - dotProduct );\\n\\n\t\t#endif\\n\\n\t}\\n\\n#endif\\n\\n#if MAX_SPOT_LIGHTS > 0\\n\\n\tfor ( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\\n\\n\t\tvec3 lightColor = spotLightColor[ i ];\\n\\n\t\tvec3 lightPosition = spotLightPosition[ i ];\\n\t\tvec3 lVector = lightPosition - mvPosition.xyz;\\n\t\tvec3 lightDir = normalize( lVector );\\n\\n\t\tfloat spotEffect = dot( spotLightDirection[ i ], lightDir );\\n\\n\t\tif ( spotEffect > spotLightAngleCos[ i ] ) {\\n\\n\t\t\tspotEffect = saturate( pow( saturate( spotEffect ), spotLightExponent[ i ] ) );\\n\\n\t\t\t// attenuation\\n\\n\t\t\tfloat attenuation = calcLightAttenuation( length( lVector ), spotLightDistance[ i ], spotLightDecay[ i ] );\\n\\n\t\t\tattenuation *= spotEffect;\\n\\n\t\t\t// diffuse\\n\\n\t\t\tfloat dotProduct = dot( normal, lightDir );\\n\\n\t\t\tvLightFront += lightColor * attenuation * saturate( dotProduct );\\n\\n\t\t\t#ifdef DOUBLE_SIDED\\n\\n\t\t\t\tvLightBack += lightColor * attenuation * saturate( - dotProduct );\\n\\n\t\t\t#endif\\n\\n\t\t}\\n\\n\t}\\n\\n#endif\\n\\n#if MAX_DIR_LIGHTS > 0\\n\\n\tfor ( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {\\n\\n\t\tvec3 lightColor = directionalLightColor[ i ];\\n\\n\t\tvec3 lightDir = directionalLightDirection[ i ];\\n\\n\t\t// diffuse\\n\\n\t\tfloat dotProduct = dot( normal, lightDir );\\n\\n\t\tvLightFront += lightColor * saturate( dotProduct );\\n\\n\t\t#ifdef DOUBLE_SIDED\\n\\n\t\t\tvLightBack += lightColor * saturate( - dotProduct );\\n\\n\t\t#endif\\n\\n\t}\\n\\n#endif\\n\\n#if MAX_HEMI_LIGHTS > 0\\n\\n\tfor ( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\\n\\n\t\tvec3 lightDir = hemisphereLightDirection[ i ];\\n\\n\t\t// diffuse\\n\\n\t\tfloat dotProduct = dot( normal, lightDir );\\n\\n\t\tfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\\n\\n\t\tvLightFront += mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\\n\\n\t\t#ifdef DOUBLE_SIDED\\n\\n\t\t\tfloat hemiDiffuseWeightBack = - 0.5 * dotProduct + 0.5;\\n\\n\t\t\tvLightBack += mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeightBack );\\n\\n\t\t#endif\\n\\n\t}\\n\\n#endif\\n\\nvLightFront += ambientLightColor;\\n\\n#ifdef DOUBLE_SIDED\\n\\n\tvLightBack += ambientLightColor;\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/lights_phong_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'lights_phong_fragment'] = \"#ifndef FLAT_SHADED\\n\\n\tvec3 normal = normalize( vNormal );\\n\\n\t#ifdef DOUBLE_SIDED\\n\\n\t\tnormal = normal * ( -1.0 + 2.0 * float( gl_FrontFacing ) );\\n\\n\t#endif\\n\\n#else\\n\\n\tvec3 fdx = dFdx( vViewPosition );\\n\tvec3 fdy = dFdy( vViewPosition );\\n\tvec3 normal = normalize( cross( fdx, fdy ) );\\n\\n#endif\\n\\n#ifdef USE_NORMALMAP\\n\\n\tnormal = perturbNormal2Arb( -vViewPosition, normal );\\n\\n#elif defined( USE_BUMPMAP )\\n\\n\tnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\\n\\n#endif\\n\\nvec3 viewDir = normalize( vViewPosition );\\n\\nvec3 totalDiffuseLight = vec3( 0.0 );\\nvec3 totalSpecularLight = vec3( 0.0 );\\n\\n#if MAX_POINT_LIGHTS > 0\\n\\n\tfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\\n\\n\t\tvec3 lightColor = pointLightColor[ i ];\\n\\n\t\tvec3 lightPosition = pointLightPosition[ i ];\\n\t\tvec3 lVector = lightPosition + vViewPosition.xyz;\\n\t\tvec3 lightDir = normalize( lVector );\\n\\n\t\t// attenuation\\n\\n\t\tfloat attenuation = calcLightAttenuation( length( lVector ), pointLightDistance[ i ], pointLightDecay[ i ] );\\n\\n\t\t// diffuse\\n\\n\t\tfloat cosineTerm = saturate( dot( normal, lightDir ) );\\n\\n\t\ttotalDiffuseLight += lightColor * attenuation * cosineTerm;\\n\\n\t\t// specular\\n\\n\t\tvec3 brdf = BRDF_BlinnPhong( specular, shininess, normal, lightDir, viewDir );\\n\\n\t\ttotalSpecularLight += brdf * specularStrength * lightColor * attenuation * cosineTerm;\\n\\n\\n\t}\\n\\n#endif\\n\\n#if MAX_SPOT_LIGHTS > 0\\n\\n\tfor ( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\\n\\n\t\tvec3 lightColor = spotLightColor[ i ];\\n\\n\t\tvec3 lightPosition = spotLightPosition[ i ];\\n\t\tvec3 lVector = lightPosition + vViewPosition.xyz;\\n\t\tvec3 lightDir = normalize( lVector );\\n\\n\t\tfloat spotEffect = dot( spotLightDirection[ i ], lightDir );\\n\\n\t\tif ( spotEffect > spotLightAngleCos[ i ] ) {\\n\\n\t\t\tspotEffect = saturate( pow( saturate( spotEffect ), spotLightExponent[ i ] ) );\\n\\n\t\t\t// attenuation\\n\\n\t\t\tfloat attenuation = calcLightAttenuation( length( lVector ), spotLightDistance[ i ], spotLightDecay[ i ] );\\n\\n\t\t\tattenuation *= spotEffect;\\n\\n\t\t\t// diffuse\\n\\n\t\t\tfloat cosineTerm = saturate( dot( normal, lightDir ) );\\n\\n\t\t\ttotalDiffuseLight += lightColor * attenuation * cosineTerm;\\n\\n\t\t\t// specular\\n\\n\t\t\tvec3 brdf = BRDF_BlinnPhong( specular, shininess, normal, lightDir, viewDir );\\n\\n\t\t\ttotalSpecularLight += brdf * specularStrength * lightColor * attenuation * cosineTerm;\\n\\n\t\t}\\n\\n\t}\\n\\n#endif\\n\\n#if MAX_DIR_LIGHTS > 0\\n\\n\tfor( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {\\n\\n\t\tvec3 lightColor = directionalLightColor[ i ];\\n\\n\t\tvec3 lightDir = directionalLightDirection[ i ];\\n\\n\t\t// diffuse\\n\\n\t\tfloat cosineTerm = saturate( dot( normal, lightDir ) );\\n\\n\t\ttotalDiffuseLight += lightColor * cosineTerm;\\n\\n\t\t// specular\\n\\n\t\tvec3 brdf = BRDF_BlinnPhong( specular, shininess, normal, lightDir, viewDir );\\n\\n\t\ttotalSpecularLight += brdf * specularStrength * lightColor * cosineTerm;\\n\\n\t}\\n\\n#endif\\n\\n#if MAX_HEMI_LIGHTS > 0\\n\\n\tfor( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\\n\\n\t\tvec3 lightDir = hemisphereLightDirection[ i ];\\n\\n\t\t// diffuse\\n\\n\t\tfloat dotProduct = dot( normal, lightDir );\\n\\n\t\tfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\\n\\n\t\tvec3 lightColor = mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\\n\\n\t\ttotalDiffuseLight += lightColor;\\n\\n\t\t// specular (sky term only)\\n\\n\t\tvec3 brdf = BRDF_BlinnPhong( specular, shininess, normal, lightDir, viewDir );\\n\\n\t\ttotalSpecularLight += brdf * specularStrength * lightColor * max( dotProduct, 0.0 );\\n\\n\t}\\n\\n#endif\\n\\n#ifdef METAL\\n\\n\toutgoingLight += diffuseColor.rgb * ( totalDiffuseLight + totalAmbientLight ) * specular + totalSpecularLight + totalEmissiveLight;\\n\\n#else\\n\\n\toutgoingLight += diffuseColor.rgb * ( totalDiffuseLight + totalAmbientLight ) + totalSpecularLight + totalEmissiveLight;\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/lights_phong_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'lights_phong_pars_fragment'] = \"uniform vec3 ambientLightColor;\\n\\n#if MAX_DIR_LIGHTS > 0\\n\\n\tuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\\n\tuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\\n\\n#endif\\n\\n#if MAX_HEMI_LIGHTS > 0\\n\\n\tuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\\n\tuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\\n\tuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\\n\\n#endif\\n\\n#if MAX_POINT_LIGHTS > 0\\n\\n\tuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\\n\\n\tuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\\n\tuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\\n\tuniform float pointLightDecay[ MAX_POINT_LIGHTS ];\\n\\n#endif\\n\\n#if MAX_SPOT_LIGHTS > 0\\n\\n\tuniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\\n\tuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\\n\tuniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\\n\tuniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];\\n\tuniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\\n\tuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\\n\tuniform float spotLightDecay[ MAX_SPOT_LIGHTS ];\\n\\n#endif\\n\\n#if MAX_SPOT_LIGHTS > 0 || defined( USE_ENVMAP )\\n\\n\tvarying vec3 vWorldPosition;\\n\\n#endif\\n\\nvarying vec3 vViewPosition;\\n\\n#ifndef FLAT_SHADED\\n\\n\tvarying vec3 vNormal;\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/lights_phong_pars_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'lights_phong_pars_vertex'] = \"#if MAX_SPOT_LIGHTS > 0 || defined( USE_ENVMAP )\\n\\n\tvarying vec3 vWorldPosition;\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/lights_phong_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'lights_phong_vertex'] = \"#if MAX_SPOT_LIGHTS > 0 || defined( USE_ENVMAP )\\n\\n\tvWorldPosition = worldPosition.xyz;\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/linear_to_gamma_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'linear_to_gamma_fragment'] = \"\\n\toutgoingLight = linearToOutput( outgoingLight );\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/logdepthbuf_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'logdepthbuf_fragment'] = \"#if defined(USE_LOGDEPTHBUF) && defined(USE_LOGDEPTHBUF_EXT)\\n\\n\tgl_FragDepthEXT = log2(vFragDepth) * logDepthBufFC * 0.5;\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/logdepthbuf_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'logdepthbuf_pars_fragment'] = \"#ifdef USE_LOGDEPTHBUF\\n\\n\tuniform float logDepthBufFC;\\n\\n\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\n\t\tvarying float vFragDepth;\\n\\n\t#endif\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/logdepthbuf_pars_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'logdepthbuf_pars_vertex'] = \"#ifdef USE_LOGDEPTHBUF\\n\\n\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\n\t\tvarying float vFragDepth;\\n\\n\t#endif\\n\\n\tuniform float logDepthBufFC;\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/logdepthbuf_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'logdepthbuf_vertex'] = \"#ifdef USE_LOGDEPTHBUF\\n\\n\tgl_Position.z = log2(max( EPSILON, gl_Position.w + 1.0 )) * logDepthBufFC;\\n\\n\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\n\t\tvFragDepth = 1.0 + gl_Position.w;\\n\\n#else\\n\\n\t\tgl_Position.z = (gl_Position.z - 1.0) * gl_Position.w;\\n\\n\t#endif\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/map_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'map_fragment'] = \"#ifdef USE_MAP\\n\\n\tvec4 texelColor = texture2D( map, vUv );\\n\\n\ttexelColor.xyz = inputToLinear( texelColor.xyz );\\n\\n\tdiffuseColor *= texelColor;\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/map_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'map_pars_fragment'] = \"#ifdef USE_MAP\\n\\n\tuniform sampler2D map;\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/map_particle_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'map_particle_fragment'] = \"#ifdef USE_MAP\\n\\n\tdiffuseColor *= texture2D( map, vec2( gl_PointCoord.x, 1.0 - gl_PointCoord.y ) * offsetRepeat.zw + offsetRepeat.xy );\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/map_particle_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'map_particle_pars_fragment'] = \"#ifdef USE_MAP\\n\\n\tuniform vec4 offsetRepeat;\\n\tuniform sampler2D map;\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/morphnormal_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'morphnormal_vertex'] = \"#ifdef USE_MORPHNORMALS\\n\\n\tobjectNormal += ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];\\n\tobjectNormal += ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];\\n\tobjectNormal += ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];\\n\tobjectNormal += ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/morphtarget_pars_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'morphtarget_pars_vertex'] = \"#ifdef USE_MORPHTARGETS\\n\\n\t#ifndef USE_MORPHNORMALS\\n\\n\tuniform float morphTargetInfluences[ 8 ];\\n\\n\t#else\\n\\n\tuniform float morphTargetInfluences[ 4 ];\\n\\n\t#endif\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/morphtarget_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'morphtarget_vertex'] = \"#ifdef USE_MORPHTARGETS\\n\\n\ttransformed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];\\n\ttransformed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];\\n\ttransformed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];\\n\ttransformed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];\\n\\n\t#ifndef USE_MORPHNORMALS\\n\\n\ttransformed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];\\n\ttransformed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];\\n\ttransformed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];\\n\ttransformed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];\\n\\n\t#endif\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/normalmap_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'normalmap_pars_fragment'] = \"#ifdef USE_NORMALMAP\\n\\n\tuniform sampler2D normalMap;\\n\tuniform vec2 normalScale;\\n\\n\t// Per-Pixel Tangent Space Normal Mapping\\n\t// http://hacksoflife.blogspot.ch/2009/11/per-pixel-tangent-space-normal-mapping.html\\n\\n\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm ) {\\n\\n\t\tvec3 q0 = dFdx( eye_pos.xyz );\\n\t\tvec3 q1 = dFdy( eye_pos.xyz );\\n\t\tvec2 st0 = dFdx( vUv.st );\\n\t\tvec2 st1 = dFdy( vUv.st );\\n\\n\t\tvec3 S = normalize( q0 * st1.t - q1 * st0.t );\\n\t\tvec3 T = normalize( -q0 * st1.s + q1 * st0.s );\\n\t\tvec3 N = normalize( surf_norm );\\n\\n\t\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\\n\t\tmapN.xy = normalScale * mapN.xy;\\n\t\tmat3 tsn = mat3( S, T, N );\\n\t\treturn normalize( tsn * mapN );\\n\\n\t}\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/project_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'project_vertex'] = \"#ifdef USE_SKINNING\\n\\n\tvec4 mvPosition = modelViewMatrix * skinned;\\n\\n#else\\n\\n\tvec4 mvPosition = modelViewMatrix * vec4( transformed, 1.0 );\\n\\n#endif\\n\\ngl_Position = projectionMatrix * mvPosition;\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/shadowmap_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'shadowmap_fragment'] = \"#ifdef USE_SHADOWMAP\\n\\n\t#ifdef SHADOWMAP_DEBUG\\n\\n\t\tvec3 frustumColors[3];\\n\t\tfrustumColors[0] = vec3( 1.0, 0.5, 0.0 );\\n\t\tfrustumColors[1] = vec3( 0.0, 1.0, 0.8 );\\n\t\tfrustumColors[2] = vec3( 0.0, 0.5, 1.0 );\\n\\n\t#endif\\n\\n\tfloat fDepth;\\n\tvec3 shadowColor = vec3( 1.0 );\\n\\n\tfor( int i = 0; i < MAX_SHADOWS; i ++ ) {\\n\\n\t\tvec3 shadowCoord = vShadowCoord[ i ].xyz / vShadowCoord[ i ].w;\\n\\n\t\t\t\t// if ( something && something ) breaks ATI OpenGL shader compiler\\n\t\t\t\t// if ( all( something, something ) ) using this instead\\n\\n\t\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\\n\t\tbool inFrustum = all( inFrustumVec );\\n\\n\t\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\\n\\n\t\tbool frustumTest = all( frustumTestVec );\\n\\n\t\tif ( frustumTest ) {\\n\\n\t\t\tshadowCoord.z += shadowBias[ i ];\\n\\n\t\t\t#if defined( SHADOWMAP_TYPE_PCF )\\n\\n\t\t\t\t\t\t// Percentage-close filtering\\n\t\t\t\t\t\t// (9 pixel kernel)\\n\t\t\t\t\t\t// http://fabiensanglard.net/shadowmappingPCF/\\n\\n\t\t\t\tfloat shadow = 0.0;\\n\\n\t\t/*\\n\t\t\t\t\t\t// nested loops breaks shader compiler / validator on some ATI cards when using OpenGL\\n\t\t\t\t\t\t// must enroll loop manually\\n\\n\t\t\t\tfor ( float y = -1.25; y <= 1.25; y += 1.25 )\\n\t\t\t\t\tfor ( float x = -1.25; x <= 1.25; x += 1.25 ) {\\n\\n\t\t\t\t\t\tvec4 rgbaDepth = texture2D( shadowMap[ i ], vec2( x * xPixelOffset, y * yPixelOffset ) + shadowCoord.xy );\\n\\n\t\t\t\t\t\t\t\t// doesn't seem to produce any noticeable visual difference compared to simple texture2D lookup\\n\t\t\t\t\t\t\t\t//vec4 rgbaDepth = texture2DProj( shadowMap[ i ], vec4( vShadowCoord[ i ].w * ( vec2( x * xPixelOffset, y * yPixelOffset ) + shadowCoord.xy ), 0.05, vShadowCoord[ i ].w ) );\\n\\n\t\t\t\t\t\tfloat fDepth = unpackDepth( rgbaDepth );\\n\\n\t\t\t\t\t\tif ( fDepth < shadowCoord.z )\\n\t\t\t\t\t\t\tshadow += 1.0;\\n\\n\t\t\t\t}\\n\\n\t\t\t\tshadow /= 9.0;\\n\\n\t\t*/\\n\\n\t\t\t\tconst float shadowDelta = 1.0 / 9.0;\\n\\n\t\t\t\tfloat xPixelOffset = 1.0 / shadowMapSize[ i ].x;\\n\t\t\t\tfloat yPixelOffset = 1.0 / shadowMapSize[ i ].y;\\n\\n\t\t\t\tfloat dx0 = -1.25 * xPixelOffset;\\n\t\t\t\tfloat dy0 = -1.25 * yPixelOffset;\\n\t\t\t\tfloat dx1 = 1.25 * xPixelOffset;\\n\t\t\t\tfloat dy1 = 1.25 * yPixelOffset;\\n\\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy0 ) ) );\\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\n\\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy0 ) ) );\\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\n\\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy0 ) ) );\\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\n\\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, 0.0 ) ) );\\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\n\\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy ) );\\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\n\\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, 0.0 ) ) );\\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\n\\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy1 ) ) );\\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\n\\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy1 ) ) );\\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\n\\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy1 ) ) );\\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\n\\n\t\t\t\tshadowColor = shadowColor * vec3( ( 1.0 - shadowDarkness[ i ] * shadow ) );\\n\\n\t\t\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\\n\\n\t\t\t\t\t\t// Percentage-close filtering\\n\t\t\t\t\t\t// (9 pixel kernel)\\n\t\t\t\t\t\t// http://fabiensanglard.net/shadowmappingPCF/\\n\\n\t\t\t\tfloat shadow = 0.0;\\n\\n\t\t\t\tfloat xPixelOffset = 1.0 / shadowMapSize[ i ].x;\\n\t\t\t\tfloat yPixelOffset = 1.0 / shadowMapSize[ i ].y;\\n\\n\t\t\t\tfloat dx0 = -1.0 * xPixelOffset;\\n\t\t\t\tfloat dy0 = -1.0 * yPixelOffset;\\n\t\t\t\tfloat dx1 = 1.0 * xPixelOffset;\\n\t\t\t\tfloat dy1 = 1.0 * yPixelOffset;\\n\\n\t\t\t\tmat3 shadowKernel;\\n\t\t\t\tmat3 depthKernel;\\n\\n\t\t\t\tdepthKernel[0][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy0 ) ) );\\n\t\t\t\tdepthKernel[0][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, 0.0 ) ) );\\n\t\t\t\tdepthKernel[0][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy1 ) ) );\\n\t\t\t\tdepthKernel[1][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy0 ) ) );\\n\t\t\t\tdepthKernel[1][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy ) );\\n\t\t\t\tdepthKernel[1][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy1 ) ) );\\n\t\t\t\tdepthKernel[2][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy0 ) ) );\\n\t\t\t\tdepthKernel[2][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, 0.0 ) ) );\\n\t\t\t\tdepthKernel[2][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy1 ) ) );\\n\\n\t\t\t\tvec3 shadowZ = vec3( shadowCoord.z );\\n\t\t\t\tshadowKernel[0] = vec3(lessThan(depthKernel[0], shadowZ ));\\n\t\t\t\tshadowKernel[0] *= vec3(0.25);\\n\\n\t\t\t\tshadowKernel[1] = vec3(lessThan(depthKernel[1], shadowZ ));\\n\t\t\t\tshadowKernel[1] *= vec3(0.25);\\n\\n\t\t\t\tshadowKernel[2] = vec3(lessThan(depthKernel[2], shadowZ ));\\n\t\t\t\tshadowKernel[2] *= vec3(0.25);\\n\\n\t\t\t\tvec2 fractionalCoord = 1.0 - fract( shadowCoord.xy * shadowMapSize[i].xy );\\n\\n\t\t\t\tshadowKernel[0] = mix( shadowKernel[1], shadowKernel[0], fractionalCoord.x );\\n\t\t\t\tshadowKernel[1] = mix( shadowKernel[2], shadowKernel[1], fractionalCoord.x );\\n\\n\t\t\t\tvec4 shadowValues;\\n\t\t\t\tshadowValues.x = mix( shadowKernel[0][1], shadowKernel[0][0], fractionalCoord.y );\\n\t\t\t\tshadowValues.y = mix( shadowKernel[0][2], shadowKernel[0][1], fractionalCoord.y );\\n\t\t\t\tshadowValues.z = mix( shadowKernel[1][1], shadowKernel[1][0], fractionalCoord.y );\\n\t\t\t\tshadowValues.w = mix( shadowKernel[1][2], shadowKernel[1][1], fractionalCoord.y );\\n\\n\t\t\t\tshadow = dot( shadowValues, vec4( 1.0 ) );\\n\\n\t\t\t\tshadowColor = shadowColor * vec3( ( 1.0 - shadowDarkness[ i ] * shadow ) );\\n\\n\t\t\t#else\\n\\n\t\t\t\tvec4 rgbaDepth = texture2D( shadowMap[ i ], shadowCoord.xy );\\n\t\t\t\tfloat fDepth = unpackDepth( rgbaDepth );\\n\\n\t\t\t\tif ( fDepth < shadowCoord.z )\\n\\n\t\t// spot with multiple shadows is darker\\n\\n\t\t\t\t\tshadowColor = shadowColor * vec3( 1.0 - shadowDarkness[ i ] );\\n\\n\t\t// spot with multiple shadows has the same color as single shadow spot\\n\\n\t\t// \t\t\t\t\tshadowColor = min( shadowColor, vec3( shadowDarkness[ i ] ) );\\n\\n\t\t\t#endif\\n\\n\t\t}\\n\\n\\n\t\t#ifdef SHADOWMAP_DEBUG\\n\\n\t\t\tif ( inFrustum ) outgoingLight *= frustumColors[ i ];\\n\\n\t\t#endif\\n\\n\t}\\n\\n\toutgoingLight = outgoingLight * shadowColor;\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/shadowmap_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'shadowmap_pars_fragment'] = \"#ifdef USE_SHADOWMAP\\n\\n\tuniform sampler2D shadowMap[ MAX_SHADOWS ];\\n\tuniform vec2 shadowMapSize[ MAX_SHADOWS ];\\n\\n\tuniform float shadowDarkness[ MAX_SHADOWS ];\\n\tuniform float shadowBias[ MAX_SHADOWS ];\\n\\n\tvarying vec4 vShadowCoord[ MAX_SHADOWS ];\\n\\n\tfloat unpackDepth( const in vec4 rgba_depth ) {\\n\\n\t\tconst vec4 bit_shift = vec4( 1.0 / ( 256.0 * 256.0 * 256.0 ), 1.0 / ( 256.0 * 256.0 ), 1.0 / 256.0, 1.0 );\\n\t\tfloat depth = dot( rgba_depth, bit_shift );\\n\t\treturn depth;\\n\\n\t}\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/shadowmap_pars_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'shadowmap_pars_vertex'] = \"#ifdef USE_SHADOWMAP\\n\\n\tvarying vec4 vShadowCoord[ MAX_SHADOWS ];\\n\tuniform mat4 shadowMatrix[ MAX_SHADOWS ];\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/shadowmap_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'shadowmap_vertex'] = \"#ifdef USE_SHADOWMAP\\n\\n\tfor( int i = 0; i < MAX_SHADOWS; i ++ ) {\\n\\n\t\tvShadowCoord[ i ] = shadowMatrix[ i ] * worldPosition;\\n\\n\t}\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/skinbase_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'skinbase_vertex'] = \"#ifdef USE_SKINNING\\n\\n\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\\n\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\\n\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\\n\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/skinning_pars_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'skinning_pars_vertex'] = \"#ifdef USE_SKINNING\\n\\n\tuniform mat4 bindMatrix;\\n\tuniform mat4 bindMatrixInverse;\\n\\n\t#ifdef BONE_TEXTURE\\n\\n\t\tuniform sampler2D boneTexture;\\n\t\tuniform int boneTextureWidth;\\n\t\tuniform int boneTextureHeight;\\n\\n\t\tmat4 getBoneMatrix( const in float i ) {\\n\\n\t\t\tfloat j = i * 4.0;\\n\t\t\tfloat x = mod( j, float( boneTextureWidth ) );\\n\t\t\tfloat y = floor( j / float( boneTextureWidth ) );\\n\\n\t\t\tfloat dx = 1.0 / float( boneTextureWidth );\\n\t\t\tfloat dy = 1.0 / float( boneTextureHeight );\\n\\n\t\t\ty = dy * ( y + 0.5 );\\n\\n\t\t\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\\n\t\t\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\\n\t\t\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\\n\t\t\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\\n\\n\t\t\tmat4 bone = mat4( v1, v2, v3, v4 );\\n\\n\t\t\treturn bone;\\n\\n\t\t}\\n\\n\t#else\\n\\n\t\tuniform mat4 boneGlobalMatrices[ MAX_BONES ];\\n\\n\t\tmat4 getBoneMatrix( const in float i ) {\\n\\n\t\t\tmat4 bone = boneGlobalMatrices[ int(i) ];\\n\t\t\treturn bone;\\n\\n\t\t}\\n\\n\t#endif\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/skinning_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'skinning_vertex'] = \"#ifdef USE_SKINNING\\n\\n\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\\n\\n\tvec4 skinned = vec4( 0.0 );\\n\tskinned += boneMatX * skinVertex * skinWeight.x;\\n\tskinned += boneMatY * skinVertex * skinWeight.y;\\n\tskinned += boneMatZ * skinVertex * skinWeight.z;\\n\tskinned += boneMatW * skinVertex * skinWeight.w;\\n\tskinned  = bindMatrixInverse * skinned;\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/skinnormal_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'skinnormal_vertex'] = \"#ifdef USE_SKINNING\\n\\n\tmat4 skinMatrix = mat4( 0.0 );\\n\tskinMatrix += skinWeight.x * boneMatX;\\n\tskinMatrix += skinWeight.y * boneMatY;\\n\tskinMatrix += skinWeight.z * boneMatZ;\\n\tskinMatrix += skinWeight.w * boneMatW;\\n\tskinMatrix  = bindMatrixInverse * skinMatrix * bindMatrix;\\n\\n\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/specularmap_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'specularmap_fragment'] = \"float specularStrength;\\n\\n#ifdef USE_SPECULARMAP\\n\\n\tvec4 texelSpecular = texture2D( specularMap, vUv );\\n\tspecularStrength = texelSpecular.r;\\n\\n#else\\n\\n\tspecularStrength = 1.0;\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/specularmap_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'specularmap_pars_fragment'] = \"#ifdef USE_SPECULARMAP\\n\\n\tuniform sampler2D specularMap;\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/uv2_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'uv2_pars_fragment'] = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\n\tvarying vec2 vUv2;\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/uv2_pars_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'uv2_pars_vertex'] = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\n\tattribute vec2 uv2;\\n\tvarying vec2 vUv2;\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/uv2_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'uv2_vertex'] = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\n\tvUv2 = uv2;\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/uv_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'uv_pars_fragment'] = \"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP )\\n\\n\tvarying vec2 vUv;\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/uv_pars_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'uv_pars_vertex'] = \"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP )\\n\\n\tvarying vec2 vUv;\\n\tuniform vec4 offsetRepeat;\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/uv_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'uv_vertex'] = \"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP )\\n\\n\tvUv = uv * offsetRepeat.zw + offsetRepeat.xy;\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/worldpos_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'worldpos_vertex'] = \"#if defined( USE_ENVMAP ) || defined( PHONG ) || defined( LAMBERT ) || defined ( USE_SHADOWMAP )\\n\\n\t#ifdef USE_SKINNING\\n\\n\t\tvec4 worldPosition = modelMatrix * skinned;\\n\\n\t#else\\n\\n\t\tvec4 worldPosition = modelMatrix * vec4( transformed, 1.0 );\\n\\n\t#endif\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/UniformsUtils.js\r\n\r\n/**\r\n * Uniform Utilities\r\n */\r\n\r\nTHREE.UniformsUtils = {\r\n\r\n\tmerge: function ( uniforms ) {\r\n\r\n\t\tvar merged = {};\r\n\r\n\t\tfor ( var u = 0; u < uniforms.length; u ++ ) {\r\n\r\n\t\t\tvar tmp = this.clone( uniforms[ u ] );\r\n\r\n\t\t\tfor ( var p in tmp ) {\r\n\r\n\t\t\t\tmerged[ p ] = tmp[ p ];\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn merged;\r\n\r\n\t},\r\n\r\n\tclone: function ( uniforms_src ) {\r\n\r\n\t\tvar uniforms_dst = {};\r\n\r\n\t\tfor ( var u in uniforms_src ) {\r\n\r\n\t\t\tuniforms_dst[ u ] = {};\r\n\r\n\t\t\tfor ( var p in uniforms_src[ u ] ) {\r\n\r\n\t\t\t\tvar parameter_src = uniforms_src[ u ][ p ];\r\n\r\n\t\t\t\tif ( parameter_src instanceof THREE.Color ||\r\n\t\t\t\t\t parameter_src instanceof THREE.Vector2 ||\r\n\t\t\t\t\t parameter_src instanceof THREE.Vector3 ||\r\n\t\t\t\t\t parameter_src instanceof THREE.Vector4 ||\r\n\t\t\t\t\t parameter_src instanceof THREE.Matrix3 ||\r\n\t\t\t\t\t parameter_src instanceof THREE.Matrix4 ||\r\n\t\t\t\t\t parameter_src instanceof THREE.Texture ) {\r\n\r\n\t\t\t\t\tuniforms_dst[ u ][ p ] = parameter_src.clone();\r\n\r\n\t\t\t\t} else if ( Array.isArray( parameter_src ) ) {\r\n\r\n\t\t\t\t\tuniforms_dst[ u ][ p ] = parameter_src.slice();\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tuniforms_dst[ u ][ p ] = parameter_src;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn uniforms_dst;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/renderers/shaders/UniformsLib.js\r\n\r\n/**\r\n * Uniforms library for shared webgl shaders\r\n */\r\n\r\nTHREE.UniformsLib = {\r\n\r\n\tcommon: {\r\n\r\n\t\t\"diffuse\" : { type: \"c\", value: new THREE.Color( 0xeeeeee ) },\r\n\t\t\"opacity\" : { type: \"f\", value: 1.0 },\r\n\r\n\t\t\"map\" : { type: \"t\", value: null },\r\n\t\t\"offsetRepeat\" : { type: \"v4\", value: new THREE.Vector4( 0, 0, 1, 1 ) },\r\n\r\n\t\t\"specularMap\" : { type: \"t\", value: null },\r\n\t\t\"alphaMap\" : { type: \"t\", value: null },\r\n\r\n\t\t\"envMap\" : { type: \"t\", value: null },\r\n\t\t\"flipEnvMap\" : { type: \"f\", value: - 1 },\r\n\t\t\"reflectivity\" : { type: \"f\", value: 1.0 },\r\n\t\t\"refractionRatio\" : { type: \"f\", value: 0.98 }\r\n\r\n\t},\r\n\r\n\taomap: {\r\n\r\n\t\t\"aoMap\" : { type: \"t\", value: null },\r\n\t\t\"aoMapIntensity\" : { type: \"f\", value: 1 },\r\n\r\n\t},\r\n\r\n\tlightmap: {\r\n\r\n\t\t\"lightMap\" : { type: \"t\", value: null },\r\n\t\t\"lightMapIntensity\" : { type: \"f\", value: 1 },\r\n\r\n\t},\r\n\r\n\temissivemap: {\r\n\r\n\t\t\"emissiveMap\" : { type: \"t\", value: null },\r\n\r\n\t},\r\n\r\n\tbumpmap: {\r\n\r\n\t\t\"bumpMap\" : { type: \"t\", value: null },\r\n\t\t\"bumpScale\" : { type: \"f\", value: 1 }\r\n\r\n\t},\r\n\r\n\tnormalmap: {\r\n\r\n\t\t\"normalMap\" : { type: \"t\", value: null },\r\n\t\t\"normalScale\" : { type: \"v2\", value: new THREE.Vector2( 1, 1 ) }\r\n\r\n\t},\r\n\r\n\tdisplacementmap: {\r\n\r\n\t\t\"displacementMap\" : { type: \"t\", value: null },\r\n\t\t\"displacementScale\" : { type: \"f\", value: 1 },\r\n\t\t\"displacementBias\" : { type: \"f\", value: 0 }\r\n\r\n\t},\r\n\r\n\tfog : {\r\n\r\n\t\t\"fogDensity\" : { type: \"f\", value: 0.00025 },\r\n\t\t\"fogNear\" : { type: \"f\", value: 1 },\r\n\t\t\"fogFar\" : { type: \"f\", value: 2000 },\r\n\t\t\"fogColor\" : { type: \"c\", value: new THREE.Color( 0xffffff ) }\r\n\r\n\t},\r\n\r\n\tlights: {\r\n\r\n\t\t\"ambientLightColor\" : { type: \"fv\", value: [] },\r\n\r\n\t\t\"directionalLightDirection\" : { type: \"fv\", value: [] },\r\n\t\t\"directionalLightColor\" : { type: \"fv\", value: [] },\r\n\r\n\t\t\"hemisphereLightDirection\" : { type: \"fv\", value: [] },\r\n\t\t\"hemisphereLightSkyColor\" : { type: \"fv\", value: [] },\r\n\t\t\"hemisphereLightGroundColor\" : { type: \"fv\", value: [] },\r\n\r\n\t\t\"pointLightColor\" : { type: \"fv\", value: [] },\r\n\t\t\"pointLightPosition\" : { type: \"fv\", value: [] },\r\n\t\t\"pointLightDistance\" : { type: \"fv1\", value: [] },\r\n\t\t\"pointLightDecay\" : { type: \"fv1\", value: [] },\r\n\r\n\t\t\"spotLightColor\" : { type: \"fv\", value: [] },\r\n\t\t\"spotLightPosition\" : { type: \"fv\", value: [] },\r\n\t\t\"spotLightDirection\" : { type: \"fv\", value: [] },\r\n\t\t\"spotLightDistance\" : { type: \"fv1\", value: [] },\r\n\t\t\"spotLightAngleCos\" : { type: \"fv1\", value: [] },\r\n\t\t\"spotLightExponent\" : { type: \"fv1\", value: [] },\r\n\t\t\"spotLightDecay\" : { type: \"fv1\", value: [] }\r\n\r\n\t},\r\n\r\n\tpoints: {\r\n\r\n\t\t\"psColor\" : { type: \"c\", value: new THREE.Color( 0xeeeeee ) },\r\n\t\t\"opacity\" : { type: \"f\", value: 1.0 },\r\n\t\t\"size\" : { type: \"f\", value: 1.0 },\r\n\t\t\"scale\" : { type: \"f\", value: 1.0 },\r\n\t\t\"map\" : { type: \"t\", value: null },\r\n\t\t\"offsetRepeat\" : { type: \"v4\", value: new THREE.Vector4( 0, 0, 1, 1 ) },\r\n\r\n\t\t\"fogDensity\" : { type: \"f\", value: 0.00025 },\r\n\t\t\"fogNear\" : { type: \"f\", value: 1 },\r\n\t\t\"fogFar\" : { type: \"f\", value: 2000 },\r\n\t\t\"fogColor\" : { type: \"c\", value: new THREE.Color( 0xffffff ) }\r\n\r\n\t},\r\n\r\n\tshadowmap: {\r\n\r\n\t\t\"shadowMap\": { type: \"tv\", value: [] },\r\n\t\t\"shadowMapSize\": { type: \"v2v\", value: [] },\r\n\r\n\t\t\"shadowBias\" : { type: \"fv1\", value: [] },\r\n\t\t\"shadowDarkness\": { type: \"fv1\", value: [] },\r\n\r\n\t\t\"shadowMatrix\" : { type: \"m4v\", value: [] }\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/renderers/shaders/ShaderLib.js\r\n\r\n/**\r\n * Webgl Shader Library for three.js\r\n *\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author mikael emtinger / http://gomo.se/\r\n */\r\n\r\n\r\nTHREE.ShaderLib = {\r\n\r\n\t'basic': {\r\n\r\n\t\tuniforms: THREE.UniformsUtils.merge( [\r\n\r\n\t\t\tTHREE.UniformsLib[ \"common\" ],\r\n\t\t\tTHREE.UniformsLib[ \"aomap\" ],\r\n\t\t\tTHREE.UniformsLib[ \"fog\" ],\r\n\t\t\tTHREE.UniformsLib[ \"shadowmap\" ]\r\n\r\n\t\t] ),\r\n\r\n\t\tvertexShader: [\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"uv_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"uv2_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"envmap_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"color_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"morphtarget_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"skinning_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"shadowmap_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_vertex\" ],\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"uv_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"uv2_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"color_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"skinbase_vertex\" ],\r\n\r\n\t\t\t\"\t#ifdef USE_ENVMAP\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"beginnormal_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"morphnormal_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"skinnormal_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"defaultnormal_vertex\" ],\r\n\r\n\t\t\t\"\t#endif\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"begin_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"morphtarget_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"skinning_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"project_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_vertex\" ],\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"worldpos_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"envmap_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"shadowmap_vertex\" ],\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join( \"\\n\" ),\r\n\r\n\t\tfragmentShader: [\r\n\r\n\t\t\t\"uniform vec3 diffuse;\",\r\n\t\t\t\"uniform float opacity;\",\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"color_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"uv_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"uv2_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"map_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"alphamap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"aomap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"envmap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"fog_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"shadowmap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"specularmap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_fragment\" ],\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\"\tvec3 outgoingLight = vec3( 0.0 );\",\r\n\t\t\t\"\tvec4 diffuseColor = vec4( diffuse, opacity );\",\r\n\t\t\t\"\tvec3 totalAmbientLight = vec3( 1.0 );\", // hardwired\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"map_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"color_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"alphamap_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"alphatest_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"specularmap_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"aomap_fragment\" ],\r\n\r\n\t\t\t\"\toutgoingLight = diffuseColor.rgb * totalAmbientLight;\", // simple shader\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"envmap_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"shadowmap_fragment\" ],\t\t// TODO: Shadows on an otherwise unlit surface doesn't make sense.\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"linear_to_gamma_fragment\" ],\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"fog_fragment\" ],\r\n\r\n\t\t\t\"\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\",\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join( \"\\n\" )\r\n\r\n\t},\r\n\r\n\t'lambert': {\r\n\r\n\t\tuniforms: THREE.UniformsUtils.merge( [\r\n\r\n\t\t\tTHREE.UniformsLib[ \"common\" ],\r\n\t\t\tTHREE.UniformsLib[ \"fog\" ],\r\n\t\t\tTHREE.UniformsLib[ \"lights\" ],\r\n\t\t\tTHREE.UniformsLib[ \"shadowmap\" ],\r\n\r\n\t\t\t{\r\n\t\t\t\t\"emissive\" : { type: \"c\", value: new THREE.Color( 0x000000 ) }\r\n\t\t\t}\r\n\r\n\t\t] ),\r\n\r\n\t\tvertexShader: [\r\n\r\n\t\t\t\"#define LAMBERT\",\r\n\r\n\t\t\t\"varying vec3 vLightFront;\",\r\n\r\n\t\t\t\"#ifdef DOUBLE_SIDED\",\r\n\r\n\t\t\t\"\tvarying vec3 vLightBack;\",\r\n\r\n\t\t\t\"#endif\",\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"uv_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"uv2_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"envmap_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"lights_lambert_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"color_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"morphtarget_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"skinning_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"shadowmap_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_vertex\" ],\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"uv_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"uv2_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"color_vertex\" ],\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"beginnormal_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"morphnormal_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"skinbase_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"skinnormal_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"defaultnormal_vertex\" ],\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"begin_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"morphtarget_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"skinning_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"project_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_vertex\" ],\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"worldpos_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"envmap_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"lights_lambert_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"shadowmap_vertex\" ],\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join( \"\\n\" ),\r\n\r\n\t\tfragmentShader: [\r\n\r\n\t\t\t\"uniform vec3 diffuse;\",\r\n\t\t\t\"uniform vec3 emissive;\",\r\n\t\t\t\"uniform float opacity;\",\r\n\r\n\t\t\t\"varying vec3 vLightFront;\",\r\n\r\n\t\t\t\"#ifdef DOUBLE_SIDED\",\r\n\r\n\t\t\t\"\tvarying vec3 vLightBack;\",\r\n\r\n\t\t\t\"#endif\",\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"color_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"uv_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"uv2_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"map_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"alphamap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"envmap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"fog_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"shadowmap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"specularmap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_fragment\" ],\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\"\tvec3 outgoingLight = vec3( 0.0 );\",\t// outgoing light does not have an alpha, the surface does\r\n\t\t\t\"\tvec4 diffuseColor = vec4( diffuse, opacity );\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"map_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"color_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"alphamap_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"alphatest_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"specularmap_fragment\" ],\r\n\r\n\t\t\t\"\t#ifdef DOUBLE_SIDED\",\r\n\r\n\t\t\t\"\t\tif ( gl_FrontFacing )\",\r\n\t\t\t\"\t\t\toutgoingLight += diffuseColor.rgb * vLightFront + emissive;\",\r\n\t\t\t\"\t\telse\",\r\n\t\t\t\"\t\t\toutgoingLight += diffuseColor.rgb * vLightBack + emissive;\",\r\n\r\n\t\t\t\"\t#else\",\r\n\r\n\t\t\t\"\t\toutgoingLight += diffuseColor.rgb * vLightFront + emissive;\",\r\n\r\n\t\t\t\"\t#endif\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"envmap_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"shadowmap_fragment\" ],\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"linear_to_gamma_fragment\" ],\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"fog_fragment\" ],\r\n\r\n\t\t\t\"\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\",\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join( \"\\n\" )\r\n\r\n\t},\r\n\r\n\t'phong': {\r\n\r\n\t\tuniforms: THREE.UniformsUtils.merge( [\r\n\r\n\t\t\tTHREE.UniformsLib[ \"common\" ],\r\n\t\t\tTHREE.UniformsLib[ \"aomap\" ],\r\n\t\t\tTHREE.UniformsLib[ \"lightmap\" ],\r\n\t\t\tTHREE.UniformsLib[ \"emissivemap\" ],\r\n\t\t\tTHREE.UniformsLib[ \"bumpmap\" ],\r\n\t\t\tTHREE.UniformsLib[ \"normalmap\" ],\r\n\t\t\tTHREE.UniformsLib[ \"displacementmap\" ],\r\n\t\t\tTHREE.UniformsLib[ \"fog\" ],\r\n\t\t\tTHREE.UniformsLib[ \"lights\" ],\r\n\t\t\tTHREE.UniformsLib[ \"shadowmap\" ],\r\n\r\n\t\t\t{\r\n\t\t\t\t\"emissive\" : { type: \"c\", value: new THREE.Color( 0x000000 ) },\r\n\t\t\t\t\"specular\" : { type: \"c\", value: new THREE.Color( 0x111111 ) },\r\n\t\t\t\t\"shininess\": { type: \"f\", value: 30 }\r\n\t\t\t}\r\n\r\n\t\t] ),\r\n\r\n\t\tvertexShader: [\r\n\r\n\t\t\t\"#define PHONG\",\r\n\r\n\t\t\t\"varying vec3 vViewPosition;\",\r\n\r\n\t\t\t\"#ifndef FLAT_SHADED\",\r\n\r\n\t\t\t\"\tvarying vec3 vNormal;\",\r\n\r\n\t\t\t\"#endif\",\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"uv_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"uv2_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"displacementmap_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"envmap_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"lights_phong_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"color_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"morphtarget_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"skinning_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"shadowmap_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_vertex\" ],\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"uv_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"uv2_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"color_vertex\" ],\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"beginnormal_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"morphnormal_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"skinbase_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"skinnormal_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"defaultnormal_vertex\" ],\r\n\r\n\t\t\t\"#ifndef FLAT_SHADED\", // Normal computed with derivatives when FLAT_SHADED\r\n\r\n\t\t\t\"\tvNormal = normalize( transformedNormal );\",\r\n\r\n\t\t\t\"#endif\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"begin_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"displacementmap_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"morphtarget_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"skinning_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"project_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_vertex\" ],\r\n\r\n\t\t\t\"\tvViewPosition = - mvPosition.xyz;\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"worldpos_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"envmap_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"lights_phong_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"shadowmap_vertex\" ],\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join( \"\\n\" ),\r\n\r\n\t\tfragmentShader: [\r\n\r\n\t\t\t\"#define PHONG\",\r\n\r\n\t\t\t\"uniform vec3 diffuse;\",\r\n\t\t\t\"uniform vec3 emissive;\",\r\n\t\t\t\"uniform vec3 specular;\",\r\n\t\t\t\"uniform float shininess;\",\r\n\t\t\t\"uniform float opacity;\",\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"color_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"uv_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"uv2_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"map_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"alphamap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"aomap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"lightmap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"emissivemap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"envmap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"fog_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"lights_phong_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"shadowmap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"bumpmap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"normalmap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"specularmap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_fragment\" ],\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\"\tvec3 outgoingLight = vec3( 0.0 );\",\r\n\t\t\t\"\tvec4 diffuseColor = vec4( diffuse, opacity );\",\r\n\t\t\t\"\tvec3 totalAmbientLight = ambientLightColor;\",\r\n\t\t\t\"\tvec3 totalEmissiveLight = emissive;\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"map_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"color_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"alphamap_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"alphatest_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"specularmap_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"lightmap_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"aomap_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"emissivemap_fragment\" ],\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"lights_phong_fragment\" ],\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"envmap_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"shadowmap_fragment\" ],\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"linear_to_gamma_fragment\" ],\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"fog_fragment\" ],\r\n\r\n\t\t\t\"\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\",\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join( \"\\n\" )\r\n\r\n\t},\r\n\r\n\t'points': {\r\n\r\n\t\tuniforms: THREE.UniformsUtils.merge( [\r\n\r\n\t\t\tTHREE.UniformsLib[ \"points\" ],\r\n\t\t\tTHREE.UniformsLib[ \"shadowmap\" ]\r\n\r\n\t\t] ),\r\n\r\n\t\tvertexShader: [\r\n\r\n\t\t\t\"uniform float size;\",\r\n\t\t\t\"uniform float scale;\",\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"color_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"shadowmap_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_vertex\" ],\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"color_vertex\" ],\r\n\r\n\t\t\t\"\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\",\r\n\r\n\t\t\t\"\t#ifdef USE_SIZEATTENUATION\",\r\n\t\t\t\"\t\tgl_PointSize = size * ( scale / length( mvPosition.xyz ) );\",\r\n\t\t\t\"\t#else\",\r\n\t\t\t\"\t\tgl_PointSize = size;\",\r\n\t\t\t\"\t#endif\",\r\n\r\n\t\t\t\"\tgl_Position = projectionMatrix * mvPosition;\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"worldpos_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"shadowmap_vertex\" ],\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join( \"\\n\" ),\r\n\r\n\t\tfragmentShader: [\r\n\r\n\t\t\t\"uniform vec3 psColor;\",\r\n\t\t\t\"uniform float opacity;\",\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"color_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"map_particle_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"fog_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"shadowmap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_fragment\" ],\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\"\tvec3 outgoingLight = vec3( 0.0 );\",\r\n\t\t\t\"\tvec4 diffuseColor = vec4( psColor, opacity );\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"map_particle_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"color_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"alphatest_fragment\" ],\r\n\r\n\t\t\t\"\toutgoingLight = diffuseColor.rgb;\", // simple shader\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"shadowmap_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"fog_fragment\" ],\r\n\r\n\t\t\t\"\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\",\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join( \"\\n\" )\r\n\r\n\t},\r\n\r\n\t'dashed': {\r\n\r\n\t\tuniforms: THREE.UniformsUtils.merge( [\r\n\r\n\t\t\tTHREE.UniformsLib[ \"common\" ],\r\n\t\t\tTHREE.UniformsLib[ \"fog\" ],\r\n\r\n\t\t\t{\r\n\t\t\t\t\"scale\"    : { type: \"f\", value: 1 },\r\n\t\t\t\t\"dashSize\" : { type: \"f\", value: 1 },\r\n\t\t\t\t\"totalSize\": { type: \"f\", value: 2 }\r\n\t\t\t}\r\n\r\n\t\t] ),\r\n\r\n\t\tvertexShader: [\r\n\r\n\t\t\t\"uniform float scale;\",\r\n\t\t\t\"attribute float lineDistance;\",\r\n\r\n\t\t\t\"varying float vLineDistance;\",\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"color_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_vertex\" ],\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"color_vertex\" ],\r\n\r\n\t\t\t\"\tvLineDistance = scale * lineDistance;\",\r\n\r\n\t\t\t\"\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\",\r\n\t\t\t\"\tgl_Position = projectionMatrix * mvPosition;\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_vertex\" ],\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join( \"\\n\" ),\r\n\r\n\t\tfragmentShader: [\r\n\r\n\t\t\t\"uniform vec3 diffuse;\",\r\n\t\t\t\"uniform float opacity;\",\r\n\r\n\t\t\t\"uniform float dashSize;\",\r\n\t\t\t\"uniform float totalSize;\",\r\n\r\n\t\t\t\"varying float vLineDistance;\",\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"color_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"fog_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_fragment\" ],\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\"\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\",\r\n\r\n\t\t\t\"\t\tdiscard;\",\r\n\r\n\t\t\t\"\t}\",\r\n\r\n\t\t\t\"\tvec3 outgoingLight = vec3( 0.0 );\",\r\n\t\t\t\"\tvec4 diffuseColor = vec4( diffuse, opacity );\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"color_fragment\" ],\r\n\r\n\t\t\t\"\toutgoingLight = diffuseColor.rgb;\", // simple shader\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"fog_fragment\" ],\r\n\r\n\t\t\t\"\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\",\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join( \"\\n\" )\r\n\r\n\t},\r\n\r\n\t'depth': {\r\n\r\n\t\tuniforms: {\r\n\r\n\t\t\t\"mNear\": { type: \"f\", value: 1.0 },\r\n\t\t\t\"mFar\" : { type: \"f\", value: 2000.0 },\r\n\t\t\t\"opacity\" : { type: \"f\", value: 1.0 }\r\n\r\n\t\t},\r\n\r\n\t\tvertexShader: [\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"morphtarget_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_vertex\" ],\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"begin_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"morphtarget_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"project_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_vertex\" ],\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join( \"\\n\" ),\r\n\r\n\t\tfragmentShader: [\r\n\r\n\t\t\t\"uniform float mNear;\",\r\n\t\t\t\"uniform float mFar;\",\r\n\t\t\t\"uniform float opacity;\",\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_fragment\" ],\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_fragment\" ],\r\n\r\n\t\t\t\"\t#ifdef USE_LOGDEPTHBUF_EXT\",\r\n\r\n\t\t\t\"\t\tfloat depth = gl_FragDepthEXT / gl_FragCoord.w;\",\r\n\r\n\t\t\t\"\t#else\",\r\n\r\n\t\t\t\"\t\tfloat depth = gl_FragCoord.z / gl_FragCoord.w;\",\r\n\r\n\t\t\t\"\t#endif\",\r\n\r\n\t\t\t\"\tfloat color = 1.0 - smoothstep( mNear, mFar, depth );\",\r\n\t\t\t\"\tgl_FragColor = vec4( vec3( color ), opacity );\",\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join( \"\\n\" )\r\n\r\n\t},\r\n\r\n\t'normal': {\r\n\r\n\t\tuniforms: {\r\n\r\n\t\t\t\"opacity\" : { type: \"f\", value: 1.0 }\r\n\r\n\t\t},\r\n\r\n\t\tvertexShader: [\r\n\r\n\t\t\t\"varying vec3 vNormal;\",\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"morphtarget_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_vertex\" ],\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\"\tvNormal = normalize( normalMatrix * normal );\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"begin_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"morphtarget_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"project_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_vertex\" ],\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join( \"\\n\" ),\r\n\r\n\t\tfragmentShader: [\r\n\r\n\t\t\t\"uniform float opacity;\",\r\n\t\t\t\"varying vec3 vNormal;\",\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_fragment\" ],\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\"\tgl_FragColor = vec4( 0.5 * normalize( vNormal ) + 0.5, opacity );\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_fragment\" ],\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join( \"\\n\" )\r\n\r\n\t},\r\n\r\n\t/* -------------------------------------------------------------------------\r\n\t//\tCube map shader\r\n\t ------------------------------------------------------------------------- */\r\n\r\n\t'cube': {\r\n\r\n\t\tuniforms: { \"tCube\": { type: \"t\", value: null },\r\n\t\t\t\t\t\"tFlip\": { type: \"f\", value: - 1 } },\r\n\r\n\t\tvertexShader: [\r\n\r\n\t\t\t\"varying vec3 vWorldPosition;\",\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_vertex\" ],\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\"\tvWorldPosition = transformDirection( position, modelMatrix );\",\r\n\r\n\t\t\t\"\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_vertex\" ],\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join( \"\\n\" ),\r\n\r\n\t\tfragmentShader: [\r\n\r\n\t\t\t\"uniform samplerCube tCube;\",\r\n\t\t\t\"uniform float tFlip;\",\r\n\r\n\t\t\t\"varying vec3 vWorldPosition;\",\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_fragment\" ],\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\"\tgl_FragColor = textureCube( tCube, vec3( tFlip * vWorldPosition.x, vWorldPosition.yz ) );\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_fragment\" ],\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join( \"\\n\" )\r\n\r\n\t},\r\n\r\n\t/* -------------------------------------------------------------------------\r\n\t//\tCube map shader\r\n\t ------------------------------------------------------------------------- */\r\n\r\n\t'equirect': {\r\n\r\n\t\tuniforms: { \"tEquirect\": { type: \"t\", value: null },\r\n\t\t\t\t\t\"tFlip\": { type: \"f\", value: - 1 } },\r\n\r\n\t\tvertexShader: [\r\n\r\n\t\t\t\"varying vec3 vWorldPosition;\",\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_vertex\" ],\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\"\tvWorldPosition = transformDirection( position, modelMatrix );\",\r\n\r\n\t\t\t\"\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_vertex\" ],\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join( \"\\n\" ),\r\n\r\n\t\tfragmentShader: [\r\n\r\n\t\t\t\"uniform sampler2D tEquirect;\",\r\n\t\t\t\"uniform float tFlip;\",\r\n\r\n\t\t\t\"varying vec3 vWorldPosition;\",\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_fragment\" ],\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\t// \"\tgl_FragColor = textureCube( tCube, vec3( tFlip * vWorldPosition.x, vWorldPosition.yz ) );\",\r\n\t\t\t\t\"vec3 direction = normalize( vWorldPosition );\",\r\n\t\t\t\t\"vec2 sampleUV;\",\r\n\t\t\t\t\"sampleUV.y = saturate( tFlip * direction.y * -0.5 + 0.5 );\",\r\n\t\t\t\t\"sampleUV.x = atan( direction.z, direction.x ) * RECIPROCAL_PI2 + 0.5;\",\r\n\t\t\t\t\"gl_FragColor = texture2D( tEquirect, sampleUV );\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_fragment\" ],\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join( \"\\n\" )\r\n\r\n\t},\r\n\r\n\t/* Depth encoding into RGBA texture\r\n\t *\r\n\t * based on SpiderGL shadow map example\r\n\t * http://spidergl.org/example.php?id=6\r\n\t *\r\n\t * originally from\r\n\t * http://www.gamedev.net/topic/442138-packing-a-float-into-a-a8r8g8b8-texture-shader/page__whichpage__1%25EF%25BF%25BD\r\n\t *\r\n\t * see also\r\n\t * http://aras-p.info/blog/2009/07/30/encoding-floats-to-rgba-the-final/\r\n\t */\r\n\r\n\t'depthRGBA': {\r\n\r\n\t\tuniforms: {},\r\n\r\n\t\tvertexShader: [\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"morphtarget_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"skinning_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_vertex\" ],\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"skinbase_vertex\" ],\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"begin_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"morphtarget_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"skinning_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"project_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_vertex\" ],\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join( \"\\n\" ),\r\n\r\n\t\tfragmentShader: [\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_fragment\" ],\r\n\r\n\t\t\t\"vec4 pack_depth( const in float depth ) {\",\r\n\r\n\t\t\t\"\tconst vec4 bit_shift = vec4( 256.0 * 256.0 * 256.0, 256.0 * 256.0, 256.0, 1.0 );\",\r\n\t\t\t\"\tconst vec4 bit_mask = vec4( 0.0, 1.0 / 256.0, 1.0 / 256.0, 1.0 / 256.0 );\",\r\n\t\t\t\"\tvec4 res = mod( depth * bit_shift * vec4( 255 ), vec4( 256 ) ) / vec4( 255 );\", // \"\tvec4 res = fract( depth * bit_shift );\",\r\n\t\t\t\"\tres -= res.xxyz * bit_mask;\",\r\n\t\t\t\"\treturn res;\",\r\n\r\n\t\t\t\"}\",\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_fragment\" ],\r\n\r\n\t\t\t\"\t#ifdef USE_LOGDEPTHBUF_EXT\",\r\n\r\n\t\t\t\"\t\tgl_FragData[ 0 ] = pack_depth( gl_FragDepthEXT );\",\r\n\r\n\t\t\t\"\t#else\",\r\n\r\n\t\t\t\"\t\tgl_FragData[ 0 ] = pack_depth( gl_FragCoord.z );\",\r\n\r\n\t\t\t\"\t#endif\",\r\n\r\n\t\t\t\t//\"gl_FragData[ 0 ] = pack_depth( gl_FragCoord.z / gl_FragCoord.w );\",\r\n\t\t\t\t//\"float z = ( ( gl_FragCoord.z / gl_FragCoord.w ) - 3.0 ) / ( 4000.0 - 3.0 );\",\r\n\t\t\t\t//\"gl_FragData[ 0 ] = pack_depth( z );\",\r\n\t\t\t\t//\"gl_FragData[ 0 ] = vec4( z, z, z, 1.0 );\",\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join( \"\\n\" )\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/renderers/WebGLRenderer.js\r\n\r\n/**\r\n * @author supereggbert / http://www.paulbrunt.co.uk/\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author szimek / https://github.com/szimek/\r\n */\r\n\r\nTHREE.WebGLRenderer = function ( parameters ) {\r\n\r\n\tconsole.log( 'THREE.WebGLRenderer', THREE.REVISION );\r\n\r\n\tparameters = parameters || {};\r\n\r\n\tvar _canvas = parameters.canvas !== undefined ? parameters.canvas : document.createElement( 'canvas' ),\r\n\t_context = parameters.context !== undefined ? parameters.context : null,\r\n\r\n\t_width = _canvas.width,\r\n\t_height = _canvas.height,\r\n\r\n\tpixelRatio = 1,\r\n\r\n\t_alpha = parameters.alpha !== undefined ? parameters.alpha : false,\r\n\t_depth = parameters.depth !== undefined ? parameters.depth : true,\r\n\t_stencil = parameters.stencil !== undefined ? parameters.stencil : true,\r\n\t_antialias = parameters.antialias !== undefined ? parameters.antialias : false,\r\n\t_premultipliedAlpha = parameters.premultipliedAlpha !== undefined ? parameters.premultipliedAlpha : true,\r\n\t_preserveDrawingBuffer = parameters.preserveDrawingBuffer !== undefined ? parameters.preserveDrawingBuffer : false,\r\n\r\n\t_clearColor = new THREE.Color( 0x000000 ),\r\n\t_clearAlpha = 0;\r\n\r\n\tvar lights = [];\r\n\r\n\tvar opaqueObjects = [];\r\n\tvar opaqueObjectsLastIndex = -1;\r\n\tvar transparentObjects = [];\r\n\tvar transparentObjectsLastIndex = -1;\r\n\r\n\tvar opaqueImmediateObjects = [];\r\n\tvar opaqueImmediateObjectsLastIndex = -1;\r\n\tvar transparentImmediateObjects = [];\r\n\tvar transparentImmediateObjectsLastIndex = -1;\r\n\r\n\tvar morphInfluences = new Float32Array( 8 );\r\n\r\n\r\n\tvar sprites = [];\r\n\tvar lensFlares = [];\r\n\r\n\t// public properties\r\n\r\n\tthis.domElement = _canvas;\r\n\tthis.context = null;\r\n\r\n\t// clearing\r\n\r\n\tthis.autoClear = true;\r\n\tthis.autoClearColor = true;\r\n\tthis.autoClearDepth = true;\r\n\tthis.autoClearStencil = true;\r\n\r\n\t// scene graph\r\n\r\n\tthis.sortObjects = true;\r\n\r\n\t// physically based shading\r\n\r\n\tthis.gammaFactor = 2.0;\t// for backwards compatibility\r\n\tthis.gammaInput = false;\r\n\tthis.gammaOutput = false;\r\n\r\n\t// morphs\r\n\r\n\tthis.maxMorphTargets = 8;\r\n\tthis.maxMorphNormals = 4;\r\n\r\n\t// flags\r\n\r\n\tthis.autoScaleCubemaps = true;\r\n\r\n\t// internal properties\r\n\r\n\tvar _this = this,\r\n\r\n\t// internal state cache\r\n\r\n\t_currentProgram = null,\r\n\t_currentFramebuffer = null,\r\n\t_currentMaterialId = - 1,\r\n\t_currentGeometryProgram = '',\r\n\t_currentCamera = null,\r\n\r\n\t_usedTextureUnits = 0,\r\n\r\n\t_viewportX = 0,\r\n\t_viewportY = 0,\r\n\t_viewportWidth = _canvas.width,\r\n\t_viewportHeight = _canvas.height,\r\n\t_currentWidth = 0,\r\n\t_currentHeight = 0,\r\n\r\n\t// frustum\r\n\r\n\t_frustum = new THREE.Frustum(),\r\n\r\n\t // camera matrices cache\r\n\r\n\t_projScreenMatrix = new THREE.Matrix4(),\r\n\r\n\t_vector3 = new THREE.Vector3(),\r\n\r\n\t// light arrays cache\r\n\r\n\t_direction = new THREE.Vector3(),\r\n\r\n\t_lightsNeedUpdate = true,\r\n\r\n\t_lights = {\r\n\r\n\t\tambient: [ 0, 0, 0 ],\r\n\t\tdirectional: { length: 0, colors: [], positions: [] },\r\n\t\tpoint: { length: 0, colors: [], positions: [], distances: [], decays: [] },\r\n\t\tspot: { length: 0, colors: [], positions: [], distances: [], directions: [], anglesCos: [], exponents: [], decays: [] },\r\n\t\themi: { length: 0, skyColors: [], groundColors: [], positions: [] }\r\n\r\n\t},\r\n\r\n\t// info\r\n\r\n\t_infoMemory = {\r\n\r\n\t\tgeometries: 0,\r\n\t\ttextures: 0\r\n\r\n\t},\r\n\r\n\t_infoRender = {\r\n\r\n\t\tcalls: 0,\r\n\t\tvertices: 0,\r\n\t\tfaces: 0,\r\n\t\tpoints: 0\r\n\r\n\t};\r\n\r\n\tthis.info = {\r\n\r\n\t\trender: _infoRender,\r\n\t\tmemory: _infoMemory,\r\n\t\tprograms: null\r\n\r\n\t};\r\n\r\n\r\n\t// initialize\r\n\r\n\tvar _gl;\r\n\r\n\ttry {\r\n\r\n\t\tvar attributes = {\r\n\t\t\talpha: _alpha,\r\n\t\t\tdepth: _depth,\r\n\t\t\tstencil: _stencil,\r\n\t\t\tantialias: _antialias,\r\n\t\t\tpremultipliedAlpha: _premultipliedAlpha,\r\n\t\t\tpreserveDrawingBuffer: _preserveDrawingBuffer\r\n\t\t};\r\n\r\n\t\t_gl = _context || _canvas.getContext( 'webgl', attributes ) || _canvas.getContext( 'experimental-webgl', attributes );\r\n\r\n\t\tif ( _gl === null ) {\r\n\r\n\t\t\tif ( _canvas.getContext( 'webgl' ) !== null ) {\r\n\r\n\t\t\t\tthrow 'Error creating WebGL context with your selected attributes.';\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthrow 'Error creating WebGL context.';\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t_canvas.addEventListener( 'webglcontextlost', onContextLost, false );\r\n\r\n\t} catch ( error ) {\r\n\r\n\t\tconsole.error( 'THREE.WebGLRenderer: ' + error );\r\n\r\n\t}\r\n\r\n\tvar extensions = new THREE.WebGLExtensions( _gl );\r\n\r\n\textensions.get( 'OES_texture_float' );\r\n\textensions.get( 'OES_texture_float_linear' );\r\n\textensions.get( 'OES_texture_half_float' );\r\n\textensions.get( 'OES_texture_half_float_linear' );\r\n\textensions.get( 'OES_standard_derivatives' );\r\n\textensions.get( 'ANGLE_instanced_arrays' );\r\n\r\n\tif ( extensions.get( 'OES_element_index_uint' ) ) {\r\n\r\n\t\tTHREE.BufferGeometry.MaxIndex = 4294967296;\r\n\r\n\t}\r\n\r\n\tvar capabilities = new THREE.WebGLCapabilities( _gl, extensions, parameters );\r\n\r\n\tvar state = new THREE.WebGLState( _gl, extensions, paramThreeToGL );\r\n\tvar properties = new THREE.WebGLProperties();\r\n\tvar objects = new THREE.WebGLObjects( _gl, properties, this.info );\r\n\tvar programCache = new THREE.WebGLPrograms( this, capabilities );\r\n\r\n\tthis.info.programs = programCache.programs;\r\n\r\n\tvar bufferRenderer = new THREE.WebGLBufferRenderer( _gl, extensions, _infoRender );\r\n\tvar indexedBufferRenderer = new THREE.WebGLIndexedBufferRenderer( _gl, extensions, _infoRender );\r\n\r\n\t//\r\n\r\n\tfunction glClearColor( r, g, b, a ) {\r\n\r\n\t\tif ( _premultipliedAlpha === true ) {\r\n\r\n\t\t\tr *= a; g *= a; b *= a;\r\n\r\n\t\t}\r\n\r\n\t\t_gl.clearColor( r, g, b, a );\r\n\r\n\t}\r\n\r\n\tfunction setDefaultGLState() {\r\n\r\n\t\tstate.init();\r\n\r\n\t\t_gl.viewport( _viewportX, _viewportY, _viewportWidth, _viewportHeight );\r\n\r\n\t\tglClearColor( _clearColor.r, _clearColor.g, _clearColor.b, _clearAlpha );\r\n\r\n\t}\r\n\r\n\tfunction resetGLState() {\r\n\r\n\t\t_currentProgram = null;\r\n\t\t_currentCamera = null;\r\n\r\n\t\t_currentGeometryProgram = '';\r\n\t\t_currentMaterialId = - 1;\r\n\r\n\t\t_lightsNeedUpdate = true;\r\n\r\n\t\tstate.reset();\r\n\r\n\t}\r\n\r\n\tsetDefaultGLState();\r\n\r\n\tthis.context = _gl;\r\n\tthis.capabilities = capabilities;\r\n\tthis.extensions = extensions;\r\n\tthis.state = state;\r\n\r\n\t// shadow map\r\n\r\n\tvar shadowMap = new THREE.WebGLShadowMap( this, lights, objects );\r\n\r\n\tthis.shadowMap = shadowMap;\r\n\r\n\r\n\t// Plugins\r\n\r\n\tvar spritePlugin = new THREE.SpritePlugin( this, sprites );\r\n\tvar lensFlarePlugin = new THREE.LensFlarePlugin( this, lensFlares );\r\n\r\n\t// API\r\n\r\n\tthis.getContext = function () {\r\n\r\n\t\treturn _gl;\r\n\r\n\t};\r\n\r\n\tthis.getContextAttributes = function () {\r\n\r\n\t\treturn _gl.getContextAttributes();\r\n\r\n\t};\r\n\r\n\tthis.forceContextLoss = function () {\r\n\r\n\t\textensions.get( 'WEBGL_lose_context' ).loseContext();\r\n\r\n\t};\r\n\r\n\tthis.getMaxAnisotropy = ( function () {\r\n\r\n\t\tvar value;\r\n\r\n\t\treturn function getMaxAnisotropy() {\r\n\r\n\t\t\tif ( value !== undefined ) return value;\r\n\r\n\t\t\tvar extension = extensions.get( 'EXT_texture_filter_anisotropic' );\r\n\r\n\t\t\tif ( extension !== null ) {\r\n\r\n\t\t\t\tvalue = _gl.getParameter( extension.MAX_TEXTURE_MAX_ANISOTROPY_EXT );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tvalue = 0;\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn value;\r\n\r\n\t\t}\r\n\r\n\t} )();\r\n\r\n\tthis.getPrecision = function () {\r\n\r\n\t\treturn capabilities.precision;\r\n\r\n\t};\r\n\r\n\tthis.getPixelRatio = function () {\r\n\r\n\t\treturn pixelRatio;\r\n\r\n\t};\r\n\r\n\tthis.setPixelRatio = function ( value ) {\r\n\r\n\t\tif ( value !== undefined ) pixelRatio = value;\r\n\r\n\t};\r\n\r\n\tthis.getSize = function () {\r\n\r\n\t\treturn {\r\n\t\t\twidth: _width,\r\n\t\t\theight: _height\r\n\t\t};\r\n\r\n\t};\r\n\r\n\tthis.setSize = function ( width, height, updateStyle ) {\r\n\r\n\t\t_width = width;\r\n\t\t_height = height;\r\n\r\n\t\t_canvas.width = width * pixelRatio;\r\n\t\t_canvas.height = height * pixelRatio;\r\n\r\n\t\tif ( updateStyle !== false ) {\r\n\r\n\t\t\t_canvas.style.width = width + 'px';\r\n\t\t\t_canvas.style.height = height + 'px';\r\n\r\n\t\t}\r\n\r\n\t\tthis.setViewport( 0, 0, width, height );\r\n\r\n\t};\r\n\r\n\tthis.setViewport = function ( x, y, width, height ) {\r\n\r\n\t\t_viewportX = x * pixelRatio;\r\n\t\t_viewportY = y * pixelRatio;\r\n\r\n\t\t_viewportWidth = width * pixelRatio;\r\n\t\t_viewportHeight = height * pixelRatio;\r\n\r\n\t\t_gl.viewport( _viewportX, _viewportY, _viewportWidth, _viewportHeight );\r\n\r\n\t};\r\n\r\n\tthis.setScissor = function ( x, y, width, height ) {\r\n\r\n\t\t_gl.scissor(\r\n\t\t\tx * pixelRatio,\r\n\t\t\ty * pixelRatio,\r\n\t\t\twidth * pixelRatio,\r\n\t\t\theight * pixelRatio\r\n\t\t);\r\n\r\n\t};\r\n\r\n\tthis.enableScissorTest = function ( boolean ) {\r\n\r\n\t\tstate.setScissorTest( boolean );\r\n\r\n\t};\r\n\r\n\t// Clearing\r\n\r\n\tthis.getClearColor = function () {\r\n\r\n\t\treturn _clearColor;\r\n\r\n\t};\r\n\r\n\tthis.setClearColor = function ( color, alpha ) {\r\n\r\n\t\t_clearColor.set( color );\r\n\r\n\t\t_clearAlpha = alpha !== undefined ? alpha : 1;\r\n\r\n\t\tglClearColor( _clearColor.r, _clearColor.g, _clearColor.b, _clearAlpha );\r\n\r\n\t};\r\n\r\n\tthis.getClearAlpha = function () {\r\n\r\n\t\treturn _clearAlpha;\r\n\r\n\t};\r\n\r\n\tthis.setClearAlpha = function ( alpha ) {\r\n\r\n\t\t_clearAlpha = alpha;\r\n\r\n\t\tglClearColor( _clearColor.r, _clearColor.g, _clearColor.b, _clearAlpha );\r\n\r\n\t};\r\n\r\n\tthis.clear = function ( color, depth, stencil ) {\r\n\r\n\t\tvar bits = 0;\r\n\r\n\t\tif ( color === undefined || color ) bits |= _gl.COLOR_BUFFER_BIT;\r\n\t\tif ( depth === undefined || depth ) bits |= _gl.DEPTH_BUFFER_BIT;\r\n\t\tif ( stencil === undefined || stencil ) bits |= _gl.STENCIL_BUFFER_BIT;\r\n\r\n\t\t_gl.clear( bits );\r\n\r\n\t};\r\n\r\n\tthis.clearColor = function () {\r\n\r\n\t\t_gl.clear( _gl.COLOR_BUFFER_BIT );\r\n\r\n\t};\r\n\r\n\tthis.clearDepth = function () {\r\n\r\n\t\t_gl.clear( _gl.DEPTH_BUFFER_BIT );\r\n\r\n\t};\r\n\r\n\tthis.clearStencil = function () {\r\n\r\n\t\t_gl.clear( _gl.STENCIL_BUFFER_BIT );\r\n\r\n\t};\r\n\r\n\tthis.clearTarget = function ( renderTarget, color, depth, stencil ) {\r\n\r\n\t\tthis.setRenderTarget( renderTarget );\r\n\t\tthis.clear( color, depth, stencil );\r\n\r\n\t};\r\n\r\n\t// Reset\r\n\r\n\tthis.resetGLState = resetGLState;\r\n\r\n\tthis.dispose = function() {\r\n\r\n\t\t_canvas.removeEventListener( 'webglcontextlost', onContextLost, false );\r\n\r\n\t};\r\n\r\n\t// Events\r\n\r\n\tfunction onContextLost( event ) {\r\n\r\n\t\tevent.preventDefault();\r\n\r\n\t\tresetGLState();\r\n\t\tsetDefaultGLState();\r\n\r\n\t\tproperties.clear();\r\n\r\n\t};\r\n\r\n\tfunction onTextureDispose( event ) {\r\n\r\n\t\tvar texture = event.target;\r\n\r\n\t\ttexture.removeEventListener( 'dispose', onTextureDispose );\r\n\r\n\t\tdeallocateTexture( texture );\r\n\r\n\t\t_infoMemory.textures --;\r\n\r\n\r\n\t}\r\n\r\n\tfunction onRenderTargetDispose( event ) {\r\n\r\n\t\tvar renderTarget = event.target;\r\n\r\n\t\trenderTarget.removeEventListener( 'dispose', onRenderTargetDispose );\r\n\r\n\t\tdeallocateRenderTarget( renderTarget );\r\n\r\n\t\t_infoMemory.textures --;\r\n\r\n\t}\r\n\r\n\tfunction onMaterialDispose( event ) {\r\n\r\n\t\tvar material = event.target;\r\n\r\n\t\tmaterial.removeEventListener( 'dispose', onMaterialDispose );\r\n\r\n\t\tdeallocateMaterial( material );\r\n\r\n\t}\r\n\r\n\t// Buffer deallocation\r\n\r\n\tfunction deallocateTexture( texture ) {\r\n\r\n\t\tvar textureProperties = properties.get( texture );\r\n\r\n\t\tif ( texture.image && textureProperties.__image__webglTextureCube ) {\r\n\r\n\t\t\t// cube texture\r\n\r\n\t\t\t_gl.deleteTexture( textureProperties.__image__webglTextureCube );\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// 2D texture\r\n\r\n\t\t\tif ( textureProperties.__webglInit === undefined ) return;\r\n\r\n\t\t\t_gl.deleteTexture( textureProperties.__webglTexture );\r\n\r\n\t\t}\r\n\r\n\t\t// remove all webgl properties\r\n\t\tproperties.delete( texture );\r\n\r\n\t}\r\n\r\n\tfunction deallocateRenderTarget( renderTarget ) {\r\n\r\n\t\tvar renderTargetProperties = properties.get( renderTarget );\r\n\r\n\t\tif ( ! renderTarget || renderTargetProperties.__webglTexture === undefined ) return;\r\n\r\n\t\t_gl.deleteTexture( renderTargetProperties.__webglTexture );\r\n\r\n\t\tif ( renderTarget instanceof THREE.WebGLRenderTargetCube ) {\r\n\r\n\t\t\tfor ( var i = 0; i < 6; i ++ ) {\r\n\r\n\t\t\t\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer[ i ] );\r\n\t\t\t\t_gl.deleteRenderbuffer( renderTargetProperties.__webglRenderbuffer[ i ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer );\r\n\t\t\t_gl.deleteRenderbuffer( renderTargetProperties.__webglRenderbuffer );\r\n\r\n\t\t}\r\n\r\n\t\tproperties.delete( renderTarget );\r\n\r\n\t}\r\n\r\n\tfunction deallocateMaterial( material ) {\r\n\r\n\t\treleaseMaterialProgramReference( material );\r\n\r\n\t\tproperties.delete( material );\r\n\r\n\t}\r\n\r\n\r\n\tfunction releaseMaterialProgramReference( material ) {\r\n\r\n\t\tvar programInfo = properties.get( material ).program;\r\n\r\n\t\tmaterial.program = undefined;\r\n\r\n\t\tif ( programInfo !== undefined ) {\r\n\r\n\t\t\tprogramCache.releaseProgram( programInfo );\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// Buffer rendering\r\n\r\n\tthis.renderBufferImmediate = function ( object, program, material ) {\r\n\r\n\t\tstate.initAttributes();\r\n\r\n\t\tvar buffers = properties.get( object );\r\n\r\n\t\tif ( object.hasPositions && ! buffers.position ) buffers.position = _gl.createBuffer();\r\n\t\tif ( object.hasNormals && ! buffers.normal ) buffers.normal = _gl.createBuffer();\r\n\t\tif ( object.hasUvs && ! buffers.uv ) buffers.uv = _gl.createBuffer();\r\n\t\tif ( object.hasColors && ! buffers.color ) buffers.color = _gl.createBuffer();\r\n\r\n\t\tvar attributes = program.getAttributes();\r\n\r\n\t\tif ( object.hasPositions ) {\r\n\r\n\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffers.position );\r\n\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, object.positionArray, _gl.DYNAMIC_DRAW );\r\n\r\n\t\t\tstate.enableAttribute( attributes.position );\r\n\t\t\t_gl.vertexAttribPointer( attributes.position, 3, _gl.FLOAT, false, 0, 0 );\r\n\r\n\t\t}\r\n\r\n\t\tif ( object.hasNormals ) {\r\n\r\n\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffers.normal );\r\n\r\n\t\t\tif ( material.type !== 'MeshPhongMaterial' && material.shading === THREE.FlatShading ) {\r\n\r\n\t\t\t\tfor ( var i = 0, l = object.count * 3; i < l; i += 9 ) {\r\n\r\n\t\t\t\t\tvar array = object.normalArray;\r\n\r\n\t\t\t\t\tvar nx = ( array[ i + 0 ] + array[ i + 3 ] + array[ i + 6 ] ) / 3;\r\n\t\t\t\t\tvar ny = ( array[ i + 1 ] + array[ i + 4 ] + array[ i + 7 ] ) / 3;\r\n\t\t\t\t\tvar nz = ( array[ i + 2 ] + array[ i + 5 ] + array[ i + 8 ] ) / 3;\r\n\r\n\t\t\t\t\tarray[ i + 0 ] = nx;\r\n\t\t\t\t\tarray[ i + 1 ] = ny;\r\n\t\t\t\t\tarray[ i + 2 ] = nz;\r\n\r\n\t\t\t\t\tarray[ i + 3 ] = nx;\r\n\t\t\t\t\tarray[ i + 4 ] = ny;\r\n\t\t\t\t\tarray[ i + 5 ] = nz;\r\n\r\n\t\t\t\t\tarray[ i + 6 ] = nx;\r\n\t\t\t\t\tarray[ i + 7 ] = ny;\r\n\t\t\t\t\tarray[ i + 8 ] = nz;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, object.normalArray, _gl.DYNAMIC_DRAW );\r\n\r\n\t\t\tstate.enableAttribute( attributes.normal );\r\n\r\n\t\t\t_gl.vertexAttribPointer( attributes.normal, 3, _gl.FLOAT, false, 0, 0 );\r\n\r\n\t\t}\r\n\r\n\t\tif ( object.hasUvs && material.map ) {\r\n\r\n\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffers.uv );\r\n\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, object.uvArray, _gl.DYNAMIC_DRAW );\r\n\r\n\t\t\tstate.enableAttribute( attributes.uv );\r\n\r\n\t\t\t_gl.vertexAttribPointer( attributes.uv, 2, _gl.FLOAT, false, 0, 0 );\r\n\r\n\t\t}\r\n\r\n\t\tif ( object.hasColors && material.vertexColors !== THREE.NoColors ) {\r\n\r\n\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffers.color );\r\n\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, object.colorArray, _gl.DYNAMIC_DRAW );\r\n\r\n\t\t\tstate.enableAttribute( attributes.color );\r\n\r\n\t\t\t_gl.vertexAttribPointer( attributes.color, 3, _gl.FLOAT, false, 0, 0 );\r\n\r\n\t\t}\r\n\r\n\t\tstate.disableUnusedAttributes();\r\n\r\n\t\t_gl.drawArrays( _gl.TRIANGLES, 0, object.count );\r\n\r\n\t\tobject.count = 0;\r\n\r\n\t};\r\n\r\n\tthis.renderBufferDirect = function ( camera, lights, fog, geometry, material, object, group ) {\r\n\r\n\t\tsetMaterial( material );\r\n\r\n\t\tvar program = setProgram( camera, lights, fog, material, object );\r\n\r\n\t\tvar updateBuffers = false;\r\n\t\tvar geometryProgram = geometry.id + '_' + program.id + '_' + material.wireframe;\r\n\r\n\t\tif ( geometryProgram !== _currentGeometryProgram ) {\r\n\r\n\t\t\t_currentGeometryProgram = geometryProgram;\r\n\t\t\tupdateBuffers = true;\r\n\r\n\t\t}\r\n\r\n\t\t// morph targets\r\n\r\n\t\tvar morphTargetInfluences = object.morphTargetInfluences;\r\n\r\n\t\tif ( morphTargetInfluences !== undefined ) {\r\n\r\n\t\t\tvar activeInfluences = [];\r\n\r\n\t\t\tfor ( var i = 0, l = morphTargetInfluences.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tvar influence = morphTargetInfluences[ i ];\r\n\t\t\t\tactiveInfluences.push( [ influence, i ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tactiveInfluences.sort( numericalSort );\r\n\r\n\t\t\tif ( activeInfluences.length > 8 ) {\r\n\r\n\t\t\t\tactiveInfluences.length = 8;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar morphAttributes = geometry.morphAttributes;\r\n\r\n\t\t\tfor ( var i = 0, l = activeInfluences.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tvar influence = activeInfluences[ i ];\r\n\t\t\t\tmorphInfluences[ i ] = influence[ 0 ];\r\n\r\n\t\t\t\tif ( influence[ 0 ] !== 0 ) {\r\n\r\n\t\t\t\t\tvar index = influence[ 1 ];\r\n\r\n\t\t\t\t\tif ( material.morphTargets === true && morphAttributes.position ) geometry.addAttribute( 'morphTarget' + i, morphAttributes.position[ index ] );\r\n\t\t\t\t\tif ( material.morphNormals === true && morphAttributes.normal ) geometry.addAttribute( 'morphNormal' + i, morphAttributes.normal[ index ] );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tif ( material.morphTargets === true ) geometry.removeAttribute( 'morphTarget' + i );\r\n\t\t\t\t\tif ( material.morphNormals === true ) geometry.removeAttribute( 'morphNormal' + i );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar uniforms = program.getUniforms();\r\n\r\n\t\t\tif ( uniforms.morphTargetInfluences !== null ) {\r\n\r\n\t\t\t\t_gl.uniform1fv( uniforms.morphTargetInfluences, morphInfluences );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tupdateBuffers = true;\r\n\r\n\t\t}\r\n\r\n\t\t//\r\n\r\n\t\tvar index = geometry.index;\r\n\t\tvar position = geometry.attributes.position;\r\n\r\n\t\tif ( material.wireframe === true ) {\r\n\r\n\t\t\tindex = objects.getWireframeAttribute( geometry );\r\n\r\n\t\t}\r\n\r\n\t\tvar renderer;\r\n\r\n\t\tif ( index !== null ) {\r\n\r\n\t\t\trenderer = indexedBufferRenderer;\r\n\t\t\trenderer.setIndex( index );\r\n\r\n\t\t} else {\r\n\r\n\t\t\trenderer = bufferRenderer;\r\n\r\n\t\t}\r\n\r\n\t\tif ( updateBuffers ) {\r\n\r\n\t\t\tsetupVertexAttributes( material, program, geometry );\r\n\r\n\t\t\tif ( index !== null ) {\r\n\r\n\t\t\t\t_gl.bindBuffer( _gl.ELEMENT_ARRAY_BUFFER, objects.getAttributeBuffer( index ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( group === undefined ) {\r\n\r\n\t\t\tvar count;\r\n\r\n\t\t\tif ( index !== null ) {\r\n\r\n\t\t\t\tcount = index.count;\r\n\r\n\t\t\t} else if ( position instanceof THREE.InterleavedBufferAttribute ) {\r\n\r\n\t\t\t\tcount = position.data.array.length / 3;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tcount = position.count;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar drawRange = geometry.drawRange;\r\n\r\n\t\t\tgroup = {\r\n\t\t\t\tstart: drawRange.start,\r\n\t\t\t\tcount: Math.min( drawRange.count, count )\r\n\t\t\t};\r\n\r\n\t\t}\r\n\r\n\t\tif ( object instanceof THREE.Mesh ) {\r\n\r\n\t\t\tif ( material.wireframe === true ) {\r\n\r\n\t\t\t\tstate.setLineWidth( material.wireframeLinewidth * pixelRatio );\r\n\t\t\t\trenderer.setMode( _gl.LINES );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\trenderer.setMode( _gl.TRIANGLES );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( geometry instanceof THREE.InstancedBufferGeometry && geometry.maxInstancedCount > 0 ) {\r\n\r\n\t\t\t\trenderer.renderInstances( geometry );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\trenderer.render( group.start, group.count );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( object instanceof THREE.Line ) {\r\n\r\n\t\t\tvar lineWidth = material.linewidth;\r\n\r\n\t\t\tif ( lineWidth === undefined ) lineWidth = 1; // Not using Line*Material\r\n\r\n\t\t\tstate.setLineWidth( lineWidth * pixelRatio );\r\n\r\n\t\t\tif ( object instanceof THREE.LineSegments ) {\r\n\r\n\t\t\t\trenderer.setMode( _gl.LINES );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\trenderer.setMode( _gl.LINE_STRIP );\r\n\r\n\t\t\t}\r\n\r\n\t\t\trenderer.render( group.start, group.count );\r\n\r\n\t\t} else if ( object instanceof THREE.Points ) {\r\n\r\n\t\t\trenderer.setMode( _gl.POINTS );\r\n\t\t\trenderer.render( group.start, group.count );\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tfunction setupVertexAttributes( material, program, geometry, startIndex ) {\r\n\r\n\t\tvar extension;\r\n\r\n\t\tif ( geometry instanceof THREE.InstancedBufferGeometry ) {\r\n\r\n\t\t\textension = extensions.get( 'ANGLE_instanced_arrays' );\r\n\r\n\t\t\tif ( extension === null ) {\r\n\r\n\t\t\t\tconsole.error( 'THREE.WebGLRenderer.setupVertexAttributes: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\r\n\t\t\t\treturn;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( startIndex === undefined ) startIndex = 0;\r\n\r\n\t\tstate.initAttributes();\r\n\r\n\t\tvar geometryAttributes = geometry.attributes;\r\n\r\n\t\tvar programAttributes = program.getAttributes();\r\n\r\n\t\tvar materialDefaultAttributeValues = material.defaultAttributeValues;\r\n\r\n\t\tfor ( var name in programAttributes ) {\r\n\r\n\t\t\tvar programAttribute = programAttributes[ name ];\r\n\r\n\t\t\tif ( programAttribute >= 0 ) {\r\n\r\n\t\t\t\tvar geometryAttribute = geometryAttributes[ name ];\r\n\r\n\t\t\t\tif ( geometryAttribute !== undefined ) {\r\n\r\n\t\t\t\t\tstate.enableAttribute( programAttribute );\r\n\r\n\t\t\t\t\tvar size = geometryAttribute.itemSize;\r\n\t\t\t\t\tvar buffer = objects.getAttributeBuffer( geometryAttribute );\r\n\r\n\t\t\t\t\tif ( geometryAttribute instanceof THREE.InterleavedBufferAttribute ) {\r\n\r\n\t\t\t\t\t\tvar data = geometryAttribute.data;\r\n\t\t\t\t\t\tvar stride = data.stride;\r\n\t\t\t\t\t\tvar offset = geometryAttribute.offset;\r\n\r\n\t\t\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffer );\r\n\t\t\t\t\t\t_gl.vertexAttribPointer( programAttribute, size, _gl.FLOAT, false, stride * data.array.BYTES_PER_ELEMENT, ( startIndex * stride + offset ) * data.array.BYTES_PER_ELEMENT );\r\n\r\n\t\t\t\t\t\tif ( data instanceof THREE.InstancedInterleavedBuffer ) {\r\n\r\n\t\t\t\t\t\t\tif ( extension === null ) {\r\n\r\n\t\t\t\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.setupVertexAttributes: using THREE.InstancedBufferAttribute but hardware does not support extension ANGLE_instanced_arrays.' );\r\n\t\t\t\t\t\t\t\treturn;\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\textension.vertexAttribDivisorANGLE( programAttribute, data.meshPerAttribute );\r\n\r\n\t\t\t\t\t\t\tif ( geometry.maxInstancedCount === undefined ) {\r\n\r\n\t\t\t\t\t\t\t\tgeometry.maxInstancedCount = data.meshPerAttribute * data.count;\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffer );\r\n\t\t\t\t\t\t_gl.vertexAttribPointer( programAttribute, size, _gl.FLOAT, false, 0, startIndex * size * 4 ); // 4 bytes per Float32\r\n\r\n\t\t\t\t\t\tif ( geometryAttribute instanceof THREE.InstancedBufferAttribute ) {\r\n\r\n\t\t\t\t\t\t\tif ( extension === null ) {\r\n\r\n\t\t\t\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.setupVertexAttributes: using THREE.InstancedBufferAttribute but hardware does not support extension ANGLE_instanced_arrays.' );\r\n\t\t\t\t\t\t\t\treturn;\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\textension.vertexAttribDivisorANGLE( programAttribute, geometryAttribute.meshPerAttribute );\r\n\r\n\t\t\t\t\t\t\tif ( geometry.maxInstancedCount === undefined ) {\r\n\r\n\t\t\t\t\t\t\t\tgeometry.maxInstancedCount = geometryAttribute.meshPerAttribute * geometryAttribute.count;\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else if ( materialDefaultAttributeValues !== undefined ) {\r\n\r\n\t\t\t\t\tvar value = materialDefaultAttributeValues[ name ];\r\n\r\n\t\t\t\t\tif ( value !== undefined ) {\r\n\r\n\t\t\t\t\t\tswitch ( value.length ) {\r\n\r\n\t\t\t\t\t\t\tcase 2:\r\n\t\t\t\t\t\t\t\t_gl.vertexAttrib2fv( programAttribute, value );\r\n\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\tcase 3:\r\n\t\t\t\t\t\t\t\t_gl.vertexAttrib3fv( programAttribute, value );\r\n\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\tcase 4:\r\n\t\t\t\t\t\t\t\t_gl.vertexAttrib4fv( programAttribute, value );\r\n\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\t\t_gl.vertexAttrib1fv( programAttribute, value );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tstate.disableUnusedAttributes();\r\n\r\n\t}\r\n\r\n\t// Sorting\r\n\r\n\tfunction numericalSort ( a, b ) {\r\n\r\n\t\treturn b[ 0 ] - a[ 0 ];\r\n\r\n\t}\r\n\r\n\tfunction painterSortStable ( a, b ) {\r\n\r\n\t\tif ( a.object.renderOrder !== b.object.renderOrder ) {\r\n\r\n\t\t\treturn a.object.renderOrder - b.object.renderOrder;\r\n\r\n\t\t} else if ( a.material.id !== b.material.id ) {\r\n\r\n\t\t\treturn a.material.id - b.material.id;\r\n\r\n\t\t} else if ( a.z !== b.z ) {\r\n\r\n\t\t\treturn a.z - b.z;\r\n\r\n\t\t} else {\r\n\r\n\t\t\treturn a.id - b.id;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction reversePainterSortStable ( a, b ) {\r\n\r\n\t\tif ( a.object.renderOrder !== b.object.renderOrder ) {\r\n\r\n\t\t\treturn a.object.renderOrder - b.object.renderOrder;\r\n\r\n\t\t} if ( a.z !== b.z ) {\r\n\r\n\t\t\treturn b.z - a.z;\r\n\r\n\t\t} else {\r\n\r\n\t\t\treturn a.id - b.id;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// Rendering\r\n\r\n\tthis.render = function ( scene, camera, renderTarget, forceClear ) {\r\n\r\n\t\tif ( camera instanceof THREE.Camera === false ) {\r\n\r\n\t\t\tconsole.error( 'THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.' );\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tvar fog = scene.fog;\r\n\r\n\t\t// reset caching for this frame\r\n\r\n\t\t_currentGeometryProgram = '';\r\n\t\t_currentMaterialId = - 1;\r\n\t\t_currentCamera = null;\r\n\t\t_lightsNeedUpdate = true;\r\n\r\n\t\t// update scene graph\r\n\r\n\t\tif ( scene.autoUpdate === true ) scene.updateMatrixWorld();\r\n\r\n\t\t// update camera matrices and frustum\r\n\r\n\t\tif ( camera.parent === null ) camera.updateMatrixWorld();\r\n\r\n\t\tcamera.matrixWorldInverse.getInverse( camera.matrixWorld );\r\n\r\n\t\t_projScreenMatrix.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse );\r\n\t\t_frustum.setFromMatrix( _projScreenMatrix );\r\n\r\n\t\tlights.length = 0;\r\n\r\n\t\topaqueObjectsLastIndex = -1;\r\n\t\ttransparentObjectsLastIndex = -1;\r\n\r\n\t\topaqueImmediateObjectsLastIndex = -1;\r\n\t\ttransparentImmediateObjectsLastIndex = -1;\r\n\r\n\t\tsprites.length = 0;\r\n\t\tlensFlares.length = 0;\r\n\r\n\t\tprojectObject( scene );\r\n\r\n\t\topaqueObjects.length = opaqueObjectsLastIndex + 1;\r\n\t\ttransparentObjects.length = transparentObjectsLastIndex + 1;\r\n\r\n\t\topaqueImmediateObjects.length = opaqueImmediateObjectsLastIndex + 1;\r\n\t\ttransparentImmediateObjects.length = transparentImmediateObjectsLastIndex + 1;\r\n\r\n\t\tif ( _this.sortObjects === true ) {\r\n\r\n\t\t\topaqueObjects.sort( painterSortStable );\r\n\t\t\ttransparentObjects.sort( reversePainterSortStable );\r\n\r\n\t\t}\r\n\r\n\t\t//\r\n\r\n\t\tshadowMap.render( scene, camera );\r\n\r\n\t\t//\r\n\r\n\t\t_infoRender.calls = 0;\r\n\t\t_infoRender.vertices = 0;\r\n\t\t_infoRender.faces = 0;\r\n\t\t_infoRender.points = 0;\r\n\r\n\t\tthis.setRenderTarget( renderTarget );\r\n\r\n\t\tif ( this.autoClear || forceClear ) {\r\n\r\n\t\t\tthis.clear( this.autoClearColor, this.autoClearDepth, this.autoClearStencil );\r\n\r\n\t\t}\r\n\r\n\t\t//\r\n\r\n\t\tif ( scene.overrideMaterial ) {\r\n\r\n\t\t\tvar overrideMaterial = scene.overrideMaterial;\r\n\r\n\t\t\trenderObjects( opaqueObjects, camera, lights, fog, overrideMaterial );\r\n\t\t\trenderObjects( transparentObjects, camera, lights, fog, overrideMaterial );\r\n\r\n\t\t\trenderObjectsImmediate( opaqueImmediateObjects, camera, lights, fog, overrideMaterial );\r\n\t\t\trenderObjectsImmediate( transparentImmediateObjects, camera, lights, fog, overrideMaterial );\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// opaque pass (front-to-back order)\r\n\r\n\t\t\tstate.setBlending( THREE.NoBlending );\r\n\r\n\t\t\trenderObjects( opaqueObjects, camera, lights, fog );\r\n\t\t\trenderObjectsImmediate( opaqueImmediateObjects, camera, lights, fog );\r\n\r\n\t\t\t// transparent pass (back-to-front order)\r\n\r\n\t\t\trenderObjects( transparentObjects, camera, lights, fog );\r\n\t\t\trenderObjectsImmediate( transparentImmediateObjects, camera, lights, fog );\r\n\r\n\t\t}\r\n\r\n\t\t// custom render plugins (post pass)\r\n\r\n\t\tspritePlugin.render( scene, camera );\r\n\t\tlensFlarePlugin.render( scene, camera, _currentWidth, _currentHeight );\r\n\r\n\t\t// Generate mipmap if we're using any kind of mipmap filtering\r\n\r\n\t\tif ( renderTarget && renderTarget.generateMipmaps && renderTarget.minFilter !== THREE.NearestFilter && renderTarget.minFilter !== THREE.LinearFilter ) {\r\n\r\n\t\t\tupdateRenderTargetMipmap( renderTarget );\r\n\r\n\t\t}\r\n\r\n\t\t// Ensure depth buffer writing is enabled so it can be cleared on next render\r\n\r\n\t\tstate.setDepthTest( true );\r\n\t\tstate.setDepthWrite( true );\r\n\t\tstate.setColorWrite( true );\r\n\r\n\t\t// _gl.finish();\r\n\r\n\t};\r\n\r\n\tfunction pushImmediateRenderItem( object ) {\r\n\r\n\t\tvar array, index;\r\n\r\n\t\t// allocate the next position in the appropriate array\r\n\r\n\t\tif ( object.material.transparent ) {\r\n\r\n\t\t\tarray = transparentImmediateObjects;\r\n\t\t\tindex = ++ transparentImmediateObjectsLastIndex;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tarray = opaqueImmediateObjects;\r\n\t\t\tindex = ++ opaqueImmediateObjectsLastIndex;\r\n\r\n\t\t}\r\n\r\n\t\t// recycle existing position or grow the array\r\n\r\n\t\tif ( index < array.length ) {\r\n\r\n\t\t\tarray[ index ] = object;\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// assert( index === array.length );\r\n\t\t\tarray.push( object );\r\n\r\n\t\t}\r\n\r\n\r\n\t}\r\n\r\n\tfunction pushRenderItem( object, geometry, material, z, group ) {\r\n\r\n\t\tvar array, index;\r\n\r\n\t\t// allocate the next position in the appropriate array\r\n\r\n\t\tif ( material.transparent ) {\r\n\r\n\t\t\tarray = transparentObjects;\r\n\t\t\tindex = ++ transparentObjectsLastIndex;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tarray = opaqueObjects;\r\n\t\t\tindex = ++ opaqueObjectsLastIndex;\r\n\r\n\t\t}\r\n\r\n\t\t// recycle existing render item or grow the array\r\n\r\n\t\tvar renderItem = array[ index ];\r\n\r\n\t\tif ( renderItem !== undefined ) {\r\n\r\n\t\t\trenderItem.id = object.id;\r\n\t\t\trenderItem.object = object;\r\n\t\t\trenderItem.geometry = geometry;\r\n\t\t\trenderItem.material = material;\r\n\t\t\trenderItem.z = _vector3.z;\r\n\t\t\trenderItem.group = group;\r\n\r\n\t\t} else {\r\n\r\n\t\t\trenderItem = {\r\n\t\t\t\tid: object.id,\r\n\t\t\t\tobject: object,\r\n\t\t\t\tgeometry: geometry,\r\n\t\t\t\tmaterial: material,\r\n\t\t\t\tz: _vector3.z,\r\n\t\t\t\tgroup: group\r\n\t\t\t};\r\n\r\n\t\t\t// assert( index === array.length );\r\n\t\t\tarray.push( renderItem );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction projectObject( object ) {\r\n\r\n\t\tif ( object.visible === false ) return;\r\n\r\n\t\tif ( object instanceof THREE.Light ) {\r\n\r\n\t\t\tlights.push( object );\r\n\r\n\t\t} else if ( object instanceof THREE.Sprite ) {\r\n\r\n\t\t\tsprites.push( object );\r\n\r\n\t\t} else if ( object instanceof THREE.LensFlare ) {\r\n\r\n\t\t\tlensFlares.push( object );\r\n\r\n\t\t} else if ( object instanceof THREE.ImmediateRenderObject ) {\r\n\r\n\t\t\tpushImmediateRenderItem( object );\r\n\r\n\t\t} else if ( object instanceof THREE.Mesh || object instanceof THREE.Line || object instanceof THREE.Points ) {\r\n\r\n\t\t\tif ( object instanceof THREE.SkinnedMesh ) {\r\n\r\n\t\t\t\tobject.skeleton.update();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( object.frustumCulled === false || _frustum.intersectsObject( object ) === true ) {\r\n\r\n\t\t\t\tvar material = object.material;\r\n\r\n\t\t\t\tif ( material.visible === true ) {\r\n\r\n\t\t\t\t\tif ( _this.sortObjects === true ) {\r\n\r\n\t\t\t\t\t\t_vector3.setFromMatrixPosition( object.matrixWorld );\r\n\t\t\t\t\t\t_vector3.applyProjection( _projScreenMatrix );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tvar geometry = objects.update( object );\r\n\r\n\t\t\t\t\tif ( material instanceof THREE.MeshFaceMaterial ) {\r\n\r\n\t\t\t\t\t\tvar groups = geometry.groups;\r\n\t\t\t\t\t\tvar materials = material.materials;\r\n\r\n\t\t\t\t\t\tfor ( var i = 0, l = groups.length; i < l; i ++ ) {\r\n\r\n\t\t\t\t\t\t\tvar group = groups[ i ];\r\n\t\t\t\t\t\t\tvar groupMaterial = materials[ group.materialIndex ];\r\n\r\n\t\t\t\t\t\t\tif ( groupMaterial.visible === true ) {\r\n\r\n\t\t\t\t\t\t\t\tpushRenderItem( object, geometry, groupMaterial, _vector3.z, group );\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tpushRenderItem( object, geometry, material, _vector3.z );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tvar children = object.children;\r\n\r\n\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\r\n\r\n\t\t\tprojectObject( children[ i ] );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction renderObjects( renderList, camera, lights, fog, overrideMaterial ) {\r\n\r\n\t\tfor ( var i = 0, l = renderList.length; i < l; i ++ ) {\r\n\r\n\t\t\tvar renderItem = renderList[ i ];\r\n\r\n\t\t\tvar object = renderItem.object;\r\n\t\t\tvar geometry = renderItem.geometry;\r\n\t\t\tvar material = overrideMaterial === undefined ? renderItem.material : overrideMaterial;\r\n\t\t\tvar group = renderItem.group;\r\n\r\n\t\t\tobject.modelViewMatrix.multiplyMatrices( camera.matrixWorldInverse, object.matrixWorld );\r\n\t\t\tobject.normalMatrix.getNormalMatrix( object.modelViewMatrix );\r\n\r\n\t\t\t_this.renderBufferDirect( camera, lights, fog, geometry, material, object, group );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction renderObjectsImmediate( renderList, camera, lights, fog, overrideMaterial ) {\r\n\r\n\t\tvar material = overrideMaterial;\r\n\r\n\t\tfor ( var i = 0, l = renderList.length; i < l; i ++ ) {\r\n\r\n\t\t\tvar object = renderList[ i ];\r\n\r\n\t\t\tobject.modelViewMatrix.multiplyMatrices( camera.matrixWorldInverse, object.matrixWorld );\r\n\t\t\tobject.normalMatrix.getNormalMatrix( object.modelViewMatrix );\r\n\r\n\t\t\tif ( overrideMaterial === undefined ) material = object.material;\r\n\r\n\t\t\tsetMaterial( material );\r\n\r\n\t\t\tvar program = setProgram( camera, lights, fog, material, object );\r\n\r\n\t\t\t_currentGeometryProgram = '';\r\n\r\n\t\t\tobject.render( function ( object ) {\r\n\r\n\t\t\t\t_this.renderBufferImmediate( object, program, material );\r\n\r\n\t\t\t} );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction initMaterial( material, lights, fog, object ) {\r\n\r\n\t\tvar materialProperties = properties.get( material );\r\n\r\n\t\tvar parameters = programCache.getParameters( material, lights, fog, object );\r\n\t\tvar code = programCache.getProgramCode( material, parameters );\r\n\r\n\t\tvar program = materialProperties.program;\r\n\t\tvar programChange = true;\r\n\r\n\t\tif ( program === undefined ) {\r\n\r\n\t\t\t// new material\r\n\t\t\tmaterial.addEventListener( 'dispose', onMaterialDispose );\r\n\r\n\t\t} else if ( program.code !== code ) {\r\n\r\n\t\t\t// changed glsl or parameters\r\n\t\t\treleaseMaterialProgramReference( material );\r\n\r\n\t\t} else if ( parameters.shaderID !== undefined ) {\r\n\r\n\t\t\t// same glsl and uniform list\r\n\t\t\treturn;\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// only rebuild uniform list\r\n\t\t\tprogramChange = false;\r\n\r\n\t\t}\r\n\r\n\t\tif ( programChange ) {\r\n\r\n\t\t\tif ( parameters.shaderID ) {\r\n\r\n\t\t\t\tvar shader = THREE.ShaderLib[ parameters.shaderID ];\r\n\r\n\t\t\t\tmaterialProperties.__webglShader = {\r\n\t\t\t\t\tname: material.type,\r\n\t\t\t\t\tuniforms: THREE.UniformsUtils.clone( shader.uniforms ),\r\n\t\t\t\t\tvertexShader: shader.vertexShader,\r\n\t\t\t\t\tfragmentShader: shader.fragmentShader\r\n\t\t\t\t};\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tmaterialProperties.__webglShader = {\r\n\t\t\t\t\tname: material.type,\r\n\t\t\t\t\tuniforms: material.uniforms,\r\n\t\t\t\t\tvertexShader: material.vertexShader,\r\n\t\t\t\t\tfragmentShader: material.fragmentShader\r\n\t\t\t\t};\r\n\r\n\t\t\t}\r\n\r\n\t\t\tmaterial.__webglShader = materialProperties.__webglShader;\r\n\r\n\t\t\tprogram = programCache.acquireProgram( material, parameters, code );\r\n\r\n\t\t\tmaterialProperties.program = program;\r\n\t\t\tmaterial.program = program;\r\n\r\n\t\t}\r\n\r\n\t\tvar attributes = program.getAttributes();\r\n\r\n\t\tif ( material.morphTargets ) {\r\n\r\n\t\t\tmaterial.numSupportedMorphTargets = 0;\r\n\r\n\t\t\tfor ( var i = 0; i < _this.maxMorphTargets; i ++ ) {\r\n\r\n\t\t\t\tif ( attributes[ 'morphTarget' + i ] >= 0 ) {\r\n\r\n\t\t\t\t\tmaterial.numSupportedMorphTargets ++;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( material.morphNormals ) {\r\n\r\n\t\t\tmaterial.numSupportedMorphNormals = 0;\r\n\r\n\t\t\tfor ( i = 0; i < _this.maxMorphNormals; i ++ ) {\r\n\r\n\t\t\t\tif ( attributes[ 'morphNormal' + i ] >= 0 ) {\r\n\r\n\t\t\t\t\tmaterial.numSupportedMorphNormals ++;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tmaterialProperties.uniformsList = [];\r\n\r\n\t\tvar uniformLocations = materialProperties.program.getUniforms();\r\n\r\n\t\tfor ( var u in materialProperties.__webglShader.uniforms ) {\r\n\r\n\t\t\tvar location = uniformLocations[ u ];\r\n\r\n\t\t\tif ( location ) {\r\n\r\n\t\t\t\tmaterialProperties.uniformsList.push( [ materialProperties.__webglShader.uniforms[ u ], location ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction setMaterial( material ) {\r\n\r\n\t\tsetMaterialFaces( material );\r\n\r\n\t\tif ( material.transparent === true ) {\r\n\r\n\t\t\tstate.setBlending( material.blending, material.blendEquation, material.blendSrc, material.blendDst, material.blendEquationAlpha, material.blendSrcAlpha, material.blendDstAlpha );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tstate.setBlending( THREE.NoBlending );\r\n\r\n\t\t}\r\n\r\n\t\tstate.setDepthFunc( material.depthFunc );\r\n\t\tstate.setDepthTest( material.depthTest );\r\n\t\tstate.setDepthWrite( material.depthWrite );\r\n\t\tstate.setColorWrite( material.colorWrite );\r\n\t\tstate.setPolygonOffset( material.polygonOffset, material.polygonOffsetFactor, material.polygonOffsetUnits );\r\n\r\n\t}\r\n\r\n\tfunction setMaterialFaces( material ) {\r\n\r\n\t\tmaterial.side !== THREE.DoubleSide ? state.enable( _gl.CULL_FACE ) : state.disable( _gl.CULL_FACE );\r\n\t\tstate.setFlipSided( material.side === THREE.BackSide );\r\n\r\n\t}\r\n\r\n\tfunction setProgram( camera, lights, fog, material, object ) {\r\n\r\n\t\t_usedTextureUnits = 0;\r\n\r\n\t\tvar materialProperties = properties.get( material );\r\n\r\n\t\tif ( material.needsUpdate || ! materialProperties.program ) {\r\n\r\n\t\t\tinitMaterial( material, lights, fog, object );\r\n\t\t\tmaterial.needsUpdate = false;\r\n\r\n\t\t}\r\n\r\n\t\tvar refreshProgram = false;\r\n\t\tvar refreshMaterial = false;\r\n\t\tvar refreshLights = false;\r\n\r\n\t\tvar program = materialProperties.program,\r\n\t\t\tp_uniforms = program.getUniforms(),\r\n\t\t\tm_uniforms = materialProperties.__webglShader.uniforms;\r\n\r\n\t\tif ( program.id !== _currentProgram ) {\r\n\r\n\t\t\t_gl.useProgram( program.program );\r\n\t\t\t_currentProgram = program.id;\r\n\r\n\t\t\trefreshProgram = true;\r\n\t\t\trefreshMaterial = true;\r\n\t\t\trefreshLights = true;\r\n\r\n\t\t}\r\n\r\n\t\tif ( material.id !== _currentMaterialId ) {\r\n\r\n\t\t\tif ( _currentMaterialId === - 1 ) refreshLights = true;\r\n\t\t\t_currentMaterialId = material.id;\r\n\r\n\t\t\trefreshMaterial = true;\r\n\r\n\t\t}\r\n\r\n\t\tif ( refreshProgram || camera !== _currentCamera ) {\r\n\r\n\t\t\t_gl.uniformMatrix4fv( p_uniforms.projectionMatrix, false, camera.projectionMatrix.elements );\r\n\r\n\t\t\tif ( capabilities.logarithmicDepthBuffer ) {\r\n\r\n\t\t\t\t_gl.uniform1f( p_uniforms.logDepthBufFC, 2.0 / ( Math.log( camera.far + 1.0 ) / Math.LN2 ) );\r\n\r\n\t\t\t}\r\n\r\n\r\n\t\t\tif ( camera !== _currentCamera ) _currentCamera = camera;\r\n\r\n\t\t\t// load material specific uniforms\r\n\t\t\t// (shader material also gets them for the sake of genericity)\r\n\r\n\t\t\tif ( material instanceof THREE.ShaderMaterial ||\r\n\t\t\t\t material instanceof THREE.MeshPhongMaterial ||\r\n\t\t\t\t material.envMap ) {\r\n\r\n\t\t\t\tif ( p_uniforms.cameraPosition !== undefined ) {\r\n\r\n\t\t\t\t\t_vector3.setFromMatrixPosition( camera.matrixWorld );\r\n\t\t\t\t\t_gl.uniform3f( p_uniforms.cameraPosition, _vector3.x, _vector3.y, _vector3.z );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( material instanceof THREE.MeshPhongMaterial ||\r\n\t\t\t\t material instanceof THREE.MeshLambertMaterial ||\r\n\t\t\t\t material instanceof THREE.MeshBasicMaterial ||\r\n\t\t\t\t material instanceof THREE.ShaderMaterial ||\r\n\t\t\t\t material.skinning ) {\r\n\r\n\t\t\t\tif ( p_uniforms.viewMatrix !== undefined ) {\r\n\r\n\t\t\t\t\t_gl.uniformMatrix4fv( p_uniforms.viewMatrix, false, camera.matrixWorldInverse.elements );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// skinning uniforms must be set even if material didn't change\r\n\t\t// auto-setting of texture unit for bone texture must go before other textures\r\n\t\t// not sure why, but otherwise weird things happen\r\n\r\n\t\tif ( material.skinning ) {\r\n\r\n\t\t\tif ( object.bindMatrix && p_uniforms.bindMatrix !== undefined ) {\r\n\r\n\t\t\t\t_gl.uniformMatrix4fv( p_uniforms.bindMatrix, false, object.bindMatrix.elements );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( object.bindMatrixInverse && p_uniforms.bindMatrixInverse !== undefined ) {\r\n\r\n\t\t\t\t_gl.uniformMatrix4fv( p_uniforms.bindMatrixInverse, false, object.bindMatrixInverse.elements );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( capabilities.floatVertexTextures && object.skeleton && object.skeleton.useVertexTexture ) {\r\n\r\n\t\t\t\tif ( p_uniforms.boneTexture !== undefined ) {\r\n\r\n\t\t\t\t\tvar textureUnit = getTextureUnit();\r\n\r\n\t\t\t\t\t_gl.uniform1i( p_uniforms.boneTexture, textureUnit );\r\n\t\t\t\t\t_this.setTexture( object.skeleton.boneTexture, textureUnit );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( p_uniforms.boneTextureWidth !== undefined ) {\r\n\r\n\t\t\t\t\t_gl.uniform1i( p_uniforms.boneTextureWidth, object.skeleton.boneTextureWidth );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( p_uniforms.boneTextureHeight !== undefined ) {\r\n\r\n\t\t\t\t\t_gl.uniform1i( p_uniforms.boneTextureHeight, object.skeleton.boneTextureHeight );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else if ( object.skeleton && object.skeleton.boneMatrices ) {\r\n\r\n\t\t\t\tif ( p_uniforms.boneGlobalMatrices !== undefined ) {\r\n\r\n\t\t\t\t\t_gl.uniformMatrix4fv( p_uniforms.boneGlobalMatrices, false, object.skeleton.boneMatrices );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( refreshMaterial ) {\r\n\r\n\t\t\t// refresh uniforms common to several materials\r\n\r\n\t\t\tif ( fog && material.fog ) {\r\n\r\n\t\t\t\trefreshUniformsFog( m_uniforms, fog );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( material instanceof THREE.MeshPhongMaterial ||\r\n\t\t\t\t material instanceof THREE.MeshLambertMaterial ||\r\n\t\t\t\t material.lights ) {\r\n\r\n\t\t\t\tif ( _lightsNeedUpdate ) {\r\n\r\n\t\t\t\t\trefreshLights = true;\r\n\t\t\t\t\tsetupLights( lights, camera );\r\n\t\t\t\t\t_lightsNeedUpdate = false;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( refreshLights ) {\r\n\r\n\t\t\t\t\trefreshUniformsLights( m_uniforms, _lights );\r\n\t\t\t\t\tmarkUniformsLightsNeedsUpdate( m_uniforms, true );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tmarkUniformsLightsNeedsUpdate( m_uniforms, false );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( material instanceof THREE.MeshBasicMaterial ||\r\n\t\t\t\t material instanceof THREE.MeshLambertMaterial ||\r\n\t\t\t\t material instanceof THREE.MeshPhongMaterial ) {\r\n\r\n\t\t\t\trefreshUniformsCommon( m_uniforms, material );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// refresh single material specific uniforms\r\n\r\n\t\t\tif ( material instanceof THREE.LineBasicMaterial ) {\r\n\r\n\t\t\t\trefreshUniformsLine( m_uniforms, material );\r\n\r\n\t\t\t} else if ( material instanceof THREE.LineDashedMaterial ) {\r\n\r\n\t\t\t\trefreshUniformsLine( m_uniforms, material );\r\n\t\t\t\trefreshUniformsDash( m_uniforms, material );\r\n\r\n\t\t\t} else if ( material instanceof THREE.PointsMaterial ) {\r\n\r\n\t\t\t\trefreshUniformsParticle( m_uniforms, material );\r\n\r\n\t\t\t} else if ( material instanceof THREE.MeshPhongMaterial ) {\r\n\r\n\t\t\t\trefreshUniformsPhong( m_uniforms, material );\r\n\r\n\t\t\t} else if ( material instanceof THREE.MeshDepthMaterial ) {\r\n\r\n\t\t\t\tm_uniforms.mNear.value = camera.near;\r\n\t\t\t\tm_uniforms.mFar.value = camera.far;\r\n\t\t\t\tm_uniforms.opacity.value = material.opacity;\r\n\r\n\t\t\t} else if ( material instanceof THREE.MeshNormalMaterial ) {\r\n\r\n\t\t\t\tm_uniforms.opacity.value = material.opacity;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( object.receiveShadow && ! material._shadowPass ) {\r\n\r\n\t\t\t\trefreshUniformsShadow( m_uniforms, lights );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// load common uniforms\r\n\r\n\t\t\tloadUniformsGeneric( materialProperties.uniformsList );\r\n\r\n\t\t}\r\n\r\n\t\tloadUniformsMatrices( p_uniforms, object );\r\n\r\n\t\tif ( p_uniforms.modelMatrix !== undefined ) {\r\n\r\n\t\t\t_gl.uniformMatrix4fv( p_uniforms.modelMatrix, false, object.matrixWorld.elements );\r\n\r\n\t\t}\r\n\r\n\t\treturn program;\r\n\r\n\t}\r\n\r\n\t// Uniforms (refresh uniforms objects)\r\n\r\n\tfunction refreshUniformsCommon ( uniforms, material ) {\r\n\r\n\t\tuniforms.opacity.value = material.opacity;\r\n\r\n\t\tuniforms.diffuse.value = material.color;\r\n\r\n\t\tif ( material.emissive ) {\r\n\r\n\t\t\tuniforms.emissive.value = material.emissive;\r\n\r\n\t\t}\r\n\r\n\t\tuniforms.map.value = material.map;\r\n\t\tuniforms.specularMap.value = material.specularMap;\r\n\t\tuniforms.alphaMap.value = material.alphaMap;\r\n\r\n\t\tif ( material.aoMap ) {\r\n\r\n\t\t\tuniforms.aoMap.value = material.aoMap;\r\n\t\t\tuniforms.aoMapIntensity.value = material.aoMapIntensity;\r\n\r\n\t\t}\r\n\r\n\t\t// uv repeat and offset setting priorities\r\n\t\t// 1. color map\r\n\t\t// 2. specular map\r\n\t\t// 3. normal map\r\n\t\t// 4. bump map\r\n\t\t// 5. alpha map\r\n\t\t// 6. emissive map\r\n\r\n\t\tvar uvScaleMap;\r\n\r\n\t\tif ( material.map ) {\r\n\r\n\t\t\tuvScaleMap = material.map;\r\n\r\n\t\t} else if ( material.specularMap ) {\r\n\r\n\t\t\tuvScaleMap = material.specularMap;\r\n\r\n\t\t} else if ( material.displacementMap ) {\r\n\r\n\t\t\tuvScaleMap = material.displacementMap;\r\n\r\n\t\t} else if ( material.normalMap ) {\r\n\r\n\t\t\tuvScaleMap = material.normalMap;\r\n\r\n\t\t} else if ( material.bumpMap ) {\r\n\r\n\t\t\tuvScaleMap = material.bumpMap;\r\n\r\n\t\t} else if ( material.alphaMap ) {\r\n\r\n\t\t\tuvScaleMap = material.alphaMap;\r\n\r\n\t\t} else if ( material.emissiveMap ) {\r\n\r\n\t\t\tuvScaleMap = material.emissiveMap;\r\n\r\n\t\t}\r\n\r\n\t\tif ( uvScaleMap !== undefined ) {\r\n\r\n\t\t\tvar offset = uvScaleMap.offset;\r\n\t\t\tvar repeat = uvScaleMap.repeat;\r\n\r\n\t\t\tuniforms.offsetRepeat.value.set( offset.x, offset.y, repeat.x, repeat.y );\r\n\r\n\t\t}\r\n\r\n\t\tuniforms.envMap.value = material.envMap;\r\n\t\tuniforms.flipEnvMap.value = ( material.envMap instanceof THREE.WebGLRenderTargetCube ) ? 1 : - 1;\r\n\r\n\t\tuniforms.reflectivity.value = material.reflectivity;\r\n\t\tuniforms.refractionRatio.value = material.refractionRatio;\r\n\r\n\t}\r\n\r\n\tfunction refreshUniformsLine ( uniforms, material ) {\r\n\r\n\t\tuniforms.diffuse.value = material.color;\r\n\t\tuniforms.opacity.value = material.opacity;\r\n\r\n\t}\r\n\r\n\tfunction refreshUniformsDash ( uniforms, material ) {\r\n\r\n\t\tuniforms.dashSize.value = material.dashSize;\r\n\t\tuniforms.totalSize.value = material.dashSize + material.gapSize;\r\n\t\tuniforms.scale.value = material.scale;\r\n\r\n\t}\r\n\r\n\tfunction refreshUniformsParticle ( uniforms, material ) {\r\n\r\n\t\tuniforms.psColor.value = material.color;\r\n\t\tuniforms.opacity.value = material.opacity;\r\n\t\tuniforms.size.value = material.size;\r\n\t\tuniforms.scale.value = _canvas.height / 2.0; // TODO: Cache this.\r\n\r\n\t\tuniforms.map.value = material.map;\r\n\r\n\t\tif ( material.map !== null ) {\r\n\r\n\t\t\tvar offset = material.map.offset;\r\n\t\t\tvar repeat = material.map.repeat;\r\n\r\n\t\t\tuniforms.offsetRepeat.value.set( offset.x, offset.y, repeat.x, repeat.y );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction refreshUniformsFog ( uniforms, fog ) {\r\n\r\n\t\tuniforms.fogColor.value = fog.color;\r\n\r\n\t\tif ( fog instanceof THREE.Fog ) {\r\n\r\n\t\t\tuniforms.fogNear.value = fog.near;\r\n\t\t\tuniforms.fogFar.value = fog.far;\r\n\r\n\t\t} else if ( fog instanceof THREE.FogExp2 ) {\r\n\r\n\t\t\tuniforms.fogDensity.value = fog.density;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction refreshUniformsPhong ( uniforms, material ) {\r\n\r\n\t\tuniforms.specular.value = material.specular;\r\n\t\tuniforms.shininess.value = material.shininess;\r\n\r\n\t\tif ( material.lightMap ) {\r\n\r\n\t\t\tuniforms.lightMap.value = material.lightMap;\r\n\t\t\tuniforms.lightMapIntensity.value = material.lightMapIntensity;\r\n\r\n\t\t}\r\n\r\n\t\tif ( material.emissiveMap ) {\r\n\r\n\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\r\n\r\n\t\t}\r\n\r\n\t\tif ( material.bumpMap ) {\r\n\r\n\t\t\tuniforms.bumpMap.value = material.bumpMap;\r\n\t\t\tuniforms.bumpScale.value = material.bumpScale;\r\n\r\n\t\t}\r\n\r\n\t\tif ( material.normalMap ) {\r\n\r\n\t\t\tuniforms.normalMap.value = material.normalMap;\r\n\t\t\tuniforms.normalScale.value.copy( material.normalScale );\r\n\r\n\t\t}\r\n\r\n\t\tif ( material.displacementMap ) {\r\n\r\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\r\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\r\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction refreshUniformsLights ( uniforms, lights ) {\r\n\r\n\t\tuniforms.ambientLightColor.value = lights.ambient;\r\n\r\n\t\tuniforms.directionalLightColor.value = lights.directional.colors;\r\n\t\tuniforms.directionalLightDirection.value = lights.directional.positions;\r\n\r\n\t\tuniforms.pointLightColor.value = lights.point.colors;\r\n\t\tuniforms.pointLightPosition.value = lights.point.positions;\r\n\t\tuniforms.pointLightDistance.value = lights.point.distances;\r\n\t\tuniforms.pointLightDecay.value = lights.point.decays;\r\n\r\n\t\tuniforms.spotLightColor.value = lights.spot.colors;\r\n\t\tuniforms.spotLightPosition.value = lights.spot.positions;\r\n\t\tuniforms.spotLightDistance.value = lights.spot.distances;\r\n\t\tuniforms.spotLightDirection.value = lights.spot.directions;\r\n\t\tuniforms.spotLightAngleCos.value = lights.spot.anglesCos;\r\n\t\tuniforms.spotLightExponent.value = lights.spot.exponents;\r\n\t\tuniforms.spotLightDecay.value = lights.spot.decays;\r\n\r\n\t\tuniforms.hemisphereLightSkyColor.value = lights.hemi.skyColors;\r\n\t\tuniforms.hemisphereLightGroundColor.value = lights.hemi.groundColors;\r\n\t\tuniforms.hemisphereLightDirection.value = lights.hemi.positions;\r\n\r\n\t}\r\n\r\n\t// If uniforms are marked as clean, they don't need to be loaded to the GPU.\r\n\r\n\tfunction markUniformsLightsNeedsUpdate ( uniforms, value ) {\r\n\r\n\t\tuniforms.ambientLightColor.needsUpdate = value;\r\n\r\n\t\tuniforms.directionalLightColor.needsUpdate = value;\r\n\t\tuniforms.directionalLightDirection.needsUpdate = value;\r\n\r\n\t\tuniforms.pointLightColor.needsUpdate = value;\r\n\t\tuniforms.pointLightPosition.needsUpdate = value;\r\n\t\tuniforms.pointLightDistance.needsUpdate = value;\r\n\t\tuniforms.pointLightDecay.needsUpdate = value;\r\n\r\n\t\tuniforms.spotLightColor.needsUpdate = value;\r\n\t\tuniforms.spotLightPosition.needsUpdate = value;\r\n\t\tuniforms.spotLightDistance.needsUpdate = value;\r\n\t\tuniforms.spotLightDirection.needsUpdate = value;\r\n\t\tuniforms.spotLightAngleCos.needsUpdate = value;\r\n\t\tuniforms.spotLightExponent.needsUpdate = value;\r\n\t\tuniforms.spotLightDecay.needsUpdate = value;\r\n\r\n\t\tuniforms.hemisphereLightSkyColor.needsUpdate = value;\r\n\t\tuniforms.hemisphereLightGroundColor.needsUpdate = value;\r\n\t\tuniforms.hemisphereLightDirection.needsUpdate = value;\r\n\r\n\t}\r\n\r\n\tfunction refreshUniformsShadow ( uniforms, lights ) {\r\n\r\n\t\tif ( uniforms.shadowMatrix ) {\r\n\r\n\t\t\tvar j = 0;\r\n\r\n\t\t\tfor ( var i = 0, il = lights.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tvar light = lights[ i ];\r\n\r\n\t\t\t\tif ( ! light.castShadow ) continue;\r\n\r\n\t\t\t\tif ( light instanceof THREE.SpotLight || ( light instanceof THREE.DirectionalLight ) ) {\r\n\r\n\t\t\t\t\tuniforms.shadowMap.value[ j ] = light.shadowMap;\r\n\t\t\t\t\tuniforms.shadowMapSize.value[ j ] = light.shadowMapSize;\r\n\r\n\t\t\t\t\tuniforms.shadowMatrix.value[ j ] = light.shadowMatrix;\r\n\r\n\t\t\t\t\tuniforms.shadowDarkness.value[ j ] = light.shadowDarkness;\r\n\t\t\t\t\tuniforms.shadowBias.value[ j ] = light.shadowBias;\r\n\r\n\t\t\t\t\tj ++;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// Uniforms (load to GPU)\r\n\r\n\tfunction loadUniformsMatrices ( uniforms, object ) {\r\n\r\n\t\t_gl.uniformMatrix4fv( uniforms.modelViewMatrix, false, object.modelViewMatrix.elements );\r\n\r\n\t\tif ( uniforms.normalMatrix ) {\r\n\r\n\t\t\t_gl.uniformMatrix3fv( uniforms.normalMatrix, false, object.normalMatrix.elements );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction getTextureUnit() {\r\n\r\n\t\tvar textureUnit = _usedTextureUnits;\r\n\r\n\t\tif ( textureUnit >= capabilities.maxTextures ) {\r\n\r\n\t\t\tconsole.warn( 'WebGLRenderer: trying to use ' + textureUnit + ' texture units while this GPU supports only ' + capabilities.maxTextures );\r\n\r\n\t\t}\r\n\r\n\t\t_usedTextureUnits += 1;\r\n\r\n\t\treturn textureUnit;\r\n\r\n\t}\r\n\r\n\tfunction loadUniformsGeneric ( uniforms ) {\r\n\r\n\t\tvar texture, textureUnit;\r\n\r\n\t\tfor ( var j = 0, jl = uniforms.length; j < jl; j ++ ) {\r\n\r\n\t\t\tvar uniform = uniforms[ j ][ 0 ];\r\n\r\n\t\t\t// needsUpdate property is not added to all uniforms.\r\n\t\t\tif ( uniform.needsUpdate === false ) continue;\r\n\r\n\t\t\tvar type = uniform.type;\r\n\t\t\tvar value = uniform.value;\r\n\t\t\tvar location = uniforms[ j ][ 1 ];\r\n\r\n\t\t\tswitch ( type ) {\r\n\r\n\t\t\t\tcase '1i':\r\n\t\t\t\t\t_gl.uniform1i( location, value );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase '1f':\r\n\t\t\t\t\t_gl.uniform1f( location, value );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase '2f':\r\n\t\t\t\t\t_gl.uniform2f( location, value[ 0 ], value[ 1 ] );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase '3f':\r\n\t\t\t\t\t_gl.uniform3f( location, value[ 0 ], value[ 1 ], value[ 2 ] );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase '4f':\r\n\t\t\t\t\t_gl.uniform4f( location, value[ 0 ], value[ 1 ], value[ 2 ], value[ 3 ] );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase '1iv':\r\n\t\t\t\t\t_gl.uniform1iv( location, value );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase '3iv':\r\n\t\t\t\t\t_gl.uniform3iv( location, value );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase '1fv':\r\n\t\t\t\t\t_gl.uniform1fv( location, value );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase '2fv':\r\n\t\t\t\t\t_gl.uniform2fv( location, value );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase '3fv':\r\n\t\t\t\t\t_gl.uniform3fv( location, value );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase '4fv':\r\n\t\t\t\t\t_gl.uniform4fv( location, value );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'Matrix3fv':\r\n\t\t\t\t\t_gl.uniformMatrix3fv( location, false, value );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'Matrix4fv':\r\n\t\t\t\t\t_gl.uniformMatrix4fv( location, false, value );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t//\r\n\r\n\t\t\t\tcase 'i':\r\n\r\n\t\t\t\t\t// single integer\r\n\t\t\t\t\t_gl.uniform1i( location, value );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'f':\r\n\r\n\t\t\t\t\t// single float\r\n\t\t\t\t\t_gl.uniform1f( location, value );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'v2':\r\n\r\n\t\t\t\t\t// single THREE.Vector2\r\n\t\t\t\t\t_gl.uniform2f( location, value.x, value.y );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'v3':\r\n\r\n\t\t\t\t\t// single THREE.Vector3\r\n\t\t\t\t\t_gl.uniform3f( location, value.x, value.y, value.z );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'v4':\r\n\r\n\t\t\t\t\t// single THREE.Vector4\r\n\t\t\t\t\t_gl.uniform4f( location, value.x, value.y, value.z, value.w );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'c':\r\n\r\n\t\t\t\t\t// single THREE.Color\r\n\t\t\t\t\t_gl.uniform3f( location, value.r, value.g, value.b );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'iv1':\r\n\r\n\t\t\t\t\t// flat array of integers (JS or typed array)\r\n\t\t\t\t\t_gl.uniform1iv( location, value );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'iv':\r\n\r\n\t\t\t\t\t// flat array of integers with 3 x N size (JS or typed array)\r\n\t\t\t\t\t_gl.uniform3iv( location, value );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'fv1':\r\n\r\n\t\t\t\t\t// flat array of floats (JS or typed array)\r\n\t\t\t\t\t_gl.uniform1fv( location, value );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'fv':\r\n\r\n\t\t\t\t\t// flat array of floats with 3 x N size (JS or typed array)\r\n\t\t\t\t\t_gl.uniform3fv( location, value );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'v2v':\r\n\r\n\t\t\t\t\t// array of THREE.Vector2\r\n\r\n\t\t\t\t\tif ( uniform._array === undefined ) {\r\n\r\n\t\t\t\t\t\tuniform._array = new Float32Array( 2 * value.length );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tfor ( var i = 0, i2 = 0, il = value.length; i < il; i ++, i2 += 2 ) {\r\n\r\n\t\t\t\t\t\tuniform._array[ i2 + 0 ] = value[ i ].x;\r\n\t\t\t\t\t\tuniform._array[ i2 + 1 ] = value[ i ].y;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t_gl.uniform2fv( location, uniform._array );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'v3v':\r\n\r\n\t\t\t\t\t// array of THREE.Vector3\r\n\r\n\t\t\t\t\tif ( uniform._array === undefined ) {\r\n\r\n\t\t\t\t\t\tuniform._array = new Float32Array( 3 * value.length );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tfor ( var i = 0, i3 = 0, il = value.length; i < il; i ++, i3 += 3 ) {\r\n\r\n\t\t\t\t\t\tuniform._array[ i3 + 0 ] = value[ i ].x;\r\n\t\t\t\t\t\tuniform._array[ i3 + 1 ] = value[ i ].y;\r\n\t\t\t\t\t\tuniform._array[ i3 + 2 ] = value[ i ].z;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t_gl.uniform3fv( location, uniform._array );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'v4v':\r\n\r\n\t\t\t\t\t// array of THREE.Vector4\r\n\r\n\t\t\t\t\tif ( uniform._array === undefined ) {\r\n\r\n\t\t\t\t\t\tuniform._array = new Float32Array( 4 * value.length );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tfor ( var i = 0, i4 = 0, il = value.length; i < il; i ++, i4 += 4 ) {\r\n\r\n\t\t\t\t\t\tuniform._array[ i4 + 0 ] = value[ i ].x;\r\n\t\t\t\t\t\tuniform._array[ i4 + 1 ] = value[ i ].y;\r\n\t\t\t\t\t\tuniform._array[ i4 + 2 ] = value[ i ].z;\r\n\t\t\t\t\t\tuniform._array[ i4 + 3 ] = value[ i ].w;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t_gl.uniform4fv( location, uniform._array );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'm3':\r\n\r\n\t\t\t\t\t// single THREE.Matrix3\r\n\t\t\t\t\t_gl.uniformMatrix3fv( location, false, value.elements );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'm3v':\r\n\r\n\t\t\t\t\t// array of THREE.Matrix3\r\n\r\n\t\t\t\t\tif ( uniform._array === undefined ) {\r\n\r\n\t\t\t\t\t\tuniform._array = new Float32Array( 9 * value.length );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tfor ( var i = 0, il = value.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\t\tvalue[ i ].flattenToArrayOffset( uniform._array, i * 9 );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t_gl.uniformMatrix3fv( location, false, uniform._array );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'm4':\r\n\r\n\t\t\t\t\t// single THREE.Matrix4\r\n\t\t\t\t\t_gl.uniformMatrix4fv( location, false, value.elements );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'm4v':\r\n\r\n\t\t\t\t\t// array of THREE.Matrix4\r\n\r\n\t\t\t\t\tif ( uniform._array === undefined ) {\r\n\r\n\t\t\t\t\t\tuniform._array = new Float32Array( 16 * value.length );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tfor ( var i = 0, il = value.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\t\tvalue[ i ].flattenToArrayOffset( uniform._array, i * 16 );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t_gl.uniformMatrix4fv( location, false, uniform._array );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 't':\r\n\r\n\t\t\t\t\t// single THREE.Texture (2d or cube)\r\n\r\n\t\t\t\t\ttexture = value;\r\n\t\t\t\t\ttextureUnit = getTextureUnit();\r\n\r\n\t\t\t\t\t_gl.uniform1i( location, textureUnit );\r\n\r\n\t\t\t\t\tif ( ! texture ) continue;\r\n\r\n\t\t\t\t\tif ( texture instanceof THREE.CubeTexture ||\r\n\t\t\t\t\t\t ( Array.isArray( texture.image ) && texture.image.length === 6 ) ) {\r\n\r\n\t\t\t\t\t\t// CompressedTexture can have Array in image :/\r\n\r\n\t\t\t\t\t\tsetCubeTexture( texture, textureUnit );\r\n\r\n\t\t\t\t\t} else if ( texture instanceof THREE.WebGLRenderTargetCube ) {\r\n\r\n\t\t\t\t\t\tsetCubeTextureDynamic( texture, textureUnit );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t_this.setTexture( texture, textureUnit );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'tv':\r\n\r\n\t\t\t\t\t// array of THREE.Texture (2d)\r\n\r\n\t\t\t\t\tif ( uniform._array === undefined ) {\r\n\r\n\t\t\t\t\t\tuniform._array = [];\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tfor ( var i = 0, il = uniform.value.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\t\tuniform._array[ i ] = getTextureUnit();\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t_gl.uniform1iv( location, uniform._array );\r\n\r\n\t\t\t\t\tfor ( var i = 0, il = uniform.value.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\t\ttexture = uniform.value[ i ];\r\n\t\t\t\t\t\ttextureUnit = uniform._array[ i ];\r\n\r\n\t\t\t\t\t\tif ( ! texture ) continue;\r\n\r\n\t\t\t\t\t\t_this.setTexture( texture, textureUnit );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault:\r\n\r\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Unknown uniform type: ' + type );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction setColorLinear( array, offset, color, intensity ) {\r\n\r\n\t\tarray[ offset + 0 ] = color.r * intensity;\r\n\t\tarray[ offset + 1 ] = color.g * intensity;\r\n\t\tarray[ offset + 2 ] = color.b * intensity;\r\n\r\n\t}\r\n\r\n\tfunction setupLights ( lights, camera ) {\r\n\r\n\t\tvar l, ll, light,\r\n\t\tr = 0, g = 0, b = 0,\r\n\t\tcolor, skyColor, groundColor,\r\n\t\tintensity,\r\n\t\tdistance,\r\n\r\n\t\tzlights = _lights,\r\n\r\n\t\tviewMatrix = camera.matrixWorldInverse,\r\n\r\n\t\tdirColors = zlights.directional.colors,\r\n\t\tdirPositions = zlights.directional.positions,\r\n\r\n\t\tpointColors = zlights.point.colors,\r\n\t\tpointPositions = zlights.point.positions,\r\n\t\tpointDistances = zlights.point.distances,\r\n\t\tpointDecays = zlights.point.decays,\r\n\r\n\t\tspotColors = zlights.spot.colors,\r\n\t\tspotPositions = zlights.spot.positions,\r\n\t\tspotDistances = zlights.spot.distances,\r\n\t\tspotDirections = zlights.spot.directions,\r\n\t\tspotAnglesCos = zlights.spot.anglesCos,\r\n\t\tspotExponents = zlights.spot.exponents,\r\n\t\tspotDecays = zlights.spot.decays,\r\n\r\n\t\themiSkyColors = zlights.hemi.skyColors,\r\n\t\themiGroundColors = zlights.hemi.groundColors,\r\n\t\themiPositions = zlights.hemi.positions,\r\n\r\n\t\tdirLength = 0,\r\n\t\tpointLength = 0,\r\n\t\tspotLength = 0,\r\n\t\themiLength = 0,\r\n\r\n\t\tdirCount = 0,\r\n\t\tpointCount = 0,\r\n\t\tspotCount = 0,\r\n\t\themiCount = 0,\r\n\r\n\t\tdirOffset = 0,\r\n\t\tpointOffset = 0,\r\n\t\tspotOffset = 0,\r\n\t\themiOffset = 0;\r\n\r\n\t\tfor ( l = 0, ll = lights.length; l < ll; l ++ ) {\r\n\r\n\t\t\tlight = lights[ l ];\r\n\r\n\t\t\tif ( light.onlyShadow ) continue;\r\n\r\n\t\t\tcolor = light.color;\r\n\t\t\tintensity = light.intensity;\r\n\t\t\tdistance = light.distance;\r\n\r\n\t\t\tif ( light instanceof THREE.AmbientLight ) {\r\n\r\n\t\t\t\tif ( ! light.visible ) continue;\r\n\r\n\t\t\t\tr += color.r;\r\n\t\t\t\tg += color.g;\r\n\t\t\t\tb += color.b;\r\n\r\n\t\t\t} else if ( light instanceof THREE.DirectionalLight ) {\r\n\r\n\t\t\t\tdirCount += 1;\r\n\r\n\t\t\t\tif ( ! light.visible ) continue;\r\n\r\n\t\t\t\t_direction.setFromMatrixPosition( light.matrixWorld );\r\n\t\t\t\t_vector3.setFromMatrixPosition( light.target.matrixWorld );\r\n\t\t\t\t_direction.sub( _vector3 );\r\n\t\t\t\t_direction.transformDirection( viewMatrix );\r\n\r\n\t\t\t\tdirOffset = dirLength * 3;\r\n\r\n\t\t\t\tdirPositions[ dirOffset + 0 ] = _direction.x;\r\n\t\t\t\tdirPositions[ dirOffset + 1 ] = _direction.y;\r\n\t\t\t\tdirPositions[ dirOffset + 2 ] = _direction.z;\r\n\r\n\t\t\t\tsetColorLinear( dirColors, dirOffset, color, intensity );\r\n\r\n\t\t\t\tdirLength += 1;\r\n\r\n\t\t\t} else if ( light instanceof THREE.PointLight ) {\r\n\r\n\t\t\t\tpointCount += 1;\r\n\r\n\t\t\t\tif ( ! light.visible ) continue;\r\n\r\n\t\t\t\tpointOffset = pointLength * 3;\r\n\r\n\t\t\t\tsetColorLinear( pointColors, pointOffset, color, intensity );\r\n\r\n\t\t\t\t_vector3.setFromMatrixPosition( light.matrixWorld );\r\n\t\t\t\t_vector3.applyMatrix4( viewMatrix );\r\n\r\n\t\t\t\tpointPositions[ pointOffset + 0 ] = _vector3.x;\r\n\t\t\t\tpointPositions[ pointOffset + 1 ] = _vector3.y;\r\n\t\t\t\tpointPositions[ pointOffset + 2 ] = _vector3.z;\r\n\r\n\t\t\t\t// distance is 0 if decay is 0, because there is no attenuation at all.\r\n\t\t\t\tpointDistances[ pointLength ] = distance;\r\n\t\t\t\tpointDecays[ pointLength ] = ( light.distance === 0 ) ? 0.0 : light.decay;\r\n\r\n\t\t\t\tpointLength += 1;\r\n\r\n\t\t\t} else if ( light instanceof THREE.SpotLight ) {\r\n\r\n\t\t\t\tspotCount += 1;\r\n\r\n\t\t\t\tif ( ! light.visible ) continue;\r\n\r\n\t\t\t\tspotOffset = spotLength * 3;\r\n\r\n\t\t\t\tsetColorLinear( spotColors, spotOffset, color, intensity );\r\n\r\n\t\t\t\t_direction.setFromMatrixPosition( light.matrixWorld );\r\n\t\t\t\t_vector3.copy( _direction ).applyMatrix4( viewMatrix );\r\n\r\n\t\t\t\tspotPositions[ spotOffset + 0 ] = _vector3.x;\r\n\t\t\t\tspotPositions[ spotOffset + 1 ] = _vector3.y;\r\n\t\t\t\tspotPositions[ spotOffset + 2 ] = _vector3.z;\r\n\r\n\t\t\t\tspotDistances[ spotLength ] = distance;\r\n\r\n\t\t\t\t_vector3.setFromMatrixPosition( light.target.matrixWorld );\r\n\t\t\t\t_direction.sub( _vector3 );\r\n\t\t\t\t_direction.transformDirection( viewMatrix );\r\n\r\n\t\t\t\tspotDirections[ spotOffset + 0 ] = _direction.x;\r\n\t\t\t\tspotDirections[ spotOffset + 1 ] = _direction.y;\r\n\t\t\t\tspotDirections[ spotOffset + 2 ] = _direction.z;\r\n\r\n\t\t\t\tspotAnglesCos[ spotLength ] = Math.cos( light.angle );\r\n\t\t\t\tspotExponents[ spotLength ] = light.exponent;\r\n\t\t\t\tspotDecays[ spotLength ] = ( light.distance === 0 ) ? 0.0 : light.decay;\r\n\r\n\t\t\t\tspotLength += 1;\r\n\r\n\t\t\t} else if ( light instanceof THREE.HemisphereLight ) {\r\n\r\n\t\t\t\themiCount += 1;\r\n\r\n\t\t\t\tif ( ! light.visible ) continue;\r\n\r\n\t\t\t\t_direction.setFromMatrixPosition( light.matrixWorld );\r\n\t\t\t\t_direction.transformDirection( viewMatrix );\r\n\r\n\t\t\t\themiOffset = hemiLength * 3;\r\n\r\n\t\t\t\themiPositions[ hemiOffset + 0 ] = _direction.x;\r\n\t\t\t\themiPositions[ hemiOffset + 1 ] = _direction.y;\r\n\t\t\t\themiPositions[ hemiOffset + 2 ] = _direction.z;\r\n\r\n\t\t\t\tskyColor = light.color;\r\n\t\t\t\tgroundColor = light.groundColor;\r\n\r\n\t\t\t\tsetColorLinear( hemiSkyColors, hemiOffset, skyColor, intensity );\r\n\t\t\t\tsetColorLinear( hemiGroundColors, hemiOffset, groundColor, intensity );\r\n\r\n\t\t\t\themiLength += 1;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// null eventual remains from removed lights\r\n\t\t// (this is to avoid if in shader)\r\n\r\n\t\tfor ( l = dirLength * 3, ll = Math.max( dirColors.length, dirCount * 3 ); l < ll; l ++ ) dirColors[ l ] = 0.0;\r\n\t\tfor ( l = pointLength * 3, ll = Math.max( pointColors.length, pointCount * 3 ); l < ll; l ++ ) pointColors[ l ] = 0.0;\r\n\t\tfor ( l = spotLength * 3, ll = Math.max( spotColors.length, spotCount * 3 ); l < ll; l ++ ) spotColors[ l ] = 0.0;\r\n\t\tfor ( l = hemiLength * 3, ll = Math.max( hemiSkyColors.length, hemiCount * 3 ); l < ll; l ++ ) hemiSkyColors[ l ] = 0.0;\r\n\t\tfor ( l = hemiLength * 3, ll = Math.max( hemiGroundColors.length, hemiCount * 3 ); l < ll; l ++ ) hemiGroundColors[ l ] = 0.0;\r\n\r\n\t\tzlights.directional.length = dirLength;\r\n\t\tzlights.point.length = pointLength;\r\n\t\tzlights.spot.length = spotLength;\r\n\t\tzlights.hemi.length = hemiLength;\r\n\r\n\t\tzlights.ambient[ 0 ] = r;\r\n\t\tzlights.ambient[ 1 ] = g;\r\n\t\tzlights.ambient[ 2 ] = b;\r\n\r\n\t}\r\n\r\n\t// GL state setting\r\n\r\n\tthis.setFaceCulling = function ( cullFace, frontFaceDirection ) {\r\n\r\n\t\tif ( cullFace === THREE.CullFaceNone ) {\r\n\r\n\t\t\tstate.disable( _gl.CULL_FACE );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tif ( frontFaceDirection === THREE.FrontFaceDirectionCW ) {\r\n\r\n\t\t\t\t_gl.frontFace( _gl.CW );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t_gl.frontFace( _gl.CCW );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( cullFace === THREE.CullFaceBack ) {\r\n\r\n\t\t\t\t_gl.cullFace( _gl.BACK );\r\n\r\n\t\t\t} else if ( cullFace === THREE.CullFaceFront ) {\r\n\r\n\t\t\t\t_gl.cullFace( _gl.FRONT );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t_gl.cullFace( _gl.FRONT_AND_BACK );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tstate.enable( _gl.CULL_FACE );\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\t// Textures\r\n\r\n\tfunction setTextureParameters ( textureType, texture, isImagePowerOfTwo ) {\r\n\r\n\t\tvar extension;\r\n\r\n\t\tif ( isImagePowerOfTwo ) {\r\n\r\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_S, paramThreeToGL( texture.wrapS ) );\r\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_T, paramThreeToGL( texture.wrapT ) );\r\n\r\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MAG_FILTER, paramThreeToGL( texture.magFilter ) );\r\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MIN_FILTER, paramThreeToGL( texture.minFilter ) );\r\n\r\n\t\t} else {\r\n\r\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_S, _gl.CLAMP_TO_EDGE );\r\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_T, _gl.CLAMP_TO_EDGE );\r\n\r\n\t\t\tif ( texture.wrapS !== THREE.ClampToEdgeWrapping || texture.wrapT !== THREE.ClampToEdgeWrapping ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping. ( ' + texture.sourceFile + ' )' );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MAG_FILTER, filterFallback( texture.magFilter ) );\r\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MIN_FILTER, filterFallback( texture.minFilter ) );\r\n\r\n\t\t\tif ( texture.minFilter !== THREE.NearestFilter && texture.minFilter !== THREE.LinearFilter ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter. ( ' + texture.sourceFile + ' )' );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\textension = extensions.get( 'EXT_texture_filter_anisotropic' );\r\n\r\n\t\tif ( extension ) {\r\n\r\n\t\t\tif ( texture.type === THREE.FloatType && extensions.get( 'OES_texture_float_linear' ) === null ) return;\r\n\t\t\tif ( texture.type === THREE.HalfFloatType && extensions.get( 'OES_texture_half_float_linear' ) === null ) return;\r\n\r\n\t\t\tif ( texture.anisotropy > 1 || properties.get( texture ).__currentAnisotropy ) {\r\n\r\n\t\t\t\t_gl.texParameterf( textureType, extension.TEXTURE_MAX_ANISOTROPY_EXT, Math.min( texture.anisotropy, _this.getMaxAnisotropy() ) );\r\n\t\t\t\tproperties.get( texture ).__currentAnisotropy = texture.anisotropy;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction uploadTexture( textureProperties, texture, slot ) {\r\n\r\n\t\tif ( textureProperties.__webglInit === undefined ) {\r\n\r\n\t\t\ttextureProperties.__webglInit = true;\r\n\r\n\t\t\ttexture.__webglInit = true;\r\n\r\n\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\r\n\r\n\t\t\ttextureProperties.__webglTexture = _gl.createTexture();\r\n\r\n\t\t\t_infoMemory.textures ++;\r\n\r\n\t\t}\r\n\r\n\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\r\n\t\tstate.bindTexture( _gl.TEXTURE_2D, textureProperties.__webglTexture );\r\n\r\n\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, texture.flipY );\r\n\t\t_gl.pixelStorei( _gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, texture.premultiplyAlpha );\r\n\t\t_gl.pixelStorei( _gl.UNPACK_ALIGNMENT, texture.unpackAlignment );\r\n\r\n\t\ttexture.image = clampToMaxSize( texture.image, capabilities.maxTextureSize );\r\n\r\n\t\tvar image = texture.image,\r\n\t\tisImagePowerOfTwo = THREE.Math.isPowerOfTwo( image.width ) && THREE.Math.isPowerOfTwo( image.height ),\r\n\t\tglFormat = paramThreeToGL( texture.format ),\r\n\t\tglType = paramThreeToGL( texture.type );\r\n\r\n\t\tsetTextureParameters( _gl.TEXTURE_2D, texture, isImagePowerOfTwo );\r\n\r\n\t\tvar mipmap, mipmaps = texture.mipmaps;\r\n\r\n\t\tif ( texture instanceof THREE.DataTexture ) {\r\n\r\n\t\t\t// use manually created mipmaps if available\r\n\t\t\t// if there are no manual mipmaps\r\n\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\r\n\r\n\t\t\tif ( mipmaps.length > 0 && isImagePowerOfTwo ) {\r\n\r\n\t\t\t\tfor ( var i = 0, il = mipmaps.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\tmipmap = mipmaps[ i ];\r\n\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttexture.generateMipmaps = false;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, glFormat, image.width, image.height, 0, glFormat, glType, image.data );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( texture instanceof THREE.CompressedTexture ) {\r\n\r\n\t\t\tfor ( var i = 0, il = mipmaps.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tmipmap = mipmaps[ i ];\r\n\r\n\t\t\t\tif ( texture.format !== THREE.RGBAFormat && texture.format !== THREE.RGBFormat ) {\r\n\r\n\t\t\t\t\tif ( state.getCompressedTextureFormats().indexOf( glFormat ) > - 1 ) {\r\n\r\n\t\t\t\t\t\tstate.compressedTexImage2D( _gl.TEXTURE_2D, i, glFormat, mipmap.width, mipmap.height, 0, mipmap.data );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tconsole.warn( \"THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()\" );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// regular Texture (image, video, canvas)\r\n\r\n\t\t\t// use manually created mipmaps if available\r\n\t\t\t// if there are no manual mipmaps\r\n\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\r\n\r\n\t\t\tif ( mipmaps.length > 0 && isImagePowerOfTwo ) {\r\n\r\n\t\t\t\tfor ( var i = 0, il = mipmaps.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\tmipmap = mipmaps[ i ];\r\n\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glFormat, glFormat, glType, mipmap );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttexture.generateMipmaps = false;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, glFormat, glFormat, glType, texture.image );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( texture.generateMipmaps && isImagePowerOfTwo ) _gl.generateMipmap( _gl.TEXTURE_2D );\r\n\r\n\t\ttextureProperties.__version = texture.version;\r\n\r\n\t\tif ( texture.onUpdate ) texture.onUpdate( texture );\r\n\r\n\t}\r\n\r\n\tthis.setTexture = function ( texture, slot ) {\r\n\r\n\t\tvar textureProperties = properties.get( texture );\r\n\r\n\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\r\n\r\n\t\t\tvar image = texture.image;\r\n\r\n\t\t\tif ( image === undefined ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but image is undefined', texture );\r\n\t\t\t\treturn;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( image.complete === false ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but image is incomplete', texture );\r\n\t\t\t\treturn;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tuploadTexture( textureProperties, texture, slot );\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\r\n\t\tstate.bindTexture( _gl.TEXTURE_2D, textureProperties.__webglTexture );\r\n\r\n\t};\r\n\r\n\tfunction clampToMaxSize ( image, maxSize ) {\r\n\r\n\t\tif ( image.width > maxSize || image.height > maxSize ) {\r\n\r\n\t\t\t// Warning: Scaling through the canvas will only work with images that use\r\n\t\t\t// premultiplied alpha.\r\n\r\n\t\t\tvar scale = maxSize / Math.max( image.width, image.height );\r\n\r\n\t\t\tvar canvas = document.createElement( 'canvas' );\r\n\t\t\tcanvas.width = Math.floor( image.width * scale );\r\n\t\t\tcanvas.height = Math.floor( image.height * scale );\r\n\r\n\t\t\tvar context = canvas.getContext( '2d' );\r\n\t\t\tcontext.drawImage( image, 0, 0, image.width, image.height, 0, 0, canvas.width, canvas.height );\r\n\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: image is too big (' + image.width + 'x' + image.height + '). Resized to ' + canvas.width + 'x' + canvas.height, image );\r\n\r\n\t\t\treturn canvas;\r\n\r\n\t\t}\r\n\r\n\t\treturn image;\r\n\r\n\t}\r\n\r\n\tfunction setCubeTexture ( texture, slot ) {\r\n\r\n\t\tvar textureProperties = properties.get( texture );\r\n\r\n\t\tif ( texture.image.length === 6 ) {\r\n\r\n\t\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\r\n\r\n\t\t\t\tif ( ! textureProperties.__image__webglTextureCube ) {\r\n\r\n\t\t\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\r\n\r\n\t\t\t\t\ttextureProperties.__image__webglTextureCube = _gl.createTexture();\r\n\r\n\t\t\t\t\t_infoMemory.textures ++;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\r\n\t\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__image__webglTextureCube );\r\n\r\n\t\t\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, texture.flipY );\r\n\r\n\t\t\t\tvar isCompressed = texture instanceof THREE.CompressedTexture;\r\n\t\t\t\tvar isDataTexture = texture.image[ 0 ] instanceof THREE.DataTexture;\r\n\r\n\t\t\t\tvar cubeImage = [];\r\n\r\n\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\r\n\r\n\t\t\t\t\tif ( _this.autoScaleCubemaps && ! isCompressed && ! isDataTexture ) {\r\n\r\n\t\t\t\t\t\tcubeImage[ i ] = clampToMaxSize( texture.image[ i ], capabilities.maxCubemapSize );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tcubeImage[ i ] = isDataTexture ? texture.image[ i ].image : texture.image[ i ];\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar image = cubeImage[ 0 ],\r\n\t\t\t\tisImagePowerOfTwo = THREE.Math.isPowerOfTwo( image.width ) && THREE.Math.isPowerOfTwo( image.height ),\r\n\t\t\t\tglFormat = paramThreeToGL( texture.format ),\r\n\t\t\t\tglType = paramThreeToGL( texture.type );\r\n\r\n\t\t\t\tsetTextureParameters( _gl.TEXTURE_CUBE_MAP, texture, isImagePowerOfTwo );\r\n\r\n\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\r\n\r\n\t\t\t\t\tif ( ! isCompressed ) {\r\n\r\n\t\t\t\t\t\tif ( isDataTexture ) {\r\n\r\n\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glFormat, cubeImage[ i ].width, cubeImage[ i ].height, 0, glFormat, glType, cubeImage[ i ].data );\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glFormat, glFormat, glType, cubeImage[ i ] );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tvar mipmap, mipmaps = cubeImage[ i ].mipmaps;\r\n\r\n\t\t\t\t\t\tfor ( var j = 0, jl = mipmaps.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\t\t\t\tmipmap = mipmaps[ j ];\r\n\r\n\t\t\t\t\t\t\tif ( texture.format !== THREE.RGBAFormat && texture.format !== THREE.RGBFormat ) {\r\n\r\n\t\t\t\t\t\t\t\tif ( state.getCompressedTextureFormats().indexOf( glFormat ) > - 1 ) {\r\n\r\n\t\t\t\t\t\t\t\t\tstate.compressedTexImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, glFormat, mipmap.width, mipmap.height, 0, mipmap.data );\r\n\r\n\t\t\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\t\t\tconsole.warn( \"THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setCubeTexture()\" );\r\n\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, glFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( texture.generateMipmaps && isImagePowerOfTwo ) {\r\n\r\n\t\t\t\t\t_gl.generateMipmap( _gl.TEXTURE_CUBE_MAP );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttextureProperties.__version = texture.version;\r\n\r\n\t\t\t\tif ( texture.onUpdate ) texture.onUpdate( texture );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\r\n\t\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__image__webglTextureCube );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction setCubeTextureDynamic ( texture, slot ) {\r\n\r\n\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\r\n\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, properties.get( texture ).__webglTexture );\r\n\r\n\t}\r\n\r\n\t// Render targets\r\n\r\n\tfunction setupFrameBuffer ( framebuffer, renderTarget, textureTarget ) {\r\n\r\n\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\r\n\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, textureTarget, properties.get( renderTarget ).__webglTexture, 0 );\r\n\r\n\t}\r\n\r\n\tfunction setupRenderBuffer ( renderbuffer, renderTarget ) {\r\n\r\n\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, renderbuffer );\r\n\r\n\t\tif ( renderTarget.depthBuffer && ! renderTarget.stencilBuffer ) {\r\n\r\n\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, _gl.DEPTH_COMPONENT16, renderTarget.width, renderTarget.height );\r\n\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.RENDERBUFFER, renderbuffer );\r\n\r\n\t\t/* For some reason this is not working. Defaulting to RGBA4.\r\n\t\t} else if ( ! renderTarget.depthBuffer && renderTarget.stencilBuffer ) {\r\n\r\n\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, _gl.STENCIL_INDEX8, renderTarget.width, renderTarget.height );\r\n\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.STENCIL_ATTACHMENT, _gl.RENDERBUFFER, renderbuffer );\r\n\t\t*/\r\n\r\n\t\t} else if ( renderTarget.depthBuffer && renderTarget.stencilBuffer ) {\r\n\r\n\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, _gl.DEPTH_STENCIL, renderTarget.width, renderTarget.height );\r\n\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.RENDERBUFFER, renderbuffer );\r\n\r\n\t\t} else {\r\n\r\n\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, _gl.RGBA4, renderTarget.width, renderTarget.height );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tthis.setRenderTarget = function ( renderTarget ) {\r\n\r\n\t\tvar isCube = ( renderTarget instanceof THREE.WebGLRenderTargetCube );\r\n\r\n\t\tif ( renderTarget && properties.get( renderTarget ).__webglFramebuffer === undefined ) {\r\n\r\n\t\t\tvar renderTargetProperties = properties.get( renderTarget );\r\n\r\n\t\t\tif ( renderTarget.depthBuffer === undefined ) renderTarget.depthBuffer = true;\r\n\t\t\tif ( renderTarget.stencilBuffer === undefined ) renderTarget.stencilBuffer = true;\r\n\r\n\t\t\trenderTarget.addEventListener( 'dispose', onRenderTargetDispose );\r\n\r\n\t\t\trenderTargetProperties.__webglTexture = _gl.createTexture();\r\n\r\n\t\t\t_infoMemory.textures ++;\r\n\r\n\t\t\t// Setup texture, create render and frame buffers\r\n\r\n\t\t\tvar isTargetPowerOfTwo = THREE.Math.isPowerOfTwo( renderTarget.width ) && THREE.Math.isPowerOfTwo( renderTarget.height ),\r\n\t\t\t\tglFormat = paramThreeToGL( renderTarget.format ),\r\n\t\t\t\tglType = paramThreeToGL( renderTarget.type );\r\n\r\n\t\t\tif ( isCube ) {\r\n\r\n\t\t\t\trenderTargetProperties.__webglFramebuffer = [];\r\n\t\t\t\trenderTargetProperties.__webglRenderbuffer = [];\r\n\r\n\t\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, renderTargetProperties.__webglTexture );\r\n\r\n\t\t\t\tsetTextureParameters( _gl.TEXTURE_CUBE_MAP, renderTarget, isTargetPowerOfTwo );\r\n\r\n\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\r\n\r\n\t\t\t\t\trenderTargetProperties.__webglFramebuffer[ i ] = _gl.createFramebuffer();\r\n\t\t\t\t\trenderTargetProperties.__webglRenderbuffer[ i ] = _gl.createRenderbuffer();\r\n\r\n\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glFormat, renderTarget.width, renderTarget.height, 0, glFormat, glType, null );\r\n\r\n\t\t\t\t\tsetupFrameBuffer( renderTargetProperties.__webglFramebuffer[ i ], renderTarget, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i );\r\n\t\t\t\t\tsetupRenderBuffer( renderTargetProperties.__webglRenderbuffer[ i ], renderTarget );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( renderTarget.generateMipmaps && isTargetPowerOfTwo ) _gl.generateMipmap( _gl.TEXTURE_CUBE_MAP );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\trenderTargetProperties.__webglFramebuffer = _gl.createFramebuffer();\r\n\r\n\t\t\t\tif ( renderTarget.shareDepthFrom ) {\r\n\r\n\t\t\t\t\trenderTargetProperties.__webglRenderbuffer = renderTarget.shareDepthFrom.__webglRenderbuffer;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\trenderTargetProperties.__webglRenderbuffer = _gl.createRenderbuffer();\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tstate.bindTexture( _gl.TEXTURE_2D, renderTargetProperties.__webglTexture );\r\n\t\t\t\tsetTextureParameters( _gl.TEXTURE_2D, renderTarget, isTargetPowerOfTwo );\r\n\r\n\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, glFormat, renderTarget.width, renderTarget.height, 0, glFormat, glType, null );\r\n\r\n\t\t\t\tsetupFrameBuffer( renderTargetProperties.__webglFramebuffer, renderTarget, _gl.TEXTURE_2D );\r\n\r\n\t\t\t\tif ( renderTarget.shareDepthFrom ) {\r\n\r\n\t\t\t\t\tif ( renderTarget.depthBuffer && ! renderTarget.stencilBuffer ) {\r\n\r\n\t\t\t\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.RENDERBUFFER, renderTargetProperties.__webglRenderbuffer );\r\n\r\n\t\t\t\t\t} else if ( renderTarget.depthBuffer && renderTarget.stencilBuffer ) {\r\n\r\n\t\t\t\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.RENDERBUFFER, renderTargetProperties.__webglRenderbuffer );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tsetupRenderBuffer( renderTargetProperties.__webglRenderbuffer, renderTarget );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( renderTarget.generateMipmaps && isTargetPowerOfTwo ) _gl.generateMipmap( _gl.TEXTURE_2D );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// Release everything\r\n\r\n\t\t\tif ( isCube ) {\r\n\r\n\t\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, null );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tstate.bindTexture( _gl.TEXTURE_2D, null );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, null );\r\n\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, null );\r\n\r\n\t\t}\r\n\r\n\t\tvar framebuffer, width, height, vx, vy;\r\n\r\n\t\tif ( renderTarget ) {\r\n\r\n\t\t\tvar renderTargetProperties = properties.get( renderTarget );\r\n\r\n\t\t\tif ( isCube ) {\r\n\r\n\t\t\t\tframebuffer = renderTargetProperties.__webglFramebuffer[ renderTarget.activeCubeFace ];\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tframebuffer = renderTargetProperties.__webglFramebuffer;\r\n\r\n\t\t\t}\r\n\r\n\t\t\twidth = renderTarget.width;\r\n\t\t\theight = renderTarget.height;\r\n\r\n\t\t\tvx = 0;\r\n\t\t\tvy = 0;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tframebuffer = null;\r\n\r\n\t\t\twidth = _viewportWidth;\r\n\t\t\theight = _viewportHeight;\r\n\r\n\t\t\tvx = _viewportX;\r\n\t\t\tvy = _viewportY;\r\n\r\n\t\t}\r\n\r\n\t\tif ( framebuffer !== _currentFramebuffer ) {\r\n\r\n\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\r\n\t\t\t_gl.viewport( vx, vy, width, height );\r\n\r\n\t\t\t_currentFramebuffer = framebuffer;\r\n\r\n\t\t}\r\n\r\n\t\t_currentWidth = width;\r\n\t\t_currentHeight = height;\r\n\r\n\t};\r\n\r\n\tthis.readRenderTargetPixels = function( renderTarget, x, y, width, height, buffer ) {\r\n\r\n\t\tif ( ! ( renderTarget instanceof THREE.WebGLRenderTarget ) ) {\r\n\r\n\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.' );\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tif ( properties.get( renderTarget ).__webglFramebuffer ) {\r\n\r\n\t\t\tif ( renderTarget.format !== THREE.RGBAFormat ) {\r\n\r\n\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA format. readPixels can read only RGBA format.' );\r\n\t\t\t\treturn;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar restore = false;\r\n\r\n\t\t\tif ( properties.get( renderTarget ).__webglFramebuffer !== _currentFramebuffer ) {\r\n\r\n\t\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, properties.get( renderTarget ).__webglFramebuffer );\r\n\r\n\t\t\t\trestore = true;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( _gl.checkFramebufferStatus( _gl.FRAMEBUFFER ) === _gl.FRAMEBUFFER_COMPLETE ) {\r\n\r\n\t\t\t\t_gl.readPixels( x, y, width, height, _gl.RGBA, _gl.UNSIGNED_BYTE, buffer );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.' );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( restore ) {\r\n\r\n\t\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, _currentFramebuffer );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tfunction updateRenderTargetMipmap ( renderTarget ) {\r\n\r\n\t\tif ( renderTarget instanceof THREE.WebGLRenderTargetCube ) {\r\n\r\n\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, properties.get( renderTarget ).__webglTexture );\r\n\t\t\t_gl.generateMipmap( _gl.TEXTURE_CUBE_MAP );\r\n\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, null );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tstate.bindTexture( _gl.TEXTURE_2D, properties.get( renderTarget ).__webglTexture );\r\n\t\t\t_gl.generateMipmap( _gl.TEXTURE_2D );\r\n\t\t\tstate.bindTexture( _gl.TEXTURE_2D, null );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// Fallback filters for non-power-of-2 textures\r\n\r\n\tfunction filterFallback ( f ) {\r\n\r\n\t\tif ( f === THREE.NearestFilter || f === THREE.NearestMipMapNearestFilter || f === THREE.NearestMipMapLinearFilter ) {\r\n\r\n\t\t\treturn _gl.NEAREST;\r\n\r\n\t\t}\r\n\r\n\t\treturn _gl.LINEAR;\r\n\r\n\t}\r\n\r\n\t// Map three.js constants to WebGL constants\r\n\r\n\tfunction paramThreeToGL ( p ) {\r\n\r\n\t\tvar extension;\r\n\r\n\t\tif ( p === THREE.RepeatWrapping ) return _gl.REPEAT;\r\n\t\tif ( p === THREE.ClampToEdgeWrapping ) return _gl.CLAMP_TO_EDGE;\r\n\t\tif ( p === THREE.MirroredRepeatWrapping ) return _gl.MIRRORED_REPEAT;\r\n\r\n\t\tif ( p === THREE.NearestFilter ) return _gl.NEAREST;\r\n\t\tif ( p === THREE.NearestMipMapNearestFilter ) return _gl.NEAREST_MIPMAP_NEAREST;\r\n\t\tif ( p === THREE.NearestMipMapLinearFilter ) return _gl.NEAREST_MIPMAP_LINEAR;\r\n\r\n\t\tif ( p === THREE.LinearFilter ) return _gl.LINEAR;\r\n\t\tif ( p === THREE.LinearMipMapNearestFilter ) return _gl.LINEAR_MIPMAP_NEAREST;\r\n\t\tif ( p === THREE.LinearMipMapLinearFilter ) return _gl.LINEAR_MIPMAP_LINEAR;\r\n\r\n\t\tif ( p === THREE.UnsignedByteType ) return _gl.UNSIGNED_BYTE;\r\n\t\tif ( p === THREE.UnsignedShort4444Type ) return _gl.UNSIGNED_SHORT_4_4_4_4;\r\n\t\tif ( p === THREE.UnsignedShort5551Type ) return _gl.UNSIGNED_SHORT_5_5_5_1;\r\n\t\tif ( p === THREE.UnsignedShort565Type ) return _gl.UNSIGNED_SHORT_5_6_5;\r\n\r\n\t\tif ( p === THREE.ByteType ) return _gl.BYTE;\r\n\t\tif ( p === THREE.ShortType ) return _gl.SHORT;\r\n\t\tif ( p === THREE.UnsignedShortType ) return _gl.UNSIGNED_SHORT;\r\n\t\tif ( p === THREE.IntType ) return _gl.INT;\r\n\t\tif ( p === THREE.UnsignedIntType ) return _gl.UNSIGNED_INT;\r\n\t\tif ( p === THREE.FloatType ) return _gl.FLOAT;\r\n\r\n\t\textension = extensions.get( 'OES_texture_half_float' );\r\n\r\n\t\tif ( extension !== null ) {\r\n\r\n\t\t\tif ( p === THREE.HalfFloatType ) return extension.HALF_FLOAT_OES;\r\n\r\n\t\t}\r\n\r\n\t\tif ( p === THREE.AlphaFormat ) return _gl.ALPHA;\r\n\t\tif ( p === THREE.RGBFormat ) return _gl.RGB;\r\n\t\tif ( p === THREE.RGBAFormat ) return _gl.RGBA;\r\n\t\tif ( p === THREE.LuminanceFormat ) return _gl.LUMINANCE;\r\n\t\tif ( p === THREE.LuminanceAlphaFormat ) return _gl.LUMINANCE_ALPHA;\r\n\r\n\t\tif ( p === THREE.AddEquation ) return _gl.FUNC_ADD;\r\n\t\tif ( p === THREE.SubtractEquation ) return _gl.FUNC_SUBTRACT;\r\n\t\tif ( p === THREE.ReverseSubtractEquation ) return _gl.FUNC_REVERSE_SUBTRACT;\r\n\r\n\t\tif ( p === THREE.ZeroFactor ) return _gl.ZERO;\r\n\t\tif ( p === THREE.OneFactor ) return _gl.ONE;\r\n\t\tif ( p === THREE.SrcColorFactor ) return _gl.SRC_COLOR;\r\n\t\tif ( p === THREE.OneMinusSrcColorFactor ) return _gl.ONE_MINUS_SRC_COLOR;\r\n\t\tif ( p === THREE.SrcAlphaFactor ) return _gl.SRC_ALPHA;\r\n\t\tif ( p === THREE.OneMinusSrcAlphaFactor ) return _gl.ONE_MINUS_SRC_ALPHA;\r\n\t\tif ( p === THREE.DstAlphaFactor ) return _gl.DST_ALPHA;\r\n\t\tif ( p === THREE.OneMinusDstAlphaFactor ) return _gl.ONE_MINUS_DST_ALPHA;\r\n\r\n\t\tif ( p === THREE.DstColorFactor ) return _gl.DST_COLOR;\r\n\t\tif ( p === THREE.OneMinusDstColorFactor ) return _gl.ONE_MINUS_DST_COLOR;\r\n\t\tif ( p === THREE.SrcAlphaSaturateFactor ) return _gl.SRC_ALPHA_SATURATE;\r\n\r\n\t\textension = extensions.get( 'WEBGL_compressed_texture_s3tc' );\r\n\r\n\t\tif ( extension !== null ) {\r\n\r\n\t\t\tif ( p === THREE.RGB_S3TC_DXT1_Format ) return extension.COMPRESSED_RGB_S3TC_DXT1_EXT;\r\n\t\t\tif ( p === THREE.RGBA_S3TC_DXT1_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT1_EXT;\r\n\t\t\tif ( p === THREE.RGBA_S3TC_DXT3_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT3_EXT;\r\n\t\t\tif ( p === THREE.RGBA_S3TC_DXT5_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT5_EXT;\r\n\r\n\t\t}\r\n\r\n\t\textension = extensions.get( 'WEBGL_compressed_texture_pvrtc' );\r\n\r\n\t\tif ( extension !== null ) {\r\n\r\n\t\t\tif ( p === THREE.RGB_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;\r\n\t\t\tif ( p === THREE.RGB_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;\r\n\t\t\tif ( p === THREE.RGBA_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;\r\n\t\t\tif ( p === THREE.RGBA_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG;\r\n\r\n\t\t}\r\n\r\n\t\textension = extensions.get( 'EXT_blend_minmax' );\r\n\r\n\t\tif ( extension !== null ) {\r\n\r\n\t\t\tif ( p === THREE.MinEquation ) return extension.MIN_EXT;\r\n\t\t\tif ( p === THREE.MaxEquation ) return extension.MAX_EXT;\r\n\r\n\t\t}\r\n\r\n\t\treturn 0;\r\n\r\n\t}\r\n\r\n\t// DEPRECATED\r\n\r\n\tthis.supportsFloatTextures = function () {\r\n\r\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( \\'OES_texture_float\\' ).' );\r\n\t\treturn extensions.get( 'OES_texture_float' );\r\n\r\n\t};\r\n\r\n\tthis.supportsHalfFloatTextures = function () {\r\n\r\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( \\'OES_texture_half_float\\' ).' );\r\n\t\treturn extensions.get( 'OES_texture_half_float' );\r\n\r\n\t};\r\n\r\n\tthis.supportsStandardDerivatives = function () {\r\n\r\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( \\'OES_standard_derivatives\\' ).' );\r\n\t\treturn extensions.get( 'OES_standard_derivatives' );\r\n\r\n\t};\r\n\r\n\tthis.supportsCompressedTextureS3TC = function () {\r\n\r\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( \\'WEBGL_compressed_texture_s3tc\\' ).' );\r\n\t\treturn extensions.get( 'WEBGL_compressed_texture_s3tc' );\r\n\r\n\t};\r\n\r\n\tthis.supportsCompressedTexturePVRTC = function () {\r\n\r\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( \\'WEBGL_compressed_texture_pvrtc\\' ).' );\r\n\t\treturn extensions.get( 'WEBGL_compressed_texture_pvrtc' );\r\n\r\n\t};\r\n\r\n\tthis.supportsBlendMinMax = function () {\r\n\r\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( \\'EXT_blend_minmax\\' ).' );\r\n\t\treturn extensions.get( 'EXT_blend_minmax' );\r\n\r\n\t};\r\n\r\n\tthis.supportsVertexTextures = function () {\r\n\r\n\t\treturn capabilities.vertexTextures;\r\n\r\n\t};\r\n\r\n\tthis.supportsInstancedArrays = function () {\r\n\r\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( \\'ANGLE_instanced_arrays\\' ).' );\r\n\t\treturn extensions.get( 'ANGLE_instanced_arrays' );\r\n\r\n\t};\r\n\r\n\t//\r\n\r\n\tthis.initMaterial = function () {\r\n\r\n\t\tconsole.warn( 'THREE.WebGLRenderer: .initMaterial() has been removed.' );\r\n\r\n\t};\r\n\r\n\tthis.addPrePlugin = function () {\r\n\r\n\t\tconsole.warn( 'THREE.WebGLRenderer: .addPrePlugin() has been removed.' );\r\n\r\n\t};\r\n\r\n\tthis.addPostPlugin = function () {\r\n\r\n\t\tconsole.warn( 'THREE.WebGLRenderer: .addPostPlugin() has been removed.' );\r\n\r\n\t};\r\n\r\n\tthis.updateShadowMap = function () {\r\n\r\n\t\tconsole.warn( 'THREE.WebGLRenderer: .updateShadowMap() has been removed.' );\r\n\r\n\t};\r\n\r\n\tObject.defineProperties( this, {\r\n\t\tshadowMapEnabled: {\r\n\t\t\tget: function () {\r\n\r\n\t\t\t\treturn shadowMap.enabled;\r\n\r\n\t\t\t},\r\n\t\t\tset: function ( value ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled.' );\r\n\t\t\t\tshadowMap.enabled = value;\r\n\r\n\t\t\t}\r\n\t\t},\r\n\t\tshadowMapType: {\r\n\t\t\tget: function () {\r\n\r\n\t\t\t\treturn shadowMap.type;\r\n\r\n\t\t\t},\r\n\t\t\tset: function ( value ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type.' );\r\n\t\t\t\tshadowMap.type = value;\r\n\r\n\t\t\t}\r\n\t\t},\r\n\t\tshadowMapCullFace: {\r\n\t\t\tget: function () {\r\n\r\n\t\t\t\treturn shadowMap.cullFace;\r\n\r\n\t\t\t},\r\n\t\t\tset: function ( value ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapCullFace is now .shadowMap.cullFace.' );\r\n\t\t\t\tshadowMap.cullFace = value;\r\n\r\n\t\t\t}\r\n\t\t},\r\n\t\tshadowMapDebug: {\r\n\t\t\tget: function () {\r\n\r\n\t\t\t\treturn shadowMap.debug;\r\n\r\n\t\t\t},\r\n\t\t\tset: function ( value ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapDebug is now .shadowMap.debug.' );\r\n\t\t\t\tshadowMap.debug = value;\r\n\r\n\t\t\t}\r\n\t\t}\r\n\t} );\r\n\r\n};\r\n\r\n// File:src/renderers/WebGLRenderTarget.js\r\n\r\n/**\r\n * @author szimek / https://github.com/szimek/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.WebGLRenderTarget = function ( width, height, options ) {\r\n\r\n\tthis.uuid = THREE.Math.generateUUID();\r\n\r\n\tthis.width = width;\r\n\tthis.height = height;\r\n\r\n\toptions = options || {};\r\n\r\n\tthis.wrapS = options.wrapS !== undefined ? options.wrapS : THREE.ClampToEdgeWrapping;\r\n\tthis.wrapT = options.wrapT !== undefined ? options.wrapT : THREE.ClampToEdgeWrapping;\r\n\r\n\tthis.magFilter = options.magFilter !== undefined ? options.magFilter : THREE.LinearFilter;\r\n\tthis.minFilter = options.minFilter !== undefined ? options.minFilter : THREE.LinearMipMapLinearFilter;\r\n\r\n\tthis.anisotropy = options.anisotropy !== undefined ? options.anisotropy : 1;\r\n\r\n\tthis.offset = new THREE.Vector2( 0, 0 );\r\n\tthis.repeat = new THREE.Vector2( 1, 1 );\r\n\r\n\tthis.format = options.format !== undefined ? options.format : THREE.RGBAFormat;\r\n\tthis.type = options.type !== undefined ? options.type : THREE.UnsignedByteType;\r\n\r\n\tthis.depthBuffer = options.depthBuffer !== undefined ? options.depthBuffer : true;\r\n\tthis.stencilBuffer = options.stencilBuffer !== undefined ? options.stencilBuffer : true;\r\n\r\n\tthis.generateMipmaps = true;\r\n\r\n\tthis.shareDepthFrom = options.shareDepthFrom !== undefined ? options.shareDepthFrom : null;\r\n\r\n};\r\n\r\nTHREE.WebGLRenderTarget.prototype = {\r\n\r\n\tconstructor: THREE.WebGLRenderTarget,\r\n\r\n\tsetSize: function ( width, height ) {\r\n\r\n\t\tif ( this.width !== width || this.height !== height ) {\r\n\r\n\t\t\tthis.width = width;\r\n\t\t\tthis.height = height;\r\n\r\n\t\t\tthis.dispose();\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t},\r\n\r\n\tcopy: function ( source ) {\r\n\r\n\t\tthis.width = source.width;\r\n\t\tthis.height = source.height;\r\n\r\n\t\tthis.wrapS = source.wrapS;\r\n\t\tthis.wrapT = source.wrapT;\r\n\r\n\t\tthis.magFilter = source.magFilter;\r\n\t\tthis.minFilter = source.minFilter;\r\n\r\n\t\tthis.anisotropy = source.anisotropy;\r\n\r\n\t\tthis.offset.copy( source.offset );\r\n\t\tthis.repeat.copy( source.repeat );\r\n\r\n\t\tthis.format = source.format;\r\n\t\tthis.type = source.type;\r\n\r\n\t\tthis.depthBuffer = source.depthBuffer;\r\n\t\tthis.stencilBuffer = source.stencilBuffer;\r\n\r\n\t\tthis.generateMipmaps = source.generateMipmaps;\r\n\r\n\t\tthis.shareDepthFrom = source.shareDepthFrom;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tdispose: function () {\r\n\r\n\t\tthis.dispatchEvent( { type: 'dispose' } );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.EventDispatcher.prototype.apply( THREE.WebGLRenderTarget.prototype );\r\n\r\n// File:src/renderers/WebGLRenderTargetCube.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com\r\n */\r\n\r\nTHREE.WebGLRenderTargetCube = function ( width, height, options ) {\r\n\r\n\tTHREE.WebGLRenderTarget.call( this, width, height, options );\r\n\r\n\tthis.activeCubeFace = 0; // PX 0, NX 1, PY 2, NY 3, PZ 4, NZ 5\r\n\r\n};\r\n\r\nTHREE.WebGLRenderTargetCube.prototype = Object.create( THREE.WebGLRenderTarget.prototype );\r\nTHREE.WebGLRenderTargetCube.prototype.constructor = THREE.WebGLRenderTargetCube;\r\n\r\n// File:src/renderers/webgl/WebGLBufferRenderer.js\r\n\r\n/**\r\n* @author mrdoob / http://mrdoob.com/\r\n*/\r\n\r\nTHREE.WebGLBufferRenderer = function ( _gl, extensions, _infoRender ) {\r\n\r\n\tvar mode;\r\n\r\n\tfunction setMode( value ) {\r\n\r\n\t\tmode = value;\r\n\r\n\t}\r\n\r\n\tfunction render( start, count ) {\r\n\r\n\t\t_gl.drawArrays( mode, start, count );\r\n\r\n\t\t_infoRender.calls ++;\r\n\t\t_infoRender.vertices += count;\r\n\t\tif ( mode === _gl.TRIANGLES ) _infoRender.faces += count / 3;\r\n\r\n\t}\r\n\r\n\tfunction renderInstances( geometry ) {\r\n\r\n\t\tvar extension = extensions.get( 'ANGLE_instanced_arrays' );\r\n\r\n\t\tif ( extension === null ) {\r\n\r\n\t\t\tconsole.error( 'THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tvar position = geometry.attributes.position;\r\n\r\n\t\tif ( position instanceof THREE.InterleavedBufferAttribute ) {\r\n\r\n\t\t\textension.drawArraysInstancedANGLE( mode, 0, position.data.count, geometry.maxInstancedCount );\r\n\r\n\t\t} else {\r\n\r\n\t\t\textension.drawArraysInstancedANGLE( mode, 0, position.count, geometry.maxInstancedCount );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tthis.setMode = setMode;\r\n\tthis.render = render;\r\n\tthis.renderInstances = renderInstances;\r\n\r\n};\r\n\r\n// File:src/renderers/webgl/WebGLIndexedBufferRenderer.js\r\n\r\n/**\r\n* @author mrdoob / http://mrdoob.com/\r\n*/\r\n\r\nTHREE.WebGLIndexedBufferRenderer = function ( _gl, extensions, _infoRender ) {\r\n\r\n\tvar mode;\r\n\r\n\tfunction setMode( value ) {\r\n\r\n\t\tmode = value;\r\n\r\n\t}\r\n\r\n\tvar type, size;\r\n\r\n\tfunction setIndex( index ) {\r\n\r\n\t\tif ( index.array instanceof Uint32Array && extensions.get( 'OES_element_index_uint' ) ) {\r\n\r\n\t\t\ttype = _gl.UNSIGNED_INT;\r\n\t\t\tsize = 4;\r\n\r\n\t\t} else {\r\n\r\n\t\t\ttype = _gl.UNSIGNED_SHORT;\r\n\t\t\tsize = 2;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction render( start, count ) {\r\n\r\n\t\t_gl.drawElements( mode, count, type, start * size );\r\n\r\n\t\t_infoRender.calls ++;\r\n\t\t_infoRender.vertices += count;\r\n\t\tif ( mode === _gl.TRIANGLES ) _infoRender.faces += count / 3;\r\n\r\n\t}\r\n\r\n\tfunction renderInstances( geometry ) {\r\n\r\n\t\tvar extension = extensions.get( 'ANGLE_instanced_arrays' );\r\n\r\n\t\tif ( extension === null ) {\r\n\r\n\t\t\tconsole.error( 'THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tvar index = geometry.index;\r\n\r\n\t\textension.drawElementsInstancedANGLE( mode, index.array.length, type, 0, geometry.maxInstancedCount );\r\n\r\n\t}\r\n\r\n\tthis.setMode = setMode;\r\n\tthis.setIndex = setIndex;\r\n\tthis.render = render;\r\n\tthis.renderInstances = renderInstances;\r\n\r\n};\r\n\r\n// File:src/renderers/webgl/WebGLExtensions.js\r\n\r\n/**\r\n* @author mrdoob / http://mrdoob.com/\r\n*/\r\n\r\nTHREE.WebGLExtensions = function ( gl ) {\r\n\r\n\tvar extensions = {};\r\n\r\n\tthis.get = function ( name ) {\r\n\r\n\t\tif ( extensions[ name ] !== undefined ) {\r\n\r\n\t\t\treturn extensions[ name ];\r\n\r\n\t\t}\r\n\r\n\t\tvar extension;\r\n\r\n\t\tswitch ( name ) {\r\n\r\n\t\t\tcase 'EXT_texture_filter_anisotropic':\r\n\t\t\t\textension = gl.getExtension( 'EXT_texture_filter_anisotropic' ) || gl.getExtension( 'MOZ_EXT_texture_filter_anisotropic' ) || gl.getExtension( 'WEBKIT_EXT_texture_filter_anisotropic' );\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'WEBGL_compressed_texture_s3tc':\r\n\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'MOZ_WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_s3tc' );\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'WEBGL_compressed_texture_pvrtc':\r\n\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_pvrtc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_pvrtc' );\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tdefault:\r\n\t\t\t\textension = gl.getExtension( name );\r\n\r\n\t\t}\r\n\r\n\t\tif ( extension === null ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: ' + name + ' extension not supported.' );\r\n\r\n\t\t}\r\n\r\n\t\textensions[ name ] = extension;\r\n\r\n\t\treturn extension;\r\n\r\n\t};\r\n\r\n};\r\n\r\n// File:src/renderers/webgl/WebGLCapabilities.js\r\n\r\nTHREE.WebGLCapabilities = function ( gl, extensions, parameters ) {\r\n\r\n\tfunction getMaxPrecision( precision ) {\r\n\r\n\t\tif ( precision === 'highp' ) {\r\n\r\n\t\t\tif ( gl.getShaderPrecisionFormat( gl.VERTEX_SHADER, gl.HIGH_FLOAT ).precision > 0 &&\r\n\t\t\t     gl.getShaderPrecisionFormat( gl.FRAGMENT_SHADER, gl.HIGH_FLOAT ).precision > 0 ) {\r\n\r\n\t\t\t\treturn 'highp';\r\n\r\n\t\t\t}\r\n\r\n\t\t\tprecision = 'mediump';\r\n\r\n\t\t}\r\n\r\n\t\tif ( precision === 'mediump' ) {\r\n\r\n\t\t\tif ( gl.getShaderPrecisionFormat( gl.VERTEX_SHADER, gl.MEDIUM_FLOAT ).precision > 0 &&\r\n\t\t\t     gl.getShaderPrecisionFormat( gl.FRAGMENT_SHADER, gl.MEDIUM_FLOAT ).precision > 0 ) {\r\n\r\n\t\t\t\treturn 'mediump';\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn 'lowp';\r\n\r\n\t}\r\n\r\n\tthis.getMaxPrecision = getMaxPrecision;\r\n\r\n\tthis.precision = parameters.precision !== undefined ? parameters.precision : 'highp',\r\n\tthis.logarithmicDepthBuffer = parameters.logarithmicDepthBuffer !== undefined ? parameters.logarithmicDepthBuffer : false;\r\n\r\n\tthis.maxTextures = gl.getParameter( gl.MAX_TEXTURE_IMAGE_UNITS );\r\n\tthis.maxVertexTextures = gl.getParameter( gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS );\r\n\tthis.maxTextureSize = gl.getParameter( gl.MAX_TEXTURE_SIZE );\r\n\tthis.maxCubemapSize = gl.getParameter( gl.MAX_CUBE_MAP_TEXTURE_SIZE );\r\n\r\n\tthis.maxAttributes = gl.getParameter( gl.MAX_VERTEX_ATTRIBS );\r\n\tthis.maxVertexUniforms = gl.getParameter( gl.MAX_VERTEX_UNIFORM_VECTORS );\r\n\tthis.maxVaryings = gl.getParameter( gl.MAX_VARYING_VECTORS );\r\n\tthis.maxFragmentUniforms = gl.getParameter( gl.MAX_FRAGMENT_UNIFORM_VECTORS );\r\n\r\n\tthis.vertexTextures = this.maxVertexTextures > 0;\r\n\tthis.floatFragmentTextures = !! extensions.get( 'OES_texture_float' );\r\n\tthis.floatVertexTextures = this.vertexTextures && this.floatFragmentTextures;\r\n\r\n\tvar _maxPrecision = getMaxPrecision( this.precision );\r\n\r\n\tif ( _maxPrecision !== this.precision ) {\r\n\r\n\t\tconsole.warn( 'THREE.WebGLRenderer:', this.precision, 'not supported, using', _maxPrecision, 'instead.' );\r\n\t\tthis.precision = _maxPrecision;\r\n\r\n\t}\r\n\r\n\tif ( this.logarithmicDepthBuffer ) {\r\n\r\n\t\tthis.logarithmicDepthBuffer = !! extensions.get( 'EXT_frag_depth' );\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/renderers/webgl/WebGLGeometries.js\r\n\r\n/**\r\n* @author mrdoob / http://mrdoob.com/\r\n*/\r\n\r\nTHREE.WebGLGeometries = function ( gl, properties, info ) {\r\n\r\n\tvar geometries = {};\r\n\r\n\tfunction get( object ) {\r\n\r\n\t\tvar geometry = object.geometry;\r\n\r\n\t\tif ( geometries[ geometry.id ] !== undefined ) {\r\n\r\n\t\t\treturn geometries[ geometry.id ];\r\n\r\n\t\t}\r\n\r\n\t\tgeometry.addEventListener( 'dispose', onGeometryDispose );\r\n\r\n\t\tvar buffergeometry;\r\n\r\n\t\tif ( geometry instanceof THREE.BufferGeometry ) {\r\n\r\n\t\t\tbuffergeometry = geometry;\r\n\r\n\t\t} else if ( geometry instanceof THREE.Geometry ) {\r\n\r\n\t\t\tif ( geometry._bufferGeometry === undefined ) {\r\n\r\n\t\t\t\tgeometry._bufferGeometry = new THREE.BufferGeometry().setFromObject( object );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tbuffergeometry = geometry._bufferGeometry;\r\n\r\n\t\t}\r\n\r\n\t\tgeometries[ geometry.id ] = buffergeometry;\r\n\r\n\t\tinfo.memory.geometries ++;\r\n\r\n\t\treturn buffergeometry;\r\n\r\n\t}\r\n\r\n\tfunction onGeometryDispose( event ) {\r\n\r\n\t\tvar geometry = event.target;\r\n\t\tvar buffergeometry = geometries[ geometry.id ];\r\n\r\n\t\tdeleteAttributes( buffergeometry.attributes );\r\n\r\n\t\tgeometry.removeEventListener( 'dispose', onGeometryDispose );\r\n\r\n\t\tdelete geometries[ geometry.id ];\r\n\r\n\t\tvar property = properties.get( geometry );\r\n\t\tif ( property.wireframe ) deleteAttribute( property.wireframe );\r\n\r\n\t\tinfo.memory.geometries --;\r\n\r\n\t}\r\n\r\n\tfunction getAttributeBuffer( attribute ) {\r\n\r\n\t\tif ( attribute instanceof THREE.InterleavedBufferAttribute ) {\r\n\r\n\t\t\treturn properties.get( attribute.data ).__webglBuffer;\r\n\r\n\t\t}\r\n\r\n\t\treturn properties.get( attribute ).__webglBuffer;\r\n\r\n\t}\r\n\r\n\tfunction deleteAttribute( attribute ) {\r\n\r\n\t\tvar buffer = getAttributeBuffer( attribute );\r\n\r\n\t\tif ( buffer !== undefined ) {\r\n\r\n\t\t\tgl.deleteBuffer( buffer );\r\n\t\t\tremoveAttributeBuffer( attribute );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction deleteAttributes( attributes ) {\r\n\r\n\t\tfor ( var name in attributes ) {\r\n\r\n\t\t\tdeleteAttribute( attributes[ name ] );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction removeAttributeBuffer( attribute ) {\r\n\r\n\t\tif ( attribute instanceof THREE.InterleavedBufferAttribute ) {\r\n\r\n\t\t\tproperties.delete( attribute.data );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tproperties.delete( attribute );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tthis.get = get;\r\n\r\n};\r\n\r\n// File:src/renderers/webgl/WebGLObjects.js\r\n\r\n/**\r\n* @author mrdoob / http://mrdoob.com/\r\n*/\r\n\r\nTHREE.WebGLObjects = function ( gl, properties, info ) {\r\n\r\n\tvar geometries = new THREE.WebGLGeometries( gl, properties, info );\r\n\r\n\t//\r\n\r\n\tfunction update( object ) {\r\n\r\n\t\t// TODO: Avoid updating twice (when using shadowMap). Maybe add frame counter.\r\n\r\n\t\tvar geometry = geometries.get( object );\r\n\r\n\t\tif ( object.geometry instanceof THREE.Geometry ) {\r\n\r\n\t\t\tgeometry.updateFromObject( object );\r\n\r\n\t\t}\r\n\r\n\t\tvar index = geometry.index;\r\n\t\tvar attributes = geometry.attributes;\r\n\r\n\t\tif ( index !== null ) {\r\n\r\n\t\t\tupdateAttribute( index, gl.ELEMENT_ARRAY_BUFFER );\r\n\r\n\t\t}\r\n\r\n\t\tfor ( var name in attributes ) {\r\n\r\n\t\t\tupdateAttribute( attributes[ name ], gl.ARRAY_BUFFER );\r\n\r\n\t\t}\r\n\r\n\t\t// morph targets\r\n\r\n\t\tvar morphAttributes = geometry.morphAttributes;\r\n\r\n\t\tfor ( var name in morphAttributes ) {\r\n\r\n\t\t\tvar array = morphAttributes[ name ];\r\n\r\n\t\t\tfor ( var i = 0, l = array.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tupdateAttribute( array[ i ], gl.ARRAY_BUFFER );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn geometry;\r\n\r\n\t}\r\n\r\n\tfunction updateAttribute( attribute, bufferType ) {\r\n\r\n\t\tvar data = ( attribute instanceof THREE.InterleavedBufferAttribute ) ? attribute.data : attribute;\r\n\r\n\t\tvar attributeProperties = properties.get( data );\r\n\r\n\t\tif ( attributeProperties.__webglBuffer === undefined ) {\r\n\r\n\t\t\tcreateBuffer( attributeProperties, data, bufferType );\r\n\r\n\t\t} else if ( attributeProperties.version !== data.version ) {\r\n\r\n\t\t\tupdateBuffer( attributeProperties, data, bufferType );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction createBuffer( attributeProperties, data, bufferType ) {\r\n\r\n\t\tattributeProperties.__webglBuffer = gl.createBuffer();\r\n\t\tgl.bindBuffer( bufferType, attributeProperties.__webglBuffer );\r\n\r\n\t\tvar usage = data.dynamic ? gl.DYNAMIC_DRAW : gl.STATIC_DRAW;\r\n\r\n\t\tgl.bufferData( bufferType, data.array, usage );\r\n\r\n\t\tattributeProperties.version = data.version;\r\n\r\n\t}\r\n\r\n\tfunction updateBuffer( attributeProperties, data, bufferType ) {\r\n\r\n\t\tgl.bindBuffer( bufferType, attributeProperties.__webglBuffer );\r\n\r\n\t\tif ( data.dynamic === false || data.updateRange.count === - 1 ) {\r\n\r\n\t\t\t// Not using update ranges\r\n\r\n\t\t\tgl.bufferSubData( bufferType, 0, data.array );\r\n\r\n\t\t} else if ( data.updateRange.count === 0 ) {\r\n\r\n\t\t\tconsole.error( 'THREE.WebGLObjects.updateBuffer: dynamic THREE.BufferAttribute marked as needsUpdate but updateRange.count is 0, ensure you are using set methods or updating manually.' );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tgl.bufferSubData( bufferType, data.updateRange.offset * data.array.BYTES_PER_ELEMENT,\r\n\t\t\t\t\t\t\t  data.array.subarray( data.updateRange.offset, data.updateRange.offset + data.updateRange.count ) );\r\n\r\n\t\t\tdata.updateRange.count = 0; // reset range\r\n\r\n\t\t}\r\n\r\n\t\tattributeProperties.version = data.version;\r\n\r\n\t}\r\n\r\n\tfunction getAttributeBuffer( attribute ) {\r\n\r\n\t\tif ( attribute instanceof THREE.InterleavedBufferAttribute ) {\r\n\r\n\t\t\treturn properties.get( attribute.data ).__webglBuffer;\r\n\r\n\t\t}\r\n\r\n\t\treturn properties.get( attribute ).__webglBuffer;\r\n\r\n\t}\r\n\r\n\tfunction getWireframeAttribute( geometry ) {\r\n\r\n\t\tvar property = properties.get( geometry );\r\n\r\n\t\tif ( property.wireframe !== undefined ) {\r\n\r\n\t\t\treturn property.wireframe;\r\n\r\n\t\t}\r\n\r\n\t\tvar indices = [];\r\n\r\n\t\tvar index = geometry.index;\r\n\t\tvar attributes = geometry.attributes;\r\n\t\tvar position = attributes.position;\r\n\r\n\t\t// console.time( 'wireframe' );\r\n\r\n\t\tif ( index !== null ) {\r\n\r\n\t\t\tvar edges = {};\r\n\t\t\tvar array = index.array;\r\n\r\n\t\t\tfor ( var i = 0, l = array.length; i < l; i += 3 ) {\r\n\r\n\t\t\t\tvar a = array[ i + 0 ];\r\n\t\t\t\tvar b = array[ i + 1 ];\r\n\t\t\t\tvar c = array[ i + 2 ];\r\n\r\n\t\t\t\tif ( checkEdge( edges, a, b ) ) indices.push( a, b );\r\n\t\t\t\tif ( checkEdge( edges, b, c ) ) indices.push( b, c );\r\n\t\t\t\tif ( checkEdge( edges, c, a ) ) indices.push( c, a );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\tvar array = attributes.position.array;\r\n\r\n\t\t\tfor ( var i = 0, l = ( array.length / 3 ) - 1; i < l; i += 3 ) {\r\n\r\n\t\t\t\tvar a = i + 0;\r\n\t\t\t\tvar b = i + 1;\r\n\t\t\t\tvar c = i + 2;\r\n\r\n\t\t\t\tindices.push( a, b, b, c, c, a );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// console.timeEnd( 'wireframe' );\r\n\r\n\t\tvar TypeArray = position.count > 65535 ? Uint32Array : Uint16Array;\r\n\t\tvar attribute = new THREE.BufferAttribute( new TypeArray( indices ), 1 );\r\n\r\n\t\tupdateAttribute( attribute, gl.ELEMENT_ARRAY_BUFFER );\r\n\r\n\t\tproperty.wireframe = attribute;\r\n\r\n\t\treturn attribute;\r\n\r\n\t}\r\n\r\n\tfunction checkEdge( edges, a, b ) {\r\n\r\n\t\tif ( a > b ) {\r\n\r\n\t\t\tvar tmp = a;\r\n\t\t\ta = b;\r\n\t\t\tb = tmp;\r\n\r\n\t\t}\r\n\r\n\t\tvar list = edges[ a ];\r\n\r\n\t\tif ( list === undefined ) {\r\n\r\n\t\t\tedges[ a ] = [ b ];\r\n\t\t\treturn true;\r\n\r\n\t\t} else if ( list.indexOf( b ) === -1 ) {\r\n\r\n\t\t\tlist.push( b );\r\n\t\t\treturn true;\r\n\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\r\n\t}\r\n\r\n\tthis.getAttributeBuffer = getAttributeBuffer;\r\n\tthis.getWireframeAttribute = getWireframeAttribute;\r\n\r\n\tthis.update = update;\r\n\r\n};\r\n\r\n// File:src/renderers/webgl/WebGLProgram.js\r\n\r\nTHREE.WebGLProgram = ( function () {\r\n\r\n\tvar programIdCount = 0;\r\n\r\n\tfunction generateDefines( defines ) {\r\n\r\n\t\tvar chunks = [];\r\n\r\n\t\tfor ( var name in defines ) {\r\n\r\n\t\t\tvar value = defines[ name ];\r\n\r\n\t\t\tif ( value === false ) continue;\r\n\r\n\t\t\tchunks.push( '#define ' + name + ' ' + value );\r\n\r\n\t\t}\r\n\r\n\t\treturn chunks.join( '\\n' );\r\n\r\n\t}\r\n\r\n\tfunction fetchUniformLocations( gl, program, identifiers ) {\r\n\r\n\t\tvar uniforms = {};\r\n\r\n\t\tvar n = gl.getProgramParameter( program, gl.ACTIVE_UNIFORMS );\r\n\r\n\t\tfor ( var i = 0; i < n; i ++ ) {\r\n\r\n\t\t\tvar info = gl.getActiveUniform( program, i );\r\n\t\t\tvar name = info.name;\r\n\t\t\tvar location = gl.getUniformLocation( program, name );\r\n\r\n\t\t\t// console.log(\"THREE.WebGLProgram: ACTIVE UNIFORM:\", name);\r\n\r\n\t\t\tvar suffixPos = name.lastIndexOf( '[0]' );\r\n\t\t\tif ( suffixPos !== - 1 && suffixPos === name.length - 3 ) {\r\n\r\n\t\t\t\tuniforms[ name.substr( 0, suffixPos ) ] = location;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tuniforms[ name ] = location;\r\n\r\n\t\t}\r\n\r\n\t\treturn uniforms;\r\n\r\n\t}\r\n\r\n\tfunction fetchAttributeLocations( gl, program, identifiers ) {\r\n\r\n\t\tvar attributes = {};\r\n\r\n\t\tvar n = gl.getProgramParameter( program, gl.ACTIVE_ATTRIBUTES );\r\n\r\n\t\tfor ( var i = 0; i < n; i ++ ) {\r\n\r\n\t\t\tvar info = gl.getActiveAttrib( program, i );\r\n\t\t\tvar name = info.name;\r\n\r\n\t\t\t// console.log(\"THREE.WebGLProgram: ACTIVE VERTEX ATTRIBUTE:\", name, i );\r\n\r\n\t\t\tattributes[ name ] = gl.getAttribLocation( program, name );\r\n\r\n\t\t}\r\n\r\n\t\treturn attributes;\r\n\r\n\t}\r\n\r\n\tfunction filterEmptyLine( string ) {\r\n\r\n\t\treturn string !== '';\r\n\r\n\t}\r\n\r\n\treturn function WebGLProgram( renderer, code, material, parameters ) {\r\n\r\n\t\tvar gl = renderer.context;\r\n\r\n\t\tvar defines = material.defines;\r\n\r\n\t\tvar vertexShader = material.__webglShader.vertexShader;\r\n\t\tvar fragmentShader = material.__webglShader.fragmentShader;\r\n\r\n\t\tvar shadowMapTypeDefine = 'SHADOWMAP_TYPE_BASIC';\r\n\r\n\t\tif ( parameters.shadowMapType === THREE.PCFShadowMap ) {\r\n\r\n\t\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF';\r\n\r\n\t\t} else if ( parameters.shadowMapType === THREE.PCFSoftShadowMap ) {\r\n\r\n\t\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF_SOFT';\r\n\r\n\t\t}\r\n\r\n\t\tvar envMapTypeDefine = 'ENVMAP_TYPE_CUBE';\r\n\t\tvar envMapModeDefine = 'ENVMAP_MODE_REFLECTION';\r\n\t\tvar envMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\r\n\r\n\t\tif ( parameters.envMap ) {\r\n\r\n\t\t\tswitch ( material.envMap.mapping ) {\r\n\r\n\t\t\t\tcase THREE.CubeReflectionMapping:\r\n\t\t\t\tcase THREE.CubeRefractionMapping:\r\n\t\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE';\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase THREE.EquirectangularReflectionMapping:\r\n\t\t\t\tcase THREE.EquirectangularRefractionMapping:\r\n\t\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_EQUIREC';\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase THREE.SphericalReflectionMapping:\r\n\t\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_SPHERE';\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tswitch ( material.envMap.mapping ) {\r\n\r\n\t\t\t\tcase THREE.CubeRefractionMapping:\r\n\t\t\t\tcase THREE.EquirectangularRefractionMapping:\r\n\t\t\t\t\tenvMapModeDefine = 'ENVMAP_MODE_REFRACTION';\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tswitch ( material.combine ) {\r\n\r\n\t\t\t\tcase THREE.MultiplyOperation:\r\n\t\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase THREE.MixOperation:\r\n\t\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MIX';\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase THREE.AddOperation:\r\n\t\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_ADD';\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tvar gammaFactorDefine = ( renderer.gammaFactor > 0 ) ? renderer.gammaFactor : 1.0;\r\n\r\n\t\t// console.log( 'building new program ' );\r\n\r\n\t\t//\r\n\r\n\t\tvar customDefines = generateDefines( defines );\r\n\r\n\t\t//\r\n\r\n\t\tvar program = gl.createProgram();\r\n\r\n\t\tvar prefixVertex, prefixFragment;\r\n\r\n\t\tif ( material instanceof THREE.RawShaderMaterial ) {\r\n\r\n\t\t\tprefixVertex = '';\r\n\t\t\tprefixFragment = '';\r\n\r\n\t\t} else {\r\n\r\n\t\t\tprefixVertex = [\r\n\r\n\t\t\t\t'precision ' + parameters.precision + ' float;',\r\n\t\t\t\t'precision ' + parameters.precision + ' int;',\r\n\r\n\t\t\t\t'#define SHADER_NAME ' + material.__webglShader.name,\r\n\r\n\t\t\t\tcustomDefines,\r\n\r\n\t\t\t\tparameters.supportsVertexTextures ? '#define VERTEX_TEXTURES' : '',\r\n\r\n\t\t\t\trenderer.gammaInput ? '#define GAMMA_INPUT' : '',\r\n\t\t\t\trenderer.gammaOutput ? '#define GAMMA_OUTPUT' : '',\r\n\t\t\t\t'#define GAMMA_FACTOR ' + gammaFactorDefine,\r\n\r\n\t\t\t\t'#define MAX_DIR_LIGHTS ' + parameters.maxDirLights,\r\n\t\t\t\t'#define MAX_POINT_LIGHTS ' + parameters.maxPointLights,\r\n\t\t\t\t'#define MAX_SPOT_LIGHTS ' + parameters.maxSpotLights,\r\n\t\t\t\t'#define MAX_HEMI_LIGHTS ' + parameters.maxHemiLights,\r\n\r\n\t\t\t\t'#define MAX_SHADOWS ' + parameters.maxShadows,\r\n\r\n\t\t\t\t'#define MAX_BONES ' + parameters.maxBones,\r\n\r\n\t\t\t\tparameters.map ? '#define USE_MAP' : '',\r\n\t\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\r\n\t\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\r\n\t\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\r\n\t\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\r\n\t\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\r\n\t\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\r\n\t\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\r\n\t\t\t\tparameters.displacementMap && parameters.supportsVertexTextures ? '#define USE_DISPLACEMENTMAP' : '',\r\n\t\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\r\n\t\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\r\n\t\t\t\tparameters.vertexColors ? '#define USE_COLOR' : '',\r\n\r\n\t\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\r\n\r\n\t\t\t\tparameters.skinning ? '#define USE_SKINNING' : '',\r\n\t\t\t\tparameters.useVertexTexture ? '#define BONE_TEXTURE' : '',\r\n\r\n\t\t\t\tparameters.morphTargets ? '#define USE_MORPHTARGETS' : '',\r\n\t\t\t\tparameters.morphNormals && parameters.flatShading === false ? '#define USE_MORPHNORMALS' : '',\r\n\t\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\r\n\t\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\r\n\r\n\t\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\r\n\t\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\r\n\t\t\t\tparameters.shadowMapDebug ? '#define SHADOWMAP_DEBUG' : '',\r\n\r\n\t\t\t\tparameters.sizeAttenuation ? '#define USE_SIZEATTENUATION' : '',\r\n\r\n\t\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\r\n\t\t\t\tparameters.logarithmicDepthBuffer && renderer.extensions.get( 'EXT_frag_depth' ) ? '#define USE_LOGDEPTHBUF_EXT' : '',\r\n\r\n\r\n\t\t\t\t'uniform mat4 modelMatrix;',\r\n\t\t\t\t'uniform mat4 modelViewMatrix;',\r\n\t\t\t\t'uniform mat4 projectionMatrix;',\r\n\t\t\t\t'uniform mat4 viewMatrix;',\r\n\t\t\t\t'uniform mat3 normalMatrix;',\r\n\t\t\t\t'uniform vec3 cameraPosition;',\r\n\r\n\t\t\t\t'attribute vec3 position;',\r\n\t\t\t\t'attribute vec3 normal;',\r\n\t\t\t\t'attribute vec2 uv;',\r\n\r\n\t\t\t\t'#ifdef USE_COLOR',\r\n\r\n\t\t\t\t'\tattribute vec3 color;',\r\n\r\n\t\t\t\t'#endif',\r\n\r\n\t\t\t\t'#ifdef USE_MORPHTARGETS',\r\n\r\n\t\t\t\t'\tattribute vec3 morphTarget0;',\r\n\t\t\t\t'\tattribute vec3 morphTarget1;',\r\n\t\t\t\t'\tattribute vec3 morphTarget2;',\r\n\t\t\t\t'\tattribute vec3 morphTarget3;',\r\n\r\n\t\t\t\t'\t#ifdef USE_MORPHNORMALS',\r\n\r\n\t\t\t\t'\t\tattribute vec3 morphNormal0;',\r\n\t\t\t\t'\t\tattribute vec3 morphNormal1;',\r\n\t\t\t\t'\t\tattribute vec3 morphNormal2;',\r\n\t\t\t\t'\t\tattribute vec3 morphNormal3;',\r\n\r\n\t\t\t\t'\t#else',\r\n\r\n\t\t\t\t'\t\tattribute vec3 morphTarget4;',\r\n\t\t\t\t'\t\tattribute vec3 morphTarget5;',\r\n\t\t\t\t'\t\tattribute vec3 morphTarget6;',\r\n\t\t\t\t'\t\tattribute vec3 morphTarget7;',\r\n\r\n\t\t\t\t'\t#endif',\r\n\r\n\t\t\t\t'#endif',\r\n\r\n\t\t\t\t'#ifdef USE_SKINNING',\r\n\r\n\t\t\t\t'\tattribute vec4 skinIndex;',\r\n\t\t\t\t'\tattribute vec4 skinWeight;',\r\n\r\n\t\t\t\t'#endif',\r\n\r\n\t\t\t\t'\\n'\r\n\r\n\t\t\t].filter( filterEmptyLine ).join( '\\n' );\r\n\r\n\t\t\tprefixFragment = [\r\n\r\n\t\t\t\tparameters.bumpMap || parameters.normalMap || parameters.flatShading || material.derivatives ? '#extension GL_OES_standard_derivatives : enable' : '',\r\n\t\t\t\tparameters.logarithmicDepthBuffer && renderer.extensions.get( 'EXT_frag_depth' ) ? '#extension GL_EXT_frag_depth : enable' : '',\r\n\r\n\t\t\t\t'precision ' + parameters.precision + ' float;',\r\n\t\t\t\t'precision ' + parameters.precision + ' int;',\r\n\r\n\t\t\t\t'#define SHADER_NAME ' + material.__webglShader.name,\r\n\r\n\t\t\t\tcustomDefines,\r\n\r\n\t\t\t\t'#define MAX_DIR_LIGHTS ' + parameters.maxDirLights,\r\n\t\t\t\t'#define MAX_POINT_LIGHTS ' + parameters.maxPointLights,\r\n\t\t\t\t'#define MAX_SPOT_LIGHTS ' + parameters.maxSpotLights,\r\n\t\t\t\t'#define MAX_HEMI_LIGHTS ' + parameters.maxHemiLights,\r\n\r\n\t\t\t\t'#define MAX_SHADOWS ' + parameters.maxShadows,\r\n\r\n\t\t\t\tparameters.alphaTest ? '#define ALPHATEST ' + parameters.alphaTest : '',\r\n\r\n\t\t\t\trenderer.gammaInput ? '#define GAMMA_INPUT' : '',\r\n\t\t\t\trenderer.gammaOutput ? '#define GAMMA_OUTPUT' : '',\r\n\t\t\t\t'#define GAMMA_FACTOR ' + gammaFactorDefine,\r\n\r\n\t\t\t\t( parameters.useFog && parameters.fog ) ? '#define USE_FOG' : '',\r\n\t\t\t\t( parameters.useFog && parameters.fogExp ) ? '#define FOG_EXP2' : '',\r\n\r\n\t\t\t\tparameters.map ? '#define USE_MAP' : '',\r\n\t\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\r\n\t\t\t\tparameters.envMap ? '#define ' + envMapTypeDefine : '',\r\n\t\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\r\n\t\t\t\tparameters.envMap ? '#define ' + envMapBlendingDefine : '',\r\n\t\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\r\n\t\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\r\n\t\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\r\n\t\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\r\n\t\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\r\n\t\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\r\n\t\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\r\n\t\t\t\tparameters.vertexColors ? '#define USE_COLOR' : '',\r\n\r\n\t\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\r\n\r\n\t\t\t\tparameters.metal ? '#define METAL' : '',\r\n\t\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\r\n\t\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\r\n\r\n\t\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\r\n\t\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\r\n\t\t\t\tparameters.shadowMapDebug ? '#define SHADOWMAP_DEBUG' : '',\r\n\r\n\t\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\r\n\t\t\t\tparameters.logarithmicDepthBuffer && renderer.extensions.get( 'EXT_frag_depth' ) ? '#define USE_LOGDEPTHBUF_EXT' : '',\r\n\r\n\t\t\t\t'uniform mat4 viewMatrix;',\r\n\t\t\t\t'uniform vec3 cameraPosition;',\r\n\r\n\t\t\t\t'\\n'\r\n\r\n\t\t\t].filter( filterEmptyLine ).join( '\\n' );\r\n\r\n\t\t}\r\n\r\n\t\tvar vertexGlsl = prefixVertex + vertexShader;\r\n\t\tvar fragmentGlsl = prefixFragment + fragmentShader;\r\n\r\n\t\tvar glVertexShader = THREE.WebGLShader( gl, gl.VERTEX_SHADER, vertexGlsl );\r\n\t\tvar glFragmentShader = THREE.WebGLShader( gl, gl.FRAGMENT_SHADER, fragmentGlsl );\r\n\r\n\t\tgl.attachShader( program, glVertexShader );\r\n\t\tgl.attachShader( program, glFragmentShader );\r\n\r\n\t\t// Force a particular attribute to index 0.\r\n\r\n\t\tif ( material.index0AttributeName !== undefined ) {\r\n\r\n\t\t\tgl.bindAttribLocation( program, 0, material.index0AttributeName );\r\n\r\n\t\t} else if ( parameters.morphTargets === true ) {\r\n\r\n\t\t\t// programs with morphTargets displace position out of attribute 0\r\n\t\t\tgl.bindAttribLocation( program, 0, 'position' );\r\n\r\n\t\t}\r\n\r\n\t\tgl.linkProgram( program );\r\n\r\n\t\tvar programLog = gl.getProgramInfoLog( program );\r\n\t\tvar vertexLog = gl.getShaderInfoLog( glVertexShader );\r\n\t\tvar fragmentLog = gl.getShaderInfoLog( glFragmentShader );\r\n\r\n\t\tvar runnable = true;\r\n\t\tvar haveDiagnostics = true;\r\n\r\n\t\tif ( gl.getProgramParameter( program, gl.LINK_STATUS ) === false ) {\r\n\r\n\t\t\trunnable = false;\r\n\r\n\t\t\tconsole.error( 'THREE.WebGLProgram: shader error: ', gl.getError(), 'gl.VALIDATE_STATUS', gl.getProgramParameter( program, gl.VALIDATE_STATUS ), 'gl.getProgramInfoLog', programLog, vertexLog, fragmentLog );\r\n\r\n\t\t} else if ( programLog !== '' ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.WebGLProgram: gl.getProgramInfoLog()', programLog );\r\n\r\n\t\t} else if ( vertexLog === '' || fragmentLog === '' ) {\r\n\r\n\t\t\thaveDiagnostics = false;\r\n\r\n\t\t}\r\n\r\n\t\tif ( haveDiagnostics ) {\r\n\r\n\t\t\tthis.diagnostics = {\r\n\r\n\t\t\t\trunnable: runnable,\r\n\t\t\t\tmaterial: material,\r\n\r\n\t\t\t\tprogramLog: programLog,\r\n\r\n\t\t\t\tvertexShader: {\r\n\r\n\t\t\t\t\tlog: vertexLog,\r\n\t\t\t\t\tprefix: prefixVertex\r\n\r\n\t\t\t\t},\r\n\r\n\t\t\t\tfragmentShader: {\r\n\r\n\t\t\t\t\tlog: fragmentLog,\r\n\t\t\t\t\tprefix: prefixFragment\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t};\r\n\r\n\t\t}\r\n\r\n\t\t// clean up\r\n\r\n\t\tgl.deleteShader( glVertexShader );\r\n\t\tgl.deleteShader( glFragmentShader );\r\n\r\n\t\t// set up caching for uniform locations\r\n\r\n\t\tvar cachedUniforms;\r\n\r\n\t\tthis.getUniforms = function() {\r\n\r\n\t\t\tif ( cachedUniforms === undefined ) {\r\n\r\n\t\t\t\tcachedUniforms = fetchUniformLocations( gl, program );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn cachedUniforms;\r\n\r\n\t\t};\r\n\r\n\t\t// set up caching for attribute locations\r\n\r\n\t\tvar cachedAttributes;\r\n\r\n\t\tthis.getAttributes = function() {\r\n\r\n\t\t\tif ( cachedAttributes === undefined ) {\r\n\r\n\t\t\t\tcachedAttributes = fetchAttributeLocations( gl, program );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn cachedAttributes;\r\n\r\n\t\t};\r\n\r\n\t\t// free resource\r\n\r\n\t\tthis.destroy = function() {\r\n\r\n\t\t\tgl.deleteProgram( program );\r\n\t\t\tthis.program = undefined;\r\n\r\n\t\t};\r\n\r\n\t\t// DEPRECATED\r\n\r\n\t\tObject.defineProperties( this, {\r\n\r\n\t\t\tuniforms: {\r\n\t\t\t\tget: function() {\r\n\r\n\t\t\t\t\tconsole.warn( 'THREE.WebGLProgram: .uniforms is now .getUniforms().' );\r\n\t\t\t\t\treturn this.getUniforms();\r\n\r\n\t\t\t\t}\r\n\t\t\t},\r\n\r\n\t\t\tattributes: {\r\n\t\t\t\tget: function() {\r\n\r\n\t\t\t\t\tconsole.warn( 'THREE.WebGLProgram: .attributes is now .getAttributes().' );\r\n\t\t\t\t\treturn this.getAttributes();\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t} );\r\n\r\n\r\n\t\t//\r\n\r\n\t\tthis.id = programIdCount ++;\r\n\t\tthis.code = code;\r\n\t\tthis.usedTimes = 1;\r\n\t\tthis.program = program;\r\n\t\tthis.vertexShader = glVertexShader;\r\n\t\tthis.fragmentShader = glFragmentShader;\r\n\r\n\t\treturn this;\r\n\r\n\t};\r\n\r\n} )();\r\n\r\n// File:src/renderers/webgl/WebGLPrograms.js\r\n\r\nTHREE.WebGLPrograms = function ( renderer, capabilities ) {\r\n\r\n\tvar programs = [];\r\n\r\n\tvar shaderIDs = {\r\n\t\tMeshDepthMaterial: 'depth',\r\n\t\tMeshNormalMaterial: 'normal',\r\n\t\tMeshBasicMaterial: 'basic',\r\n\t\tMeshLambertMaterial: 'lambert',\r\n\t\tMeshPhongMaterial: 'phong',\r\n\t\tLineBasicMaterial: 'basic',\r\n\t\tLineDashedMaterial: 'dashed',\r\n\t\tPointsMaterial: 'points'\r\n\t};\r\n\r\n\tvar parameterNames = [\r\n\t\t\"precision\", \"supportsVertexTextures\", \"map\", \"envMap\", \"envMapMode\",\r\n\t\t\"lightMap\", \"aoMap\", \"emissiveMap\", \"bumpMap\", \"normalMap\", \"specularMap\",\r\n\t\t\"alphaMap\", \"combine\", \"vertexColors\", \"fog\", \"useFog\", \"fogExp\",\r\n\t\t\"flatShading\", \"sizeAttenuation\", \"logarithmicDepthBuffer\", \"skinning\",\r\n\t\t\"maxBones\", \"useVertexTexture\", \"morphTargets\", \"morphNormals\",\r\n\t\t\"maxMorphTargets\", \"maxMorphNormals\", \"maxDirLights\", \"maxPointLights\",\r\n\t\t\"maxSpotLights\", \"maxHemiLights\", \"maxShadows\", \"shadowMapEnabled\",\r\n\t\t\"shadowMapType\", \"shadowMapDebug\", \"alphaTest\", \"metal\", \"doubleSided\",\r\n\t\t\"flipSided\"\r\n\t];\r\n\r\n\r\n\tfunction allocateBones ( object ) {\r\n\r\n\t\tif ( capabilities.floatVertexTextures && object && object.skeleton && object.skeleton.useVertexTexture ) {\r\n\r\n\t\t\treturn 1024;\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// default for when object is not specified\r\n\t\t\t// ( for example when prebuilding shader to be used with multiple objects )\r\n\t\t\t//\r\n\t\t\t//  - leave some extra space for other uniforms\r\n\t\t\t//  - limit here is ANGLE's 254 max uniform vectors\r\n\t\t\t//    (up to 54 should be safe)\r\n\r\n\t\t\tvar nVertexUniforms = capabilities.maxVertexUniforms;\r\n\t\t\tvar nVertexMatrices = Math.floor( ( nVertexUniforms - 20 ) / 4 );\r\n\r\n\t\t\tvar maxBones = nVertexMatrices;\r\n\r\n\t\t\tif ( object !== undefined && object instanceof THREE.SkinnedMesh ) {\r\n\r\n\t\t\t\tmaxBones = Math.min( object.skeleton.bones.length, maxBones );\r\n\r\n\t\t\t\tif ( maxBones < object.skeleton.bones.length ) {\r\n\r\n\t\t\t\t\tconsole.warn( 'WebGLRenderer: too many bones - ' + object.skeleton.bones.length + ', this GPU supports just ' + maxBones + ' (try OpenGL instead of ANGLE)' );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn maxBones;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction allocateLights( lights ) {\r\n\r\n\t\tvar dirLights = 0;\r\n\t\tvar pointLights = 0;\r\n\t\tvar spotLights = 0;\r\n\t\tvar hemiLights = 0;\r\n\r\n\t\tfor ( var l = 0, ll = lights.length; l < ll; l ++ ) {\r\n\r\n\t\t\tvar light = lights[ l ];\r\n\r\n\t\t\tif ( light.onlyShadow || light.visible === false ) continue;\r\n\r\n\t\t\tif ( light instanceof THREE.DirectionalLight ) dirLights ++;\r\n\t\t\tif ( light instanceof THREE.PointLight ) pointLights ++;\r\n\t\t\tif ( light instanceof THREE.SpotLight ) spotLights ++;\r\n\t\t\tif ( light instanceof THREE.HemisphereLight ) hemiLights ++;\r\n\r\n\t\t}\r\n\r\n\t\treturn { 'directional': dirLights, 'point': pointLights, 'spot': spotLights, 'hemi': hemiLights };\r\n\r\n\t}\r\n\r\n\tfunction allocateShadows( lights ) {\r\n\r\n\t\tvar maxShadows = 0;\r\n\r\n\t\tfor ( var l = 0, ll = lights.length; l < ll; l ++ ) {\r\n\r\n\t\t\tvar light = lights[ l ];\r\n\r\n\t\t\tif ( ! light.castShadow ) continue;\r\n\r\n\t\t\tif ( light instanceof THREE.SpotLight ) maxShadows ++;\r\n\t\t\tif ( light instanceof THREE.DirectionalLight ) maxShadows ++;\r\n\r\n\t\t}\r\n\r\n\t\treturn maxShadows;\r\n\r\n\t}\r\n\r\n\tthis.getParameters = function ( material, lights, fog, object ) {\r\n\r\n\t\tvar shaderID = shaderIDs[ material.type ];\r\n\t\t// heuristics to create shader parameters according to lights in the scene\r\n\t\t// (not to blow over maxLights budget)\r\n\r\n\t\tvar maxLightCount = allocateLights( lights );\r\n\t\tvar maxShadows = allocateShadows( lights );\r\n\t\tvar maxBones = allocateBones( object );\r\n\t\tvar precision = renderer.getPrecision();\r\n\r\n\t\tif ( material.precision !== null ) {\r\n\r\n\t\t\tprecision = capabilities.getMaxPrecision( material.precision );\r\n\r\n\t\t\tif ( precision !== material.precision ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer.initMaterial:', material.precision, 'not supported, using', precision, 'instead.' );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tvar parameters = {\r\n\r\n\t\t\tshaderID: shaderID,\r\n\r\n\t\t\tprecision: precision,\r\n\t\t\tsupportsVertexTextures: capabilities.vertexTextures,\r\n\r\n\t\t\tmap: !! material.map,\r\n\t\t\tenvMap: !! material.envMap,\r\n\t\t\tenvMapMode: material.envMap && material.envMap.mapping,\r\n\t\t\tlightMap: !! material.lightMap,\r\n\t\t\taoMap: !! material.aoMap,\r\n\t\t\temissiveMap: !! material.emissiveMap,\r\n\t\t\tbumpMap: !! material.bumpMap,\r\n\t\t\tnormalMap: !! material.normalMap,\r\n\t\t\tdisplacementMap: !! material.displacementMap,\r\n\t\t\tspecularMap: !! material.specularMap,\r\n\t\t\talphaMap: !! material.alphaMap,\r\n\r\n\t\t\tcombine: material.combine,\r\n\r\n\t\t\tvertexColors: material.vertexColors,\r\n\r\n\t\t\tfog: fog,\r\n\t\t\tuseFog: material.fog,\r\n\t\t\tfogExp: fog instanceof THREE.FogExp2,\r\n\r\n\t\t\tflatShading: material.shading === THREE.FlatShading,\r\n\r\n\t\t\tsizeAttenuation: material.sizeAttenuation,\r\n\t\t\tlogarithmicDepthBuffer: capabilities.logarithmicDepthBuffer,\r\n\r\n\t\t\tskinning: material.skinning,\r\n\t\t\tmaxBones: maxBones,\r\n\t\t\tuseVertexTexture: capabilities.floatVertexTextures && object && object.skeleton && object.skeleton.useVertexTexture,\r\n\r\n\t\t\tmorphTargets: material.morphTargets,\r\n\t\t\tmorphNormals: material.morphNormals,\r\n\t\t\tmaxMorphTargets: renderer.maxMorphTargets,\r\n\t\t\tmaxMorphNormals: renderer.maxMorphNormals,\r\n\r\n\t\t\tmaxDirLights: maxLightCount.directional,\r\n\t\t\tmaxPointLights: maxLightCount.point,\r\n\t\t\tmaxSpotLights: maxLightCount.spot,\r\n\t\t\tmaxHemiLights: maxLightCount.hemi,\r\n\r\n\t\t\tmaxShadows: maxShadows,\r\n\t\t\tshadowMapEnabled: renderer.shadowMap.enabled && object.receiveShadow && maxShadows > 0,\r\n\t\t\tshadowMapType: renderer.shadowMap.type,\r\n\t\t\tshadowMapDebug: renderer.shadowMap.debug,\r\n\r\n\t\t\talphaTest: material.alphaTest,\r\n\t\t\tmetal: material.metal,\r\n\t\t\tdoubleSided: material.side === THREE.DoubleSide,\r\n\t\t\tflipSided: material.side === THREE.BackSide\r\n\r\n\t\t};\r\n\r\n\t\treturn parameters;\r\n\r\n\t};\r\n\r\n\tthis.getProgramCode = function ( material, parameters ) {\r\n\r\n\t\tvar chunks = [];\r\n\r\n\t\tif ( parameters.shaderID ) {\r\n\r\n\t\t\tchunks.push( parameters.shaderID );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tchunks.push( material.fragmentShader );\r\n\t\t\tchunks.push( material.vertexShader );\r\n\r\n\t\t}\r\n\r\n\t\tif ( material.defines !== undefined ) {\r\n\r\n\t\t\tfor ( var name in material.defines ) {\r\n\r\n\t\t\t\tchunks.push( name );\r\n\t\t\t\tchunks.push( material.defines[ name ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfor ( var i = 0; i < parameterNames.length; i ++ ) {\r\n\r\n\t\t\tvar parameterName = parameterNames[ i ];\r\n\t\t\tchunks.push( parameterName );\r\n\t\t\tchunks.push( parameters[ parameterName ] );\r\n\r\n\t\t}\r\n\r\n\t\treturn chunks.join();\r\n\r\n\t};\r\n\r\n\tthis.acquireProgram = function ( material, parameters, code ) {\r\n\r\n\t\tvar program;\r\n\r\n\t\t// Check if code has been already compiled\r\n\t\tfor ( var p = 0, pl = programs.length; p < pl; p ++ ) {\r\n\r\n\t\t\tvar programInfo = programs[ p ];\r\n\r\n\t\t\tif ( programInfo.code === code ) {\r\n\r\n\t\t\t\tprogram = programInfo;\r\n\t\t\t\t++ program.usedTimes;\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( program === undefined ) {\r\n\r\n\t\t\tprogram = new THREE.WebGLProgram( renderer, code, material, parameters );\r\n\t\t\tprograms.push( program );\r\n\r\n\t\t}\r\n\r\n\t\treturn program;\r\n\r\n\t};\r\n\r\n\tthis.releaseProgram = function( program ) {\r\n\r\n\t\tif ( -- program.usedTimes === 0 ) {\r\n\r\n\t\t\t// Remove from unordered set\r\n\t\t\tvar i = programs.indexOf( program );\r\n\t\t\tprograms[ i ] = programs[ programs.length - 1 ];\r\n\t\t\tprograms.pop();\r\n\r\n\t\t\t// Free WebGL resources\r\n\t\t\tprogram.destroy();\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\t// Exposed for resource monitoring & error feedback via renderer.info:\r\n\tthis.programs = programs;\r\n\r\n};\r\n\r\n// File:src/renderers/webgl/WebGLProperties.js\r\n\r\n/**\r\n* @author fordacious / fordacious.github.io\r\n*/\r\n\r\nTHREE.WebGLProperties = function () {\r\n\r\n\tvar properties = {};\r\n\r\n\tthis.get = function ( object ) {\r\n\r\n\t\tvar uuid = object.uuid;\r\n\t\tvar map = properties[ uuid ];\r\n\r\n\t\tif ( map === undefined ) {\r\n\r\n\t\t\tmap = {};\r\n\t\t\tproperties[ uuid ] = map;\r\n\r\n\t\t}\r\n\r\n\t\treturn map;\r\n\r\n\t};\r\n\r\n\tthis.delete = function ( object ) {\r\n\r\n\t\tdelete properties[ object.uuid ];\r\n\r\n\t};\r\n\r\n\tthis.clear = function () {\r\n\r\n\t\tproperties = {};\r\n\r\n\t};\r\n\r\n};\r\n\r\n// File:src/renderers/webgl/WebGLShader.js\r\n\r\nTHREE.WebGLShader = ( function () {\r\n\r\n\tvar addLineNumbers = function ( string ) {\r\n\r\n\t\tvar lines = string.split( '\\n' );\r\n\r\n\t\tfor ( var i = 0; i < lines.length; i ++ ) {\r\n\r\n\t\t\tlines[ i ] = ( i + 1 ) + ': ' + lines[ i ];\r\n\r\n\t\t}\r\n\r\n\t\treturn lines.join( '\\n' );\r\n\r\n\t};\r\n\r\n\treturn function WebGLShader( gl, type, string ) {\r\n\r\n\t\tvar shader = gl.createShader( type );\r\n\r\n\t\tgl.shaderSource( shader, string );\r\n\t\tgl.compileShader( shader );\r\n\r\n\t\tif ( gl.getShaderParameter( shader, gl.COMPILE_STATUS ) === false ) {\r\n\r\n\t\t\tconsole.error( 'THREE.WebGLShader: Shader couldn\\'t compile.' );\r\n\r\n\t\t}\r\n\r\n\t\tif ( gl.getShaderInfoLog( shader ) !== '' ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.WebGLShader: gl.getShaderInfoLog()', type === gl.VERTEX_SHADER ? 'vertex' : 'fragment', gl.getShaderInfoLog( shader ), addLineNumbers( string ) );\r\n\r\n\t\t}\r\n\r\n\t\t// --enable-privileged-webgl-extension\r\n\t\t// console.log( type, gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( shader ) );\r\n\r\n\t\treturn shader;\r\n\r\n\t};\r\n\r\n} )();\r\n\r\n// File:src/renderers/webgl/WebGLShadowMap.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.WebGLShadowMap = function ( _renderer, _lights, _objects ) {\r\n\r\n\tvar _gl = _renderer.context,\r\n\t_state = _renderer.state,\r\n\t_frustum = new THREE.Frustum(),\r\n\t_projScreenMatrix = new THREE.Matrix4(),\r\n\r\n\t_min = new THREE.Vector3(),\r\n\t_max = new THREE.Vector3(),\r\n\r\n\t_matrixPosition = new THREE.Vector3(),\r\n\r\n\t_renderList = [];\r\n\r\n\t// init\r\n\r\n\tvar depthShader = THREE.ShaderLib[ \"depthRGBA\" ];\r\n\tvar depthUniforms = THREE.UniformsUtils.clone( depthShader.uniforms );\r\n\r\n\tvar _depthMaterial = new THREE.ShaderMaterial( {\r\n\t\tuniforms: depthUniforms,\r\n\t\tvertexShader: depthShader.vertexShader,\r\n\t\tfragmentShader: depthShader.fragmentShader\r\n\t } );\r\n\r\n\tvar _depthMaterialMorph = new THREE.ShaderMaterial( {\r\n\t\tuniforms: depthUniforms,\r\n\t\tvertexShader: depthShader.vertexShader,\r\n\t\tfragmentShader: depthShader.fragmentShader,\r\n\t\tmorphTargets: true\r\n\t} );\r\n\r\n\tvar _depthMaterialSkin = new THREE.ShaderMaterial( {\r\n\t\tuniforms: depthUniforms,\r\n\t\tvertexShader: depthShader.vertexShader,\r\n\t\tfragmentShader: depthShader.fragmentShader,\r\n\t\tskinning: true\r\n\t} );\r\n\r\n\tvar _depthMaterialMorphSkin = new THREE.ShaderMaterial( {\r\n\t\tuniforms: depthUniforms,\r\n\t\tvertexShader: depthShader.vertexShader,\r\n\t\tfragmentShader: depthShader.fragmentShader,\r\n\t\tmorphTargets: true,\r\n\t\tskinning: true\r\n\t} );\r\n\r\n\t_depthMaterial._shadowPass = true;\r\n\t_depthMaterialMorph._shadowPass = true;\r\n\t_depthMaterialSkin._shadowPass = true;\r\n\t_depthMaterialMorphSkin._shadowPass = true;\r\n\r\n\t//\r\n\r\n\tvar scope = this;\r\n\r\n\tthis.enabled = false;\r\n\r\n\tthis.autoUpdate = true;\r\n\tthis.needsUpdate = false;\r\n\r\n\tthis.type = THREE.PCFShadowMap;\r\n\tthis.cullFace = THREE.CullFaceFront;\r\n\r\n\tthis.render = function ( scene, camera ) {\r\n\r\n\t\tif ( scope.enabled === false ) return;\r\n\t\tif ( scope.autoUpdate === false && scope.needsUpdate === false ) return;\r\n\r\n\t\t// set GL state for depth map\r\n\r\n\t\t_gl.clearColor( 1, 1, 1, 1 );\r\n\t\t_state.disable( _gl.BLEND );\r\n\r\n\t\t_state.enable( _gl.CULL_FACE );\r\n\t\t_gl.frontFace( _gl.CCW );\r\n\r\n\t\tif ( scope.cullFace === THREE.CullFaceFront ) {\r\n\r\n\t\t\t_gl.cullFace( _gl.FRONT );\r\n\r\n\t\t} else {\r\n\r\n\t\t\t_gl.cullFace( _gl.BACK );\r\n\r\n\t\t}\r\n\r\n\t\t_state.setDepthTest( true );\r\n\r\n\t\t// render depth map\r\n\r\n\t\tfor ( var i = 0, il = _lights.length; i < il; i ++ ) {\r\n\r\n\t\t\tvar light = _lights[ i ];\r\n\r\n\t\t\tif ( ! light.castShadow ) continue;\r\n\r\n\t\t\tif ( ! light.shadowMap ) {\r\n\r\n\t\t\t\tvar shadowFilter = THREE.LinearFilter;\r\n\r\n\t\t\t\tif ( scope.type === THREE.PCFSoftShadowMap ) {\r\n\r\n\t\t\t\t\tshadowFilter = THREE.NearestFilter;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar pars = { minFilter: shadowFilter, magFilter: shadowFilter, format: THREE.RGBAFormat };\r\n\r\n\t\t\t\tlight.shadowMap = new THREE.WebGLRenderTarget( light.shadowMapWidth, light.shadowMapHeight, pars );\r\n\t\t\t\tlight.shadowMapSize = new THREE.Vector2( light.shadowMapWidth, light.shadowMapHeight );\r\n\r\n\t\t\t\tlight.shadowMatrix = new THREE.Matrix4();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( ! light.shadowCamera ) {\r\n\r\n\t\t\t\tif ( light instanceof THREE.SpotLight ) {\r\n\r\n\t\t\t\t\tlight.shadowCamera = new THREE.PerspectiveCamera( light.shadowCameraFov, light.shadowMapWidth / light.shadowMapHeight, light.shadowCameraNear, light.shadowCameraFar );\r\n\r\n\t\t\t\t} else if ( light instanceof THREE.DirectionalLight ) {\r\n\r\n\t\t\t\t\tlight.shadowCamera = new THREE.OrthographicCamera( light.shadowCameraLeft, light.shadowCameraRight, light.shadowCameraTop, light.shadowCameraBottom, light.shadowCameraNear, light.shadowCameraFar );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tconsole.error( \"THREE.ShadowMapPlugin: Unsupported light type for shadow\", light );\r\n\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tscene.add( light.shadowCamera );\r\n\r\n\t\t\t\tif ( scene.autoUpdate === true ) scene.updateMatrixWorld();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( light.shadowCameraVisible && ! light.cameraHelper ) {\r\n\r\n\t\t\t\tlight.cameraHelper = new THREE.CameraHelper( light.shadowCamera );\r\n\t\t\t\tscene.add( light.cameraHelper );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar shadowMap = light.shadowMap;\r\n\t\t\tvar shadowMatrix = light.shadowMatrix;\r\n\t\t\tvar shadowCamera = light.shadowCamera;\r\n\r\n\t\t\t//\r\n\r\n\t\t\tshadowCamera.position.setFromMatrixPosition( light.matrixWorld );\r\n\t\t\t_matrixPosition.setFromMatrixPosition( light.target.matrixWorld );\r\n\t\t\tshadowCamera.lookAt( _matrixPosition );\r\n\t\t\tshadowCamera.updateMatrixWorld();\r\n\r\n\t\t\tshadowCamera.matrixWorldInverse.getInverse( shadowCamera.matrixWorld );\r\n\r\n\t\t\t//\r\n\r\n\t\t\tif ( light.cameraHelper ) light.cameraHelper.visible = light.shadowCameraVisible;\r\n\t\t\tif ( light.shadowCameraVisible ) light.cameraHelper.update();\r\n\r\n\t\t\t// compute shadow matrix\r\n\r\n\t\t\tshadowMatrix.set(\r\n\t\t\t\t0.5, 0.0, 0.0, 0.5,\r\n\t\t\t\t0.0, 0.5, 0.0, 0.5,\r\n\t\t\t\t0.0, 0.0, 0.5, 0.5,\r\n\t\t\t\t0.0, 0.0, 0.0, 1.0\r\n\t\t\t);\r\n\r\n\t\t\tshadowMatrix.multiply( shadowCamera.projectionMatrix );\r\n\t\t\tshadowMatrix.multiply( shadowCamera.matrixWorldInverse );\r\n\r\n\t\t\t// update camera matrices and frustum\r\n\r\n\t\t\t_projScreenMatrix.multiplyMatrices( shadowCamera.projectionMatrix, shadowCamera.matrixWorldInverse );\r\n\t\t\t_frustum.setFromMatrix( _projScreenMatrix );\r\n\r\n\t\t\t// render shadow map\r\n\r\n\t\t\t_renderer.setRenderTarget( shadowMap );\r\n\t\t\t_renderer.clear();\r\n\r\n\t\t\t// set object matrices & frustum culling\r\n\r\n\t\t\t_renderList.length = 0;\r\n\r\n\t\t\tprojectObject( scene, shadowCamera );\r\n\r\n\r\n\t\t\t// render regular objects\r\n\r\n\t\t\tfor ( var j = 0, jl = _renderList.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\tvar object = _renderList[ j ];\r\n\t\t\t\tvar geometry = _objects.update( object );\r\n\t\t\t\tvar material = object.material;\r\n\r\n\t\t\t\tif ( material instanceof THREE.MeshFaceMaterial ) {\r\n\r\n\t\t\t\t\tvar groups = geometry.groups;\r\n\t\t\t\t\tvar materials = material.materials;\r\n\r\n\t\t\t\t\tfor ( var k = 0, kl = groups.length; k < kl; k ++ ) {\r\n\r\n\t\t\t\t\t\tvar group = groups[ k ];\r\n\t\t\t\t\t\tvar groupMaterial = materials[ group.materialIndex ];\r\n\r\n\t\t\t\t\t\tif ( groupMaterial.visible === true ) {\r\n\r\n\t\t\t\t\t\t\t_renderer.renderBufferDirect( shadowCamera, _lights, null, geometry, getDepthMaterial( object, groupMaterial ), object, group );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\t_renderer.renderBufferDirect( shadowCamera, _lights, null, geometry, getDepthMaterial( object, material ), object );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// restore GL state\r\n\r\n\t\tvar clearColor = _renderer.getClearColor(),\r\n\t\tclearAlpha = _renderer.getClearAlpha();\r\n\r\n\t\t_renderer.setClearColor( clearColor, clearAlpha );\r\n\t\t_state.enable( _gl.BLEND );\r\n\r\n\t\tif ( scope.cullFace === THREE.CullFaceFront ) {\r\n\r\n\t\t\t_gl.cullFace( _gl.BACK );\r\n\r\n\t\t}\r\n\r\n\t\t_renderer.resetGLState();\r\n\r\n\t\tscope.needsUpdate = false;\r\n\r\n\t};\r\n\r\n\tfunction getDepthMaterial( object, material ) {\r\n\r\n\t\tvar geometry = object.geometry;\r\n\r\n\t\tvar useMorphing = geometry.morphTargets !== undefined && geometry.morphTargets.length > 0 && material.morphTargets;\r\n\t\tvar useSkinning = object instanceof THREE.SkinnedMesh && material.skinning;\r\n\r\n\t\tvar depthMaterial;\r\n\r\n\t\tif ( object.customDepthMaterial ) {\r\n\r\n\t\t\tdepthMaterial = object.customDepthMaterial;\r\n\r\n\t\t} else if ( useSkinning ) {\r\n\r\n\t\t\tdepthMaterial = useMorphing ? _depthMaterialMorphSkin : _depthMaterialSkin;\r\n\r\n\t\t} else if ( useMorphing ) {\r\n\r\n\t\t\tdepthMaterial = _depthMaterialMorph;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tdepthMaterial = _depthMaterial;\r\n\r\n\t\t}\r\n\r\n\t\tdepthMaterial.visible = material.visible;\r\n\t\tdepthMaterial.wireframe = material.wireframe;\r\n\t\tdepthMaterial.wireframeLinewidth = material.wireframeLinewidth;\r\n\r\n\t\treturn depthMaterial;\r\n\r\n\t}\r\n\r\n\tfunction projectObject( object, camera ) {\r\n\r\n\t\tif ( object.visible === false ) return;\r\n\r\n\t\tif ( object instanceof THREE.Mesh || object instanceof THREE.Line || object instanceof THREE.Points ) {\r\n\r\n\t\t\tif ( object.castShadow && ( object.frustumCulled === false || _frustum.intersectsObject( object ) === true ) ) {\r\n\r\n\t\t\t\tvar material = object.material;\r\n\r\n\t\t\t\tif ( material.visible === true ) {\r\n\r\n\t\t\t\t\tobject.modelViewMatrix.multiplyMatrices( camera.matrixWorldInverse, object.matrixWorld );\r\n\t\t\t\t\t_renderList.push( object );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tvar children = object.children;\r\n\r\n\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\r\n\r\n\t\t\tprojectObject( children[ i ], camera );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/renderers/webgl/WebGLState.js\r\n\r\n/**\r\n* @author mrdoob / http://mrdoob.com/\r\n*/\r\n\r\nTHREE.WebGLState = function ( gl, extensions, paramThreeToGL ) {\r\n\r\n\tvar _this = this;\r\n\r\n\tvar newAttributes = new Uint8Array( 16 );\r\n\tvar enabledAttributes = new Uint8Array( 16 );\r\n\r\n\tvar capabilities = {};\r\n\r\n\tvar compressedTextureFormats = null;\r\n\r\n\tvar currentBlending = null;\r\n\tvar currentBlendEquation = null;\r\n\tvar currentBlendSrc = null;\r\n\tvar currentBlendDst = null;\r\n\tvar currentBlendEquationAlpha = null;\r\n\tvar currentBlendSrcAlpha = null;\r\n\tvar currentBlendDstAlpha = null;\r\n\r\n\tvar currentDepthFunc = null;\r\n\tvar currentDepthWrite = null;\r\n\r\n\tvar currentColorWrite = null;\r\n\r\n\tvar currentFlipSided = null;\r\n\r\n\tvar currentLineWidth = null;\r\n\r\n\tvar currentPolygonOffsetFactor = null;\r\n\tvar currentPolygonOffsetUnits = null;\r\n\r\n\tvar maxTextures = gl.getParameter( gl.MAX_TEXTURE_IMAGE_UNITS );\r\n\r\n\tvar currentTextureSlot = undefined;\r\n\tvar currentBoundTextures = {};\r\n\r\n\tthis.init = function () {\r\n\r\n\t\tgl.clearColor( 0, 0, 0, 1 );\r\n\t\tgl.clearDepth( 1 );\r\n\t\tgl.clearStencil( 0 );\r\n\r\n\t\tthis.enable( gl.DEPTH_TEST );\r\n\t\tgl.depthFunc( gl.LEQUAL );\r\n\r\n\t\tgl.frontFace( gl.CCW );\r\n\t\tgl.cullFace( gl.BACK );\r\n\t\tthis.enable( gl.CULL_FACE );\r\n\r\n\t\tthis.enable( gl.BLEND );\r\n\t\tgl.blendEquation( gl.FUNC_ADD );\r\n\t\tgl.blendFunc( gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA );\r\n\r\n\t};\r\n\r\n\tthis.initAttributes = function () {\r\n\r\n\t\tfor ( var i = 0, l = newAttributes.length; i < l; i ++ ) {\r\n\r\n\t\t\tnewAttributes[ i ] = 0;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.enableAttribute = function ( attribute ) {\r\n\r\n\t\tnewAttributes[ attribute ] = 1;\r\n\r\n\t\tif ( enabledAttributes[ attribute ] === 0 ) {\r\n\r\n\t\t\tgl.enableVertexAttribArray( attribute );\r\n\t\t\tenabledAttributes[ attribute ] = 1;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.disableUnusedAttributes = function () {\r\n\r\n\t\tfor ( var i = 0, l = enabledAttributes.length; i < l; i ++ ) {\r\n\r\n\t\t\tif ( enabledAttributes[ i ] !== newAttributes[ i ] ) {\r\n\r\n\t\t\t\tgl.disableVertexAttribArray( i );\r\n\t\t\t\tenabledAttributes[ i ] = 0;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.enable = function ( id ) {\r\n\r\n\t\tif ( capabilities[ id ] !== true ) {\r\n\r\n\t\t\tgl.enable( id );\r\n\t\t\tcapabilities[ id ] = true;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.disable = function ( id ) {\r\n\r\n\t\tif ( capabilities[ id ] !== false ) {\r\n\r\n\t\t\tgl.disable( id );\r\n\t\t\tcapabilities[ id ] = false;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.getCompressedTextureFormats = function () {\r\n\r\n\t\tif ( compressedTextureFormats === null ) {\r\n\r\n\t\t\tcompressedTextureFormats = [];\r\n\r\n\t\t\tif ( extensions.get( 'WEBGL_compressed_texture_pvrtc' ) ||\r\n\t\t\t     extensions.get( 'WEBGL_compressed_texture_s3tc' ) ) {\r\n\r\n\t\t\t\tvar formats = gl.getParameter( gl.COMPRESSED_TEXTURE_FORMATS );\r\n\r\n\t\t\t\tfor ( var i = 0; i < formats.length; i ++ ) {\r\n\r\n\t\t\t\t\tcompressedTextureFormats.push( formats[ i ] );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn compressedTextureFormats;\r\n\r\n\t};\r\n\r\n\tthis.setBlending = function ( blending, blendEquation, blendSrc, blendDst, blendEquationAlpha, blendSrcAlpha, blendDstAlpha ) {\r\n\r\n\t\tif ( blending !== currentBlending ) {\r\n\r\n\t\t\tif ( blending === THREE.NoBlending ) {\r\n\r\n\t\t\t\tthis.disable( gl.BLEND );\r\n\r\n\t\t\t} else if ( blending === THREE.AdditiveBlending ) {\r\n\r\n\t\t\t\tthis.enable( gl.BLEND );\r\n\t\t\t\tgl.blendEquation( gl.FUNC_ADD );\r\n\t\t\t\tgl.blendFunc( gl.SRC_ALPHA, gl.ONE );\r\n\r\n\t\t\t} else if ( blending === THREE.SubtractiveBlending ) {\r\n\r\n\t\t\t\t// TODO: Find blendFuncSeparate() combination\r\n\r\n\t\t\t\tthis.enable( gl.BLEND );\r\n\t\t\t\tgl.blendEquation( gl.FUNC_ADD );\r\n\t\t\t\tgl.blendFunc( gl.ZERO, gl.ONE_MINUS_SRC_COLOR );\r\n\r\n\t\t\t} else if ( blending === THREE.MultiplyBlending ) {\r\n\r\n\t\t\t\t// TODO: Find blendFuncSeparate() combination\r\n\r\n\t\t\t\tthis.enable( gl.BLEND );\r\n\t\t\t\tgl.blendEquation( gl.FUNC_ADD );\r\n\t\t\t\tgl.blendFunc( gl.ZERO, gl.SRC_COLOR );\r\n\r\n\t\t\t} else if ( blending === THREE.CustomBlending ) {\r\n\r\n\t\t\t\tthis.enable( gl.BLEND );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthis.enable( gl.BLEND );\r\n\t\t\t\tgl.blendEquationSeparate( gl.FUNC_ADD, gl.FUNC_ADD );\r\n\t\t\t\tgl.blendFuncSeparate( gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tcurrentBlending = blending;\r\n\r\n\t\t}\r\n\r\n\t\tif ( blending === THREE.CustomBlending ) {\r\n\r\n\t\t\tblendEquationAlpha = blendEquationAlpha || blendEquation;\r\n\t\t\tblendSrcAlpha = blendSrcAlpha || blendSrc;\r\n\t\t\tblendDstAlpha = blendDstAlpha || blendDst;\r\n\r\n\t\t\tif ( blendEquation !== currentBlendEquation || blendEquationAlpha !== currentBlendEquationAlpha ) {\r\n\r\n\t\t\t\tgl.blendEquationSeparate( paramThreeToGL( blendEquation ), paramThreeToGL( blendEquationAlpha ) );\r\n\r\n\t\t\t\tcurrentBlendEquation = blendEquation;\r\n\t\t\t\tcurrentBlendEquationAlpha = blendEquationAlpha;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( blendSrc !== currentBlendSrc || blendDst !== currentBlendDst || blendSrcAlpha !== currentBlendSrcAlpha || blendDstAlpha !== currentBlendDstAlpha ) {\r\n\r\n\t\t\t\tgl.blendFuncSeparate( paramThreeToGL( blendSrc ), paramThreeToGL( blendDst ), paramThreeToGL( blendSrcAlpha ), paramThreeToGL( blendDstAlpha ) );\r\n\r\n\t\t\t\tcurrentBlendSrc = blendSrc;\r\n\t\t\t\tcurrentBlendDst = blendDst;\r\n\t\t\t\tcurrentBlendSrcAlpha = blendSrcAlpha;\r\n\t\t\t\tcurrentBlendDstAlpha = blendDstAlpha;\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\tcurrentBlendEquation = null;\r\n\t\t\tcurrentBlendSrc = null;\r\n\t\t\tcurrentBlendDst = null;\r\n\t\t\tcurrentBlendEquationAlpha = null;\r\n\t\t\tcurrentBlendSrcAlpha = null;\r\n\t\t\tcurrentBlendDstAlpha = null;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.setDepthFunc = function ( depthFunc ) {\r\n\r\n\t\tif ( currentDepthFunc !== depthFunc ) {\r\n\r\n\t\t\tif ( depthFunc ) {\r\n\r\n\t\t\t\tswitch ( depthFunc ) {\r\n\r\n\t\t\t\t\tcase THREE.NeverDepth:\r\n\r\n\t\t\t\t\t\tgl.depthFunc( gl.NEVER );\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase THREE.AlwaysDepth:\r\n\r\n\t\t\t\t\t\tgl.depthFunc( gl.ALWAYS );\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase THREE.LessDepth:\r\n\r\n\t\t\t\t\t\tgl.depthFunc( gl.LESS );\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase THREE.LessEqualDepth:\r\n\r\n\t\t\t\t\t\tgl.depthFunc( gl.LEQUAL );\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase THREE.EqualDepth:\r\n\r\n\t\t\t\t\t\tgl.depthFunc( gl.EQUAL );\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase THREE.GreaterEqualDepth:\r\n\r\n\t\t\t\t\t\tgl.depthFunc( gl.GEQUAL );\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase THREE.GreaterDepth:\r\n\r\n\t\t\t\t\t\tgl.depthFunc( gl.GREATER );\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase THREE.NotEqualDepth:\r\n\r\n\t\t\t\t\t\tgl.depthFunc( gl.NOTEQUAL );\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tdefault:\r\n\r\n\t\t\t\t\t\tgl.depthFunc( gl.LEQUAL );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tgl.depthFunc( gl.LEQUAL );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tcurrentDepthFunc = depthFunc;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.setDepthTest = function ( depthTest ) {\r\n\r\n\t\tif ( depthTest ) {\r\n\r\n\t\t\tthis.enable( gl.DEPTH_TEST );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.disable( gl.DEPTH_TEST );\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.setDepthWrite = function ( depthWrite ) {\r\n\r\n\t\tif ( currentDepthWrite !== depthWrite ) {\r\n\r\n\t\t\tgl.depthMask( depthWrite );\r\n\t\t\tcurrentDepthWrite = depthWrite;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.setColorWrite = function ( colorWrite ) {\r\n\r\n\t\tif ( currentColorWrite !== colorWrite ) {\r\n\r\n\t\t\tgl.colorMask( colorWrite, colorWrite, colorWrite, colorWrite );\r\n\t\t\tcurrentColorWrite = colorWrite;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.setFlipSided = function ( flipSided ) {\r\n\r\n\t\tif ( currentFlipSided !== flipSided ) {\r\n\r\n\t\t\tif ( flipSided ) {\r\n\r\n\t\t\t\tgl.frontFace( gl.CW );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tgl.frontFace( gl.CCW );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tcurrentFlipSided = flipSided;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.setLineWidth = function ( width ) {\r\n\r\n\t\tif ( width !== currentLineWidth ) {\r\n\r\n\t\t\tgl.lineWidth( width );\r\n\r\n\t\t\tcurrentLineWidth = width;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.setPolygonOffset = function ( polygonOffset, factor, units ) {\r\n\r\n\t\tif ( polygonOffset ) {\r\n\r\n\t\t\tthis.enable( gl.POLYGON_OFFSET_FILL );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.disable( gl.POLYGON_OFFSET_FILL );\r\n\r\n\t\t}\r\n\r\n\t\tif ( polygonOffset && ( currentPolygonOffsetFactor !== factor || currentPolygonOffsetUnits !== units ) ) {\r\n\r\n\t\t\tgl.polygonOffset( factor, units );\r\n\r\n\t\t\tcurrentPolygonOffsetFactor = factor;\r\n\t\t\tcurrentPolygonOffsetUnits = units;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.setScissorTest = function ( scissorTest ) {\r\n\r\n\t\tif ( scissorTest ) {\r\n\r\n\t\t\tthis.enable( gl.SCISSOR_TEST );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.disable( gl.SCISSOR_TEST );\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\t// texture\r\n\r\n\tthis.activeTexture = function ( webglSlot ) {\r\n\r\n\t\tif ( webglSlot === undefined ) webglSlot = gl.TEXTURE0 + maxTextures - 1;\r\n\r\n\t\tif ( currentTextureSlot !== webglSlot ) {\r\n\r\n\t\t\tgl.activeTexture( webglSlot );\r\n\t\t\tcurrentTextureSlot = webglSlot;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tthis.bindTexture = function ( webglType, webglTexture ) {\r\n\r\n\t\tif ( currentTextureSlot === undefined ) {\r\n\r\n\t\t\t_this.activeTexture();\r\n\r\n\t\t}\r\n\r\n\t\tvar boundTexture = currentBoundTextures[ currentTextureSlot ];\r\n\r\n\t\tif ( boundTexture === undefined ) {\r\n\r\n\t\t\tboundTexture = { type: undefined, texture: undefined };\r\n\t\t\tcurrentBoundTextures[ currentTextureSlot ] = boundTexture;\r\n\r\n\t\t}\r\n\r\n\t\tif ( boundTexture.type !== webglType || boundTexture.texture !== webglTexture ) {\r\n\r\n\t\t\tgl.bindTexture( webglType, webglTexture );\r\n\r\n\t\t\tboundTexture.type = webglType;\r\n\t\t\tboundTexture.texture = webglTexture;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.compressedTexImage2D = function () {\r\n\r\n\t\ttry {\r\n\r\n\t\t\tgl.compressedTexImage2D.apply( gl, arguments );\r\n\r\n\t\t} catch ( error ) {\r\n\r\n\t\t\tconsole.error( error );\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.texImage2D = function () {\r\n\r\n\t\ttry {\r\n\r\n\t\t\tgl.texImage2D.apply( gl, arguments );\r\n\r\n\t\t} catch ( error ) {\r\n\r\n\t\t\tconsole.error( error );\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\t//\r\n\r\n\tthis.reset = function () {\r\n\r\n\t\tfor ( var i = 0; i < enabledAttributes.length; i ++ ) {\r\n\r\n\t\t\tif ( enabledAttributes[ i ] === 1 ) {\r\n\r\n\t\t\t\tgl.disableVertexAttribArray( i );\r\n\t\t\t\tenabledAttributes[ i ] = 0;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tcapabilities = {};\r\n\r\n\t\tcompressedTextureFormats = null;\r\n\r\n\t\tcurrentBlending = null;\r\n\r\n\t\tcurrentDepthWrite = null;\r\n\t\tcurrentColorWrite = null;\r\n\r\n\t\tcurrentFlipSided = null;\r\n\r\n\t};\r\n\r\n};\r\n\r\n// File:src/renderers/webgl/plugins/LensFlarePlugin.js\r\n\r\n/**\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.LensFlarePlugin = function ( renderer, flares ) {\r\n\r\n\tvar gl = renderer.context;\r\n\tvar state = renderer.state;\r\n\r\n\tvar vertexBuffer, elementBuffer;\r\n\tvar program, attributes, uniforms;\r\n\tvar hasVertexTexture;\r\n\r\n\tvar tempTexture, occlusionTexture;\r\n\r\n\tvar init = function () {\r\n\r\n\t\tvar vertices = new Float32Array( [\r\n\t\t\t- 1, - 1,  0, 0,\r\n\t\t\t 1, - 1,  1, 0,\r\n\t\t\t 1,  1,  1, 1,\r\n\t\t\t- 1,  1,  0, 1\r\n\t\t] );\r\n\r\n\t\tvar faces = new Uint16Array( [\r\n\t\t\t0, 1, 2,\r\n\t\t\t0, 2, 3\r\n\t\t] );\r\n\r\n\t\t// buffers\r\n\r\n\t\tvertexBuffer     = gl.createBuffer();\r\n\t\telementBuffer    = gl.createBuffer();\r\n\r\n\t\tgl.bindBuffer( gl.ARRAY_BUFFER, vertexBuffer );\r\n\t\tgl.bufferData( gl.ARRAY_BUFFER, vertices, gl.STATIC_DRAW );\r\n\r\n\t\tgl.bindBuffer( gl.ELEMENT_ARRAY_BUFFER, elementBuffer );\r\n\t\tgl.bufferData( gl.ELEMENT_ARRAY_BUFFER, faces, gl.STATIC_DRAW );\r\n\r\n\t\t// textures\r\n\r\n\t\ttempTexture      = gl.createTexture();\r\n\t\tocclusionTexture = gl.createTexture();\r\n\r\n\t\tstate.bindTexture( gl.TEXTURE_2D, tempTexture );\r\n\t\tgl.texImage2D( gl.TEXTURE_2D, 0, gl.RGB, 16, 16, 0, gl.RGB, gl.UNSIGNED_BYTE, null );\r\n\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE );\r\n\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE );\r\n\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST );\r\n\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST );\r\n\r\n\t\tstate.bindTexture( gl.TEXTURE_2D, occlusionTexture );\r\n\t\tgl.texImage2D( gl.TEXTURE_2D, 0, gl.RGBA, 16, 16, 0, gl.RGBA, gl.UNSIGNED_BYTE, null );\r\n\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE );\r\n\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE );\r\n\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST );\r\n\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST );\r\n\r\n\t\thasVertexTexture = gl.getParameter( gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS ) > 0;\r\n\r\n\t\tvar shader;\r\n\r\n\t\tif ( hasVertexTexture ) {\r\n\r\n\t\t\tshader = {\r\n\r\n\t\t\t\tvertexShader: [\r\n\r\n\t\t\t\t\t\"uniform lowp int renderType;\",\r\n\r\n\t\t\t\t\t\"uniform vec3 screenPosition;\",\r\n\t\t\t\t\t\"uniform vec2 scale;\",\r\n\t\t\t\t\t\"uniform float rotation;\",\r\n\r\n\t\t\t\t\t\"uniform sampler2D occlusionMap;\",\r\n\r\n\t\t\t\t\t\"attribute vec2 position;\",\r\n\t\t\t\t\t\"attribute vec2 uv;\",\r\n\r\n\t\t\t\t\t\"varying vec2 vUV;\",\r\n\t\t\t\t\t\"varying float vVisibility;\",\r\n\r\n\t\t\t\t\t\"void main() {\",\r\n\r\n\t\t\t\t\t\t\"vUV = uv;\",\r\n\r\n\t\t\t\t\t\t\"vec2 pos = position;\",\r\n\r\n\t\t\t\t\t\t\"if( renderType == 2 ) {\",\r\n\r\n\t\t\t\t\t\t\t\"vec4 visibility = texture2D( occlusionMap, vec2( 0.1, 0.1 ) );\",\r\n\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.5, 0.1 ) );\",\r\n\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.9, 0.1 ) );\",\r\n\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) );\",\r\n\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.9, 0.9 ) );\",\r\n\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) );\",\r\n\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.1, 0.9 ) );\",\r\n\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) );\",\r\n\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.5, 0.5 ) );\",\r\n\r\n\t\t\t\t\t\t\t\"vVisibility =        visibility.r / 9.0;\",\r\n\t\t\t\t\t\t\t\"vVisibility *= 1.0 - visibility.g / 9.0;\",\r\n\t\t\t\t\t\t\t\"vVisibility *=       visibility.b / 9.0;\",\r\n\t\t\t\t\t\t\t\"vVisibility *= 1.0 - visibility.a / 9.0;\",\r\n\r\n\t\t\t\t\t\t\t\"pos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;\",\r\n\t\t\t\t\t\t\t\"pos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;\",\r\n\r\n\t\t\t\t\t\t\"}\",\r\n\r\n\t\t\t\t\t\t\"gl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );\",\r\n\r\n\t\t\t\t\t\"}\"\r\n\r\n\t\t\t\t].join( \"\\n\" ),\r\n\r\n\t\t\t\tfragmentShader: [\r\n\r\n\t\t\t\t\t\"uniform lowp int renderType;\",\r\n\r\n\t\t\t\t\t\"uniform sampler2D map;\",\r\n\t\t\t\t\t\"uniform float opacity;\",\r\n\t\t\t\t\t\"uniform vec3 color;\",\r\n\r\n\t\t\t\t\t\"varying vec2 vUV;\",\r\n\t\t\t\t\t\"varying float vVisibility;\",\r\n\r\n\t\t\t\t\t\"void main() {\",\r\n\r\n\t\t\t\t\t\t// pink square\r\n\r\n\t\t\t\t\t\t\"if( renderType == 0 ) {\",\r\n\r\n\t\t\t\t\t\t\t\"gl_FragColor = vec4( 1.0, 0.0, 1.0, 0.0 );\",\r\n\r\n\t\t\t\t\t\t// restore\r\n\r\n\t\t\t\t\t\t\"} else if( renderType == 1 ) {\",\r\n\r\n\t\t\t\t\t\t\t\"gl_FragColor = texture2D( map, vUV );\",\r\n\r\n\t\t\t\t\t\t// flare\r\n\r\n\t\t\t\t\t\t\"} else {\",\r\n\r\n\t\t\t\t\t\t\t\"vec4 texture = texture2D( map, vUV );\",\r\n\t\t\t\t\t\t\t\"texture.a *= opacity * vVisibility;\",\r\n\t\t\t\t\t\t\t\"gl_FragColor = texture;\",\r\n\t\t\t\t\t\t\t\"gl_FragColor.rgb *= color;\",\r\n\r\n\t\t\t\t\t\t\"}\",\r\n\r\n\t\t\t\t\t\"}\"\r\n\r\n\t\t\t\t].join( \"\\n\" )\r\n\r\n\t\t\t};\r\n\r\n\t\t} else {\r\n\r\n\t\t\tshader = {\r\n\r\n\t\t\t\tvertexShader: [\r\n\r\n\t\t\t\t\t\"uniform lowp int renderType;\",\r\n\r\n\t\t\t\t\t\"uniform vec3 screenPosition;\",\r\n\t\t\t\t\t\"uniform vec2 scale;\",\r\n\t\t\t\t\t\"uniform float rotation;\",\r\n\r\n\t\t\t\t\t\"attribute vec2 position;\",\r\n\t\t\t\t\t\"attribute vec2 uv;\",\r\n\r\n\t\t\t\t\t\"varying vec2 vUV;\",\r\n\r\n\t\t\t\t\t\"void main() {\",\r\n\r\n\t\t\t\t\t\t\"vUV = uv;\",\r\n\r\n\t\t\t\t\t\t\"vec2 pos = position;\",\r\n\r\n\t\t\t\t\t\t\"if( renderType == 2 ) {\",\r\n\r\n\t\t\t\t\t\t\t\"pos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;\",\r\n\t\t\t\t\t\t\t\"pos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;\",\r\n\r\n\t\t\t\t\t\t\"}\",\r\n\r\n\t\t\t\t\t\t\"gl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );\",\r\n\r\n\t\t\t\t\t\"}\"\r\n\r\n\t\t\t\t].join( \"\\n\" ),\r\n\r\n\t\t\t\tfragmentShader: [\r\n\r\n\t\t\t\t\t\"precision mediump float;\",\r\n\r\n\t\t\t\t\t\"uniform lowp int renderType;\",\r\n\r\n\t\t\t\t\t\"uniform sampler2D map;\",\r\n\t\t\t\t\t\"uniform sampler2D occlusionMap;\",\r\n\t\t\t\t\t\"uniform float opacity;\",\r\n\t\t\t\t\t\"uniform vec3 color;\",\r\n\r\n\t\t\t\t\t\"varying vec2 vUV;\",\r\n\r\n\t\t\t\t\t\"void main() {\",\r\n\r\n\t\t\t\t\t\t// pink square\r\n\r\n\t\t\t\t\t\t\"if( renderType == 0 ) {\",\r\n\r\n\t\t\t\t\t\t\t\"gl_FragColor = vec4( texture2D( map, vUV ).rgb, 0.0 );\",\r\n\r\n\t\t\t\t\t\t// restore\r\n\r\n\t\t\t\t\t\t\"} else if( renderType == 1 ) {\",\r\n\r\n\t\t\t\t\t\t\t\"gl_FragColor = texture2D( map, vUV );\",\r\n\r\n\t\t\t\t\t\t// flare\r\n\r\n\t\t\t\t\t\t\"} else {\",\r\n\r\n\t\t\t\t\t\t\t\"float visibility = texture2D( occlusionMap, vec2( 0.5, 0.1 ) ).a;\",\r\n\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) ).a;\",\r\n\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) ).a;\",\r\n\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) ).a;\",\r\n\t\t\t\t\t\t\t\"visibility = ( 1.0 - visibility / 4.0 );\",\r\n\r\n\t\t\t\t\t\t\t\"vec4 texture = texture2D( map, vUV );\",\r\n\t\t\t\t\t\t\t\"texture.a *= opacity * visibility;\",\r\n\t\t\t\t\t\t\t\"gl_FragColor = texture;\",\r\n\t\t\t\t\t\t\t\"gl_FragColor.rgb *= color;\",\r\n\r\n\t\t\t\t\t\t\"}\",\r\n\r\n\t\t\t\t\t\"}\"\r\n\r\n\t\t\t\t].join( \"\\n\" )\r\n\r\n\t\t\t};\r\n\r\n\t\t}\r\n\r\n\t\tprogram = createProgram( shader );\r\n\r\n\t\tattributes = {\r\n\t\t\tvertex: gl.getAttribLocation ( program, \"position\" ),\r\n\t\t\tuv:     gl.getAttribLocation ( program, \"uv\" )\r\n\t\t};\r\n\r\n\t\tuniforms = {\r\n\t\t\trenderType:     gl.getUniformLocation( program, \"renderType\" ),\r\n\t\t\tmap:            gl.getUniformLocation( program, \"map\" ),\r\n\t\t\tocclusionMap:   gl.getUniformLocation( program, \"occlusionMap\" ),\r\n\t\t\topacity:        gl.getUniformLocation( program, \"opacity\" ),\r\n\t\t\tcolor:          gl.getUniformLocation( program, \"color\" ),\r\n\t\t\tscale:          gl.getUniformLocation( program, \"scale\" ),\r\n\t\t\trotation:       gl.getUniformLocation( program, \"rotation\" ),\r\n\t\t\tscreenPosition: gl.getUniformLocation( program, \"screenPosition\" )\r\n\t\t};\r\n\r\n\t};\r\n\r\n\t/*\r\n\t * Render lens flares\r\n\t * Method: renders 16x16 0xff00ff-colored points scattered over the light source area,\r\n\t *         reads these back and calculates occlusion.\r\n\t */\r\n\r\n\tthis.render = function ( scene, camera, viewportWidth, viewportHeight ) {\r\n\r\n\t\tif ( flares.length === 0 ) return;\r\n\r\n\t\tvar tempPosition = new THREE.Vector3();\r\n\r\n\t\tvar invAspect = viewportHeight / viewportWidth,\r\n\t\t\thalfViewportWidth = viewportWidth * 0.5,\r\n\t\t\thalfViewportHeight = viewportHeight * 0.5;\r\n\r\n\t\tvar size = 16 / viewportHeight,\r\n\t\t\tscale = new THREE.Vector2( size * invAspect, size );\r\n\r\n\t\tvar screenPosition = new THREE.Vector3( 1, 1, 0 ),\r\n\t\t\tscreenPositionPixels = new THREE.Vector2( 1, 1 );\r\n\r\n\t\tif ( program === undefined ) {\r\n\r\n\t\t\tinit();\r\n\r\n\t\t}\r\n\r\n\t\tgl.useProgram( program );\r\n\r\n\t\tstate.initAttributes();\r\n\t\tstate.enableAttribute( attributes.vertex );\r\n\t\tstate.enableAttribute( attributes.uv );\r\n\t\tstate.disableUnusedAttributes();\r\n\r\n\t\t// loop through all lens flares to update their occlusion and positions\r\n\t\t// setup gl and common used attribs/uniforms\r\n\r\n\t\tgl.uniform1i( uniforms.occlusionMap, 0 );\r\n\t\tgl.uniform1i( uniforms.map, 1 );\r\n\r\n\t\tgl.bindBuffer( gl.ARRAY_BUFFER, vertexBuffer );\r\n\t\tgl.vertexAttribPointer( attributes.vertex, 2, gl.FLOAT, false, 2 * 8, 0 );\r\n\t\tgl.vertexAttribPointer( attributes.uv, 2, gl.FLOAT, false, 2 * 8, 8 );\r\n\r\n\t\tgl.bindBuffer( gl.ELEMENT_ARRAY_BUFFER, elementBuffer );\r\n\r\n\t\tstate.disable( gl.CULL_FACE );\r\n\t\tgl.depthMask( false );\r\n\r\n\t\tfor ( var i = 0, l = flares.length; i < l; i ++ ) {\r\n\r\n\t\t\tsize = 16 / viewportHeight;\r\n\t\t\tscale.set( size * invAspect, size );\r\n\r\n\t\t\t// calc object screen position\r\n\r\n\t\t\tvar flare = flares[ i ];\r\n\r\n\t\t\ttempPosition.set( flare.matrixWorld.elements[ 12 ], flare.matrixWorld.elements[ 13 ], flare.matrixWorld.elements[ 14 ] );\r\n\r\n\t\t\ttempPosition.applyMatrix4( camera.matrixWorldInverse );\r\n\t\t\ttempPosition.applyProjection( camera.projectionMatrix );\r\n\r\n\t\t\t// setup arrays for gl programs\r\n\r\n\t\t\tscreenPosition.copy( tempPosition );\r\n\r\n\t\t\tscreenPositionPixels.x = screenPosition.x * halfViewportWidth + halfViewportWidth;\r\n\t\t\tscreenPositionPixels.y = screenPosition.y * halfViewportHeight + halfViewportHeight;\r\n\r\n\t\t\t// screen cull\r\n\r\n\t\t\tif ( hasVertexTexture || (\r\n\t\t\t\tscreenPositionPixels.x > 0 &&\r\n\t\t\t\tscreenPositionPixels.x < viewportWidth &&\r\n\t\t\t\tscreenPositionPixels.y > 0 &&\r\n\t\t\t\tscreenPositionPixels.y < viewportHeight ) ) {\r\n\r\n\t\t\t\t// save current RGB to temp texture\r\n\r\n\t\t\t\tstate.activeTexture( gl.TEXTURE0 );\r\n\t\t\t\tstate.bindTexture( gl.TEXTURE_2D, null );\r\n\t\t\t\tstate.activeTexture( gl.TEXTURE1 );\r\n\t\t\t\tstate.bindTexture( gl.TEXTURE_2D, tempTexture );\r\n\t\t\t\tgl.copyTexImage2D( gl.TEXTURE_2D, 0, gl.RGB, screenPositionPixels.x - 8, screenPositionPixels.y - 8, 16, 16, 0 );\r\n\r\n\r\n\t\t\t\t// render pink quad\r\n\r\n\t\t\t\tgl.uniform1i( uniforms.renderType, 0 );\r\n\t\t\t\tgl.uniform2f( uniforms.scale, scale.x, scale.y );\r\n\t\t\t\tgl.uniform3f( uniforms.screenPosition, screenPosition.x, screenPosition.y, screenPosition.z );\r\n\r\n\t\t\t\tstate.disable( gl.BLEND );\r\n\t\t\t\tstate.enable( gl.DEPTH_TEST );\r\n\r\n\t\t\t\tgl.drawElements( gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0 );\r\n\r\n\r\n\t\t\t\t// copy result to occlusionMap\r\n\r\n\t\t\t\tstate.activeTexture( gl.TEXTURE0 );\r\n\t\t\t\tstate.bindTexture( gl.TEXTURE_2D, occlusionTexture );\r\n\t\t\t\tgl.copyTexImage2D( gl.TEXTURE_2D, 0, gl.RGBA, screenPositionPixels.x - 8, screenPositionPixels.y - 8, 16, 16, 0 );\r\n\r\n\r\n\t\t\t\t// restore graphics\r\n\r\n\t\t\t\tgl.uniform1i( uniforms.renderType, 1 );\r\n\t\t\t\tstate.disable( gl.DEPTH_TEST );\r\n\r\n\t\t\t\tstate.activeTexture( gl.TEXTURE1 );\r\n\t\t\t\tstate.bindTexture( gl.TEXTURE_2D, tempTexture );\r\n\t\t\t\tgl.drawElements( gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0 );\r\n\r\n\r\n\t\t\t\t// update object positions\r\n\r\n\t\t\t\tflare.positionScreen.copy( screenPosition );\r\n\r\n\t\t\t\tif ( flare.customUpdateCallback ) {\r\n\r\n\t\t\t\t\tflare.customUpdateCallback( flare );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tflare.updateLensFlares();\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// render flares\r\n\r\n\t\t\t\tgl.uniform1i( uniforms.renderType, 2 );\r\n\t\t\t\tstate.enable( gl.BLEND );\r\n\r\n\t\t\t\tfor ( var j = 0, jl = flare.lensFlares.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\t\tvar sprite = flare.lensFlares[ j ];\r\n\r\n\t\t\t\t\tif ( sprite.opacity > 0.001 && sprite.scale > 0.001 ) {\r\n\r\n\t\t\t\t\t\tscreenPosition.x = sprite.x;\r\n\t\t\t\t\t\tscreenPosition.y = sprite.y;\r\n\t\t\t\t\t\tscreenPosition.z = sprite.z;\r\n\r\n\t\t\t\t\t\tsize = sprite.size * sprite.scale / viewportHeight;\r\n\r\n\t\t\t\t\t\tscale.x = size * invAspect;\r\n\t\t\t\t\t\tscale.y = size;\r\n\r\n\t\t\t\t\t\tgl.uniform3f( uniforms.screenPosition, screenPosition.x, screenPosition.y, screenPosition.z );\r\n\t\t\t\t\t\tgl.uniform2f( uniforms.scale, scale.x, scale.y );\r\n\t\t\t\t\t\tgl.uniform1f( uniforms.rotation, sprite.rotation );\r\n\r\n\t\t\t\t\t\tgl.uniform1f( uniforms.opacity, sprite.opacity );\r\n\t\t\t\t\t\tgl.uniform3f( uniforms.color, sprite.color.r, sprite.color.g, sprite.color.b );\r\n\r\n\t\t\t\t\t\tstate.setBlending( sprite.blending, sprite.blendEquation, sprite.blendSrc, sprite.blendDst );\r\n\t\t\t\t\t\trenderer.setTexture( sprite.texture, 1 );\r\n\r\n\t\t\t\t\t\tgl.drawElements( gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0 );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// restore gl\r\n\r\n\t\tstate.enable( gl.CULL_FACE );\r\n\t\tstate.enable( gl.DEPTH_TEST );\r\n\t\tgl.depthMask( true );\r\n\r\n\t\trenderer.resetGLState();\r\n\r\n\t};\r\n\r\n\tfunction createProgram ( shader ) {\r\n\r\n\t\tvar program = gl.createProgram();\r\n\r\n\t\tvar fragmentShader = gl.createShader( gl.FRAGMENT_SHADER );\r\n\t\tvar vertexShader = gl.createShader( gl.VERTEX_SHADER );\r\n\r\n\t\tvar prefix = \"precision \" + renderer.getPrecision() + \" float;\\n\";\r\n\r\n\t\tgl.shaderSource( fragmentShader, prefix + shader.fragmentShader );\r\n\t\tgl.shaderSource( vertexShader, prefix + shader.vertexShader );\r\n\r\n\t\tgl.compileShader( fragmentShader );\r\n\t\tgl.compileShader( vertexShader );\r\n\r\n\t\tgl.attachShader( program, fragmentShader );\r\n\t\tgl.attachShader( program, vertexShader );\r\n\r\n\t\tgl.linkProgram( program );\r\n\r\n\t\treturn program;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/renderers/webgl/plugins/SpritePlugin.js\r\n\r\n/**\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.SpritePlugin = function ( renderer, sprites ) {\r\n\r\n\tvar gl = renderer.context;\r\n\tvar state = renderer.state;\r\n\r\n\tvar vertexBuffer, elementBuffer;\r\n\tvar program, attributes, uniforms;\r\n\r\n\tvar texture;\r\n\r\n\t// decompose matrixWorld\r\n\r\n\tvar spritePosition = new THREE.Vector3();\r\n\tvar spriteRotation = new THREE.Quaternion();\r\n\tvar spriteScale = new THREE.Vector3();\r\n\r\n\tvar init = function () {\r\n\r\n\t\tvar vertices = new Float32Array( [\r\n\t\t\t- 0.5, - 0.5,  0, 0,\r\n\t\t\t  0.5, - 0.5,  1, 0,\r\n\t\t\t  0.5,   0.5,  1, 1,\r\n\t\t\t- 0.5,   0.5,  0, 1\r\n\t\t] );\r\n\r\n\t\tvar faces = new Uint16Array( [\r\n\t\t\t0, 1, 2,\r\n\t\t\t0, 2, 3\r\n\t\t] );\r\n\r\n\t\tvertexBuffer  = gl.createBuffer();\r\n\t\telementBuffer = gl.createBuffer();\r\n\r\n\t\tgl.bindBuffer( gl.ARRAY_BUFFER, vertexBuffer );\r\n\t\tgl.bufferData( gl.ARRAY_BUFFER, vertices, gl.STATIC_DRAW );\r\n\r\n\t\tgl.bindBuffer( gl.ELEMENT_ARRAY_BUFFER, elementBuffer );\r\n\t\tgl.bufferData( gl.ELEMENT_ARRAY_BUFFER, faces, gl.STATIC_DRAW );\r\n\r\n\t\tprogram = createProgram();\r\n\r\n\t\tattributes = {\r\n\t\t\tposition:\t\t\tgl.getAttribLocation ( program, 'position' ),\r\n\t\t\tuv:\t\t\t\t\tgl.getAttribLocation ( program, 'uv' )\r\n\t\t};\r\n\r\n\t\tuniforms = {\r\n\t\t\tuvOffset:\t\t\tgl.getUniformLocation( program, 'uvOffset' ),\r\n\t\t\tuvScale:\t\t\tgl.getUniformLocation( program, 'uvScale' ),\r\n\r\n\t\t\trotation:\t\t\tgl.getUniformLocation( program, 'rotation' ),\r\n\t\t\tscale:\t\t\t\tgl.getUniformLocation( program, 'scale' ),\r\n\r\n\t\t\tcolor:\t\t\t\tgl.getUniformLocation( program, 'color' ),\r\n\t\t\tmap:\t\t\t\tgl.getUniformLocation( program, 'map' ),\r\n\t\t\topacity:\t\t\tgl.getUniformLocation( program, 'opacity' ),\r\n\r\n\t\t\tmodelViewMatrix: \tgl.getUniformLocation( program, 'modelViewMatrix' ),\r\n\t\t\tprojectionMatrix:\tgl.getUniformLocation( program, 'projectionMatrix' ),\r\n\r\n\t\t\tfogType:\t\t\tgl.getUniformLocation( program, 'fogType' ),\r\n\t\t\tfogDensity:\t\t\tgl.getUniformLocation( program, 'fogDensity' ),\r\n\t\t\tfogNear:\t\t\tgl.getUniformLocation( program, 'fogNear' ),\r\n\t\t\tfogFar:\t\t\t\tgl.getUniformLocation( program, 'fogFar' ),\r\n\t\t\tfogColor:\t\t\tgl.getUniformLocation( program, 'fogColor' ),\r\n\r\n\t\t\talphaTest:\t\t\tgl.getUniformLocation( program, 'alphaTest' )\r\n\t\t};\r\n\r\n\t\tvar canvas = document.createElement( 'canvas' );\r\n\t\tcanvas.width = 8;\r\n\t\tcanvas.height = 8;\r\n\r\n\t\tvar context = canvas.getContext( '2d' );\r\n\t\tcontext.fillStyle = 'white';\r\n\t\tcontext.fillRect( 0, 0, 8, 8 );\r\n\r\n\t\ttexture = new THREE.Texture( canvas );\r\n\t\ttexture.needsUpdate = true;\r\n\r\n\t};\r\n\r\n\tthis.render = function ( scene, camera ) {\r\n\r\n\t\tif ( sprites.length === 0 ) return;\r\n\r\n\t\t// setup gl\r\n\r\n\t\tif ( program === undefined ) {\r\n\r\n\t\t\tinit();\r\n\r\n\t\t}\r\n\r\n\t\tgl.useProgram( program );\r\n\r\n\t\tstate.initAttributes();\r\n\t\tstate.enableAttribute( attributes.position );\r\n\t\tstate.enableAttribute( attributes.uv );\r\n\t\tstate.disableUnusedAttributes();\r\n\r\n\t\tstate.disable( gl.CULL_FACE );\r\n\t\tstate.enable( gl.BLEND );\r\n\r\n\t\tgl.bindBuffer( gl.ARRAY_BUFFER, vertexBuffer );\r\n\t\tgl.vertexAttribPointer( attributes.position, 2, gl.FLOAT, false, 2 * 8, 0 );\r\n\t\tgl.vertexAttribPointer( attributes.uv, 2, gl.FLOAT, false, 2 * 8, 8 );\r\n\r\n\t\tgl.bindBuffer( gl.ELEMENT_ARRAY_BUFFER, elementBuffer );\r\n\r\n\t\tgl.uniformMatrix4fv( uniforms.projectionMatrix, false, camera.projectionMatrix.elements );\r\n\r\n\t\tstate.activeTexture( gl.TEXTURE0 );\r\n\t\tgl.uniform1i( uniforms.map, 0 );\r\n\r\n\t\tvar oldFogType = 0;\r\n\t\tvar sceneFogType = 0;\r\n\t\tvar fog = scene.fog;\r\n\r\n\t\tif ( fog ) {\r\n\r\n\t\t\tgl.uniform3f( uniforms.fogColor, fog.color.r, fog.color.g, fog.color.b );\r\n\r\n\t\t\tif ( fog instanceof THREE.Fog ) {\r\n\r\n\t\t\t\tgl.uniform1f( uniforms.fogNear, fog.near );\r\n\t\t\t\tgl.uniform1f( uniforms.fogFar, fog.far );\r\n\r\n\t\t\t\tgl.uniform1i( uniforms.fogType, 1 );\r\n\t\t\t\toldFogType = 1;\r\n\t\t\t\tsceneFogType = 1;\r\n\r\n\t\t\t} else if ( fog instanceof THREE.FogExp2 ) {\r\n\r\n\t\t\t\tgl.uniform1f( uniforms.fogDensity, fog.density );\r\n\r\n\t\t\t\tgl.uniform1i( uniforms.fogType, 2 );\r\n\t\t\t\toldFogType = 2;\r\n\t\t\t\tsceneFogType = 2;\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\tgl.uniform1i( uniforms.fogType, 0 );\r\n\t\t\toldFogType = 0;\r\n\t\t\tsceneFogType = 0;\r\n\r\n\t\t}\r\n\r\n\r\n\t\t// update positions and sort\r\n\r\n\t\tfor ( var i = 0, l = sprites.length; i < l; i ++ ) {\r\n\r\n\t\t\tvar sprite = sprites[ i ];\r\n\r\n\t\t\tsprite.modelViewMatrix.multiplyMatrices( camera.matrixWorldInverse, sprite.matrixWorld );\r\n\t\t\tsprite.z = - sprite.modelViewMatrix.elements[ 14 ];\r\n\r\n\t\t}\r\n\r\n\t\tsprites.sort( painterSortStable );\r\n\r\n\t\t// render all sprites\r\n\r\n\t\tvar scale = [];\r\n\r\n\t\tfor ( var i = 0, l = sprites.length; i < l; i ++ ) {\r\n\r\n\t\t\tvar sprite = sprites[ i ];\r\n\t\t\tvar material = sprite.material;\r\n\r\n\t\t\tgl.uniform1f( uniforms.alphaTest, material.alphaTest );\r\n\t\t\tgl.uniformMatrix4fv( uniforms.modelViewMatrix, false, sprite.modelViewMatrix.elements );\r\n\r\n\t\t\tsprite.matrixWorld.decompose( spritePosition, spriteRotation, spriteScale );\r\n\r\n\t\t\tscale[ 0 ] = spriteScale.x;\r\n\t\t\tscale[ 1 ] = spriteScale.y;\r\n\r\n\t\t\tvar fogType = 0;\r\n\r\n\t\t\tif ( scene.fog && material.fog ) {\r\n\r\n\t\t\t\tfogType = sceneFogType;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( oldFogType !== fogType ) {\r\n\r\n\t\t\t\tgl.uniform1i( uniforms.fogType, fogType );\r\n\t\t\t\toldFogType = fogType;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( material.map !== null ) {\r\n\r\n\t\t\t\tgl.uniform2f( uniforms.uvOffset, material.map.offset.x, material.map.offset.y );\r\n\t\t\t\tgl.uniform2f( uniforms.uvScale, material.map.repeat.x, material.map.repeat.y );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tgl.uniform2f( uniforms.uvOffset, 0, 0 );\r\n\t\t\t\tgl.uniform2f( uniforms.uvScale, 1, 1 );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tgl.uniform1f( uniforms.opacity, material.opacity );\r\n\t\t\tgl.uniform3f( uniforms.color, material.color.r, material.color.g, material.color.b );\r\n\r\n\t\t\tgl.uniform1f( uniforms.rotation, material.rotation );\r\n\t\t\tgl.uniform2fv( uniforms.scale, scale );\r\n\r\n\t\t\tstate.setBlending( material.blending, material.blendEquation, material.blendSrc, material.blendDst );\r\n\t\t\tstate.setDepthTest( material.depthTest );\r\n\t\t\tstate.setDepthWrite( material.depthWrite );\r\n\r\n\t\t\tif ( material.map && material.map.image && material.map.image.width ) {\r\n\r\n\t\t\t\trenderer.setTexture( material.map, 0 );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\trenderer.setTexture( texture, 0 );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tgl.drawElements( gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0 );\r\n\r\n\t\t}\r\n\r\n\t\t// restore gl\r\n\r\n\t\tstate.enable( gl.CULL_FACE );\r\n\r\n\t\trenderer.resetGLState();\r\n\r\n\t};\r\n\r\n\tfunction createProgram () {\r\n\r\n\t\tvar program = gl.createProgram();\r\n\r\n\t\tvar vertexShader = gl.createShader( gl.VERTEX_SHADER );\r\n\t\tvar fragmentShader = gl.createShader( gl.FRAGMENT_SHADER );\r\n\r\n\t\tgl.shaderSource( vertexShader, [\r\n\r\n\t\t\t'precision ' + renderer.getPrecision() + ' float;',\r\n\r\n\t\t\t'uniform mat4 modelViewMatrix;',\r\n\t\t\t'uniform mat4 projectionMatrix;',\r\n\t\t\t'uniform float rotation;',\r\n\t\t\t'uniform vec2 scale;',\r\n\t\t\t'uniform vec2 uvOffset;',\r\n\t\t\t'uniform vec2 uvScale;',\r\n\r\n\t\t\t'attribute vec2 position;',\r\n\t\t\t'attribute vec2 uv;',\r\n\r\n\t\t\t'varying vec2 vUV;',\r\n\r\n\t\t\t'void main() {',\r\n\r\n\t\t\t\t'vUV = uvOffset + uv * uvScale;',\r\n\r\n\t\t\t\t'vec2 alignedPosition = position * scale;',\r\n\r\n\t\t\t\t'vec2 rotatedPosition;',\r\n\t\t\t\t'rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;',\r\n\t\t\t\t'rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;',\r\n\r\n\t\t\t\t'vec4 finalPosition;',\r\n\r\n\t\t\t\t'finalPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );',\r\n\t\t\t\t'finalPosition.xy += rotatedPosition;',\r\n\t\t\t\t'finalPosition = projectionMatrix * finalPosition;',\r\n\r\n\t\t\t\t'gl_Position = finalPosition;',\r\n\r\n\t\t\t'}'\r\n\r\n\t\t].join( '\\n' ) );\r\n\r\n\t\tgl.shaderSource( fragmentShader, [\r\n\r\n\t\t\t'precision ' + renderer.getPrecision() + ' float;',\r\n\r\n\t\t\t'uniform vec3 color;',\r\n\t\t\t'uniform sampler2D map;',\r\n\t\t\t'uniform float opacity;',\r\n\r\n\t\t\t'uniform int fogType;',\r\n\t\t\t'uniform vec3 fogColor;',\r\n\t\t\t'uniform float fogDensity;',\r\n\t\t\t'uniform float fogNear;',\r\n\t\t\t'uniform float fogFar;',\r\n\t\t\t'uniform float alphaTest;',\r\n\r\n\t\t\t'varying vec2 vUV;',\r\n\r\n\t\t\t'void main() {',\r\n\r\n\t\t\t\t'vec4 texture = texture2D( map, vUV );',\r\n\r\n\t\t\t\t'if ( texture.a < alphaTest ) discard;',\r\n\r\n\t\t\t\t'gl_FragColor = vec4( color * texture.xyz, texture.a * opacity );',\r\n\r\n\t\t\t\t'if ( fogType > 0 ) {',\r\n\r\n\t\t\t\t\t'float depth = gl_FragCoord.z / gl_FragCoord.w;',\r\n\t\t\t\t\t'float fogFactor = 0.0;',\r\n\r\n\t\t\t\t\t'if ( fogType == 1 ) {',\r\n\r\n\t\t\t\t\t\t'fogFactor = smoothstep( fogNear, fogFar, depth );',\r\n\r\n\t\t\t\t\t'} else {',\r\n\r\n\t\t\t\t\t\t'const float LOG2 = 1.442695;',\r\n\t\t\t\t\t\t'fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );',\r\n\t\t\t\t\t\t'fogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );',\r\n\r\n\t\t\t\t\t'}',\r\n\r\n\t\t\t\t\t'gl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );',\r\n\r\n\t\t\t\t'}',\r\n\r\n\t\t\t'}'\r\n\r\n\t\t].join( '\\n' ) );\r\n\r\n\t\tgl.compileShader( vertexShader );\r\n\t\tgl.compileShader( fragmentShader );\r\n\r\n\t\tgl.attachShader( program, vertexShader );\r\n\t\tgl.attachShader( program, fragmentShader );\r\n\r\n\t\tgl.linkProgram( program );\r\n\r\n\t\treturn program;\r\n\r\n\t}\r\n\r\n\tfunction painterSortStable ( a, b ) {\r\n\r\n\t\tif ( a.z !== b.z ) {\r\n\r\n\t\t\treturn b.z - a.z;\r\n\r\n\t\t} else {\r\n\r\n\t\t\treturn b.id - a.id;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/extras/GeometryUtils.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.GeometryUtils = {\r\n\r\n\tmerge: function ( geometry1, geometry2, materialIndexOffset ) {\r\n\r\n\t\tconsole.warn( 'THREE.GeometryUtils: .merge() has been moved to Geometry. Use geometry.merge( geometry2, matrix, materialIndexOffset ) instead.' );\r\n\r\n\t\tvar matrix;\r\n\r\n\t\tif ( geometry2 instanceof THREE.Mesh ) {\r\n\r\n\t\t\tgeometry2.matrixAutoUpdate && geometry2.updateMatrix();\r\n\r\n\t\t\tmatrix = geometry2.matrix;\r\n\t\t\tgeometry2 = geometry2.geometry;\r\n\r\n\t\t}\r\n\r\n\t\tgeometry1.merge( geometry2, matrix, materialIndexOffset );\r\n\r\n\t},\r\n\r\n\tcenter: function ( geometry ) {\r\n\r\n\t\tconsole.warn( 'THREE.GeometryUtils: .center() has been moved to Geometry. Use geometry.center() instead.' );\r\n\t\treturn geometry.center();\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/extras/ImageUtils.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author Daosheng Mu / https://github.com/DaoshengMu/\r\n */\r\n\r\nTHREE.ImageUtils = {\r\n\r\n\tcrossOrigin: undefined,\r\n\r\n\tloadTexture: function ( url, mapping, onLoad, onError ) {\r\n\r\n\t\tvar loader = new THREE.ImageLoader();\r\n\t\tloader.crossOrigin = this.crossOrigin;\r\n\r\n\t\tvar texture = new THREE.Texture( undefined, mapping );\r\n\r\n\t\tloader.load( url, function ( image ) {\r\n\r\n\t\t\ttexture.image = image;\r\n\t\t\ttexture.needsUpdate = true;\r\n\r\n\t\t\tif ( onLoad ) onLoad( texture );\r\n\r\n\t\t}, undefined, function ( event ) {\r\n\r\n\t\t\tif ( onError ) onError( event );\r\n\r\n\t\t} );\r\n\r\n\t\ttexture.sourceFile = url;\r\n\r\n\t\treturn texture;\r\n\r\n\t},\r\n\r\n\tloadTextureCube: function ( array, mapping, onLoad, onError ) {\r\n\r\n\t\tvar images = [];\r\n\r\n\t\tvar loader = new THREE.ImageLoader();\r\n\t\tloader.crossOrigin = this.crossOrigin;\r\n\r\n\t\tvar texture = new THREE.CubeTexture( images, mapping );\r\n\r\n\t\tvar loaded = 0;\r\n\r\n\t\tvar loadTexture = function ( i ) {\r\n\r\n\t\t\tloader.load( array[ i ], function ( image ) {\r\n\r\n\t\t\t\ttexture.images[ i ] = image;\r\n\r\n\t\t\t\tloaded += 1;\r\n\r\n\t\t\t\tif ( loaded === 6 ) {\r\n\r\n\t\t\t\t\ttexture.needsUpdate = true;\r\n\r\n\t\t\t\t\tif ( onLoad ) onLoad( texture );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}, undefined, onError );\r\n\r\n\t\t};\r\n\r\n\t\tfor ( var i = 0, il = array.length; i < il; ++ i ) {\r\n\r\n\t\t\tloadTexture( i );\r\n\r\n\t\t}\r\n\r\n\t\treturn texture;\r\n\r\n\t},\r\n\r\n\tloadCompressedTexture: function () {\r\n\r\n\t\tconsole.error( 'THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.' )\r\n\r\n\t},\r\n\r\n\tloadCompressedTextureCube: function () {\r\n\r\n\t\tconsole.error( 'THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.' )\r\n\r\n\t},\r\n\r\n\tgetNormalMap: function ( image, depth ) {\r\n\r\n\t\t// Adapted from http://www.paulbrunt.co.uk/lab/heightnormal/\r\n\r\n\t\tvar cross = function ( a, b ) {\r\n\r\n\t\t\treturn [ a[ 1 ] * b[ 2 ] - a[ 2 ] * b[ 1 ], a[ 2 ] * b[ 0 ] - a[ 0 ] * b[ 2 ], a[ 0 ] * b[ 1 ] - a[ 1 ] * b[ 0 ] ];\r\n\r\n\t\t};\r\n\r\n\t\tvar subtract = function ( a, b ) {\r\n\r\n\t\t\treturn [ a[ 0 ] - b[ 0 ], a[ 1 ] - b[ 1 ], a[ 2 ] - b[ 2 ] ];\r\n\r\n\t\t};\r\n\r\n\t\tvar normalize = function ( a ) {\r\n\r\n\t\t\tvar l = Math.sqrt( a[ 0 ] * a[ 0 ] + a[ 1 ] * a[ 1 ] + a[ 2 ] * a[ 2 ] );\r\n\t\t\treturn [ a[ 0 ] / l, a[ 1 ] / l, a[ 2 ] / l ];\r\n\r\n\t\t};\r\n\r\n\t\tdepth = depth | 1;\r\n\r\n\t\tvar width = image.width;\r\n\t\tvar height = image.height;\r\n\r\n\t\tvar canvas = document.createElement( 'canvas' );\r\n\t\tcanvas.width = width;\r\n\t\tcanvas.height = height;\r\n\r\n\t\tvar context = canvas.getContext( '2d' );\r\n\t\tcontext.drawImage( image, 0, 0 );\r\n\r\n\t\tvar data = context.getImageData( 0, 0, width, height ).data;\r\n\t\tvar imageData = context.createImageData( width, height );\r\n\t\tvar output = imageData.data;\r\n\r\n\t\tfor ( var x = 0; x < width; x ++ ) {\r\n\r\n\t\t\tfor ( var y = 0; y < height; y ++ ) {\r\n\r\n\t\t\t\tvar ly = y - 1 < 0 ? 0 : y - 1;\r\n\t\t\t\tvar uy = y + 1 > height - 1 ? height - 1 : y + 1;\r\n\t\t\t\tvar lx = x - 1 < 0 ? 0 : x - 1;\r\n\t\t\t\tvar ux = x + 1 > width - 1 ? width - 1 : x + 1;\r\n\r\n\t\t\t\tvar points = [];\r\n\t\t\t\tvar origin = [ 0, 0, data[ ( y * width + x ) * 4 ] / 255 * depth ];\r\n\t\t\t\tpoints.push( [ - 1, 0, data[ ( y * width + lx ) * 4 ] / 255 * depth ] );\r\n\t\t\t\tpoints.push( [ - 1, - 1, data[ ( ly * width + lx ) * 4 ] / 255 * depth ] );\r\n\t\t\t\tpoints.push( [ 0, - 1, data[ ( ly * width + x ) * 4 ] / 255 * depth ] );\r\n\t\t\t\tpoints.push( [ 1, - 1, data[ ( ly * width + ux ) * 4 ] / 255 * depth ] );\r\n\t\t\t\tpoints.push( [ 1, 0, data[ ( y * width + ux ) * 4 ] / 255 * depth ] );\r\n\t\t\t\tpoints.push( [ 1, 1, data[ ( uy * width + ux ) * 4 ] / 255 * depth ] );\r\n\t\t\t\tpoints.push( [ 0, 1, data[ ( uy * width + x ) * 4 ] / 255 * depth ] );\r\n\t\t\t\tpoints.push( [ - 1, 1, data[ ( uy * width + lx ) * 4 ] / 255 * depth ] );\r\n\r\n\t\t\t\tvar normals = [];\r\n\t\t\t\tvar num_points = points.length;\r\n\r\n\t\t\t\tfor ( var i = 0; i < num_points; i ++ ) {\r\n\r\n\t\t\t\t\tvar v1 = points[ i ];\r\n\t\t\t\t\tvar v2 = points[ ( i + 1 ) % num_points ];\r\n\t\t\t\t\tv1 = subtract( v1, origin );\r\n\t\t\t\t\tv2 = subtract( v2, origin );\r\n\t\t\t\t\tnormals.push( normalize( cross( v1, v2 ) ) );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar normal = [ 0, 0, 0 ];\r\n\r\n\t\t\t\tfor ( var i = 0; i < normals.length; i ++ ) {\r\n\r\n\t\t\t\t\tnormal[ 0 ] += normals[ i ][ 0 ];\r\n\t\t\t\t\tnormal[ 1 ] += normals[ i ][ 1 ];\r\n\t\t\t\t\tnormal[ 2 ] += normals[ i ][ 2 ];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tnormal[ 0 ] /= normals.length;\r\n\t\t\t\tnormal[ 1 ] /= normals.length;\r\n\t\t\t\tnormal[ 2 ] /= normals.length;\r\n\r\n\t\t\t\tvar idx = ( y * width + x ) * 4;\r\n\r\n\t\t\t\toutput[ idx ] = ( ( normal[ 0 ] + 1.0 ) / 2.0 * 255 ) | 0;\r\n\t\t\t\toutput[ idx + 1 ] = ( ( normal[ 1 ] + 1.0 ) / 2.0 * 255 ) | 0;\r\n\t\t\t\toutput[ idx + 2 ] = ( normal[ 2 ] * 255 ) | 0;\r\n\t\t\t\toutput[ idx + 3 ] = 255;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tcontext.putImageData( imageData, 0, 0 );\r\n\r\n\t\treturn canvas;\r\n\r\n\t},\r\n\r\n\tgenerateDataTexture: function ( width, height, color ) {\r\n\r\n\t\tvar size = width * height;\r\n\t\tvar data = new Uint8Array( 3 * size );\r\n\r\n\t\tvar r = Math.floor( color.r * 255 );\r\n\t\tvar g = Math.floor( color.g * 255 );\r\n\t\tvar b = Math.floor( color.b * 255 );\r\n\r\n\t\tfor ( var i = 0; i < size; i ++ ) {\r\n\r\n\t\t\tdata[ i * 3 ] \t   = r;\r\n\t\t\tdata[ i * 3 + 1 ] = g;\r\n\t\t\tdata[ i * 3 + 2 ] = b;\r\n\r\n\t\t}\r\n\r\n\t\tvar texture = new THREE.DataTexture( data, width, height, THREE.RGBFormat );\r\n\t\ttexture.needsUpdate = true;\r\n\r\n\t\treturn texture;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/extras/SceneUtils.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.SceneUtils = {\r\n\r\n\tcreateMultiMaterialObject: function ( geometry, materials ) {\r\n\r\n\t\tvar group = new THREE.Group();\r\n\r\n\t\tfor ( var i = 0, l = materials.length; i < l; i ++ ) {\r\n\r\n\t\t\tgroup.add( new THREE.Mesh( geometry, materials[ i ] ) );\r\n\r\n\t\t}\r\n\r\n\t\treturn group;\r\n\r\n\t},\r\n\r\n\tdetach: function ( child, parent, scene ) {\r\n\r\n\t\tchild.applyMatrix( parent.matrixWorld );\r\n\t\tparent.remove( child );\r\n\t\tscene.add( child );\r\n\r\n\t},\r\n\r\n\tattach: function ( child, scene, parent ) {\r\n\r\n\t\tvar matrixWorldInverse = new THREE.Matrix4();\r\n\t\tmatrixWorldInverse.getInverse( parent.matrixWorld );\r\n\t\tchild.applyMatrix( matrixWorldInverse );\r\n\r\n\t\tscene.remove( child );\r\n\t\tparent.add( child );\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/extras/FontUtils.js\r\n\r\n/**\r\n * @author zz85 / http://www.lab4games.net/zz85/blog\r\n * @author alteredq / http://alteredqualia.com/\r\n *\r\n * For Text operations in three.js (See TextGeometry)\r\n *\r\n * It uses techniques used in:\r\n *\r\n *\tTriangulation ported from AS3\r\n *\t\tSimple Polygon Triangulation\r\n *\t\thttp://actionsnippet.com/?p=1462\r\n *\r\n * \tA Method to triangulate shapes with holes\r\n *\t\thttp://www.sakri.net/blog/2009/06/12/an-approach-to-triangulating-polygons-with-holes/\r\n *\r\n */\r\n\r\nTHREE.FontUtils = {\r\n\r\n\tfaces: {},\r\n\r\n\t// Just for now. face[weight][style]\r\n\r\n\tface: 'helvetiker',\r\n\tweight: 'normal',\r\n\tstyle: 'normal',\r\n\tsize: 150,\r\n\tdivisions: 10,\r\n\r\n\tgetFace: function () {\r\n\r\n\t\ttry {\r\n\r\n\t\t\treturn this.faces[ this.face.toLowerCase() ][ this.weight ][ this.style ];\r\n\r\n\t\t} catch ( e ) {\r\n\r\n\t\t\tthrow \"The font \" + this.face + \" with \" + this.weight + \" weight and \" + this.style + \" style is missing.\"\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tloadFace: function ( data ) {\r\n\r\n\t\tvar family = data.familyName.toLowerCase();\r\n\r\n\t\tvar ThreeFont = this;\r\n\r\n\t\tThreeFont.faces[ family ] = ThreeFont.faces[ family ] || {};\r\n\r\n\t\tThreeFont.faces[ family ][ data.cssFontWeight ] = ThreeFont.faces[ family ][ data.cssFontWeight ] || {};\r\n\t\tThreeFont.faces[ family ][ data.cssFontWeight ][ data.cssFontStyle ] = data;\r\n\r\n\t\tThreeFont.faces[ family ][ data.cssFontWeight ][ data.cssFontStyle ] = data;\r\n\r\n\t\treturn data;\r\n\r\n\t},\r\n\r\n\tdrawText: function ( text ) {\r\n\r\n\t\t// RenderText\r\n\r\n\t\tvar i,\r\n\t\t\tface = this.getFace(),\r\n\t\t\tscale = this.size / face.resolution,\r\n\t\t\toffset = 0,\r\n\t\t\tchars = String( text ).split( '' ),\r\n\t\t\tlength = chars.length;\r\n\r\n\t\tvar fontPaths = [];\r\n\r\n\t\tfor ( i = 0; i < length; i ++ ) {\r\n\r\n\t\t\tvar path = new THREE.Path();\r\n\r\n\t\t\tvar ret = this.extractGlyphPoints( chars[ i ], face, scale, offset, path );\r\n\t\t\toffset += ret.offset;\r\n\r\n\t\t\tfontPaths.push( ret.path );\r\n\r\n\t\t}\r\n\r\n\t\t// get the width\r\n\r\n\t\tvar width = offset / 2;\r\n\t\t//\r\n\t\t// for ( p = 0; p < allPts.length; p++ ) {\r\n\t\t//\r\n\t\t// \tallPts[ p ].x -= width;\r\n\t\t//\r\n\t\t// }\r\n\r\n\t\t//var extract = this.extractPoints( allPts, characterPts );\r\n\t\t//extract.contour = allPts;\r\n\r\n\t\t//extract.paths = fontPaths;\r\n\t\t//extract.offset = width;\r\n\r\n\t\treturn { paths: fontPaths, offset: width };\r\n\r\n\t},\r\n\r\n\r\n\r\n\r\n\textractGlyphPoints: function ( c, face, scale, offset, path ) {\r\n\r\n\t\tvar pts = [];\r\n\r\n\t\tvar i, i2, divisions,\r\n\t\t\toutline, action, length,\r\n\t\t\tscaleX, scaleY,\r\n\t\t\tx, y, cpx, cpy, cpx0, cpy0, cpx1, cpy1, cpx2, cpy2,\r\n\t\t\tlaste,\r\n\t\t\tglyph = face.glyphs[ c ] || face.glyphs[ '?' ];\r\n\r\n\t\tif ( ! glyph ) return;\r\n\r\n\t\tif ( glyph.o ) {\r\n\r\n\t\t\toutline = glyph._cachedOutline || ( glyph._cachedOutline = glyph.o.split( ' ' ) );\r\n\t\t\tlength = outline.length;\r\n\r\n\t\t\tscaleX = scale;\r\n\t\t\tscaleY = scale;\r\n\r\n\t\t\tfor ( i = 0; i < length; ) {\r\n\r\n\t\t\t\taction = outline[ i ++ ];\r\n\r\n\t\t\t\t//console.log( action );\r\n\r\n\t\t\t\tswitch ( action ) {\r\n\r\n\t\t\t\tcase 'm':\r\n\r\n\t\t\t\t\t// Move To\r\n\r\n\t\t\t\t\tx = outline[ i ++ ] * scaleX + offset;\r\n\t\t\t\t\ty = outline[ i ++ ] * scaleY;\r\n\r\n\t\t\t\t\tpath.moveTo( x, y );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'l':\r\n\r\n\t\t\t\t\t// Line To\r\n\r\n\t\t\t\t\tx = outline[ i ++ ] * scaleX + offset;\r\n\t\t\t\t\ty = outline[ i ++ ] * scaleY;\r\n\t\t\t\t\tpath.lineTo( x, y );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'q':\r\n\r\n\t\t\t\t\t// QuadraticCurveTo\r\n\r\n\t\t\t\t\tcpx  = outline[ i ++ ] * scaleX + offset;\r\n\t\t\t\t\tcpy  = outline[ i ++ ] * scaleY;\r\n\t\t\t\t\tcpx1 = outline[ i ++ ] * scaleX + offset;\r\n\t\t\t\t\tcpy1 = outline[ i ++ ] * scaleY;\r\n\r\n\t\t\t\t\tpath.quadraticCurveTo( cpx1, cpy1, cpx, cpy );\r\n\r\n\t\t\t\t\tlaste = pts[ pts.length - 1 ];\r\n\r\n\t\t\t\t\tif ( laste ) {\r\n\r\n\t\t\t\t\t\tcpx0 = laste.x;\r\n\t\t\t\t\t\tcpy0 = laste.y;\r\n\r\n\t\t\t\t\t\tfor ( i2 = 1, divisions = this.divisions; i2 <= divisions; i2 ++ ) {\r\n\r\n\t\t\t\t\t\t\tvar t = i2 / divisions;\r\n\t\t\t\t\t\t\tTHREE.Shape.Utils.b2( t, cpx0, cpx1, cpx );\r\n\t\t\t\t\t\t\tTHREE.Shape.Utils.b2( t, cpy0, cpy1, cpy );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'b':\r\n\r\n\t\t\t\t\t// Cubic Bezier Curve\r\n\r\n\t\t\t\t\tcpx  = outline[ i ++ ] *  scaleX + offset;\r\n\t\t\t\t\tcpy  = outline[ i ++ ] *  scaleY;\r\n\t\t\t\t\tcpx1 = outline[ i ++ ] *  scaleX + offset;\r\n\t\t\t\t\tcpy1 = outline[ i ++ ] *  scaleY;\r\n\t\t\t\t\tcpx2 = outline[ i ++ ] *  scaleX + offset;\r\n\t\t\t\t\tcpy2 = outline[ i ++ ] *  scaleY;\r\n\r\n\t\t\t\t\tpath.bezierCurveTo( cpx1, cpy1, cpx2, cpy2, cpx, cpy );\r\n\r\n\t\t\t\t\tlaste = pts[ pts.length - 1 ];\r\n\r\n\t\t\t\t\tif ( laste ) {\r\n\r\n\t\t\t\t\t\tcpx0 = laste.x;\r\n\t\t\t\t\t\tcpy0 = laste.y;\r\n\r\n\t\t\t\t\t\tfor ( i2 = 1, divisions = this.divisions; i2 <= divisions; i2 ++ ) {\r\n\r\n\t\t\t\t\t\t\tvar t = i2 / divisions;\r\n\t\t\t\t\t\t\tTHREE.Shape.Utils.b3( t, cpx0, cpx1, cpx2, cpx );\r\n\t\t\t\t\t\t\tTHREE.Shape.Utils.b3( t, cpy0, cpy1, cpy2, cpy );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\r\n\r\n\t\treturn { offset: glyph.ha * scale, path: path };\r\n\r\n\t}\r\n\r\n};\r\n\r\n\r\nTHREE.FontUtils.generateShapes = function ( text, parameters ) {\r\n\r\n\t// Parameters\r\n\r\n\tparameters = parameters || {};\r\n\r\n\tvar size = parameters.size !== undefined ? parameters.size : 100;\r\n\tvar curveSegments = parameters.curveSegments !== undefined ? parameters.curveSegments : 4;\r\n\r\n\tvar font = parameters.font !== undefined ? parameters.font : 'helvetiker';\r\n\tvar weight = parameters.weight !== undefined ? parameters.weight : 'normal';\r\n\tvar style = parameters.style !== undefined ? parameters.style : 'normal';\r\n\r\n\tTHREE.FontUtils.size = size;\r\n\tTHREE.FontUtils.divisions = curveSegments;\r\n\r\n\tTHREE.FontUtils.face = font;\r\n\tTHREE.FontUtils.weight = weight;\r\n\tTHREE.FontUtils.style = style;\r\n\r\n\t// Get a Font data json object\r\n\r\n\tvar data = THREE.FontUtils.drawText( text );\r\n\r\n\tvar paths = data.paths;\r\n\tvar shapes = [];\r\n\r\n\tfor ( var p = 0, pl = paths.length; p < pl; p ++ ) {\r\n\r\n\t\tArray.prototype.push.apply( shapes, paths[ p ].toShapes() );\r\n\r\n\t}\r\n\r\n\treturn shapes;\r\n\r\n};\r\n\r\n\r\n/**\r\n * This code is a quick port of code written in C++ which was submitted to\r\n * flipcode.com by John W. Ratcliff  // July 22, 2000\r\n * See original code and more information here:\r\n * http://www.flipcode.com/archives/Efficient_Polygon_Triangulation.shtml\r\n *\r\n * ported to actionscript by Zevan Rosser\r\n * www.actionsnippet.com\r\n *\r\n * ported to javascript by Joshua Koo\r\n * http://www.lab4games.net/zz85/blog\r\n *\r\n */\r\n\r\n\r\n( function ( namespace ) {\r\n\r\n\tvar EPSILON = 0.0000000001;\r\n\r\n\t// takes in an contour array and returns\r\n\r\n\tvar process = function ( contour, indices ) {\r\n\r\n\t\tvar n = contour.length;\r\n\r\n\t\tif ( n < 3 ) return null;\r\n\r\n\t\tvar result = [],\r\n\t\t\tverts = [],\r\n\t\t\tvertIndices = [];\r\n\r\n\t\t/* we want a counter-clockwise polygon in verts */\r\n\r\n\t\tvar u, v, w;\r\n\r\n\t\tif ( area( contour ) > 0.0 ) {\r\n\r\n\t\t\tfor ( v = 0; v < n; v ++ ) verts[ v ] = v;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tfor ( v = 0; v < n; v ++ ) verts[ v ] = ( n - 1 ) - v;\r\n\r\n\t\t}\r\n\r\n\t\tvar nv = n;\r\n\r\n\t\t/*  remove nv - 2 vertices, creating 1 triangle every time */\r\n\r\n\t\tvar count = 2 * nv;   /* error detection */\r\n\r\n\t\tfor ( v = nv - 1; nv > 2; ) {\r\n\r\n\t\t\t/* if we loop, it is probably a non-simple polygon */\r\n\r\n\t\t\tif ( ( count -- ) <= 0 ) {\r\n\r\n\t\t\t\t//** Triangulate: ERROR - probable bad polygon!\r\n\r\n\t\t\t\t//throw ( \"Warning, unable to triangulate polygon!\" );\r\n\t\t\t\t//return null;\r\n\t\t\t\t// Sometimes warning is fine, especially polygons are triangulated in reverse.\r\n\t\t\t\tconsole.warn( 'THREE.FontUtils: Warning, unable to triangulate polygon! in Triangulate.process()' );\r\n\r\n\t\t\t\tif ( indices ) return vertIndices;\r\n\t\t\t\treturn result;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t/* three consecutive vertices in current polygon, <u,v,w> */\r\n\r\n\t\t\tu = v; \t \tif ( nv <= u ) u = 0;     /* previous */\r\n\t\t\tv = u + 1;  if ( nv <= v ) v = 0;     /* new v    */\r\n\t\t\tw = v + 1;  if ( nv <= w ) w = 0;     /* next     */\r\n\r\n\t\t\tif ( snip( contour, u, v, w, nv, verts ) ) {\r\n\r\n\t\t\t\tvar a, b, c, s, t;\r\n\r\n\t\t\t\t/* true names of the vertices */\r\n\r\n\t\t\t\ta = verts[ u ];\r\n\t\t\t\tb = verts[ v ];\r\n\t\t\t\tc = verts[ w ];\r\n\r\n\t\t\t\t/* output Triangle */\r\n\r\n\t\t\t\tresult.push( [ contour[ a ],\r\n\t\t\t\t\tcontour[ b ],\r\n\t\t\t\t\tcontour[ c ] ] );\r\n\r\n\r\n\t\t\t\tvertIndices.push( [ verts[ u ], verts[ v ], verts[ w ] ] );\r\n\r\n\t\t\t\t/* remove v from the remaining polygon */\r\n\r\n\t\t\t\tfor ( s = v, t = v + 1; t < nv; s ++, t ++ ) {\r\n\r\n\t\t\t\t\tverts[ s ] = verts[ t ];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tnv --;\r\n\r\n\t\t\t\t/* reset error detection counter */\r\n\r\n\t\t\t\tcount = 2 * nv;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( indices ) return vertIndices;\r\n\t\treturn result;\r\n\r\n\t};\r\n\r\n\t// calculate area of the contour polygon\r\n\r\n\tvar area = function ( contour ) {\r\n\r\n\t\tvar n = contour.length;\r\n\t\tvar a = 0.0;\r\n\r\n\t\tfor ( var p = n - 1, q = 0; q < n; p = q ++ ) {\r\n\r\n\t\t\ta += contour[ p ].x * contour[ q ].y - contour[ q ].x * contour[ p ].y;\r\n\r\n\t\t}\r\n\r\n\t\treturn a * 0.5;\r\n\r\n\t};\r\n\r\n\tvar snip = function ( contour, u, v, w, n, verts ) {\r\n\r\n\t\tvar p;\r\n\t\tvar ax, ay, bx, by;\r\n\t\tvar cx, cy, px, py;\r\n\r\n\t\tax = contour[ verts[ u ] ].x;\r\n\t\tay = contour[ verts[ u ] ].y;\r\n\r\n\t\tbx = contour[ verts[ v ] ].x;\r\n\t\tby = contour[ verts[ v ] ].y;\r\n\r\n\t\tcx = contour[ verts[ w ] ].x;\r\n\t\tcy = contour[ verts[ w ] ].y;\r\n\r\n\t\tif ( EPSILON > ( ( ( bx - ax ) * ( cy - ay ) ) - ( ( by - ay ) * ( cx - ax ) ) ) ) return false;\r\n\r\n\t\tvar aX, aY, bX, bY, cX, cY;\r\n\t\tvar apx, apy, bpx, bpy, cpx, cpy;\r\n\t\tvar cCROSSap, bCROSScp, aCROSSbp;\r\n\r\n\t\taX = cx - bx;  aY = cy - by;\r\n\t\tbX = ax - cx;  bY = ay - cy;\r\n\t\tcX = bx - ax;  cY = by - ay;\r\n\r\n\t\tfor ( p = 0; p < n; p ++ ) {\r\n\r\n\t\t\tpx = contour[ verts[ p ] ].x;\r\n\t\t\tpy = contour[ verts[ p ] ].y;\r\n\r\n\t\t\tif ( ( ( px === ax ) && ( py === ay ) ) ||\r\n\t\t\t\t ( ( px === bx ) && ( py === by ) ) ||\r\n\t\t\t\t ( ( px === cx ) && ( py === cy ) ) )\tcontinue;\r\n\r\n\t\t\tapx = px - ax;  apy = py - ay;\r\n\t\t\tbpx = px - bx;  bpy = py - by;\r\n\t\t\tcpx = px - cx;  cpy = py - cy;\r\n\r\n\t\t\t// see if p is inside triangle abc\r\n\r\n\t\t\taCROSSbp = aX * bpy - aY * bpx;\r\n\t\t\tcCROSSap = cX * apy - cY * apx;\r\n\t\t\tbCROSScp = bX * cpy - bY * cpx;\r\n\r\n\t\t\tif ( ( aCROSSbp >= - EPSILON ) && ( bCROSScp >= - EPSILON ) && ( cCROSSap >= - EPSILON ) ) return false;\r\n\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\r\n\t};\r\n\r\n\r\n\tnamespace.Triangulate = process;\r\n\tnamespace.Triangulate.area = area;\r\n\r\n\treturn namespace;\r\n\r\n} )( THREE.FontUtils );\r\n\r\n// To use the typeface.js face files, hook up the API\r\n\r\nTHREE.typeface_js = { faces: THREE.FontUtils.faces, loadFace: THREE.FontUtils.loadFace };\r\nif ( typeof self !== 'undefined' ) self._typeface_js = THREE.typeface_js;\r\n\r\n// File:src/extras/audio/Audio.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.Audio = function ( listener ) {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.type = 'Audio';\r\n\r\n\tthis.context = listener.context;\r\n\tthis.source = this.context.createBufferSource();\r\n\tthis.source.onended = this.onEnded.bind( this );\r\n\r\n\tthis.gain = this.context.createGain();\r\n\tthis.gain.connect( this.context.destination );\r\n\r\n\tthis.panner = this.context.createPanner();\r\n\tthis.panner.connect( this.gain );\r\n\r\n\tthis.autoplay = false;\r\n\r\n\tthis.startTime = 0;\r\n\tthis.playbackRate = 1;\r\n\tthis.isPlaying = false;\r\n\r\n};\r\n\r\nTHREE.Audio.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.Audio.prototype.constructor = THREE.Audio;\r\n\r\nTHREE.Audio.prototype.load = function ( file ) {\r\n\r\n\tvar scope = this;\r\n\r\n\tvar request = new XMLHttpRequest();\r\n\trequest.open( 'GET', file, true );\r\n\trequest.responseType = 'arraybuffer';\r\n\trequest.onload = function ( e ) {\r\n\r\n\t\tscope.context.decodeAudioData( this.response, function ( buffer ) {\r\n\r\n\t\t\tscope.source.buffer = buffer;\r\n\r\n\t\t\tif ( scope.autoplay ) scope.play();\r\n\r\n\t\t} );\r\n\r\n\t};\r\n\trequest.send();\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\nTHREE.Audio.prototype.play = function () {\r\n\r\n\tif ( this.isPlaying === true ) {\r\n\r\n\t\tconsole.warn( 'THREE.Audio: Audio is already playing.' );\r\n\t\treturn;\r\n\r\n\t}\r\n\r\n\tvar source = this.context.createBufferSource();\r\n\r\n\tsource.buffer = this.source.buffer;\r\n\tsource.loop = this.source.loop;\r\n\tsource.onended = this.source.onended;\r\n\tsource.start( 0, this.startTime );\r\n\tsource.playbackRate.value = this.playbackRate;\r\n\r\n\tthis.isPlaying = true;\r\n\r\n\tthis.source = source;\r\n\r\n\tthis.connect();\r\n\r\n};\r\n\r\nTHREE.Audio.prototype.pause = function () {\r\n\r\n\tthis.source.stop();\r\n\tthis.startTime = this.context.currentTime;\r\n\r\n};\r\n\r\nTHREE.Audio.prototype.stop = function () {\r\n\r\n\tthis.source.stop();\r\n\tthis.startTime = 0;\r\n\r\n};\r\n\r\nTHREE.Audio.prototype.connect = function () {\r\n\r\n\tif ( this.filter !== undefined ) {\r\n\r\n\t\tthis.source.connect( this.filter );\r\n\t\tthis.filter.connect( this.panner );\r\n\r\n\t} else {\r\n\r\n\t\tthis.source.connect( this.panner );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.Audio.prototype.disconnect = function () {\r\n\r\n\tif ( this.filter !== undefined ) {\r\n\r\n\t\tthis.source.disconnect( this.filter );\r\n\t\tthis.filter.disconnect( this.panner );\r\n\r\n\t} else {\r\n\r\n\t\tthis.source.disconnect( this.panner );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.Audio.prototype.setFilter = function ( value ) {\r\n\r\n\tif ( this.isPlaying === true ) {\r\n\r\n\t\tthis.disconnect();\r\n\t\tthis.filter = value;\r\n\t\tthis.connect();\r\n\r\n\t} else {\r\n\r\n\t\tthis.filter = value;\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.Audio.prototype.getFilter = function () {\r\n\r\n\treturn this.filter;\r\n\r\n};\r\n\r\nTHREE.Audio.prototype.setPlaybackRate = function ( value ) {\r\n\r\n\tthis.playbackRate = value;\r\n\r\n\tif ( this.isPlaying === true ) {\r\n\r\n\t\tthis.source.playbackRate.value = this.playbackRate;\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.Audio.prototype.getPlaybackRate = function () {\r\n\r\n\treturn this.playbackRate;\r\n\r\n};\r\n\r\nTHREE.Audio.prototype.onEnded = function() {\r\n\r\n\tthis.isPlaying = false;\r\n\r\n};\r\n\r\nTHREE.Audio.prototype.setLoop = function ( value ) {\r\n\r\n\tthis.source.loop = value;\r\n\r\n};\r\n\r\nTHREE.Audio.prototype.getLoop = function () {\r\n\r\n\treturn this.source.loop;\r\n\r\n};\r\n\r\nTHREE.Audio.prototype.setRefDistance = function ( value ) {\r\n\r\n\tthis.panner.refDistance = value;\r\n\r\n};\r\n\r\nTHREE.Audio.prototype.getRefDistance = function () {\r\n\r\n\treturn this.panner.refDistance;\r\n\r\n};\r\n\r\nTHREE.Audio.prototype.setRolloffFactor = function ( value ) {\r\n\r\n\tthis.panner.rolloffFactor = value;\r\n\r\n};\r\n\r\nTHREE.Audio.prototype.getRolloffFactor = function () {\r\n\r\n\treturn this.panner.rolloffFactor;\r\n\r\n};\r\n\r\nTHREE.Audio.prototype.setVolume = function ( value ) {\r\n\r\n\tthis.gain.gain.value = value;\r\n\r\n};\r\n\r\nTHREE.Audio.prototype.getVolume = function () {\r\n\r\n\treturn this.gain.gain.value;\r\n\r\n};\r\n\r\nTHREE.Audio.prototype.updateMatrixWorld = ( function () {\r\n\r\n\tvar position = new THREE.Vector3();\r\n\r\n\treturn function updateMatrixWorld( force ) {\r\n\r\n\t\tTHREE.Object3D.prototype.updateMatrixWorld.call( this, force );\r\n\r\n\t\tposition.setFromMatrixPosition( this.matrixWorld );\r\n\r\n\t\tthis.panner.setPosition( position.x, position.y, position.z );\r\n\r\n\t};\r\n\r\n} )();\r\n\r\n// File:src/extras/audio/AudioListener.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.AudioListener = function () {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.type = 'AudioListener';\r\n\r\n\tthis.context = new ( window.AudioContext || window.webkitAudioContext )();\r\n\r\n};\r\n\r\nTHREE.AudioListener.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.AudioListener.prototype.constructor = THREE.AudioListener;\r\n\r\nTHREE.AudioListener.prototype.updateMatrixWorld = ( function () {\r\n\r\n\tvar position = new THREE.Vector3();\r\n\tvar quaternion = new THREE.Quaternion();\r\n\tvar scale = new THREE.Vector3();\r\n\r\n\tvar orientation = new THREE.Vector3();\r\n\r\n\treturn function updateMatrixWorld( force ) {\r\n\r\n\t\tTHREE.Object3D.prototype.updateMatrixWorld.call( this, force );\r\n\r\n\t\tvar listener = this.context.listener;\r\n\t\tvar up = this.up;\r\n\r\n\t\tthis.matrixWorld.decompose( position, quaternion, scale );\r\n\r\n\t\torientation.set( 0, 0, - 1 ).applyQuaternion( quaternion );\r\n\r\n\t\tlistener.setPosition( position.x, position.y, position.z );\r\n\t\tlistener.setOrientation( orientation.x, orientation.y, orientation.z, up.x, up.y, up.z );\r\n\r\n\t};\r\n\r\n} )();\r\n\r\n// File:src/extras/core/Curve.js\r\n\r\n/**\r\n * @author zz85 / http://www.lab4games.net/zz85/blog\r\n * Extensible curve object\r\n *\r\n * Some common of Curve methods\r\n * .getPoint(t), getTangent(t)\r\n * .getPointAt(u), getTagentAt(u)\r\n * .getPoints(), .getSpacedPoints()\r\n * .getLength()\r\n * .updateArcLengths()\r\n *\r\n * This following classes subclasses THREE.Curve:\r\n *\r\n * -- 2d classes --\r\n * THREE.LineCurve\r\n * THREE.QuadraticBezierCurve\r\n * THREE.CubicBezierCurve\r\n * THREE.SplineCurve\r\n * THREE.ArcCurve\r\n * THREE.EllipseCurve\r\n *\r\n * -- 3d classes --\r\n * THREE.LineCurve3\r\n * THREE.QuadraticBezierCurve3\r\n * THREE.CubicBezierCurve3\r\n * THREE.SplineCurve3\r\n * THREE.ClosedSplineCurve3\r\n *\r\n * A series of curves can be represented as a THREE.CurvePath\r\n *\r\n **/\r\n\r\n/**************************************************************\r\n *\tAbstract Curve base class\r\n **************************************************************/\r\n\r\nTHREE.Curve = function () {\r\n\r\n};\r\n\r\n// Virtual base class method to overwrite and implement in subclasses\r\n//\t- t [0 .. 1]\r\n\r\nTHREE.Curve.prototype.getPoint = function ( t ) {\r\n\r\n\tconsole.warn( \"THREE.Curve: Warning, getPoint() not implemented!\" );\r\n\treturn null;\r\n\r\n};\r\n\r\n// Get point at relative position in curve according to arc length\r\n// - u [0 .. 1]\r\n\r\nTHREE.Curve.prototype.getPointAt = function ( u ) {\r\n\r\n\tvar t = this.getUtoTmapping( u );\r\n\treturn this.getPoint( t );\r\n\r\n};\r\n\r\n// Get sequence of points using getPoint( t )\r\n\r\nTHREE.Curve.prototype.getPoints = function ( divisions ) {\r\n\r\n\tif ( ! divisions ) divisions = 5;\r\n\r\n\tvar d, pts = [];\r\n\r\n\tfor ( d = 0; d <= divisions; d ++ ) {\r\n\r\n\t\tpts.push( this.getPoint( d / divisions ) );\r\n\r\n\t}\r\n\r\n\treturn pts;\r\n\r\n};\r\n\r\n// Get sequence of points using getPointAt( u )\r\n\r\nTHREE.Curve.prototype.getSpacedPoints = function ( divisions ) {\r\n\r\n\tif ( ! divisions ) divisions = 5;\r\n\r\n\tvar d, pts = [];\r\n\r\n\tfor ( d = 0; d <= divisions; d ++ ) {\r\n\r\n\t\tpts.push( this.getPointAt( d / divisions ) );\r\n\r\n\t}\r\n\r\n\treturn pts;\r\n\r\n};\r\n\r\n// Get total curve arc length\r\n\r\nTHREE.Curve.prototype.getLength = function () {\r\n\r\n\tvar lengths = this.getLengths();\r\n\treturn lengths[ lengths.length - 1 ];\r\n\r\n};\r\n\r\n// Get list of cumulative segment lengths\r\n\r\nTHREE.Curve.prototype.getLengths = function ( divisions ) {\r\n\r\n\tif ( ! divisions ) divisions = ( this.__arcLengthDivisions ) ? ( this.__arcLengthDivisions ) : 200;\r\n\r\n\tif ( this.cacheArcLengths\r\n\t\t&& ( this.cacheArcLengths.length === divisions + 1 )\r\n\t\t&& ! this.needsUpdate ) {\r\n\r\n\t\t//console.log( \"cached\", this.cacheArcLengths );\r\n\t\treturn this.cacheArcLengths;\r\n\r\n\t}\r\n\r\n\tthis.needsUpdate = false;\r\n\r\n\tvar cache = [];\r\n\tvar current, last = this.getPoint( 0 );\r\n\tvar p, sum = 0;\r\n\r\n\tcache.push( 0 );\r\n\r\n\tfor ( p = 1; p <= divisions; p ++ ) {\r\n\r\n\t\tcurrent = this.getPoint ( p / divisions );\r\n\t\tsum += current.distanceTo( last );\r\n\t\tcache.push( sum );\r\n\t\tlast = current;\r\n\r\n\t}\r\n\r\n\tthis.cacheArcLengths = cache;\r\n\r\n\treturn cache; // { sums: cache, sum:sum }; Sum is in the last element.\r\n\r\n};\r\n\r\n\r\nTHREE.Curve.prototype.updateArcLengths = function() {\r\n\r\n\tthis.needsUpdate = true;\r\n\tthis.getLengths();\r\n\r\n};\r\n\r\n// Given u ( 0 .. 1 ), get a t to find p. This gives you points which are equidistant\r\n\r\nTHREE.Curve.prototype.getUtoTmapping = function ( u, distance ) {\r\n\r\n\tvar arcLengths = this.getLengths();\r\n\r\n\tvar i = 0, il = arcLengths.length;\r\n\r\n\tvar targetArcLength; // The targeted u distance value to get\r\n\r\n\tif ( distance ) {\r\n\r\n\t\ttargetArcLength = distance;\r\n\r\n\t} else {\r\n\r\n\t\ttargetArcLength = u * arcLengths[ il - 1 ];\r\n\r\n\t}\r\n\r\n\t//var time = Date.now();\r\n\r\n\t// binary search for the index with largest value smaller than target u distance\r\n\r\n\tvar low = 0, high = il - 1, comparison;\r\n\r\n\twhile ( low <= high ) {\r\n\r\n\t\ti = Math.floor( low + ( high - low ) / 2 ); // less likely to overflow, though probably not issue here, JS doesn't really have integers, all numbers are floats\r\n\r\n\t\tcomparison = arcLengths[ i ] - targetArcLength;\r\n\r\n\t\tif ( comparison < 0 ) {\r\n\r\n\t\t\tlow = i + 1;\r\n\r\n\t\t} else if ( comparison > 0 ) {\r\n\r\n\t\t\thigh = i - 1;\r\n\r\n\t\t} else {\r\n\r\n\t\t\thigh = i;\r\n\t\t\tbreak;\r\n\r\n\t\t\t// DONE\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\ti = high;\r\n\r\n\t//console.log('b' , i, low, high, Date.now()- time);\r\n\r\n\tif ( arcLengths[ i ] === targetArcLength ) {\r\n\r\n\t\tvar t = i / ( il - 1 );\r\n\t\treturn t;\r\n\r\n\t}\r\n\r\n\t// we could get finer grain at lengths, or use simple interpolation between two points\r\n\r\n\tvar lengthBefore = arcLengths[ i ];\r\n\tvar lengthAfter = arcLengths[ i + 1 ];\r\n\r\n\tvar segmentLength = lengthAfter - lengthBefore;\r\n\r\n\t// determine where we are between the 'before' and 'after' points\r\n\r\n\tvar segmentFraction = ( targetArcLength - lengthBefore ) / segmentLength;\r\n\r\n\t// add that fractional amount to t\r\n\r\n\tvar t = ( i + segmentFraction ) / ( il - 1 );\r\n\r\n\treturn t;\r\n\r\n};\r\n\r\n// Returns a unit vector tangent at t\r\n// In case any sub curve does not implement its tangent derivation,\r\n// 2 points a small delta apart will be used to find its gradient\r\n// which seems to give a reasonable approximation\r\n\r\nTHREE.Curve.prototype.getTangent = function( t ) {\r\n\r\n\tvar delta = 0.0001;\r\n\tvar t1 = t - delta;\r\n\tvar t2 = t + delta;\r\n\r\n\t// Capping in case of danger\r\n\r\n\tif ( t1 < 0 ) t1 = 0;\r\n\tif ( t2 > 1 ) t2 = 1;\r\n\r\n\tvar pt1 = this.getPoint( t1 );\r\n\tvar pt2 = this.getPoint( t2 );\r\n\r\n\tvar vec = pt2.clone().sub( pt1 );\r\n\treturn vec.normalize();\r\n\r\n};\r\n\r\n\r\nTHREE.Curve.prototype.getTangentAt = function ( u ) {\r\n\r\n\tvar t = this.getUtoTmapping( u );\r\n\treturn this.getTangent( t );\r\n\r\n};\r\n\r\n\r\n\r\n\r\n\r\n/**************************************************************\r\n *\tUtils\r\n **************************************************************/\r\n\r\nTHREE.Curve.Utils = {\r\n\r\n\ttangentQuadraticBezier: function ( t, p0, p1, p2 ) {\r\n\r\n\t\treturn 2 * ( 1 - t ) * ( p1 - p0 ) + 2 * t * ( p2 - p1 );\r\n\r\n\t},\r\n\r\n\t// Puay Bing, thanks for helping with this derivative!\r\n\r\n\ttangentCubicBezier: function ( t, p0, p1, p2, p3 ) {\r\n\r\n\t\treturn - 3 * p0 * ( 1 - t ) * ( 1 - t )  +\r\n\t\t\t3 * p1 * ( 1 - t ) * ( 1 - t ) - 6 * t * p1 * ( 1 - t ) +\r\n\t\t\t6 * t *  p2 * ( 1 - t ) - 3 * t * t * p2 +\r\n\t\t\t3 * t * t * p3;\r\n\r\n\t},\r\n\r\n\ttangentSpline: function ( t, p0, p1, p2, p3 ) {\r\n\r\n\t\t// To check if my formulas are correct\r\n\r\n\t\tvar h00 = 6 * t * t - 6 * t; \t// derived from 2t^3 − 3t^2 + 1\r\n\t\tvar h10 = 3 * t * t - 4 * t + 1; // t^3 − 2t^2 + t\r\n\t\tvar h01 = - 6 * t * t + 6 * t; \t// − 2t3 + 3t2\r\n\t\tvar h11 = 3 * t * t - 2 * t;\t// t3 − t2\r\n\r\n\t\treturn h00 + h10 + h01 + h11;\r\n\r\n\t},\r\n\r\n\t// Catmull-Rom\r\n\r\n\tinterpolate: function( p0, p1, p2, p3, t ) {\r\n\r\n\t\tvar v0 = ( p2 - p0 ) * 0.5;\r\n\t\tvar v1 = ( p3 - p1 ) * 0.5;\r\n\t\tvar t2 = t * t;\r\n\t\tvar t3 = t * t2;\r\n\t\treturn ( 2 * p1 - 2 * p2 + v0 + v1 ) * t3 + ( - 3 * p1 + 3 * p2 - 2 * v0 - v1 ) * t2 + v0 * t + p1;\r\n\r\n\t}\r\n\r\n};\r\n\r\n\r\n// TODO: Transformation for Curves?\r\n\r\n/**************************************************************\r\n *\t3D Curves\r\n **************************************************************/\r\n\r\n// A Factory method for creating new curve subclasses\r\n\r\nTHREE.Curve.create = function ( constructor, getPointFunc ) {\r\n\r\n\tconstructor.prototype = Object.create( THREE.Curve.prototype );\r\n\tconstructor.prototype.constructor = constructor;\r\n\tconstructor.prototype.getPoint = getPointFunc;\r\n\r\n\treturn constructor;\r\n\r\n};\r\n\r\n// File:src/extras/core/CurvePath.js\r\n\r\n/**\r\n * @author zz85 / http://www.lab4games.net/zz85/blog\r\n *\r\n **/\r\n\r\n/**************************************************************\r\n *\tCurved Path - a curve path is simply a array of connected\r\n *  curves, but retains the api of a curve\r\n **************************************************************/\r\n\r\nTHREE.CurvePath = function () {\r\n\r\n\tthis.curves = [];\r\n\tthis.bends = [];\r\n\r\n\tthis.autoClose = false; // Automatically closes the path\r\n\r\n};\r\n\r\nTHREE.CurvePath.prototype = Object.create( THREE.Curve.prototype );\r\nTHREE.CurvePath.prototype.constructor = THREE.CurvePath;\r\n\r\nTHREE.CurvePath.prototype.add = function ( curve ) {\r\n\r\n\tthis.curves.push( curve );\r\n\r\n};\r\n\r\nTHREE.CurvePath.prototype.checkConnection = function() {\r\n\t// TODO\r\n\t// If the ending of curve is not connected to the starting\r\n\t// or the next curve, then, this is not a real path\r\n};\r\n\r\nTHREE.CurvePath.prototype.closePath = function() {\r\n\r\n\t// TODO Test\r\n\t// and verify for vector3 (needs to implement equals)\r\n\t// Add a line curve if start and end of lines are not connected\r\n\tvar startPoint = this.curves[ 0 ].getPoint( 0 );\r\n\tvar endPoint = this.curves[ this.curves.length - 1 ].getPoint( 1 );\r\n\r\n\tif ( ! startPoint.equals( endPoint ) ) {\r\n\r\n\t\tthis.curves.push( new THREE.LineCurve( endPoint, startPoint ) );\r\n\r\n\t}\r\n\r\n};\r\n\r\n// To get accurate point with reference to\r\n// entire path distance at time t,\r\n// following has to be done:\r\n\r\n// 1. Length of each sub path have to be known\r\n// 2. Locate and identify type of curve\r\n// 3. Get t for the curve\r\n// 4. Return curve.getPointAt(t')\r\n\r\nTHREE.CurvePath.prototype.getPoint = function( t ) {\r\n\r\n\tvar d = t * this.getLength();\r\n\tvar curveLengths = this.getCurveLengths();\r\n\tvar i = 0, diff, curve;\r\n\r\n\t// To think about boundaries points.\r\n\r\n\twhile ( i < curveLengths.length ) {\r\n\r\n\t\tif ( curveLengths[ i ] >= d ) {\r\n\r\n\t\t\tdiff = curveLengths[ i ] - d;\r\n\t\t\tcurve = this.curves[ i ];\r\n\r\n\t\t\tvar u = 1 - diff / curve.getLength();\r\n\r\n\t\t\treturn curve.getPointAt( u );\r\n\r\n\t\t}\r\n\r\n\t\ti ++;\r\n\r\n\t}\r\n\r\n\treturn null;\r\n\r\n\t// loop where sum != 0, sum > d , sum+1 <d\r\n\r\n};\r\n\r\n/*\r\nTHREE.CurvePath.prototype.getTangent = function( t ) {\r\n};*/\r\n\r\n\r\n// We cannot use the default THREE.Curve getPoint() with getLength() because in\r\n// THREE.Curve, getLength() depends on getPoint() but in THREE.CurvePath\r\n// getPoint() depends on getLength\r\n\r\nTHREE.CurvePath.prototype.getLength = function() {\r\n\r\n\tvar lens = this.getCurveLengths();\r\n\treturn lens[ lens.length - 1 ];\r\n\r\n};\r\n\r\n// Compute lengths and cache them\r\n// We cannot overwrite getLengths() because UtoT mapping uses it.\r\n\r\nTHREE.CurvePath.prototype.getCurveLengths = function() {\r\n\r\n\t// We use cache values if curves and cache array are same length\r\n\r\n\tif ( this.cacheLengths && this.cacheLengths.length === this.curves.length ) {\r\n\r\n\t\treturn this.cacheLengths;\r\n\r\n\t}\r\n\r\n\t// Get length of sub-curve\r\n\t// Push sums into cached array\r\n\r\n\tvar lengths = [], sums = 0;\r\n\tvar i, il = this.curves.length;\r\n\r\n\tfor ( i = 0; i < il; i ++ ) {\r\n\r\n\t\tsums += this.curves[ i ].getLength();\r\n\t\tlengths.push( sums );\r\n\r\n\t}\r\n\r\n\tthis.cacheLengths = lengths;\r\n\r\n\treturn lengths;\r\n\r\n};\r\n\r\n\r\n\r\n// Returns min and max coordinates\r\n\r\nTHREE.CurvePath.prototype.getBoundingBox = function () {\r\n\r\n\tvar points = this.getPoints();\r\n\r\n\tvar maxX, maxY, maxZ;\r\n\tvar minX, minY, minZ;\r\n\r\n\tmaxX = maxY = Number.NEGATIVE_INFINITY;\r\n\tminX = minY = Number.POSITIVE_INFINITY;\r\n\r\n\tvar p, i, il, sum;\r\n\r\n\tvar v3 = points[ 0 ] instanceof THREE.Vector3;\r\n\r\n\tsum = v3 ? new THREE.Vector3() : new THREE.Vector2();\r\n\r\n\tfor ( i = 0, il = points.length; i < il; i ++ ) {\r\n\r\n\t\tp = points[ i ];\r\n\r\n\t\tif ( p.x > maxX ) maxX = p.x;\r\n\t\telse if ( p.x < minX ) minX = p.x;\r\n\r\n\t\tif ( p.y > maxY ) maxY = p.y;\r\n\t\telse if ( p.y < minY ) minY = p.y;\r\n\r\n\t\tif ( v3 ) {\r\n\r\n\t\t\tif ( p.z > maxZ ) maxZ = p.z;\r\n\t\t\telse if ( p.z < minZ ) minZ = p.z;\r\n\r\n\t\t}\r\n\r\n\t\tsum.add( p );\r\n\r\n\t}\r\n\r\n\tvar ret = {\r\n\r\n\t\tminX: minX,\r\n\t\tminY: minY,\r\n\t\tmaxX: maxX,\r\n\t\tmaxY: maxY\r\n\r\n\t};\r\n\r\n\tif ( v3 ) {\r\n\r\n\t\tret.maxZ = maxZ;\r\n\t\tret.minZ = minZ;\r\n\r\n\t}\r\n\r\n\treturn ret;\r\n\r\n};\r\n\r\n/**************************************************************\r\n *\tCreate Geometries Helpers\r\n **************************************************************/\r\n\r\n/// Generate geometry from path points (for Line or Points objects)\r\n\r\nTHREE.CurvePath.prototype.createPointsGeometry = function( divisions ) {\r\n\r\n\tvar pts = this.getPoints( divisions, true );\r\n\treturn this.createGeometry( pts );\r\n\r\n};\r\n\r\n// Generate geometry from equidistant sampling along the path\r\n\r\nTHREE.CurvePath.prototype.createSpacedPointsGeometry = function( divisions ) {\r\n\r\n\tvar pts = this.getSpacedPoints( divisions, true );\r\n\treturn this.createGeometry( pts );\r\n\r\n};\r\n\r\nTHREE.CurvePath.prototype.createGeometry = function( points ) {\r\n\r\n\tvar geometry = new THREE.Geometry();\r\n\r\n\tfor ( var i = 0; i < points.length; i ++ ) {\r\n\r\n\t\tgeometry.vertices.push( new THREE.Vector3( points[ i ].x, points[ i ].y, points[ i ].z || 0 ) );\r\n\r\n\t}\r\n\r\n\treturn geometry;\r\n\r\n};\r\n\r\n\r\n/**************************************************************\r\n *\tBend / Wrap Helper Methods\r\n **************************************************************/\r\n\r\n// Wrap path / Bend modifiers?\r\n\r\nTHREE.CurvePath.prototype.addWrapPath = function ( bendpath ) {\r\n\r\n\tthis.bends.push( bendpath );\r\n\r\n};\r\n\r\nTHREE.CurvePath.prototype.getTransformedPoints = function( segments, bends ) {\r\n\r\n\tvar oldPts = this.getPoints( segments ); // getPoints getSpacedPoints\r\n\tvar i, il;\r\n\r\n\tif ( ! bends ) {\r\n\r\n\t\tbends = this.bends;\r\n\r\n\t}\r\n\r\n\tfor ( i = 0, il = bends.length; i < il; i ++ ) {\r\n\r\n\t\toldPts = this.getWrapPoints( oldPts, bends[ i ] );\r\n\r\n\t}\r\n\r\n\treturn oldPts;\r\n\r\n};\r\n\r\nTHREE.CurvePath.prototype.getTransformedSpacedPoints = function( segments, bends ) {\r\n\r\n\tvar oldPts = this.getSpacedPoints( segments );\r\n\r\n\tvar i, il;\r\n\r\n\tif ( ! bends ) {\r\n\r\n\t\tbends = this.bends;\r\n\r\n\t}\r\n\r\n\tfor ( i = 0, il = bends.length; i < il; i ++ ) {\r\n\r\n\t\toldPts = this.getWrapPoints( oldPts, bends[ i ] );\r\n\r\n\t}\r\n\r\n\treturn oldPts;\r\n\r\n};\r\n\r\n// This returns getPoints() bend/wrapped around the contour of a path.\r\n// Read http://www.planetclegg.com/projects/WarpingTextToSplines.html\r\n\r\nTHREE.CurvePath.prototype.getWrapPoints = function ( oldPts, path ) {\r\n\r\n\tvar bounds = this.getBoundingBox();\r\n\r\n\tvar i, il, p, oldX, oldY, xNorm;\r\n\r\n\tfor ( i = 0, il = oldPts.length; i < il; i ++ ) {\r\n\r\n\t\tp = oldPts[ i ];\r\n\r\n\t\toldX = p.x;\r\n\t\toldY = p.y;\r\n\r\n\t\txNorm = oldX / bounds.maxX;\r\n\r\n\t\t// If using actual distance, for length > path, requires line extrusions\r\n\t\t//xNorm = path.getUtoTmapping(xNorm, oldX); // 3 styles. 1) wrap stretched. 2) wrap stretch by arc length 3) warp by actual distance\r\n\r\n\t\txNorm = path.getUtoTmapping( xNorm, oldX );\r\n\r\n\t\t// check for out of bounds?\r\n\r\n\t\tvar pathPt = path.getPoint( xNorm );\r\n\t\tvar normal = path.getTangent( xNorm );\r\n\t\tnormal.set( - normal.y, normal.x ).multiplyScalar( oldY );\r\n\r\n\t\tp.x = pathPt.x + normal.x;\r\n\t\tp.y = pathPt.y + normal.y;\r\n\r\n\t}\r\n\r\n\treturn oldPts;\r\n\r\n};\r\n\r\n// File:src/extras/core/Path.js\r\n\r\n/**\r\n * @author zz85 / http://www.lab4games.net/zz85/blog\r\n * Creates free form 2d path using series of points, lines or curves.\r\n *\r\n **/\r\n\r\nTHREE.Path = function ( points ) {\r\n\r\n\tTHREE.CurvePath.call( this );\r\n\r\n\tthis.actions = [];\r\n\r\n\tif ( points ) {\r\n\r\n\t\tthis.fromPoints( points );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.Path.prototype = Object.create( THREE.CurvePath.prototype );\r\nTHREE.Path.prototype.constructor = THREE.Path;\r\n\r\nTHREE.PathActions = {\r\n\r\n\tMOVE_TO: 'moveTo',\r\n\tLINE_TO: 'lineTo',\r\n\tQUADRATIC_CURVE_TO: 'quadraticCurveTo', // Bezier quadratic curve\r\n\tBEZIER_CURVE_TO: 'bezierCurveTo', \t\t// Bezier cubic curve\r\n\tCSPLINE_THRU: 'splineThru',\t\t\t\t// Catmull-Rom spline\r\n\tARC: 'arc',\t\t\t\t\t\t\t\t// Circle\r\n\tELLIPSE: 'ellipse'\r\n};\r\n\r\n// TODO Clean up PATH API\r\n\r\n// Create path using straight lines to connect all points\r\n// - vectors: array of Vector2\r\n\r\nTHREE.Path.prototype.fromPoints = function ( vectors ) {\r\n\r\n\tthis.moveTo( vectors[ 0 ].x, vectors[ 0 ].y );\r\n\r\n\tfor ( var v = 1, vlen = vectors.length; v < vlen; v ++ ) {\r\n\r\n\t\tthis.lineTo( vectors[ v ].x, vectors[ v ].y );\r\n\r\n\t}\r\n\r\n};\r\n\r\n// startPath() endPath()?\r\n\r\nTHREE.Path.prototype.moveTo = function ( x, y ) {\r\n\r\n\tvar args = Array.prototype.slice.call( arguments );\r\n\tthis.actions.push( { action: THREE.PathActions.MOVE_TO, args: args } );\r\n\r\n};\r\n\r\nTHREE.Path.prototype.lineTo = function ( x, y ) {\r\n\r\n\tvar args = Array.prototype.slice.call( arguments );\r\n\r\n\tvar lastargs = this.actions[ this.actions.length - 1 ].args;\r\n\r\n\tvar x0 = lastargs[ lastargs.length - 2 ];\r\n\tvar y0 = lastargs[ lastargs.length - 1 ];\r\n\r\n\tvar curve = new THREE.LineCurve( new THREE.Vector2( x0, y0 ), new THREE.Vector2( x, y ) );\r\n\tthis.curves.push( curve );\r\n\r\n\tthis.actions.push( { action: THREE.PathActions.LINE_TO, args: args } );\r\n\r\n};\r\n\r\nTHREE.Path.prototype.quadraticCurveTo = function( aCPx, aCPy, aX, aY ) {\r\n\r\n\tvar args = Array.prototype.slice.call( arguments );\r\n\r\n\tvar lastargs = this.actions[ this.actions.length - 1 ].args;\r\n\r\n\tvar x0 = lastargs[ lastargs.length - 2 ];\r\n\tvar y0 = lastargs[ lastargs.length - 1 ];\r\n\r\n\tvar curve = new THREE.QuadraticBezierCurve( new THREE.Vector2( x0, y0 ),\r\n\t\t\t\t\t\t\t\t\t\t\t\tnew THREE.Vector2( aCPx, aCPy ),\r\n\t\t\t\t\t\t\t\t\t\t\t\tnew THREE.Vector2( aX, aY ) );\r\n\tthis.curves.push( curve );\r\n\r\n\tthis.actions.push( { action: THREE.PathActions.QUADRATIC_CURVE_TO, args: args } );\r\n\r\n};\r\n\r\nTHREE.Path.prototype.bezierCurveTo = function( aCP1x, aCP1y,\r\n\t\t\t\t\t\t\t\t\t\t\t   aCP2x, aCP2y,\r\n\t\t\t\t\t\t\t\t\t\t\t   aX, aY ) {\r\n\r\n\tvar args = Array.prototype.slice.call( arguments );\r\n\r\n\tvar lastargs = this.actions[ this.actions.length - 1 ].args;\r\n\r\n\tvar x0 = lastargs[ lastargs.length - 2 ];\r\n\tvar y0 = lastargs[ lastargs.length - 1 ];\r\n\r\n\tvar curve = new THREE.CubicBezierCurve( new THREE.Vector2( x0, y0 ),\r\n\t\t\t\t\t\t\t\t\t\t\tnew THREE.Vector2( aCP1x, aCP1y ),\r\n\t\t\t\t\t\t\t\t\t\t\tnew THREE.Vector2( aCP2x, aCP2y ),\r\n\t\t\t\t\t\t\t\t\t\t\tnew THREE.Vector2( aX, aY ) );\r\n\tthis.curves.push( curve );\r\n\r\n\tthis.actions.push( { action: THREE.PathActions.BEZIER_CURVE_TO, args: args } );\r\n\r\n};\r\n\r\nTHREE.Path.prototype.splineThru = function( pts /*Array of Vector*/ ) {\r\n\r\n\tvar args = Array.prototype.slice.call( arguments );\r\n\tvar lastargs = this.actions[ this.actions.length - 1 ].args;\r\n\r\n\tvar x0 = lastargs[ lastargs.length - 2 ];\r\n\tvar y0 = lastargs[ lastargs.length - 1 ];\r\n\t//---\r\n\tvar npts = [ new THREE.Vector2( x0, y0 ) ];\r\n\tArray.prototype.push.apply( npts, pts );\r\n\r\n\tvar curve = new THREE.SplineCurve( npts );\r\n\tthis.curves.push( curve );\r\n\r\n\tthis.actions.push( { action: THREE.PathActions.CSPLINE_THRU, args: args } );\r\n\r\n};\r\n\r\n// FUTURE: Change the API or follow canvas API?\r\n\r\nTHREE.Path.prototype.arc = function ( aX, aY, aRadius,\r\n\t\t\t\t\t\t\t\t\t  aStartAngle, aEndAngle, aClockwise ) {\r\n\r\n\tvar lastargs = this.actions[ this.actions.length - 1 ].args;\r\n\tvar x0 = lastargs[ lastargs.length - 2 ];\r\n\tvar y0 = lastargs[ lastargs.length - 1 ];\r\n\r\n\tthis.absarc( aX + x0, aY + y0, aRadius,\r\n\t\taStartAngle, aEndAngle, aClockwise );\r\n\r\n };\r\n\r\n THREE.Path.prototype.absarc = function ( aX, aY, aRadius,\r\n\t\t\t\t\t\t\t\t\t  aStartAngle, aEndAngle, aClockwise ) {\r\n\r\n\tthis.absellipse( aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\r\n\r\n };\r\n\r\nTHREE.Path.prototype.ellipse = function ( aX, aY, xRadius, yRadius,\r\n\t\t\t\t\t\t\t\t\t  aStartAngle, aEndAngle, aClockwise, aRotation ) {\r\n\r\n\tvar lastargs = this.actions[ this.actions.length - 1 ].args;\r\n\tvar x0 = lastargs[ lastargs.length - 2 ];\r\n\tvar y0 = lastargs[ lastargs.length - 1 ];\r\n\r\n\tthis.absellipse( aX + x0, aY + y0, xRadius, yRadius,\r\n\t\taStartAngle, aEndAngle, aClockwise, aRotation );\r\n\r\n };\r\n\r\n\r\nTHREE.Path.prototype.absellipse = function ( aX, aY, xRadius, yRadius,\r\n\t\t\t\t\t\t\t\t\t  aStartAngle, aEndAngle, aClockwise, aRotation ) {\r\n\r\n\tvar args = [\r\n\t\taX, aY,\r\n\t\txRadius, yRadius,\r\n\t\taStartAngle, aEndAngle,\r\n\t\taClockwise,\r\n\t\taRotation || 0 // aRotation is optional.\r\n\t];\r\n\tvar curve = new THREE.EllipseCurve( aX, aY, xRadius, yRadius,\r\n\t\t\t\t\t\t\t\t\taStartAngle, aEndAngle, aClockwise, aRotation );\r\n\tthis.curves.push( curve );\r\n\r\n\tvar lastPoint = curve.getPoint( 1 );\r\n\targs.push( lastPoint.x );\r\n\targs.push( lastPoint.y );\r\n\r\n\tthis.actions.push( { action: THREE.PathActions.ELLIPSE, args: args } );\r\n\r\n };\r\n\r\nTHREE.Path.prototype.getSpacedPoints = function ( divisions, closedPath ) {\r\n\r\n\tif ( ! divisions ) divisions = 40;\r\n\r\n\tvar points = [];\r\n\r\n\tfor ( var i = 0; i < divisions; i ++ ) {\r\n\r\n\t\tpoints.push( this.getPoint( i / divisions ) );\r\n\r\n\t\t//if( !this.getPoint( i / divisions ) ) throw \"DIE\";\r\n\r\n\t}\r\n\r\n\t// if ( closedPath ) {\r\n\t//\r\n\t// \tpoints.push( points[ 0 ] );\r\n\t//\r\n\t// }\r\n\r\n\treturn points;\r\n\r\n};\r\n\r\n/* Return an array of vectors based on contour of the path */\r\n\r\nTHREE.Path.prototype.getPoints = function( divisions, closedPath ) {\r\n\r\n\tif ( this.useSpacedPoints ) {\r\n\r\n\t\treturn this.getSpacedPoints( divisions, closedPath );\r\n\r\n\t}\r\n\r\n\tdivisions = divisions || 12;\r\n\r\n\tvar points = [];\r\n\r\n\tvar i, il, item, action, args;\r\n\tvar cpx, cpy, cpx2, cpy2, cpx1, cpy1, cpx0, cpy0,\r\n\t\tlaste, j,\r\n\t\tt, tx, ty;\r\n\r\n\tfor ( i = 0, il = this.actions.length; i < il; i ++ ) {\r\n\r\n\t\titem = this.actions[ i ];\r\n\r\n\t\taction = item.action;\r\n\t\targs = item.args;\r\n\r\n\t\tswitch ( action ) {\r\n\r\n\t\tcase THREE.PathActions.MOVE_TO:\r\n\r\n\t\t\tpoints.push( new THREE.Vector2( args[ 0 ], args[ 1 ] ) );\r\n\r\n\t\t\tbreak;\r\n\r\n\t\tcase THREE.PathActions.LINE_TO:\r\n\r\n\t\t\tpoints.push( new THREE.Vector2( args[ 0 ], args[ 1 ] ) );\r\n\r\n\t\t\tbreak;\r\n\r\n\t\tcase THREE.PathActions.QUADRATIC_CURVE_TO:\r\n\r\n\t\t\tcpx  = args[ 2 ];\r\n\t\t\tcpy  = args[ 3 ];\r\n\r\n\t\t\tcpx1 = args[ 0 ];\r\n\t\t\tcpy1 = args[ 1 ];\r\n\r\n\t\t\tif ( points.length > 0 ) {\r\n\r\n\t\t\t\tlaste = points[ points.length - 1 ];\r\n\r\n\t\t\t\tcpx0 = laste.x;\r\n\t\t\t\tcpy0 = laste.y;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tlaste = this.actions[ i - 1 ].args;\r\n\r\n\t\t\t\tcpx0 = laste[ laste.length - 2 ];\r\n\t\t\t\tcpy0 = laste[ laste.length - 1 ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfor ( j = 1; j <= divisions; j ++ ) {\r\n\r\n\t\t\t\tt = j / divisions;\r\n\r\n\t\t\t\ttx = THREE.Shape.Utils.b2( t, cpx0, cpx1, cpx );\r\n\t\t\t\tty = THREE.Shape.Utils.b2( t, cpy0, cpy1, cpy );\r\n\r\n\t\t\t\tpoints.push( new THREE.Vector2( tx, ty ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tbreak;\r\n\r\n\t\tcase THREE.PathActions.BEZIER_CURVE_TO:\r\n\r\n\t\t\tcpx  = args[ 4 ];\r\n\t\t\tcpy  = args[ 5 ];\r\n\r\n\t\t\tcpx1 = args[ 0 ];\r\n\t\t\tcpy1 = args[ 1 ];\r\n\r\n\t\t\tcpx2 = args[ 2 ];\r\n\t\t\tcpy2 = args[ 3 ];\r\n\r\n\t\t\tif ( points.length > 0 ) {\r\n\r\n\t\t\t\tlaste = points[ points.length - 1 ];\r\n\r\n\t\t\t\tcpx0 = laste.x;\r\n\t\t\t\tcpy0 = laste.y;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tlaste = this.actions[ i - 1 ].args;\r\n\r\n\t\t\t\tcpx0 = laste[ laste.length - 2 ];\r\n\t\t\t\tcpy0 = laste[ laste.length - 1 ];\r\n\r\n\t\t\t}\r\n\r\n\r\n\t\t\tfor ( j = 1; j <= divisions; j ++ ) {\r\n\r\n\t\t\t\tt = j / divisions;\r\n\r\n\t\t\t\ttx = THREE.Shape.Utils.b3( t, cpx0, cpx1, cpx2, cpx );\r\n\t\t\t\tty = THREE.Shape.Utils.b3( t, cpy0, cpy1, cpy2, cpy );\r\n\r\n\t\t\t\tpoints.push( new THREE.Vector2( tx, ty ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tbreak;\r\n\r\n\t\tcase THREE.PathActions.CSPLINE_THRU:\r\n\r\n\t\t\tlaste = this.actions[ i - 1 ].args;\r\n\r\n\t\t\tvar last = new THREE.Vector2( laste[ laste.length - 2 ], laste[ laste.length - 1 ] );\r\n\t\t\tvar spts = [ last ];\r\n\r\n\t\t\tvar n = divisions * args[ 0 ].length;\r\n\r\n\t\t\tspts = spts.concat( args[ 0 ] );\r\n\r\n\t\t\tvar spline = new THREE.SplineCurve( spts );\r\n\r\n\t\t\tfor ( j = 1; j <= n; j ++ ) {\r\n\r\n\t\t\t\tpoints.push( spline.getPointAt( j / n ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tbreak;\r\n\r\n\t\tcase THREE.PathActions.ARC:\r\n\r\n\t\t\tvar aX = args[ 0 ], aY = args[ 1 ],\r\n\t\t\t\taRadius = args[ 2 ],\r\n\t\t\t\taStartAngle = args[ 3 ], aEndAngle = args[ 4 ],\r\n\t\t\t\taClockwise = !! args[ 5 ];\r\n\r\n\t\t\tvar deltaAngle = aEndAngle - aStartAngle;\r\n\t\t\tvar angle;\r\n\t\t\tvar tdivisions = divisions * 2;\r\n\r\n\t\t\tfor ( j = 1; j <= tdivisions; j ++ ) {\r\n\r\n\t\t\t\tt = j / tdivisions;\r\n\r\n\t\t\t\tif ( ! aClockwise ) {\r\n\r\n\t\t\t\t\tt = 1 - t;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tangle = aStartAngle + t * deltaAngle;\r\n\r\n\t\t\t\ttx = aX + aRadius * Math.cos( angle );\r\n\t\t\t\tty = aY + aRadius * Math.sin( angle );\r\n\r\n\t\t\t\t//console.log('t', t, 'angle', angle, 'tx', tx, 'ty', ty);\r\n\r\n\t\t\t\tpoints.push( new THREE.Vector2( tx, ty ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t//console.log(points);\r\n\r\n\t\t\tbreak;\r\n\r\n\t\tcase THREE.PathActions.ELLIPSE:\r\n\r\n\t\t\tvar aX = args[ 0 ], aY = args[ 1 ],\r\n\t\t\t\txRadius = args[ 2 ],\r\n\t\t\t\tyRadius = args[ 3 ],\r\n\t\t\t\taStartAngle = args[ 4 ], aEndAngle = args[ 5 ],\r\n\t\t\t\taClockwise = !! args[ 6 ],\r\n\t\t\t\taRotation = args[ 7 ];\r\n\r\n\r\n\t\t\tvar deltaAngle = aEndAngle - aStartAngle;\r\n\t\t\tvar angle;\r\n\t\t\tvar tdivisions = divisions * 2;\r\n\r\n\t\t\tvar cos, sin;\r\n\t\t\tif ( aRotation !== 0 ) {\r\n\t\t\r\n\t\t\t\tcos = Math.cos( aRotation );\r\n\t\t\t\tsin = Math.sin( aRotation );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfor ( j = 1; j <= tdivisions; j ++ ) {\r\n\r\n\t\t\t\tt = j / tdivisions;\r\n\r\n\t\t\t\tif ( ! aClockwise ) {\r\n\r\n\t\t\t\t\tt = 1 - t;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tangle = aStartAngle + t * deltaAngle;\r\n\r\n\t\t\t\ttx = aX + xRadius * Math.cos( angle );\r\n\t\t\t\tty = aY + yRadius * Math.sin( angle );\r\n\r\n\t\t\t\tif ( aRotation !== 0 ) {\r\n\r\n\t\t\t\t\tvar x = tx, y = ty;\r\n\r\n\t\t\t\t\t// Rotate the point about the center of the ellipse.\r\n\t\t\t\t\ttx = ( x - aX ) * cos - ( y - aY ) * sin + aX;\r\n\t\t\t\t\tty = ( x - aX ) * sin + ( y - aY ) * cos + aY;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//console.log('t', t, 'angle', angle, 'tx', tx, 'ty', ty);\r\n\r\n\t\t\t\tpoints.push( new THREE.Vector2( tx, ty ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t//console.log(points);\r\n\r\n\t\t\tbreak;\r\n\r\n\t\t} // end switch\r\n\r\n\t}\r\n\r\n\r\n\r\n\t// Normalize to remove the closing point by default.\r\n\tvar lastPoint = points[ points.length - 1 ];\r\n\tvar EPSILON = 0.0000000001;\r\n\tif ( Math.abs( lastPoint.x - points[ 0 ].x ) < EPSILON &&\r\n\t\t\t Math.abs( lastPoint.y - points[ 0 ].y ) < EPSILON )\r\n\t\tpoints.splice( points.length - 1, 1 );\r\n\tif ( closedPath ) {\r\n\r\n\t\tpoints.push( points[ 0 ] );\r\n\r\n\t}\r\n\r\n\treturn points;\r\n\r\n};\r\n\r\n//\r\n// Breaks path into shapes\r\n//\r\n//\tAssumptions (if parameter isCCW==true the opposite holds):\r\n//\t- solid shapes are defined clockwise (CW)\r\n//\t- holes are defined counterclockwise (CCW)\r\n//\r\n//\tIf parameter noHoles==true:\r\n//  - all subPaths are regarded as solid shapes\r\n//  - definition order CW/CCW has no relevance\r\n//\r\n\r\nTHREE.Path.prototype.toShapes = function( isCCW, noHoles ) {\r\n\r\n\tfunction extractSubpaths( inActions ) {\r\n\r\n\t\tvar i, il, item, action, args;\r\n\r\n\t\tvar subPaths = [], lastPath = new THREE.Path();\r\n\r\n\t\tfor ( i = 0, il = inActions.length; i < il; i ++ ) {\r\n\r\n\t\t\titem = inActions[ i ];\r\n\r\n\t\t\targs = item.args;\r\n\t\t\taction = item.action;\r\n\r\n\t\t\tif ( action === THREE.PathActions.MOVE_TO ) {\r\n\r\n\t\t\t\tif ( lastPath.actions.length !== 0 ) {\r\n\r\n\t\t\t\t\tsubPaths.push( lastPath );\r\n\t\t\t\t\tlastPath = new THREE.Path();\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tlastPath[ action ].apply( lastPath, args );\r\n\r\n\t\t}\r\n\r\n\t\tif ( lastPath.actions.length !== 0 ) {\r\n\r\n\t\t\tsubPaths.push( lastPath );\r\n\r\n\t\t}\r\n\r\n\t\t// console.log(subPaths);\r\n\r\n\t\treturn\tsubPaths;\r\n\r\n\t}\r\n\r\n\tfunction toShapesNoHoles( inSubpaths ) {\r\n\r\n\t\tvar shapes = [];\r\n\r\n\t\tfor ( var i = 0, il = inSubpaths.length; i < il; i ++ ) {\r\n\r\n\t\t\tvar tmpPath = inSubpaths[ i ];\r\n\r\n\t\t\tvar tmpShape = new THREE.Shape();\r\n\t\t\ttmpShape.actions = tmpPath.actions;\r\n\t\t\ttmpShape.curves = tmpPath.curves;\r\n\r\n\t\t\tshapes.push( tmpShape );\r\n\r\n\t\t}\r\n\r\n\t\t//console.log(\"shape\", shapes);\r\n\r\n\t\treturn shapes;\r\n\r\n\t}\r\n\r\n\tfunction isPointInsidePolygon( inPt, inPolygon ) {\r\n\r\n\t\tvar EPSILON = 0.0000000001;\r\n\r\n\t\tvar polyLen = inPolygon.length;\r\n\r\n\t\t// inPt on polygon contour => immediate success    or\r\n\t\t// toggling of inside/outside at every single! intersection point of an edge\r\n\t\t//  with the horizontal line through inPt, left of inPt\r\n\t\t//  not counting lowerY endpoints of edges and whole edges on that line\r\n\t\tvar inside = false;\r\n\t\tfor ( var p = polyLen - 1, q = 0; q < polyLen; p = q ++ ) {\r\n\r\n\t\t\tvar edgeLowPt  = inPolygon[ p ];\r\n\t\t\tvar edgeHighPt = inPolygon[ q ];\r\n\r\n\t\t\tvar edgeDx = edgeHighPt.x - edgeLowPt.x;\r\n\t\t\tvar edgeDy = edgeHighPt.y - edgeLowPt.y;\r\n\r\n\t\t\tif ( Math.abs( edgeDy ) > EPSILON ) {\r\n\r\n\t\t\t\t// not parallel\r\n\t\t\t\tif ( edgeDy < 0 ) {\r\n\r\n\t\t\t\t\tedgeLowPt  = inPolygon[ q ]; edgeDx = - edgeDx;\r\n\t\t\t\t\tedgeHighPt = inPolygon[ p ]; edgeDy = - edgeDy;\r\n\r\n\t\t\t\t}\r\n\t\t\t\tif ( ( inPt.y < edgeLowPt.y ) || ( inPt.y > edgeHighPt.y ) ) \t\tcontinue;\r\n\r\n\t\t\t\tif ( inPt.y === edgeLowPt.y ) {\r\n\r\n\t\t\t\t\tif ( inPt.x === edgeLowPt.x )\t\treturn\ttrue;\t\t// inPt is on contour ?\r\n\t\t\t\t\t// continue;\t\t\t\t// no intersection or edgeLowPt => doesn't count !!!\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tvar perpEdge = edgeDy * ( inPt.x - edgeLowPt.x ) - edgeDx * ( inPt.y - edgeLowPt.y );\r\n\t\t\t\t\tif ( perpEdge === 0 )\t\t\t\treturn\ttrue;\t\t// inPt is on contour ?\r\n\t\t\t\t\tif ( perpEdge < 0 ) \t\t\t\tcontinue;\r\n\t\t\t\t\tinside = ! inside;\t\t// true intersection left of inPt\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// parallel or collinear\r\n\t\t\t\tif ( inPt.y !== edgeLowPt.y ) \t\tcontinue;\t\t\t// parallel\r\n\t\t\t\t// edge lies on the same horizontal line as inPt\r\n\t\t\t\tif ( ( ( edgeHighPt.x <= inPt.x ) && ( inPt.x <= edgeLowPt.x ) ) ||\r\n\t\t\t\t\t ( ( edgeLowPt.x <= inPt.x ) && ( inPt.x <= edgeHighPt.x ) ) )\t\treturn\ttrue;\t// inPt: Point on contour !\r\n\t\t\t\t// continue;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn\tinside;\r\n\r\n\t}\r\n\r\n\r\n\tvar subPaths = extractSubpaths( this.actions );\r\n\tif ( subPaths.length === 0 ) return [];\r\n\r\n\tif ( noHoles === true )\treturn\ttoShapesNoHoles( subPaths );\r\n\r\n\r\n\tvar solid, tmpPath, tmpShape, shapes = [];\r\n\r\n\tif ( subPaths.length === 1 ) {\r\n\r\n\t\ttmpPath = subPaths[ 0 ];\r\n\t\ttmpShape = new THREE.Shape();\r\n\t\ttmpShape.actions = tmpPath.actions;\r\n\t\ttmpShape.curves = tmpPath.curves;\r\n\t\tshapes.push( tmpShape );\r\n\t\treturn shapes;\r\n\r\n\t}\r\n\r\n\tvar holesFirst = ! THREE.Shape.Utils.isClockWise( subPaths[ 0 ].getPoints() );\r\n\tholesFirst = isCCW ? ! holesFirst : holesFirst;\r\n\r\n\t// console.log(\"Holes first\", holesFirst);\r\n\r\n\tvar betterShapeHoles = [];\r\n\tvar newShapes = [];\r\n\tvar newShapeHoles = [];\r\n\tvar mainIdx = 0;\r\n\tvar tmpPoints;\r\n\r\n\tnewShapes[ mainIdx ] = undefined;\r\n\tnewShapeHoles[ mainIdx ] = [];\r\n\r\n\tvar i, il;\r\n\r\n\tfor ( i = 0, il = subPaths.length; i < il; i ++ ) {\r\n\r\n\t\ttmpPath = subPaths[ i ];\r\n\t\ttmpPoints = tmpPath.getPoints();\r\n\t\tsolid = THREE.Shape.Utils.isClockWise( tmpPoints );\r\n\t\tsolid = isCCW ? ! solid : solid;\r\n\r\n\t\tif ( solid ) {\r\n\r\n\t\t\tif ( ( ! holesFirst ) && ( newShapes[ mainIdx ] ) )\tmainIdx ++;\r\n\r\n\t\t\tnewShapes[ mainIdx ] = { s: new THREE.Shape(), p: tmpPoints };\r\n\t\t\tnewShapes[ mainIdx ].s.actions = tmpPath.actions;\r\n\t\t\tnewShapes[ mainIdx ].s.curves = tmpPath.curves;\r\n\r\n\t\t\tif ( holesFirst )\tmainIdx ++;\r\n\t\t\tnewShapeHoles[ mainIdx ] = [];\r\n\r\n\t\t\t//console.log('cw', i);\r\n\r\n\t\t} else {\r\n\r\n\t\t\tnewShapeHoles[ mainIdx ].push( { h: tmpPath, p: tmpPoints[ 0 ] } );\r\n\r\n\t\t\t//console.log('ccw', i);\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// only Holes? -> probably all Shapes with wrong orientation\r\n\tif ( ! newShapes[ 0 ] )\treturn\ttoShapesNoHoles( subPaths );\r\n\r\n\r\n\tif ( newShapes.length > 1 ) {\r\n\r\n\t\tvar ambiguous = false;\r\n\t\tvar toChange = [];\r\n\r\n\t\tfor ( var sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\r\n\r\n\t\t\tbetterShapeHoles[ sIdx ] = [];\r\n\r\n\t\t}\r\n\t\tfor ( var sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\r\n\r\n\t\t\tvar sho = newShapeHoles[ sIdx ];\r\n\t\t\tfor ( var hIdx = 0; hIdx < sho.length; hIdx ++ ) {\r\n\r\n\t\t\t\tvar ho = sho[ hIdx ];\r\n\t\t\t\tvar hole_unassigned = true;\r\n\t\t\t\tfor ( var s2Idx = 0; s2Idx < newShapes.length; s2Idx ++ ) {\r\n\r\n\t\t\t\t\tif ( isPointInsidePolygon( ho.p, newShapes[ s2Idx ].p ) ) {\r\n\r\n\t\t\t\t\t\tif ( sIdx !== s2Idx )\ttoChange.push( { froms: sIdx, tos: s2Idx, hole: hIdx } );\r\n\t\t\t\t\t\tif ( hole_unassigned ) {\r\n\r\n\t\t\t\t\t\t\thole_unassigned = false;\r\n\t\t\t\t\t\t\tbetterShapeHoles[ s2Idx ].push( ho );\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\tambiguous = true;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\t\t\t\tif ( hole_unassigned ) {\r\n\r\n\t\t\t\t\tbetterShapeHoles[ sIdx ].push( ho );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t\t// console.log(\"ambiguous: \", ambiguous);\r\n\t\tif ( toChange.length > 0 ) {\r\n\r\n\t\t\t// console.log(\"to change: \", toChange);\r\n\t\t\tif ( ! ambiguous )\tnewShapeHoles = betterShapeHoles;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tvar tmpHoles, j, jl;\r\n\tfor ( i = 0, il = newShapes.length; i < il; i ++ ) {\r\n\r\n\t\ttmpShape = newShapes[ i ].s;\r\n\t\tshapes.push( tmpShape );\r\n\t\ttmpHoles = newShapeHoles[ i ];\r\n\t\tfor ( j = 0, jl = tmpHoles.length; j < jl; j ++ ) {\r\n\r\n\t\t\ttmpShape.holes.push( tmpHoles[ j ].h );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t//console.log(\"shape\", shapes);\r\n\r\n\treturn shapes;\r\n\r\n};\r\n\r\n// File:src/extras/core/Shape.js\r\n\r\n/**\r\n * @author zz85 / http://www.lab4games.net/zz85/blog\r\n * Defines a 2d shape plane using paths.\r\n **/\r\n\r\n// STEP 1 Create a path.\r\n// STEP 2 Turn path into shape.\r\n// STEP 3 ExtrudeGeometry takes in Shape/Shapes\r\n// STEP 3a - Extract points from each shape, turn to vertices\r\n// STEP 3b - Triangulate each shape, add faces.\r\n\r\nTHREE.Shape = function () {\r\n\r\n\tTHREE.Path.apply( this, arguments );\r\n\tthis.holes = [];\r\n\r\n};\r\n\r\nTHREE.Shape.prototype = Object.create( THREE.Path.prototype );\r\nTHREE.Shape.prototype.constructor = THREE.Shape;\r\n\r\n// Convenience method to return ExtrudeGeometry\r\n\r\nTHREE.Shape.prototype.extrude = function ( options ) {\r\n\r\n\tvar extruded = new THREE.ExtrudeGeometry( this, options );\r\n\treturn extruded;\r\n\r\n};\r\n\r\n// Convenience method to return ShapeGeometry\r\n\r\nTHREE.Shape.prototype.makeGeometry = function ( options ) {\r\n\r\n\tvar geometry = new THREE.ShapeGeometry( this, options );\r\n\treturn geometry;\r\n\r\n};\r\n\r\n// Get points of holes\r\n\r\nTHREE.Shape.prototype.getPointsHoles = function ( divisions ) {\r\n\r\n\tvar i, il = this.holes.length, holesPts = [];\r\n\r\n\tfor ( i = 0; i < il; i ++ ) {\r\n\r\n\t\tholesPts[ i ] = this.holes[ i ].getTransformedPoints( divisions, this.bends );\r\n\r\n\t}\r\n\r\n\treturn holesPts;\r\n\r\n};\r\n\r\n// Get points of holes (spaced by regular distance)\r\n\r\nTHREE.Shape.prototype.getSpacedPointsHoles = function ( divisions ) {\r\n\r\n\tvar i, il = this.holes.length, holesPts = [];\r\n\r\n\tfor ( i = 0; i < il; i ++ ) {\r\n\r\n\t\tholesPts[ i ] = this.holes[ i ].getTransformedSpacedPoints( divisions, this.bends );\r\n\r\n\t}\r\n\r\n\treturn holesPts;\r\n\r\n};\r\n\r\n\r\n// Get points of shape and holes (keypoints based on segments parameter)\r\n\r\nTHREE.Shape.prototype.extractAllPoints = function ( divisions ) {\r\n\r\n\treturn {\r\n\r\n\t\tshape: this.getTransformedPoints( divisions ),\r\n\t\tholes: this.getPointsHoles( divisions )\r\n\r\n\t};\r\n\r\n};\r\n\r\nTHREE.Shape.prototype.extractPoints = function ( divisions ) {\r\n\r\n\tif ( this.useSpacedPoints ) {\r\n\r\n\t\treturn this.extractAllSpacedPoints( divisions );\r\n\r\n\t}\r\n\r\n\treturn this.extractAllPoints( divisions );\r\n\r\n};\r\n\r\n//\r\n// THREE.Shape.prototype.extractAllPointsWithBend = function ( divisions, bend ) {\r\n//\r\n// \treturn {\r\n//\r\n// \t\tshape: this.transform( bend, divisions ),\r\n// \t\tholes: this.getPointsHoles( divisions, bend )\r\n//\r\n// \t};\r\n//\r\n// };\r\n\r\n// Get points of shape and holes (spaced by regular distance)\r\n\r\nTHREE.Shape.prototype.extractAllSpacedPoints = function ( divisions ) {\r\n\r\n\treturn {\r\n\r\n\t\tshape: this.getTransformedSpacedPoints( divisions ),\r\n\t\tholes: this.getSpacedPointsHoles( divisions )\r\n\r\n\t};\r\n\r\n};\r\n\r\n/**************************************************************\r\n *\tUtils\r\n **************************************************************/\r\n\r\nTHREE.Shape.Utils = {\r\n\r\n\ttriangulateShape: function ( contour, holes ) {\r\n\r\n\t\tfunction point_in_segment_2D_colin( inSegPt1, inSegPt2, inOtherPt ) {\r\n\r\n\t\t\t// inOtherPt needs to be collinear to the inSegment\r\n\t\t\tif ( inSegPt1.x !== inSegPt2.x ) {\r\n\r\n\t\t\t\tif ( inSegPt1.x < inSegPt2.x ) {\r\n\r\n\t\t\t\t\treturn\t( ( inSegPt1.x <= inOtherPt.x ) && ( inOtherPt.x <= inSegPt2.x ) );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\treturn\t( ( inSegPt2.x <= inOtherPt.x ) && ( inOtherPt.x <= inSegPt1.x ) );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tif ( inSegPt1.y < inSegPt2.y ) {\r\n\r\n\t\t\t\t\treturn\t( ( inSegPt1.y <= inOtherPt.y ) && ( inOtherPt.y <= inSegPt2.y ) );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\treturn\t( ( inSegPt2.y <= inOtherPt.y ) && ( inOtherPt.y <= inSegPt1.y ) );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction intersect_segments_2D( inSeg1Pt1, inSeg1Pt2, inSeg2Pt1, inSeg2Pt2, inExcludeAdjacentSegs ) {\r\n\r\n\t\t\tvar EPSILON = 0.0000000001;\r\n\r\n\t\t\tvar seg1dx = inSeg1Pt2.x - inSeg1Pt1.x,   seg1dy = inSeg1Pt2.y - inSeg1Pt1.y;\r\n\t\t\tvar seg2dx = inSeg2Pt2.x - inSeg2Pt1.x,   seg2dy = inSeg2Pt2.y - inSeg2Pt1.y;\r\n\r\n\t\t\tvar seg1seg2dx = inSeg1Pt1.x - inSeg2Pt1.x;\r\n\t\t\tvar seg1seg2dy = inSeg1Pt1.y - inSeg2Pt1.y;\r\n\r\n\t\t\tvar limit\t\t= seg1dy * seg2dx - seg1dx * seg2dy;\r\n\t\t\tvar perpSeg1\t= seg1dy * seg1seg2dx - seg1dx * seg1seg2dy;\r\n\r\n\t\t\tif ( Math.abs( limit ) > EPSILON ) {\r\n\r\n\t\t\t\t// not parallel\r\n\r\n\t\t\t\tvar perpSeg2;\r\n\t\t\t\tif ( limit > 0 ) {\r\n\r\n\t\t\t\t\tif ( ( perpSeg1 < 0 ) || ( perpSeg1 > limit ) ) \t\treturn [];\r\n\t\t\t\t\tperpSeg2 = seg2dy * seg1seg2dx - seg2dx * seg1seg2dy;\r\n\t\t\t\t\tif ( ( perpSeg2 < 0 ) || ( perpSeg2 > limit ) ) \t\treturn [];\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tif ( ( perpSeg1 > 0 ) || ( perpSeg1 < limit ) ) \t\treturn [];\r\n\t\t\t\t\tperpSeg2 = seg2dy * seg1seg2dx - seg2dx * seg1seg2dy;\r\n\t\t\t\t\tif ( ( perpSeg2 > 0 ) || ( perpSeg2 < limit ) ) \t\treturn [];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// i.e. to reduce rounding errors\r\n\t\t\t\t// intersection at endpoint of segment#1?\r\n\t\t\t\tif ( perpSeg2 === 0 ) {\r\n\r\n\t\t\t\t\tif ( ( inExcludeAdjacentSegs ) &&\r\n\t\t\t\t\t\t ( ( perpSeg1 === 0 ) || ( perpSeg1 === limit ) ) )\t\treturn [];\r\n\t\t\t\t\treturn [ inSeg1Pt1 ];\r\n\r\n\t\t\t\t}\r\n\t\t\t\tif ( perpSeg2 === limit ) {\r\n\r\n\t\t\t\t\tif ( ( inExcludeAdjacentSegs ) &&\r\n\t\t\t\t\t\t ( ( perpSeg1 === 0 ) || ( perpSeg1 === limit ) ) )\t\treturn [];\r\n\t\t\t\t\treturn [ inSeg1Pt2 ];\r\n\r\n\t\t\t\t}\r\n\t\t\t\t// intersection at endpoint of segment#2?\r\n\t\t\t\tif ( perpSeg1 === 0 )\t\treturn [ inSeg2Pt1 ];\r\n\t\t\t\tif ( perpSeg1 === limit )\treturn [ inSeg2Pt2 ];\r\n\r\n\t\t\t\t// return real intersection point\r\n\t\t\t\tvar factorSeg1 = perpSeg2 / limit;\r\n\t\t\t\treturn\t[ { x: inSeg1Pt1.x + factorSeg1 * seg1dx,\r\n\t\t\t\t\t\t\ty: inSeg1Pt1.y + factorSeg1 * seg1dy } ];\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// parallel or collinear\r\n\t\t\t\tif ( ( perpSeg1 !== 0 ) ||\r\n\t\t\t\t\t ( seg2dy * seg1seg2dx !== seg2dx * seg1seg2dy ) ) \t\t\treturn [];\r\n\r\n\t\t\t\t// they are collinear or degenerate\r\n\t\t\t\tvar seg1Pt = ( ( seg1dx === 0 ) && ( seg1dy === 0 ) );\t// segment1 is just a point?\r\n\t\t\t\tvar seg2Pt = ( ( seg2dx === 0 ) && ( seg2dy === 0 ) );\t// segment2 is just a point?\r\n\t\t\t\t// both segments are points\r\n\t\t\t\tif ( seg1Pt && seg2Pt ) {\r\n\r\n\t\t\t\t\tif ( ( inSeg1Pt1.x !== inSeg2Pt1.x ) ||\r\n\t\t\t\t\t\t ( inSeg1Pt1.y !== inSeg2Pt1.y ) )\t\treturn [];\t// they are distinct  points\r\n\t\t\t\t\treturn [ inSeg1Pt1 ];                 \t\t\t\t\t\t// they are the same point\r\n\r\n\t\t\t\t}\r\n\t\t\t\t// segment#1  is a single point\r\n\t\t\t\tif ( seg1Pt ) {\r\n\r\n\t\t\t\t\tif ( ! point_in_segment_2D_colin( inSeg2Pt1, inSeg2Pt2, inSeg1Pt1 ) )\t\treturn [];\t\t// but not in segment#2\r\n\t\t\t\t\treturn [ inSeg1Pt1 ];\r\n\r\n\t\t\t\t}\r\n\t\t\t\t// segment#2  is a single point\r\n\t\t\t\tif ( seg2Pt ) {\r\n\r\n\t\t\t\t\tif ( ! point_in_segment_2D_colin( inSeg1Pt1, inSeg1Pt2, inSeg2Pt1 ) )\t\treturn [];\t\t// but not in segment#1\r\n\t\t\t\t\treturn [ inSeg2Pt1 ];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// they are collinear segments, which might overlap\r\n\t\t\t\tvar seg1min, seg1max, seg1minVal, seg1maxVal;\r\n\t\t\t\tvar seg2min, seg2max, seg2minVal, seg2maxVal;\r\n\t\t\t\tif ( seg1dx !== 0 ) {\r\n\r\n\t\t\t\t\t// the segments are NOT on a vertical line\r\n\t\t\t\t\tif ( inSeg1Pt1.x < inSeg1Pt2.x ) {\r\n\r\n\t\t\t\t\t\tseg1min = inSeg1Pt1; seg1minVal = inSeg1Pt1.x;\r\n\t\t\t\t\t\tseg1max = inSeg1Pt2; seg1maxVal = inSeg1Pt2.x;\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tseg1min = inSeg1Pt2; seg1minVal = inSeg1Pt2.x;\r\n\t\t\t\t\t\tseg1max = inSeg1Pt1; seg1maxVal = inSeg1Pt1.x;\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif ( inSeg2Pt1.x < inSeg2Pt2.x ) {\r\n\r\n\t\t\t\t\t\tseg2min = inSeg2Pt1; seg2minVal = inSeg2Pt1.x;\r\n\t\t\t\t\t\tseg2max = inSeg2Pt2; seg2maxVal = inSeg2Pt2.x;\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tseg2min = inSeg2Pt2; seg2minVal = inSeg2Pt2.x;\r\n\t\t\t\t\t\tseg2max = inSeg2Pt1; seg2maxVal = inSeg2Pt1.x;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\t// the segments are on a vertical line\r\n\t\t\t\t\tif ( inSeg1Pt1.y < inSeg1Pt2.y ) {\r\n\r\n\t\t\t\t\t\tseg1min = inSeg1Pt1; seg1minVal = inSeg1Pt1.y;\r\n\t\t\t\t\t\tseg1max = inSeg1Pt2; seg1maxVal = inSeg1Pt2.y;\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tseg1min = inSeg1Pt2; seg1minVal = inSeg1Pt2.y;\r\n\t\t\t\t\t\tseg1max = inSeg1Pt1; seg1maxVal = inSeg1Pt1.y;\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif ( inSeg2Pt1.y < inSeg2Pt2.y ) {\r\n\r\n\t\t\t\t\t\tseg2min = inSeg2Pt1; seg2minVal = inSeg2Pt1.y;\r\n\t\t\t\t\t\tseg2max = inSeg2Pt2; seg2maxVal = inSeg2Pt2.y;\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tseg2min = inSeg2Pt2; seg2minVal = inSeg2Pt2.y;\r\n\t\t\t\t\t\tseg2max = inSeg2Pt1; seg2maxVal = inSeg2Pt1.y;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\t\t\t\tif ( seg1minVal <= seg2minVal ) {\r\n\r\n\t\t\t\t\tif ( seg1maxVal <  seg2minVal )\treturn [];\r\n\t\t\t\t\tif ( seg1maxVal === seg2minVal )\t{\r\n\r\n\t\t\t\t\t\tif ( inExcludeAdjacentSegs )\t\treturn [];\r\n\t\t\t\t\t\treturn [ seg2min ];\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif ( seg1maxVal <= seg2maxVal )\treturn [ seg2min, seg1max ];\r\n\t\t\t\t\treturn\t[ seg2min, seg2max ];\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tif ( seg1minVal >  seg2maxVal )\treturn [];\r\n\t\t\t\t\tif ( seg1minVal === seg2maxVal )\t{\r\n\r\n\t\t\t\t\t\tif ( inExcludeAdjacentSegs )\t\treturn [];\r\n\t\t\t\t\t\treturn [ seg1min ];\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif ( seg1maxVal <= seg2maxVal )\treturn [ seg1min, seg1max ];\r\n\t\t\t\t\treturn\t[ seg1min, seg2max ];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction isPointInsideAngle( inVertex, inLegFromPt, inLegToPt, inOtherPt ) {\r\n\r\n\t\t\t// The order of legs is important\r\n\r\n\t\t\tvar EPSILON = 0.0000000001;\r\n\r\n\t\t\t// translation of all points, so that Vertex is at (0,0)\r\n\t\t\tvar legFromPtX\t= inLegFromPt.x - inVertex.x,  legFromPtY\t= inLegFromPt.y - inVertex.y;\r\n\t\t\tvar legToPtX\t= inLegToPt.x\t- inVertex.x,  legToPtY\t\t= inLegToPt.y\t- inVertex.y;\r\n\t\t\tvar otherPtX\t= inOtherPt.x\t- inVertex.x,  otherPtY\t\t= inOtherPt.y\t- inVertex.y;\r\n\r\n\t\t\t// main angle >0: < 180 deg.; 0: 180 deg.; <0: > 180 deg.\r\n\t\t\tvar from2toAngle\t= legFromPtX * legToPtY - legFromPtY * legToPtX;\r\n\t\t\tvar from2otherAngle\t= legFromPtX * otherPtY - legFromPtY * otherPtX;\r\n\r\n\t\t\tif ( Math.abs( from2toAngle ) > EPSILON ) {\r\n\r\n\t\t\t\t// angle != 180 deg.\r\n\r\n\t\t\t\tvar other2toAngle\t\t= otherPtX * legToPtY - otherPtY * legToPtX;\r\n\t\t\t\t// console.log( \"from2to: \" + from2toAngle + \", from2other: \" + from2otherAngle + \", other2to: \" + other2toAngle );\r\n\r\n\t\t\t\tif ( from2toAngle > 0 ) {\r\n\r\n\t\t\t\t\t// main angle < 180 deg.\r\n\t\t\t\t\treturn\t( ( from2otherAngle >= 0 ) && ( other2toAngle >= 0 ) );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\t// main angle > 180 deg.\r\n\t\t\t\t\treturn\t( ( from2otherAngle >= 0 ) || ( other2toAngle >= 0 ) );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// angle == 180 deg.\r\n\t\t\t\t// console.log( \"from2to: 180 deg., from2other: \" + from2otherAngle  );\r\n\t\t\t\treturn\t( from2otherAngle > 0 );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\r\n\t\tfunction removeHoles( contour, holes ) {\r\n\r\n\t\t\tvar shape = contour.concat(); // work on this shape\r\n\t\t\tvar hole;\r\n\r\n\t\t\tfunction isCutLineInsideAngles( inShapeIdx, inHoleIdx ) {\r\n\r\n\t\t\t\t// Check if hole point lies within angle around shape point\r\n\t\t\t\tvar lastShapeIdx = shape.length - 1;\r\n\r\n\t\t\t\tvar prevShapeIdx = inShapeIdx - 1;\r\n\t\t\t\tif ( prevShapeIdx < 0 )\t\t\tprevShapeIdx = lastShapeIdx;\r\n\r\n\t\t\t\tvar nextShapeIdx = inShapeIdx + 1;\r\n\t\t\t\tif ( nextShapeIdx > lastShapeIdx )\tnextShapeIdx = 0;\r\n\r\n\t\t\t\tvar insideAngle = isPointInsideAngle( shape[ inShapeIdx ], shape[ prevShapeIdx ], shape[ nextShapeIdx ], hole[ inHoleIdx ] );\r\n\t\t\t\tif ( ! insideAngle ) {\r\n\r\n\t\t\t\t\t// console.log( \"Vertex (Shape): \" + inShapeIdx + \", Point: \" + hole[inHoleIdx].x + \"/\" + hole[inHoleIdx].y );\r\n\t\t\t\t\treturn\tfalse;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Check if shape point lies within angle around hole point\r\n\t\t\t\tvar lastHoleIdx = hole.length - 1;\r\n\r\n\t\t\t\tvar prevHoleIdx = inHoleIdx - 1;\r\n\t\t\t\tif ( prevHoleIdx < 0 )\t\t\tprevHoleIdx = lastHoleIdx;\r\n\r\n\t\t\t\tvar nextHoleIdx = inHoleIdx + 1;\r\n\t\t\t\tif ( nextHoleIdx > lastHoleIdx )\tnextHoleIdx = 0;\r\n\r\n\t\t\t\tinsideAngle = isPointInsideAngle( hole[ inHoleIdx ], hole[ prevHoleIdx ], hole[ nextHoleIdx ], shape[ inShapeIdx ] );\r\n\t\t\t\tif ( ! insideAngle ) {\r\n\r\n\t\t\t\t\t// console.log( \"Vertex (Hole): \" + inHoleIdx + \", Point: \" + shape[inShapeIdx].x + \"/\" + shape[inShapeIdx].y );\r\n\t\t\t\t\treturn\tfalse;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn\ttrue;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfunction intersectsShapeEdge( inShapePt, inHolePt ) {\r\n\r\n\t\t\t\t// checks for intersections with shape edges\r\n\t\t\t\tvar sIdx, nextIdx, intersection;\r\n\t\t\t\tfor ( sIdx = 0; sIdx < shape.length; sIdx ++ ) {\r\n\r\n\t\t\t\t\tnextIdx = sIdx + 1; nextIdx %= shape.length;\r\n\t\t\t\t\tintersection = intersect_segments_2D( inShapePt, inHolePt, shape[ sIdx ], shape[ nextIdx ], true );\r\n\t\t\t\t\tif ( intersection.length > 0 )\t\treturn\ttrue;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn\tfalse;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar indepHoles = [];\r\n\r\n\t\t\tfunction intersectsHoleEdge( inShapePt, inHolePt ) {\r\n\r\n\t\t\t\t// checks for intersections with hole edges\r\n\t\t\t\tvar ihIdx, chkHole,\r\n\t\t\t\t\thIdx, nextIdx, intersection;\r\n\t\t\t\tfor ( ihIdx = 0; ihIdx < indepHoles.length; ihIdx ++ ) {\r\n\r\n\t\t\t\t\tchkHole = holes[ indepHoles[ ihIdx ]];\r\n\t\t\t\t\tfor ( hIdx = 0; hIdx < chkHole.length; hIdx ++ ) {\r\n\r\n\t\t\t\t\t\tnextIdx = hIdx + 1; nextIdx %= chkHole.length;\r\n\t\t\t\t\t\tintersection = intersect_segments_2D( inShapePt, inHolePt, chkHole[ hIdx ], chkHole[ nextIdx ], true );\r\n\t\t\t\t\t\tif ( intersection.length > 0 )\t\treturn\ttrue;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\t\t\t\treturn\tfalse;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar holeIndex, shapeIndex,\r\n\t\t\t\tshapePt, holePt,\r\n\t\t\t\tholeIdx, cutKey, failedCuts = [],\r\n\t\t\t\ttmpShape1, tmpShape2,\r\n\t\t\t\ttmpHole1, tmpHole2;\r\n\r\n\t\t\tfor ( var h = 0, hl = holes.length; h < hl; h ++ ) {\r\n\r\n\t\t\t\tindepHoles.push( h );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar minShapeIndex = 0;\r\n\t\t\tvar counter = indepHoles.length * 2;\r\n\t\t\twhile ( indepHoles.length > 0 ) {\r\n\r\n\t\t\t\tcounter --;\r\n\t\t\t\tif ( counter < 0 ) {\r\n\r\n\t\t\t\t\tconsole.log( \"Infinite Loop! Holes left:\" + indepHoles.length + \", Probably Hole outside Shape!\" );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// search for shape-vertex and hole-vertex,\r\n\t\t\t\t// which can be connected without intersections\r\n\t\t\t\tfor ( shapeIndex = minShapeIndex; shapeIndex < shape.length; shapeIndex ++ ) {\r\n\r\n\t\t\t\t\tshapePt = shape[ shapeIndex ];\r\n\t\t\t\t\tholeIndex\t= - 1;\r\n\r\n\t\t\t\t\t// search for hole which can be reached without intersections\r\n\t\t\t\t\tfor ( var h = 0; h < indepHoles.length; h ++ ) {\r\n\r\n\t\t\t\t\t\tholeIdx = indepHoles[ h ];\r\n\r\n\t\t\t\t\t\t// prevent multiple checks\r\n\t\t\t\t\t\tcutKey = shapePt.x + \":\" + shapePt.y + \":\" + holeIdx;\r\n\t\t\t\t\t\tif ( failedCuts[ cutKey ] !== undefined )\t\t\tcontinue;\r\n\r\n\t\t\t\t\t\thole = holes[ holeIdx ];\r\n\t\t\t\t\t\tfor ( var h2 = 0; h2 < hole.length; h2 ++ ) {\r\n\r\n\t\t\t\t\t\t\tholePt = hole[ h2 ];\r\n\t\t\t\t\t\t\tif ( ! isCutLineInsideAngles( shapeIndex, h2 ) )\t\tcontinue;\r\n\t\t\t\t\t\t\tif ( intersectsShapeEdge( shapePt, holePt ) )\t\tcontinue;\r\n\t\t\t\t\t\t\tif ( intersectsHoleEdge( shapePt, holePt ) )\t\tcontinue;\r\n\r\n\t\t\t\t\t\t\tholeIndex = h2;\r\n\t\t\t\t\t\t\tindepHoles.splice( h, 1 );\r\n\r\n\t\t\t\t\t\t\ttmpShape1 = shape.slice( 0, shapeIndex + 1 );\r\n\t\t\t\t\t\t\ttmpShape2 = shape.slice( shapeIndex );\r\n\t\t\t\t\t\t\ttmpHole1 = hole.slice( holeIndex );\r\n\t\t\t\t\t\t\ttmpHole2 = hole.slice( 0, holeIndex + 1 );\r\n\r\n\t\t\t\t\t\t\tshape = tmpShape1.concat( tmpHole1 ).concat( tmpHole2 ).concat( tmpShape2 );\r\n\r\n\t\t\t\t\t\t\tminShapeIndex = shapeIndex;\r\n\r\n\t\t\t\t\t\t\t// Debug only, to show the selected cuts\r\n\t\t\t\t\t\t\t// glob_CutLines.push( [ shapePt, holePt ] );\r\n\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif ( holeIndex >= 0 )\tbreak;\t\t// hole-vertex found\r\n\r\n\t\t\t\t\t\tfailedCuts[ cutKey ] = true;\t\t\t// remember failure\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif ( holeIndex >= 0 )\tbreak;\t\t// hole-vertex found\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn shape; \t\t\t/* shape with no holes */\r\n\r\n\t\t}\r\n\r\n\r\n\t\tvar i, il, f, face,\r\n\t\t\tkey, index,\r\n\t\t\tallPointsMap = {};\r\n\r\n\t\t// To maintain reference to old shape, one must match coordinates, or offset the indices from original arrays. It's probably easier to do the first.\r\n\r\n\t\tvar allpoints = contour.concat();\r\n\r\n\t\tfor ( var h = 0, hl = holes.length; h < hl; h ++ ) {\r\n\r\n\t\t\tArray.prototype.push.apply( allpoints, holes[ h ] );\r\n\r\n\t\t}\r\n\r\n\t\t//console.log( \"allpoints\",allpoints, allpoints.length );\r\n\r\n\t\t// prepare all points map\r\n\r\n\t\tfor ( i = 0, il = allpoints.length; i < il; i ++ ) {\r\n\r\n\t\t\tkey = allpoints[ i ].x + \":\" + allpoints[ i ].y;\r\n\r\n\t\t\tif ( allPointsMap[ key ] !== undefined ) {\r\n\r\n\t\t\t\tconsole.warn( \"THREE.Shape: Duplicate point\", key );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tallPointsMap[ key ] = i;\r\n\r\n\t\t}\r\n\r\n\t\t// remove holes by cutting paths to holes and adding them to the shape\r\n\t\tvar shapeWithoutHoles = removeHoles( contour, holes );\r\n\r\n\t\tvar triangles = THREE.FontUtils.Triangulate( shapeWithoutHoles, false ); // True returns indices for points of spooled shape\r\n\t\t//console.log( \"triangles\",triangles, triangles.length );\r\n\r\n\t\t// check all face vertices against all points map\r\n\r\n\t\tfor ( i = 0, il = triangles.length; i < il; i ++ ) {\r\n\r\n\t\t\tface = triangles[ i ];\r\n\r\n\t\t\tfor ( f = 0; f < 3; f ++ ) {\r\n\r\n\t\t\t\tkey = face[ f ].x + \":\" + face[ f ].y;\r\n\r\n\t\t\t\tindex = allPointsMap[ key ];\r\n\r\n\t\t\t\tif ( index !== undefined ) {\r\n\r\n\t\t\t\t\tface[ f ] = index;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn triangles.concat();\r\n\r\n\t},\r\n\r\n\tisClockWise: function ( pts ) {\r\n\r\n\t\treturn THREE.FontUtils.Triangulate.area( pts ) < 0;\r\n\r\n\t},\r\n\r\n\t// Bezier Curves formulas obtained from\r\n\t// http://en.wikipedia.org/wiki/B%C3%A9zier_curve\r\n\r\n\t// Quad Bezier Functions\r\n\r\n\tb2p0: function ( t, p ) {\r\n\r\n\t\tvar k = 1 - t;\r\n\t\treturn k * k * p;\r\n\r\n\t},\r\n\r\n\tb2p1: function ( t, p ) {\r\n\r\n\t\treturn 2 * ( 1 - t ) * t * p;\r\n\r\n\t},\r\n\r\n\tb2p2: function ( t, p ) {\r\n\r\n\t\treturn t * t * p;\r\n\r\n\t},\r\n\r\n\tb2: function ( t, p0, p1, p2 ) {\r\n\r\n\t\treturn this.b2p0( t, p0 ) + this.b2p1( t, p1 ) + this.b2p2( t, p2 );\r\n\r\n\t},\r\n\r\n\t// Cubic Bezier Functions\r\n\r\n\tb3p0: function ( t, p ) {\r\n\r\n\t\tvar k = 1 - t;\r\n\t\treturn k * k * k * p;\r\n\r\n\t},\r\n\r\n\tb3p1: function ( t, p ) {\r\n\r\n\t\tvar k = 1 - t;\r\n\t\treturn 3 * k * k * t * p;\r\n\r\n\t},\r\n\r\n\tb3p2: function ( t, p ) {\r\n\r\n\t\tvar k = 1 - t;\r\n\t\treturn 3 * k * t * t * p;\r\n\r\n\t},\r\n\r\n\tb3p3: function ( t, p ) {\r\n\r\n\t\treturn t * t * t * p;\r\n\r\n\t},\r\n\r\n\tb3: function ( t, p0, p1, p2, p3 ) {\r\n\r\n\t\treturn this.b3p0( t, p0 ) + this.b3p1( t, p1 ) + this.b3p2( t, p2 ) +  this.b3p3( t, p3 );\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/extras/curves/LineCurve.js\r\n\r\n/**************************************************************\r\n *\tLine\r\n **************************************************************/\r\n\r\nTHREE.LineCurve = function ( v1, v2 ) {\r\n\r\n\tthis.v1 = v1;\r\n\tthis.v2 = v2;\r\n\r\n};\r\n\r\nTHREE.LineCurve.prototype = Object.create( THREE.Curve.prototype );\r\nTHREE.LineCurve.prototype.constructor = THREE.LineCurve;\r\n\r\nTHREE.LineCurve.prototype.getPoint = function ( t ) {\r\n\r\n\tvar point = this.v2.clone().sub( this.v1 );\r\n\tpoint.multiplyScalar( t ).add( this.v1 );\r\n\r\n\treturn point;\r\n\r\n};\r\n\r\n// Line curve is linear, so we can overwrite default getPointAt\r\n\r\nTHREE.LineCurve.prototype.getPointAt = function ( u ) {\r\n\r\n\treturn this.getPoint( u );\r\n\r\n};\r\n\r\nTHREE.LineCurve.prototype.getTangent = function( t ) {\r\n\r\n\tvar tangent = this.v2.clone().sub( this.v1 );\r\n\r\n\treturn tangent.normalize();\r\n\r\n};\r\n\r\n// File:src/extras/curves/QuadraticBezierCurve.js\r\n\r\n/**************************************************************\r\n *\tQuadratic Bezier curve\r\n **************************************************************/\r\n\r\n\r\nTHREE.QuadraticBezierCurve = function ( v0, v1, v2 ) {\r\n\r\n\tthis.v0 = v0;\r\n\tthis.v1 = v1;\r\n\tthis.v2 = v2;\r\n\r\n};\r\n\r\nTHREE.QuadraticBezierCurve.prototype = Object.create( THREE.Curve.prototype );\r\nTHREE.QuadraticBezierCurve.prototype.constructor = THREE.QuadraticBezierCurve;\r\n\r\n\r\nTHREE.QuadraticBezierCurve.prototype.getPoint = function ( t ) {\r\n\r\n\tvar vector = new THREE.Vector2();\r\n\r\n\tvector.x = THREE.Shape.Utils.b2( t, this.v0.x, this.v1.x, this.v2.x );\r\n\tvector.y = THREE.Shape.Utils.b2( t, this.v0.y, this.v1.y, this.v2.y );\r\n\r\n\treturn vector;\r\n\r\n};\r\n\r\n\r\nTHREE.QuadraticBezierCurve.prototype.getTangent = function( t ) {\r\n\r\n\tvar vector = new THREE.Vector2();\r\n\r\n\tvector.x = THREE.Curve.Utils.tangentQuadraticBezier( t, this.v0.x, this.v1.x, this.v2.x );\r\n\tvector.y = THREE.Curve.Utils.tangentQuadraticBezier( t, this.v0.y, this.v1.y, this.v2.y );\r\n\r\n\t// returns unit vector\r\n\r\n\treturn vector.normalize();\r\n\r\n};\r\n\r\n// File:src/extras/curves/CubicBezierCurve.js\r\n\r\n/**************************************************************\r\n *\tCubic Bezier curve\r\n **************************************************************/\r\n\r\nTHREE.CubicBezierCurve = function ( v0, v1, v2, v3 ) {\r\n\r\n\tthis.v0 = v0;\r\n\tthis.v1 = v1;\r\n\tthis.v2 = v2;\r\n\tthis.v3 = v3;\r\n\r\n};\r\n\r\nTHREE.CubicBezierCurve.prototype = Object.create( THREE.Curve.prototype );\r\nTHREE.CubicBezierCurve.prototype.constructor = THREE.CubicBezierCurve;\r\n\r\nTHREE.CubicBezierCurve.prototype.getPoint = function ( t ) {\r\n\r\n\tvar tx, ty;\r\n\r\n\ttx = THREE.Shape.Utils.b3( t, this.v0.x, this.v1.x, this.v2.x, this.v3.x );\r\n\tty = THREE.Shape.Utils.b3( t, this.v0.y, this.v1.y, this.v2.y, this.v3.y );\r\n\r\n\treturn new THREE.Vector2( tx, ty );\r\n\r\n};\r\n\r\nTHREE.CubicBezierCurve.prototype.getTangent = function( t ) {\r\n\r\n\tvar tx, ty;\r\n\r\n\ttx = THREE.Curve.Utils.tangentCubicBezier( t, this.v0.x, this.v1.x, this.v2.x, this.v3.x );\r\n\tty = THREE.Curve.Utils.tangentCubicBezier( t, this.v0.y, this.v1.y, this.v2.y, this.v3.y );\r\n\r\n\tvar tangent = new THREE.Vector2( tx, ty );\r\n\ttangent.normalize();\r\n\r\n\treturn tangent;\r\n\r\n};\r\n\r\n// File:src/extras/curves/SplineCurve.js\r\n\r\n/**************************************************************\r\n *\tSpline curve\r\n **************************************************************/\r\n\r\nTHREE.SplineCurve = function ( points /* array of Vector2 */ ) {\r\n\r\n\tthis.points = ( points == undefined ) ? [] : points;\r\n\r\n};\r\n\r\nTHREE.SplineCurve.prototype = Object.create( THREE.Curve.prototype );\r\nTHREE.SplineCurve.prototype.constructor = THREE.SplineCurve;\r\n\r\nTHREE.SplineCurve.prototype.getPoint = function ( t ) {\r\n\r\n\tvar points = this.points;\r\n\tvar point = ( points.length - 1 ) * t;\r\n\r\n\tvar intPoint = Math.floor( point );\r\n\tvar weight = point - intPoint;\r\n\r\n\tvar point0 = points[ intPoint === 0 ? intPoint : intPoint - 1 ];\r\n\tvar point1 = points[ intPoint ];\r\n\tvar point2 = points[ intPoint > points.length - 2 ? points.length - 1 : intPoint + 1 ];\r\n\tvar point3 = points[ intPoint > points.length - 3 ? points.length - 1 : intPoint + 2 ];\r\n\r\n\tvar vector = new THREE.Vector2();\r\n\r\n\tvector.x = THREE.Curve.Utils.interpolate( point0.x, point1.x, point2.x, point3.x, weight );\r\n\tvector.y = THREE.Curve.Utils.interpolate( point0.y, point1.y, point2.y, point3.y, weight );\r\n\r\n\treturn vector;\r\n\r\n};\r\n\r\n// File:src/extras/curves/EllipseCurve.js\r\n\r\n/**************************************************************\r\n *\tEllipse curve\r\n **************************************************************/\r\n\r\nTHREE.EllipseCurve = function ( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\r\n\r\n\tthis.aX = aX;\r\n\tthis.aY = aY;\r\n\r\n\tthis.xRadius = xRadius;\r\n\tthis.yRadius = yRadius;\r\n\r\n\tthis.aStartAngle = aStartAngle;\r\n\tthis.aEndAngle = aEndAngle;\r\n\r\n\tthis.aClockwise = aClockwise;\r\n\t\r\n\tthis.aRotation = aRotation || 0;\r\n\r\n};\r\n\r\nTHREE.EllipseCurve.prototype = Object.create( THREE.Curve.prototype );\r\nTHREE.EllipseCurve.prototype.constructor = THREE.EllipseCurve;\r\n\r\nTHREE.EllipseCurve.prototype.getPoint = function ( t ) {\r\n\r\n\tvar deltaAngle = this.aEndAngle - this.aStartAngle;\r\n\r\n\tif ( deltaAngle < 0 ) deltaAngle += Math.PI * 2;\r\n\tif ( deltaAngle > Math.PI * 2 ) deltaAngle -= Math.PI * 2;\r\n\r\n\tvar angle;\r\n\r\n\tif ( this.aClockwise === true ) {\r\n\r\n\t\tangle = this.aEndAngle + ( 1 - t ) * ( Math.PI * 2 - deltaAngle );\r\n\r\n\t} else {\r\n\r\n\t\tangle = this.aStartAngle + t * deltaAngle;\r\n\r\n\t}\r\n\t\r\n\tvar x = this.aX + this.xRadius * Math.cos( angle );\r\n\tvar y = this.aY + this.yRadius * Math.sin( angle );\r\n\r\n\tif ( this.aRotation !== 0 ) {\r\n\r\n\t\tvar cos = Math.cos( this.aRotation );\r\n\t\tvar sin = Math.sin( this.aRotation );\r\n\r\n\t\tvar tx = x, ty = y;\r\n\r\n\t\t// Rotate the point about the center of the ellipse.\r\n\t\tx = ( tx - this.aX ) * cos - ( ty - this.aY ) * sin + this.aX;\r\n\t\ty = ( tx - this.aX ) * sin + ( ty - this.aY ) * cos + this.aY;\r\n\r\n\t}\r\n\r\n\treturn new THREE.Vector2( x, y );\r\n\r\n};\r\n\r\n// File:src/extras/curves/ArcCurve.js\r\n\r\n/**************************************************************\r\n *\tArc curve\r\n **************************************************************/\r\n\r\nTHREE.ArcCurve = function ( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\r\n\r\n\tTHREE.EllipseCurve.call( this, aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\r\n\r\n};\r\n\r\nTHREE.ArcCurve.prototype = Object.create( THREE.EllipseCurve.prototype );\r\nTHREE.ArcCurve.prototype.constructor = THREE.ArcCurve;\r\n\r\n// File:src/extras/curves/LineCurve3.js\r\n\r\n/**************************************************************\r\n *\tLine3D\r\n **************************************************************/\r\n\r\nTHREE.LineCurve3 = THREE.Curve.create(\r\n\r\n\tfunction ( v1, v2 ) {\r\n\r\n\t\tthis.v1 = v1;\r\n\t\tthis.v2 = v2;\r\n\r\n\t},\r\n\r\n\tfunction ( t ) {\r\n\r\n\t\tvar vector = new THREE.Vector3();\r\n\r\n\t\tvector.subVectors( this.v2, this.v1 ); // diff\r\n\t\tvector.multiplyScalar( t );\r\n\t\tvector.add( this.v1 );\r\n\r\n\t\treturn vector;\r\n\r\n\t}\r\n\r\n);\r\n\r\n// File:src/extras/curves/QuadraticBezierCurve3.js\r\n\r\n/**************************************************************\r\n *\tQuadratic Bezier 3D curve\r\n **************************************************************/\r\n\r\nTHREE.QuadraticBezierCurve3 = THREE.Curve.create(\r\n\r\n\tfunction ( v0, v1, v2 ) {\r\n\r\n\t\tthis.v0 = v0;\r\n\t\tthis.v1 = v1;\r\n\t\tthis.v2 = v2;\r\n\r\n\t},\r\n\r\n\tfunction ( t ) {\r\n\r\n\t\tvar vector = new THREE.Vector3();\r\n\r\n\t\tvector.x = THREE.Shape.Utils.b2( t, this.v0.x, this.v1.x, this.v2.x );\r\n\t\tvector.y = THREE.Shape.Utils.b2( t, this.v0.y, this.v1.y, this.v2.y );\r\n\t\tvector.z = THREE.Shape.Utils.b2( t, this.v0.z, this.v1.z, this.v2.z );\r\n\r\n\t\treturn vector;\r\n\r\n\t}\r\n\r\n);\r\n\r\n// File:src/extras/curves/CubicBezierCurve3.js\r\n\r\n/**************************************************************\r\n *\tCubic Bezier 3D curve\r\n **************************************************************/\r\n\r\nTHREE.CubicBezierCurve3 = THREE.Curve.create(\r\n\r\n\tfunction ( v0, v1, v2, v3 ) {\r\n\r\n\t\tthis.v0 = v0;\r\n\t\tthis.v1 = v1;\r\n\t\tthis.v2 = v2;\r\n\t\tthis.v3 = v3;\r\n\r\n\t},\r\n\r\n\tfunction ( t ) {\r\n\r\n\t\tvar vector = new THREE.Vector3();\r\n\r\n\t\tvector.x = THREE.Shape.Utils.b3( t, this.v0.x, this.v1.x, this.v2.x, this.v3.x );\r\n\t\tvector.y = THREE.Shape.Utils.b3( t, this.v0.y, this.v1.y, this.v2.y, this.v3.y );\r\n\t\tvector.z = THREE.Shape.Utils.b3( t, this.v0.z, this.v1.z, this.v2.z, this.v3.z );\r\n\r\n\t\treturn vector;\r\n\r\n\t}\r\n\r\n);\r\n\r\n// File:src/extras/curves/SplineCurve3.js\r\n\r\n/**************************************************************\r\n *\tSpline 3D curve\r\n **************************************************************/\r\n\r\n\r\nTHREE.SplineCurve3 = THREE.Curve.create(\r\n\r\n\tfunction ( points /* array of Vector3 */ ) {\r\n\r\n\t\tconsole.warn( 'THREE.SplineCurve3 will be deprecated. Please use THREE.CatmullRomCurve3' );\r\n\t\tthis.points = ( points == undefined ) ? [] : points;\r\n\r\n\t},\r\n\r\n\tfunction ( t ) {\r\n\r\n\t\tvar points = this.points;\r\n\t\tvar point = ( points.length - 1 ) * t;\r\n\r\n\t\tvar intPoint = Math.floor( point );\r\n\t\tvar weight = point - intPoint;\r\n\r\n\t\tvar point0 = points[ intPoint == 0 ? intPoint : intPoint - 1 ];\r\n\t\tvar point1 = points[ intPoint ];\r\n\t\tvar point2 = points[ intPoint > points.length - 2 ? points.length - 1 : intPoint + 1 ];\r\n\t\tvar point3 = points[ intPoint > points.length - 3 ? points.length - 1 : intPoint + 2 ];\r\n\r\n\t\tvar vector = new THREE.Vector3();\r\n\r\n\t\tvector.x = THREE.Curve.Utils.interpolate( point0.x, point1.x, point2.x, point3.x, weight );\r\n\t\tvector.y = THREE.Curve.Utils.interpolate( point0.y, point1.y, point2.y, point3.y, weight );\r\n\t\tvector.z = THREE.Curve.Utils.interpolate( point0.z, point1.z, point2.z, point3.z, weight );\r\n\r\n\t\treturn vector;\r\n\r\n\t}\r\n\r\n);\r\n\r\n// File:src/extras/curves/CatmullRomCurve3.js\r\n\r\n/**\r\n * @author zz85 https://github.com/zz85\r\n *\r\n * Centripetal CatmullRom Curve - which is useful for avoiding\r\n * cusps and self-intersections in non-uniform catmull rom curves.\r\n * http://www.cemyuksel.com/research/catmullrom_param/catmullrom.pdf\r\n *\r\n * curve.type accepts centripetal(default), chordal and catmullrom\r\n * curve.tension is used for catmullrom which defaults to 0.5\r\n */\r\n\r\nTHREE.CatmullRomCurve3 = ( function() {\r\n\r\n\tvar\r\n\t\ttmp = new THREE.Vector3(),\r\n\t\tpx = new CubicPoly(),\r\n\t\tpy = new CubicPoly(),\r\n\t\tpz = new CubicPoly();\r\n\r\n\t/*\r\n\tBased on an optimized c++ solution in\r\n\t - http://stackoverflow.com/questions/9489736/catmull-rom-curve-with-no-cusps-and-no-self-intersections/\r\n\t - http://ideone.com/NoEbVM\r\n\r\n\tThis CubicPoly class could be used for reusing some variables and calculations,\r\n\tbut for three.js curve use, it could be possible inlined and flatten into a single function call\r\n\twhich can be placed in CurveUtils.\r\n\t*/\r\n\r\n\tfunction CubicPoly() {\r\n\r\n\t}\r\n\r\n\t/*\r\n\t * Compute coefficients for a cubic polynomial\r\n\t *   p(s) = c0 + c1*s + c2*s^2 + c3*s^3\r\n\t * such that\r\n\t *   p(0) = x0, p(1) = x1\r\n\t *  and\r\n\t *   p'(0) = t0, p'(1) = t1.\r\n\t */\r\n\tCubicPoly.prototype.init = function( x0, x1, t0, t1 ) {\r\n\r\n\t\tthis.c0 = x0;\r\n\t\tthis.c1 = t0;\r\n\t\tthis.c2 = - 3 * x0 + 3 * x1 - 2 * t0 - t1;\r\n\t\tthis.c3 = 2 * x0 - 2 * x1 + t0 + t1;\r\n\r\n\t};\r\n\r\n\tCubicPoly.prototype.initNonuniformCatmullRom = function( x0, x1, x2, x3, dt0, dt1, dt2 ) {\r\n\r\n\t\t// compute tangents when parameterized in [t1,t2]\r\n\t\tvar t1 = ( x1 - x0 ) / dt0 - ( x2 - x0 ) / ( dt0 + dt1 ) + ( x2 - x1 ) / dt1;\r\n\t\tvar t2 = ( x2 - x1 ) / dt1 - ( x3 - x1 ) / ( dt1 + dt2 ) + ( x3 - x2 ) / dt2;\r\n\r\n\t\t// rescale tangents for parametrization in [0,1]\r\n\t\tt1 *= dt1;\r\n\t\tt2 *= dt1;\r\n\r\n\t\t// initCubicPoly\r\n\t\tthis.init( x1, x2, t1, t2 );\r\n\r\n\t};\r\n\r\n\t// standard Catmull-Rom spline: interpolate between x1 and x2 with previous/following points x1/x4\r\n\tCubicPoly.prototype.initCatmullRom = function( x0, x1, x2, x3, tension ) {\r\n\r\n\t\tthis.init( x1, x2, tension * ( x2 - x0 ), tension * ( x3 - x1 ) );\r\n\r\n\t};\r\n\r\n\tCubicPoly.prototype.calc = function( t ) {\r\n\r\n\t\tvar t2 = t * t;\r\n\t\tvar t3 = t2 * t;\r\n\t\treturn this.c0 + this.c1 * t + this.c2 * t2 + this.c3 * t3;\r\n\r\n\t};\r\n\r\n\t// Subclass Three.js curve\r\n\treturn THREE.Curve.create(\r\n\r\n\t\tfunction ( p /* array of Vector3 */ ) {\r\n\r\n\t\t\tthis.points = p || [];\r\n\r\n\t\t},\r\n\r\n\t\tfunction ( t ) {\r\n\r\n\t\t\tvar points = this.points,\r\n\t\t\t\tpoint, intPoint, weight, l;\r\n\r\n\t\t\tl = points.length;\r\n\r\n\t\t\tif ( l < 2 ) console.log( 'duh, you need at least 2 points' );\r\n\r\n\t\t\tpoint = ( l - 1 ) * t;\r\n\t\t\tintPoint = Math.floor( point );\r\n\t\t\tweight = point - intPoint;\r\n\r\n\t\t\tif ( weight === 0 && intPoint === l - 1 ) {\r\n\r\n\t\t\t\tintPoint = l - 2;\r\n\t\t\t\tweight = 1;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar p0, p1, p2, p3;\r\n\r\n\t\t\tif ( intPoint === 0 ) {\r\n\r\n\t\t\t\t// extrapolate first point\r\n\t\t\t\ttmp.subVectors( points[ 0 ], points[ 1 ] ).add( points[ 0 ] );\r\n\t\t\t\tp0 = tmp;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tp0 = points[ intPoint - 1 ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tp1 = points[ intPoint ];\r\n\t\t\tp2 = points[ intPoint + 1 ];\r\n\r\n\t\t\tif ( intPoint + 2 < l ) {\r\n\r\n\t\t\t\tp3 = points[ intPoint + 2 ]\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// extrapolate last point\r\n\t\t\t\ttmp.subVectors( points[ l - 1 ], points[ l - 2 ] ).add( points[ l - 2 ] );\r\n\t\t\t\tp3 = tmp;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( this.type === undefined || this.type === 'centripetal' || this.type === 'chordal' ) {\r\n\r\n\t\t\t\t// init Centripetal / Chordal Catmull-Rom\r\n\t\t\t\tvar pow = this.type === 'chordal' ? 0.5 : 0.25;\r\n\t\t\t\tvar dt0 = Math.pow( p0.distanceToSquared( p1 ), pow );\r\n\t\t\t\tvar dt1 = Math.pow( p1.distanceToSquared( p2 ), pow );\r\n\t\t\t\tvar dt2 = Math.pow( p2.distanceToSquared( p3 ), pow );\r\n\r\n\t\t\t\t// safety check for repeated points\r\n\t\t\t\tif ( dt1 < 1e-4 ) dt1 = 1.0;\r\n\t\t\t\tif ( dt0 < 1e-4 ) dt0 = dt1;\r\n\t\t\t\tif ( dt2 < 1e-4 ) dt2 = dt1;\r\n\r\n\t\t\t\tpx.initNonuniformCatmullRom( p0.x, p1.x, p2.x, p3.x, dt0, dt1, dt2 );\r\n\t\t\t\tpy.initNonuniformCatmullRom( p0.y, p1.y, p2.y, p3.y, dt0, dt1, dt2 );\r\n\t\t\t\tpz.initNonuniformCatmullRom( p0.z, p1.z, p2.z, p3.z, dt0, dt1, dt2 );\r\n\r\n\t\t\t} else if ( this.type === 'catmullrom' ) {\r\n\r\n\t\t\t\tvar tension = this.tension !== undefined ? this.tension : 0.5;\r\n\t\t\t\tpx.initCatmullRom( p0.x, p1.x, p2.x, p3.x, tension );\r\n\t\t\t\tpy.initCatmullRom( p0.y, p1.y, p2.y, p3.y, tension );\r\n\t\t\t\tpz.initCatmullRom( p0.z, p1.z, p2.z, p3.z, tension );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar v = new THREE.Vector3(\r\n\t\t\t\tpx.calc( weight ),\r\n\t\t\t\tpy.calc( weight ),\r\n\t\t\t\tpz.calc( weight )\r\n\t\t\t);\r\n\r\n\t\t\treturn v;\r\n\r\n\t\t}\r\n\r\n\t);\r\n\r\n} )();\r\n\r\n// File:src/extras/curves/ClosedSplineCurve3.js\r\n\r\n/**************************************************************\r\n *\tClosed Spline 3D curve\r\n **************************************************************/\r\n\r\n\r\nTHREE.ClosedSplineCurve3 = THREE.Curve.create(\r\n\r\n\tfunction ( points /* array of Vector3 */ ) {\r\n\r\n\t\tthis.points = ( points == undefined ) ? [] : points;\r\n\r\n\t},\r\n\r\n\tfunction ( t ) {\r\n\r\n\t\tvar points = this.points;\r\n\t\tvar point = ( points.length - 0 ) * t; // This needs to be from 0-length +1\r\n\r\n\t\tvar intPoint = Math.floor( point );\r\n\t\tvar weight = point - intPoint;\r\n\r\n\t\tintPoint += intPoint > 0 ? 0 : ( Math.floor( Math.abs( intPoint ) / points.length ) + 1 ) * points.length;\r\n\r\n\t\tvar point0 = points[ ( intPoint - 1 ) % points.length ];\r\n\t\tvar point1 = points[ ( intPoint     ) % points.length ];\r\n\t\tvar point2 = points[ ( intPoint + 1 ) % points.length ];\r\n\t\tvar point3 = points[ ( intPoint + 2 ) % points.length ];\r\n\r\n\t\tvar vector = new THREE.Vector3();\r\n\r\n\t\tvector.x = THREE.Curve.Utils.interpolate( point0.x, point1.x, point2.x, point3.x, weight );\r\n\t\tvector.y = THREE.Curve.Utils.interpolate( point0.y, point1.y, point2.y, point3.y, weight );\r\n\t\tvector.z = THREE.Curve.Utils.interpolate( point0.z, point1.z, point2.z, point3.z, weight );\r\n\r\n\t\treturn vector;\r\n\r\n\t}\r\n\r\n);\r\n\r\n// File:src/extras/animation/AnimationHandler.js\r\n\r\n/**\r\n * @author mikael emtinger / http://gomo.se/\r\n */\r\n\r\nTHREE.AnimationHandler = {\r\n\r\n\tLINEAR: 0,\r\n\tCATMULLROM: 1,\r\n\tCATMULLROM_FORWARD: 2,\r\n\r\n\t//\r\n\r\n\tadd: function () {\r\n\r\n\t\tconsole.warn( 'THREE.AnimationHandler.add() has been deprecated.' );\r\n\r\n\t},\r\n\tget: function () {\r\n\r\n\t\tconsole.warn( 'THREE.AnimationHandler.get() has been deprecated.' );\r\n\r\n\t},\r\n\tremove: function () {\r\n\r\n\t\tconsole.warn( 'THREE.AnimationHandler.remove() has been deprecated.' );\r\n\r\n\t},\r\n\r\n\t//\r\n\r\n\tanimations: [],\r\n\r\n\tinit: function ( data ) {\r\n\r\n\t\tif ( data.initialized === true ) return data;\r\n\r\n\t\t// loop through all keys\r\n\r\n\t\tfor ( var h = 0; h < data.hierarchy.length; h ++ ) {\r\n\r\n\t\t\tfor ( var k = 0; k < data.hierarchy[ h ].keys.length; k ++ ) {\r\n\r\n\t\t\t\t// remove minus times\r\n\r\n\t\t\t\tif ( data.hierarchy[ h ].keys[ k ].time < 0 ) {\r\n\r\n\t\t\t\t\t data.hierarchy[ h ].keys[ k ].time = 0;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// create quaternions\r\n\r\n\t\t\t\tif ( data.hierarchy[ h ].keys[ k ].rot !== undefined &&\r\n\t\t\t\t  ! ( data.hierarchy[ h ].keys[ k ].rot instanceof THREE.Quaternion ) ) {\r\n\r\n\t\t\t\t\tvar quat = data.hierarchy[ h ].keys[ k ].rot;\r\n\t\t\t\t\tdata.hierarchy[ h ].keys[ k ].rot = new THREE.Quaternion().fromArray( quat );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// prepare morph target keys\r\n\r\n\t\t\tif ( data.hierarchy[ h ].keys.length && data.hierarchy[ h ].keys[ 0 ].morphTargets !== undefined ) {\r\n\r\n\t\t\t\t// get all used\r\n\r\n\t\t\t\tvar usedMorphTargets = {};\r\n\r\n\t\t\t\tfor ( var k = 0; k < data.hierarchy[ h ].keys.length; k ++ ) {\r\n\r\n\t\t\t\t\tfor ( var m = 0; m < data.hierarchy[ h ].keys[ k ].morphTargets.length; m ++ ) {\r\n\r\n\t\t\t\t\t\tvar morphTargetName = data.hierarchy[ h ].keys[ k ].morphTargets[ m ];\r\n\t\t\t\t\t\tusedMorphTargets[ morphTargetName ] = - 1;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tdata.hierarchy[ h ].usedMorphTargets = usedMorphTargets;\r\n\r\n\r\n\t\t\t\t// set all used on all frames\r\n\r\n\t\t\t\tfor ( var k = 0; k < data.hierarchy[ h ].keys.length; k ++ ) {\r\n\r\n\t\t\t\t\tvar influences = {};\r\n\r\n\t\t\t\t\tfor ( var morphTargetName in usedMorphTargets ) {\r\n\r\n\t\t\t\t\t\tfor ( var m = 0; m < data.hierarchy[ h ].keys[ k ].morphTargets.length; m ++ ) {\r\n\r\n\t\t\t\t\t\t\tif ( data.hierarchy[ h ].keys[ k ].morphTargets[ m ] === morphTargetName ) {\r\n\r\n\t\t\t\t\t\t\t\tinfluences[ morphTargetName ] = data.hierarchy[ h ].keys[ k ].morphTargetsInfluences[ m ];\r\n\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif ( m === data.hierarchy[ h ].keys[ k ].morphTargets.length ) {\r\n\r\n\t\t\t\t\t\t\tinfluences[ morphTargetName ] = 0;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tdata.hierarchy[ h ].keys[ k ].morphTargetsInfluences = influences;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\r\n\t\t\t// remove all keys that are on the same time\r\n\r\n\t\t\tfor ( var k = 1; k < data.hierarchy[ h ].keys.length; k ++ ) {\r\n\r\n\t\t\t\tif ( data.hierarchy[ h ].keys[ k ].time === data.hierarchy[ h ].keys[ k - 1 ].time ) {\r\n\r\n\t\t\t\t\tdata.hierarchy[ h ].keys.splice( k, 1 );\r\n\t\t\t\t\tk --;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\r\n\t\t\t// set index\r\n\r\n\t\t\tfor ( var k = 0; k < data.hierarchy[ h ].keys.length; k ++ ) {\r\n\r\n\t\t\t\tdata.hierarchy[ h ].keys[ k ].index = k;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tdata.initialized = true;\r\n\r\n\t\treturn data;\r\n\r\n\t},\r\n\r\n\tparse: function ( root ) {\r\n\r\n\t\tvar parseRecurseHierarchy = function ( root, hierarchy ) {\r\n\r\n\t\t\thierarchy.push( root );\r\n\r\n\t\t\tfor ( var c = 0; c < root.children.length; c ++ )\r\n\t\t\t\tparseRecurseHierarchy( root.children[ c ], hierarchy );\r\n\r\n\t\t};\r\n\r\n\t\t// setup hierarchy\r\n\r\n\t\tvar hierarchy = [];\r\n\r\n\t\tif ( root instanceof THREE.SkinnedMesh ) {\r\n\r\n\t\t\tfor ( var b = 0; b < root.skeleton.bones.length; b ++ ) {\r\n\r\n\t\t\t\thierarchy.push( root.skeleton.bones[ b ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\tparseRecurseHierarchy( root, hierarchy );\r\n\r\n\t\t}\r\n\r\n\t\treturn hierarchy;\r\n\r\n\t},\r\n\r\n\tplay: function ( animation ) {\r\n\r\n\t\tif ( this.animations.indexOf( animation ) === - 1 ) {\r\n\r\n\t\t\tthis.animations.push( animation );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tstop: function ( animation ) {\r\n\r\n\t\tvar index = this.animations.indexOf( animation );\r\n\r\n\t\tif ( index !== - 1 ) {\r\n\r\n\t\t\tthis.animations.splice( index, 1 );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tupdate: function ( deltaTimeMS ) {\r\n\r\n\t\tfor ( var i = 0; i < this.animations.length; i ++ ) {\r\n\r\n\t\t\tthis.animations[ i ].resetBlendWeights();\r\n\r\n\t\t}\r\n\r\n\t\tfor ( var i = 0; i < this.animations.length; i ++ ) {\r\n\r\n\t\t\tthis.animations[ i ].update( deltaTimeMS );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/extras/animation/Animation.js\r\n\r\n/**\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.Animation = function ( root, data ) {\r\n\r\n\tthis.root = root;\r\n\tthis.data = THREE.AnimationHandler.init( data );\r\n\tthis.hierarchy = THREE.AnimationHandler.parse( root );\r\n\r\n\tthis.currentTime = 0;\r\n\tthis.timeScale = 1;\r\n\r\n\tthis.isPlaying = false;\r\n\tthis.loop = true;\r\n\tthis.weight = 0;\r\n\r\n\tthis.interpolationType = THREE.AnimationHandler.LINEAR;\r\n\r\n};\r\n\r\nTHREE.Animation.prototype = {\r\n\r\n\tconstructor: THREE.Animation,\r\n\r\n\tkeyTypes:  [ \"pos\", \"rot\", \"scl\" ],\r\n\r\n\tplay: function ( startTime, weight ) {\r\n\r\n\t\tthis.currentTime = startTime !== undefined ? startTime : 0;\r\n\t\tthis.weight = weight !== undefined ? weight : 1;\r\n\r\n\t\tthis.isPlaying = true;\r\n\r\n\t\tthis.reset();\r\n\r\n\t\tTHREE.AnimationHandler.play( this );\r\n\r\n\t},\r\n\r\n\tstop: function() {\r\n\r\n\t\tthis.isPlaying = false;\r\n\r\n\t\tTHREE.AnimationHandler.stop( this );\r\n\r\n\t},\r\n\r\n\treset: function () {\r\n\r\n\t\tfor ( var h = 0, hl = this.hierarchy.length; h < hl; h ++ ) {\r\n\r\n\t\t\tvar object = this.hierarchy[ h ];\r\n\r\n\t\t\tif ( object.animationCache === undefined ) {\r\n\r\n\t\t\t\tobject.animationCache = {\r\n\t\t\t\t\tanimations: {},\r\n\t\t\t\t\tblending: {\r\n\t\t\t\t\t\tpositionWeight: 0.0,\r\n\t\t\t\t\t\tquaternionWeight: 0.0,\r\n\t\t\t\t\t\tscaleWeight: 0.0\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar name = this.data.name;\r\n\t\t\tvar animations = object.animationCache.animations;\r\n\t\t\tvar animationCache = animations[ name ];\r\n\r\n\t\t\tif ( animationCache === undefined ) {\r\n\r\n\t\t\t\tanimationCache = {\r\n\t\t\t\t\tprevKey: { pos: 0, rot: 0, scl: 0 },\r\n\t\t\t\t\tnextKey: { pos: 0, rot: 0, scl: 0 },\r\n\t\t\t\t\toriginalMatrix: object.matrix\r\n\t\t\t\t};\r\n\r\n\t\t\t\tanimations[ name ] = animationCache;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// Get keys to match our current time\r\n\r\n\t\t\tfor ( var t = 0; t < 3; t ++ ) {\r\n\r\n\t\t\t\tvar type = this.keyTypes[ t ];\r\n\r\n\t\t\t\tvar prevKey = this.data.hierarchy[ h ].keys[ 0 ];\r\n\t\t\t\tvar nextKey = this.getNextKeyWith( type, h, 1 );\r\n\r\n\t\t\t\twhile ( nextKey.time < this.currentTime && nextKey.index > prevKey.index ) {\r\n\r\n\t\t\t\t\tprevKey = nextKey;\r\n\t\t\t\t\tnextKey = this.getNextKeyWith( type, h, nextKey.index + 1 );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tanimationCache.prevKey[ type ] = prevKey;\r\n\t\t\t\tanimationCache.nextKey[ type ] = nextKey;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tresetBlendWeights: function () {\r\n\r\n\t\tfor ( var h = 0, hl = this.hierarchy.length; h < hl; h ++ ) {\r\n\r\n\t\t\tvar object = this.hierarchy[ h ];\r\n\t\t\tvar animationCache = object.animationCache;\r\n\r\n\t\t\tif ( animationCache !== undefined ) {\r\n\r\n\t\t\t\tvar blending = animationCache.blending;\r\n\r\n\t\t\t\tblending.positionWeight = 0.0;\r\n\t\t\t\tblending.quaternionWeight = 0.0;\r\n\t\t\t\tblending.scaleWeight = 0.0;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tupdate: ( function() {\r\n\r\n\t\tvar points = [];\r\n\t\tvar target = new THREE.Vector3();\r\n\t\tvar newVector = new THREE.Vector3();\r\n\t\tvar newQuat = new THREE.Quaternion();\r\n\r\n\t\t// Catmull-Rom spline\r\n\r\n\t\tvar interpolateCatmullRom = function ( points, scale ) {\r\n\r\n\t\t\tvar c = [], v3 = [],\r\n\t\t\tpoint, intPoint, weight, w2, w3,\r\n\t\t\tpa, pb, pc, pd;\r\n\r\n\t\t\tpoint = ( points.length - 1 ) * scale;\r\n\t\t\tintPoint = Math.floor( point );\r\n\t\t\tweight = point - intPoint;\r\n\r\n\t\t\tc[ 0 ] = intPoint === 0 ? intPoint : intPoint - 1;\r\n\t\t\tc[ 1 ] = intPoint;\r\n\t\t\tc[ 2 ] = intPoint > points.length - 2 ? intPoint : intPoint + 1;\r\n\t\t\tc[ 3 ] = intPoint > points.length - 3 ? intPoint : intPoint + 2;\r\n\r\n\t\t\tpa = points[ c[ 0 ] ];\r\n\t\t\tpb = points[ c[ 1 ] ];\r\n\t\t\tpc = points[ c[ 2 ] ];\r\n\t\t\tpd = points[ c[ 3 ] ];\r\n\r\n\t\t\tw2 = weight * weight;\r\n\t\t\tw3 = weight * w2;\r\n\r\n\t\t\tv3[ 0 ] = interpolate( pa[ 0 ], pb[ 0 ], pc[ 0 ], pd[ 0 ], weight, w2, w3 );\r\n\t\t\tv3[ 1 ] = interpolate( pa[ 1 ], pb[ 1 ], pc[ 1 ], pd[ 1 ], weight, w2, w3 );\r\n\t\t\tv3[ 2 ] = interpolate( pa[ 2 ], pb[ 2 ], pc[ 2 ], pd[ 2 ], weight, w2, w3 );\r\n\r\n\t\t\treturn v3;\r\n\r\n\t\t};\r\n\r\n\t\tvar interpolate = function ( p0, p1, p2, p3, t, t2, t3 ) {\r\n\r\n\t\t\tvar v0 = ( p2 - p0 ) * 0.5,\r\n\t\t\t\tv1 = ( p3 - p1 ) * 0.5;\r\n\r\n\t\t\treturn ( 2 * ( p1 - p2 ) + v0 + v1 ) * t3 + ( - 3 * ( p1 - p2 ) - 2 * v0 - v1 ) * t2 + v0 * t + p1;\r\n\r\n\t\t};\r\n\r\n\t\treturn function ( delta ) {\r\n\r\n\t\t\tif ( this.isPlaying === false ) return;\r\n\r\n\t\t\tthis.currentTime += delta * this.timeScale;\r\n\r\n\t\t\tif ( this.weight === 0 )\r\n\t\t\t\treturn;\r\n\r\n\t\t\t//\r\n\r\n\t\t\tvar duration = this.data.length;\r\n\r\n\t\t\tif ( this.currentTime > duration || this.currentTime < 0 ) {\r\n\r\n\t\t\t\tif ( this.loop ) {\r\n\r\n\t\t\t\t\tthis.currentTime %= duration;\r\n\r\n\t\t\t\t\tif ( this.currentTime < 0 )\r\n\t\t\t\t\t\tthis.currentTime += duration;\r\n\r\n\t\t\t\t\tthis.reset();\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tthis.stop();\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfor ( var h = 0, hl = this.hierarchy.length; h < hl; h ++ ) {\r\n\r\n\t\t\t\tvar object = this.hierarchy[ h ];\r\n\t\t\t\tvar animationCache = object.animationCache.animations[ this.data.name ];\r\n\t\t\t\tvar blending = object.animationCache.blending;\r\n\r\n\t\t\t\t// loop through pos/rot/scl\r\n\r\n\t\t\t\tfor ( var t = 0; t < 3; t ++ ) {\r\n\r\n\t\t\t\t\t// get keys\r\n\r\n\t\t\t\t\tvar type    = this.keyTypes[ t ];\r\n\t\t\t\t\tvar prevKey = animationCache.prevKey[ type ];\r\n\t\t\t\t\tvar nextKey = animationCache.nextKey[ type ];\r\n\r\n\t\t\t\t\tif ( ( this.timeScale > 0 && nextKey.time <= this.currentTime ) ||\r\n\t\t\t\t\t\t( this.timeScale < 0 && prevKey.time >= this.currentTime ) ) {\r\n\r\n\t\t\t\t\t\tprevKey = this.data.hierarchy[ h ].keys[ 0 ];\r\n\t\t\t\t\t\tnextKey = this.getNextKeyWith( type, h, 1 );\r\n\r\n\t\t\t\t\t\twhile ( nextKey.time < this.currentTime && nextKey.index > prevKey.index ) {\r\n\r\n\t\t\t\t\t\t\tprevKey = nextKey;\r\n\t\t\t\t\t\t\tnextKey = this.getNextKeyWith( type, h, nextKey.index + 1 );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tanimationCache.prevKey[ type ] = prevKey;\r\n\t\t\t\t\t\tanimationCache.nextKey[ type ] = nextKey;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tvar scale = ( this.currentTime - prevKey.time ) / ( nextKey.time - prevKey.time );\r\n\r\n\t\t\t\t\tvar prevXYZ = prevKey[ type ];\r\n\t\t\t\t\tvar nextXYZ = nextKey[ type ];\r\n\r\n\t\t\t\t\tif ( scale < 0 ) scale = 0;\r\n\t\t\t\t\tif ( scale > 1 ) scale = 1;\r\n\r\n\t\t\t\t\t// interpolate\r\n\r\n\t\t\t\t\tif ( type === \"pos\" ) {\r\n\r\n\t\t\t\t\t\tif ( this.interpolationType === THREE.AnimationHandler.LINEAR ) {\r\n\r\n\t\t\t\t\t\t\tnewVector.x = prevXYZ[ 0 ] + ( nextXYZ[ 0 ] - prevXYZ[ 0 ] ) * scale;\r\n\t\t\t\t\t\t\tnewVector.y = prevXYZ[ 1 ] + ( nextXYZ[ 1 ] - prevXYZ[ 1 ] ) * scale;\r\n\t\t\t\t\t\t\tnewVector.z = prevXYZ[ 2 ] + ( nextXYZ[ 2 ] - prevXYZ[ 2 ] ) * scale;\r\n\r\n\t\t\t\t\t\t\t// blend\r\n\t\t\t\t\t\t\tvar proportionalWeight = this.weight / ( this.weight + blending.positionWeight );\r\n\t\t\t\t\t\t\tobject.position.lerp( newVector, proportionalWeight );\r\n\t\t\t\t\t\t\tblending.positionWeight += this.weight;\r\n\r\n\t\t\t\t\t\t} else if ( this.interpolationType === THREE.AnimationHandler.CATMULLROM ||\r\n\t\t\t\t\t\t\t\t\tthis.interpolationType === THREE.AnimationHandler.CATMULLROM_FORWARD ) {\r\n\r\n\t\t\t\t\t\t\tpoints[ 0 ] = this.getPrevKeyWith( \"pos\", h, prevKey.index - 1 )[ \"pos\" ];\r\n\t\t\t\t\t\t\tpoints[ 1 ] = prevXYZ;\r\n\t\t\t\t\t\t\tpoints[ 2 ] = nextXYZ;\r\n\t\t\t\t\t\t\tpoints[ 3 ] = this.getNextKeyWith( \"pos\", h, nextKey.index + 1 )[ \"pos\" ];\r\n\r\n\t\t\t\t\t\t\tscale = scale * 0.33 + 0.33;\r\n\r\n\t\t\t\t\t\t\tvar currentPoint = interpolateCatmullRom( points, scale );\r\n\t\t\t\t\t\t\tvar proportionalWeight = this.weight / ( this.weight + blending.positionWeight );\r\n\t\t\t\t\t\t\tblending.positionWeight += this.weight;\r\n\r\n\t\t\t\t\t\t\t// blend\r\n\r\n\t\t\t\t\t\t\tvar vector = object.position;\r\n\r\n\t\t\t\t\t\t\tvector.x = vector.x + ( currentPoint[ 0 ] - vector.x ) * proportionalWeight;\r\n\t\t\t\t\t\t\tvector.y = vector.y + ( currentPoint[ 1 ] - vector.y ) * proportionalWeight;\r\n\t\t\t\t\t\t\tvector.z = vector.z + ( currentPoint[ 2 ] - vector.z ) * proportionalWeight;\r\n\r\n\t\t\t\t\t\t\tif ( this.interpolationType === THREE.AnimationHandler.CATMULLROM_FORWARD ) {\r\n\r\n\t\t\t\t\t\t\t\tvar forwardPoint = interpolateCatmullRom( points, scale * 1.01 );\r\n\r\n\t\t\t\t\t\t\t\ttarget.set( forwardPoint[ 0 ], forwardPoint[ 1 ], forwardPoint[ 2 ] );\r\n\t\t\t\t\t\t\t\ttarget.sub( vector );\r\n\t\t\t\t\t\t\t\ttarget.y = 0;\r\n\t\t\t\t\t\t\t\ttarget.normalize();\r\n\r\n\t\t\t\t\t\t\t\tvar angle = Math.atan2( target.x, target.z );\r\n\t\t\t\t\t\t\t\tobject.rotation.set( 0, angle, 0 );\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} else if ( type === \"rot\" ) {\r\n\r\n\t\t\t\t\t\tTHREE.Quaternion.slerp( prevXYZ, nextXYZ, newQuat, scale );\r\n\r\n\t\t\t\t\t\t// Avoid paying the cost of an additional slerp if we don't have to\r\n\t\t\t\t\t\tif ( blending.quaternionWeight === 0 ) {\r\n\r\n\t\t\t\t\t\t\tobject.quaternion.copy( newQuat );\r\n\t\t\t\t\t\t\tblending.quaternionWeight = this.weight;\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\tvar proportionalWeight = this.weight / ( this.weight + blending.quaternionWeight );\r\n\t\t\t\t\t\t\tTHREE.Quaternion.slerp( object.quaternion, newQuat, object.quaternion, proportionalWeight );\r\n\t\t\t\t\t\t\tblending.quaternionWeight += this.weight;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} else if ( type === \"scl\" ) {\r\n\r\n\t\t\t\t\t\tnewVector.x = prevXYZ[ 0 ] + ( nextXYZ[ 0 ] - prevXYZ[ 0 ] ) * scale;\r\n\t\t\t\t\t\tnewVector.y = prevXYZ[ 1 ] + ( nextXYZ[ 1 ] - prevXYZ[ 1 ] ) * scale;\r\n\t\t\t\t\t\tnewVector.z = prevXYZ[ 2 ] + ( nextXYZ[ 2 ] - prevXYZ[ 2 ] ) * scale;\r\n\r\n\t\t\t\t\t\tvar proportionalWeight = this.weight / ( this.weight + blending.scaleWeight );\r\n\t\t\t\t\t\tobject.scale.lerp( newVector, proportionalWeight );\r\n\t\t\t\t\t\tblending.scaleWeight += this.weight;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn true;\r\n\r\n\t\t};\r\n\r\n\t} )(),\r\n\r\n\tgetNextKeyWith: function ( type, h, key ) {\r\n\r\n\t\tvar keys = this.data.hierarchy[ h ].keys;\r\n\r\n\t\tif ( this.interpolationType === THREE.AnimationHandler.CATMULLROM ||\r\n\t\t\t this.interpolationType === THREE.AnimationHandler.CATMULLROM_FORWARD ) {\r\n\r\n\t\t\tkey = key < keys.length - 1 ? key : keys.length - 1;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tkey = key % keys.length;\r\n\r\n\t\t}\r\n\r\n\t\tfor ( ; key < keys.length; key ++ ) {\r\n\r\n\t\t\tif ( keys[ key ][ type ] !== undefined ) {\r\n\r\n\t\t\t\treturn keys[ key ];\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn this.data.hierarchy[ h ].keys[ 0 ];\r\n\r\n\t},\r\n\r\n\tgetPrevKeyWith: function ( type, h, key ) {\r\n\r\n\t\tvar keys = this.data.hierarchy[ h ].keys;\r\n\r\n\t\tif ( this.interpolationType === THREE.AnimationHandler.CATMULLROM ||\r\n\t\t\tthis.interpolationType === THREE.AnimationHandler.CATMULLROM_FORWARD ) {\r\n\r\n\t\t\tkey = key > 0 ? key : 0;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tkey = key >= 0 ? key : key + keys.length;\r\n\r\n\t\t}\r\n\r\n\r\n\t\tfor ( ; key >= 0; key -- ) {\r\n\r\n\t\t\tif ( keys[ key ][ type ] !== undefined ) {\r\n\r\n\t\t\t\treturn keys[ key ];\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn this.data.hierarchy[ h ].keys[ keys.length - 1 ];\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/extras/animation/KeyFrameAnimation.js\r\n\r\n/**\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author khang duong\r\n * @author erik kitson\r\n */\r\n\r\nTHREE.KeyFrameAnimation = function ( data ) {\r\n\r\n\tthis.root = data.node;\r\n\tthis.data = THREE.AnimationHandler.init( data );\r\n\tthis.hierarchy = THREE.AnimationHandler.parse( this.root );\r\n\tthis.currentTime = 0;\r\n\tthis.timeScale = 0.001;\r\n\tthis.isPlaying = false;\r\n\tthis.isPaused = true;\r\n\tthis.loop = true;\r\n\r\n\t// initialize to first keyframes\r\n\r\n\tfor ( var h = 0, hl = this.hierarchy.length; h < hl; h ++ ) {\r\n\r\n\t\tvar keys = this.data.hierarchy[ h ].keys,\r\n\t\t\tsids = this.data.hierarchy[ h ].sids,\r\n\t\t\tobj = this.hierarchy[ h ];\r\n\r\n\t\tif ( keys.length && sids ) {\r\n\r\n\t\t\tfor ( var s = 0; s < sids.length; s ++ ) {\r\n\r\n\t\t\t\tvar sid = sids[ s ],\r\n\t\t\t\t\tnext = this.getNextKeyWith( sid, h, 0 );\r\n\r\n\t\t\t\tif ( next ) {\r\n\r\n\t\t\t\t\tnext.apply( sid );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tobj.matrixAutoUpdate = false;\r\n\t\t\tthis.data.hierarchy[ h ].node.updateMatrix();\r\n\t\t\tobj.matrixWorldNeedsUpdate = true;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.KeyFrameAnimation.prototype = {\r\n\r\n\tconstructor: THREE.KeyFrameAnimation,\r\n\r\n\tplay: function ( startTime ) {\r\n\r\n\t\tthis.currentTime = startTime !== undefined ? startTime : 0;\r\n\r\n\t\tif ( this.isPlaying === false ) {\r\n\r\n\t\t\tthis.isPlaying = true;\r\n\r\n\t\t\t// reset key cache\r\n\r\n\t\t\tvar h, hl = this.hierarchy.length,\r\n\t\t\t\tobject,\r\n\t\t\t\tnode;\r\n\r\n\t\t\tfor ( h = 0; h < hl; h ++ ) {\r\n\r\n\t\t\t\tobject = this.hierarchy[ h ];\r\n\t\t\t\tnode = this.data.hierarchy[ h ];\r\n\r\n\t\t\t\tif ( node.animationCache === undefined ) {\r\n\r\n\t\t\t\t\tnode.animationCache = {};\r\n\t\t\t\t\tnode.animationCache.prevKey = null;\r\n\t\t\t\t\tnode.animationCache.nextKey = null;\r\n\t\t\t\t\tnode.animationCache.originalMatrix = object.matrix;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar keys = this.data.hierarchy[ h ].keys;\r\n\r\n\t\t\t\tif ( keys.length ) {\r\n\r\n\t\t\t\t\tnode.animationCache.prevKey = keys[ 0 ];\r\n\t\t\t\t\tnode.animationCache.nextKey = keys[ 1 ];\r\n\r\n\t\t\t\t\tthis.startTime = Math.min( keys[ 0 ].time, this.startTime );\r\n\t\t\t\t\tthis.endTime = Math.max( keys[ keys.length - 1 ].time, this.endTime );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.update( 0 );\r\n\r\n\t\t}\r\n\r\n\t\tthis.isPaused = false;\r\n\r\n\t\tTHREE.AnimationHandler.play( this );\r\n\r\n\t},\r\n\r\n\tstop: function () {\r\n\r\n\t\tthis.isPlaying = false;\r\n\t\tthis.isPaused  = false;\r\n\r\n\t\tTHREE.AnimationHandler.stop( this );\r\n\r\n\t\t// reset JIT matrix and remove cache\r\n\r\n\t\tfor ( var h = 0; h < this.data.hierarchy.length; h ++ ) {\r\n\r\n\t\t\tvar obj = this.hierarchy[ h ];\r\n\t\t\tvar node = this.data.hierarchy[ h ];\r\n\r\n\t\t\tif ( node.animationCache !== undefined ) {\r\n\r\n\t\t\t\tvar original = node.animationCache.originalMatrix;\r\n\r\n\t\t\t\toriginal.copy( obj.matrix );\r\n\t\t\t\tobj.matrix = original;\r\n\r\n\t\t\t\tdelete node.animationCache;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tupdate: function ( delta ) {\r\n\r\n\t\tif ( this.isPlaying === false ) return;\r\n\r\n\t\tthis.currentTime += delta * this.timeScale;\r\n\r\n\t\t//\r\n\r\n\t\tvar duration = this.data.length;\r\n\r\n\t\tif ( this.loop === true && this.currentTime > duration ) {\r\n\r\n\t\t\tthis.currentTime %= duration;\r\n\r\n\t\t}\r\n\r\n\t\tthis.currentTime = Math.min( this.currentTime, duration );\r\n\r\n\t\tfor ( var h = 0, hl = this.hierarchy.length; h < hl; h ++ ) {\r\n\r\n\t\t\tvar object = this.hierarchy[ h ];\r\n\t\t\tvar node = this.data.hierarchy[ h ];\r\n\r\n\t\t\tvar keys = node.keys,\r\n\t\t\t\tanimationCache = node.animationCache;\r\n\r\n\r\n\t\t\tif ( keys.length ) {\r\n\r\n\t\t\t\tvar prevKey = animationCache.prevKey;\r\n\t\t\t\tvar nextKey = animationCache.nextKey;\r\n\r\n\t\t\t\tif ( nextKey.time <= this.currentTime ) {\r\n\r\n\t\t\t\t\twhile ( nextKey.time < this.currentTime && nextKey.index > prevKey.index ) {\r\n\r\n\t\t\t\t\t\tprevKey = nextKey;\r\n\t\t\t\t\t\tnextKey = keys[ prevKey.index + 1 ];\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tanimationCache.prevKey = prevKey;\r\n\t\t\t\t\tanimationCache.nextKey = nextKey;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( nextKey.time >= this.currentTime ) {\r\n\r\n\t\t\t\t\tprevKey.interpolate( nextKey, this.currentTime );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tprevKey.interpolate( nextKey, nextKey.time );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.data.hierarchy[ h ].node.updateMatrix();\r\n\t\t\t\tobject.matrixWorldNeedsUpdate = true;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tgetNextKeyWith: function ( sid, h, key ) {\r\n\r\n\t\tvar keys = this.data.hierarchy[ h ].keys;\r\n\t\tkey = key % keys.length;\r\n\r\n\t\tfor ( ; key < keys.length; key ++ ) {\r\n\r\n\t\t\tif ( keys[ key ].hasTarget( sid ) ) {\r\n\r\n\t\t\t\treturn keys[ key ];\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn keys[ 0 ];\r\n\r\n\t},\r\n\r\n\tgetPrevKeyWith: function ( sid, h, key ) {\r\n\r\n\t\tvar keys = this.data.hierarchy[ h ].keys;\r\n\t\tkey = key >= 0 ? key : key + keys.length;\r\n\r\n\t\tfor ( ; key >= 0; key -- ) {\r\n\r\n\t\t\tif ( keys[ key ].hasTarget( sid ) ) {\r\n\r\n\t\t\t\treturn keys[ key ];\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn keys[ keys.length - 1 ];\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/extras/animation/MorphAnimation.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com\r\n * @author willy-vvu / http://willy-vvu.github.io\r\n */\r\n\r\nTHREE.MorphAnimation = function ( mesh ) {\r\n\r\n\tthis.mesh = mesh;\r\n\tthis.frames = mesh.morphTargetInfluences.length;\r\n\tthis.currentTime = 0;\r\n\tthis.duration = 1000;\r\n\tthis.loop = true;\r\n\tthis.lastFrame = 0;\r\n\tthis.currentFrame = 0;\r\n\r\n\tthis.isPlaying = false;\r\n\r\n};\r\n\r\nTHREE.MorphAnimation.prototype = {\r\n\r\n\tconstructor: THREE.MorphAnimation,\r\n\r\n\tplay: function () {\r\n\r\n\t\tthis.isPlaying = true;\r\n\r\n\t},\r\n\r\n\tpause: function () {\r\n\r\n\t\tthis.isPlaying = false;\r\n\r\n\t},\r\n\r\n\tupdate: function ( delta ) {\r\n\r\n\t\tif ( this.isPlaying === false ) return;\r\n\r\n\t\tthis.currentTime += delta;\r\n\r\n\t\tif ( this.loop === true && this.currentTime > this.duration ) {\r\n\r\n\t\t\tthis.currentTime %= this.duration;\r\n\r\n\t\t}\r\n\r\n\t\tthis.currentTime = Math.min( this.currentTime, this.duration );\r\n\r\n\t\tvar frameTime = this.duration / this.frames;\r\n\t\tvar frame = Math.floor( this.currentTime / frameTime );\r\n\r\n\t\tvar influences = this.mesh.morphTargetInfluences;\r\n\r\n\t\tif ( frame !== this.currentFrame ) {\r\n\r\n\t\t\tinfluences[ this.lastFrame ] = 0;\r\n\t\t\tinfluences[ this.currentFrame ] = 1;\r\n\t\t\tinfluences[ frame ] = 0;\r\n\r\n\t\t\tthis.lastFrame = this.currentFrame;\r\n\t\t\tthis.currentFrame = frame;\r\n\r\n\t\t}\r\n\r\n\t\tvar mix = ( this.currentTime % frameTime ) / frameTime;\r\n\r\n\t\tinfluences[ frame ] = mix;\r\n\t\tinfluences[ this.lastFrame ] = 1 - mix;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/extras/geometries/BoxGeometry.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * based on http://papervision3d.googlecode.com/svn/trunk/as3/trunk/src/org/papervision3d/objects/primitives/Cube.as\r\n */\r\n\r\nTHREE.BoxGeometry = function ( width, height, depth, widthSegments, heightSegments, depthSegments ) {\r\n\r\n\tTHREE.Geometry.call( this );\r\n\r\n\tthis.type = 'BoxGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\twidth: width,\r\n\t\theight: height,\r\n\t\tdepth: depth,\r\n\t\twidthSegments: widthSegments,\r\n\t\theightSegments: heightSegments,\r\n\t\tdepthSegments: depthSegments\r\n\t};\r\n\r\n\tthis.widthSegments = widthSegments || 1;\r\n\tthis.heightSegments = heightSegments || 1;\r\n\tthis.depthSegments = depthSegments || 1;\r\n\r\n\tvar scope = this;\r\n\r\n\tvar width_half = width / 2;\r\n\tvar height_half = height / 2;\r\n\tvar depth_half = depth / 2;\r\n\r\n\tbuildPlane( 'z', 'y', - 1, - 1, depth, height, width_half, 0 ); // px\r\n\tbuildPlane( 'z', 'y',   1, - 1, depth, height, - width_half, 1 ); // nx\r\n\tbuildPlane( 'x', 'z',   1,   1, width, depth, height_half, 2 ); // py\r\n\tbuildPlane( 'x', 'z',   1, - 1, width, depth, - height_half, 3 ); // ny\r\n\tbuildPlane( 'x', 'y',   1, - 1, width, height, depth_half, 4 ); // pz\r\n\tbuildPlane( 'x', 'y', - 1, - 1, width, height, - depth_half, 5 ); // nz\r\n\r\n\tfunction buildPlane( u, v, udir, vdir, width, height, depth, materialIndex ) {\r\n\r\n\t\tvar w, ix, iy,\r\n\t\tgridX = scope.widthSegments,\r\n\t\tgridY = scope.heightSegments,\r\n\t\twidth_half = width / 2,\r\n\t\theight_half = height / 2,\r\n\t\toffset = scope.vertices.length;\r\n\r\n\t\tif ( ( u === 'x' && v === 'y' ) || ( u === 'y' && v === 'x' ) ) {\r\n\r\n\t\t\tw = 'z';\r\n\r\n\t\t} else if ( ( u === 'x' && v === 'z' ) || ( u === 'z' && v === 'x' ) ) {\r\n\r\n\t\t\tw = 'y';\r\n\t\t\tgridY = scope.depthSegments;\r\n\r\n\t\t} else if ( ( u === 'z' && v === 'y' ) || ( u === 'y' && v === 'z' ) ) {\r\n\r\n\t\t\tw = 'x';\r\n\t\t\tgridX = scope.depthSegments;\r\n\r\n\t\t}\r\n\r\n\t\tvar gridX1 = gridX + 1,\r\n\t\tgridY1 = gridY + 1,\r\n\t\tsegment_width = width / gridX,\r\n\t\tsegment_height = height / gridY,\r\n\t\tnormal = new THREE.Vector3();\r\n\r\n\t\tnormal[ w ] = depth > 0 ? 1 : - 1;\r\n\r\n\t\tfor ( iy = 0; iy < gridY1; iy ++ ) {\r\n\r\n\t\t\tfor ( ix = 0; ix < gridX1; ix ++ ) {\r\n\r\n\t\t\t\tvar vector = new THREE.Vector3();\r\n\t\t\t\tvector[ u ] = ( ix * segment_width - width_half ) * udir;\r\n\t\t\t\tvector[ v ] = ( iy * segment_height - height_half ) * vdir;\r\n\t\t\t\tvector[ w ] = depth;\r\n\r\n\t\t\t\tscope.vertices.push( vector );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfor ( iy = 0; iy < gridY; iy ++ ) {\r\n\r\n\t\t\tfor ( ix = 0; ix < gridX; ix ++ ) {\r\n\r\n\t\t\t\tvar a = ix + gridX1 * iy;\r\n\t\t\t\tvar b = ix + gridX1 * ( iy + 1 );\r\n\t\t\t\tvar c = ( ix + 1 ) + gridX1 * ( iy + 1 );\r\n\t\t\t\tvar d = ( ix + 1 ) + gridX1 * iy;\r\n\r\n\t\t\t\tvar uva = new THREE.Vector2( ix / gridX, 1 - iy / gridY );\r\n\t\t\t\tvar uvb = new THREE.Vector2( ix / gridX, 1 - ( iy + 1 ) / gridY );\r\n\t\t\t\tvar uvc = new THREE.Vector2( ( ix + 1 ) / gridX, 1 - ( iy + 1 ) / gridY );\r\n\t\t\t\tvar uvd = new THREE.Vector2( ( ix + 1 ) / gridX, 1 - iy / gridY );\r\n\r\n\t\t\t\tvar face = new THREE.Face3( a + offset, b + offset, d + offset );\r\n\t\t\t\tface.normal.copy( normal );\r\n\t\t\t\tface.vertexNormals.push( normal.clone(), normal.clone(), normal.clone() );\r\n\t\t\t\tface.materialIndex = materialIndex;\r\n\r\n\t\t\t\tscope.faces.push( face );\r\n\t\t\t\tscope.faceVertexUvs[ 0 ].push( [ uva, uvb, uvd ] );\r\n\r\n\t\t\t\tface = new THREE.Face3( b + offset, c + offset, d + offset );\r\n\t\t\t\tface.normal.copy( normal );\r\n\t\t\t\tface.vertexNormals.push( normal.clone(), normal.clone(), normal.clone() );\r\n\t\t\t\tface.materialIndex = materialIndex;\r\n\r\n\t\t\t\tscope.faces.push( face );\r\n\t\t\t\tscope.faceVertexUvs[ 0 ].push( [ uvb.clone(), uvc, uvd.clone() ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tthis.mergeVertices();\r\n\r\n};\r\n\r\nTHREE.BoxGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\nTHREE.BoxGeometry.prototype.constructor = THREE.BoxGeometry;\r\n\r\nTHREE.BoxGeometry.prototype.clone = function () {\r\n\r\n\tvar geometry = new THREE.BoxGeometry(\r\n\t\tthis.parameters.width,\r\n\t\tthis.parameters.height,\r\n\t\tthis.parameters.depth,\r\n\t\tthis.parameters.widthSegments,\r\n\t\tthis.parameters.heightSegments,\r\n\t\tthis.parameters.depthSegments\r\n\t);\r\n\r\n\treturn geometry;\r\n\r\n};\r\n\r\nTHREE.CubeGeometry = THREE.BoxGeometry; // backwards compatibility\r\n\r\n// File:src/extras/geometries/CircleGeometry.js\r\n\r\n/**\r\n * @author hughes\r\n */\r\n\r\nTHREE.CircleGeometry = function ( radius, segments, thetaStart, thetaLength ) {\r\n\r\n\tTHREE.Geometry.call( this );\r\n\r\n\tthis.type = 'CircleGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\tradius: radius,\r\n\t\tsegments: segments,\r\n\t\tthetaStart: thetaStart,\r\n\t\tthetaLength: thetaLength\r\n\t};\r\n\r\n\tradius = radius || 50;\r\n\tsegments = segments !== undefined ? Math.max( 3, segments ) : 8;\r\n\r\n\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\r\n\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2;\r\n\r\n\tvar i, uvs = [],\r\n\tcenter = new THREE.Vector3(), centerUV = new THREE.Vector2( 0.5, 0.5 );\r\n\r\n\tthis.vertices.push( center );\r\n\tuvs.push( centerUV );\r\n\r\n\tfor ( i = 0; i <= segments; i ++ ) {\r\n\r\n\t\tvar vertex = new THREE.Vector3();\r\n\t\tvar segment = thetaStart + i / segments * thetaLength;\r\n\r\n\t\tvertex.x = radius * Math.cos( segment );\r\n\t\tvertex.y = radius * Math.sin( segment );\r\n\r\n\t\tthis.vertices.push( vertex );\r\n\t\tuvs.push( new THREE.Vector2( ( vertex.x / radius + 1 ) / 2, ( vertex.y / radius + 1 ) / 2 ) );\r\n\r\n\t}\r\n\r\n\tvar n = new THREE.Vector3( 0, 0, 1 );\r\n\r\n\tfor ( i = 1; i <= segments; i ++ ) {\r\n\r\n\t\tthis.faces.push( new THREE.Face3( i, i + 1, 0, [ n.clone(), n.clone(), n.clone() ] ) );\r\n\t\tthis.faceVertexUvs[ 0 ].push( [ uvs[ i ].clone(), uvs[ i + 1 ].clone(), centerUV.clone() ] );\r\n\r\n\t}\r\n\r\n\tthis.computeFaceNormals();\r\n\r\n\tthis.boundingSphere = new THREE.Sphere( new THREE.Vector3(), radius );\r\n\r\n};\r\n\r\nTHREE.CircleGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\nTHREE.CircleGeometry.prototype.constructor = THREE.CircleGeometry;\r\n\r\nTHREE.CircleGeometry.prototype.clone = function () {\r\n\r\n\tvar geometry = new THREE.CircleGeometry(\r\n\t\tthis.parameters.radius,\r\n\t\tthis.parameters.segments,\r\n\t\tthis.parameters.thetaStart,\r\n\t\tthis.parameters.thetaLength\r\n\t);\r\n\r\n\treturn geometry;\r\n\r\n};\r\n\r\n// File:src/extras/geometries/CircleBufferGeometry.js\r\n\r\n/**\r\n * @author benaadams / https://twitter.com/ben_a_adams\r\n */\r\n\r\nTHREE.CircleBufferGeometry = function ( radius, segments, thetaStart, thetaLength ) {\r\n\r\n\tTHREE.BufferGeometry.call( this );\r\n\r\n\tthis.type = 'CircleBufferGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\tradius: radius,\r\n\t\tsegments: segments,\r\n\t\tthetaStart: thetaStart,\r\n\t\tthetaLength: thetaLength\r\n\t};\r\n\r\n\tradius = radius || 50;\r\n\tsegments = segments !== undefined ? Math.max( 3, segments ) : 8;\r\n\r\n\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\r\n\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2;\r\n\r\n\tvar vertices = segments + 2;\r\n\r\n\tvar positions = new Float32Array( vertices * 3 );\r\n\tvar normals = new Float32Array( vertices * 3 );\r\n\tvar uvs = new Float32Array( vertices * 2 );\r\n\r\n\t// center data is already zero, but need to set a few extras\r\n\tnormals[ 3 ] = 1.0;\r\n\tuvs[ 0 ] = 0.5;\r\n\tuvs[ 1 ] = 0.5;\r\n\r\n\tfor ( var s = 0, i = 3, ii = 2 ; s <= segments; s ++, i += 3, ii += 2 ) {\r\n\r\n\t\tvar segment = thetaStart + s / segments * thetaLength;\r\n\r\n\t\tpositions[ i ] = radius * Math.cos( segment );\r\n\t\tpositions[ i + 1 ] = radius * Math.sin( segment );\r\n\r\n\t\tnormals[ i + 2 ] = 1; // normal z\r\n\r\n\t\tuvs[ ii ] = ( positions[ i ] / radius + 1 ) / 2;\r\n\t\tuvs[ ii + 1 ] = ( positions[ i + 1 ] / radius + 1 ) / 2;\r\n\r\n\t}\r\n\r\n\tvar indices = [];\r\n\r\n\tfor ( var i = 1; i <= segments; i ++ ) {\r\n\r\n\t\tindices.push( i );\r\n\t\tindices.push( i + 1 );\r\n\t\tindices.push( 0 );\r\n\r\n\t}\r\n\r\n\tthis.setIndex( new THREE.BufferAttribute( new Uint16Array( indices ), 1 ) );\r\n\tthis.addAttribute( 'position', new THREE.BufferAttribute( positions, 3 ) );\r\n\tthis.addAttribute( 'normal', new THREE.BufferAttribute( normals, 3 ) );\r\n\tthis.addAttribute( 'uv', new THREE.BufferAttribute( uvs, 2 ) );\r\n\r\n\tthis.boundingSphere = new THREE.Sphere( new THREE.Vector3(), radius );\r\n\r\n};\r\n\r\nTHREE.CircleBufferGeometry.prototype = Object.create( THREE.BufferGeometry.prototype );\r\nTHREE.CircleBufferGeometry.prototype.constructor = THREE.CircleBufferGeometry;\r\n\r\nTHREE.CircleBufferGeometry.prototype.clone = function () {\r\n\r\n\tvar geometry = new THREE.CircleBufferGeometry(\r\n\t\tthis.parameters.radius,\r\n\t\tthis.parameters.segments,\r\n\t\tthis.parameters.thetaStart,\r\n\t\tthis.parameters.thetaLength\r\n\t);\r\n\r\n\tgeometry.copy( this );\r\n\r\n\treturn geometry;\r\n\r\n};\r\n\r\n// File:src/extras/geometries/CylinderGeometry.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.CylinderGeometry = function ( radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) {\r\n\r\n\tTHREE.Geometry.call( this );\r\n\r\n\tthis.type = 'CylinderGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\tradiusTop: radiusTop,\r\n\t\tradiusBottom: radiusBottom,\r\n\t\theight: height,\r\n\t\tradialSegments: radialSegments,\r\n\t\theightSegments: heightSegments,\r\n\t\topenEnded: openEnded,\r\n\t\tthetaStart: thetaStart,\r\n\t\tthetaLength: thetaLength\r\n\t};\r\n\r\n\tradiusTop = radiusTop !== undefined ? radiusTop : 20;\r\n\tradiusBottom = radiusBottom !== undefined ? radiusBottom : 20;\r\n\theight = height !== undefined ? height : 100;\r\n\r\n\tradialSegments = radialSegments || 8;\r\n\theightSegments = heightSegments || 1;\r\n\r\n\topenEnded = openEnded !== undefined ? openEnded : false;\r\n\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\r\n\tthetaLength = thetaLength !== undefined ? thetaLength : 2 * Math.PI;\r\n\r\n\tvar heightHalf = height / 2;\r\n\r\n\tvar x, y, vertices = [], uvs = [];\r\n\r\n\tfor ( y = 0; y <= heightSegments; y ++ ) {\r\n\r\n\t\tvar verticesRow = [];\r\n\t\tvar uvsRow = [];\r\n\r\n\t\tvar v = y / heightSegments;\r\n\t\tvar radius = v * ( radiusBottom - radiusTop ) + radiusTop;\r\n\r\n\t\tfor ( x = 0; x <= radialSegments; x ++ ) {\r\n\r\n\t\t\tvar u = x / radialSegments;\r\n\r\n\t\t\tvar vertex = new THREE.Vector3();\r\n\t\t\tvertex.x = radius * Math.sin( u * thetaLength + thetaStart );\r\n\t\t\tvertex.y = - v * height + heightHalf;\r\n\t\t\tvertex.z = radius * Math.cos( u * thetaLength + thetaStart );\r\n\r\n\t\t\tthis.vertices.push( vertex );\r\n\r\n\t\t\tverticesRow.push( this.vertices.length - 1 );\r\n\t\t\tuvsRow.push( new THREE.Vector2( u, 1 - v ) );\r\n\r\n\t\t}\r\n\r\n\t\tvertices.push( verticesRow );\r\n\t\tuvs.push( uvsRow );\r\n\r\n\t}\r\n\r\n\tvar tanTheta = ( radiusBottom - radiusTop ) / height;\r\n\tvar na, nb;\r\n\r\n\tfor ( x = 0; x < radialSegments; x ++ ) {\r\n\r\n\t\tif ( radiusTop !== 0 ) {\r\n\r\n\t\t\tna = this.vertices[ vertices[ 0 ][ x ] ].clone();\r\n\t\t\tnb = this.vertices[ vertices[ 0 ][ x + 1 ] ].clone();\r\n\r\n\t\t} else {\r\n\r\n\t\t\tna = this.vertices[ vertices[ 1 ][ x ] ].clone();\r\n\t\t\tnb = this.vertices[ vertices[ 1 ][ x + 1 ] ].clone();\r\n\r\n\t\t}\r\n\r\n\t\tna.setY( Math.sqrt( na.x * na.x + na.z * na.z ) * tanTheta ).normalize();\r\n\t\tnb.setY( Math.sqrt( nb.x * nb.x + nb.z * nb.z ) * tanTheta ).normalize();\r\n\r\n\t\tfor ( y = 0; y < heightSegments; y ++ ) {\r\n\r\n\t\t\tvar v1 = vertices[ y ][ x ];\r\n\t\t\tvar v2 = vertices[ y + 1 ][ x ];\r\n\t\t\tvar v3 = vertices[ y + 1 ][ x + 1 ];\r\n\t\t\tvar v4 = vertices[ y ][ x + 1 ];\r\n\r\n\t\t\tvar n1 = na.clone();\r\n\t\t\tvar n2 = na.clone();\r\n\t\t\tvar n3 = nb.clone();\r\n\t\t\tvar n4 = nb.clone();\r\n\r\n\t\t\tvar uv1 = uvs[ y ][ x ].clone();\r\n\t\t\tvar uv2 = uvs[ y + 1 ][ x ].clone();\r\n\t\t\tvar uv3 = uvs[ y + 1 ][ x + 1 ].clone();\r\n\t\t\tvar uv4 = uvs[ y ][ x + 1 ].clone();\r\n\r\n\t\t\tthis.faces.push( new THREE.Face3( v1, v2, v4, [ n1, n2, n4 ] ) );\r\n\t\t\tthis.faceVertexUvs[ 0 ].push( [ uv1, uv2, uv4 ] );\r\n\r\n\t\t\tthis.faces.push( new THREE.Face3( v2, v3, v4, [ n2.clone(), n3, n4.clone() ] ) );\r\n\t\t\tthis.faceVertexUvs[ 0 ].push( [ uv2.clone(), uv3, uv4.clone() ] );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// top cap\r\n\r\n\tif ( openEnded === false && radiusTop > 0 ) {\r\n\r\n\t\tthis.vertices.push( new THREE.Vector3( 0, heightHalf, 0 ) );\r\n\r\n\t\tfor ( x = 0; x < radialSegments; x ++ ) {\r\n\r\n\t\t\tvar v1 = vertices[ 0 ][ x ];\r\n\t\t\tvar v2 = vertices[ 0 ][ x + 1 ];\r\n\t\t\tvar v3 = this.vertices.length - 1;\r\n\r\n\t\t\tvar n1 = new THREE.Vector3( 0, 1, 0 );\r\n\t\t\tvar n2 = new THREE.Vector3( 0, 1, 0 );\r\n\t\t\tvar n3 = new THREE.Vector3( 0, 1, 0 );\r\n\r\n\t\t\tvar uv1 = uvs[ 0 ][ x ].clone();\r\n\t\t\tvar uv2 = uvs[ 0 ][ x + 1 ].clone();\r\n\t\t\tvar uv3 = new THREE.Vector2( uv2.x, 0 );\r\n\r\n\t\t\tthis.faces.push( new THREE.Face3( v1, v2, v3, [ n1, n2, n3 ], undefined, 1 ) );\r\n\t\t\tthis.faceVertexUvs[ 0 ].push( [ uv1, uv2, uv3 ] );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// bottom cap\r\n\r\n\tif ( openEnded === false && radiusBottom > 0 ) {\r\n\r\n\t\tthis.vertices.push( new THREE.Vector3( 0, - heightHalf, 0 ) );\r\n\r\n\t\tfor ( x = 0; x < radialSegments; x ++ ) {\r\n\r\n\t\t\tvar v1 = vertices[ heightSegments ][ x + 1 ];\r\n\t\t\tvar v2 = vertices[ heightSegments ][ x ];\r\n\t\t\tvar v3 = this.vertices.length - 1;\r\n\r\n\t\t\tvar n1 = new THREE.Vector3( 0, - 1, 0 );\r\n\t\t\tvar n2 = new THREE.Vector3( 0, - 1, 0 );\r\n\t\t\tvar n3 = new THREE.Vector3( 0, - 1, 0 );\r\n\r\n\t\t\tvar uv1 = uvs[ heightSegments ][ x + 1 ].clone();\r\n\t\t\tvar uv2 = uvs[ heightSegments ][ x ].clone();\r\n\t\t\tvar uv3 = new THREE.Vector2( uv2.x, 1 );\r\n\r\n\t\t\tthis.faces.push( new THREE.Face3( v1, v2, v3, [ n1, n2, n3 ], undefined, 2 ) );\r\n\t\t\tthis.faceVertexUvs[ 0 ].push( [ uv1, uv2, uv3 ] );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tthis.computeFaceNormals();\r\n\r\n};\r\n\r\nTHREE.CylinderGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\nTHREE.CylinderGeometry.prototype.constructor = THREE.CylinderGeometry;\r\n\r\nTHREE.CylinderGeometry.prototype.clone = function () {\r\n\r\n\tvar geometry = new THREE.CylinderGeometry(\r\n\t\tthis.parameters.radiusTop,\r\n\t\tthis.parameters.radiusBottom,\r\n\t\tthis.parameters.height,\r\n\t\tthis.parameters.radialSegments,\r\n\t\tthis.parameters.heightSegments,\r\n\t\tthis.parameters.openEnded,\r\n\t\tthis.parameters.thetaStart,\r\n\t\tthis.parameters.thetaLength\r\n\t);\r\n\r\n\treturn geometry;\r\n\r\n};\r\n\r\n// File:src/extras/geometries/EdgesGeometry.js\r\n\r\n/**\r\n * @author WestLangley / http://github.com/WestLangley\r\n */\r\n\r\nTHREE.EdgesGeometry = function ( geometry, thresholdAngle ) {\r\n\r\n\tTHREE.BufferGeometry.call( this );\r\n\r\n\tthresholdAngle = ( thresholdAngle !== undefined ) ? thresholdAngle : 1;\r\n\r\n\tvar thresholdDot = Math.cos( THREE.Math.degToRad( thresholdAngle ) );\r\n\r\n\tvar edge = [ 0, 0 ], hash = {};\r\n\tvar sortFunction = function ( a, b ) {\r\n\r\n\t\treturn a - b;\r\n\r\n\t};\r\n\r\n\tvar keys = [ 'a', 'b', 'c' ];\r\n\r\n\tvar geometry2;\r\n\r\n\tif ( geometry instanceof THREE.BufferGeometry ) {\r\n\r\n\t\tgeometry2 = new THREE.Geometry();\r\n\t\tgeometry2.fromBufferGeometry( geometry );\r\n\r\n\t} else {\r\n\r\n\t\tgeometry2 = geometry.clone();\r\n\r\n\t}\r\n\r\n\tgeometry2.mergeVertices();\r\n\tgeometry2.computeFaceNormals();\r\n\r\n\tvar vertices = geometry2.vertices;\r\n\tvar faces = geometry2.faces;\r\n\r\n\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\r\n\r\n\t\tvar face = faces[ i ];\r\n\r\n\t\tfor ( var j = 0; j < 3; j ++ ) {\r\n\r\n\t\t\tedge[ 0 ] = face[ keys[ j ] ];\r\n\t\t\tedge[ 1 ] = face[ keys[ ( j + 1 ) % 3 ] ];\r\n\t\t\tedge.sort( sortFunction );\r\n\r\n\t\t\tvar key = edge.toString();\r\n\r\n\t\t\tif ( hash[ key ] === undefined ) {\r\n\r\n\t\t\t\thash[ key ] = { vert1: edge[ 0 ], vert2: edge[ 1 ], face1: i, face2: undefined };\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\thash[ key ].face2 = i;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tvar coords = [];\r\n\r\n\tfor ( var key in hash ) {\r\n\r\n\t\tvar h = hash[ key ];\r\n\r\n\t\tif ( h.face2 === undefined || faces[ h.face1 ].normal.dot( faces[ h.face2 ].normal ) <= thresholdDot ) {\r\n\r\n\t\t\tvar vertex = vertices[ h.vert1 ];\r\n\t\t\tcoords.push( vertex.x );\r\n\t\t\tcoords.push( vertex.y );\r\n\t\t\tcoords.push( vertex.z );\r\n\r\n\t\t\tvertex = vertices[ h.vert2 ];\r\n\t\t\tcoords.push( vertex.x );\r\n\t\t\tcoords.push( vertex.y );\r\n\t\t\tcoords.push( vertex.z );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tthis.addAttribute( 'position', new THREE.BufferAttribute( new Float32Array( coords ), 3 ) );\r\n\r\n};\r\n\r\nTHREE.EdgesGeometry.prototype = Object.create( THREE.BufferGeometry.prototype );\r\nTHREE.EdgesGeometry.prototype.constructor = THREE.EdgesGeometry;\r\n\r\n// File:src/extras/geometries/ExtrudeGeometry.js\r\n\r\n/**\r\n * @author zz85 / http://www.lab4games.net/zz85/blog\r\n *\r\n * Creates extruded geometry from a path shape.\r\n *\r\n * parameters = {\r\n *\r\n *  curveSegments: <int>, // number of points on the curves\r\n *  steps: <int>, // number of points for z-side extrusions / used for subdividing segments of extrude spline too\r\n *  amount: <int>, // Depth to extrude the shape\r\n *\r\n *  bevelEnabled: <bool>, // turn on bevel\r\n *  bevelThickness: <float>, // how deep into the original shape bevel goes\r\n *  bevelSize: <float>, // how far from shape outline is bevel\r\n *  bevelSegments: <int>, // number of bevel layers\r\n *\r\n *  extrudePath: <THREE.CurvePath> // 3d spline path to extrude shape along. (creates Frames if .frames aren't defined)\r\n *  frames: <THREE.TubeGeometry.FrenetFrames> // containing arrays of tangents, normals, binormals\r\n *\r\n *  uvGenerator: <Object> // object that provides UV generator functions\r\n *\r\n * }\r\n **/\r\n\r\nTHREE.ExtrudeGeometry = function ( shapes, options ) {\r\n\r\n\tif ( typeof( shapes ) === \"undefined\" ) {\r\n\r\n\t\tshapes = [];\r\n\t\treturn;\r\n\r\n\t}\r\n\r\n\tTHREE.Geometry.call( this );\r\n\r\n\tthis.type = 'ExtrudeGeometry';\r\n\r\n\tshapes = Array.isArray( shapes ) ? shapes : [ shapes ];\r\n\r\n\tthis.addShapeList( shapes, options );\r\n\r\n\tthis.computeFaceNormals();\r\n\r\n\t// can't really use automatic vertex normals\r\n\t// as then front and back sides get smoothed too\r\n\t// should do separate smoothing just for sides\r\n\r\n\t//this.computeVertexNormals();\r\n\r\n\t//console.log( \"took\", ( Date.now() - startTime ) );\r\n\r\n};\r\n\r\nTHREE.ExtrudeGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\nTHREE.ExtrudeGeometry.prototype.constructor = THREE.ExtrudeGeometry;\r\n\r\nTHREE.ExtrudeGeometry.prototype.addShapeList = function ( shapes, options ) {\r\n\r\n\tvar sl = shapes.length;\r\n\r\n\tfor ( var s = 0; s < sl; s ++ ) {\r\n\r\n\t\tvar shape = shapes[ s ];\r\n\t\tthis.addShape( shape, options );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.ExtrudeGeometry.prototype.addShape = function ( shape, options ) {\r\n\r\n\tvar amount = options.amount !== undefined ? options.amount : 100;\r\n\r\n\tvar bevelThickness = options.bevelThickness !== undefined ? options.bevelThickness : 6; // 10\r\n\tvar bevelSize = options.bevelSize !== undefined ? options.bevelSize : bevelThickness - 2; // 8\r\n\tvar bevelSegments = options.bevelSegments !== undefined ? options.bevelSegments : 3;\r\n\r\n\tvar bevelEnabled = options.bevelEnabled !== undefined ? options.bevelEnabled : true; // false\r\n\r\n\tvar curveSegments = options.curveSegments !== undefined ? options.curveSegments : 12;\r\n\r\n\tvar steps = options.steps !== undefined ? options.steps : 1;\r\n\r\n\tvar extrudePath = options.extrudePath;\r\n\tvar extrudePts, extrudeByPath = false;\r\n\r\n\t// Use default WorldUVGenerator if no UV generators are specified.\r\n\tvar uvgen = options.UVGenerator !== undefined ? options.UVGenerator : THREE.ExtrudeGeometry.WorldUVGenerator;\r\n\r\n\tvar splineTube, binormal, normal, position2;\r\n\tif ( extrudePath ) {\r\n\r\n\t\textrudePts = extrudePath.getSpacedPoints( steps );\r\n\r\n\t\textrudeByPath = true;\r\n\t\tbevelEnabled = false; // bevels not supported for path extrusion\r\n\r\n\t\t// SETUP TNB variables\r\n\r\n\t\t// Reuse TNB from TubeGeomtry for now.\r\n\t\t// TODO1 - have a .isClosed in spline?\r\n\r\n\t\tsplineTube = options.frames !== undefined ? options.frames : new THREE.TubeGeometry.FrenetFrames( extrudePath, steps, false );\r\n\r\n\t\t// console.log(splineTube, 'splineTube', splineTube.normals.length, 'steps', steps, 'extrudePts', extrudePts.length);\r\n\r\n\t\tbinormal = new THREE.Vector3();\r\n\t\tnormal = new THREE.Vector3();\r\n\t\tposition2 = new THREE.Vector3();\r\n\r\n\t}\r\n\r\n\t// Safeguards if bevels are not enabled\r\n\r\n\tif ( ! bevelEnabled ) {\r\n\r\n\t\tbevelSegments = 0;\r\n\t\tbevelThickness = 0;\r\n\t\tbevelSize = 0;\r\n\r\n\t}\r\n\r\n\t// Variables initialization\r\n\r\n\tvar ahole, h, hl; // looping of holes\r\n\tvar scope = this;\r\n\r\n\tvar shapesOffset = this.vertices.length;\r\n\r\n\tvar shapePoints = shape.extractPoints( curveSegments );\r\n\r\n\tvar vertices = shapePoints.shape;\r\n\tvar holes = shapePoints.holes;\r\n\r\n\tvar reverse = ! THREE.Shape.Utils.isClockWise( vertices );\r\n\r\n\tif ( reverse ) {\r\n\r\n\t\tvertices = vertices.reverse();\r\n\r\n\t\t// Maybe we should also check if holes are in the opposite direction, just to be safe ...\r\n\r\n\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\r\n\r\n\t\t\tahole = holes[ h ];\r\n\r\n\t\t\tif ( THREE.Shape.Utils.isClockWise( ahole ) ) {\r\n\r\n\t\t\t\tholes[ h ] = ahole.reverse();\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treverse = false; // If vertices are in order now, we shouldn't need to worry about them again (hopefully)!\r\n\r\n\t}\r\n\r\n\r\n\tvar faces = THREE.Shape.Utils.triangulateShape ( vertices, holes );\r\n\r\n\t/* Vertices */\r\n\r\n\tvar contour = vertices; // vertices has all points but contour has only points of circumference\r\n\r\n\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\r\n\r\n\t\tahole = holes[ h ];\r\n\r\n\t\tvertices = vertices.concat( ahole );\r\n\r\n\t}\r\n\r\n\r\n\tfunction scalePt2 ( pt, vec, size ) {\r\n\r\n\t\tif ( ! vec ) console.error( \"THREE.ExtrudeGeometry: vec does not exist\" );\r\n\r\n\t\treturn vec.clone().multiplyScalar( size ).add( pt );\r\n\r\n\t}\r\n\r\n\tvar b, bs, t, z,\r\n\t\tvert, vlen = vertices.length,\r\n\t\tface, flen = faces.length;\r\n\r\n\r\n\t// Find directions for point movement\r\n\r\n\r\n\tfunction getBevelVec( inPt, inPrev, inNext ) {\r\n\r\n\t\tvar EPSILON = 0.0000000001;\r\n\r\n\t\t// computes for inPt the corresponding point inPt' on a new contour\r\n\t\t//   shifted by 1 unit (length of normalized vector) to the left\r\n\t\t// if we walk along contour clockwise, this new contour is outside the old one\r\n\t\t//\r\n\t\t// inPt' is the intersection of the two lines parallel to the two\r\n\t\t//  adjacent edges of inPt at a distance of 1 unit on the left side.\r\n\r\n\t\tvar v_trans_x, v_trans_y, shrink_by = 1;\t\t// resulting translation vector for inPt\r\n\r\n\t\t// good reading for geometry algorithms (here: line-line intersection)\r\n\t\t// http://geomalgorithms.com/a05-_intersect-1.html\r\n\r\n\t\tvar v_prev_x = inPt.x - inPrev.x, v_prev_y = inPt.y - inPrev.y;\r\n\t\tvar v_next_x = inNext.x - inPt.x, v_next_y = inNext.y - inPt.y;\r\n\r\n\t\tvar v_prev_lensq = ( v_prev_x * v_prev_x + v_prev_y * v_prev_y );\r\n\r\n\t\t// check for collinear edges\r\n\t\tvar collinear0 = ( v_prev_x * v_next_y - v_prev_y * v_next_x );\r\n\r\n\t\tif ( Math.abs( collinear0 ) > EPSILON ) {\r\n\r\n\t\t\t// not collinear\r\n\r\n\t\t\t// length of vectors for normalizing\r\n\r\n\t\t\tvar v_prev_len = Math.sqrt( v_prev_lensq );\r\n\t\t\tvar v_next_len = Math.sqrt( v_next_x * v_next_x + v_next_y * v_next_y );\r\n\r\n\t\t\t// shift adjacent points by unit vectors to the left\r\n\r\n\t\t\tvar ptPrevShift_x = ( inPrev.x - v_prev_y / v_prev_len );\r\n\t\t\tvar ptPrevShift_y = ( inPrev.y + v_prev_x / v_prev_len );\r\n\r\n\t\t\tvar ptNextShift_x = ( inNext.x - v_next_y / v_next_len );\r\n\t\t\tvar ptNextShift_y = ( inNext.y + v_next_x / v_next_len );\r\n\r\n\t\t\t// scaling factor for v_prev to intersection point\r\n\r\n\t\t\tvar sf = (  ( ptNextShift_x - ptPrevShift_x ) * v_next_y -\r\n\t\t\t\t\t\t( ptNextShift_y - ptPrevShift_y ) * v_next_x    ) /\r\n\t\t\t\t\t  ( v_prev_x * v_next_y - v_prev_y * v_next_x );\r\n\r\n\t\t\t// vector from inPt to intersection point\r\n\r\n\t\t\tv_trans_x = ( ptPrevShift_x + v_prev_x * sf - inPt.x );\r\n\t\t\tv_trans_y = ( ptPrevShift_y + v_prev_y * sf - inPt.y );\r\n\r\n\t\t\t// Don't normalize!, otherwise sharp corners become ugly\r\n\t\t\t//  but prevent crazy spikes\r\n\t\t\tvar v_trans_lensq = ( v_trans_x * v_trans_x + v_trans_y * v_trans_y );\r\n\t\t\tif ( v_trans_lensq <= 2 ) {\r\n\r\n\t\t\t\treturn\tnew THREE.Vector2( v_trans_x, v_trans_y );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tshrink_by = Math.sqrt( v_trans_lensq / 2 );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// handle special case of collinear edges\r\n\r\n\t\t\tvar direction_eq = false;\t\t// assumes: opposite\r\n\t\t\tif ( v_prev_x > EPSILON ) {\r\n\r\n\t\t\t\tif ( v_next_x > EPSILON ) {\r\n\r\n\t\t\t\t\tdirection_eq = true;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tif ( v_prev_x < - EPSILON ) {\r\n\r\n\t\t\t\t\tif ( v_next_x < - EPSILON ) {\r\n\r\n\t\t\t\t\t\tdirection_eq = true;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tif ( Math.sign( v_prev_y ) === Math.sign( v_next_y ) ) {\r\n\r\n\t\t\t\t\t\tdirection_eq = true;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( direction_eq ) {\r\n\r\n\t\t\t\t// console.log(\"Warning: lines are a straight sequence\");\r\n\t\t\t\tv_trans_x = - v_prev_y;\r\n\t\t\t\tv_trans_y =  v_prev_x;\r\n\t\t\t\tshrink_by = Math.sqrt( v_prev_lensq );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// console.log(\"Warning: lines are a straight spike\");\r\n\t\t\t\tv_trans_x = v_prev_x;\r\n\t\t\t\tv_trans_y = v_prev_y;\r\n\t\t\t\tshrink_by = Math.sqrt( v_prev_lensq / 2 );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn\tnew THREE.Vector2( v_trans_x / shrink_by, v_trans_y / shrink_by );\r\n\r\n\t}\r\n\r\n\r\n\tvar contourMovements = [];\r\n\r\n\tfor ( var i = 0, il = contour.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\r\n\r\n\t\tif ( j === il ) j = 0;\r\n\t\tif ( k === il ) k = 0;\r\n\r\n\t\t//  (j)---(i)---(k)\r\n\t\t// console.log('i,j,k', i, j , k)\r\n\r\n\t\tcontourMovements[ i ] = getBevelVec( contour[ i ], contour[ j ], contour[ k ] );\r\n\r\n\t}\r\n\r\n\tvar holesMovements = [], oneHoleMovements, verticesMovements = contourMovements.concat();\r\n\r\n\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\r\n\r\n\t\tahole = holes[ h ];\r\n\r\n\t\toneHoleMovements = [];\r\n\r\n\t\tfor ( i = 0, il = ahole.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\r\n\r\n\t\t\tif ( j === il ) j = 0;\r\n\t\t\tif ( k === il ) k = 0;\r\n\r\n\t\t\t//  (j)---(i)---(k)\r\n\t\t\toneHoleMovements[ i ] = getBevelVec( ahole[ i ], ahole[ j ], ahole[ k ] );\r\n\r\n\t\t}\r\n\r\n\t\tholesMovements.push( oneHoleMovements );\r\n\t\tverticesMovements = verticesMovements.concat( oneHoleMovements );\r\n\r\n\t}\r\n\r\n\r\n\t// Loop bevelSegments, 1 for the front, 1 for the back\r\n\r\n\tfor ( b = 0; b < bevelSegments; b ++ ) {\r\n\r\n\t\t//for ( b = bevelSegments; b > 0; b -- ) {\r\n\r\n\t\tt = b / bevelSegments;\r\n\t\tz = bevelThickness * ( 1 - t );\r\n\r\n\t\t//z = bevelThickness * t;\r\n\t\tbs = bevelSize * ( Math.sin ( t * Math.PI / 2 ) ); // curved\r\n\t\t//bs = bevelSize * t; // linear\r\n\r\n\t\t// contract shape\r\n\r\n\t\tfor ( i = 0, il = contour.length; i < il; i ++ ) {\r\n\r\n\t\t\tvert = scalePt2( contour[ i ], contourMovements[ i ], bs );\r\n\r\n\t\t\tv( vert.x, vert.y,  - z );\r\n\r\n\t\t}\r\n\r\n\t\t// expand holes\r\n\r\n\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\r\n\r\n\t\t\tahole = holes[ h ];\r\n\t\t\toneHoleMovements = holesMovements[ h ];\r\n\r\n\t\t\tfor ( i = 0, il = ahole.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tvert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\r\n\r\n\t\t\t\tv( vert.x, vert.y,  - z );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tbs = bevelSize;\r\n\r\n\t// Back facing vertices\r\n\r\n\tfor ( i = 0; i < vlen; i ++ ) {\r\n\r\n\t\tvert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\r\n\r\n\t\tif ( ! extrudeByPath ) {\r\n\r\n\t\t\tv( vert.x, vert.y, 0 );\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// v( vert.x, vert.y + extrudePts[ 0 ].y, extrudePts[ 0 ].x );\r\n\r\n\t\t\tnormal.copy( splineTube.normals[ 0 ] ).multiplyScalar( vert.x );\r\n\t\t\tbinormal.copy( splineTube.binormals[ 0 ] ).multiplyScalar( vert.y );\r\n\r\n\t\t\tposition2.copy( extrudePts[ 0 ] ).add( normal ).add( binormal );\r\n\r\n\t\t\tv( position2.x, position2.y, position2.z );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// Add stepped vertices...\r\n\t// Including front facing vertices\r\n\r\n\tvar s;\r\n\r\n\tfor ( s = 1; s <= steps; s ++ ) {\r\n\r\n\t\tfor ( i = 0; i < vlen; i ++ ) {\r\n\r\n\t\t\tvert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\r\n\r\n\t\t\tif ( ! extrudeByPath ) {\r\n\r\n\t\t\t\tv( vert.x, vert.y, amount / steps * s );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// v( vert.x, vert.y + extrudePts[ s - 1 ].y, extrudePts[ s - 1 ].x );\r\n\r\n\t\t\t\tnormal.copy( splineTube.normals[ s ] ).multiplyScalar( vert.x );\r\n\t\t\t\tbinormal.copy( splineTube.binormals[ s ] ).multiplyScalar( vert.y );\r\n\r\n\t\t\t\tposition2.copy( extrudePts[ s ] ).add( normal ).add( binormal );\r\n\r\n\t\t\t\tv( position2.x, position2.y, position2.z );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\r\n\t// Add bevel segments planes\r\n\r\n\t//for ( b = 1; b <= bevelSegments; b ++ ) {\r\n\tfor ( b = bevelSegments - 1; b >= 0; b -- ) {\r\n\r\n\t\tt = b / bevelSegments;\r\n\t\tz = bevelThickness * ( 1 - t );\r\n\t\t//bs = bevelSize * ( 1-Math.sin ( ( 1 - t ) * Math.PI/2 ) );\r\n\t\tbs = bevelSize * Math.sin ( t * Math.PI / 2 );\r\n\r\n\t\t// contract shape\r\n\r\n\t\tfor ( i = 0, il = contour.length; i < il; i ++ ) {\r\n\r\n\t\t\tvert = scalePt2( contour[ i ], contourMovements[ i ], bs );\r\n\t\t\tv( vert.x, vert.y,  amount + z );\r\n\r\n\t\t}\r\n\r\n\t\t// expand holes\r\n\r\n\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\r\n\r\n\t\t\tahole = holes[ h ];\r\n\t\t\toneHoleMovements = holesMovements[ h ];\r\n\r\n\t\t\tfor ( i = 0, il = ahole.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tvert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\r\n\r\n\t\t\t\tif ( ! extrudeByPath ) {\r\n\r\n\t\t\t\t\tv( vert.x, vert.y,  amount + z );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tv( vert.x, vert.y + extrudePts[ steps - 1 ].y, extrudePts[ steps - 1 ].x + z );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/* Faces */\r\n\r\n\t// Top and bottom faces\r\n\r\n\tbuildLidFaces();\r\n\r\n\t// Sides faces\r\n\r\n\tbuildSideFaces();\r\n\r\n\r\n\t/////  Internal functions\r\n\r\n\tfunction buildLidFaces() {\r\n\r\n\t\tif ( bevelEnabled ) {\r\n\r\n\t\t\tvar layer = 0; // steps + 1\r\n\t\t\tvar offset = vlen * layer;\r\n\r\n\t\t\t// Bottom faces\r\n\r\n\t\t\tfor ( i = 0; i < flen; i ++ ) {\r\n\r\n\t\t\t\tface = faces[ i ];\r\n\t\t\t\tf3( face[ 2 ] + offset, face[ 1 ] + offset, face[ 0 ] + offset );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tlayer = steps + bevelSegments * 2;\r\n\t\t\toffset = vlen * layer;\r\n\r\n\t\t\t// Top faces\r\n\r\n\t\t\tfor ( i = 0; i < flen; i ++ ) {\r\n\r\n\t\t\t\tface = faces[ i ];\r\n\t\t\t\tf3( face[ 0 ] + offset, face[ 1 ] + offset, face[ 2 ] + offset );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// Bottom faces\r\n\r\n\t\t\tfor ( i = 0; i < flen; i ++ ) {\r\n\r\n\t\t\t\tface = faces[ i ];\r\n\t\t\t\tf3( face[ 2 ], face[ 1 ], face[ 0 ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// Top faces\r\n\r\n\t\t\tfor ( i = 0; i < flen; i ++ ) {\r\n\r\n\t\t\t\tface = faces[ i ];\r\n\t\t\t\tf3( face[ 0 ] + vlen * steps, face[ 1 ] + vlen * steps, face[ 2 ] + vlen * steps );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// Create faces for the z-sides of the shape\r\n\r\n\tfunction buildSideFaces() {\r\n\r\n\t\tvar layeroffset = 0;\r\n\t\tsidewalls( contour, layeroffset );\r\n\t\tlayeroffset += contour.length;\r\n\r\n\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\r\n\r\n\t\t\tahole = holes[ h ];\r\n\t\t\tsidewalls( ahole, layeroffset );\r\n\r\n\t\t\t//, true\r\n\t\t\tlayeroffset += ahole.length;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction sidewalls( contour, layeroffset ) {\r\n\r\n\t\tvar j, k;\r\n\t\ti = contour.length;\r\n\r\n\t\twhile ( -- i >= 0 ) {\r\n\r\n\t\t\tj = i;\r\n\t\t\tk = i - 1;\r\n\t\t\tif ( k < 0 ) k = contour.length - 1;\r\n\r\n\t\t\t//console.log('b', i,j, i-1, k,vertices.length);\r\n\r\n\t\t\tvar s = 0, sl = steps  + bevelSegments * 2;\r\n\r\n\t\t\tfor ( s = 0; s < sl; s ++ ) {\r\n\r\n\t\t\t\tvar slen1 = vlen * s;\r\n\t\t\t\tvar slen2 = vlen * ( s + 1 );\r\n\r\n\t\t\t\tvar a = layeroffset + j + slen1,\r\n\t\t\t\t\tb = layeroffset + k + slen1,\r\n\t\t\t\t\tc = layeroffset + k + slen2,\r\n\t\t\t\t\td = layeroffset + j + slen2;\r\n\r\n\t\t\t\tf4( a, b, c, d, contour, s, sl, j, k );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\r\n\tfunction v( x, y, z ) {\r\n\r\n\t\tscope.vertices.push( new THREE.Vector3( x, y, z ) );\r\n\r\n\t}\r\n\r\n\tfunction f3( a, b, c ) {\r\n\r\n\t\ta += shapesOffset;\r\n\t\tb += shapesOffset;\r\n\t\tc += shapesOffset;\r\n\r\n\t\tscope.faces.push( new THREE.Face3( a, b, c ) );\r\n\r\n\t\tvar uvs = uvgen.generateTopUV( scope, a, b, c );\r\n\r\n\t\tscope.faceVertexUvs[ 0 ].push( uvs );\r\n\r\n\t}\r\n\r\n\tfunction f4( a, b, c, d, wallContour, stepIndex, stepsLength, contourIndex1, contourIndex2 ) {\r\n\r\n\t\ta += shapesOffset;\r\n\t\tb += shapesOffset;\r\n\t\tc += shapesOffset;\r\n\t\td += shapesOffset;\r\n\r\n\t\tscope.faces.push( new THREE.Face3( a, b, d ) );\r\n\t\tscope.faces.push( new THREE.Face3( b, c, d ) );\r\n\r\n\t\tvar uvs = uvgen.generateSideWallUV( scope, a, b, c, d );\r\n\r\n\t\tscope.faceVertexUvs[ 0 ].push( [ uvs[ 0 ], uvs[ 1 ], uvs[ 3 ] ] );\r\n\t\tscope.faceVertexUvs[ 0 ].push( [ uvs[ 1 ], uvs[ 2 ], uvs[ 3 ] ] );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.ExtrudeGeometry.WorldUVGenerator = {\r\n\r\n\tgenerateTopUV: function ( geometry, indexA, indexB, indexC ) {\r\n\r\n\t\tvar vertices = geometry.vertices;\r\n\r\n\t\tvar a = vertices[ indexA ];\r\n\t\tvar b = vertices[ indexB ];\r\n\t\tvar c = vertices[ indexC ];\r\n\r\n\t\treturn [\r\n\t\t\tnew THREE.Vector2( a.x, a.y ),\r\n\t\t\tnew THREE.Vector2( b.x, b.y ),\r\n\t\t\tnew THREE.Vector2( c.x, c.y )\r\n\t\t];\r\n\r\n\t},\r\n\r\n\tgenerateSideWallUV: function ( geometry, indexA, indexB, indexC, indexD ) {\r\n\r\n\t\tvar vertices = geometry.vertices;\r\n\r\n\t\tvar a = vertices[ indexA ];\r\n\t\tvar b = vertices[ indexB ];\r\n\t\tvar c = vertices[ indexC ];\r\n\t\tvar d = vertices[ indexD ];\r\n\r\n\t\tif ( Math.abs( a.y - b.y ) < 0.01 ) {\r\n\r\n\t\t\treturn [\r\n\t\t\t\tnew THREE.Vector2( a.x, 1 - a.z ),\r\n\t\t\t\tnew THREE.Vector2( b.x, 1 - b.z ),\r\n\t\t\t\tnew THREE.Vector2( c.x, 1 - c.z ),\r\n\t\t\t\tnew THREE.Vector2( d.x, 1 - d.z )\r\n\t\t\t];\r\n\r\n\t\t} else {\r\n\r\n\t\t\treturn [\r\n\t\t\t\tnew THREE.Vector2( a.y, 1 - a.z ),\r\n\t\t\t\tnew THREE.Vector2( b.y, 1 - b.z ),\r\n\t\t\t\tnew THREE.Vector2( c.y, 1 - c.z ),\r\n\t\t\t\tnew THREE.Vector2( d.y, 1 - d.z )\r\n\t\t\t];\r\n\r\n\t\t}\r\n\r\n\t}\r\n};\r\n\r\n// File:src/extras/geometries/ShapeGeometry.js\r\n\r\n/**\r\n * @author jonobr1 / http://jonobr1.com\r\n *\r\n * Creates a one-sided polygonal geometry from a path shape. Similar to\r\n * ExtrudeGeometry.\r\n *\r\n * parameters = {\r\n *\r\n *\tcurveSegments: <int>, // number of points on the curves. NOT USED AT THE MOMENT.\r\n *\r\n *\tmaterial: <int> // material index for front and back faces\r\n *\tuvGenerator: <Object> // object that provides UV generator functions\r\n *\r\n * }\r\n **/\r\n\r\nTHREE.ShapeGeometry = function ( shapes, options ) {\r\n\r\n\tTHREE.Geometry.call( this );\r\n\r\n\tthis.type = 'ShapeGeometry';\r\n\r\n\tif ( Array.isArray( shapes ) === false ) shapes = [ shapes ];\r\n\r\n\tthis.addShapeList( shapes, options );\r\n\r\n\tthis.computeFaceNormals();\r\n\r\n};\r\n\r\nTHREE.ShapeGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\nTHREE.ShapeGeometry.prototype.constructor = THREE.ShapeGeometry;\r\n\r\n/**\r\n * Add an array of shapes to THREE.ShapeGeometry.\r\n */\r\nTHREE.ShapeGeometry.prototype.addShapeList = function ( shapes, options ) {\r\n\r\n\tfor ( var i = 0, l = shapes.length; i < l; i ++ ) {\r\n\r\n\t\tthis.addShape( shapes[ i ], options );\r\n\r\n\t}\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\n/**\r\n * Adds a shape to THREE.ShapeGeometry, based on THREE.ExtrudeGeometry.\r\n */\r\nTHREE.ShapeGeometry.prototype.addShape = function ( shape, options ) {\r\n\r\n\tif ( options === undefined ) options = {};\r\n\tvar curveSegments = options.curveSegments !== undefined ? options.curveSegments : 12;\r\n\r\n\tvar material = options.material;\r\n\tvar uvgen = options.UVGenerator === undefined ? THREE.ExtrudeGeometry.WorldUVGenerator : options.UVGenerator;\r\n\r\n\t//\r\n\r\n\tvar i, l, hole;\r\n\r\n\tvar shapesOffset = this.vertices.length;\r\n\tvar shapePoints = shape.extractPoints( curveSegments );\r\n\r\n\tvar vertices = shapePoints.shape;\r\n\tvar holes = shapePoints.holes;\r\n\r\n\tvar reverse = ! THREE.Shape.Utils.isClockWise( vertices );\r\n\r\n\tif ( reverse ) {\r\n\r\n\t\tvertices = vertices.reverse();\r\n\r\n\t\t// Maybe we should also check if holes are in the opposite direction, just to be safe...\r\n\r\n\t\tfor ( i = 0, l = holes.length; i < l; i ++ ) {\r\n\r\n\t\t\thole = holes[ i ];\r\n\r\n\t\t\tif ( THREE.Shape.Utils.isClockWise( hole ) ) {\r\n\r\n\t\t\t\tholes[ i ] = hole.reverse();\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treverse = false;\r\n\r\n\t}\r\n\r\n\tvar faces = THREE.Shape.Utils.triangulateShape( vertices, holes );\r\n\r\n\t// Vertices\r\n\r\n\tfor ( i = 0, l = holes.length; i < l; i ++ ) {\r\n\r\n\t\thole = holes[ i ];\r\n\t\tvertices = vertices.concat( hole );\r\n\r\n\t}\r\n\r\n\t//\r\n\r\n\tvar vert, vlen = vertices.length;\r\n\tvar face, flen = faces.length;\r\n\r\n\tfor ( i = 0; i < vlen; i ++ ) {\r\n\r\n\t\tvert = vertices[ i ];\r\n\r\n\t\tthis.vertices.push( new THREE.Vector3( vert.x, vert.y, 0 ) );\r\n\r\n\t}\r\n\r\n\tfor ( i = 0; i < flen; i ++ ) {\r\n\r\n\t\tface = faces[ i ];\r\n\r\n\t\tvar a = face[ 0 ] + shapesOffset;\r\n\t\tvar b = face[ 1 ] + shapesOffset;\r\n\t\tvar c = face[ 2 ] + shapesOffset;\r\n\r\n\t\tthis.faces.push( new THREE.Face3( a, b, c, null, null, material ) );\r\n\t\tthis.faceVertexUvs[ 0 ].push( uvgen.generateTopUV( this, a, b, c ) );\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/extras/geometries/LatheGeometry.js\r\n\r\n/**\r\n * @author astrodud / http://astrodud.isgreat.org/\r\n * @author zz85 / https://github.com/zz85\r\n * @author bhouston / http://exocortex.com\r\n */\r\n\r\n// points - to create a closed torus, one must use a set of points \r\n//    like so: [ a, b, c, d, a ], see first is the same as last.\r\n// segments - the number of circumference segments to create\r\n// phiStart - the starting radian\r\n// phiLength - the radian (0 to 2*PI) range of the lathed section\r\n//    2*pi is a closed lathe, less than 2PI is a portion.\r\n\r\nTHREE.LatheGeometry = function ( points, segments, phiStart, phiLength ) {\r\n\r\n\tTHREE.Geometry.call( this );\r\n\r\n\tthis.type = 'LatheGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\tpoints: points,\r\n\t\tsegments: segments,\r\n\t\tphiStart: phiStart,\r\n\t\tphiLength: phiLength\r\n\t};\r\n\r\n\tsegments = segments || 12;\r\n\tphiStart = phiStart || 0;\r\n\tphiLength = phiLength || 2 * Math.PI;\r\n\r\n\tvar inversePointLength = 1.0 / ( points.length - 1 );\r\n\tvar inverseSegments = 1.0 / segments;\r\n\r\n\tfor ( var i = 0, il = segments; i <= il; i ++ ) {\r\n\r\n\t\tvar phi = phiStart + i * inverseSegments * phiLength;\r\n\r\n\t\tvar c = Math.cos( phi ),\r\n\t\t\ts = Math.sin( phi );\r\n\r\n\t\tfor ( var j = 0, jl = points.length; j < jl; j ++ ) {\r\n\r\n\t\t\tvar pt = points[ j ];\r\n\r\n\t\t\tvar vertex = new THREE.Vector3();\r\n\r\n\t\t\tvertex.x = c * pt.x - s * pt.y;\r\n\t\t\tvertex.y = s * pt.x + c * pt.y;\r\n\t\t\tvertex.z = pt.z;\r\n\r\n\t\t\tthis.vertices.push( vertex );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tvar np = points.length;\r\n\r\n\tfor ( var i = 0, il = segments; i < il; i ++ ) {\r\n\r\n\t\tfor ( var j = 0, jl = points.length - 1; j < jl; j ++ ) {\r\n\r\n\t\t\tvar base = j + np * i;\r\n\t\t\tvar a = base;\r\n\t\t\tvar b = base + np;\r\n\t\t\tvar c = base + 1 + np;\r\n\t\t\tvar d = base + 1;\r\n\r\n\t\t\tvar u0 = i * inverseSegments;\r\n\t\t\tvar v0 = j * inversePointLength;\r\n\t\t\tvar u1 = u0 + inverseSegments;\r\n\t\t\tvar v1 = v0 + inversePointLength;\r\n\r\n\t\t\tthis.faces.push( new THREE.Face3( a, b, d ) );\r\n\r\n\t\t\tthis.faceVertexUvs[ 0 ].push( [\r\n\r\n\t\t\t\tnew THREE.Vector2( u0, v0 ),\r\n\t\t\t\tnew THREE.Vector2( u1, v0 ),\r\n\t\t\t\tnew THREE.Vector2( u0, v1 )\r\n\r\n\t\t\t] );\r\n\r\n\t\t\tthis.faces.push( new THREE.Face3( b, c, d ) );\r\n\r\n\t\t\tthis.faceVertexUvs[ 0 ].push( [\r\n\r\n\t\t\t\tnew THREE.Vector2( u1, v0 ),\r\n\t\t\t\tnew THREE.Vector2( u1, v1 ),\r\n\t\t\t\tnew THREE.Vector2( u0, v1 )\r\n\r\n\t\t\t] );\r\n\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tthis.mergeVertices();\r\n\tthis.computeFaceNormals();\r\n\tthis.computeVertexNormals();\r\n\r\n};\r\n\r\nTHREE.LatheGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\nTHREE.LatheGeometry.prototype.constructor = THREE.LatheGeometry;\r\n\r\n// File:src/extras/geometries/PlaneGeometry.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * based on http://papervision3d.googlecode.com/svn/trunk/as3/trunk/src/org/papervision3d/objects/primitives/Plane.as\r\n */\r\n\r\nTHREE.PlaneGeometry = function ( width, height, widthSegments, heightSegments ) {\r\n\r\n\tTHREE.Geometry.call( this );\r\n\r\n\tthis.type = 'PlaneGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\twidth: width,\r\n\t\theight: height,\r\n\t\twidthSegments: widthSegments,\r\n\t\theightSegments: heightSegments\r\n\t};\r\n\r\n\tthis.fromBufferGeometry( new THREE.PlaneBufferGeometry( width, height, widthSegments, heightSegments ) );\r\n\r\n};\r\n\r\nTHREE.PlaneGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\nTHREE.PlaneGeometry.prototype.constructor = THREE.PlaneGeometry;\r\n\r\nTHREE.PlaneGeometry.prototype.clone = function () {\r\n\r\n\tvar geometry = new THREE.PlaneGeometry(\r\n\t\tthis.parameters.width,\r\n\t\tthis.parameters.height,\r\n\t\tthis.parameters.widthSegments,\r\n\t\tthis.parameters.heightSegments\r\n\t);\r\n\r\n\treturn geometry;\r\n\r\n};\r\n\r\n// File:src/extras/geometries/PlaneBufferGeometry.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * based on http://papervision3d.googlecode.com/svn/trunk/as3/trunk/src/org/papervision3d/objects/primitives/Plane.as\r\n */\r\n\r\nTHREE.PlaneBufferGeometry = function ( width, height, widthSegments, heightSegments ) {\r\n\r\n\tTHREE.BufferGeometry.call( this );\r\n\r\n\tthis.type = 'PlaneBufferGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\twidth: width,\r\n\t\theight: height,\r\n\t\twidthSegments: widthSegments,\r\n\t\theightSegments: heightSegments\r\n\t};\r\n\r\n\tvar width_half = width / 2;\r\n\tvar height_half = height / 2;\r\n\r\n\tvar gridX = Math.floor( widthSegments ) || 1;\r\n\tvar gridY = Math.floor( heightSegments ) || 1;\r\n\r\n\tvar gridX1 = gridX + 1;\r\n\tvar gridY1 = gridY + 1;\r\n\r\n\tvar segment_width = width / gridX;\r\n\tvar segment_height = height / gridY;\r\n\r\n\tvar vertices = new Float32Array( gridX1 * gridY1 * 3 );\r\n\tvar normals = new Float32Array( gridX1 * gridY1 * 3 );\r\n\tvar uvs = new Float32Array( gridX1 * gridY1 * 2 );\r\n\r\n\tvar offset = 0;\r\n\tvar offset2 = 0;\r\n\r\n\tfor ( var iy = 0; iy < gridY1; iy ++ ) {\r\n\r\n\t\tvar y = iy * segment_height - height_half;\r\n\r\n\t\tfor ( var ix = 0; ix < gridX1; ix ++ ) {\r\n\r\n\t\t\tvar x = ix * segment_width - width_half;\r\n\r\n\t\t\tvertices[ offset ] = x;\r\n\t\t\tvertices[ offset + 1 ] = - y;\r\n\r\n\t\t\tnormals[ offset + 2 ] = 1;\r\n\r\n\t\t\tuvs[ offset2 ] = ix / gridX;\r\n\t\t\tuvs[ offset2 + 1 ] = 1 - ( iy / gridY );\r\n\r\n\t\t\toffset += 3;\r\n\t\t\toffset2 += 2;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\toffset = 0;\r\n\r\n\tvar indices = new ( ( vertices.length / 3 ) > 65535 ? Uint32Array : Uint16Array )( gridX * gridY * 6 );\r\n\r\n\tfor ( var iy = 0; iy < gridY; iy ++ ) {\r\n\r\n\t\tfor ( var ix = 0; ix < gridX; ix ++ ) {\r\n\r\n\t\t\tvar a = ix + gridX1 * iy;\r\n\t\t\tvar b = ix + gridX1 * ( iy + 1 );\r\n\t\t\tvar c = ( ix + 1 ) + gridX1 * ( iy + 1 );\r\n\t\t\tvar d = ( ix + 1 ) + gridX1 * iy;\r\n\r\n\t\t\tindices[ offset ] = a;\r\n\t\t\tindices[ offset + 1 ] = b;\r\n\t\t\tindices[ offset + 2 ] = d;\r\n\r\n\t\t\tindices[ offset + 3 ] = b;\r\n\t\t\tindices[ offset + 4 ] = c;\r\n\t\t\tindices[ offset + 5 ] = d;\r\n\r\n\t\t\toffset += 6;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tthis.setIndex( new THREE.BufferAttribute( indices, 1 ) );\r\n\tthis.addAttribute( 'position', new THREE.BufferAttribute( vertices, 3 ) );\r\n\tthis.addAttribute( 'normal', new THREE.BufferAttribute( normals, 3 ) );\r\n\tthis.addAttribute( 'uv', new THREE.BufferAttribute( uvs, 2 ) );\r\n\r\n};\r\n\r\nTHREE.PlaneBufferGeometry.prototype = Object.create( THREE.BufferGeometry.prototype );\r\nTHREE.PlaneBufferGeometry.prototype.constructor = THREE.PlaneBufferGeometry;\r\n\r\nTHREE.PlaneBufferGeometry.prototype.clone = function () {\r\n\r\n\tvar geometry = new THREE.PlaneBufferGeometry(\r\n\t\tthis.parameters.width,\r\n\t\tthis.parameters.height,\r\n\t\tthis.parameters.widthSegments,\r\n\t\tthis.parameters.heightSegments\r\n\t);\r\n\r\n\tgeometry.copy( this );\r\n\r\n\treturn geometry;\r\n\r\n};\r\n\r\n// File:src/extras/geometries/RingGeometry.js\r\n\r\n/**\r\n * @author Kaleb Murphy\r\n */\r\n\r\nTHREE.RingGeometry = function ( innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength ) {\r\n\r\n\tTHREE.Geometry.call( this );\r\n\r\n\tthis.type = 'RingGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\tinnerRadius: innerRadius,\r\n\t\touterRadius: outerRadius,\r\n\t\tthetaSegments: thetaSegments,\r\n\t\tphiSegments: phiSegments,\r\n\t\tthetaStart: thetaStart,\r\n\t\tthetaLength: thetaLength\r\n\t};\r\n\r\n\tinnerRadius = innerRadius || 0;\r\n\touterRadius = outerRadius || 50;\r\n\r\n\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\r\n\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2;\r\n\r\n\tthetaSegments = thetaSegments !== undefined ? Math.max( 3, thetaSegments ) : 8;\r\n\tphiSegments = phiSegments !== undefined ? Math.max( 1, phiSegments ) : 8;\r\n\r\n\tvar i, o, uvs = [], radius = innerRadius, radiusStep = ( ( outerRadius - innerRadius ) / phiSegments );\r\n\r\n\tfor ( i = 0; i < phiSegments + 1; i ++ ) {\r\n\r\n\t\t// concentric circles inside ring\r\n\r\n\t\tfor ( o = 0; o < thetaSegments + 1; o ++ ) {\r\n\r\n\t\t\t// number of segments per circle\r\n\r\n\t\t\tvar vertex = new THREE.Vector3();\r\n\t\t\tvar segment = thetaStart + o / thetaSegments * thetaLength;\r\n\t\t\tvertex.x = radius * Math.cos( segment );\r\n\t\t\tvertex.y = radius * Math.sin( segment );\r\n\r\n\t\t\tthis.vertices.push( vertex );\r\n\t\t\tuvs.push( new THREE.Vector2( ( vertex.x / outerRadius + 1 ) / 2, ( vertex.y / outerRadius + 1 ) / 2 ) );\r\n\r\n\t\t}\r\n\r\n\t\tradius += radiusStep;\r\n\r\n\t}\r\n\r\n\tvar n = new THREE.Vector3( 0, 0, 1 );\r\n\r\n\tfor ( i = 0; i < phiSegments; i ++ ) {\r\n\r\n\t\t// concentric circles inside ring\r\n\r\n\t\tvar thetaSegment = i * ( thetaSegments + 1 );\r\n\r\n\t\tfor ( o = 0; o < thetaSegments ; o ++ ) {\r\n\r\n\t\t\t// number of segments per circle\r\n\r\n\t\t\tvar segment = o + thetaSegment;\r\n\r\n\t\t\tvar v1 = segment;\r\n\t\t\tvar v2 = segment + thetaSegments + 1;\r\n\t\t\tvar v3 = segment + thetaSegments + 2;\r\n\r\n\t\t\tthis.faces.push( new THREE.Face3( v1, v2, v3, [ n.clone(), n.clone(), n.clone() ] ) );\r\n\t\t\tthis.faceVertexUvs[ 0 ].push( [ uvs[ v1 ].clone(), uvs[ v2 ].clone(), uvs[ v3 ].clone() ] );\r\n\r\n\t\t\tv1 = segment;\r\n\t\t\tv2 = segment + thetaSegments + 2;\r\n\t\t\tv3 = segment + 1;\r\n\r\n\t\t\tthis.faces.push( new THREE.Face3( v1, v2, v3, [ n.clone(), n.clone(), n.clone() ] ) );\r\n\t\t\tthis.faceVertexUvs[ 0 ].push( [ uvs[ v1 ].clone(), uvs[ v2 ].clone(), uvs[ v3 ].clone() ] );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tthis.computeFaceNormals();\r\n\r\n\tthis.boundingSphere = new THREE.Sphere( new THREE.Vector3(), radius );\r\n\r\n};\r\n\r\nTHREE.RingGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\nTHREE.RingGeometry.prototype.constructor = THREE.RingGeometry;\r\n\r\nTHREE.RingGeometry.prototype.clone = function () {\r\n\r\n\tvar geometry = new THREE.RingGeometry(\r\n\t\tthis.parameters.innerRadius,\r\n\t\tthis.parameters.outerRadius,\r\n\t\tthis.parameters.thetaSegments,\r\n\t\tthis.parameters.phiSegments,\r\n\t\tthis.parameters.thetaStart,\r\n\t\tthis.parameters.thetaLength\r\n\t);\r\n\r\n\treturn geometry;\r\n\r\n};\r\n\r\n// File:src/extras/geometries/SphereGeometry.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.SphereGeometry = function ( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength ) {\r\n\r\n\tTHREE.Geometry.call( this );\r\n\r\n\tthis.type = 'SphereGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\tradius: radius,\r\n\t\twidthSegments: widthSegments,\r\n\t\theightSegments: heightSegments,\r\n\t\tphiStart: phiStart,\r\n\t\tphiLength: phiLength,\r\n\t\tthetaStart: thetaStart,\r\n\t\tthetaLength: thetaLength\r\n\t};\r\n\r\n\tthis.fromBufferGeometry( new THREE.SphereBufferGeometry( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength ) );\r\n\r\n};\r\n\r\nTHREE.SphereGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\nTHREE.SphereGeometry.prototype.constructor = THREE.SphereGeometry;\r\n\r\nTHREE.SphereGeometry.prototype.clone = function () {\r\n\r\n\tvar geometry = new THREE.SphereGeometry(\r\n\t\tthis.parameters.radius,\r\n\t\tthis.parameters.widthSegments,\r\n\t\tthis.parameters.heightSegments,\r\n\t\tthis.parameters.phiStart,\r\n\t\tthis.parameters.phiLength,\r\n\t\tthis.parameters.thetaStart,\r\n\t\tthis.parameters.thetaLength\r\n\t);\r\n\r\n\treturn geometry;\r\n\r\n};\r\n\r\n// File:src/extras/geometries/SphereBufferGeometry.js\r\n\r\n/**\r\n * @author benaadams / https://twitter.com/ben_a_adams\r\n * based on THREE.SphereGeometry\r\n */\r\n\r\nTHREE.SphereBufferGeometry = function ( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength ) {\r\n\r\n\tTHREE.BufferGeometry.call( this );\r\n\r\n\tthis.type = 'SphereBufferGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\tradius: radius,\r\n\t\twidthSegments: widthSegments,\r\n\t\theightSegments: heightSegments,\r\n\t\tphiStart: phiStart,\r\n\t\tphiLength: phiLength,\r\n\t\tthetaStart: thetaStart,\r\n\t\tthetaLength: thetaLength\r\n\t};\r\n\r\n\tradius = radius || 50;\r\n\r\n\twidthSegments = Math.max( 3, Math.floor( widthSegments ) || 8 );\r\n\theightSegments = Math.max( 2, Math.floor( heightSegments ) || 6 );\r\n\r\n\tphiStart = phiStart !== undefined ? phiStart : 0;\r\n\tphiLength = phiLength !== undefined ? phiLength : Math.PI * 2;\r\n\r\n\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\r\n\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI;\r\n\r\n\tvar thetaEnd = thetaStart + thetaLength;\r\n\r\n\tvar vertexCount = ( ( widthSegments + 1 ) * ( heightSegments + 1 ) );\r\n\r\n\tvar positions = new THREE.BufferAttribute( new Float32Array( vertexCount * 3 ), 3 );\r\n\tvar normals = new THREE.BufferAttribute( new Float32Array( vertexCount * 3 ), 3 );\r\n\tvar uvs = new THREE.BufferAttribute( new Float32Array( vertexCount * 2 ), 2 );\r\n\r\n\tvar index = 0, vertices = [], normal = new THREE.Vector3();\r\n\r\n\tfor ( var y = 0; y <= heightSegments; y ++ ) {\r\n\r\n\t\tvar verticesRow = [];\r\n\r\n\t\tvar v = y / heightSegments;\r\n\r\n\t\tfor ( var x = 0; x <= widthSegments; x ++ ) {\r\n\r\n\t\t\tvar u = x / widthSegments;\r\n\r\n\t\t\tvar px = - radius * Math.cos( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\r\n\t\t\tvar py = radius * Math.cos( thetaStart + v * thetaLength );\r\n\t\t\tvar pz = radius * Math.sin( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\r\n\r\n\t\t\tnormal.set( px, py, pz ).normalize();\r\n\r\n\t\t\tpositions.setXYZ( index, px, py, pz );\r\n\t\t\tnormals.setXYZ( index, normal.x, normal.y, normal.z );\r\n\t\t\tuvs.setXY( index, u, 1 - v );\r\n\r\n\t\t\tverticesRow.push( index );\r\n\r\n\t\t\tindex ++;\r\n\r\n\t\t}\r\n\r\n\t\tvertices.push( verticesRow );\r\n\r\n\t}\r\n\r\n\tvar indices = [];\r\n\r\n\tfor ( var y = 0; y < heightSegments; y ++ ) {\r\n\r\n\t\tfor ( var x = 0; x < widthSegments; x ++ ) {\r\n\r\n\t\t\tvar v1 = vertices[ y ][ x + 1 ];\r\n\t\t\tvar v2 = vertices[ y ][ x ];\r\n\t\t\tvar v3 = vertices[ y + 1 ][ x ];\r\n\t\t\tvar v4 = vertices[ y + 1 ][ x + 1 ];\r\n\r\n\t\t\tif ( y !== 0 || thetaStart > 0 ) indices.push( v1, v2, v4 );\r\n\t\t\tif ( y !== heightSegments - 1 || thetaEnd < Math.PI ) indices.push( v2, v3, v4 );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tthis.setIndex( new THREE.BufferAttribute( new Uint16Array( indices ), 1 ) );\r\n\tthis.addAttribute( 'position', positions );\r\n\tthis.addAttribute( 'normal', normals );\r\n\tthis.addAttribute( 'uv', uvs );\r\n\r\n\tthis.boundingSphere = new THREE.Sphere( new THREE.Vector3(), radius );\r\n\r\n};\r\n\r\nTHREE.SphereBufferGeometry.prototype = Object.create( THREE.BufferGeometry.prototype );\r\nTHREE.SphereBufferGeometry.prototype.constructor = THREE.SphereBufferGeometry;\r\n\r\nTHREE.SphereBufferGeometry.prototype.clone = function () {\r\n\r\n\tvar geometry = new THREE.SphereBufferGeometry(\r\n\t\tthis.parameters.radius,\r\n\t\tthis.parameters.widthSegments,\r\n\t\tthis.parameters.heightSegments,\r\n\t\tthis.parameters.phiStart,\r\n\t\tthis.parameters.phiLength,\r\n\t\tthis.parameters.thetaStart,\r\n\t\tthis.parameters.thetaLength\r\n\t);\r\n\r\n\tgeometry.copy( this );\r\n\r\n\treturn geometry;\r\n\r\n};\r\n\r\n// File:src/extras/geometries/TextGeometry.js\r\n\r\n/**\r\n * @author zz85 / http://www.lab4games.net/zz85/blog\r\n * @author alteredq / http://alteredqualia.com/\r\n *\r\n * For creating 3D text geometry in three.js\r\n *\r\n * Text = 3D Text\r\n *\r\n * parameters = {\r\n *  size: \t\t\t<float>, \t// size of the text\r\n *  height: \t\t<float>, \t// thickness to extrude text\r\n *  curveSegments: \t<int>,\t\t// number of points on the curves\r\n *\r\n *  font: \t\t\t<string>,\t\t// font name\r\n *  weight: \t\t<string>,\t\t// font weight (normal, bold)\r\n *  style: \t\t\t<string>,\t\t// font style  (normal, italics)\r\n *\r\n *  bevelEnabled:\t<bool>,\t\t\t// turn on bevel\r\n *  bevelThickness: <float>, \t\t// how deep into text bevel goes\r\n *  bevelSize:\t\t<float>, \t\t// how far from text outline is bevel\r\n *  }\r\n *\r\n */\r\n\r\n/*\tUsage Examples\r\n\r\n\t// TextGeometry wrapper\r\n\r\n\tvar text3d = new TextGeometry( text, options );\r\n\r\n\t// Complete manner\r\n\r\n\tvar textShapes = THREE.FontUtils.generateShapes( text, options );\r\n\tvar text3d = new ExtrudeGeometry( textShapes, options );\r\n\r\n*/\r\n\r\n\r\nTHREE.TextGeometry = function ( text, parameters ) {\r\n\r\n\tparameters = parameters || {};\r\n\r\n\tvar textShapes = THREE.FontUtils.generateShapes( text, parameters );\r\n\r\n\t// translate parameters to ExtrudeGeometry API\r\n\r\n\tparameters.amount = parameters.height !== undefined ? parameters.height : 50;\r\n\r\n\t// defaults\r\n\r\n\tif ( parameters.bevelThickness === undefined ) parameters.bevelThickness = 10;\r\n\tif ( parameters.bevelSize === undefined ) parameters.bevelSize = 8;\r\n\tif ( parameters.bevelEnabled === undefined ) parameters.bevelEnabled = false;\r\n\r\n\tTHREE.ExtrudeGeometry.call( this, textShapes, parameters );\r\n\r\n\tthis.type = 'TextGeometry';\r\n\r\n};\r\n\r\nTHREE.TextGeometry.prototype = Object.create( THREE.ExtrudeGeometry.prototype );\r\nTHREE.TextGeometry.prototype.constructor = THREE.TextGeometry;\r\n\r\n// File:src/extras/geometries/TorusGeometry.js\r\n\r\n/**\r\n * @author oosmoxiecode\r\n * @author mrdoob / http://mrdoob.com/\r\n * based on http://code.google.com/p/away3d/source/browse/trunk/fp10/Away3DLite/src/away3dlite/primitives/Torus.as?r=2888\r\n */\r\n\r\nTHREE.TorusGeometry = function ( radius, tube, radialSegments, tubularSegments, arc ) {\r\n\r\n\tTHREE.Geometry.call( this );\r\n\r\n\tthis.type = 'TorusGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\tradius: radius,\r\n\t\ttube: tube,\r\n\t\tradialSegments: radialSegments,\r\n\t\ttubularSegments: tubularSegments,\r\n\t\tarc: arc\r\n\t};\r\n\r\n\tradius = radius || 100;\r\n\ttube = tube || 40;\r\n\tradialSegments = radialSegments || 8;\r\n\ttubularSegments = tubularSegments || 6;\r\n\tarc = arc || Math.PI * 2;\r\n\r\n\tvar center = new THREE.Vector3(), uvs = [], normals = [];\r\n\r\n\tfor ( var j = 0; j <= radialSegments; j ++ ) {\r\n\r\n\t\tfor ( var i = 0; i <= tubularSegments; i ++ ) {\r\n\r\n\t\t\tvar u = i / tubularSegments * arc;\r\n\t\t\tvar v = j / radialSegments * Math.PI * 2;\r\n\r\n\t\t\tcenter.x = radius * Math.cos( u );\r\n\t\t\tcenter.y = radius * Math.sin( u );\r\n\r\n\t\t\tvar vertex = new THREE.Vector3();\r\n\t\t\tvertex.x = ( radius + tube * Math.cos( v ) ) * Math.cos( u );\r\n\t\t\tvertex.y = ( radius + tube * Math.cos( v ) ) * Math.sin( u );\r\n\t\t\tvertex.z = tube * Math.sin( v );\r\n\r\n\t\t\tthis.vertices.push( vertex );\r\n\r\n\t\t\tuvs.push( new THREE.Vector2( i / tubularSegments, j / radialSegments ) );\r\n\t\t\tnormals.push( vertex.clone().sub( center ).normalize() );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfor ( var j = 1; j <= radialSegments; j ++ ) {\r\n\r\n\t\tfor ( var i = 1; i <= tubularSegments; i ++ ) {\r\n\r\n\t\t\tvar a = ( tubularSegments + 1 ) * j + i - 1;\r\n\t\t\tvar b = ( tubularSegments + 1 ) * ( j - 1 ) + i - 1;\r\n\t\t\tvar c = ( tubularSegments + 1 ) * ( j - 1 ) + i;\r\n\t\t\tvar d = ( tubularSegments + 1 ) * j + i;\r\n\r\n\t\t\tvar face = new THREE.Face3( a, b, d, [ normals[ a ].clone(), normals[ b ].clone(), normals[ d ].clone() ] );\r\n\t\t\tthis.faces.push( face );\r\n\t\t\tthis.faceVertexUvs[ 0 ].push( [ uvs[ a ].clone(), uvs[ b ].clone(), uvs[ d ].clone() ] );\r\n\r\n\t\t\tface = new THREE.Face3( b, c, d, [ normals[ b ].clone(), normals[ c ].clone(), normals[ d ].clone() ] );\r\n\t\t\tthis.faces.push( face );\r\n\t\t\tthis.faceVertexUvs[ 0 ].push( [ uvs[ b ].clone(), uvs[ c ].clone(), uvs[ d ].clone() ] );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tthis.computeFaceNormals();\r\n\r\n};\r\n\r\nTHREE.TorusGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\nTHREE.TorusGeometry.prototype.constructor = THREE.TorusGeometry;\r\n\r\nTHREE.TorusGeometry.prototype.clone = function () {\r\n\r\n\tvar geometry = new THREE.TorusGeometry(\r\n\t\tthis.parameters.radius,\r\n\t\tthis.parameters.tube,\r\n\t\tthis.parameters.radialSegments,\r\n\t\tthis.parameters.tubularSegments,\r\n\t\tthis.parameters.arc\r\n\t);\r\n\r\n\treturn geometry;\r\n\r\n};\r\n\r\n// File:src/extras/geometries/TorusKnotGeometry.js\r\n\r\n/**\r\n * @author oosmoxiecode\r\n * based on http://code.google.com/p/away3d/source/browse/trunk/fp10/Away3D/src/away3d/primitives/TorusKnot.as?spec=svn2473&r=2473\r\n */\r\n\r\nTHREE.TorusKnotGeometry = function ( radius, tube, radialSegments, tubularSegments, p, q, heightScale ) {\r\n\r\n\tTHREE.Geometry.call( this );\r\n\r\n\tthis.type = 'TorusKnotGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\tradius: radius,\r\n\t\ttube: tube,\r\n\t\tradialSegments: radialSegments,\r\n\t\ttubularSegments: tubularSegments,\r\n\t\tp: p,\r\n\t\tq: q,\r\n\t\theightScale: heightScale\r\n\t};\r\n\r\n\tradius = radius || 100;\r\n\ttube = tube || 40;\r\n\tradialSegments = radialSegments || 64;\r\n\ttubularSegments = tubularSegments || 8;\r\n\tp = p || 2;\r\n\tq = q || 3;\r\n\theightScale = heightScale || 1;\r\n\r\n\tvar grid = new Array( radialSegments );\r\n\tvar tang = new THREE.Vector3();\r\n\tvar n = new THREE.Vector3();\r\n\tvar bitan = new THREE.Vector3();\r\n\r\n\tfor ( var i = 0; i < radialSegments; ++ i ) {\r\n\r\n\t\tgrid[ i ] = new Array( tubularSegments );\r\n\t\tvar u = i / radialSegments * 2 * p * Math.PI;\r\n\t\tvar p1 = getPos( u, q, p, radius, heightScale );\r\n\t\tvar p2 = getPos( u + 0.01, q, p, radius, heightScale );\r\n\t\ttang.subVectors( p2, p1 );\r\n\t\tn.addVectors( p2, p1 );\r\n\r\n\t\tbitan.crossVectors( tang, n );\r\n\t\tn.crossVectors( bitan, tang );\r\n\t\tbitan.normalize();\r\n\t\tn.normalize();\r\n\r\n\t\tfor ( var j = 0; j < tubularSegments; ++ j ) {\r\n\r\n\t\t\tvar v = j / tubularSegments * 2 * Math.PI;\r\n\t\t\tvar cx = - tube * Math.cos( v ); // TODO: Hack: Negating it so it faces outside.\r\n\t\t\tvar cy = tube * Math.sin( v );\r\n\r\n\t\t\tvar pos = new THREE.Vector3();\r\n\t\t\tpos.x = p1.x + cx * n.x + cy * bitan.x;\r\n\t\t\tpos.y = p1.y + cx * n.y + cy * bitan.y;\r\n\t\t\tpos.z = p1.z + cx * n.z + cy * bitan.z;\r\n\r\n\t\t\tgrid[ i ][ j ] = this.vertices.push( pos ) - 1;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfor ( var i = 0; i < radialSegments; ++ i ) {\r\n\r\n\t\tfor ( var j = 0; j < tubularSegments; ++ j ) {\r\n\r\n\t\t\tvar ip = ( i + 1 ) % radialSegments;\r\n\t\t\tvar jp = ( j + 1 ) % tubularSegments;\r\n\r\n\t\t\tvar a = grid[ i ][ j ];\r\n\t\t\tvar b = grid[ ip ][ j ];\r\n\t\t\tvar c = grid[ ip ][ jp ];\r\n\t\t\tvar d = grid[ i ][ jp ];\r\n\r\n\t\t\tvar uva = new THREE.Vector2( i / radialSegments, j / tubularSegments );\r\n\t\t\tvar uvb = new THREE.Vector2( ( i + 1 ) / radialSegments, j / tubularSegments );\r\n\t\t\tvar uvc = new THREE.Vector2( ( i + 1 ) / radialSegments, ( j + 1 ) / tubularSegments );\r\n\t\t\tvar uvd = new THREE.Vector2( i / radialSegments, ( j + 1 ) / tubularSegments );\r\n\r\n\t\t\tthis.faces.push( new THREE.Face3( a, b, d ) );\r\n\t\t\tthis.faceVertexUvs[ 0 ].push( [ uva, uvb, uvd ] );\r\n\r\n\t\t\tthis.faces.push( new THREE.Face3( b, c, d ) );\r\n\t\t\tthis.faceVertexUvs[ 0 ].push( [ uvb.clone(), uvc, uvd.clone() ] );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tthis.computeFaceNormals();\r\n\tthis.computeVertexNormals();\r\n\r\n\tfunction getPos( u, in_q, in_p, radius, heightScale ) {\r\n\r\n\t\tvar cu = Math.cos( u );\r\n\t\tvar su = Math.sin( u );\r\n\t\tvar quOverP = in_q / in_p * u;\r\n\t\tvar cs = Math.cos( quOverP );\r\n\r\n\t\tvar tx = radius * ( 2 + cs ) * 0.5 * cu;\r\n\t\tvar ty = radius * ( 2 + cs ) * su * 0.5;\r\n\t\tvar tz = heightScale * radius * Math.sin( quOverP ) * 0.5;\r\n\r\n\t\treturn new THREE.Vector3( tx, ty, tz );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.TorusKnotGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\nTHREE.TorusKnotGeometry.prototype.constructor = THREE.TorusKnotGeometry;\r\n\r\nTHREE.TorusKnotGeometry.prototype.clone = function () {\r\n\r\n\tvar geometry = new THREE.TorusKnotGeometry(\r\n\t\tthis.parameters.radius,\r\n\t\tthis.parameters.tube,\r\n\t\tthis.parameters.radialSegments,\r\n\t\tthis.parameters.tubularSegments,\r\n\t\tthis.parameters.p,\r\n\t\tthis.parameters.q,\r\n\t\tthis.parameters.heightScale\r\n\t);\r\n\r\n\treturn geometry;\r\n\r\n};\r\n\r\n// File:src/extras/geometries/TubeGeometry.js\r\n\r\n/**\r\n * @author WestLangley / https://github.com/WestLangley\r\n * @author zz85 / https://github.com/zz85\r\n * @author miningold / https://github.com/miningold\r\n * @author jonobr1 / https://github.com/jonobr1\r\n *\r\n * Modified from the TorusKnotGeometry by @oosmoxiecode\r\n *\r\n * Creates a tube which extrudes along a 3d spline\r\n *\r\n * Uses parallel transport frames as described in\r\n * http://www.cs.indiana.edu/pub/techreports/TR425.pdf\r\n */\r\n\r\nTHREE.TubeGeometry = function ( path, segments, radius, radialSegments, closed, taper ) {\r\n\r\n\tTHREE.Geometry.call( this );\r\n\r\n\tthis.type = 'TubeGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\tpath: path,\r\n\t\tsegments: segments,\r\n\t\tradius: radius,\r\n\t\tradialSegments: radialSegments,\r\n\t\tclosed: closed\r\n\t};\r\n\r\n\tsegments = segments || 64;\r\n\tradius = radius || 1;\r\n\tradialSegments = radialSegments || 8;\r\n\tclosed = closed || false;\r\n\ttaper = taper || THREE.TubeGeometry.NoTaper;\r\n\r\n\tvar grid = [];\r\n\r\n\tvar scope = this,\r\n\r\n\t\ttangent,\r\n\t\tnormal,\r\n\t\tbinormal,\r\n\r\n\t\tnumpoints = segments + 1,\r\n\r\n\t\tu, v, r,\r\n\r\n\t\tcx, cy,\r\n\t\tpos, pos2 = new THREE.Vector3(),\r\n\t\ti, j,\r\n\t\tip, jp,\r\n\t\ta, b, c, d,\r\n\t\tuva, uvb, uvc, uvd;\r\n\r\n\tvar frames = new THREE.TubeGeometry.FrenetFrames( path, segments, closed ),\r\n\t\ttangents = frames.tangents,\r\n\t\tnormals = frames.normals,\r\n\t\tbinormals = frames.binormals;\r\n\r\n\t// proxy internals\r\n\tthis.tangents = tangents;\r\n\tthis.normals = normals;\r\n\tthis.binormals = binormals;\r\n\r\n\tfunction vert( x, y, z ) {\r\n\r\n\t\treturn scope.vertices.push( new THREE.Vector3( x, y, z ) ) - 1;\r\n\r\n\t}\r\n\r\n\t// construct the grid\r\n\r\n\tfor ( i = 0; i < numpoints; i ++ ) {\r\n\r\n\t\tgrid[ i ] = [];\r\n\r\n\t\tu = i / ( numpoints - 1 );\r\n\r\n\t\tpos = path.getPointAt( u );\r\n\r\n\t\ttangent = tangents[ i ];\r\n\t\tnormal = normals[ i ];\r\n\t\tbinormal = binormals[ i ];\r\n\r\n\t\tr = radius * taper( u );\r\n\r\n\t\tfor ( j = 0; j < radialSegments; j ++ ) {\r\n\r\n\t\t\tv = j / radialSegments * 2 * Math.PI;\r\n\r\n\t\t\tcx = - r * Math.cos( v ); // TODO: Hack: Negating it so it faces outside.\r\n\t\t\tcy = r * Math.sin( v );\r\n\r\n\t\t\tpos2.copy( pos );\r\n\t\t\tpos2.x += cx * normal.x + cy * binormal.x;\r\n\t\t\tpos2.y += cx * normal.y + cy * binormal.y;\r\n\t\t\tpos2.z += cx * normal.z + cy * binormal.z;\r\n\r\n\t\t\tgrid[ i ][ j ] = vert( pos2.x, pos2.y, pos2.z );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\r\n\t// construct the mesh\r\n\r\n\tfor ( i = 0; i < segments; i ++ ) {\r\n\r\n\t\tfor ( j = 0; j < radialSegments; j ++ ) {\r\n\r\n\t\t\tip = ( closed ) ? ( i + 1 ) % segments : i + 1;\r\n\t\t\tjp = ( j + 1 ) % radialSegments;\r\n\r\n\t\t\ta = grid[ i ][ j ];\t\t// *** NOT NECESSARILY PLANAR ! ***\r\n\t\t\tb = grid[ ip ][ j ];\r\n\t\t\tc = grid[ ip ][ jp ];\r\n\t\t\td = grid[ i ][ jp ];\r\n\r\n\t\t\tuva = new THREE.Vector2( i / segments, j / radialSegments );\r\n\t\t\tuvb = new THREE.Vector2( ( i + 1 ) / segments, j / radialSegments );\r\n\t\t\tuvc = new THREE.Vector2( ( i + 1 ) / segments, ( j + 1 ) / radialSegments );\r\n\t\t\tuvd = new THREE.Vector2( i / segments, ( j + 1 ) / radialSegments );\r\n\r\n\t\t\tthis.faces.push( new THREE.Face3( a, b, d ) );\r\n\t\t\tthis.faceVertexUvs[ 0 ].push( [ uva, uvb, uvd ] );\r\n\r\n\t\t\tthis.faces.push( new THREE.Face3( b, c, d ) );\r\n\t\t\tthis.faceVertexUvs[ 0 ].push( [ uvb.clone(), uvc, uvd.clone() ] );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tthis.computeFaceNormals();\r\n\tthis.computeVertexNormals();\r\n\r\n};\r\n\r\nTHREE.TubeGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\nTHREE.TubeGeometry.prototype.constructor = THREE.TubeGeometry;\r\n\r\nTHREE.TubeGeometry.NoTaper = function ( u ) {\r\n\r\n\treturn 1;\r\n\r\n};\r\n\r\nTHREE.TubeGeometry.SinusoidalTaper = function ( u ) {\r\n\r\n\treturn Math.sin( Math.PI * u );\r\n\r\n};\r\n\r\n// For computing of Frenet frames, exposing the tangents, normals and binormals the spline\r\nTHREE.TubeGeometry.FrenetFrames = function ( path, segments, closed ) {\r\n\r\n\tvar\tnormal = new THREE.Vector3(),\r\n\r\n\t\ttangents = [],\r\n\t\tnormals = [],\r\n\t\tbinormals = [],\r\n\r\n\t\tvec = new THREE.Vector3(),\r\n\t\tmat = new THREE.Matrix4(),\r\n\r\n\t\tnumpoints = segments + 1,\r\n\t\ttheta,\r\n\t\tepsilon = 0.0001,\r\n\t\tsmallest,\r\n\r\n\t\ttx, ty, tz,\r\n\t\ti, u;\r\n\r\n\r\n\t// expose internals\r\n\tthis.tangents = tangents;\r\n\tthis.normals = normals;\r\n\tthis.binormals = binormals;\r\n\r\n\t// compute the tangent vectors for each segment on the path\r\n\r\n\tfor ( i = 0; i < numpoints; i ++ ) {\r\n\r\n\t\tu = i / ( numpoints - 1 );\r\n\r\n\t\ttangents[ i ] = path.getTangentAt( u );\r\n\t\ttangents[ i ].normalize();\r\n\r\n\t}\r\n\r\n\tinitialNormal3();\r\n\r\n\t/*\r\n\tfunction initialNormal1(lastBinormal) {\r\n\t\t// fixed start binormal. Has dangers of 0 vectors\r\n\t\tnormals[ 0 ] = new THREE.Vector3();\r\n\t\tbinormals[ 0 ] = new THREE.Vector3();\r\n\t\tif (lastBinormal===undefined) lastBinormal = new THREE.Vector3( 0, 0, 1 );\r\n\t\tnormals[ 0 ].crossVectors( lastBinormal, tangents[ 0 ] ).normalize();\r\n\t\tbinormals[ 0 ].crossVectors( tangents[ 0 ], normals[ 0 ] ).normalize();\r\n\t}\r\n\r\n\tfunction initialNormal2() {\r\n\r\n\t\t// This uses the Frenet-Serret formula for deriving binormal\r\n\t\tvar t2 = path.getTangentAt( epsilon );\r\n\r\n\t\tnormals[ 0 ] = new THREE.Vector3().subVectors( t2, tangents[ 0 ] ).normalize();\r\n\t\tbinormals[ 0 ] = new THREE.Vector3().crossVectors( tangents[ 0 ], normals[ 0 ] );\r\n\r\n\t\tnormals[ 0 ].crossVectors( binormals[ 0 ], tangents[ 0 ] ).normalize(); // last binormal x tangent\r\n\t\tbinormals[ 0 ].crossVectors( tangents[ 0 ], normals[ 0 ] ).normalize();\r\n\r\n\t}\r\n\t*/\r\n\r\n\tfunction initialNormal3() {\r\n\r\n\t\t// select an initial normal vector perpendicular to the first tangent vector,\r\n\t\t// and in the direction of the smallest tangent xyz component\r\n\r\n\t\tnormals[ 0 ] = new THREE.Vector3();\r\n\t\tbinormals[ 0 ] = new THREE.Vector3();\r\n\t\tsmallest = Number.MAX_VALUE;\r\n\t\ttx = Math.abs( tangents[ 0 ].x );\r\n\t\tty = Math.abs( tangents[ 0 ].y );\r\n\t\ttz = Math.abs( tangents[ 0 ].z );\r\n\r\n\t\tif ( tx <= smallest ) {\r\n\r\n\t\t\tsmallest = tx;\r\n\t\t\tnormal.set( 1, 0, 0 );\r\n\r\n\t\t}\r\n\r\n\t\tif ( ty <= smallest ) {\r\n\r\n\t\t\tsmallest = ty;\r\n\t\t\tnormal.set( 0, 1, 0 );\r\n\r\n\t\t}\r\n\r\n\t\tif ( tz <= smallest ) {\r\n\r\n\t\t\tnormal.set( 0, 0, 1 );\r\n\r\n\t\t}\r\n\r\n\t\tvec.crossVectors( tangents[ 0 ], normal ).normalize();\r\n\r\n\t\tnormals[ 0 ].crossVectors( tangents[ 0 ], vec );\r\n\t\tbinormals[ 0 ].crossVectors( tangents[ 0 ], normals[ 0 ] );\r\n\r\n\t}\r\n\r\n\r\n\t// compute the slowly-varying normal and binormal vectors for each segment on the path\r\n\r\n\tfor ( i = 1; i < numpoints; i ++ ) {\r\n\r\n\t\tnormals[ i ] = normals[ i - 1 ].clone();\r\n\r\n\t\tbinormals[ i ] = binormals[ i - 1 ].clone();\r\n\r\n\t\tvec.crossVectors( tangents[ i - 1 ], tangents[ i ] );\r\n\r\n\t\tif ( vec.length() > epsilon ) {\r\n\r\n\t\t\tvec.normalize();\r\n\r\n\t\t\ttheta = Math.acos( THREE.Math.clamp( tangents[ i - 1 ].dot( tangents[ i ] ), - 1, 1 ) ); // clamp for floating pt errors\r\n\r\n\t\t\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( vec, theta ) );\r\n\r\n\t\t}\r\n\r\n\t\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\r\n\r\n\t}\r\n\r\n\r\n\t// if the curve is closed, postprocess the vectors so the first and last normal vectors are the same\r\n\r\n\tif ( closed ) {\r\n\r\n\t\ttheta = Math.acos( THREE.Math.clamp( normals[ 0 ].dot( normals[ numpoints - 1 ] ), - 1, 1 ) );\r\n\t\ttheta /= ( numpoints - 1 );\r\n\r\n\t\tif ( tangents[ 0 ].dot( vec.crossVectors( normals[ 0 ], normals[ numpoints - 1 ] ) ) > 0 ) {\r\n\r\n\t\t\ttheta = - theta;\r\n\r\n\t\t}\r\n\r\n\t\tfor ( i = 1; i < numpoints; i ++ ) {\r\n\r\n\t\t\t// twist a little...\r\n\t\t\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( tangents[ i ], theta * i ) );\r\n\t\t\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/extras/geometries/PolyhedronGeometry.js\r\n\r\n/**\r\n * @author clockworkgeek / https://github.com/clockworkgeek\r\n * @author timothypratley / https://github.com/timothypratley\r\n * @author WestLangley / http://github.com/WestLangley\r\n*/\r\n\r\nTHREE.PolyhedronGeometry = function ( vertices, indices, radius, detail ) {\r\n\r\n\tTHREE.Geometry.call( this );\r\n\r\n\tthis.type = 'PolyhedronGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\tvertices: vertices,\r\n\t\tindices: indices,\r\n\t\tradius: radius,\r\n\t\tdetail: detail\r\n\t};\r\n\r\n\tradius = radius || 1;\r\n\tdetail = detail || 0;\r\n\r\n\tvar that = this;\r\n\r\n\tfor ( var i = 0, l = vertices.length; i < l; i += 3 ) {\r\n\r\n\t\tprepare( new THREE.Vector3( vertices[ i ], vertices[ i + 1 ], vertices[ i + 2 ] ) );\r\n\r\n\t}\r\n\r\n\tvar p = this.vertices;\r\n\r\n\tvar faces = [];\r\n\r\n\tfor ( var i = 0, j = 0, l = indices.length; i < l; i += 3, j ++ ) {\r\n\r\n\t\tvar v1 = p[ indices[ i ] ];\r\n\t\tvar v2 = p[ indices[ i + 1 ] ];\r\n\t\tvar v3 = p[ indices[ i + 2 ] ];\r\n\r\n\t\tfaces[ j ] = new THREE.Face3( v1.index, v2.index, v3.index, [ v1.clone(), v2.clone(), v3.clone() ], undefined, j );\r\n\r\n\t}\r\n\r\n\tvar centroid = new THREE.Vector3();\r\n\r\n\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\r\n\r\n\t\tsubdivide( faces[ i ], detail );\r\n\r\n\t}\r\n\r\n\r\n\t// Handle case when face straddles the seam\r\n\r\n\tfor ( var i = 0, l = this.faceVertexUvs[ 0 ].length; i < l; i ++ ) {\r\n\r\n\t\tvar uvs = this.faceVertexUvs[ 0 ][ i ];\r\n\r\n\t\tvar x0 = uvs[ 0 ].x;\r\n\t\tvar x1 = uvs[ 1 ].x;\r\n\t\tvar x2 = uvs[ 2 ].x;\r\n\r\n\t\tvar max = Math.max( x0, Math.max( x1, x2 ) );\r\n\t\tvar min = Math.min( x0, Math.min( x1, x2 ) );\r\n\r\n\t\tif ( max > 0.9 && min < 0.1 ) {\r\n\r\n\t\t\t// 0.9 is somewhat arbitrary\r\n\r\n\t\t\tif ( x0 < 0.2 ) uvs[ 0 ].x += 1;\r\n\t\t\tif ( x1 < 0.2 ) uvs[ 1 ].x += 1;\r\n\t\t\tif ( x2 < 0.2 ) uvs[ 2 ].x += 1;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\r\n\t// Apply radius\r\n\r\n\tfor ( var i = 0, l = this.vertices.length; i < l; i ++ ) {\r\n\r\n\t\tthis.vertices[ i ].multiplyScalar( radius );\r\n\r\n\t}\r\n\r\n\r\n\t// Merge vertices\r\n\r\n\tthis.mergeVertices();\r\n\r\n\tthis.computeFaceNormals();\r\n\r\n\tthis.boundingSphere = new THREE.Sphere( new THREE.Vector3(), radius );\r\n\r\n\r\n\t// Project vector onto sphere's surface\r\n\r\n\tfunction prepare( vector ) {\r\n\r\n\t\tvar vertex = vector.normalize().clone();\r\n\t\tvertex.index = that.vertices.push( vertex ) - 1;\r\n\r\n\t\t// Texture coords are equivalent to map coords, calculate angle and convert to fraction of a circle.\r\n\r\n\t\tvar u = azimuth( vector ) / 2 / Math.PI + 0.5;\r\n\t\tvar v = inclination( vector ) / Math.PI + 0.5;\r\n\t\tvertex.uv = new THREE.Vector2( u, 1 - v );\r\n\r\n\t\treturn vertex;\r\n\r\n\t}\r\n\r\n\r\n\t// Approximate a curved face with recursively sub-divided triangles.\r\n\r\n\tfunction make( v1, v2, v3, materialIndex ) {\r\n\r\n\t\tvar face = new THREE.Face3( v1.index, v2.index, v3.index, [ v1.clone(), v2.clone(), v3.clone() ], undefined, materialIndex );\r\n\t\tthat.faces.push( face );\r\n\r\n\t\tcentroid.copy( v1 ).add( v2 ).add( v3 ).divideScalar( 3 );\r\n\r\n\t\tvar azi = azimuth( centroid );\r\n\r\n\t\tthat.faceVertexUvs[ 0 ].push( [\r\n\t\t\tcorrectUV( v1.uv, v1, azi ),\r\n\t\t\tcorrectUV( v2.uv, v2, azi ),\r\n\t\t\tcorrectUV( v3.uv, v3, azi )\r\n\t\t] );\r\n\r\n\t}\r\n\r\n\r\n\t// Analytically subdivide a face to the required detail level.\r\n\r\n\tfunction subdivide( face, detail ) {\r\n\r\n\t\tvar cols = Math.pow( 2, detail );\r\n\t\tvar a = prepare( that.vertices[ face.a ] );\r\n\t\tvar b = prepare( that.vertices[ face.b ] );\r\n\t\tvar c = prepare( that.vertices[ face.c ] );\r\n\t\tvar v = [];\r\n\r\n\t\tvar materialIndex = face.materialIndex;\r\n\r\n\t\t// Construct all of the vertices for this subdivision.\r\n\r\n\t\tfor ( var i = 0 ; i <= cols; i ++ ) {\r\n\r\n\t\t\tv[ i ] = [];\r\n\r\n\t\t\tvar aj = prepare( a.clone().lerp( c, i / cols ) );\r\n\t\t\tvar bj = prepare( b.clone().lerp( c, i / cols ) );\r\n\t\t\tvar rows = cols - i;\r\n\r\n\t\t\tfor ( var j = 0; j <= rows; j ++ ) {\r\n\r\n\t\t\t\tif ( j === 0 && i === cols ) {\r\n\r\n\t\t\t\t\tv[ i ][ j ] = aj;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tv[ i ][ j ] = prepare( aj.clone().lerp( bj, j / rows ) );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// Construct all of the faces.\r\n\r\n\t\tfor ( var i = 0; i < cols ; i ++ ) {\r\n\r\n\t\t\tfor ( var j = 0; j < 2 * ( cols - i ) - 1; j ++ ) {\r\n\r\n\t\t\t\tvar k = Math.floor( j / 2 );\r\n\r\n\t\t\t\tif ( j % 2 === 0 ) {\r\n\r\n\t\t\t\t\tmake(\r\n\t\t\t\t\t\tv[ i ][ k + 1 ],\r\n\t\t\t\t\t\tv[ i + 1 ][ k ],\r\n\t\t\t\t\t\tv[ i ][ k ],\r\n\t\t\t\t\t\tmaterialIndex\r\n\t\t\t\t\t);\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tmake(\r\n\t\t\t\t\t\tv[ i ][ k + 1 ],\r\n\t\t\t\t\t\tv[ i + 1 ][ k + 1 ],\r\n\t\t\t\t\t\tv[ i + 1 ][ k ],\r\n\t\t\t\t\t\tmaterialIndex\r\n\t\t\t\t\t);\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\r\n\t// Angle around the Y axis, counter-clockwise when looking from above.\r\n\r\n\tfunction azimuth( vector ) {\r\n\r\n\t\treturn Math.atan2( vector.z, - vector.x );\r\n\r\n\t}\r\n\r\n\r\n\t// Angle above the XZ plane.\r\n\r\n\tfunction inclination( vector ) {\r\n\r\n\t\treturn Math.atan2( - vector.y, Math.sqrt( ( vector.x * vector.x ) + ( vector.z * vector.z ) ) );\r\n\r\n\t}\r\n\r\n\r\n\t// Texture fixing helper. Spheres have some odd behaviours.\r\n\r\n\tfunction correctUV( uv, vector, azimuth ) {\r\n\r\n\t\tif ( ( azimuth < 0 ) && ( uv.x === 1 ) ) uv = new THREE.Vector2( uv.x - 1, uv.y );\r\n\t\tif ( ( vector.x === 0 ) && ( vector.z === 0 ) ) uv = new THREE.Vector2( azimuth / 2 / Math.PI + 0.5, uv.y );\r\n\t\treturn uv.clone();\r\n\r\n\t}\r\n\r\n\r\n};\r\n\r\nTHREE.PolyhedronGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\nTHREE.PolyhedronGeometry.prototype.constructor = THREE.PolyhedronGeometry;\r\n\r\nTHREE.PolyhedronGeometry.prototype.clone = function () {\r\n\r\n\tvar geometry = new THREE.PolyhedronGeometry(\r\n\t\tthis.parameters.vertices,\r\n\t\tthis.parameters.indices,\r\n\t\tthis.parameters.radius,\r\n\t\tthis.parameters.detail\r\n\t);\r\n\r\n\treturn geometry.copy( this );\r\n\r\n};\r\n\r\nTHREE.PolyhedronGeometry.prototype.copy = function ( source ) {\r\n\r\n\tTHREE.Geometry.prototype.copy.call( this, source );\r\n\treturn this;\r\n\r\n};\r\n\r\n// File:src/extras/geometries/DodecahedronGeometry.js\r\n\r\n/**\r\n * @author Abe Pazos / https://hamoid.com\r\n */\r\n\r\nTHREE.DodecahedronGeometry = function ( radius, detail ) {\r\n\r\n\tvar t = ( 1 + Math.sqrt( 5 ) ) / 2;\r\n\tvar r = 1 / t;\r\n\r\n\tvar vertices = [\r\n\r\n\t\t// (±1, ±1, ±1)\r\n\t\t- 1, - 1, - 1,    - 1, - 1,  1,\r\n\t\t- 1,  1, - 1,    - 1,  1,  1,\r\n\t\t 1, - 1, - 1,     1, - 1,  1,\r\n\t\t 1,  1, - 1,     1,  1,  1,\r\n\r\n\t\t// (0, ±1/φ, ±φ)\r\n\t\t 0, - r, - t,     0, - r,  t,\r\n\t\t 0,  r, - t,     0,  r,  t,\r\n\r\n\t\t// (±1/φ, ±φ, 0)\r\n\t\t- r, - t,  0,    - r,  t,  0,\r\n\t\t r, - t,  0,     r,  t,  0,\r\n\r\n\t\t// (±φ, 0, ±1/φ)\r\n\t\t- t,  0, - r,     t,  0, - r,\r\n\t\t- t,  0,  r,     t,  0,  r\r\n\t];\r\n\r\n\tvar indices = [\r\n\t\t 3, 11,  7,      3,  7, 15,      3, 15, 13,\r\n\t\t 7, 19, 17,      7, 17,  6,      7,  6, 15,\r\n\t\t17,  4,  8,     17,  8, 10,     17, 10,  6,\r\n\t\t 8,  0, 16,      8, 16,  2,      8,  2, 10,\r\n\t\t 0, 12,  1,      0,  1, 18,      0, 18, 16,\r\n\t\t 6, 10,  2,      6,  2, 13,      6, 13, 15,\r\n\t\t 2, 16, 18,      2, 18,  3,      2,  3, 13,\r\n\t\t18,  1,  9,     18,  9, 11,     18, 11,  3,\r\n\t\t 4, 14, 12,      4, 12,  0,      4,  0,  8,\r\n\t\t11,  9,  5,     11,  5, 19,     11, 19,  7,\r\n\t\t19,  5, 14,     19, 14,  4,     19,  4, 17,\r\n\t\t 1, 12, 14,      1, 14,  5,      1,  5,  9\r\n\t];\r\n\r\n\tTHREE.PolyhedronGeometry.call( this, vertices, indices, radius, detail );\r\n\r\n\tthis.type = 'DodecahedronGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\tradius: radius,\r\n\t\tdetail: detail\r\n\t};\r\n\r\n};\r\n\r\nTHREE.DodecahedronGeometry.prototype = Object.create( THREE.PolyhedronGeometry.prototype );\r\nTHREE.DodecahedronGeometry.prototype.constructor = THREE.DodecahedronGeometry;\r\n\r\nTHREE.DodecahedronGeometry.prototype.clone = function () {\r\n\r\n\tvar geometry = new THREE.DodecahedronGeometry(\r\n\t\tthis.parameters.radius,\r\n\t\tthis.parameters.detail\r\n\t);\r\n\r\n\tgeometry.copy( this );\r\n\r\n\treturn geometry;\r\n\r\n};\r\n\r\n// File:src/extras/geometries/IcosahedronGeometry.js\r\n\r\n/**\r\n * @author timothypratley / https://github.com/timothypratley\r\n */\r\n\r\nTHREE.IcosahedronGeometry = function ( radius, detail ) {\r\n\r\n\tvar t = ( 1 + Math.sqrt( 5 ) ) / 2;\r\n\r\n\tvar vertices = [\r\n\t\t- 1,  t,  0,    1,  t,  0,   - 1, - t,  0,    1, - t,  0,\r\n\t\t 0, - 1,  t,    0,  1,  t,    0, - 1, - t,    0,  1, - t,\r\n\t\t t,  0, - 1,    t,  0,  1,   - t,  0, - 1,   - t,  0,  1\r\n\t];\r\n\r\n\tvar indices = [\r\n\t\t 0, 11,  5,    0,  5,  1,    0,  1,  7,    0,  7, 10,    0, 10, 11,\r\n\t\t 1,  5,  9,    5, 11,  4,   11, 10,  2,   10,  7,  6,    7,  1,  8,\r\n\t\t 3,  9,  4,    3,  4,  2,    3,  2,  6,    3,  6,  8,    3,  8,  9,\r\n\t\t 4,  9,  5,    2,  4, 11,    6,  2, 10,    8,  6,  7,    9,  8,  1\r\n\t];\r\n\r\n\tTHREE.PolyhedronGeometry.call( this, vertices, indices, radius, detail );\r\n\r\n\tthis.type = 'IcosahedronGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\tradius: radius,\r\n\t\tdetail: detail\r\n\t};\r\n\r\n};\r\n\r\nTHREE.IcosahedronGeometry.prototype = Object.create( THREE.PolyhedronGeometry.prototype );\r\nTHREE.IcosahedronGeometry.prototype.constructor = THREE.IcosahedronGeometry;\r\n\r\nTHREE.IcosahedronGeometry.prototype.clone = function () {\r\n\r\n\tvar geometry = new THREE.IcosahedronGeometry(\r\n\t\tthis.parameters.radius,\r\n\t\tthis.parameters.detail\r\n\t);\r\n\r\n\tgeometry.copy( this );\r\n\r\n\treturn geometry;\r\n\r\n};\r\n\r\n// File:src/extras/geometries/OctahedronGeometry.js\r\n\r\n/**\r\n * @author timothypratley / https://github.com/timothypratley\r\n */\r\n\r\nTHREE.OctahedronGeometry = function ( radius, detail ) {\r\n\r\n\tvar vertices = [\r\n\t\t1, 0, 0,   - 1, 0, 0,    0, 1, 0,    0, - 1, 0,    0, 0, 1,    0, 0, - 1\r\n\t];\r\n\r\n\tvar indices = [\r\n\t\t0, 2, 4,    0, 4, 3,    0, 3, 5,    0, 5, 2,    1, 2, 5,    1, 5, 3,    1, 3, 4,    1, 4, 2\r\n\t];\r\n\r\n\tTHREE.PolyhedronGeometry.call( this, vertices, indices, radius, detail );\r\n\r\n\tthis.type = 'OctahedronGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\tradius: radius,\r\n\t\tdetail: detail\r\n\t};\r\n\r\n};\r\n\r\nTHREE.OctahedronGeometry.prototype = Object.create( THREE.PolyhedronGeometry.prototype );\r\nTHREE.OctahedronGeometry.prototype.constructor = THREE.OctahedronGeometry;\r\n\r\nTHREE.OctahedronGeometry.prototype.clone = function () {\r\n\r\n\tvar geometry = new THREE.OctahedronGeometry(\r\n\t\tthis.parameters.radius,\r\n\t\tthis.parameters.detail\r\n\t);\r\n\r\n\tgeometry.copy( this );\r\n\r\n\treturn geometry;\r\n\r\n};\r\n\r\n// File:src/extras/geometries/TetrahedronGeometry.js\r\n\r\n/**\r\n * @author timothypratley / https://github.com/timothypratley\r\n */\r\n\r\nTHREE.TetrahedronGeometry = function ( radius, detail ) {\r\n\r\n\tvar vertices = [\r\n\t\t 1,  1,  1,   - 1, - 1,  1,   - 1,  1, - 1,    1, - 1, - 1\r\n\t];\r\n\r\n\tvar indices = [\r\n\t\t 2,  1,  0,    0,  3,  2,    1,  3,  0,    2,  3,  1\r\n\t];\r\n\r\n\tTHREE.PolyhedronGeometry.call( this, vertices, indices, radius, detail );\r\n\r\n\tthis.type = 'TetrahedronGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\tradius: radius,\r\n\t\tdetail: detail\r\n\t};\r\n\r\n};\r\n\r\nTHREE.TetrahedronGeometry.prototype = Object.create( THREE.PolyhedronGeometry.prototype );\r\nTHREE.TetrahedronGeometry.prototype.constructor = THREE.TetrahedronGeometry;\r\n\r\nTHREE.TetrahedronGeometry.prototype.clone = function () {\r\n\r\n\tvar geometry = new THREE.TetrahedronGeometry(\r\n\t\tthis.parameters.radius,\r\n\t\tthis.parameters.detail\r\n\t);\r\n\r\n\tgeometry.copy( this );\r\n\r\n\treturn geometry;\r\n\r\n};\r\n\r\n// File:src/extras/geometries/ParametricGeometry.js\r\n\r\n/**\r\n * @author zz85 / https://github.com/zz85\r\n * Parametric Surfaces Geometry\r\n * based on the brilliant article by @prideout http://prideout.net/blog/?p=44\r\n *\r\n * new THREE.ParametricGeometry( parametricFunction, uSegments, ySegements );\r\n *\r\n */\r\n\r\nTHREE.ParametricGeometry = function ( func, slices, stacks ) {\r\n\r\n\tTHREE.Geometry.call( this );\r\n\r\n\tthis.type = 'ParametricGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\tfunc: func,\r\n\t\tslices: slices,\r\n\t\tstacks: stacks\r\n\t};\r\n\r\n\tvar verts = this.vertices;\r\n\tvar faces = this.faces;\r\n\tvar uvs = this.faceVertexUvs[ 0 ];\r\n\r\n\tvar i, j, p;\r\n\tvar u, v;\r\n\r\n\tvar sliceCount = slices + 1;\r\n\r\n\tfor ( i = 0; i <= stacks; i ++ ) {\r\n\r\n\t\tv = i / stacks;\r\n\r\n\t\tfor ( j = 0; j <= slices; j ++ ) {\r\n\r\n\t\t\tu = j / slices;\r\n\r\n\t\t\tp = func( u, v );\r\n\t\t\tverts.push( p );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tvar a, b, c, d;\r\n\tvar uva, uvb, uvc, uvd;\r\n\r\n\tfor ( i = 0; i < stacks; i ++ ) {\r\n\r\n\t\tfor ( j = 0; j < slices; j ++ ) {\r\n\r\n\t\t\ta = i * sliceCount + j;\r\n\t\t\tb = i * sliceCount + j + 1;\r\n\t\t\tc = ( i + 1 ) * sliceCount + j + 1;\r\n\t\t\td = ( i + 1 ) * sliceCount + j;\r\n\r\n\t\t\tuva = new THREE.Vector2( j / slices, i / stacks );\r\n\t\t\tuvb = new THREE.Vector2( ( j + 1 ) / slices, i / stacks );\r\n\t\t\tuvc = new THREE.Vector2( ( j + 1 ) / slices, ( i + 1 ) / stacks );\r\n\t\t\tuvd = new THREE.Vector2( j / slices, ( i + 1 ) / stacks );\r\n\r\n\t\t\tfaces.push( new THREE.Face3( a, b, d ) );\r\n\t\t\tuvs.push( [ uva, uvb, uvd ] );\r\n\r\n\t\t\tfaces.push( new THREE.Face3( b, c, d ) );\r\n\t\t\tuvs.push( [ uvb.clone(), uvc, uvd.clone() ] );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// console.log(this);\r\n\r\n\t// magic bullet\r\n\t// var diff = this.mergeVertices();\r\n\t// console.log('removed ', diff, ' vertices by merging');\r\n\r\n\tthis.computeFaceNormals();\r\n\tthis.computeVertexNormals();\r\n\r\n};\r\n\r\nTHREE.ParametricGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\nTHREE.ParametricGeometry.prototype.constructor = THREE.ParametricGeometry;\r\n\r\n// File:src/extras/geometries/WireframeGeometry.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.WireframeGeometry = function ( geometry ) {\r\n\r\n\tTHREE.BufferGeometry.call( this );\r\n\r\n\tvar edge = [ 0, 0 ], hash = {};\r\n\tvar sortFunction = function ( a, b ) {\r\n\r\n\t\treturn a - b;\r\n\r\n\t};\r\n\r\n\tvar keys = [ 'a', 'b', 'c' ];\r\n\r\n\tif ( geometry instanceof THREE.Geometry ) {\r\n\r\n\t\tvar vertices = geometry.vertices;\r\n\t\tvar faces = geometry.faces;\r\n\t\tvar numEdges = 0;\r\n\r\n\t\t// allocate maximal size\r\n\t\tvar edges = new Uint32Array( 6 * faces.length );\r\n\r\n\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\r\n\r\n\t\t\tvar face = faces[ i ];\r\n\r\n\t\t\tfor ( var j = 0; j < 3; j ++ ) {\r\n\r\n\t\t\t\tedge[ 0 ] = face[ keys[ j ] ];\r\n\t\t\t\tedge[ 1 ] = face[ keys[ ( j + 1 ) % 3 ] ];\r\n\t\t\t\tedge.sort( sortFunction );\r\n\r\n\t\t\t\tvar key = edge.toString();\r\n\r\n\t\t\t\tif ( hash[ key ] === undefined ) {\r\n\r\n\t\t\t\t\tedges[ 2 * numEdges ] = edge[ 0 ];\r\n\t\t\t\t\tedges[ 2 * numEdges + 1 ] = edge[ 1 ];\r\n\t\t\t\t\thash[ key ] = true;\r\n\t\t\t\t\tnumEdges ++;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tvar coords = new Float32Array( numEdges * 2 * 3 );\r\n\r\n\t\tfor ( var i = 0, l = numEdges; i < l; i ++ ) {\r\n\r\n\t\t\tfor ( var j = 0; j < 2; j ++ ) {\r\n\r\n\t\t\t\tvar vertex = vertices[ edges [ 2 * i + j ] ];\r\n\r\n\t\t\t\tvar index = 6 * i + 3 * j;\r\n\t\t\t\tcoords[ index + 0 ] = vertex.x;\r\n\t\t\t\tcoords[ index + 1 ] = vertex.y;\r\n\t\t\t\tcoords[ index + 2 ] = vertex.z;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tthis.addAttribute( 'position', new THREE.BufferAttribute( coords, 3 ) );\r\n\r\n\t} else if ( geometry instanceof THREE.BufferGeometry ) {\r\n\r\n\t\tif ( geometry.index !== null ) {\r\n\r\n\t\t\t// Indexed BufferGeometry\r\n\r\n\t\t\tvar indices = geometry.index.array;\r\n\t\t\tvar vertices = geometry.attributes.position;\r\n\t\t\tvar drawcalls = geometry.drawcalls;\r\n\t\t\tvar numEdges = 0;\r\n\r\n\t\t\tif ( drawcalls.length === 0 ) {\r\n\r\n\t\t\t\tgeometry.addDrawCall( 0, indices.length );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// allocate maximal size\r\n\t\t\tvar edges = new Uint32Array( 2 * indices.length );\r\n\r\n\t\t\tfor ( var o = 0, ol = drawcalls.length; o < ol; ++ o ) {\r\n\r\n\t\t\t\tvar drawcall = drawcalls[ o ];\r\n\r\n\t\t\t\tvar start = drawcall.start;\r\n\t\t\t\tvar count = drawcall.count;\r\n\r\n\t\t\t\tfor ( var i = start, il = start + count; i < il; i += 3 ) {\r\n\r\n\t\t\t\t\tfor ( var j = 0; j < 3; j ++ ) {\r\n\r\n\t\t\t\t\t\tedge[ 0 ] = indices[ i + j ];\r\n\t\t\t\t\t\tedge[ 1 ] = indices[ i + ( j + 1 ) % 3 ];\r\n\t\t\t\t\t\tedge.sort( sortFunction );\r\n\r\n\t\t\t\t\t\tvar key = edge.toString();\r\n\r\n\t\t\t\t\t\tif ( hash[ key ] === undefined ) {\r\n\r\n\t\t\t\t\t\t\tedges[ 2 * numEdges ] = edge[ 0 ];\r\n\t\t\t\t\t\t\tedges[ 2 * numEdges + 1 ] = edge[ 1 ];\r\n\t\t\t\t\t\t\thash[ key ] = true;\r\n\t\t\t\t\t\t\tnumEdges ++;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar coords = new Float32Array( numEdges * 2 * 3 );\r\n\r\n\t\t\tfor ( var i = 0, l = numEdges; i < l; i ++ ) {\r\n\r\n\t\t\t\tfor ( var j = 0; j < 2; j ++ ) {\r\n\r\n\t\t\t\t\tvar index = 6 * i + 3 * j;\r\n\t\t\t\t\tvar index2 = edges[ 2 * i + j ];\r\n\r\n\t\t\t\t\tcoords[ index + 0 ] = vertices.getX( index2 );\r\n\t\t\t\t\tcoords[ index + 1 ] = vertices.getY( index2 );\r\n\t\t\t\t\tcoords[ index + 2 ] = vertices.getZ( index2 );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.addAttribute( 'position', new THREE.BufferAttribute( coords, 3 ) );\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// non-indexed BufferGeometry\r\n\r\n\t\t\tvar vertices = geometry.attributes.position.array;\r\n\t\t\tvar numEdges = vertices.length / 3;\r\n\t\t\tvar numTris = numEdges / 3;\r\n\r\n\t\t\tvar coords = new Float32Array( numEdges * 2 * 3 );\r\n\r\n\t\t\tfor ( var i = 0, l = numTris; i < l; i ++ ) {\r\n\r\n\t\t\t\tfor ( var j = 0; j < 3; j ++ ) {\r\n\r\n\t\t\t\t\tvar index = 18 * i + 6 * j;\r\n\r\n\t\t\t\t\tvar index1 = 9 * i + 3 * j;\r\n\t\t\t\t\tcoords[ index + 0 ] = vertices[ index1 ];\r\n\t\t\t\t\tcoords[ index + 1 ] = vertices[ index1 + 1 ];\r\n\t\t\t\t\tcoords[ index + 2 ] = vertices[ index1 + 2 ];\r\n\r\n\t\t\t\t\tvar index2 = 9 * i + 3 * ( ( j + 1 ) % 3 );\r\n\t\t\t\t\tcoords[ index + 3 ] = vertices[ index2 ];\r\n\t\t\t\t\tcoords[ index + 4 ] = vertices[ index2 + 1 ];\r\n\t\t\t\t\tcoords[ index + 5 ] = vertices[ index2 + 2 ];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.addAttribute( 'position', new THREE.BufferAttribute( coords, 3 ) );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.WireframeGeometry.prototype = Object.create( THREE.BufferGeometry.prototype );\r\nTHREE.WireframeGeometry.prototype.constructor = THREE.WireframeGeometry;\r\n\r\n// File:src/extras/helpers/AxisHelper.js\r\n\r\n/**\r\n * @author sroucheray / http://sroucheray.org/\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.AxisHelper = function ( size ) {\r\n\r\n\tsize = size || 1;\r\n\r\n\tvar vertices = new Float32Array( [\r\n\t\t0, 0, 0,  size, 0, 0,\r\n\t\t0, 0, 0,  0, size, 0,\r\n\t\t0, 0, 0,  0, 0, size\r\n\t] );\r\n\r\n\tvar colors = new Float32Array( [\r\n\t\t1, 0, 0,  1, 0.6, 0,\r\n\t\t0, 1, 0,  0.6, 1, 0,\r\n\t\t0, 0, 1,  0, 0.6, 1\r\n\t] );\r\n\r\n\tvar geometry = new THREE.BufferGeometry();\r\n\tgeometry.addAttribute( 'position', new THREE.BufferAttribute( vertices, 3 ) );\r\n\tgeometry.addAttribute( 'color', new THREE.BufferAttribute( colors, 3 ) );\r\n\r\n\tvar material = new THREE.LineBasicMaterial( { vertexColors: THREE.VertexColors } );\r\n\r\n\tTHREE.LineSegments.call( this, geometry, material );\r\n\r\n};\r\n\r\nTHREE.AxisHelper.prototype = Object.create( THREE.LineSegments.prototype );\r\nTHREE.AxisHelper.prototype.constructor = THREE.AxisHelper;\r\n\r\n// File:src/extras/helpers/ArrowHelper.js\r\n\r\n/**\r\n * @author WestLangley / http://github.com/WestLangley\r\n * @author zz85 / http://github.com/zz85\r\n * @author bhouston / http://exocortex.com\r\n *\r\n * Creates an arrow for visualizing directions\r\n *\r\n * Parameters:\r\n *  dir - Vector3\r\n *  origin - Vector3\r\n *  length - Number\r\n *  color - color in hex value\r\n *  headLength - Number\r\n *  headWidth - Number\r\n */\r\n\r\nTHREE.ArrowHelper = ( function () {\r\n\r\n\tvar lineGeometry = new THREE.Geometry();\r\n\tlineGeometry.vertices.push( new THREE.Vector3( 0, 0, 0 ), new THREE.Vector3( 0, 1, 0 ) );\r\n\r\n\tvar coneGeometry = new THREE.CylinderGeometry( 0, 0.5, 1, 5, 1 );\r\n\tconeGeometry.translate( 0, - 0.5, 0 );\r\n\r\n\treturn function ArrowHelper( dir, origin, length, color, headLength, headWidth ) {\r\n\r\n\t\t// dir is assumed to be normalized\r\n\r\n\t\tTHREE.Object3D.call( this );\r\n\r\n\t\tif ( color === undefined ) color = 0xffff00;\r\n\t\tif ( length === undefined ) length = 1;\r\n\t\tif ( headLength === undefined ) headLength = 0.2 * length;\r\n\t\tif ( headWidth === undefined ) headWidth = 0.2 * headLength;\r\n\r\n\t\tthis.position.copy( origin );\r\n\t\t\r\n\t\tif ( headLength < length ) {\r\n\t\t\tthis.line = new THREE.Line( lineGeometry, new THREE.LineBasicMaterial( { color: color } ) );\r\n\t\t\tthis.line.matrixAutoUpdate = false;\r\n\t\t\tthis.add( this.line );\r\n\t\t}\r\n\r\n\t\tthis.cone = new THREE.Mesh( coneGeometry, new THREE.MeshBasicMaterial( { color: color } ) );\r\n\t\tthis.cone.matrixAutoUpdate = false;\r\n\t\tthis.add( this.cone );\r\n\r\n\t\tthis.setDirection( dir );\r\n\t\tthis.setLength( length, headLength, headWidth );\r\n\r\n\t}\r\n\r\n}() );\r\n\r\nTHREE.ArrowHelper.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.ArrowHelper.prototype.constructor = THREE.ArrowHelper;\r\n\r\nTHREE.ArrowHelper.prototype.setDirection = ( function () {\r\n\r\n\tvar axis = new THREE.Vector3();\r\n\tvar radians;\r\n\r\n\treturn function setDirection( dir ) {\r\n\r\n\t\t// dir is assumed to be normalized\r\n\r\n\t\tif ( dir.y > 0.99999 ) {\r\n\r\n\t\t\tthis.quaternion.set( 0, 0, 0, 1 );\r\n\r\n\t\t} else if ( dir.y < - 0.99999 ) {\r\n\r\n\t\t\tthis.quaternion.set( 1, 0, 0, 0 );\r\n\r\n\t\t} else {\r\n\r\n\t\t\taxis.set( dir.z, 0, - dir.x ).normalize();\r\n\r\n\t\t\tradians = Math.acos( dir.y );\r\n\r\n\t\t\tthis.quaternion.setFromAxisAngle( axis, radians );\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n}() );\r\n\r\nTHREE.ArrowHelper.prototype.setLength = function ( length, headLength, headWidth ) {\r\n\r\n\tif ( headLength === undefined ) headLength = 0.2 * length;\r\n\tif ( headWidth === undefined ) headWidth = 0.2 * headLength;\r\n\r\n\tif ( headLength < length ){\r\n\t\tthis.line.scale.set( 1, length - headLength, 1 );\r\n\t\tthis.line.updateMatrix();\r\n\t}\r\n\r\n\tthis.cone.scale.set( headWidth, headLength, headWidth );\r\n\tthis.cone.position.y = length;\r\n\tthis.cone.updateMatrix();\r\n\r\n};\r\n\r\nTHREE.ArrowHelper.prototype.setColor = function ( color ) {\r\n\r\n\tif ( this.line !== undefined ) this.line.material.color.set( color );\r\n\tthis.cone.material.color.set( color );\r\n\r\n};\r\n\r\n// File:src/extras/helpers/BoxHelper.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.BoxHelper = function ( object ) {\r\n\r\n\tvar indices = new Uint16Array( [ 0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7 ] );\r\n\tvar positions = new Float32Array( 8 * 3 );\r\n\r\n\tvar geometry = new THREE.BufferGeometry();\r\n\tgeometry.setIndex( new THREE.BufferAttribute( indices, 1 ) );\r\n\tgeometry.addAttribute( 'position', new THREE.BufferAttribute( positions, 3 ) );\r\n\r\n\tTHREE.LineSegments.call( this, geometry, new THREE.LineBasicMaterial( { color: 0xffff00 } ) );\r\n\r\n\tif ( object !== undefined ) {\r\n\r\n\t\tthis.update( object );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.BoxHelper.prototype = Object.create( THREE.LineSegments.prototype );\r\nTHREE.BoxHelper.prototype.constructor = THREE.BoxHelper;\r\n\r\nTHREE.BoxHelper.prototype.update = ( function () {\r\n\r\n\tvar box = new THREE.Box3();\r\n\r\n\treturn function ( object ) {\r\n\r\n\t\tbox.setFromObject( object );\r\n\r\n\t\tif ( box.empty() ) return;\r\n\r\n\t\tvar min = box.min;\r\n\t\tvar max = box.max;\r\n\r\n\t\t/*\r\n\t\t  5____4\r\n\t\t1/___0/|\r\n\t\t| 6__|_7\r\n\t\t2/___3/\r\n\r\n\t\t0: max.x, max.y, max.z\r\n\t\t1: min.x, max.y, max.z\r\n\t\t2: min.x, min.y, max.z\r\n\t\t3: max.x, min.y, max.z\r\n\t\t4: max.x, max.y, min.z\r\n\t\t5: min.x, max.y, min.z\r\n\t\t6: min.x, min.y, min.z\r\n\t\t7: max.x, min.y, min.z\r\n\t\t*/\r\n\r\n\t\tvar position = this.geometry.attributes.position;\r\n\t\tvar array = position.array;\r\n\r\n\t\tarray[  0 ] = max.x; array[  1 ] = max.y; array[  2 ] = max.z;\r\n\t\tarray[  3 ] = min.x; array[  4 ] = max.y; array[  5 ] = max.z;\r\n\t\tarray[  6 ] = min.x; array[  7 ] = min.y; array[  8 ] = max.z;\r\n\t\tarray[  9 ] = max.x; array[ 10 ] = min.y; array[ 11 ] = max.z;\r\n\t\tarray[ 12 ] = max.x; array[ 13 ] = max.y; array[ 14 ] = min.z;\r\n\t\tarray[ 15 ] = min.x; array[ 16 ] = max.y; array[ 17 ] = min.z;\r\n\t\tarray[ 18 ] = min.x; array[ 19 ] = min.y; array[ 20 ] = min.z;\r\n\t\tarray[ 21 ] = max.x; array[ 22 ] = min.y; array[ 23 ] = min.z;\r\n\r\n\t\tposition.needsUpdate = true;\r\n\r\n\t\tthis.geometry.computeBoundingSphere();\r\n\r\n\t}\r\n\r\n} )();\r\n\r\n// File:src/extras/helpers/BoundingBoxHelper.js\r\n\r\n/**\r\n * @author WestLangley / http://github.com/WestLangley\r\n */\r\n\r\n// a helper to show the world-axis-aligned bounding box for an object\r\n\r\nTHREE.BoundingBoxHelper = function ( object, hex ) {\r\n\r\n\tvar color = ( hex !== undefined ) ? hex : 0x888888;\r\n\r\n\tthis.object = object;\r\n\r\n\tthis.box = new THREE.Box3();\r\n\r\n\tTHREE.Mesh.call( this, new THREE.BoxGeometry( 1, 1, 1 ), new THREE.MeshBasicMaterial( { color: color, wireframe: true } ) );\r\n\r\n};\r\n\r\nTHREE.BoundingBoxHelper.prototype = Object.create( THREE.Mesh.prototype );\r\nTHREE.BoundingBoxHelper.prototype.constructor = THREE.BoundingBoxHelper;\r\n\r\nTHREE.BoundingBoxHelper.prototype.update = function () {\r\n\r\n\tthis.box.setFromObject( this.object );\r\n\r\n\tthis.box.size( this.scale );\r\n\r\n\tthis.box.center( this.position );\r\n\r\n};\r\n\r\n// File:src/extras/helpers/CameraHelper.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n *\r\n *\t- shows frustum, line of sight and up of the camera\r\n *\t- suitable for fast updates\r\n * \t- based on frustum visualization in lightgl.js shadowmap example\r\n *\t\thttp://evanw.github.com/lightgl.js/tests/shadowmap.html\r\n */\r\n\r\nTHREE.CameraHelper = function ( camera ) {\r\n\r\n\tvar geometry = new THREE.Geometry();\r\n\tvar material = new THREE.LineBasicMaterial( { color: 0xffffff, vertexColors: THREE.FaceColors } );\r\n\r\n\tvar pointMap = {};\r\n\r\n\t// colors\r\n\r\n\tvar hexFrustum = 0xffaa00;\r\n\tvar hexCone = 0xff0000;\r\n\tvar hexUp = 0x00aaff;\r\n\tvar hexTarget = 0xffffff;\r\n\tvar hexCross = 0x333333;\r\n\r\n\t// near\r\n\r\n\taddLine( \"n1\", \"n2\", hexFrustum );\r\n\taddLine( \"n2\", \"n4\", hexFrustum );\r\n\taddLine( \"n4\", \"n3\", hexFrustum );\r\n\taddLine( \"n3\", \"n1\", hexFrustum );\r\n\r\n\t// far\r\n\r\n\taddLine( \"f1\", \"f2\", hexFrustum );\r\n\taddLine( \"f2\", \"f4\", hexFrustum );\r\n\taddLine( \"f4\", \"f3\", hexFrustum );\r\n\taddLine( \"f3\", \"f1\", hexFrustum );\r\n\r\n\t// sides\r\n\r\n\taddLine( \"n1\", \"f1\", hexFrustum );\r\n\taddLine( \"n2\", \"f2\", hexFrustum );\r\n\taddLine( \"n3\", \"f3\", hexFrustum );\r\n\taddLine( \"n4\", \"f4\", hexFrustum );\r\n\r\n\t// cone\r\n\r\n\taddLine( \"p\", \"n1\", hexCone );\r\n\taddLine( \"p\", \"n2\", hexCone );\r\n\taddLine( \"p\", \"n3\", hexCone );\r\n\taddLine( \"p\", \"n4\", hexCone );\r\n\r\n\t// up\r\n\r\n\taddLine( \"u1\", \"u2\", hexUp );\r\n\taddLine( \"u2\", \"u3\", hexUp );\r\n\taddLine( \"u3\", \"u1\", hexUp );\r\n\r\n\t// target\r\n\r\n\taddLine( \"c\", \"t\", hexTarget );\r\n\taddLine( \"p\", \"c\", hexCross );\r\n\r\n\t// cross\r\n\r\n\taddLine( \"cn1\", \"cn2\", hexCross );\r\n\taddLine( \"cn3\", \"cn4\", hexCross );\r\n\r\n\taddLine( \"cf1\", \"cf2\", hexCross );\r\n\taddLine( \"cf3\", \"cf4\", hexCross );\r\n\r\n\tfunction addLine( a, b, hex ) {\r\n\r\n\t\taddPoint( a, hex );\r\n\t\taddPoint( b, hex );\r\n\r\n\t}\r\n\r\n\tfunction addPoint( id, hex ) {\r\n\r\n\t\tgeometry.vertices.push( new THREE.Vector3() );\r\n\t\tgeometry.colors.push( new THREE.Color( hex ) );\r\n\r\n\t\tif ( pointMap[ id ] === undefined ) {\r\n\r\n\t\t\tpointMap[ id ] = [];\r\n\r\n\t\t}\r\n\r\n\t\tpointMap[ id ].push( geometry.vertices.length - 1 );\r\n\r\n\t}\r\n\r\n\tTHREE.LineSegments.call( this, geometry, material );\r\n\r\n\tthis.camera = camera;\r\n\tthis.matrix = camera.matrixWorld;\r\n\tthis.matrixAutoUpdate = false;\r\n\r\n\tthis.pointMap = pointMap;\r\n\r\n\tthis.update();\r\n\r\n};\r\n\r\nTHREE.CameraHelper.prototype = Object.create( THREE.LineSegments.prototype );\r\nTHREE.CameraHelper.prototype.constructor = THREE.CameraHelper;\r\n\r\nTHREE.CameraHelper.prototype.update = function () {\r\n\r\n\tvar geometry, pointMap;\r\n\r\n\tvar vector = new THREE.Vector3();\r\n\tvar camera = new THREE.Camera();\r\n\r\n\tvar setPoint = function ( point, x, y, z ) {\r\n\r\n\t\tvector.set( x, y, z ).unproject( camera );\r\n\r\n\t\tvar points = pointMap[ point ];\r\n\r\n\t\tif ( points !== undefined ) {\r\n\r\n\t\t\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tgeometry.vertices[ points[ i ] ].copy( vector );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\treturn function () {\r\n\r\n\t\tgeometry = this.geometry;\r\n\t\tpointMap = this.pointMap;\r\n\r\n\t\tvar w = 1, h = 1;\r\n\r\n\t\t// we need just camera projection matrix\r\n\t\t// world matrix must be identity\r\n\r\n\t\tcamera.projectionMatrix.copy( this.camera.projectionMatrix );\r\n\r\n\t\t// center / target\r\n\r\n\t\tsetPoint( \"c\", 0, 0, - 1 );\r\n\t\tsetPoint( \"t\", 0, 0,  1 );\r\n\r\n\t\t// near\r\n\r\n\t\tsetPoint( \"n1\", - w, - h, - 1 );\r\n\t\tsetPoint( \"n2\",   w, - h, - 1 );\r\n\t\tsetPoint( \"n3\", - w,   h, - 1 );\r\n\t\tsetPoint( \"n4\",   w,   h, - 1 );\r\n\r\n\t\t// far\r\n\r\n\t\tsetPoint( \"f1\", - w, - h, 1 );\r\n\t\tsetPoint( \"f2\",   w, - h, 1 );\r\n\t\tsetPoint( \"f3\", - w,   h, 1 );\r\n\t\tsetPoint( \"f4\",   w,   h, 1 );\r\n\r\n\t\t// up\r\n\r\n\t\tsetPoint( \"u1\",   w * 0.7, h * 1.1, - 1 );\r\n\t\tsetPoint( \"u2\", - w * 0.7, h * 1.1, - 1 );\r\n\t\tsetPoint( \"u3\",         0, h * 2,   - 1 );\r\n\r\n\t\t// cross\r\n\r\n\t\tsetPoint( \"cf1\", - w,   0, 1 );\r\n\t\tsetPoint( \"cf2\",   w,   0, 1 );\r\n\t\tsetPoint( \"cf3\",   0, - h, 1 );\r\n\t\tsetPoint( \"cf4\",   0,   h, 1 );\r\n\r\n\t\tsetPoint( \"cn1\", - w,   0, - 1 );\r\n\t\tsetPoint( \"cn2\",   w,   0, - 1 );\r\n\t\tsetPoint( \"cn3\",   0, - h, - 1 );\r\n\t\tsetPoint( \"cn4\",   0,   h, - 1 );\r\n\r\n\t\tgeometry.verticesNeedUpdate = true;\r\n\r\n\t};\r\n\r\n}();\r\n\r\n// File:src/extras/helpers/DirectionalLightHelper.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author WestLangley / http://github.com/WestLangley\r\n */\r\n\r\nTHREE.DirectionalLightHelper = function ( light, size ) {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.light = light;\r\n\tthis.light.updateMatrixWorld();\r\n\r\n\tthis.matrix = light.matrixWorld;\r\n\tthis.matrixAutoUpdate = false;\r\n\r\n\tsize = size || 1;\r\n\r\n\tvar geometry = new THREE.Geometry();\r\n\tgeometry.vertices.push(\r\n\t\tnew THREE.Vector3( - size,   size, 0 ),\r\n\t\tnew THREE.Vector3(   size,   size, 0 ),\r\n\t\tnew THREE.Vector3(   size, - size, 0 ),\r\n\t\tnew THREE.Vector3( - size, - size, 0 ),\r\n\t\tnew THREE.Vector3( - size,   size, 0 )\r\n\t);\r\n\r\n\tvar material = new THREE.LineBasicMaterial( { fog: false } );\r\n\tmaterial.color.copy( this.light.color ).multiplyScalar( this.light.intensity );\r\n\r\n\tthis.lightPlane = new THREE.Line( geometry, material );\r\n\tthis.add( this.lightPlane );\r\n\r\n\tgeometry = new THREE.Geometry();\r\n\tgeometry.vertices.push(\r\n\t\tnew THREE.Vector3(),\r\n\t\tnew THREE.Vector3()\r\n\t);\r\n\r\n\tmaterial = new THREE.LineBasicMaterial( { fog: false } );\r\n\tmaterial.color.copy( this.light.color ).multiplyScalar( this.light.intensity );\r\n\r\n\tthis.targetLine = new THREE.Line( geometry, material );\r\n\tthis.add( this.targetLine );\r\n\r\n\tthis.update();\r\n\r\n};\r\n\r\nTHREE.DirectionalLightHelper.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.DirectionalLightHelper.prototype.constructor = THREE.DirectionalLightHelper;\r\n\r\nTHREE.DirectionalLightHelper.prototype.dispose = function () {\r\n\r\n\tthis.lightPlane.geometry.dispose();\r\n\tthis.lightPlane.material.dispose();\r\n\tthis.targetLine.geometry.dispose();\r\n\tthis.targetLine.material.dispose();\r\n\r\n};\r\n\r\nTHREE.DirectionalLightHelper.prototype.update = function () {\r\n\r\n\tvar v1 = new THREE.Vector3();\r\n\tvar v2 = new THREE.Vector3();\r\n\tvar v3 = new THREE.Vector3();\r\n\r\n\treturn function () {\r\n\r\n\t\tv1.setFromMatrixPosition( this.light.matrixWorld );\r\n\t\tv2.setFromMatrixPosition( this.light.target.matrixWorld );\r\n\t\tv3.subVectors( v2, v1 );\r\n\r\n\t\tthis.lightPlane.lookAt( v3 );\r\n\t\tthis.lightPlane.material.color.copy( this.light.color ).multiplyScalar( this.light.intensity );\r\n\r\n\t\tthis.targetLine.geometry.vertices[ 1 ].copy( v3 );\r\n\t\tthis.targetLine.geometry.verticesNeedUpdate = true;\r\n\t\tthis.targetLine.material.color.copy( this.lightPlane.material.color );\r\n\r\n\t};\r\n\r\n}();\r\n\r\n// File:src/extras/helpers/EdgesHelper.js\r\n\r\n/**\r\n * @author WestLangley / http://github.com/WestLangley\r\n * @param object THREE.Mesh whose geometry will be used\r\n * @param hex line color\r\n * @param thresholdAngle the minimum angle (in degrees),\r\n * between the face normals of adjacent faces,\r\n * that is required to render an edge. A value of 10 means\r\n * an edge is only rendered if the angle is at least 10 degrees.\r\n */\r\n\r\nTHREE.EdgesHelper = function ( object, hex, thresholdAngle ) {\r\n\r\n\tvar color = ( hex !== undefined ) ? hex : 0xffffff;\r\n\r\n\tTHREE.LineSegments.call( this, new THREE.EdgesGeometry( object.geometry, thresholdAngle ), new THREE.LineBasicMaterial( { color: color } ) );\r\n\r\n\tthis.matrix = object.matrixWorld;\r\n\tthis.matrixAutoUpdate = false;\r\n\r\n};\r\n\r\nTHREE.EdgesHelper.prototype = Object.create( THREE.LineSegments.prototype );\r\nTHREE.EdgesHelper.prototype.constructor = THREE.EdgesHelper;\r\n\r\n// File:src/extras/helpers/FaceNormalsHelper.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author WestLangley / http://github.com/WestLangley\r\n*/\r\n\r\nTHREE.FaceNormalsHelper = function ( object, size, hex, linewidth ) {\r\n\r\n\t// FaceNormalsHelper only supports THREE.Geometry\r\n\r\n\tthis.object = object;\r\n\r\n\tthis.size = ( size !== undefined ) ? size : 1;\r\n\r\n\tvar color = ( hex !== undefined ) ? hex : 0xffff00;\r\n\r\n\tvar width = ( linewidth !== undefined ) ? linewidth : 1;\r\n\r\n\t//\r\n\r\n\tvar nNormals = 0;\r\n\r\n\tvar objGeometry = this.object.geometry;\r\n\r\n\tif ( objGeometry instanceof THREE.Geometry ) {\r\n\r\n\t\tnNormals = objGeometry.faces.length;\r\n\r\n\t} else {\r\n\r\n\t\tconsole.warn( 'THREE.FaceNormalsHelper: only THREE.Geometry is supported. Use THREE.VertexNormalsHelper, instead.' );\r\n\r\n\t}\r\n\r\n\t//\r\n\r\n\tvar geometry = new THREE.BufferGeometry();\r\n\r\n\tvar positions = new THREE.Float32Attribute( nNormals * 2 * 3, 3 );\r\n\r\n\tgeometry.addAttribute( 'position', positions );\r\n\r\n\tTHREE.LineSegments.call( this, geometry, new THREE.LineBasicMaterial( { color: color, linewidth: width } ) );\r\n\r\n\t//\r\n\r\n\tthis.matrixAutoUpdate = false;\r\n\tthis.update();\r\n\r\n};\r\n\r\nTHREE.FaceNormalsHelper.prototype = Object.create( THREE.LineSegments.prototype );\r\nTHREE.FaceNormalsHelper.prototype.constructor = THREE.FaceNormalsHelper;\r\n\r\nTHREE.FaceNormalsHelper.prototype.update = ( function () {\r\n\r\n\tvar v1 = new THREE.Vector3();\r\n\tvar v2 = new THREE.Vector3();\r\n\tvar normalMatrix = new THREE.Matrix3();\r\n\r\n\treturn function update() {\r\n\r\n\t\tthis.object.updateMatrixWorld( true );\r\n\r\n\t\tnormalMatrix.getNormalMatrix( this.object.matrixWorld );\r\n\r\n\t\tvar matrixWorld = this.object.matrixWorld;\r\n\r\n\t\tvar position = this.geometry.attributes.position;\r\n\r\n\t\t//\r\n\r\n\t\tvar objGeometry = this.object.geometry;\r\n\r\n\t\tvar vertices = objGeometry.vertices;\r\n\r\n\t\tvar faces = objGeometry.faces;\r\n\r\n\t\tvar idx = 0;\r\n\r\n\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\r\n\r\n\t\t\tvar face = faces[ i ];\r\n\r\n\t\t\tvar normal = face.normal;\r\n\r\n\t\t\tv1.copy( vertices[ face.a ] )\r\n\t\t\t\t.add( vertices[ face.b ] )\r\n\t\t\t\t.add( vertices[ face.c ] )\r\n\t\t\t\t.divideScalar( 3 )\r\n\t\t\t\t.applyMatrix4( matrixWorld );\r\n\r\n\t\t\tv2.copy( normal ).applyMatrix3( normalMatrix ).normalize().multiplyScalar( this.size ).add( v1 );\r\n\r\n\t\t\tposition.setXYZ( idx, v1.x, v1.y, v1.z );\r\n\r\n\t\t\tidx = idx + 1;\r\n\r\n\t\t\tposition.setXYZ( idx, v2.x, v2.y, v2.z );\r\n\r\n\t\t\tidx = idx + 1;\r\n\r\n\t\t}\r\n\r\n\t\tposition.needsUpdate = true;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n}() );\r\n\r\n// File:src/extras/helpers/GridHelper.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.GridHelper = function ( size, step ) {\r\n\r\n\tvar geometry = new THREE.Geometry();\r\n\tvar material = new THREE.LineBasicMaterial( { vertexColors: THREE.VertexColors } );\r\n\r\n\tthis.color1 = new THREE.Color( 0x444444 );\r\n\tthis.color2 = new THREE.Color( 0x888888 );\r\n\r\n\tfor ( var i = - size; i <= size; i += step ) {\r\n\r\n\t\tgeometry.vertices.push(\r\n\t\t\tnew THREE.Vector3( - size, 0, i ), new THREE.Vector3( size, 0, i ),\r\n\t\t\tnew THREE.Vector3( i, 0, - size ), new THREE.Vector3( i, 0, size )\r\n\t\t);\r\n\r\n\t\tvar color = i === 0 ? this.color1 : this.color2;\r\n\r\n\t\tgeometry.colors.push( color, color, color, color );\r\n\r\n\t}\r\n\r\n\tTHREE.LineSegments.call( this, geometry, material );\r\n\r\n};\r\n\r\nTHREE.GridHelper.prototype = Object.create( THREE.LineSegments.prototype );\r\nTHREE.GridHelper.prototype.constructor = THREE.GridHelper;\r\n\r\nTHREE.GridHelper.prototype.setColors = function( colorCenterLine, colorGrid ) {\r\n\r\n\tthis.color1.set( colorCenterLine );\r\n\tthis.color2.set( colorGrid );\r\n\r\n\tthis.geometry.colorsNeedUpdate = true;\r\n\r\n};\r\n\r\n// File:src/extras/helpers/HemisphereLightHelper.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.HemisphereLightHelper = function ( light, sphereSize ) {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.light = light;\r\n\tthis.light.updateMatrixWorld();\r\n\r\n\tthis.matrix = light.matrixWorld;\r\n\tthis.matrixAutoUpdate = false;\r\n\r\n\tthis.colors = [ new THREE.Color(), new THREE.Color() ];\r\n\r\n\tvar geometry = new THREE.SphereGeometry( sphereSize, 4, 2 );\r\n\tgeometry.rotateX( - Math.PI / 2 );\r\n\r\n\tfor ( var i = 0, il = 8; i < il; i ++ ) {\r\n\r\n\t\tgeometry.faces[ i ].color = this.colors[ i < 4 ? 0 : 1 ];\r\n\r\n\t}\r\n\r\n\tvar material = new THREE.MeshBasicMaterial( { vertexColors: THREE.FaceColors, wireframe: true } );\r\n\r\n\tthis.lightSphere = new THREE.Mesh( geometry, material );\r\n\tthis.add( this.lightSphere );\r\n\r\n\tthis.update();\r\n\r\n};\r\n\r\nTHREE.HemisphereLightHelper.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.HemisphereLightHelper.prototype.constructor = THREE.HemisphereLightHelper;\r\n\r\nTHREE.HemisphereLightHelper.prototype.dispose = function () {\r\n\r\n\tthis.lightSphere.geometry.dispose();\r\n\tthis.lightSphere.material.dispose();\r\n\r\n};\r\n\r\nTHREE.HemisphereLightHelper.prototype.update = function () {\r\n\r\n\tvar vector = new THREE.Vector3();\r\n\r\n\treturn function () {\r\n\r\n\t\tthis.colors[ 0 ].copy( this.light.color ).multiplyScalar( this.light.intensity );\r\n\t\tthis.colors[ 1 ].copy( this.light.groundColor ).multiplyScalar( this.light.intensity );\r\n\r\n\t\tthis.lightSphere.lookAt( vector.setFromMatrixPosition( this.light.matrixWorld ).negate() );\r\n\t\tthis.lightSphere.geometry.colorsNeedUpdate = true;\r\n\r\n\t}\r\n\r\n}();\r\n\r\n// File:src/extras/helpers/PointLightHelper.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.PointLightHelper = function ( light, sphereSize ) {\r\n\r\n\tthis.light = light;\r\n\tthis.light.updateMatrixWorld();\r\n\r\n\tvar geometry = new THREE.SphereGeometry( sphereSize, 4, 2 );\r\n\tvar material = new THREE.MeshBasicMaterial( { wireframe: true, fog: false } );\r\n\tmaterial.color.copy( this.light.color ).multiplyScalar( this.light.intensity );\r\n\r\n\tTHREE.Mesh.call( this, geometry, material );\r\n\r\n\tthis.matrix = this.light.matrixWorld;\r\n\tthis.matrixAutoUpdate = false;\r\n\r\n\t/*\r\n\tvar distanceGeometry = new THREE.IcosahedronGeometry( 1, 2 );\r\n\tvar distanceMaterial = new THREE.MeshBasicMaterial( { color: hexColor, fog: false, wireframe: true, opacity: 0.1, transparent: true } );\r\n\r\n\tthis.lightSphere = new THREE.Mesh( bulbGeometry, bulbMaterial );\r\n\tthis.lightDistance = new THREE.Mesh( distanceGeometry, distanceMaterial );\r\n\r\n\tvar d = light.distance;\r\n\r\n\tif ( d === 0.0 ) {\r\n\r\n\t\tthis.lightDistance.visible = false;\r\n\r\n\t} else {\r\n\r\n\t\tthis.lightDistance.scale.set( d, d, d );\r\n\r\n\t}\r\n\r\n\tthis.add( this.lightDistance );\r\n\t*/\r\n\r\n};\r\n\r\nTHREE.PointLightHelper.prototype = Object.create( THREE.Mesh.prototype );\r\nTHREE.PointLightHelper.prototype.constructor = THREE.PointLightHelper;\r\n\r\nTHREE.PointLightHelper.prototype.dispose = function () {\r\n\r\n\tthis.geometry.dispose();\r\n\tthis.material.dispose();\r\n\r\n};\r\n\r\nTHREE.PointLightHelper.prototype.update = function () {\r\n\r\n\tthis.material.color.copy( this.light.color ).multiplyScalar( this.light.intensity );\r\n\r\n\t/*\r\n\tvar d = this.light.distance;\r\n\r\n\tif ( d === 0.0 ) {\r\n\r\n\t\tthis.lightDistance.visible = false;\r\n\r\n\t} else {\r\n\r\n\t\tthis.lightDistance.visible = true;\r\n\t\tthis.lightDistance.scale.set( d, d, d );\r\n\r\n\t}\r\n\t*/\r\n\r\n};\r\n\r\n// File:src/extras/helpers/SkeletonHelper.js\r\n\r\n/**\r\n * @author Sean Griffin / http://twitter.com/sgrif\r\n * @author Michael Guerrero / http://realitymeltdown.com\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author ikerr / http://verold.com\r\n */\r\n\r\nTHREE.SkeletonHelper = function ( object ) {\r\n\r\n\tthis.bones = this.getBoneList( object );\r\n\r\n\tvar geometry = new THREE.Geometry();\r\n\r\n\tfor ( var i = 0; i < this.bones.length; i ++ ) {\r\n\r\n\t\tvar bone = this.bones[ i ];\r\n\r\n\t\tif ( bone.parent instanceof THREE.Bone ) {\r\n\r\n\t\t\tgeometry.vertices.push( new THREE.Vector3() );\r\n\t\t\tgeometry.vertices.push( new THREE.Vector3() );\r\n\t\t\tgeometry.colors.push( new THREE.Color( 0, 0, 1 ) );\r\n\t\t\tgeometry.colors.push( new THREE.Color( 0, 1, 0 ) );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tgeometry.dynamic = true;\r\n\r\n\tvar material = new THREE.LineBasicMaterial( { vertexColors: THREE.VertexColors, depthTest: false, depthWrite: false, transparent: true } );\r\n\r\n\tTHREE.LineSegments.call( this, geometry, material );\r\n\r\n\tthis.root = object;\r\n\r\n\tthis.matrix = object.matrixWorld;\r\n\tthis.matrixAutoUpdate = false;\r\n\r\n\tthis.update();\r\n\r\n};\r\n\r\n\r\nTHREE.SkeletonHelper.prototype = Object.create( THREE.LineSegments.prototype );\r\nTHREE.SkeletonHelper.prototype.constructor = THREE.SkeletonHelper;\r\n\r\nTHREE.SkeletonHelper.prototype.getBoneList = function( object ) {\r\n\r\n\tvar boneList = [];\r\n\r\n\tif ( object instanceof THREE.Bone ) {\r\n\r\n\t\tboneList.push( object );\r\n\r\n\t}\r\n\r\n\tfor ( var i = 0; i < object.children.length; i ++ ) {\r\n\r\n\t\tboneList.push.apply( boneList, this.getBoneList( object.children[ i ] ) );\r\n\r\n\t}\r\n\r\n\treturn boneList;\r\n\r\n};\r\n\r\nTHREE.SkeletonHelper.prototype.update = function () {\r\n\r\n\tvar geometry = this.geometry;\r\n\r\n\tvar matrixWorldInv = new THREE.Matrix4().getInverse( this.root.matrixWorld );\r\n\r\n\tvar boneMatrix = new THREE.Matrix4();\r\n\r\n\tvar j = 0;\r\n\r\n\tfor ( var i = 0; i < this.bones.length; i ++ ) {\r\n\r\n\t\tvar bone = this.bones[ i ];\r\n\r\n\t\tif ( bone.parent instanceof THREE.Bone ) {\r\n\r\n\t\t\tboneMatrix.multiplyMatrices( matrixWorldInv, bone.matrixWorld );\r\n\t\t\tgeometry.vertices[ j ].setFromMatrixPosition( boneMatrix );\r\n\r\n\t\t\tboneMatrix.multiplyMatrices( matrixWorldInv, bone.parent.matrixWorld );\r\n\t\t\tgeometry.vertices[ j + 1 ].setFromMatrixPosition( boneMatrix );\r\n\r\n\t\t\tj += 2;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tgeometry.verticesNeedUpdate = true;\r\n\r\n\tgeometry.computeBoundingSphere();\r\n\r\n};\r\n\r\n// File:src/extras/helpers/SpotLightHelper.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author WestLangley / http://github.com/WestLangley\r\n*/\r\n\r\nTHREE.SpotLightHelper = function ( light ) {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.light = light;\r\n\tthis.light.updateMatrixWorld();\r\n\r\n\tthis.matrix = light.matrixWorld;\r\n\tthis.matrixAutoUpdate = false;\r\n\r\n\tvar geometry = new THREE.CylinderGeometry( 0, 1, 1, 8, 1, true );\r\n\r\n\tgeometry.translate( 0, - 0.5, 0 );\r\n\tgeometry.rotateX( - Math.PI / 2 );\r\n\r\n\tvar material = new THREE.MeshBasicMaterial( { wireframe: true, fog: false } );\r\n\r\n\tthis.cone = new THREE.Mesh( geometry, material );\r\n\tthis.add( this.cone );\r\n\r\n\tthis.update();\r\n\r\n};\r\n\r\nTHREE.SpotLightHelper.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.SpotLightHelper.prototype.constructor = THREE.SpotLightHelper;\r\n\r\nTHREE.SpotLightHelper.prototype.dispose = function () {\r\n\r\n\tthis.cone.geometry.dispose();\r\n\tthis.cone.material.dispose();\r\n\r\n};\r\n\r\nTHREE.SpotLightHelper.prototype.update = function () {\r\n\r\n\tvar vector = new THREE.Vector3();\r\n\tvar vector2 = new THREE.Vector3();\r\n\r\n\treturn function () {\r\n\r\n\t\tvar coneLength = this.light.distance ? this.light.distance : 10000;\r\n\t\tvar coneWidth = coneLength * Math.tan( this.light.angle );\r\n\r\n\t\tthis.cone.scale.set( coneWidth, coneWidth, coneLength );\r\n\r\n\t\tvector.setFromMatrixPosition( this.light.matrixWorld );\r\n\t\tvector2.setFromMatrixPosition( this.light.target.matrixWorld );\r\n\r\n\t\tthis.cone.lookAt( vector2.sub( vector ) );\r\n\r\n\t\tthis.cone.material.color.copy( this.light.color ).multiplyScalar( this.light.intensity );\r\n\r\n\t};\r\n\r\n}();\r\n\r\n// File:src/extras/helpers/VertexNormalsHelper.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author WestLangley / http://github.com/WestLangley\r\n*/\r\n\r\nTHREE.VertexNormalsHelper = function ( object, size, hex, linewidth ) {\r\n\r\n\tthis.object = object;\r\n\r\n\tthis.size = ( size !== undefined ) ? size : 1;\r\n\r\n\tvar color = ( hex !== undefined ) ? hex : 0xff0000;\r\n\r\n\tvar width = ( linewidth !== undefined ) ? linewidth : 1;\r\n\r\n\t//\r\n\r\n\tvar nNormals = 0;\r\n\r\n\tvar objGeometry = this.object.geometry;\r\n\r\n\tif ( objGeometry instanceof THREE.Geometry ) {\r\n\r\n\t\tnNormals = objGeometry.faces.length * 3;\r\n\r\n\t} else if ( objGeometry instanceof THREE.BufferGeometry ) {\r\n\r\n\t\tnNormals = objGeometry.attributes.normal.count\r\n\r\n\t}\r\n\r\n\t//\r\n\r\n\tvar geometry = new THREE.BufferGeometry();\r\n\r\n\tvar positions = new THREE.Float32Attribute( nNormals * 2 * 3, 3 );\r\n\r\n\tgeometry.addAttribute( 'position', positions );\r\n\r\n\tTHREE.LineSegments.call( this, geometry, new THREE.LineBasicMaterial( { color: color, linewidth: width } ) );\r\n\r\n\t//\r\n\r\n\tthis.matrixAutoUpdate = false;\r\n\r\n\tthis.update();\r\n\r\n};\r\n\r\nTHREE.VertexNormalsHelper.prototype = Object.create( THREE.LineSegments.prototype );\r\nTHREE.VertexNormalsHelper.prototype.constructor = THREE.VertexNormalsHelper;\r\n\r\nTHREE.VertexNormalsHelper.prototype.update = ( function () {\r\n\r\n\tvar v1 = new THREE.Vector3();\r\n\tvar v2 = new THREE.Vector3();\r\n\tvar normalMatrix = new THREE.Matrix3();\r\n\r\n\treturn function update() {\r\n\r\n\t\tvar keys = [ 'a', 'b', 'c' ];\r\n\r\n\t\tthis.object.updateMatrixWorld( true );\r\n\r\n\t\tnormalMatrix.getNormalMatrix( this.object.matrixWorld );\r\n\r\n\t\tvar matrixWorld = this.object.matrixWorld;\r\n\r\n\t\tvar position = this.geometry.attributes.position;\r\n\r\n\t\t//\r\n\r\n\t\tvar objGeometry = this.object.geometry;\r\n\r\n\t\tif ( objGeometry instanceof THREE.Geometry ) {\r\n\r\n\t\t\tvar vertices = objGeometry.vertices;\r\n\r\n\t\t\tvar faces = objGeometry.faces;\r\n\r\n\t\t\tvar idx = 0;\r\n\r\n\t\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tvar face = faces[ i ];\r\n\r\n\t\t\t\tfor ( var j = 0, jl = face.vertexNormals.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\t\tvar vertex = vertices[ face[ keys[ j ] ] ];\r\n\r\n\t\t\t\t\tvar normal = face.vertexNormals[ j ];\r\n\r\n\t\t\t\t\tv1.copy( vertex ).applyMatrix4( matrixWorld );\r\n\r\n\t\t\t\t\tv2.copy( normal ).applyMatrix3( normalMatrix ).normalize().multiplyScalar( this.size ).add( v1 );\r\n\r\n\t\t\t\t\tposition.setXYZ( idx, v1.x, v1.y, v1.z );\r\n\r\n\t\t\t\t\tidx = idx + 1;\r\n\r\n\t\t\t\t\tposition.setXYZ( idx, v2.x, v2.y, v2.z );\r\n\r\n\t\t\t\t\tidx = idx + 1;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( objGeometry instanceof THREE.BufferGeometry ) {\r\n\r\n\t\t\tvar objPos = objGeometry.attributes.position;\r\n\r\n\t\t\tvar objNorm = objGeometry.attributes.normal;\r\n\r\n\t\t\tvar idx = 0;\r\n\r\n\t\t\t// for simplicity, ignore index and drawcalls, and render every normal\r\n\r\n\t\t\tfor ( var j = 0, jl = objPos.count; j < jl; j ++ ) {\r\n\r\n\t\t\t\tv1.set( objPos.getX( j ), objPos.getY( j ), objPos.getZ( j ) ).applyMatrix4( matrixWorld );\r\n\r\n\t\t\t\tv2.set( objNorm.getX( j ), objNorm.getY( j ), objNorm.getZ( j ) );\r\n\r\n\t\t\t\tv2.applyMatrix3( normalMatrix ).normalize().multiplyScalar( this.size ).add( v1 );\r\n\r\n\t\t\t\tposition.setXYZ( idx, v1.x, v1.y, v1.z );\r\n\r\n\t\t\t\tidx = idx + 1;\r\n\r\n\t\t\t\tposition.setXYZ( idx, v2.x, v2.y, v2.z );\r\n\r\n\t\t\t\tidx = idx + 1;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tposition.needsUpdate = true;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n}() );\r\n\r\n// File:src/extras/helpers/WireframeHelper.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.WireframeHelper = function ( object, hex ) {\r\n\r\n\tvar color = ( hex !== undefined ) ? hex : 0xffffff;\r\n\r\n\tTHREE.LineSegments.call( this, new THREE.WireframeGeometry( object.geometry ), new THREE.LineBasicMaterial( { color: color } ) );\r\n\r\n\tthis.matrix = object.matrixWorld;\r\n\tthis.matrixAutoUpdate = false;\r\n\r\n};\r\n\r\nTHREE.WireframeHelper.prototype = Object.create( THREE.LineSegments.prototype );\r\nTHREE.WireframeHelper.prototype.constructor = THREE.WireframeHelper;\r\n\r\n// File:src/extras/objects/ImmediateRenderObject.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.ImmediateRenderObject = function () {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.render = function ( renderCallback ) {};\r\n\r\n};\r\n\r\nTHREE.ImmediateRenderObject.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.ImmediateRenderObject.prototype.constructor = THREE.ImmediateRenderObject;\r\n\r\n// File:src/extras/objects/MorphBlendMesh.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.MorphBlendMesh = function( geometry, material ) {\r\n\r\n\tTHREE.Mesh.call( this, geometry, material );\r\n\r\n\tthis.animationsMap = {};\r\n\tthis.animationsList = [];\r\n\r\n\t// prepare default animation\r\n\t// (all frames played together in 1 second)\r\n\r\n\tvar numFrames = this.geometry.morphTargets.length;\r\n\r\n\tvar name = \"__default\";\r\n\r\n\tvar startFrame = 0;\r\n\tvar endFrame = numFrames - 1;\r\n\r\n\tvar fps = numFrames / 1;\r\n\r\n\tthis.createAnimation( name, startFrame, endFrame, fps );\r\n\tthis.setAnimationWeight( name, 1 );\r\n\r\n};\r\n\r\nTHREE.MorphBlendMesh.prototype = Object.create( THREE.Mesh.prototype );\r\nTHREE.MorphBlendMesh.prototype.constructor = THREE.MorphBlendMesh;\r\n\r\nTHREE.MorphBlendMesh.prototype.createAnimation = function ( name, start, end, fps ) {\r\n\r\n\tvar animation = {\r\n\r\n\t\tstart: start,\r\n\t\tend: end,\r\n\r\n\t\tlength: end - start + 1,\r\n\r\n\t\tfps: fps,\r\n\t\tduration: ( end - start ) / fps,\r\n\r\n\t\tlastFrame: 0,\r\n\t\tcurrentFrame: 0,\r\n\r\n\t\tactive: false,\r\n\r\n\t\ttime: 0,\r\n\t\tdirection: 1,\r\n\t\tweight: 1,\r\n\r\n\t\tdirectionBackwards: false,\r\n\t\tmirroredLoop: false\r\n\r\n\t};\r\n\r\n\tthis.animationsMap[ name ] = animation;\r\n\tthis.animationsList.push( animation );\r\n\r\n};\r\n\r\nTHREE.MorphBlendMesh.prototype.autoCreateAnimations = function ( fps ) {\r\n\r\n\tvar pattern = /([a-z]+)_?(\\d+)/;\r\n\r\n\tvar firstAnimation, frameRanges = {};\r\n\r\n\tvar geometry = this.geometry;\r\n\r\n\tfor ( var i = 0, il = geometry.morphTargets.length; i < il; i ++ ) {\r\n\r\n\t\tvar morph = geometry.morphTargets[ i ];\r\n\t\tvar chunks = morph.name.match( pattern );\r\n\r\n\t\tif ( chunks && chunks.length > 1 ) {\r\n\r\n\t\t\tvar name = chunks[ 1 ];\r\n\r\n\t\t\tif ( ! frameRanges[ name ] ) frameRanges[ name ] = { start: Infinity, end: - Infinity };\r\n\r\n\t\t\tvar range = frameRanges[ name ];\r\n\r\n\t\t\tif ( i < range.start ) range.start = i;\r\n\t\t\tif ( i > range.end ) range.end = i;\r\n\r\n\t\t\tif ( ! firstAnimation ) firstAnimation = name;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfor ( var name in frameRanges ) {\r\n\r\n\t\tvar range = frameRanges[ name ];\r\n\t\tthis.createAnimation( name, range.start, range.end, fps );\r\n\r\n\t}\r\n\r\n\tthis.firstAnimation = firstAnimation;\r\n\r\n};\r\n\r\nTHREE.MorphBlendMesh.prototype.setAnimationDirectionForward = function ( name ) {\r\n\r\n\tvar animation = this.animationsMap[ name ];\r\n\r\n\tif ( animation ) {\r\n\r\n\t\tanimation.direction = 1;\r\n\t\tanimation.directionBackwards = false;\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.MorphBlendMesh.prototype.setAnimationDirectionBackward = function ( name ) {\r\n\r\n\tvar animation = this.animationsMap[ name ];\r\n\r\n\tif ( animation ) {\r\n\r\n\t\tanimation.direction = - 1;\r\n\t\tanimation.directionBackwards = true;\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.MorphBlendMesh.prototype.setAnimationFPS = function ( name, fps ) {\r\n\r\n\tvar animation = this.animationsMap[ name ];\r\n\r\n\tif ( animation ) {\r\n\r\n\t\tanimation.fps = fps;\r\n\t\tanimation.duration = ( animation.end - animation.start ) / animation.fps;\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.MorphBlendMesh.prototype.setAnimationDuration = function ( name, duration ) {\r\n\r\n\tvar animation = this.animationsMap[ name ];\r\n\r\n\tif ( animation ) {\r\n\r\n\t\tanimation.duration = duration;\r\n\t\tanimation.fps = ( animation.end - animation.start ) / animation.duration;\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.MorphBlendMesh.prototype.setAnimationWeight = function ( name, weight ) {\r\n\r\n\tvar animation = this.animationsMap[ name ];\r\n\r\n\tif ( animation ) {\r\n\r\n\t\tanimation.weight = weight;\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.MorphBlendMesh.prototype.setAnimationTime = function ( name, time ) {\r\n\r\n\tvar animation = this.animationsMap[ name ];\r\n\r\n\tif ( animation ) {\r\n\r\n\t\tanimation.time = time;\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.MorphBlendMesh.prototype.getAnimationTime = function ( name ) {\r\n\r\n\tvar time = 0;\r\n\r\n\tvar animation = this.animationsMap[ name ];\r\n\r\n\tif ( animation ) {\r\n\r\n\t\ttime = animation.time;\r\n\r\n\t}\r\n\r\n\treturn time;\r\n\r\n};\r\n\r\nTHREE.MorphBlendMesh.prototype.getAnimationDuration = function ( name ) {\r\n\r\n\tvar duration = - 1;\r\n\r\n\tvar animation = this.animationsMap[ name ];\r\n\r\n\tif ( animation ) {\r\n\r\n\t\tduration = animation.duration;\r\n\r\n\t}\r\n\r\n\treturn duration;\r\n\r\n};\r\n\r\nTHREE.MorphBlendMesh.prototype.playAnimation = function ( name ) {\r\n\r\n\tvar animation = this.animationsMap[ name ];\r\n\r\n\tif ( animation ) {\r\n\r\n\t\tanimation.time = 0;\r\n\t\tanimation.active = true;\r\n\r\n\t} else {\r\n\r\n\t\tconsole.warn( \"THREE.MorphBlendMesh: animation[\" + name + \"] undefined in .playAnimation()\" );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.MorphBlendMesh.prototype.stopAnimation = function ( name ) {\r\n\r\n\tvar animation = this.animationsMap[ name ];\r\n\r\n\tif ( animation ) {\r\n\r\n\t\tanimation.active = false;\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.MorphBlendMesh.prototype.update = function ( delta ) {\r\n\r\n\tfor ( var i = 0, il = this.animationsList.length; i < il; i ++ ) {\r\n\r\n\t\tvar animation = this.animationsList[ i ];\r\n\r\n\t\tif ( ! animation.active ) continue;\r\n\r\n\t\tvar frameTime = animation.duration / animation.length;\r\n\r\n\t\tanimation.time += animation.direction * delta;\r\n\r\n\t\tif ( animation.mirroredLoop ) {\r\n\r\n\t\t\tif ( animation.time > animation.duration || animation.time < 0 ) {\r\n\r\n\t\t\t\tanimation.direction *= - 1;\r\n\r\n\t\t\t\tif ( animation.time > animation.duration ) {\r\n\r\n\t\t\t\t\tanimation.time = animation.duration;\r\n\t\t\t\t\tanimation.directionBackwards = true;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( animation.time < 0 ) {\r\n\r\n\t\t\t\t\tanimation.time = 0;\r\n\t\t\t\t\tanimation.directionBackwards = false;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\tanimation.time = animation.time % animation.duration;\r\n\r\n\t\t\tif ( animation.time < 0 ) animation.time += animation.duration;\r\n\r\n\t\t}\r\n\r\n\t\tvar keyframe = animation.start + THREE.Math.clamp( Math.floor( animation.time / frameTime ), 0, animation.length - 1 );\r\n\t\tvar weight = animation.weight;\r\n\r\n\t\tif ( keyframe !== animation.currentFrame ) {\r\n\r\n\t\t\tthis.morphTargetInfluences[ animation.lastFrame ] = 0;\r\n\t\t\tthis.morphTargetInfluences[ animation.currentFrame ] = 1 * weight;\r\n\r\n\t\t\tthis.morphTargetInfluences[ keyframe ] = 0;\r\n\r\n\t\t\tanimation.lastFrame = animation.currentFrame;\r\n\t\t\tanimation.currentFrame = keyframe;\r\n\r\n\t\t}\r\n\r\n\t\tvar mix = ( animation.time % frameTime ) / frameTime;\r\n\r\n\t\tif ( animation.directionBackwards ) mix = 1 - mix;\r\n\r\n\t\tif ( animation.currentFrame !== animation.lastFrame ) {\r\n\r\n\t\t\tthis.morphTargetInfluences[ animation.currentFrame ] = mix * weight;\r\n\t\t\tthis.morphTargetInfluences[ animation.lastFrame ] = ( 1 - mix ) * weight;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.morphTargetInfluences[ animation.currentFrame ] = weight;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n};\r\n\r\n\r\n// Export the THREE object for **Node.js**, with\r\n// backwards-compatibility for the old `require()` API. If we're in\r\n// the browser, add `_` as a global object via a string identifier,\r\n// for Closure Compiler \"advanced\" mode.\r\nif (typeof exports !== 'undefined') {\r\n  if (typeof module !== 'undefined' && module.exports) {\r\n    exports = module.exports = THREE;\r\n  }\r\n  exports.THREE = THREE;\r\n} else {\r\n  this['THREE'] = THREE;\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/three/three.js\n// module id = 39\n// module chunks = 0"],"sourceRoot":""}